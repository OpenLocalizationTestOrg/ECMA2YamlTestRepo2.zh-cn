### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.ITaskFactory2
  id: ITaskFactory2
  children:
  - Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  langs:
  - csharp
  name: ITaskFactory2
  nameWithType: ITaskFactory2
  fullName: Microsoft.Build.Framework.ITaskFactory2
  type: Interface
  summary: "描述并扩展<xref href=&quot;Microsoft.Build.Framework.ITaskFactory&quot;></xref>任务工厂实例应实现的接口。"
  syntax:
    content: 'public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory'
  implements:
  - Microsoft.Build.Framework.ITaskFactory
  platform:
  - net462
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  id: CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Build.Framework.ITaskFactory2
  langs:
  - csharp
  name: CreateTask(IBuildEngine,IDictionary<String,String>)
  nameWithType: ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  fullName: Microsoft.Build.Framework.ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "创建要与一组可选的&quot;特殊&quot;参数集使用 MSBuildRuntime 和 MSBuildArchitecture 默认任务参数的单个任务调用上使用的任务实例。 MSBuild 提供了实现此接口，TaskHostFactory，使用值&quot;CLR2&quot;，&quot;CLR4&quot;，&quot;CurrentRuntime&quot;，使用&quot;MSBuildRuntime&quot;和&quot;*&quot;（的话）;和&quot;MSBuildArchitecture&quot;值&quot;x86&quot;、&quot;x64&quot;、&quot;CurrentArchitecture&quot;和&quot;\\*&quot;（任何）。 ITaskFactory2 的实现器可以选择使用这些预定义的 MSBuildRuntime 和 MSBuildArchitecture 值，或者可以指定这些参数的新值。"
  remarks: "如果任务工厂实现 ITaskFactory2，MSBuild 将调用此方法而不是 ITaskFactory.CreateTask。"
  syntax:
    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary<string,string> taskIdentityParameters);
    parameters:
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "任务工厂日志记录主机将记录任务的上下文中的消息。"
    - id: taskIdentityParameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "任务工厂可用于修改它执行任务，例如运行时和体系结构的方式的特殊参数。"
    return:
      type: Microsoft.Build.Framework.ITask
      description: "生成的任务，或`null`如果任务无法创建。"
  overload: Microsoft.Build.Framework.ITaskFactory2.CreateTask*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Framework.ITaskFactory2
  langs:
  - csharp
  name: Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Framework.ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "初始化此工厂，用于使用特定的内联任务块和一组 UsingTask 参数实例化的任务。 MSBuild 提供了实现此接口，TaskHostFactory，使用值&quot;CLR2&quot;，&quot;CLR4&quot;，&quot;CurrentRuntime&quot;，使用&quot;运行时&quot;和&quot;*&quot;（的话）;和&quot;体系结构&quot;，使用值&quot;x86&quot;、&quot;x64&quot;、&quot;CurrentArchitecture&quot;和&quot;\\*&quot;（任何）。 ITaskFactory2 的实现器可以选择使用这些预定义的运行时和体系结构值，或者可以指定这些参数的新值。"
  remarks: "MSBuild 引擎将调用此项可初始化工厂。 这应初始化工厂，以便可以询问任务名称可以创建由工厂的工厂。 如果任务工厂实现 ITaskFactory2，则将取代 ITaskFactory.Initialize 调用此初始化方法。       TaskFactoryLoggingHost 将记录该任务将首先使用的目标的上下文中的消息。"
  syntax:
    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,string> factoryIdentityParameters, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);
    parameters:
    - id: taskName
      type: System.String
      description: "任务的名称。"
    - id: factoryIdentityParameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "任务工厂可用于修改它执行任务，例如运行时和体系结构的方式的特殊参数。 密钥为参数的名称，值为参数的值。 这是设置了 UsingTask 使用例如 UsingTask 运行时和体系结构参数的参数集。"
    - id: parameterGroup
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
      description: "参数组中。"
    - id: taskBody
      type: System.String
      description: "任务正文中。"
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "任务工厂日志记录主机。"
    return:
      type: System.Boolean
      description: "一个值，该值指示是否初始化成功。"
  overload: Microsoft.Build.Framework.ITaskFactory2.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: CreateTask(IBuildEngine,IDictionary<String,String>)
  nameWithType: ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  fullName: Microsoft.Build.Framework.ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Framework.IBuildEngine
  parent: Microsoft.Build.Framework
  isExternal: false
  name: IBuildEngine
  nameWithType: IBuildEngine
  fullName: Microsoft.Build.Framework.IBuildEngine
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Framework.ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TaskPropertyInfo>
  nameWithType: IDictionary<String,TaskPropertyInfo>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Framework.TaskPropertyInfo
    name: TaskPropertyInfo
    nameWithType: TaskPropertyInfo
    fullName: TaskPropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask*
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: CreateTask
  nameWithType: ITaskFactory2.CreateTask
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize*
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: Initialize
  nameWithType: ITaskFactory2.Initialize
