### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest
  id: GenerateApplicationManifest
  children:
  - Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  - Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  - Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  - Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  - Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  - Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  - Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  - Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  langs:
  - csharp
  name: GenerateApplicationManifest
  nameWithType: GenerateApplicationManifest
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest
  type: Class
  summary: "实现`GenerateApplicationManifest`任务。 使用`GenerateApplicationManifest`要创建和执行此任务的项目文件中的元素。 有关用法和参数信息，请参阅[GenerateApplicationManifest 任务](~/add/includes/ajax-current-ext-md.md)。"
  remarks: "`EntryPoint` is an optional <xref:Microsoft.Build.Framework.ITaskItem>`[]` parameter that indicates the entry point for the generated manifest assembly. For a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] deployment manifest, this input specifies the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application manifest.  \n  \n In [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], the [GenerateApplicationManifest Task](../Topic/GenerateApplicationManifest%20Task.md) requires an `EntryPoint` when an application manifest is generated. (Assembly or native manifests do not require an `EntryPoint`.) This requirement is enforced by the build error \"MSB3185: EntryPoint not specified for manifest.\"  \n  \n In [!INCLUDE[vs_orcas_long](~/add/includes/vs-orcas-long-md.md)], [!INCLUDE[vstecmsbuild](~/add/includes/vstecmsbuild-md.md)] does not issue this error when the `EntryPoint` task parameter is not specified. Instead, the \\<customHostSpecified> tag is inserted as a child of the \\<entryPoint> tag, for example, as follows.  \n  \n```  \n<entryPoint xmlns=\"urn:schemas-   \n  microsoft-com:asm.v2\">  \n    <co.v1:customHostSpecified />  \n</entryPoint>  \n```  \n  \n You can add DLL dependencies to the application manifest by using the following steps:  \n  \n1.  Resolve the references in the assembly by using a call to <xref:Microsoft.Build.Tasks.ResolveAssemblyReference>.  \n  \n2.  Pass the output of the previous task and the assembly itself to <xref:Microsoft.Build.Tasks.ResolveManifestFiles>.  \n  \n3.  Pass the dependencies by using the `Dependencies` parameter to GenerateApplicationManifest."
  syntax:
    content: 'public sealed class GenerateApplicationManifest : Microsoft.Build.Tasks.GenerateManifestBase'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.GenerateManifestBase
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName
  - Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion
  - Microsoft.Build.Tasks.GenerateManifestBase.Description
  - Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint
  - Microsoft.Build.Tasks.GenerateManifestBase.Execute
  - Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.InputManifest
  - Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath
  - Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest
  - Microsoft.Build.Tasks.GenerateManifestBase.Platform
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion
  - Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: GenerateApplicationManifest()
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "初始化的新实例<xref href=&quot;Microsoft.Build.Tasks.GenerateApplicationManifest&quot;></xref>类。"
  syntax:
    content: public GenerateApplicationManifest ();
    parameters: []
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  id: ClrVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置的公共语言运行时 (CLR) 应用程序所需的最低版本。"
  remarks: "默认情况下，值是生成系统正在使用的 CLR 版本。 如果任务生成的本机清单，将忽略此属性。"
  syntax:
    content: public string ClrVersion { get; set; }
    return:
      type: System.String
      description: "应用程序所需的 CLR 的最低版本。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  id: ConfigFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置包含应用程序配置文件的任务项。"
  remarks: "如果任务生成的本机清单，将忽略此属性。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem ConfigFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "包含应用程序配置文件的任务项。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  id: Dependencies
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置定义为生成的清单的依赖程序集的集合的项列表。"
  remarks: "每个项可以的项元数据，以指示额外的部署状态和依赖项的类型来进一步描述。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Dependencies { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "依赖程序集名称的项列表。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  id: ErrorReportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置在 ClickOnce 安装期间在对话框框中显示的网页的 URL。"
  remarks: "指定在 ClickOnce 安装过程中显示的对话框中显示网页。"
  syntax:
    content: public string ErrorReportUrl { get; set; }
    return:
      type: System.String
      description: "一个字符串值，该值代表网页的 URL。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  id: FileAssociations
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置的一个或多个 ClickOnce 部署清单与关联的文件类型的列表。 文件关联时才仅有效[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]3.5 或更高版本为目标。"
  remarks: "File types can be custom. The following is an example of a [\\<fileAssociation> Element (ClickOnce Application)](../Topic/%3CfileAssociation%3E%20Element%20\\(ClickOnce%20Application\\).md):  \n  \n```  \n<FileAssociation Include=\".nyt\">  \n    <ProgId>NewYorkTimes.Document</ProgId>  \n    <DefaultIcon>nyt.ico</DefaultIcon>  \n    <Description>New York Times Reader document</Description>  \n</FileAssociation>  \n```"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] FileAssociations { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "与生成的清单关联的文件类型的列表。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  id: Files
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Files
  nameWithType: GenerateApplicationManifest.Files
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置要包括在清单中的文件的完整路径。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "在清单中包含的文件路径。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Files*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  id: GetObjectType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: GetObjectType()
  nameWithType: GenerateApplicationManifest.GetObjectType()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override Type GetObjectType ();
    parameters: []
    return:
      type: System.Type
      description: "要添加。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  id: HostInBrowser
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置是否 （如 WPF Web 浏览器应用程序） 在浏览器托管的应用程序。"
  remarks: "对于 WPF Web 浏览器应用程序以外的项目类型，设置 HostInBrowser 为`false`（默认值）。       在部署 WPF Web 浏览器应用程序时，你必须将 HostInBrowser 属性设置为`true`。 这将导致`<hostInBrowser>`标记要添加到生成的应用程序清单中，启用 ClickOnce 部署项目类型提供的浏览器承载的应用程序，其中包含.xbap 文件。       你还必须提供应用程序联机仅通过设置<xref:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install%2A>到`false`。</xref:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install%2A> 如果不满足此条件，你将收到[MSBuild 错误 MSB3116](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool HostInBrowser { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否将在浏览器承载要部署的应用程序 (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>)，或不 (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>)。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>仅适用于 WPF Web 浏览器应用程序。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  id: IconFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置应用程序的图标文件。"
  remarks: "应用程序图标表示在生成的应用程序清单中，并且用于**启动**菜单并在**卸载或更改程序**对话框。 如果未指定此输入，则使用默认图标。 如果任务生成的本机清单，将忽略此属性。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem IconFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "要使用该应用程序的图标文件。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  id: IsolatedComReferences
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置要在生成清单中隔离的 COM 组件。"
  remarks: "此属性，可以隔离&quot;免注册 COM&quot;部署的 COM 组件。 它通过自动生成具有标准 COM 注册定义一个清单适用。 必须在生成计算机上注册的 COM 组件。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] IsolatedComReferences { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "要在生成清单中隔离的 COM 组件。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  id: ManifestType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置要生成的清单类型。"
  remarks: "此属性可以具有以下值:- `Native`       -    `ClickOnce`如果未指定此属性，该任务将默认为`ClickOnce`。"
  syntax:
    content: public string ManifestType { get; set; }
    return:
      type: System.String
      description: "要生成的清单类型。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  id: OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OnManifestLoaded(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestLoaded(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Manifest)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool OnManifestLoaded (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);
    parameters:
    - id: manifest
      type: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  id: OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OnManifestResolved(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestResolved(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Manifest)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool OnManifestResolved (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);
    parameters:
    - id: manifest
      type: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  id: OSVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置是应用程序所需的最低操作系统 (OS) 版本。"
  remarks: "例如，值&quot;5.1.2600.0&quot;表示的操作系统是 Windows XP。 如果未指定此属性，使用&quot;4.10.0.0&quot;的值。 这指示 Windows 98 Second Edition，这是支持的最低操作系统[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。       如果任务生成本机清单，则忽略此输入。"
  syntax:
    content: public string OSVersion { get; set; }
    return:
      type: System.String
      description: "是应用程序所需的最低操作系统版本。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  id: Product
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Product
  nameWithType: GenerateApplicationManifest.Product
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "指定`ProductName`项目文件中的属性。"
  remarks: "此属性对应于`ProductName`项目文件中的属性。 默认值为 `null`。 如果`ProductName`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，注册表中的 RegisteredOrganization 值写入到应用程序清单。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> 如果 RegisteredOrganization 也为 null，则使用程序集名称。"
  syntax:
    content: public string Product { get; set; }
    return:
      type: System.String
      description: "一个字符串值，对应于`ProductName`项目文件中的属性。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Product*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  id: Publisher
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "指定`PublisherName`项目文件中的属性。"
  remarks: "此属性对应于`PublisherName`项目文件中的属性。 默认值为 `null`。 如果`PublisherName`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，程序集名称写入到应用程序清单。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>"
  syntax:
    content: public string Publisher { get; set; }
    return:
      type: System.String
      description: "一个字符串值，对应于`PublisherName`项目文件中的属性。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  id: RequiresMinimumFramework35SP1
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置是否应用程序需要.NET Framework 3.5 SP1。"
  syntax:
    content: public bool RequiresMinimumFramework35SP1 { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用程序需要.NET Framework 3.5 SP1;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>否则为。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  id: SuiteName
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置文件夹的名称上**启动**ClickOnce 部署后，应用程序的菜单。"
  syntax:
    content: public string SuiteName { get; set; }
    return:
      type: System.String
      description: "表示的名称的字符串**启动**菜单文件夹。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  id: SupportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "指定`SupportUrl`项目文件中的属性。"
  remarks: "此属性对应于`SupportUrl`项目文件中的属性。 默认值是**null**。 如果`SupportUrl`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，空字符串写入到应用程序清单。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>"
  syntax:
    content: public string SupportUrl { get; set; }
    return:
      type: System.String
      description: "一个字符串值，对应于`SupportUrl`项目文件中的属性。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  id: TargetFrameworkProfile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置目标框架配置文件。"
  syntax:
    content: public string TargetFrameworkProfile { get; set; }
    return:
      type: System.String
      description: "返回目标框架配置文件。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  id: TargetFrameworkSubset
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置的名称[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]到目标的子集。"
  syntax:
    content: public string TargetFrameworkSubset { get; set; }
    return:
      type: System.String
      description: "名称[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]子集。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  id: TrustInfoFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "获取或设置指定的应用程序安全性的 XML 文档。"
  remarks: "XML 文档中的根元素必须是 asm.v2 命名空间中的 trustInfo 节点。 如果任务生成的本机清单，将忽略此属性。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem TrustInfoFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "指定的应用程序安全性的 XML 文档。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  id: UseApplicationTrust
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "指定是否<> *1>， <> </> *1>，和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*>属性写入到应用程序清单。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*>"
  remarks: "<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product%2A>， <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher%2A>，和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl%2A>属性默认为`null`。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl%2A> </xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher%2A> </xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product%2A> 这些属性仅用于 UseApplicationTrust 是否`true`; 如果是，这些属性的值写入相应的标记中的应用程序清单。       如果 UseApplicationTrust `false` （默认值），这些属性会被忽略。"
  syntax:
    content: public bool UseApplicationTrust { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否<> *1>， <> </> *1>，和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*>属性写入到应用程序清单 (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>)。</xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*> 如果值为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，这些属性会被忽略。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  id: ValidateInputs
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ValidateInputs()
  nameWithType: GenerateApplicationManifest.ValidateInputs()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool ValidateInputs ();
    parameters: []
    return:
      type: System.Boolean
      description: "要添加。"
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.GenerateManifestBase
  isExternal: false
  name: Microsoft.Build.Tasks.GenerateManifestBase
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GenerateApplicationManifest()
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest()
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Files
  nameWithType: GenerateApplicationManifest.Files
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GetObjectType()
  nameWithType: GenerateApplicationManifest.GetObjectType()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestLoaded(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestLoaded(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Manifest)
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  isExternal: false
  name: Manifest
  nameWithType: Manifest
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestResolved(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestResolved(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Manifest)
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Product
  nameWithType: GenerateApplicationManifest.Product
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ValidateInputs()
  nameWithType: GenerateApplicationManifest.ValidateInputs()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs()
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GenerateApplicationManifest
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Files
  nameWithType: GenerateApplicationManifest.Files
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GetObjectType
  nameWithType: GenerateApplicationManifest.GetObjectType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestLoaded
  nameWithType: GenerateApplicationManifest.OnManifestLoaded
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestResolved
  nameWithType: GenerateApplicationManifest.OnManifestResolved
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Product
  nameWithType: GenerateApplicationManifest.Product
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ValidateInputs
  nameWithType: GenerateApplicationManifest.ValidateInputs
