### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityCredentialsManager
  id: SecurityCredentialsManager
  children:
  - System.ServiceModel.Security.SecurityCredentialsManager.#ctor
  - System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager
  langs:
  - csharp
  name: SecurityCredentialsManager
  nameWithType: SecurityCredentialsManager
  fullName: System.ServiceModel.Security.SecurityCredentialsManager
  type: Class
  summary: "指定<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>类，该类在实现后表示安全凭据管理器。"
  remarks: "此类是提供自定义安全令牌管理器的扩展性点[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]可用于自定义消息和传输安全。       SecurityCredentialsManager 是一个工厂，它创建从<xref:System.IdentityModel.Selectors.SecurityTokenManager>.</xref:System.IdentityModel.Selectors.SecurityTokenManager>派生的类的实例       <xref:System.ServiceModel.Description.ClientCredentials>并<xref:System.ServiceModel.Description.ServiceCredentials>实现此类。</xref:System.ServiceModel.Description.ServiceCredentials></xref:System.ServiceModel.Description.ClientCredentials>"
  syntax:
    content: public abstract class SecurityCredentialsManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityCredentialsManager.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  langs:
  - csharp
  name: SecurityCredentialsManager()
  nameWithType: SecurityCredentialsManager.SecurityCredentialsManager()
  fullName: System.ServiceModel.Security.SecurityCredentialsManager.SecurityCredentialsManager()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Security.SecurityCredentialsManager&quot;></xref>类。"
  syntax:
    content: protected SecurityCredentialsManager ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityCredentialsManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager
  id: CreateSecurityTokenManager
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  langs:
  - csharp
  name: CreateSecurityTokenManager()
  nameWithType: SecurityCredentialsManager.CreateSecurityTokenManager()
  fullName: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "当在派生类中重写，创建一个新<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref>。"
  remarks: "A<xref:System.IdentityModel.Selectors.SecurityTokenManager>由创建[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]为客户端的每个 ChannelFactory 和服务每个 ChannelListener/终结点。</xref:System.IdentityModel.Selectors.SecurityTokenManager>       使用派生自的类之一<xref:System.IdentityModel.Selectors.SecurityTokenManager>类在自定义安全令牌、 安全令牌身份验证或需要令牌提供程序的安全。</xref:System.IdentityModel.Selectors.SecurityTokenManager>"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();
    parameters: []
    return:
      type: System.IdentityModel.Selectors.SecurityTokenManager
      description: "新创建<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref>。"
  overload: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecurityCredentialsManager.#ctor
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  isExternal: false
  name: SecurityCredentialsManager()
  nameWithType: SecurityCredentialsManager.SecurityCredentialsManager()
  fullName: System.ServiceModel.Security.SecurityCredentialsManager.SecurityCredentialsManager()
- uid: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  isExternal: false
  name: CreateSecurityTokenManager()
  nameWithType: SecurityCredentialsManager.CreateSecurityTokenManager()
  fullName: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ServiceModel.Security.SecurityCredentialsManager.#ctor*
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  isExternal: false
  name: SecurityCredentialsManager
  nameWithType: SecurityCredentialsManager.SecurityCredentialsManager
- uid: System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager*
  parent: System.ServiceModel.Security.SecurityCredentialsManager
  isExternal: false
  name: CreateSecurityTokenManager
  nameWithType: SecurityCredentialsManager.CreateSecurityTokenManager
