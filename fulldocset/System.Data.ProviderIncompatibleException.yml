### YamlMime:ManagedReference
items:
- uid: System.Data.ProviderIncompatibleException
  id: ProviderIncompatibleException
  children:
  - System.Data.ProviderIncompatibleException.#ctor
  - System.Data.ProviderIncompatibleException.#ctor(System.String)
  - System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException
  fullName: System.Data.ProviderIncompatibleException
  type: Class
  summary: "当基础数据提供程序是与实体框架不兼容时引发的异常。"
  remarks: "有关如何处理代码中的异常的详细信息，请参阅<xref:System.Exception>。</xref:System.Exception>"
  syntax:
    content: 'public sealed class ProviderIncompatibleException : System.Data.EntityException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Data.DataException
  - System.Data.EntityException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.ProviderIncompatibleException.#ctor
  id: '#ctor'
  parent: System.Data.ProviderIncompatibleException
  langs:
  - csharp
  name: ProviderIncompatibleException()
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException()
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.ProviderIncompatibleException&quot;> </xref>。"
  remarks: "有关如何处理代码中的异常的详细信息，请参阅<xref:System.Exception>。</xref:System.Exception>"
  syntax:
    content: public ProviderIncompatibleException ();
    parameters: []
  overload: System.Data.ProviderIncompatibleException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ProviderIncompatibleException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.ProviderIncompatibleException
  langs:
  - csharp
  name: ProviderIncompatibleException(String)
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException(String)
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.ProviderIncompatibleException&quot;></xref>与指定的错误消息。"
  remarks: "有关如何处理代码中的异常的详细信息，请参阅<xref:System.Exception>。</xref:System.Exception>"
  syntax:
    content: public ProviderIncompatibleException (string message);
    parameters:
    - id: message
      type: System.String
      description: "描述错误的消息。"
  overload: System.Data.ProviderIncompatibleException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.ProviderIncompatibleException
  langs:
  - csharp
  name: ProviderIncompatibleException(String,Exception)
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException(String,Exception)
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.ProviderIncompatibleException&quot;> </xref> ，它使用指定的错误消息。"
  remarks: "有关如何处理代码中的异常的详细信息，请参阅<xref:System.Exception>。</xref:System.Exception>"
  syntax:
    content: public ProviderIncompatibleException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "描述错误的消息。"
    - id: innerException
      type: System.Exception
      description: "导致当前异常，则为 null 引用异常 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 如果未指定内部异常是。"
  overload: System.Data.ProviderIncompatibleException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.EntityException
  isExternal: false
  name: System.Data.EntityException
- uid: System.Data.ProviderIncompatibleException.#ctor
  parent: System.Data.ProviderIncompatibleException
  isExternal: false
  name: ProviderIncompatibleException()
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException()
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException()
- uid: System.Data.ProviderIncompatibleException.#ctor(System.String)
  parent: System.Data.ProviderIncompatibleException
  isExternal: false
  name: ProviderIncompatibleException(String)
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException(String)
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)
  parent: System.Data.ProviderIncompatibleException
  isExternal: false
  name: ProviderIncompatibleException(String,Exception)
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException(String,Exception)
  fullName: System.Data.ProviderIncompatibleException.ProviderIncompatibleException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.ProviderIncompatibleException.#ctor*
  parent: System.Data.ProviderIncompatibleException
  isExternal: false
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException.ProviderIncompatibleException
