### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  id: PrefixEndpointAddressMessageFilter
  children:
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  type: Class
  summary: "表示用于测试是否消息与 EndpointAddress 使用查询*最长前缀匹配*URI 组件。"
  remarks: "<xref:System.ServiceModel.EndpointAddress>对象包括一个 URI 和可选的寻址标头集合。</xref:System.ServiceModel.EndpointAddress> 寻址和消息标头进行规范化要比较相等。 如果参数显示将显示多个一次在<xref:System.ServiceModel.EndpointAddress>，相应的标头必须显示在消息中至少相同的次数。</xref:System.ServiceModel.EndpointAddress>       此筛选器执行相同的查询<xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>，只不过测试消息是否与终结点地址相匹配通过*最长前缀匹配*。</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> 这意味着指定筛选器中的 URI 不需要消息的 URI 完全匹配，但必须包含在该 URI 作为前缀。 例如，如果筛选器指定的地址&quot;www.foo.com&quot;，并且一条消息发送到&quot;www.foo.com/customerA&quot;，然后筛选器查询条件的 URI 部分将满足。 但是，筛选器查询的标头部分仍具有进行。       Internet 信息服务 (IIS) 和基础文件系统 （NTFS 或 FAT） 不区分大小写。 此类的 URI 比较也不区分大小写。 因此，例如，http://www.microsoft.com 计算结果为相等 http://WWW.microsoft.com。"
  syntax:
    content: 'public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>类。"
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>测试的消息。</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>类。"
  remarks: "如果在本地计算机上安装的 web 服务，有多种等效方法引用该对象，其中包括:-http://localhost/foo.svc-http://192.168.1.100/foo.svc-http://[my-machine-name]/foo.svc-http://[my-machine-name]。[my-company].com/foo.svc。       如果值`includeHostNameInComparison`参数是`false`，则以上 Uri 都解析为相同的终结点。"
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>测试的消息。</xref:System.ServiceModel.EndpointAddress>"
    - id: includeHostNameInComparison
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主机名称包含在终结点地址比较中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  id: Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "获取终结点地址<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>用以测试消息。"
  syntax:
    content: public System.ServiceModel.EndpointAddress Address { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>， <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref>用以测试消息。</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "要添加。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  id: IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "获取一个值，指示是否在终结点地址比较中包含的主机名。"
  remarks: "如果在本地计算机上安装的 web 服务，有多种等效方法引用该对象，其中包括:-http://localhost/foo.svc-http://192.168.1.100/foo.svc-http://[my-machine-name]/foo.svc-http://[my-machine-name]。[my-company].com/foo.svc。       此属性的默认值是`false`，因此除非你更改此属性，上面的 Uri 都解析为相同的终结点。"
  syntax:
    content: public bool IncludeHostNameInComparison { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主机名称包含在终结点地址比较中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "测试消息是否满足指定终结点地址。"
  remarks: "此方法的两个重载是等效的因为此筛选器不检查消息正文，仅为地址，执行最长前缀匹配项，然后标头。"
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>测试的对象</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.Channels.Message>对象满足筛选器; 中指定的终结点地址否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "测试缓冲的消息是否满足指定终结点地址。"
  remarks: "此方法的两个重载是等效的因为此筛选器不检查消息正文，仅为地址，执行最长前缀匹配项，然后标头。"
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "<xref:System.ServiceModel.Channels.MessageBuffer>测试的对象</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.Channels.MessageBuffer>对象满足终结点地址; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>messageBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match
  nameWithType: PrefixEndpointAddressMessageFilter.Match
