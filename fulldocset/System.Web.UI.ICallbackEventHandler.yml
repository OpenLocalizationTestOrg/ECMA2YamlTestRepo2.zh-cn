### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "用于指示控件可以作为目标的服务器上的回调事件。"
  remarks: "实现任何自定义控件，需要接收回调事件 ICallbackEventHandler 接口。 有关详细信息，请参阅[实现客户端回调而无需回发](~/add/includes/ajax-current-ext-md.md)。       实现 ICallbackEventHandler 接口的控件示例包括<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>控件。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 当回调事件实现 ICallbackEventHandler 接口，以控件为目标时<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>调用方法来处理该事件，作为参数传递的事件自变量和<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>方法会返回结果的回调。</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>       同步或异步，将在回调过程从数据源控件中检索数据的控件可以这样做。 ASP.NET 控件喜欢<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>以同步方式实现。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 同步回调不会阻止用户在浏览器中工作。 在同步模式下，还可以执行一次只有一个回调，最后一个回调优先。 当 Web 控件实现以支持异步行为时，可以同时引发多个回调。 有关异步编程的详细信息，请参阅[基于事件的异步模式 (EAP)](~/add/includes/ajax-current-ext-md.md)。       你可以指定是否验证来自由实现 ICallbackEventHandler 接口控件呈现的用户界面的回调事件。 验证事件是一种很好的安全做法。 但是，出于性能原因可以禁用它。 控制是否事件验证回调事件，请将设置`enableEventValidation`属性[@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指令或`enableEventValidation`属性[页元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458)的 Web.config 文件。 如果你设置<xref:System.Web.UI.Page.EnableEventValidation%2A>属性在代码中，将其设置`Page_Init`的页处理阶段。</xref:System.Web.UI.Page.EnableEventValidation%2A> 平衡与其性能成本的事件验证的安全优势的详细信息，请参阅[ASP.NET 性能概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回的结果以控件为目标的回调事件。"
  remarks: "中引发的异常<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>不会阻止 GetCallbackResult 调用并返回结果。</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 若要防止 GetCallbackResult 返回结果，设置一个标志中引发异常时<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>并从 GetCallbackResult 返回空字符串。</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回调的结果。"
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "处理控件为目标的回调事件。"
  remarks: "当`null`使用作为事件自变量参数，该字符串序列化为&quot;null&quot;，然后发送回服务器。 因为没有方法来区分`null`和&quot;null&quot;，则应避免使用`null`回调的自变量参数。       RaiseCallbackEvent 中引发的异常将不会阻止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>从调用并返回结果。</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 若要防止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>返回结果，设置一个标志 RaiseCallbackEvent 中引发异常时，并返回从<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>空字符串</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "一个字符串，表示要传递到事件处理程序的事件参数。"
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
