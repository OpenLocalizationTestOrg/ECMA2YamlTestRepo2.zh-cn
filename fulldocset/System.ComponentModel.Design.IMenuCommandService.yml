### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IMenuCommandService
  id: IMenuCommandService
  children:
  - System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  - System.ComponentModel.Design.IMenuCommandService.Verbs
  langs:
  - csharp
  name: IMenuCommandService
  nameWithType: IMenuCommandService
  fullName: System.ComponentModel.Design.IMenuCommandService
  type: Interface
  summary: "提供方法来管理的全局设计器谓词和菜单命令在设计模式下可用并显示某些类型的快捷菜单。"
  remarks: "此接口提供用于的方法:-查找、 调用、 添加和删除全局设计器谓词命令。      -查找、 调用、 添加和删除标准菜单命令。      -Alter 标准菜单命令与关联的事件处理程序。      -显示标准命令菜单<xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID>与该键关联的快捷菜单       设计器谓词表示在设计模式下的快捷菜单列出的自定义命令。 设计器谓词可以提供指定的文本标签。 每个设计器谓词会自动分配唯一的<xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> 设计器可以提供通过设计器谓词其<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>属性，但这些时才可用当前选择设计器的组件。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 全局设计器谓词是可以从而不考虑所选组件的设计模式快捷菜单访问的设计器谓词命令。 此接口允许你管理的一组在设计模式下可用的全局设计器谓词。       你可以添加全局设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法，并且你可以删除全局设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 你可以调用设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法如果你知道<xref:System.ComponentModel.Design.CommandID>的谓词。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>此接口的属性包含当前命令集的设计器谓词在快捷菜单中显示。</xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> 此设计器谓词命令集由所有全局设计器谓词和提供任何当前所选组件的设计器的所有设计器谓词组成。 每次选择或取消选择与设计器提供设计器谓词命令的组件，都会更新此的一组谓词。       菜单命令仅限于的预定义的标准命令集。 在中定义的大多数预定义的标准命令<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>枚举。</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands> 您可以添加、 删除和调用菜单命令和搜索已添加到使用此接口的方法的菜单的菜单命令。       你可以添加标准菜单命令使用<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法，并删除标准菜单命令使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 你可以将事件处理程序附加到预定义的标准菜单命令时，按照文档中详细介绍的过程<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 你可以检索通过菜单命令<xref:System.ComponentModel.Design.CommandID>如果添加到菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> </xref:System.ComponentModel.Design.CommandID> 你可以调用菜单命令或通过设计器谓词命令<xref:System.ComponentModel.Design.CommandID>使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> </xref:System.ComponentModel.Design.CommandID>      1> [!NOTE]&1;> 试图添加具有<xref:System.ComponentModel.Design.CommandID>将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.ComponentModel.Design.CommandID>现有的菜单命令 在添加菜单命令时，请务必检查，尚不菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用异常处理这样做是明智。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>      1> [!NOTE]&1;> 菜单命令可以添加到菜单上，并且具有其<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>或<xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>属性设置为`false`。</xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Visible%2A> 如果你以可视方式找不到已添加的菜单的菜单命令，这些属性之一可能已设置为`false`。       你可以显示包含在指定的位置使用的菜单命令某些标准的快捷菜单<xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> 此方法的文档包含一个表，列出指定有效的菜单显示的命令 Id。"
  example:
  - "This example demonstrates using the IMenuCommandService to add a <xref:System.ComponentModel.Design.MenuCommand>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/t-system.componentmodel._76_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/t-system.componentmodel._76_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IMenuCommandService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  id: AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "将指定的标准菜单命令添加到菜单。"
  remarks: "<xref:System.Windows.Forms.Design.MenuCommands>和<xref:System.ComponentModel.Design.StandardCommands>枚举包含<xref:System.ComponentModel.Design.CommandID>标识符的预定义的标准命令和已的菜单命令与特定菜单上的位置。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.StandardCommands> </xref:System.Windows.Forms.Design.MenuCommands>      1> [!NOTE]&1;> 试图添加具有<xref:System.ComponentModel.Design.CommandID>将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.ComponentModel.Design.CommandID>现有的菜单命令 在添加菜单命令时，请务必检查，尚不菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用异常处理这样做是明智。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>       你可以将事件处理程序附加到的预定义的菜单命令的以下过程︰ 1。  如果要链接与一个事件处理程序的菜单命令已添加到菜单中，或位于与<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，请考虑你是否想要更高版本，还原此菜单命令和是否想要调用从新的事件处理程序的当前事件处理程序。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> 如果菜单命令或链的事件处理程序调用，则可能会将恢复你的代码，请确保存储到某个位置的菜单命令的引用。      2.  确保任何先前存在的菜单命令具有相同<xref:System.ComponentModel.Design.CommandID>已从菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.CommandID>      3.  创建新的<xref:System.ComponentModel.Design.MenuCommand>，并指定事件处理程序中的构造函数，以及一个<xref:System.ComponentModel.Design.CommandID>表示添加命令</xref:System.ComponentModel.Design.CommandID></xref:System.ComponentModel.Design.MenuCommand> 每个标准菜单命令都与它添加到的预定义的菜单位置关联。 在中定义支持的命令 Id<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>枚举。</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands>      4.  如果你想要调用任何预先存在的事件处理程序的菜单命令，调用<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>具有替代的事件处理程序处理的调用事件的菜单命令的菜单上的菜单命令的方法。</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      5.  如果你有兴趣还原具有替代预先存在的菜单命令的事件处理程序，添加已存储的预先存在后删除你创建的替换菜单命令的菜单命令。 你可能想要添加此行为与`Dispose`为你的类型的方法。"
  syntax:
    content: public void AddCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "The <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>指定<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref>在菜单上已存在。"
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  id: AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "将指定的设计器谓词添加到的一组全局设计器谓词。"
  remarks: "提供设计器谓词的组件的设计器都应使用<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>其设计器，而无需调用此方法的属性。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 此方法将添加可以从在设计模式下，无论当前所选组件的右键单击快捷菜单中访问全局设计器谓词。"
  syntax:
    content: public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "The <xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  id: FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "搜索指定的命令 ID，并返回与它关联的菜单命令。"
  syntax:
    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>搜索。"
    return:
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>命令 ID，与关联或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何命令。"
  overload: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  id: GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "调用菜单或设计器谓词命令匹配指定的命令 id。"
  remarks: "此方法搜索的菜单命令或设计器谓词以<xref:System.ComponentModel.Design.CommandID>匹配的指定<xref:System.ComponentModel.Design.CommandID>。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.CommandID> 此方法首先搜索包含全局和活动提供设计器谓词，然后再继续搜索，如有必要，通过全局环境命令服务设计器谓词集合中。 如果找到了匹配的菜单命令或设计器谓词，则调用该命令。"
  syntax:
    content: public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>要搜索并执行的命令。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到并调用成功，则该命令否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "从菜单中删除指定的标准菜单命令。"
  remarks: "此方法中移除指定<xref:System.ComponentModel.Design.MenuCommand>如果找到它。</xref:System.ComponentModel.Design.MenuCommand> 此方法不会引发异常或返回一个值，如果指定<xref:System.ComponentModel.Design.MenuCommand>找不到。</xref:System.ComponentModel.Design.MenuCommand> 使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法来确定是否<xref:System.ComponentModel.Design.MenuCommand>匹配指定<xref:System.ComponentModel.Design.CommandID>位于菜单。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.MenuCommand> </xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>"
  syntax:
    content: public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>删除。"
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "从全局设计器谓词的集合中移除指定的设计器谓词。"
  remarks: "此方法将删除指定的全局设计器谓词，如果在全局设计器谓词集合中。 你可以将设计器谓词添加到全局设计器谓词的集合使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>"
  syntax:
    content: public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;> </xref>删除。"
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "显示指定的快捷菜单中的指定位置。"
  remarks: "ShowContextMenu 方法可以显示任何包含指定点处的菜单命令的以下 Visual Studio 快捷菜单: |菜单 |CommandID |  |----------|---------------|  |显示容器的快捷菜单 |<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  |为组件栏显示的快捷菜单 |<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  |选择的显示的快捷菜单 |<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  |为送纸器选择显示的快捷菜单 |<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|      此方法还可以显示其他已注册的快捷菜单。</xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu> </xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>"
  syntax:
    content: public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);
    parameters:
    - id: menuID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>快捷菜单，以显示。"
    - id: x
      type: System.Int32
      description: "在菜单中，显示在屏幕坐标中的 x 坐标。"
    - id: y
      type: System.Int32
      description: "在菜单中，显示在屏幕坐标中的 y 坐标。"
  overload: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  id: Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取当前可用的设计器谓词的集合。"
  remarks: "当前可用的设计器谓词在集包含的所有全局设计器谓词，通过添加<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法在此接口和单独的设计器谓词，提供上<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>具体设计器的属性。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 如果与设计器谓词的名称相冲突的全局谓词的名称，设计器提供的设计器谓词优先。"
  syntax:
    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }
    return:
      type: System.ComponentModel.Design.DesignerVerbCollection
      description: "A <xref href=&quot;System.ComponentModel.Design.DesignerVerbCollection&quot;> </xref> ，其中包含当前可用的设计器谓词。"
  overload: System.ComponentModel.Design.IMenuCommandService.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
- uid: System.ComponentModel.Design.MenuCommand
  parent: System.ComponentModel.Design
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
- uid: System.ComponentModel.Design.DesignerVerb
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerb
  nameWithType: DesignerVerb
  fullName: System.ComponentModel.Design.DesignerVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
- uid: System.ComponentModel.Design.DesignerVerbCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerbCollection
  nameWithType: DesignerVerbCollection
  fullName: System.ComponentModel.Design.DesignerVerbCollection
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand
  nameWithType: IMenuCommandService.AddCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb
  nameWithType: IMenuCommandService.AddVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand
  nameWithType: IMenuCommandService.FindCommand
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke
  nameWithType: IMenuCommandService.GlobalInvoke
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand
  nameWithType: IMenuCommandService.RemoveCommand
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb
  nameWithType: IMenuCommandService.RemoveVerb
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu
  nameWithType: IMenuCommandService.ShowContextMenu
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
