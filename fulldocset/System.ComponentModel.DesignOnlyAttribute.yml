### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DesignOnlyAttribute
  id: DesignOnlyAttribute
  children:
  - System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.DesignOnlyAttribute.Default
  - System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)
  - System.ComponentModel.DesignOnlyAttribute.GetHashCode
  - System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute
  - System.ComponentModel.DesignOnlyAttribute.IsDesignOnly
  - System.ComponentModel.DesignOnlyAttribute.No
  - System.ComponentModel.DesignOnlyAttribute.Yes
  langs:
  - csharp
  name: DesignOnlyAttribute
  nameWithType: DesignOnlyAttribute
  fullName: System.ComponentModel.DesignOnlyAttribute
  type: Class
  summary: "指定是否属性仅可以设置在设计时。"
  remarks: "成员标记为与设置为 DesignOnlyAttribute`true`可以仅在设计时设置。 通常情况下，这些属性仅在设计时存在，并且在运行时不对应于对象的实际属性。       无特性，或使用 DesignOnlyAttribute 标记的成员设置为`false`可以在运行时设置。 默认值是`false`。       具有 DesignOnlyAttribute 的属性设置为`true`了它的值序列化为.resx 文件而不是`InitializeComponent`方法。       有关详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a `GetLanguage` property. The property is marked with a DesignOnlyAttribute.  \n  \n [!code-cpp[Classic DesignOnlyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._68_1.cpp)]\n [!code-cs[Classic DesignOnlyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._68_1.cs)]\n [!code-vb[Classic DesignOnlyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._68_1.vb)]  \n  \n The next example gets the value of the DesignOnlyAttribute. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to find the `GetLanguage` property. Then it returns the attributes for this property and saves them in the attributes variable.  \n  \n The example then prints whether the property is design only by retrieving DesignOnlyAttribute from the <xref:System.ComponentModel.AttributeCollection>, and writing it to the console screen.  \n  \n [!code-cpp[Classic DesignOnlyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._68_2.cpp)]\n [!code-cs[Classic DesignOnlyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._68_2.cs)]\n [!code-vb[Classic DesignOnlyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._68_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class DesignOnlyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: DesignOnlyAttribute(Boolean)
  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)
  fullName: System.ComponentModel.DesignOnlyAttribute.DesignOnlyAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;></xref>类。"
  syntax:
    content: public DesignOnlyAttribute (bool isDesignOnly);
    parameters:
    - id: isDesignOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果某属性可以设置仅在设计时;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果在设计时和在运行时，可以设置该属性。"
  overload: System.ComponentModel.DesignOnlyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.Default
  id: Default
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: Default
  nameWithType: DesignOnlyAttribute.Default
  fullName: System.ComponentModel.DesignOnlyAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的默认值为<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>，即<xref href=&quot;System.ComponentModel.DesignOnlyAttribute.No&quot;> </xref>。 这<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>字段是只读的。"
  syntax:
    content: public static readonly System.ComponentModel.DesignOnlyAttribute Default;
    return:
      type: System.ComponentModel.DesignOnlyAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DesignOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignOnlyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回给定对象的值是否等于当前<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要测试的值相等性的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果给定的对象的值是否等于当前;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DesignOnlyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DesignOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignOnlyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.ComponentModel.DesignOnlyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: DesignOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定此属性是否为默认值。"
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是为该属性类; 默认值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly
  id: IsDesignOnly
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: IsDesignOnly
  nameWithType: DesignOnlyAttribute.IsDesignOnly
  fullName: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否可以仅在设计时设置一个属性。"
  syntax:
    content: public bool IsDesignOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果某属性可以设置仅在设计时;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.No
  id: No
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: No
  nameWithType: DesignOnlyAttribute.No
  fullName: System.ComponentModel.DesignOnlyAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定在设计时或在运行时，可以设置一个属性。 这<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>字段是只读的。"
  remarks: "无字段为此属性的默认设置。"
  syntax:
    content: public static readonly System.ComponentModel.DesignOnlyAttribute No;
    return:
      type: System.ComponentModel.DesignOnlyAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignOnlyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.DesignOnlyAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: DesignOnlyAttribute.Yes
  fullName: System.ComponentModel.DesignOnlyAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定仅在设计时，可以设置一个属性。 这<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>字段是只读的。"
  syntax:
    content: public static readonly System.ComponentModel.DesignOnlyAttribute Yes;
    return:
      type: System.ComponentModel.DesignOnlyAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: DesignOnlyAttribute(Boolean)
  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)
  fullName: System.ComponentModel.DesignOnlyAttribute.DesignOnlyAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DesignOnlyAttribute.Default
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: Default
  nameWithType: DesignOnlyAttribute.Default
  fullName: System.ComponentModel.DesignOnlyAttribute.Default
- uid: System.ComponentModel.DesignOnlyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: DesignOnlyAttribute
  nameWithType: DesignOnlyAttribute
  fullName: System.ComponentModel.DesignOnlyAttribute
- uid: System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: DesignOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignOnlyAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: DesignOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignOnlyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: DesignOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: IsDesignOnly
  nameWithType: DesignOnlyAttribute.IsDesignOnly
  fullName: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly
- uid: System.ComponentModel.DesignOnlyAttribute.No
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: No
  nameWithType: DesignOnlyAttribute.No
  fullName: System.ComponentModel.DesignOnlyAttribute.No
- uid: System.ComponentModel.DesignOnlyAttribute.Yes
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: Yes
  nameWithType: DesignOnlyAttribute.Yes
  fullName: System.ComponentModel.DesignOnlyAttribute.Yes
- uid: System.ComponentModel.DesignOnlyAttribute.#ctor*
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: DesignOnlyAttribute
  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute
- uid: System.ComponentModel.DesignOnlyAttribute.Equals*
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: Equals
  nameWithType: DesignOnlyAttribute.Equals
- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode*
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: DesignOnlyAttribute.GetHashCode
- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: DesignOnlyAttribute.IsDefaultAttribute
- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly*
  parent: System.ComponentModel.DesignOnlyAttribute
  isExternal: false
  name: IsDesignOnly
  nameWithType: DesignOnlyAttribute.IsDesignOnly
