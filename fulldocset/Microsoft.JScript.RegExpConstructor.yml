### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.RegExpConstructor
  id: RegExpConstructor
  children:
  - Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])
  - Microsoft.JScript.RegExpConstructor.index
  - Microsoft.JScript.RegExpConstructor.input
  - Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])
  - Microsoft.JScript.RegExpConstructor.lastIndex
  - Microsoft.JScript.RegExpConstructor.lastMatch
  - Microsoft.JScript.RegExpConstructor.lastParen
  - Microsoft.JScript.RegExpConstructor.leftContext
  - Microsoft.JScript.RegExpConstructor.rightContext
  langs:
  - csharp
  name: RegExpConstructor
  nameWithType: RegExpConstructor
  fullName: Microsoft.JScript.RegExpConstructor
  type: Class
  summary: "表示基于原型的对象定义的构造函数。 此类所属的内置对象模型类别。"
  syntax:
    content: 'public sealed class RegExpConstructor : Microsoft.JScript.ScriptFunction'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.ScriptFunction
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: Construct(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: Construct(String,Boolean,Boolean,Boolean)
  nameWithType: RegExpConstructor.Construct(String,Boolean,Boolean,Boolean)
  fullName: Microsoft.JScript.RegExpConstructor.Construct(String,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "创建一个新<xref href=&quot;Microsoft.JScript.RegExpObject&quot;></xref>指定正则表达式模式和标志的对象。"
  syntax:
    content: public object Construct (string pattern, bool ignoreCase, bool global, bool multiline);
    parameters:
    - id: pattern
      type: System.String
      description: "要匹配的正则表达式模式。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用不区分大小写匹配;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: global
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用全局匹配项，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: multiline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用多行匹配项，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "一个新<xref href=&quot;Microsoft.JScript.RegExpObject&quot;></xref>对象。"
  overload: Microsoft.JScript.RegExpConstructor.Construct*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: RegExpConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.RegExpConstructor.CreateInstance(Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "创建基于原型的对象，在指定的参数中传递的实例。"
  syntax:
    content: public Microsoft.JScript.RegExpObject CreateInstance (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: "要传递给构造函数的参数。"
    return:
      type: Microsoft.JScript.RegExpObject
      description: "对象的实例。"
  overload: Microsoft.JScript.RegExpConstructor.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.index
  id: index
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: index
  nameWithType: RegExpConstructor.index
  fullName: Microsoft.JScript.RegExpConstructor.index
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "前移索引之前获取的最后一个成功的匹配项的索引。"
  syntax:
    content: public object index { get; }
    return:
      type: System.Object
      description: "如果没有一个最后一个成功匹配的索引。"
  overload: Microsoft.JScript.RegExpConstructor.index*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.input
  id: input
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: input
  nameWithType: RegExpConstructor.input
  fullName: Microsoft.JScript.RegExpConstructor.input
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "获取或设置正则表达式搜索的输入的字符串。"
  syntax:
    content: public object input { get; set; }
    return:
      type: System.Object
      description: "正则表达式搜索输入的字符串。"
  overload: Microsoft.JScript.RegExpConstructor.input*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])
  id: Invoke(System.Object[])
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: Invoke(Object[])
  nameWithType: RegExpConstructor.Invoke(Object[])
  fullName: Microsoft.JScript.RegExpConstructor.Invoke(Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "创建基于原型的对象，在指定的参数中传递的实例。"
  syntax:
    content: public Microsoft.JScript.RegExpObject Invoke (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: "要传递给构造函数的参数。"
    return:
      type: Microsoft.JScript.RegExpObject
      description: "对象的实例。"
  overload: Microsoft.JScript.RegExpConstructor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.lastIndex
  id: lastIndex
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: lastIndex
  nameWithType: RegExpConstructor.lastIndex
  fullName: Microsoft.JScript.RegExpConstructor.lastIndex
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "前移索引后获取的最后一个成功的匹配项的索引。"
  syntax:
    content: public object lastIndex { get; }
    return:
      type: System.Object
      description: "如果没有一个最后一个成功匹配的索引。"
  overload: Microsoft.JScript.RegExpConstructor.lastIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.lastMatch
  id: lastMatch
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: lastMatch
  nameWithType: RegExpConstructor.lastMatch
  fullName: Microsoft.JScript.RegExpConstructor.lastMatch
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "获取最后一个成功匹配的字符串表示。"
  syntax:
    content: public object lastMatch { get; }
    return:
      type: System.Object
      description: "如果没有一个最后一个成功匹配的字符串表示形式。"
  overload: Microsoft.JScript.RegExpConstructor.lastMatch*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.lastParen
  id: lastParen
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: lastParen
  nameWithType: RegExpConstructor.lastParen
  fullName: Microsoft.JScript.RegExpConstructor.lastParen
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "获取最后<xref:System.Text.RegularExpressions.Group>从<xref:System.Text.RegularExpressions.Match.Groups*>的最后一个匹配项。</xref:System.Text.RegularExpressions.Match.Groups*> </xref:System.Text.RegularExpressions.Group>"
  syntax:
    content: public object lastParen { get; }
    return:
      type: System.Object
      description: "最后一个组，如果没有一个的字符串表示形式。"
  overload: Microsoft.JScript.RegExpConstructor.lastParen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.leftContext
  id: leftContext
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: leftContext
  nameWithType: RegExpConstructor.leftContext
  fullName: Microsoft.JScript.RegExpConstructor.leftContext
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "获取输入的开始和最后一个成功匹配的开头之间的输入字符串的子字符串。"
  syntax:
    content: public object leftContext { get; }
    return:
      type: System.Object
      description: "输入字符串，如果没有一个子字符串。"
  overload: Microsoft.JScript.RegExpConstructor.leftContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpConstructor.rightContext
  id: rightContext
  parent: Microsoft.JScript.RegExpConstructor
  langs:
  - csharp
  name: rightContext
  nameWithType: RegExpConstructor.rightContext
  fullName: Microsoft.JScript.RegExpConstructor.rightContext
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "获取最后一个成功匹配的开始和输入结尾之间的输入字符串的子字符串。"
  syntax:
    content: public object rightContext { get; }
    return:
      type: System.Object
      description: "输入字符串，如果没有一个子字符串。"
  overload: Microsoft.JScript.RegExpConstructor.rightContext*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Microsoft.JScript.ScriptFunction
- uid: Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: Construct(String,Boolean,Boolean,Boolean)
  nameWithType: RegExpConstructor.Construct(String,Boolean,Boolean,Boolean)
  fullName: Microsoft.JScript.RegExpConstructor.Construct(String,Boolean,Boolean,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: RegExpConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.RegExpConstructor.CreateInstance(Object[])
- uid: Microsoft.JScript.RegExpObject
  parent: Microsoft.JScript
  isExternal: false
  name: RegExpObject
  nameWithType: RegExpObject
  fullName: Microsoft.JScript.RegExpObject
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.RegExpConstructor.index
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: index
  nameWithType: RegExpConstructor.index
  fullName: Microsoft.JScript.RegExpConstructor.index
- uid: Microsoft.JScript.RegExpConstructor.input
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: input
  nameWithType: RegExpConstructor.input
  fullName: Microsoft.JScript.RegExpConstructor.input
- uid: Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: Invoke(Object[])
  nameWithType: RegExpConstructor.Invoke(Object[])
  fullName: Microsoft.JScript.RegExpConstructor.Invoke(Object[])
- uid: Microsoft.JScript.RegExpConstructor.lastIndex
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastIndex
  nameWithType: RegExpConstructor.lastIndex
  fullName: Microsoft.JScript.RegExpConstructor.lastIndex
- uid: Microsoft.JScript.RegExpConstructor.lastMatch
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastMatch
  nameWithType: RegExpConstructor.lastMatch
  fullName: Microsoft.JScript.RegExpConstructor.lastMatch
- uid: Microsoft.JScript.RegExpConstructor.lastParen
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastParen
  nameWithType: RegExpConstructor.lastParen
  fullName: Microsoft.JScript.RegExpConstructor.lastParen
- uid: Microsoft.JScript.RegExpConstructor.leftContext
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: leftContext
  nameWithType: RegExpConstructor.leftContext
  fullName: Microsoft.JScript.RegExpConstructor.leftContext
- uid: Microsoft.JScript.RegExpConstructor.rightContext
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: rightContext
  nameWithType: RegExpConstructor.rightContext
  fullName: Microsoft.JScript.RegExpConstructor.rightContext
- uid: Microsoft.JScript.RegExpConstructor.Construct*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: Construct
  nameWithType: RegExpConstructor.Construct
- uid: Microsoft.JScript.RegExpConstructor.CreateInstance*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: CreateInstance
  nameWithType: RegExpConstructor.CreateInstance
- uid: Microsoft.JScript.RegExpConstructor.index*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: index
  nameWithType: RegExpConstructor.index
- uid: Microsoft.JScript.RegExpConstructor.input*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: input
  nameWithType: RegExpConstructor.input
- uid: Microsoft.JScript.RegExpConstructor.Invoke*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: Invoke
  nameWithType: RegExpConstructor.Invoke
- uid: Microsoft.JScript.RegExpConstructor.lastIndex*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastIndex
  nameWithType: RegExpConstructor.lastIndex
- uid: Microsoft.JScript.RegExpConstructor.lastMatch*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastMatch
  nameWithType: RegExpConstructor.lastMatch
- uid: Microsoft.JScript.RegExpConstructor.lastParen*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: lastParen
  nameWithType: RegExpConstructor.lastParen
- uid: Microsoft.JScript.RegExpConstructor.leftContext*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: leftContext
  nameWithType: RegExpConstructor.leftContext
- uid: Microsoft.JScript.RegExpConstructor.rightContext*
  parent: Microsoft.JScript.RegExpConstructor
  isExternal: false
  name: rightContext
  nameWithType: RegExpConstructor.rightContext
