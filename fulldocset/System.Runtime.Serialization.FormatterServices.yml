### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.FormatterServices
  id: FormatterServices
  children:
  - System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  - System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  - System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  - System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  - System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  - System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  - System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  - System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  langs:
  - csharp
  name: FormatterServices
  nameWithType: FormatterServices
  fullName: System.Runtime.Serialization.FormatterServices
  type: Class
  summary: "提供静态方法，以协助实现<xref href=&quot;System.Runtime.Serialization.Formatter&quot;></xref>序列化。 此类不能被继承。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class FormatterServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  id: CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: CheckTypeSecurity(Type,TypeFilterLevel)
  nameWithType: FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  fullName: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "确定是否指定<xref:System.Type>可以反序列化与<xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;></xref>属性设置为<xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  remarks: "Use this method to determine whether a specified type can be deserialized when the <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> property is set to `Low`.  \n  \n .NET Framework remoting provides two levels of automatic deserialization, <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel>. <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality. The <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> deserialization level supports automatic deserialization of all types that remoting supports in all situations. For more information about the.NET Framework remoting types that <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> support, see [&#91;\\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)."
  example:
  - "This example shows how to use the <xref:System.Runtime.Serialization.FormatterServices> class to serialize or deserialize an object where the base class does not implement <xref:System.Runtime.Serialization.ISerializable> but the derived class does.  \n  \n [!code-cs[FormatterServices#1](~/add/codesnippet/csharp/5d6cca2d-3ebb-424b-bf84-_1.cs)]\n [!code-cpp[FormatterServices#1](~/add/codesnippet/cpp/5d6cca2d-3ebb-424b-bf84-_1.cpp)]"
  syntax:
    content: public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);
    parameters:
    - id: t
      type: System.Type
      description: "<xref:System.Type>检查反序列化的功能。</xref:System.Type>"
    - id: securityLevel
      type: System.Runtime.Serialization.Formatters.TypeFilterLevel
      description: "<xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;> </xref>属性值。"
  overload: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code> t </code>参数是一个高级的类型，不能为反序列化时<xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;></xref>属性设置为<xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  id: GetObjectData(System.Object,System.Reflection.MemberInfo[])
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetObjectData(Object,MemberInfo[])
  nameWithType: FormatterServices.GetObjectData(Object,MemberInfo[])
  fullName: System.Runtime.Serialization.FormatterServices.GetObjectData(Object,MemberInfo[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "从指定对象中提取数据并将其作为对象的数组返回。"
  remarks: "每个提供成员`members`数组 GetObjectData 方法提取与关联的值`obj`对象，并将其返回。 返回数组的长度是相同的长度`members`数组。"
  example:
  - "The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method. The code copies the instance data into an object array using the GetObjectData method. A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method. Finally, the data from the first instance is copied into the second instance using the <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> method.  \n  \n [!code-vb[FormatterServices_PopulateObjects#1](~/add/codesnippet/visualbasic/03e602a4-8dd1-4116-a11f-_1.vb)]\n [!code-cs[FormatterServices_PopulateObjects#1](~/add/codesnippet/csharp/03e602a4-8dd1-4116-a11f-_1.cs)]"
  syntax:
    content: public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);
    parameters:
    - id: obj
      type: System.Object
      description: "要写入的格式化程序的对象。"
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "要从对象中提取的成员。"
    return:
      type: System.Object[]
      description: "数组<xref:System.Object>包含数据存储在<code> members </code>和与关联<code> obj </code>。</xref:System.Object>"
  overload: System.Runtime.Serialization.FormatterServices.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> or <code>members</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       An element of <code>members</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "一个元素<code> members </code>不表示字段。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  id: GetSafeUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSafeUninitializedObject(Type)
  nameWithType: FormatterServices.GetSafeUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "创建指定的对象类型的新实例。"
  remarks: "因为对象的新实例初始化为零，并在运行任何构造函数，该对象可能不是由该对象被认为是有效的状态。 GetSafeUninitializedObject 应仅用于反序列化时用户想要立即填充所有字段。 它不创建未初始化的字符串，因为创建不可变类型的空实例没有任何用途。       GetSafeUninitializedObject 将转换的所有类级别[链接需求](~/add/includes/ajax-current-ext-md.md)到[需求](http://msdn.microsoft.com/en-us/e5283e28-2366-4519-b27d-ef5c1ddc1f48)以确保所有直接和间接调用方具有要求指定的权限。 使用 GetSafeUninitializedObject 从部分受信任的源反序列化时增加的安全级别。 对于在完全信任方案中更好的性能，使用<xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>.</xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>"
  syntax:
    content: public static object GetSafeUninitializedObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要创建的对象类型。"
    return:
      type: System.Object
      description: "指定类型的零的对象。"
  overload: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> type </code>参数不是有效的公共语言运行时类型。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  id: GetSerializableMembers(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSerializableMembers(Type)
  nameWithType: FormatterServices.GetSerializableMembers(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取指定<xref:System.Type>.</xref:System.Type>类可序列化的所有成员"
  remarks: "通常情况下，类的可序列化的成员是如字段和属性的非瞬态、 非静态成员。 要包含，属性必须具有 getter 和 setter。 一个类以实现<xref:System.Runtime.Serialization.ISerializable>接口或具有序列化代理项没有序列化所有这些成员，或者可以将其他成员序列化为。</xref:System.Runtime.Serialization.ISerializable>"
  example:
  - "The following code example demonstrates implementing the GetSerializableMembers method. This code example is part of a larger example provided for the <xref:System.Runtime.Serialization.FormatterServices> class.  \n  \n [!code-cs[FormatterServices#2](~/add/codesnippet/csharp/6022ed5f-9fa6-4107-b017-_1.cs)]\n [!code-cpp[FormatterServices#2](~/add/codesnippet/cpp/6022ed5f-9fa6-4107-b017-_1.cpp)]"
  syntax:
    content: public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "正在序列化的类型。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "类型的数组<xref:System.Reflection.MemberInfo>非暂时性、 非静态成员。</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  id: GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSerializableMembers(Type,StreamingContext)
  nameWithType: FormatterServices.GetSerializableMembers(Type,StreamingContext)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取指定的<xref:System.Type>和中提供的<xref:System.Runtime.Serialization.StreamingContext>。</xref:System.Runtime.Serialization.StreamingContext></xref:System.Type>类可序列化的所有成员"
  remarks: "通常情况下，类的可序列化的成员是如字段和属性的非瞬态、 非静态成员。 要包含，属性必须具有 getter 和 setter。 一个类以实现<xref:System.Runtime.Serialization.ISerializable>或具有序列化代理项没有序列化所有这些成员，或者可以将其他成员序列化为。</xref:System.Runtime.Serialization.ISerializable>       目前，不需要执行任何不同的操作，除非`context`具有<xref:System.Runtime.Serialization.StreamingContextStates>值<xref:System.Runtime.Serialization.StreamingContextStates>设置。</xref:System.Runtime.Serialization.StreamingContextStates> </xref:System.Runtime.Serialization.StreamingContextStates>"
  syntax:
    content: public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: type
      type: System.Type
      description: "正在序列化或克隆类型。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "发生序列化上下文。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "类型的数组<xref:System.Reflection.MemberInfo>非暂时性、 非静态成员。</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  id: GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSurrogateForCyclicalReference(ISerializationSurrogate)
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  fullName: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回指定的序列化代理项<xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;> </xref>。"
  syntax:
    content: public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);
    parameters:
    - id: innerSurrogate
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "指定代理项。"
    return:
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "An <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref> for the specified <code>innerSurrogate</code>."
  overload: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  id: GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetTypeFromAssembly(Assembly,String)
  nameWithType: FormatterServices.GetTypeFromAssembly(Assembly,String)
  fullName: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(Assembly,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "查找<xref:System.Type>指定的对象中提供的<xref:System.Reflection.Assembly>。</xref:System.Reflection.Assembly> </xref:System.Type>"
  syntax:
    content: public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);
    parameters:
    - id: assem
      type: System.Reflection.Assembly
      description: "你想要查找对象的程序集。"
    - id: name
      type: System.String
      description: "对象的名称。"
    return:
      type: System.Type
      description: "<xref:System.Type>的已命名的对象。</xref:System.Type>"
  overload: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>assem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  id: GetUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetUninitializedObject(Type)
  nameWithType: FormatterServices.GetUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "创建指定的对象类型的新实例。"
  remarks: "因为对象的新实例初始化为零，并在运行任何构造函数，该对象可能不是由该对象被认为是有效的状态。 当前方法应仅用于反序列化时用户想要立即填充所有字段。 它不创建未初始化的字符串，因为创建不可变类型的空实例没有任何用途。      1> [!NOTE]&1;> 不能使用 GetUninitializedObject 方法来创建实例的类型的派生<xref:System.ContextBoundObject>类。</xref:System.ContextBoundObject>"
  syntax:
    content: public static object GetUninitializedObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要创建的对象类型。"
    return:
      type: System.Object
      description: "指定类型的零的对象。"
  overload: System.Runtime.Serialization.FormatterServices.GetUninitializedObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  id: PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: PopulateObjectMembers(Object,MemberInfo[],Object[])
  nameWithType: FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  fullName: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将填充每个字段值取自对象的数据数组的指定的对象。"
  remarks: "如果中的某个元素`data`是`null`，PopulateObjectMembers 给该字段都不写入任何内容。"
  example:
  - "The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method. The code copies the instance data into an object array using the <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> method. A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method. Finally, the data from the first instance is copied into the second instance using the PopulateObjectMembers method.  \n  \n [!code-vb[FormatterServices_PopulateObjects#1](~/add/codesnippet/visualbasic/d13ec4e2-c43a-4a6e-bf79-_1.vb)]\n [!code-cs[FormatterServices_PopulateObjects#1](~/add/codesnippet/csharp/d13ec4e2-c43a-4a6e-bf79-_1.cs)]"
  syntax:
    content: public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);
    parameters:
    - id: obj
      type: System.Object
      description: "要填充的对象。"
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "数组<xref:System.Reflection.MemberInfo>描述的字段和属性，以填充。</xref:System.Reflection.MemberInfo>"
    - id: data
      type: System.Object[]
      description: "数组<xref:System.Object>，它指定每个字段和属性来填充的值。</xref:System.Object>"
    return:
      type: System.Object
      description: "新填充的对象。"
  overload: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code>, <code>members</code>, or <code>data</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       An element of <code>members</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "长度<code> members </code>与的长度不匹配<code> data </code>。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "一个元素<code> members </code>不<xref:System.Reflection.FieldInfo>.</xref:System.Reflection.FieldInfo>是实例"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: CheckTypeSecurity(Type,TypeFilterLevel)
  nameWithType: FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  fullName: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.Formatters.TypeFilterLevel
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: TypeFilterLevel
  nameWithType: TypeFilterLevel
  fullName: System.Runtime.Serialization.Formatters.TypeFilterLevel
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetObjectData(Object,MemberInfo[])
  nameWithType: FormatterServices.GetObjectData(Object,MemberInfo[])
  fullName: System.Runtime.Serialization.FormatterServices.GetObjectData(Object,MemberInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSafeUninitializedObject(Type)
  nameWithType: FormatterServices.GetSafeUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(Type)
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers(Type)
  nameWithType: FormatterServices.GetSerializableMembers(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type)
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers(Type,StreamingContext)
  nameWithType: FormatterServices.GetSerializableMembers(Type,StreamingContext)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSurrogateForCyclicalReference(ISerializationSurrogate)
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  fullName: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
- uid: System.Runtime.Serialization.ISerializationSurrogate
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializationSurrogate
  nameWithType: ISerializationSurrogate
  fullName: System.Runtime.Serialization.ISerializationSurrogate
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetTypeFromAssembly(Assembly,String)
  nameWithType: FormatterServices.GetTypeFromAssembly(Assembly,String)
  fullName: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(Assembly,String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetUninitializedObject(Type)
  nameWithType: FormatterServices.GetUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(Type)
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: PopulateObjectMembers(Object,MemberInfo[],Object[])
  nameWithType: FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  fullName: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: CheckTypeSecurity
  nameWithType: FormatterServices.CheckTypeSecurity
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetObjectData
  nameWithType: FormatterServices.GetObjectData
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSafeUninitializedObject
  nameWithType: FormatterServices.GetSafeUninitializedObject
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers
  nameWithType: FormatterServices.GetSerializableMembers
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSurrogateForCyclicalReference
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetTypeFromAssembly
  nameWithType: FormatterServices.GetTypeFromAssembly
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetUninitializedObject
  nameWithType: FormatterServices.GetUninitializedObject
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: PopulateObjectMembers
  nameWithType: FormatterServices.PopulateObjectMembers
