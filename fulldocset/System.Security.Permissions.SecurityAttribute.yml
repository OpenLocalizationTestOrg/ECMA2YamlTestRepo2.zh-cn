### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityAttribute
  id: SecurityAttribute
  children:
  - System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.CreatePermission
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  langs:
  - csharp
  name: SecurityAttribute
  nameWithType: SecurityAttribute
  fullName: System.Security.Permissions.SecurityAttribute
  type: Class
  summary: "指定从中声明性安全的基属性类<xref href=&quot;System.Security.Permissions.CodeAccessSecurityAttribute&quot;></xref>派生。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SecurityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: SecurityAttribute(SecurityAction)
  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.SecurityAttribute&quot;></xref>具有指定<xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>。"
  remarks: "无法创建此类的实例。 必须继承此类，以使其功能的使用。 值`action`用于设置<xref:System.Security.Permissions.SecurityAttribute.Action%2A>属性。</xref:System.Security.Permissions.SecurityAttribute.Action%2A>"
  syntax:
    content: protected SecurityAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "之一<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.SecurityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityAttribute.Action
  id: Action
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: System.Security.Permissions.SecurityAttribute.Action
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置安全性操作。"
  remarks: "此属性被继承的所有类，实现自定义属性的声明性安全。"
  example:
  - "The following code example demonstrates a typical permission that specifies a <xref:System.Security.Permissions.SecurityAction> value. This value will be used to set the Action property.  \n  \n [!code-cpp[Classic FileIOPermissionAttribute Example#1](~/add/codesnippet/cpp/p-system.security.permis_32_1.cpp)]\n [!code-vb[Classic FileIOPermissionAttribute Example#1](~/add/codesnippet/visualbasic/p-system.security.permis_32_1.vb)]\n [!code-cs[Classic FileIOPermissionAttribute Example#1](~/add/codesnippet/csharp/p-system.security.permis_32_1.cs)]"
  syntax:
    content: public System.Security.Permissions.SecurityAction Action { get; set; }
    return:
      type: System.Security.Permissions.SecurityAction
      description: "之一<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.SecurityAttribute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SecurityAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "当在派生类中重写，创建一个权限对象，随后可序列化为二进制形式并持久地存储以及<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>程序集的元数据中。"
  remarks: "在编译时，属性将安全声明转换为元数据中序列化形式。 从权限，此方法返回对应于此属性创建元数据中的声明性安全数据。"
  syntax:
    content: public abstract System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "一个可序列化权限对象。"
  overload: System.Security.Permissions.SecurityAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  id: Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否声明了完整 （无限制） 的属性所保护的资源权限。"
  remarks: "此属性被继承的所有类，实现自定义属性的声明性安全。"
  syntax:
    content: public bool Unrestricted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果声明了对受保护资源的完全权限;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.SecurityAttribute.Unrestricted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: SecurityAttribute(SecurityAction)
  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SecurityAttribute.Action
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: System.Security.Permissions.SecurityAttribute.Action
- uid: System.Security.Permissions.SecurityAttribute.CreatePermission
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SecurityAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SecurityAttribute.#ctor*
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: SecurityAttribute
  nameWithType: SecurityAttribute.SecurityAttribute
- uid: System.Security.Permissions.SecurityAttribute.Action*
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Action
  nameWithType: SecurityAttribute.Action
- uid: System.Security.Permissions.SecurityAttribute.CreatePermission*
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SecurityAttribute.CreatePermission
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted*
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
