### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.ServiceRoute
  id: ServiceRoute
  children:
  - System.ServiceModel.Activation.ServiceRoute.#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)
  langs:
  - csharp
  name: ServiceRoute
  nameWithType: ServiceRoute
  fullName: System.ServiceModel.Activation.ServiceRoute
  type: Class
  summary: "允许创建服务路由通过 HTTP 的 WCF 服务为支持无扩展名的基址。"
  remarks: '从<xref:System.Web.Routing.Route>.</xref:System.Web.Routing.Route>派生 ServiceRoute 当调用 ServiceRoute 构造函数时，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]将将相应的路由前缀 （url 模式） 和 （隐藏） 路由处理程序添加到 ASP.NET <xref:System.Web.Routing.RouteCollection>，并缓存到将来的服务激活的内部哈希表的相应的路由前缀、 服务主机工厂和服务类型信息。注意︰ 如果开发人员直接操作 ServiceRoute 已添加到集合的路由集合，更改可能不会向授予[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]。</xref:System.Web.Routing.RouteCollection> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]更改路由集合中的元素，请参阅<xref:System.Web.Routing.RouteCollection>。</xref:System.Web.Routing.RouteCollection> 建议开发人员在 global.asax 文件中定义所有 ServiceRoute 和不删除从 ServiceRoute<xref:System.Web.Routing.RouteCollection>动态。</xref:System.Web.Routing.RouteCollection>'
  syntax:
    content: 'public class ServiceRoute : System.Web.Routing.Route'
  inheritance:
  - System.Web.Routing.Route
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.ServiceRoute.#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)
  id: '#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)'
  parent: System.ServiceModel.Activation.ServiceRoute
  langs:
  - csharp
  name: ServiceRoute(String,ServiceHostFactoryBase,Type)
  nameWithType: ServiceRoute.ServiceRoute(String,ServiceHostFactoryBase,Type)
  fullName: System.ServiceModel.Activation.ServiceRoute.ServiceRoute(String,ServiceHostFactoryBase,Type)
  type: Constructor
  assemblies:
  - System.ServiceModel.Activation
  namespace: System.ServiceModel.Activation
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Activation.ServiceRoute&quot;></xref>使用指定的路由前缀、 服务主机工厂和服务类型的类。"
  syntax:
    content: public ServiceRoute (string routePrefix, System.ServiceModel.Activation.ServiceHostFactoryBase serviceHostFactory, Type serviceType);
    parameters:
    - id: routePrefix
      type: System.String
      description: "路由前缀。"
    - id: serviceHostFactory
      type: System.ServiceModel.Activation.ServiceHostFactoryBase
      description: "实例的<xref:System.ServiceModel.Activation.ServiceHostFactory>类。</xref:System.ServiceModel.Activation.ServiceHostFactory>"
    - id: serviceType
      type: System.Type
      description: "服务类型。"
  overload: System.ServiceModel.Activation.ServiceRoute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Routing.Route
  isExternal: false
  name: System.Web.Routing.Route
- uid: System.ServiceModel.Activation.ServiceRoute.#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)
  parent: System.ServiceModel.Activation.ServiceRoute
  isExternal: false
  name: ServiceRoute(String,ServiceHostFactoryBase,Type)
  nameWithType: ServiceRoute.ServiceRoute(String,ServiceHostFactoryBase,Type)
  fullName: System.ServiceModel.Activation.ServiceRoute.ServiceRoute(String,ServiceHostFactoryBase,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  parent: System.ServiceModel.Activation
  isExternal: false
  name: ServiceHostFactoryBase
  nameWithType: ServiceHostFactoryBase
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activation.ServiceRoute.#ctor*
  parent: System.ServiceModel.Activation.ServiceRoute
  isExternal: false
  name: ServiceRoute
  nameWithType: ServiceRoute.ServiceRoute
