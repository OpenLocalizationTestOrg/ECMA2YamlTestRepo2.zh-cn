### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WorkflowServiceHost
  id: WorkflowServiceHost
  children:
  - System.ServiceModel.WorkflowServiceHost.#ctor
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.WorkflowServiceHost.OnClosing
  langs:
  - csharp
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost
  fullName: System.ServiceModel.WorkflowServiceHost
  type: Class
  summary: "提供基于工作流服务主机。"
  remarks: "实现使用的主机[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]服务模型编程模型。       WorkflowServiceHost 类用于配置和公开工作流作为服务以使用客户端应用程序，当你未使用 Internet 信息服务 (IIS) 或 Windows 激活服务 (WAS) 公开服务。 IIS 和 WAS 均代表您的 WorkflowServiceHost 对象与进行交互。       若要公开工作流作为服务以供调用方，WCF 需要完整的服务说明 (由表示<xref:System.ServiceModel.Description.ServiceDescription>类)。</xref:System.ServiceModel.Description.ServiceDescription> WorkflowServiceHost 类创建<xref:System.ServiceModel.Description.ServiceDescription>从工作流服务类型和配置信息，然后使用该说明创建<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>描述中的每个终结点的对象。</xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.Description.ServiceDescription>       使用 WorkflowServiceHost 对象加载工作流服务、 配置终结点、 应用安全设置和启动侦听器来处理传入请求。"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类。"
  syntax:
    content: protected WorkflowServiceHost ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用字节流，其中包含工作流定义和指定的服务的基址。"
  remarks: "如果工作流定义存储在安全存储，如数据库，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含工作流定义。</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  id: '#ctor(System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用工作流定义和指定的服务的基址的路径。"
  remarks: "当工作流定义采用 windows 文件形式，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "包含工作流定义文件的路径的字符串。"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用工作流类型和指定的服务的基址。"
  remarks: "在工作流定义为已编译类型时，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (Type workflowType, Uri[] baseAddress);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>的工作流实例。</xref:System.Type>"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用包含工作流定义的字节流、 包含工作流的字节流规则定义和指定的服务的基址。"
  remarks: "当工作流定义和规则定义存储在安全存储，如数据库，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含工作流定义。</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含工作流规则定义。</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  id: '#ctor(System.String,System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用工作流定义的路径、 工作流规则定义和指定的服务基址的路径。"
  remarks: "当工作流定义和规则定义采用 windows 文件的格式，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "包含工作流定义文件的路径的字符串。"
    - id: ruleDefinitionPath
      type: System.String
      description: "包含工作流规则定义文件的路径的字符串。"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用包含工作流定义的字节流、 包含工作流的字节流规则定义的类型提供程序自定义活动类型，指定的服务的基址。"
  remarks: "当你已编译的工作流引用单独的程序集中定义的自定义类型时，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含工作流定义。</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含工作流规则定义。</xref:System.IO.Stream>"
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "类型提供程序实现<xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;></xref>接口。"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>类使用工作流定义的路径、 工作流规则定义的类型提供程序自定义活动类型，指定的服务的基址的路径。"
  remarks: "如果你的工作流标记文件 (.xoml) 中定义的工作流，并且它引用了在单独的程序集中定义的自定义类型，请使用此重载。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "包含工作流定义文件的路径的字符串。"
    - id: ruleDefinitionPath
      type: System.String
      description: "包含工作流规则定义文件的路径的字符串。"
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "类型提供程序实现<xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;></xref>接口。"
    - id: baseAddress
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "将添加使用指定的协定、 绑定和终结点地址的工作流服务的服务终结点。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>添加终结点的协定。</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>添加终结点。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "添加终结点地址。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>添加到工作流服务。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "工作流服务不实现<code> implementedContract </code>。"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "将服务终结点添加到工作流服务与指定的协定、 绑定和包含终结点地址的 URI。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>添加终结点的协定。</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>添加终结点。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>包含所添加终结点的地址。</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>添加到工作流服务。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "工作流服务不实现<code> implementedContract </code>。"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "将服务终结点添加到工作流服务与指定的协定、 绑定、 终结点地址和服务在其侦听的 URI。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>添加终结点的协定。</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>添加终结点。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "服务终结点地址。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>上的服务终结点可侦听。</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>添加到工作流服务。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>没有为指定<code> implementedContract </code>。</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "将服务终结点添加到工作流服务与指定的协定、 绑定、 包含终结点地址的 URI 和服务在其侦听的 URI。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>添加终结点的协定。</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>添加终结点。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>包含所添加终结点的地址。</xref:System.Uri>"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>上的服务终结点可侦听。</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>添加到工作流服务。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>没有为指定<code> implementedContract </code>。</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "创建工作流服务的说明。"
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "此方法返回时， &lt;xref:System.Collections.Generic.IDictionary%602&gt;对象包含的键控协定的托管服务已实现。"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>的工作流服务。"
  overload: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  id: OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "此方法之前调用<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>将进入正在关闭状态。"
  remarks: "在默认实现中，<xref:System.ServiceModel.WorkflowServiceHost>调用<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>在调用<xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>.</xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>之前</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A></xref:System.ServiceModel.WorkflowServiceHost> 这意味着服务主机关闭前，工作流运行时将关闭。"
  syntax:
    content: protected override void OnClosing ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.OnClosing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
- uid: System.Workflow.ComponentModel.Compiler.ITypeProvider
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: ITypeProvider
  nameWithType: ITypeProvider
  fullName: System.Workflow.ComponentModel.Compiler.ITypeProvider
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost.WorkflowServiceHost
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: WorkflowServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: WorkflowServiceHost.CreateDescription
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing
  nameWithType: WorkflowServiceHost.OnClosing
