### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  id: SqlUserDefinedTypeAttribute
  children:
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  type: Class
  summary: "用于将标记在为 SQL Server 中的用户定义类型 (UDT) 的程序集中的类型定义。 在特性上的属性反映在该类型注册使用 SQL Server 时使用的物理特征。 此类不能被继承。"
  remarks: "SQL Server 创建绑定到具有 SqlUserDefinedTypeAttribute 自定义属性的类型定义的用户定义的类型。 每个 UDT 必须使用此属性批注过。 请参阅[clr 用户定义类型](http://go.microsoft.com/fwlink/?LinkId=128028)有关 Udt 的详细信息，包括 UDT 的示例。"
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_4_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]

      public sealed class SqlUserDefinedTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  id: '#ctor(Microsoft.SqlServer.Server.Format)'
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "必需的特性上的用户定义的类型 (UDT)，用于确认给定的类型是 UDT 并指示用户定义的类型的存储格式。"
  remarks: "下面的示例指定`Format`的用户定义类型`SerializedDataWithMetadata`和`MaxByteSize`为 8000 个字节。"
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#12](~/add/codesnippet/csharp/CS/Type1.cs#12)]
     [!code-vb[VbRaddataSQLObjects#12](~/add/codesnippet/visualbasic/VB/Type1.vb#12)]
  syntax:
    content: public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);
    parameters:
    - id: format
      type: Microsoft.SqlServer.Server.Format
      description: "之一<xref href=&quot;Microsoft.SqlServer.Server.Format&quot;></xref>表示类型的序列化格式的值。"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  id: Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "序列化格式为<xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref>。"
  syntax:
    content: public Microsoft.SqlServer.Server.Format Format { get; }
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref>值，该值表示序列化格式。"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  id: IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "指示用户定义的类型是否为字节进行排序。"
  remarks: "When set to `true`, the IsByteOrdered property in effect guarantees that the serialized binary data can be used for semantic ordering of the information. Thus, each instance of a byte-ordered UDT object can only have one serialized representation. When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..  \n  \n The following features are supported when IsByteOrdered is set to `true`:  \n  \n-   The ability to create indexes on columns of this type.  \n  \n-   The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.  \n  \n-   The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses. In these cases, the binary representation of the type is used to determine the order.  \n  \n-   The ability to use comparison operators in Transact-SQL statements.  \n  \n-   The ability to persist computed columns of this type.  \n  \n Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when IsByteOrdered is set to `true`:  \n  \n-   Equal to (=)  \n  \n-   Not equal to (!=)  \n  \n-   Greater than (>)  \n  \n-   Less than (\\<)  \n  \n-   Greater than or equal to (>=)  \n  \n-   Less than or equal to (<=)"
  syntax:
    content: public bool IsByteOrdered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户定义的类型是字节进行排序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  id: IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "指示此用户定义类型的所有实例都是否具有相同的长度。"
  remarks: "如果设置为`true`，Udt 对应于此公共语言运行时 (CLR) 类型的所有实例必须都具有长度以字节为单位完全等于<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 此属性才是相关与 Udt 的`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public bool IsFixedLength { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此类型的所有实例都都具有相同的长度;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  id: MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "实例，以字节为单位的最大大小。"
  remarks: "必须指定了 MaxByteSize 属性与`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>       当连接到 SQL Server 2005 或更早版本，MaxByteSize 必须介于 1 和 8000 之间。       当连接到 SQL Server 2008 或更高版本，介于 1 和 8000 之间设置 MaxByteSize 类型其实例始终为 8000 个字节或更小。 对于可以具有大于 8000 实例的类型，指定-1。       对于与指定的用户定义的序列化 UDT 中,，MaxByteSize 是指在其序列化的窗体中 UDT 的总大小由用户定义。 考虑这样一个 UDT 属性值为 10 个字符的字符串 (<xref:System.Char>)。</xref:System.Char> 用户定义的类型使用序列化时<xref:System.IO.BinaryWriter>、 序列化的字符串的总大小是每个 Unicode utf-16 字符，最大字符数的乘积 22 字节︰ 2 字节以及 2 控件个字节的开销产生从序列化二进制流。</xref:System.IO.BinaryWriter> 因此，在确定 MaxByteSize 的值时，序列化的 UDT 的总大小必须考虑︰ 的大小以二进制格式序列化的数据加上序列化所需的开销。       此属性不应该用于`Native`序列化<xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public int MaxByteSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>值，该值表示实例的最大大小。</xref:System.Int32>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "用户定义类型的 SQL Server 名称。"
  remarks: "Name 属性不使用 SQL Server 中，但使用通过 Microsoft Visual Studio.NET 集成开发环境 (IDE)。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>值，该值表示用户定义类型的 SQL Server 名称。</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  id: ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "用于验证用户定义类型的实例方法的名称。"
  remarks: "从二进制值不受信任反序列化用户定义的类型之后，通过此属性指定的方法验证 UDT 的实例。"
  syntax:
    content: public string ValidationMethodName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>表示用于验证用户定义类型的实例方法的名称。</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
