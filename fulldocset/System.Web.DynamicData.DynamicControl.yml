### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicControl
  id: DynamicControl
  children:
  - System.Web.DynamicData.DynamicControl.#ctor
  - System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicControl.Column
  - System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicControl.CssClass
  - System.Web.DynamicData.DynamicControl.DataField
  - System.Web.DynamicData.DynamicControl.DataFormatString
  - System.Web.DynamicData.DynamicControl.FieldTemplate
  - System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicControl.HtmlEncode
  - System.Web.DynamicData.DynamicControl.Mode
  - System.Web.DynamicData.DynamicControl.NullDisplayText
  - System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  - System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  - System.Web.DynamicData.DynamicControl.Table
  - System.Web.DynamicData.DynamicControl.UIHint
  - System.Web.DynamicData.DynamicControl.ValidationGroup
  langs:
  - csharp
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
  type: Class
  summary: "显示为在模板化数据绑定控件中，使用 ASP.NET 动态数据功能的该字段定义的内容。"
  remarks: "本主题中:-[简介](#introduction)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 DynamicControl 控件使用由模板化数据绑定控件，如<xref:System.Web.UI.WebControls.FormView>或<xref:System.Web.UI.WebControls.ListView>，以显示在自定义页中使用 ASP.NET 动态数据功能的数据字段。</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.FormView>       你还可以使用中的 DynamicControl 控件<xref:System.Web.UI.WebControls.TemplateField>字段<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DetailsView>控件。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField>       DynamicControl 控件提供功能类似于的<xref:System.Web.DynamicData.DynamicField>字段。</xref:System.Web.DynamicData.DynamicField> 但是，由于 DynamicControl 控件仅在模板内使用，它将提供更灵活地控制数据因为您可以添加域周围其他 HTML 元素的显示方式。 当使用 DynamicControl 控件时，你可以充分利用以下动态数据功能:-自动呈现字段的相应控件通过使用字段模板，基于数据类型。 可以为整个应用程序全局修改的字段模板。      -提供基于数据库架构的内置数据验证。 你还可以通过自定义数据模型添加验证类型。      -自定义数据呈现单个字段通过使用数据模型中的属性或使用<xref:System.Web.DynamicData.DynamicField.UIHint%2A>属性。</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       若要指定要在 DynamicControl 控件中显示的字段，设置<xref:System.Web.DynamicData.DynamicControl.DataField%2A>对字段名称的属性。</xref:System.Web.DynamicData.DynamicControl.DataField%2A> 你可以通过设置自定义格式设置字符串应用于该字段值<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>属性。</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 默认情况下，格式设置字符串被应用于字段值中，仅当数据绑定控件处于只读模式。 若要将格式设置字符串应用于值显示数据绑定控件处于编辑模式时，将设置<xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> 如果字段值是`null`，你可以通过设置显示的自定义标题<xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A>属性。</xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> DynamicControl 控件可以还自动将转换为空字符串 (&quot;&quot;) 通过设置字段值为 null 值<xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>属性`true`。</xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>       DynamicControl 控件将支持不同的显示模式。 若要指定要在其中显示 DynamicControl 控件模式，请设置<xref:System.Web.DynamicData.DynamicControl.Mode%2A>属性。</xref:System.Web.DynamicData.DynamicControl.Mode%2A> 下表显示了不同的模式。       <xref:System.Web.UI.WebControls.DataBoundControlMode>显示模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这可以防止用户修改的记录或数据字段的值。 它可在任何模板。       <xref:System.Web.UI.WebControls.DataBoundControlMode>有关编辑模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这使用户能够更新现有记录的值。 在编辑模板中使用 (通常命名为`EditItemTemplate`)。       <xref:System.Web.UI.WebControls.DataBoundControlMode>有关在插入模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这使用户输入一条新记录的值。 在插入模板中使用 (通常命名为`InsertItemTemplate`)。       您可以通过设置隐藏数据绑定控件中的 DynamicControl 控件<xref:System.Web.UI.Control.Visible%2A>属性`false`。</xref:System.Web.UI.Control.Visible%2A>      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:DynamicControl       ApplyFormatInEditMode=&quot;True|False&quot;       ConvertEmptyStringToNull=&quot;True|False&quot;       CssClass=&quot;string&quot;       DataField=&quot;string&quot;       DataFormatString=&quot;string&quot;       EnableViewState=&quot;True|False&quot;       HtmlEncode=&quot;True|False&quot;       ID=&quot;string&quot;       Mode=&quot;Edit|Insert|ReadOnly&quot;       NullDisplayText=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       UIHint=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;   >   </asp:DynamicControl>   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).  \n  \n The following example demonstrates how to use the DynamicControl control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table. It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_0_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_0_1.aspx)]"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")]

      public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.DynamicData.IFieldTemplateHost
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新实例<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>类。"
  syntax:
    content: public DynamicControl ();
    parameters: []
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  id: '#ctor(System.Web.UI.WebControls.DataBoundControlMode)'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新实例<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>使用指定的模式的类。"
  syntax:
    content: public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定控件模式的枚举值之一。"
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，指示指定的格式设置字符串<xref:System.Web.DynamicData.DynamicControl.DataFormatString*>字段处于编辑模式时，将属性应用于字段值。</xref:System.Web.DynamicData.DynamicControl.DataFormatString*>"
  remarks: "<xref:System.Web.DynamicData.DynamicControl>控件具有不同的显示模式，允许用户读取、 编辑或插入一个域。</xref:System.Web.DynamicData.DynamicControl> 默认情况下，通过将指定的格式设置字符串<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>属性应用于字段值时，才<xref:System.Web.DynamicData.DynamicControl>控件是否处于只读模式。</xref:System.Web.DynamicData.DynamicControl> </xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 若要应用到数据绑定控件处于编辑模式时显示的值的格式设置字符串，请将 ApplyFormatInEditMode 属性设置为`true`。      1> [!NOTE]&1;><xref:System.Web.DynamicData.DynamicControl>控件不会自动删除格式设置的数据源中更新字段时。</xref:System.Web.DynamicData.DynamicControl> 如果您不希望的格式存储的值的一部分，你将需要删除格式设置以编程方式。"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用格式设置字符串;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Column
  id: Column
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置与控件关联的列对象。"
  remarks: "可以使用的列属性来获取有关特定列的元数据信息。 列属性自动设置<xref:System.Web.DynamicData.DynamicControl>控件基于提供的字段名称<xref:System.Web.DynamicData.DynamicControl.DataField%2A>属性。</xref:System.Web.DynamicData.DynamicControl.DataField%2A> </xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public System.Web.DynamicData.MetaColumn Column { get; set; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "与控件关联列对象。"
  overload: System.Web.DynamicData.DynamicControl.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，该值指示是否将空字符串值 (&quot;&quot;) 在数据源中更新数据字段时自动转换为 null 值。"
  remarks: "<xref:System.Web.UI.WebControls.Parameter>数据源控件的对象还具有一个名为<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>属性</xref:System.Web.UI.WebControls.Parameter> 此属性执行相同的功能。 请确保这两个属性正确设置。"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果将空字符串值自动转换为 null 值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.CssClass
  id: CssClass
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置指定的显示样式的级联样式表 (CSS) 类<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件内容。"
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "CSS 类的名称。"
  overload: System.Web.DynamicData.DynamicControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置数据字段的名称<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件绑定到。"
  remarks: "DataField 属性用于指定要绑定到的数据字段<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 数据字段可以是列名称的或为外键列，关系名称。       默认情况下，指定的数据字段显示通过<xref:System.Web.DynamicData.DynamicControl>控制是通过使用字段数据类型相关联的字段模板。</xref:System.Web.DynamicData.DynamicControl> 你可以更改通过设置呈现数据字段的字段模板<xref:System.Web.DynamicData.DynamicControl.UIHint%2A>属性。</xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 你还可以设置显示的文本格式通过设置<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>属性。</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>       **请注意**你想要全局更改显示和数据字段的行为，则你必须应用到你的数据模型，而不是将此值设置的特定实例中的特性<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 有关详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_4_1.aspx)]"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "要将绑定的数据字段的名称<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控制转移到。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.DynamicData.DynamicControl.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个字符串，指定字段的值的显示格式。"
  remarks: "使用数据属性来指定中显示的值的自定义显示格式<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 如果未设置数据属性，而无需任何特殊格式设置显示的字段值。       默认情况下，格式设置字符串应用于该字段值时，才<xref:System.Web.DynamicData.DynamicControl.Mode%2A>属性设置为<xref:System.Web.UI.WebControls.DataBoundControlMode>。</xref:System.Web.UI.WebControls.DataBoundControlMode> </xref:System.Web.DynamicData.DynamicControl.Mode%2A> 若要应用于处于编辑模式下时该字段值的格式设置字符串，设置<xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>       指定使用数据属性的显示格式是特定于此实例的<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 你还可以更改数据字段的显示格式跨整个应用程序通过应用<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>到数据模型，并设置<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>名为构造函数中的参数。</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 有关详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "一个格式设置字符串，指定字段的值的显示格式。 默认值为空字符串 (&quot;&quot;)，表示尚无特殊格式设置应用于该字段值。"
  overload: System.Web.DynamicData.DynamicControl.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  id: FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取为创建的字段模板<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件。"
  syntax:
    content: public System.Web.UI.Control FieldTemplate { get; }
    return:
      type: System.Web.UI.Control
      description: "为创建的字段模板<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件。"
  overload: System.Web.DynamicData.DynamicControl.FieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的键来检索属性值。"
  remarks: "如果该属性集合为`null`，此方法返回一个空字符串。"
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "属性的名称。"
    return:
      type: System.String
      description: "属性的值。"
  overload: System.Web.DynamicData.DynamicControl.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，该值指示控件的数据是否在呈现之前 HTML 编码。"
  remarks: "HtmlEncode 属性用于指定字段值是否经过 HTML 编码，为其各自的字符串表示形式之间实现才会显示它们。      1> [!NOTE]&1;> HTML 编码的字段值有助于防止跨站点脚本攻击，恶意内容显示。 只要有可能，应启用此属性。 有关详细信息，请参阅[脚本利用概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件的数据经过 HTML 编码在呈现; 之前否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicControl.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Mode
  id: Mode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置呈现模式。"
  remarks: "使用模式属性指定要用于显示的呈现模式<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 下表显示了不同的模式。      |模式 |说明 |  |----------|-----------------|  |<xref:System.Web.UI.WebControls.DataBoundControlMode>| 显示模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这可以防止用户修改的记录或数据字段的值。 它可在任何模板。 这是默认值。 |  |<xref:System.Web.UI.WebControls.DataBoundControlMode>| 编辑模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这使用户能够更新现有记录的值。 在中使用`EditItemTemplate`模板。 |  |<xref:System.Web.UI.WebControls.DataBoundControlMode>| 为插入模式。</xref:System.Web.UI.WebControls.DataBoundControlMode> 这使用户输入一条新记录的值。 在中使用`InsertItemTemplate`模板。 |"
  syntax:
    content: public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的控件的呈现模式的枚举值之一。 默认值是<xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicControl.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置字段值时为数据字段显示的标题<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  remarks: "有时字段值存储为 null 的数据源中。 你可以指定要用于通过设置 NullDisplayText 属性具有 null 值的字段显示的自定义标题。 如果未设置此属性，null 字段值显示为空字符串 (&quot;&quot;)。"
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "字段值时为数据字段显示的标题<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.DynamicData.DynamicControl.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "事件数据。"
  overload: System.Web.DynamicData.DynamicControl.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.DynamicData.DynamicControl.DataField*>未设置属性。</xref:System.Web.DynamicData.DynamicControl.DataField*>"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "呈现<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件内容写入客户端的浏览器使用指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象。"
  remarks: "Render 方法主要由控件开发人员用来扩展<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "用于呈现的对象<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>控件在客户端的浏览器上的内容。"
  overload: System.Web.DynamicData.DynamicControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "将指定的属性设置为指定的值。"
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "要设置的属性的名称。"
    - id: value
      type: System.String
      description: "要分配给属性的值。"
  overload: System.Web.DynamicData.DynamicControl.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  id: System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  isEii: true
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "有关此成员的说明，请参阅<xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>。</xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>"
  syntax:
    content: System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }
    return:
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "要应用于字段模板的格式设置选项。"
  overload: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Table
  id: Table
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取与控件关联的表对象。"
  remarks: "使用表属性来访问有关与包含的数据绑定控件相关联的表的元数据信息<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual System.Web.DynamicData.MetaTable Table { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "与控件关联的表对象。"
  overload: System.Web.DynamicData.DynamicControl.Table*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref>控件位于未绑定到实现一个数据源控件的数据绑定控件<xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;></xref>接口。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置用于呈现数据字段的字段模板的名称。"
  remarks: "UIHint 属性用于指定要用于显示数据字段的 UI 的字段模板。 默认情况下的字段模板为用户控件，其名称中包含为后缀，以确定用于编辑操作和插入操作的字段模板。 后缀分别为 _edit 和 _insert。 当为 UIHint 属性设置值时，你将设置不带后缀的名称。 动态数据将通过计算标识为正确的模式<xref:System.Web.DynamicData.DynamicControl.Mode%2A>属性值并将呈现正确的字段模板。</xref:System.Web.DynamicData.DynamicControl.Mode%2A>       如果未设置 UIHint 属性，默认情况下动态数据将导致基于字段类型的字段模板。 有关详细信息，请参阅[ASP.NET 动态数据基架](~/add/includes/ajax-current-ext-md.md)。       指定使用 UIHint 属性的字段模板是特定于此实例的<xref:System.Web.DynamicData.DynamicControl>控件。</xref:System.Web.DynamicData.DynamicControl> 你还可以更改通过应用跨整个应用程序使用的数据字段的字段模板<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>与你的数据模型。</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 设置 UIHint 属性重写应用到数据模型的元数据。 有关元数据特性的详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).  \n  \n The following example shows how you can specify a data field to use a different field template to render its contents. The second example shows the custom field template specified by the UIHint property.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_1.aspx)]  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_2.ascx)]\n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_2.ascx)]"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "用于呈现数据字段的字段模板的名称。 默认值为空字符串 (&quot;&quot;)，指示将呈现字段模板基于数据字段类型或应用于数据模型的元数据信息。"
  overload: System.Web.DynamicData.DynamicControl.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置控件的验证组名称。"
  remarks: "验证组允许您将在页面上的验证控件分配给特定类别。 每个验证组从其他页上的验证组可以独立进行验证。 使用 ValidationGroup 属性来为其指定的验证组名称<xref:System.Web.DynamicData.DynamicControl>控件页回发到服务器时要进行验证。</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "控件的验证组名称。"
  overload: System.Web.DynamicData.DynamicControl.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.DynamicData.DynamicControl.#ctor
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicControl.Column
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicControl.DataField
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicControl.UIHint
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
- uid: System.Web.DynamicData.DynamicControl.#ctor*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl.DynamicControl
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicControl.Column*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
- uid: System.Web.DynamicData.DynamicControl.DataField*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicControl.GetAttribute
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit
  nameWithType: DynamicControl.OnInit
- uid: System.Web.DynamicData.DynamicControl.Render*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render
  nameWithType: DynamicControl.Render
- uid: System.Web.DynamicData.DynamicControl.SetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicControl.SetAttribute
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
- uid: System.Web.DynamicData.DynamicControl.UIHint*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
