### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.CompositeCollection
  id: CompositeCollection
  children:
  - System.Windows.Data.CompositeCollection.#ctor
  - System.Windows.Data.CompositeCollection.#ctor(System.Int32)
  - System.Windows.Data.CompositeCollection.Add(System.Object)
  - System.Windows.Data.CompositeCollection.Clear
  - System.Windows.Data.CompositeCollection.CollectionChanged
  - System.Windows.Data.CompositeCollection.Contains(System.Object)
  - System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Data.CompositeCollection.Count
  - System.Windows.Data.CompositeCollection.IndexOf(System.Object)
  - System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)
  - System.Windows.Data.CompositeCollection.Item(System.Int32)
  - System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.CompositeCollection.Remove(System.Object)
  - System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)
  - System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView
  - System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  langs:
  - csharp
  name: CompositeCollection
  nameWithType: CompositeCollection
  fullName: System.Windows.Data.CompositeCollection
  type: Class
  summary: "允许多个集合和项作为一个列表显示。"
  remarks: "CompositeCollection 可以包含项例如字符串、 对象、[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]节点、 元素，以及其他集合。 <xref:System.Windows.Controls.ItemsControl>使用 CompositeCollection 来生成其<xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>.</xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>根据其内容中的数据</xref:System.Windows.Controls.ItemsControl> 有关使用<xref:System.Windows.Controls.ItemsControl>对象要绑定到集合，请参阅绑定到集合一部分[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      public class CompositeCollection : System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.ICollectionViewFactory, System.Windows.IWeakEventListener
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.ICollectionViewFactory
  - System.Windows.IWeakEventListener
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.#ctor
  id: '#ctor'
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: CompositeCollection()
  nameWithType: CompositeCollection.CompositeCollection()
  fullName: System.Windows.Data.CompositeCollection.CompositeCollection()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "创建的新实例<xref href=&quot;System.Windows.Data.CompositeCollection&quot;></xref>为空并且具有默认初始容量的类。"
  syntax:
    content: public CompositeCollection ();
    parameters: []
  overload: System.Windows.Data.CompositeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: CompositeCollection(Int32)
  nameWithType: CompositeCollection.CompositeCollection(Int32)
  fullName: System.Windows.Data.CompositeCollection.CompositeCollection(Int32)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "创建的新实例<xref href=&quot;System.Windows.Data.CompositeCollection&quot;></xref>为空并且具有指定的初始容量的类。"
  syntax:
    content: public CompositeCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "新列表是最初可存储的项的数目。"
  overload: System.Windows.Data.CompositeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: CompositeCollection.Add(Object)
  fullName: System.Windows.Data.CompositeCollection.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将指定的项添加到此集合。"
  syntax:
    content: public int Add (object newItem);
    parameters:
    - id: newItem
      type: System.Object
      description: "要添加到集合的新项。"
    return:
      type: System.Int32
      description: "添加新项位置的从零开始索引。"
  overload: System.Windows.Data.CompositeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Clear
  id: Clear
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: CompositeCollection.Clear()
  fullName: System.Windows.Data.CompositeCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "清除集合。"
  remarks: "此方法将重置为空集合。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Data.CompositeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: CompositeCollection.CollectionChanged
  fullName: System.Windows.Data.CompositeCollection.CollectionChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "通过添加或删除某个项而集合更改时发生。"
  syntax:
    content: protected event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: CompositeCollection.Contains(Object)
  fullName: System.Windows.Data.CompositeCollection.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "检查给定的项是否在此集合中。"
  syntax:
    content: public bool Contains (object containItem);
    parameters:
    - id: containItem
      type: System.Object
      description: "要检查的项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合包含给定的项目中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CompositeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: CompositeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Data.CompositeCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "可以从此集合到给定数组的对象引用的浅表副本。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "一个数组，它是复制操作的目标。"
    - id: index
      type: System.Int32
      description: "在复制开始处的目标数组的从零开始索引。"
  overload: System.Windows.Data.CompositeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Count
  id: Count
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Count
  nameWithType: CompositeCollection.Count
  fullName: System.Windows.Data.CompositeCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取此集合中存储的项的数目。"
  remarks: "A<xref:System.Windows.Data.CollectionContainer>对象计数为 1 个项目。</xref:System.Windows.Data.CollectionContainer>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "此集合中存储的项的数目。"
  overload: System.Windows.Data.CompositeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: CompositeCollection.IndexOf(Object)
  fullName: System.Windows.Data.CompositeCollection.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回此集合中找到给定的项的索引。"
  syntax:
    content: public int IndexOf (object indexItem);
    parameters:
    - id: indexItem
      type: System.Object
      description: "要检索的索引的项。"
    return:
      type: System.Int32
      description: "如果在集合中，则集合中的从零开始索引出现的项在其中找到给定的项;否则为`-1`。"
  overload: System.Windows.Data.CompositeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: CompositeCollection.Insert(Int32,Object)
  fullName: System.Windows.Data.CompositeCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "在集合中给定索引处插入项。 给定位置之后的所有项都向下都移动一个。"
  syntax:
    content: public void Insert (int insertIndex, object insertItem);
    parameters:
    - id: insertIndex
      type: System.Int32
      description: "要插入处的项的索引。"
    - id: insertItem
      type: System.Object
      description: "要添加到集合的项引用。"
  overload: System.Windows.Data.CompositeCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "如果索引超出范围。"
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CompositeCollection.Item(Int32)
  fullName: System.Windows.Data.CompositeCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "索引器属性，检索或替换集合中给定从零开始的偏移量处的项。"
  syntax:
    content: public object this[int itemIndex] { get; set; }
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "要检索或替换的项的从零开始的偏移量。"
    return:
      type: System.Object
      description: "指定从零开始的偏移量处的项。"
  overload: System.Windows.Data.CompositeCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "如果索引超出范围。"
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: CompositeCollection.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.CompositeCollection.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "处理集中式的事件表中的事件。"
  syntax:
    content: protected virtual bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "一种<xref href=&quot;System.Windows.WeakEventManager&quot;></xref>调用此方法。 这仅识别的类型的管理器对象<xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>。"
    - id: sender
      type: System.Object
      description: "产生事件的对象。"
    - id: e
      type: System.EventArgs
      description: "事件数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果侦听器处理路由事件。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CompositeCollection.ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: CompositeCollection.Remove(Object)
  fullName: System.Windows.Data.CompositeCollection.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "从集合中移除给定的项的引用。 所有剩余项向上移动一个。"
  syntax:
    content: public void Remove (object removeItem);
    parameters:
    - id: removeItem
      type: System.Object
      description: "要移除的项。"
  overload: System.Windows.Data.CompositeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: CompositeCollection.RemoveAt(Int32)
  fullName: System.Windows.Data.CompositeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "从给定索引处的集合中移除的项。 所有剩余项向上移动一个。"
  syntax:
    content: public void RemoveAt (int removeIndex);
    parameters:
    - id: removeIndex
      type: System.Int32
      description: "索引位置移除一个项。"
  overload: System.Windows.Data.CompositeCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "如果索引超出范围。"
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CompositeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Data.CompositeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "true 访问<xref:System.Collections.ICollection>是同步的 （线程安全）; 否则为 false。</xref:System.Collections.ICollection>"
  overload: System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CompositeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Data.CompositeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "可以用于<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>对访问进行同步的对象"
  overload: System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CompositeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个枚举。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "一个 IEnumerator 对象。"
  overload: System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: CompositeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IList>具有固定大小; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IList>"
  overload: System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: CompositeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IList>只读的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IList>"
  overload: System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView
  id: System#ComponentModel#ICollectionViewFactory#CreateView
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.ComponentModel.ICollectionViewFactory.CreateView()
  nameWithType: CompositeCollection.System.ComponentModel.ICollectionViewFactory.CreateView()
  fullName: System.Windows.Data.CompositeCollection.System.ComponentModel.ICollectionViewFactory.CreateView()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: System.ComponentModel.ICollectionView ICollectionViewFactory.CreateView ();
    parameters: []
    return:
      type: System.ComponentModel.ICollectionView
      description: "创建的视图。"
  overload: System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.CompositeCollection
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: CompositeCollection.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.CompositeCollection.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "一种<xref href=&quot;System.Windows.WeakEventManager&quot;></xref>调用此方法。 这仅识别的类型的管理器对象<xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>。"
    - id: sender
      type: System.Object
      description: "产生事件的对象。"
    - id: e
      type: System.EventArgs
      description: "事件数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果侦听器处理路由事件。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Data.CompositeCollection.#ctor
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CompositeCollection()
  nameWithType: CompositeCollection.CompositeCollection()
  fullName: System.Windows.Data.CompositeCollection.CompositeCollection()
- uid: System.Windows.Data.CompositeCollection.#ctor(System.Int32)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CompositeCollection(Int32)
  nameWithType: CompositeCollection.CompositeCollection(Int32)
  fullName: System.Windows.Data.CompositeCollection.CompositeCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.CompositeCollection.Add(System.Object)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Add(Object)
  nameWithType: CompositeCollection.Add(Object)
  fullName: System.Windows.Data.CompositeCollection.Add(Object)
- uid: System.Windows.Data.CompositeCollection.Clear
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Clear()
  nameWithType: CompositeCollection.Clear()
  fullName: System.Windows.Data.CompositeCollection.Clear()
- uid: System.Windows.Data.CompositeCollection.CollectionChanged
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: CompositeCollection.CollectionChanged
  fullName: System.Windows.Data.CompositeCollection.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Windows.Data.CompositeCollection.Contains(System.Object)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: CompositeCollection.Contains(Object)
  fullName: System.Windows.Data.CompositeCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: CompositeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Data.CompositeCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Data.CompositeCollection.Count
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Count
  nameWithType: CompositeCollection.Count
  fullName: System.Windows.Data.CompositeCollection.Count
- uid: System.Windows.Data.CompositeCollection.IndexOf(System.Object)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: CompositeCollection.IndexOf(Object)
  fullName: System.Windows.Data.CompositeCollection.IndexOf(Object)
- uid: System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: CompositeCollection.Insert(Int32,Object)
  fullName: System.Windows.Data.CompositeCollection.Insert(Int32,Object)
- uid: System.Windows.Data.CompositeCollection.Item(System.Int32)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CompositeCollection.Item(Int32)
  fullName: System.Windows.Data.CompositeCollection.Item(Int32)
- uid: System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: CompositeCollection.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.CompositeCollection.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.CompositeCollection.Remove(System.Object)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: CompositeCollection.Remove(Object)
  fullName: System.Windows.Data.CompositeCollection.Remove(Object)
- uid: System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CompositeCollection.RemoveAt(Int32)
  fullName: System.Windows.Data.CompositeCollection.RemoveAt(Int32)
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CompositeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Data.CompositeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CompositeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Data.CompositeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CompositeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: CompositeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: CompositeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Data.CompositeCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.ComponentModel.ICollectionViewFactory.CreateView()
  nameWithType: CompositeCollection.System.ComponentModel.ICollectionViewFactory.CreateView()
  fullName: System.Windows.Data.CompositeCollection.System.ComponentModel.ICollectionViewFactory.CreateView()
- uid: System.ComponentModel.ICollectionView
  parent: System.ComponentModel
  isExternal: false
  name: ICollectionView
  nameWithType: ICollectionView
  fullName: System.ComponentModel.ICollectionView
- uid: System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: CompositeCollection.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.CompositeCollection.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Windows.Data.CompositeCollection.#ctor*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CompositeCollection
  nameWithType: CompositeCollection.CompositeCollection
- uid: System.Windows.Data.CompositeCollection.Add*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Add
  nameWithType: CompositeCollection.Add
- uid: System.Windows.Data.CompositeCollection.Clear*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Clear
  nameWithType: CompositeCollection.Clear
- uid: System.Windows.Data.CompositeCollection.Contains*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Contains
  nameWithType: CompositeCollection.Contains
- uid: System.Windows.Data.CompositeCollection.CopyTo*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: CopyTo
  nameWithType: CompositeCollection.CopyTo
- uid: System.Windows.Data.CompositeCollection.Count*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Count
  nameWithType: CompositeCollection.Count
- uid: System.Windows.Data.CompositeCollection.IndexOf*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: IndexOf
  nameWithType: CompositeCollection.IndexOf
- uid: System.Windows.Data.CompositeCollection.Insert*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Insert
  nameWithType: CompositeCollection.Insert
- uid: System.Windows.Data.CompositeCollection.Item*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Item
  nameWithType: CompositeCollection.Item
- uid: System.Windows.Data.CompositeCollection.ReceiveWeakEvent*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: ReceiveWeakEvent
  nameWithType: CompositeCollection.ReceiveWeakEvent
- uid: System.Windows.Data.CompositeCollection.Remove*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: Remove
  nameWithType: CompositeCollection.Remove
- uid: System.Windows.Data.CompositeCollection.RemoveAt*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: CompositeCollection.RemoveAt
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CompositeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CompositeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: CompositeCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: CompositeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: CompositeCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.ComponentModel.ICollectionViewFactory.CreateView
  nameWithType: CompositeCollection.System.ComponentModel.ICollectionViewFactory.CreateView
- uid: System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.CompositeCollection
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: CompositeCollection.System.Windows.IWeakEventListener.ReceiveWeakEvent
