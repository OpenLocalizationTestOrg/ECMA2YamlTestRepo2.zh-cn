### YamlMime:ManagedReference
items:
- uid: System.Windows.MultiTrigger
  id: MultiTrigger
  children:
  - System.Windows.MultiTrigger.#ctor
  - System.Windows.MultiTrigger.Conditions
  - System.Windows.MultiTrigger.Setters
  - System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  langs:
  - csharp
  name: MultiTrigger
  nameWithType: MultiTrigger
  fullName: System.Windows.MultiTrigger
  type: Class
  summary: "表示一个触发器，它应用属性值或一组条件满足时执行操作。"
  remarks: "MultiTrigger 使您能够设置属性值或启动操作基于的集合的<xref:System.Windows.Condition>s。</xref:System.Windows.Condition> 满足条件时属性的值 (指定的<xref:System.Windows.Condition.Property%2A>属性<xref:System.Windows.Condition>类) 的元素与匹配的指定<xref:System.Windows.Condition.Value%2A>。</xref:System.Windows.Condition.Value%2A> </xref:System.Windows.Condition> </xref:System.Windows.Condition.Property%2A> 比较是引用相等性检查。 你可以使用 setter 或<xref:System.Windows.TriggerBase.EnterActions%2A>和<xref:System.Windows.TriggerBase.ExitActions%2A>属性，以应用更改，或启动操作时的所有条件得以满足。</xref:System.Windows.TriggerBase.ExitActions%2A> </xref:System.Windows.TriggerBase.EnterActions%2A>       <xref:System.Windows.MultiTrigger.Setters%2A>MultiTrigger 对象属性只能包含<xref:System.Windows.Setter>对象。</xref:System.Windows.Setter> </xref:System.Windows.MultiTrigger.Setters%2A> 添加<xref:System.Windows.Setter>MultiTrigger 对象子级隐式将其添加到<xref:System.Windows.SetterBaseCollection>MultiTrigger 对象。</xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支持对象;仅<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支持<xref:System.Windows.EventSetter>对象。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "The following example contains two MultiTriggers. The first sets the **MinWidth** property value when the **HasItems** property is false and the **Width** property is **Auto**. The second one is similar but is for the **MinHeight** property.  \n  \n [!code-xml[ControlTemplateExamples_snip#MultiTriggerExample1](~/add/codesnippet/xaml/ControlTemplateExamples/Page1.xaml#multitriggerexample1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      public sealed class MultiTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.MultiTrigger.#ctor
  id: '#ctor'
  parent: System.Windows.MultiTrigger
  langs:
  - csharp
  name: MultiTrigger()
  nameWithType: MultiTrigger.MultiTrigger()
  fullName: System.Windows.MultiTrigger.MultiTrigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.MultiTrigger&quot;></xref>类。"
  syntax:
    content: public MultiTrigger ();
    parameters: []
  overload: System.Windows.MultiTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.MultiTrigger.Conditions
  id: Conditions
  parent: System.Windows.MultiTrigger
  langs:
  - csharp
  name: Conditions
  nameWithType: MultiTrigger.Conditions
  fullName: System.Windows.MultiTrigger.Conditions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取的集合<xref href=&quot;System.Windows.Condition&quot;></xref>对象。 所有集合中的条件满足时，将应用对属性值的更改。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Conditions&quot;></a># # XAML 属性元素用法```   <object>     <object.Conditions>       ZeroOrMoreConditions     </object.Conditions>   </object>   ``` <a name=&quot;xamlValues_Conditions&quot;> </a> # # XAML 值*ZeroOrMoreConditions*零个或多<xref:System.Windows.Condition>对象。</xref:System.Windows.Condition>             <xref:System.Windows.MultiTrigger>使您能够设置属性值或启动操作的集合的基于<xref:System.Windows.Condition>对象。</xref:System.Windows.Condition></xref:System.Windows.MultiTrigger> 满足条件时属性的值 (指定的<xref:System.Windows.Condition.Property%2A>属性<xref:System.Windows.Condition>类) 的元素与匹配的指定<xref:System.Windows.Condition.Value%2A>。</xref:System.Windows.Condition.Value%2A> </xref:System.Windows.Condition> </xref:System.Windows.Condition.Property%2A> 执行比较是引用相等性检查。 <xref:System.Windows.MultiTrigger>适用于关联的 setter 或操作的所有条件为 true 时 （二进制和操作）。</xref:System.Windows.MultiTrigger>       请注意，对于<xref:System.Windows.MultiTrigger>s，集合中的每个条件必须同时设置<xref:System.Windows.Condition.Property%2A>和<xref:System.Windows.Condition.Value%2A>属性。</xref:System.Windows.Condition.Value%2A> </xref:System.Windows.Condition.Property%2A> </xref:System.Windows.MultiTrigger> 请参阅<xref:System.Windows.Condition>页以获得更多信息。</xref:System.Windows.Condition>"
  example:
  - "The following example contains two <xref:System.Windows.MultiTrigger>s. The first sets the **MinWidth** property value when the **HasItems** property is false and the **Width** property is **Auto**. The second one is similar but is for the **MinHeight** property.  \n  \n [!code-xml[ControlTemplateExamples_snip#MultiTriggerExample1](~/add/codesnippet/xaml/ControlTemplateExamples/Page1.xaml#multitriggerexample1)]"
  syntax:
    content: public System.Windows.ConditionCollection Conditions { get; }
    return:
      type: System.Windows.ConditionCollection
      description: "默认值为空集合。"
  overload: System.Windows.MultiTrigger.Conditions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.MultiTrigger.Setters
  id: Setters
  parent: System.Windows.MultiTrigger
  langs:
  - csharp
  name: Setters
  nameWithType: MultiTrigger.Setters
  fullName: System.Windows.MultiTrigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取的集合<xref href=&quot;System.Windows.Setter&quot;></xref>对象，描述的属性值时要应用的条件的所有<xref href=&quot;System.Windows.MultiTrigger&quot;></xref>满足。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a># # XAML 属性元素用法```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> # # XAML 值*ZeroOrMoreSetters*零个或多<xref:System.Windows.Setter>对象。</xref:System.Windows.Setter>       <xref:System.Windows.EventSetter>不支持对象。</xref:System.Windows.EventSetter>       <xref:System.Windows.MultiTrigger>使您能够启动操作或设置属性值使用<xref:System.Windows.Setter>时的一组条件的对象已满足。</xref:System.Windows.Setter></xref:System.Windows.MultiTrigger>       如果有两个<xref:System.Windows.Setter>使用设置相同的属性 Setter 的最后声明相同或不同 setter 集合中的对象。</xref:System.Windows.Setter>       添加<xref:System.Windows.Setter>子级到<xref:System.Windows.MultiTrigger>对象隐式将其添加到<xref:System.Windows.SetterBaseCollection>为<xref:System.Windows.MultiTrigger>对象。</xref:System.Windows.MultiTrigger> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.MultiTrigger> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支持对象;仅<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支持<xref:System.Windows.EventSetter>对象。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "The following example contains two <xref:System.Windows.MultiTrigger>s. The first sets the **MinWidth** property value when the **HasItems** property is false and the **Width** property is **Auto**. The second one is similar but is for the **MinHeight** property. As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.MultiTrigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.MultiTrigger> object. Therefore, in the following example, `<MultiTrigger.Setters>` is implicit.  \n  \n [!code-xml[ControlTemplateExamples_snip#MultiTriggerExample1](~/add/codesnippet/xaml/ControlTemplateExamples/Page1.xaml#multitriggerexample1)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "默认值为 null。"
  overload: System.Windows.MultiTrigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.MultiTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "添加子对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.MultiTrigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.MultiTrigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加的子对象。"
  overload: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.MultiTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "将节点的文本内容添加到对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.MultiTrigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.MultiTrigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要添加到对象的文本。"
  overload: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.Windows.MultiTrigger.#ctor
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: MultiTrigger()
  nameWithType: MultiTrigger.MultiTrigger()
  fullName: System.Windows.MultiTrigger.MultiTrigger()
- uid: System.Windows.MultiTrigger.Conditions
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: Conditions
  nameWithType: MultiTrigger.Conditions
  fullName: System.Windows.MultiTrigger.Conditions
- uid: System.Windows.ConditionCollection
  parent: System.Windows
  isExternal: false
  name: ConditionCollection
  nameWithType: ConditionCollection
  fullName: System.Windows.ConditionCollection
- uid: System.Windows.MultiTrigger.Setters
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: Setters
  nameWithType: MultiTrigger.Setters
  fullName: System.Windows.MultiTrigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.MultiTrigger.#ctor*
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: MultiTrigger
  nameWithType: MultiTrigger.MultiTrigger
- uid: System.Windows.MultiTrigger.Conditions*
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: Conditions
  nameWithType: MultiTrigger.Conditions
- uid: System.Windows.MultiTrigger.Setters*
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: Setters
  nameWithType: MultiTrigger.Setters
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.MultiTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: MultiTrigger.System.Windows.Markup.IAddChild.AddText
