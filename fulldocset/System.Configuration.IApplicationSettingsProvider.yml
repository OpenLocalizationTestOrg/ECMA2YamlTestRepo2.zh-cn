### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "定义基于客户端的应用程序设置提供程序扩展的功能。"
  remarks: "应用程序设置体系结构使你可以通过创建自定义设置提供程序，它是从<xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>派生的类提供用于应用程序设置的自定义存储机制 此类包含用于存储和检索属性的基本功能。 但是，你可以通过在自定义设置提供程序实现 IApplicationSettingsProvider 接口来添加附加的标准化的功能。 此接口包含三个主要可使更智能地句柄应用程序版本更改的设置提供程序的方法。 通常情况下，设置提供程序将存储的不同版本的单独以应对预期的以下情况下应用程序的应用程序设置:--并行执行的应用程序的不同版本。      -当升级应用程序保留应用程序设置。      -重置为其默认值为当前所用版本的应用程序设置。       <xref:System.Configuration.LocalFileSettingsProvider>类可实现 IApplicationSettingsProvider 接口。</xref:System.Configuration.LocalFileSettingsProvider> 包含由 IApplicationSettingsProvider 方法属于同一套也位于<xref:System.Configuration.ApplicationSettingsBase>类，并启用的应用程序设置包装和其设置提供程序之间的预定义的通信通道的建立。</xref:System.Configuration.ApplicationSettingsBase>      1> [!NOTE]&1;> 此接口是可选的。 如果提供程序未实现此接口，设置基础结构将失败并且不通知，如果它尝试访问任何定义此接口的方法。"
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "返回同一个应用程序的以前版本的指定的设置属性的值。"
  remarks: "你可以结合使用 GetPreviousVersion 方法<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>迁移应用程序设置期间或之后的应用程序的新版本的安装方法。</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述当前应用程序使用情况。"
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>其值是要返回。"
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref>包含指定的属性设置的值，如它在上次设置在以前版本的该应用程序; 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到该设置。"
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "重置为其默认值指定的应用程序与关联的应用程序设置。"
  remarks: "重置方法重新初始化的指定的应用程序设置组的存储的值。 与此相反，<xref:System.Configuration.DefaultSettingValueAttribute>属性在初始化期间，提供单一设置属性的默认值，如果它没有存储的值。</xref:System.Configuration.DefaultSettingValueAttribute>       设置提供程序确定合理的默认值是指定组的应用程序设置。 例如，在实现<xref:System.Configuration.LocalFileSettingsProvider>将用户范围设置为在其共享值重置`application.exe.config`文件; 它与此相反，离开保持不变的应用程序范围的设置。</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述当前应用程序使用情况。"
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "指示应用程序已升级到提供程序。 这带来了提供程序的机会升级根据其存储的设置。"
  remarks: ".NET Framework 允许通过并行安装和执行的不同版本的相同应用程序。 应用程序设置提供程序将存储应用程序单独确保隔离的每个版本的应用程序设置。 但是，你可能想要迁移到当前应用程序的先前版本中的设置。 若要提供此迁移功能，使用从<xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>派生类中实现的升级方法       你可以结合使用的升级方法<xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>迁移应用程序设置期间或之后的应用程序的新版本的安装方法。</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       此方法应取消为具有<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>应用于它，或整个设置包装类，派生自<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase></xref:System.Configuration.NoSettingsVersionUpgradeAttribute>每个应用程序设置"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述当前应用程序使用情况。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含其值是要检索的设置属性组。"
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
