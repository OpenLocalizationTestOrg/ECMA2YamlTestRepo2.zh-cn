### YamlMime:ManagedReference
items:
- uid: System.Activities.WorkflowApplication
  id: WorkflowApplication
  children:
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  - System.Activities.WorkflowApplication.Abort
  - System.Activities.WorkflowApplication.Abort(System.String)
  - System.Activities.WorkflowApplication.Aborted
  - System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  - System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.Cancel
  - System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  - System.Activities.WorkflowApplication.Completed
  - System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  - System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  - System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  - System.Activities.WorkflowApplication.Extensions
  - System.Activities.WorkflowApplication.GetBookmarks
  - System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  - System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.Id
  - System.Activities.WorkflowApplication.Idle
  - System.Activities.WorkflowApplication.InstanceStore
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  - System.Activities.WorkflowApplication.Load(System.Guid)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  - System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  - System.Activities.WorkflowApplication.LoadRunnableInstance
  - System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  - System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnNotifyPaused
  - System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  - System.Activities.WorkflowApplication.OnUnhandledException
  - System.Activities.WorkflowApplication.Persist
  - System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  - System.Activities.WorkflowApplication.PersistableIdle
  - System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  - System.Activities.WorkflowApplication.Run
  - System.Activities.WorkflowApplication.Run(System.TimeSpan)
  - System.Activities.WorkflowApplication.SupportsInstanceKeys
  - System.Activities.WorkflowApplication.Terminate(System.Exception)
  - System.Activities.WorkflowApplication.Terminate(System.String)
  - System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  - System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  - System.Activities.WorkflowApplication.Unload
  - System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  - System.Activities.WorkflowApplication.Unloaded
  langs:
  - csharp
  name: WorkflowApplication
  nameWithType: WorkflowApplication
  fullName: System.Activities.WorkflowApplication
  type: Class
  summary: "为工作流的单个实例提供主机。"
  remarks: "WorkflowApplication 类为单个工作流实例提供主机。 它是由工作流运行时的实际的工作流实例的代理。 WorkflowApplication 的用户可以指示工作流运行时，可以通过在 WorkflowApplication 对象上调用适当的方法对工作流实例执行操作。 如果请求的操作不是有效的则引发异常。       使用 WorkflowApplication 可以执行以下任务︰ 1。  创建新的工作流实例，或从实例存储区加载工作流实例。      2.  提供扩展以供工作流实例中的活动。      3.  控制工作流实例的执行。      4.  恢复由工作流实例中的活动创建书签。      5.  保存或卸载工作流实例。      6.  工作流实例生命周期事件通知。"
  example:
  - "The following example hosts a workflow using WorkflowApplication. A WorkflowApplication instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/t-system.activities.work_1_1.cs)]"
  syntax:
    content: 'public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance'
  inheritance:
  - System.Object
  - System.Activities.Hosting.WorkflowInstance
  implements: []
  inheritedMembers:
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建的新实例<xref href=&quot;System.Activities.WorkflowApplication&quot;></xref>与指定的工作流定义的类。"
  remarks: ''
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity. The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation. When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.  \n  \n```Output  \nWorkflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   \nThe two dice are 1 and 5.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#130](~/add/codesnippet/csharp/m-system.activities.work_15_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#21](~/add/codesnippet/csharp/m-system.activities.work_15_2.cs)]"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "工作流定义中。"
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建的新实例<xref href=&quot;System.Activities.WorkflowApplication&quot;></xref>与指定的工作流定义和定义标识的类。"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "工作流定义中。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "定义标识。"
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,IDictionary<String,Object>)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建的新实例<xref href=&quot;System.Activities.WorkflowApplication&quot;></xref>类，该类使用指定的工作流定义和自变量值。"
  remarks: ''
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name. The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWorkflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  \n500 / 36 = 13 Remainder 32  \nWorkflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#120](~/add/codesnippet/csharp/2961edb8-5268-42fa-8c6d-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#10](~/add/codesnippet/csharp/2961edb8-5268-42fa-8c6d-_2.cs)]"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary<string,object> inputs);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "工作流定义中。"
    - id: inputs
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "由参数名称键控的工作流定义的根活动上定义的自变量的值。"
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建的新实例<xref href=&quot;System.Activities.WorkflowApplication&quot;></xref>类，该类使用指定的工作流定义和自变量值和定义标识。"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary<string,object> inputs, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "工作流定义中。"
    - id: inputs
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "定义标识。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "由参数名称键控的工作流定义的根活动上定义的自变量的值。"
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Abort
  id: Abort
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Abort()
  nameWithType: WorkflowApplication.Abort()
  fullName: System.Activities.WorkflowApplication.Abort()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "通知工作流运行时应中止此工作流实例。"
  remarks: "承载的工作流<xref:System.Activities.WorkflowApplication>中止时，<xref:System.Activities.WorkflowApplication.Aborted%2A>调用处理程序和<xref:System.Activities.WorkflowApplication.Completed%2A>不调用处理程序。</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication.Aborted%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Abort is called. When the workflow is aborted, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   \nWorkflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  \nException: System.Activities.WorkflowApplicationAbortedException  \nThe workflow has been aborted.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#11](~/add/codesnippet/csharp/m-system.activities.work_17_1.cs)]"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Abort(System.String)
  id: Abort(System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Abort(String)
  nameWithType: WorkflowApplication.Abort(String)
  fullName: System.Activities.WorkflowApplication.Abort(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "通知特定原因应中止此工作流实例工作流运行时。"
  remarks: "承载的工作流<xref:System.Activities.WorkflowApplication>中止时，<xref:System.Activities.WorkflowApplication.Aborted%2A>调用处理程序和<xref:System.Activities.WorkflowApplication.Completed%2A>不调用处理程序。</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication.Aborted%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Abort is called. When the workflow is aborted, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   \nWorkflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  \nException: System.Activities.WorkflowApplicationAbortedException  \nThe reason for aborting the workflow.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#11](~/add/codesnippet/csharp/m-system.activities.work_21_1.cs)]"
  syntax:
    content: public void Abort (string reason);
    parameters:
    - id: reason
      type: System.String
      description: "用于中止的请求原因。"
  overload: System.Activities.WorkflowApplication.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Aborted
  id: Aborted
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
  fullName: System.Activities.WorkflowApplication.Aborted
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置&lt;xref:System.Action%601&gt;中止工作流实例时调用。"
  remarks: "承载的工作流<xref:System.Activities.WorkflowApplication>中止时，已中止调用处理程序和<xref:System.Activities.WorkflowApplication.Completed%2A>不调用处理程序。</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the Aborted handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#5](~/add/codesnippet/csharp/p-system.activities.work_2_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationAbortedEventArgs> Aborted { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationAbortedEventArgs}
      description: "中止工作流实例时调用的操作。"
  overload: System.Activities.WorkflowApplication.Aborted*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  id: AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: AddInitialInstanceValues(IDictionary<XName,Object>)
  nameWithType: WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  fullName: System.Activities.WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定所含的新实例的首个保留的实例元数据值。"
  syntax:
    content: public void AddInitialInstanceValues (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> writeOnlyValues);
    parameters:
    - id: writeOnlyValues
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
      description: "要与首个保留包含元数据值。"
  overload: System.Activities.WorkflowApplication.AddInitialInstanceValues*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  id: BeginCancel(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCancel(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取消使用以异步方式指定工作流实例<xref:System.AsyncCallback>和用户提供的状态。</xref:System.AsyncCallback>"
  remarks: "若要确定取消操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> <xref:System.Activities.WorkflowApplication.EndCancel%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndCancel%2A> 如果<xref:System.Activities.WorkflowApplication.EndCancel%2A>是取消操作完成前调用，被阻止，直至取消操作完成。</xref:System.Activities.WorkflowApplication.EndCancel%2A> 默认情况下，取消操作必须在 30 秒或<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A>引发</xref:System.TimeoutException>中完成       此方法取消异步使用工作流<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginCancel (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要取消操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步取消操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCancel(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取消工作流实例使用指定的超时间隔以异步方式<xref:System.AsyncCallback>，和用户提供的状态。</xref:System.AsyncCallback>"
  remarks: "若要确定取消操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> <xref:System.Activities.WorkflowApplication.EndCancel%2A>可以在内部或外部中指定的方法调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndCancel%2A> 如果<xref:System.Activities.WorkflowApplication.EndCancel%2A>是取消操作完成前调用，被阻止，直至取消操作完成。</xref:System.Activities.WorkflowApplication.EndCancel%2A> 如果取消操作未在指定的间隔内完成`timeOut`参数，<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A>引发</xref:System.TimeoutException>       此方法取消异步使用工作流<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "取消操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要取消操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步取消操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  id: BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建默认的实例所有者使用以异步方式<xref:System.IAsyncResult>使用指定的实例存储区，定义标识、 标识筛选器、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "定义标识。"
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "标识筛选器。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建默认的实例所有者使用以异步方式<xref:System.IAsyncResult>使用指定的实例存储区，定义标识、 标识筛选器、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "定义标识。"
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "标识筛选器。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "删除默认的实例所有者使用以异步方式<xref:System.IAsyncResult>与指定的实例存储区、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "删除默认的实例所有者使用以异步方式<xref:System.IAsyncResult>与指定的实例存储区、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索实例所有者使用以异步方式<xref:System.IAsyncResult>与指定的实例标识符、 实例存储区、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "实例标识符。"
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索实例所有者使用以异步方式<xref:System.IAsyncResult>与指定的实例标识符、 实例存储区、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "实例标识符。"
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索使用异步的可运行实例所有者<xref:System.IAsyncResult>与指定的实例存储区、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索使用异步的可运行实例所有者<xref:System.IAsyncResult>与指定的实例存储区、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "加载工作流以异步方式从实例存储区使用<xref:System.IAsyncResult>使用指定的实例、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(Guid,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从实例存储区使用指定的实例标识符、 回调方法和用户提供的状态以异步方式加载工作流。"
  syntax:
    content: public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "工作流实例的全局唯一 128 位标识符。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "异步操作的状态。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "加载工作流以异步方式从实例存储区使用<xref:System.IAsyncResult>使用指定的实例，更新映射、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "更新映射。"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "加载工作流以异步方式从实例存储区使用<xref:System.IAsyncResult>与指定的实例、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从实例存储区中使用指定的实例标识符、 超时期限、 回调方法和用户提供的状态以异步方式加载工作流。"
  syntax:
    content: public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "工作流实例的全局唯一 128 位标识符。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "异步操作的状态。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "加载工作流以异步方式从实例存储区使用<xref:System.IAsyncResult>使用指定的实例，更新映射、 超时间隔、 回调和状态的异步设计模式。</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "更新映射。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中将取消该操作并开始加载操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要开始加载操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  id: BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoadRunnableInstance(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以从<xref:System.Activities.WorkflowApplication.InstanceStore*>.</xref:System.Activities.WorkflowApplication.InstanceStore*>加载可运行工作流实例"
  remarks: "可运行实例是为其计时器或实例锁已过期。       若要确定加载操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 如果<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 默认情况下，恢复操作必须在 30 秒，否则无需<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>引发</xref:System.TimeoutException>中完成       此方法加载工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要完成该操作时调用的方法。"
    - id: state
      type: System.Object
      description: "包含有关异步操作的信息的可选应用程序特定对象。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用"
  overload: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以加载可运行工作流实例从<xref:System.Activities.WorkflowApplication.InstanceStore*>使用指定的超时间隔。</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "可运行实例是为其计时器或实例锁已过期。       若要确定加载操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 如果<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 如果负载操作未完成在指定的超时间隔内<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>引发</xref:System.TimeoutException>       此方法加载工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "在加载操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要完成该操作时调用的方法。"
    - id: state
      type: System.Object
      description: "包含有关异步操作的信息的可选应用程序特定对象。"
    return:
      type: System.IAsyncResult
      description: "对异步操作的引用"
  overload: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  id: BeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将工作流实例保留到实例存储区使用指定的回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定保留操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> <xref:System.Activities.WorkflowApplication.EndPersist%2A>可以在内部或外部中引用的方法调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndPersist%2A> 如果<xref:System.Activities.WorkflowApplication.EndPersist%2A>是保留操作完成前调用，被阻止，直至保留操作完成。</xref:System.Activities.WorkflowApplication.EndPersist%2A> 如果未在 30 秒，<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A>引发</xref:System.TimeoutException>内完成保留操作       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       此方法保留工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要保留操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对保留的引用异步操作。"
  overload: System.Activities.WorkflowApplication.BeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginPersist(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将工作流实例保留到实例存储区使用指定的超时间隔、 回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定保留操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> <xref:System.Activities.WorkflowApplication.EndPersist%2A>可以在内部或外部中引用的方法调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndPersist%2A> 如果<xref:System.Activities.WorkflowApplication.EndPersist%2A>是保留操作完成前调用，被阻止，直至保留操作完成。</xref:System.Activities.WorkflowApplication.EndPersist%2A> 如果保留操作未完成在指定的超时间隔内，<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A>引发</xref:System.TimeoutException>       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       此方法使用以异步方式将工作流实例保留<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "保留操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要保留操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对保留的引用异步操作。"
  overload: System.Activities.WorkflowApplication.BeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复书签使用指定的值、 回调方法和状态。"
  remarks: "若要确定恢复操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 如果<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 默认情况下，恢复操作必须在 30 秒，否则无需<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>引发</xref:System.TimeoutException>中完成       此方法恢复书签以异步方式使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "要恢复的书签。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: callback
      type: System.AsyncCallback
      description: "要在恢复操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步书签恢复操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(String,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动异步操作以恢复具有指定名称，使用指定的值、 回调方法和状态的书签。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  syntax:
    content: public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "要恢复的书签的名称。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: callback
      type: System.AsyncCallback
      description: "异步操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "开始异步操作前调用线程已保留工作流执行的状态。"
    return:
      type: System.IAsyncResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复书签使用指定的值、 超时间隔、 回调方法和状态。"
  remarks: "若要确定恢复操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 如果<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 如果恢复操作不会完成在指定的超时间隔内<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>引发</xref:System.TimeoutException>       此方法恢复书签以异步方式使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "要恢复的书签。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: timeout
      type: System.TimeSpan
      description: "恢复操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要在恢复操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步书签恢复操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动异步操作以恢复具有指定名称，使用指定的值、 超时间隔、 回调方法和状态的书签。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  syntax:
    content: public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "要恢复的书签的名称。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: timeout
      type: System.TimeSpan
      description: "必须在此期间恢复书签的时间间隔。"
    - id: callback
      type: System.AsyncCallback
      description: "异步操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "开始异步操作前调用线程保存工作流执行的状态。"
    return:
      type: System.IAsyncResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  id: BeginRun(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginRun(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动或恢复工作流实例使用指定的回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定运行的操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> <xref:System.Activities.WorkflowApplication.EndRun%2A>可以在内部或外部中引用的方法调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndRun%2A> 如果<xref:System.Activities.WorkflowApplication.EndRun%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndRun%2A> 默认情况下，恢复操作必须在 30 秒或<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A>引发</xref:System.TimeoutException>中完成       此方法启动或恢复工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginRun (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要在恢复操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步运行操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginRun(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动或恢复工作流实例使用指定的超时间隔、 回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定运行的操作是否成功，请调用<xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> <xref:System.Activities.WorkflowApplication.EndRun%2A>可以在内部或外部中的方法引用调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndRun%2A> 如果<xref:System.Activities.WorkflowApplication.EndRun%2A>是调用恢复操作完成前，阻止，直至恢复操作完成。</xref:System.Activities.WorkflowApplication.EndRun%2A> 如果恢复操作不会完成在指定的超时间隔内<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A>引发</xref:System.TimeoutException>       此方法启动或恢复工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "恢复操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "要在恢复操作完成时调用的方法。"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步运行操作的引用。"
  overload: System.Activities.WorkflowApplication.BeginRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(Exception,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的异常、 回调方法和用户提供的状态以异步方式。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       若要确定是否<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>可以在内部或外部中引用的方法调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.EndTerminate%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> 默认情况下，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作必须在 30 秒或<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A>引发</xref:System.TimeoutException>中完成</xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       此方法终止工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.Exception
      description: "终止工作流实例的原因。"
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对当前的引用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.String,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(String,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的错误消息、 回调方法和用户提供的状态以异步方式。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       若要确定是否<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>可以在内部或外部中的方法引用调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.EndTerminate%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> 默认情况下，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作必须在 30 秒或<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A>引发</xref:System.TimeoutException>中完成</xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       此方法使用终止工作流实例以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.String
      description: "终止工作流实例的原因。"
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对当前的引用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的异常、 超时间隔、 回调方法和用户提供的状态以异步方式。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       若要确定是否<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>可以从内部或外部调用`callback`方法。</xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.EndTerminate%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作未在指定的超时间隔内完成<xref:System.TimeoutException>引发。</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 这或<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>进程引发从<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A></xref:System.Activities.WorkflowApplication.BeginTerminate%2A>过程中发生的任何其他异常       此方法终止工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.Exception
      description: "终止工作流实例的原因。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中的间隔<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作必须完成取消操作并<xref:System.TimeoutException>引发。</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对当前的引用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的错误消息、 超时间隔、 回调方法和用户提供的状态以异步方式。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       若要确定是否<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>可以在内部或外部中的方法引用调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.EndTerminate%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> 如果<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作未完成在指定的超时间隔内<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A>引发</xref:System.TimeoutException></xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       此方法使用终止工作流实例以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.String
      description: "终止工作流实例的原因。"
    - id: timeout
      type: System.TimeSpan
      description: "在其中的间隔<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作必须完成取消操作并<xref:System.TimeoutException>引发。</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步引用<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作。</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  id: BeginUnload(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginUnload(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "保留和释放工作流实例使用指定的回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定是否<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> <xref:System.Activities.WorkflowApplication.EndUnload%2A>可以在内部或外部中的方法引用调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndUnload%2A> 如果<xref:System.Activities.WorkflowApplication.EndUnload%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.EndUnload%2A> 默认情况下，<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作必须在 30 秒或<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A>引发</xref:System.TimeoutException>中完成</xref:System.Activities.WorkflowApplication.BeginUnload%2A>       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       此方法保留和释放工作流实例以异步方式使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginUnload (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginUnload*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginUnload*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步引用<xref:System.Activities.WorkflowApplication.BeginUnload*>操作。</xref:System.Activities.WorkflowApplication.BeginUnload*>"
  overload: System.Activities.WorkflowApplication.BeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginUnload(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "保留和释放工作流实例使用指定的超时间隔、 回调方法和用户提供的状态以异步方式。"
  remarks: "若要确定是否<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作成功，请调用<xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> <xref:System.Activities.WorkflowApplication.EndUnload%2A>可以在内部或外部中的方法引用调用从`callback`参数。</xref:System.Activities.WorkflowApplication.EndUnload%2A> 如果<xref:System.Activities.WorkflowApplication.EndUnload%2A>之前调用<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作完成后，它阻止，直至<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作完成。</xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.EndUnload%2A> 如果<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作未完成在指定的超时间隔内<xref:System.TimeoutException>从<xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A>引发</xref:System.TimeoutException></xref:System.Activities.WorkflowApplication.BeginUnload%2A>       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       此方法保留和卸载工作流实例以异步方式使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "在其中的间隔<xref:System.Activities.WorkflowApplication.BeginTerminate*>操作必须完成取消操作并<xref:System.TimeoutException>引发。</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "该方法时要调用<xref:System.Activities.WorkflowApplication.BeginUnload*>操作已完成。</xref:System.Activities.WorkflowApplication.BeginUnload*>"
    - id: state
      type: System.Object
      description: "一个可选的应用程序特定对象，其中包含有关异步操作的信息。"
    return:
      type: System.IAsyncResult
      description: "对异步引用<xref:System.Activities.WorkflowApplication.BeginUnload*>操作。</xref:System.Activities.WorkflowApplication.BeginUnload*>"
  overload: System.Activities.WorkflowApplication.BeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Cancel
  id: Cancel
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Cancel()
  nameWithType: WorkflowApplication.Cancel()
  fullName: System.Activities.WorkflowApplication.Cancel()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取消工作流实例。"
  remarks: "此方法会安排工作流实例的取消操作。 若要得到通知在取消完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理程序。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       默认情况下，完成取消操作必须在 30 秒内或<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Cancel is called. When the workflow is cancelled, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#13](~/add/codesnippet/csharp/m-system.activities.work_3_1.cs)]"
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  id: Cancel(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Cancel(TimeSpan)
  nameWithType: WorkflowApplication.Cancel(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Cancel(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取消工作流实例使用指定的超时间隔。"
  remarks: "此方法会安排工作流实例的取消操作。 若要得到通知在取消完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理程序。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called. When the workflow is cancelled, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#13](~/add/codesnippet/csharp/m-system.activities.work_24_1.cs)]"
  syntax:
    content: public void Cancel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "取消操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Completed
  id: Completed
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Completed
  nameWithType: WorkflowApplication.Completed
  fullName: System.Activities.WorkflowApplication.Completed
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置&lt;xref:System.Action%601&gt;工作流实例完成时调用。"
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the Completed handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#4](~/add/codesnippet/csharp/p-system.activities.work_7_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationCompletedEventArgs> Completed { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationCompletedEventArgs}
      description: "工作流实例完成时调用的操作。"
  overload: System.Activities.WorkflowApplication.Completed*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  id: CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建使用指定的实例存储区、 定义标识和标识筛选器的工作流的默认实例所有者。"
  syntax:
    content: public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "工作流定义标识。"
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "标识筛选器。"
  overload: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  id: CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建使用指定的实例存储区、 定义标识和标识筛选器和超时间隔的工作流的默认实例所有者。"
  syntax:
    content: public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "工作流定义标识。"
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "标识筛选器。"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
  overload: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  id: DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: DeleteDefaultInstanceOwner(InstanceStore)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "删除指定的实例存储的工作流的默认实例所有者。"
  syntax:
    content: public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
  overload: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "删除指定的实例存储区和超时间隔的工作流的默认实例所有者..."
  syntax:
    content: public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
  overload: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: WorkflowApplication.EndCancel(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步取消操作完成。"
  remarks: "此方法可确定是否<xref:System.Activities.WorkflowApplication.BeginCancel%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginCancel%2A> 如果调用取消操作完成前，它被阻止，直至取消操作完成。       此方法完成异步取消操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndCancel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步取消操作。"
  overload: System.Activities.WorkflowApplication.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  id: EndCreateDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndCreateDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待要完成的默认实例所有者的创建。"
  syntax:
    content: public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "异步结果。"
  overload: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  id: EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndDeleteDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待要完成的默认实例所有者删除。"
  syntax:
    content: public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "异步结果。"
  overload: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  id: EndGetInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndGetInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待完成的实例检索。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "异步结果。"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "操作的结果。"
  overload: System.Activities.WorkflowApplication.EndGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  id: EndGetRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndGetRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待异步检索可运行实例操作完成。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "异步结果。"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "操作的结果。"
  overload: System.Activities.WorkflowApplication.EndGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  id: EndLoad(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndLoad(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoad(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoad(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步加载操作完成。"
  remarks: "如果在加载操作完成前调用此方法，它阻止，直至加载操作已完成。       此方法完成异步加载操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndLoad (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步加载操作。"
  overload: System.Activities.WorkflowApplication.EndLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  id: EndLoadRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndLoadRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待异步加载可运行实例操作完成。"
  remarks: "此方法可确定是否<xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> 如果在加载操作完成之前调用，它阻止，直至该操作已完成。       此方法加载工作流使用以异步方式<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndLoadRunnableInstance (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "对异步加载操作的引用。"
  overload: System.Activities.WorkflowApplication.EndLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  id: EndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.EndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步保留操作完成。"
  remarks: "此方法可确定是否<xref:System.Activities.WorkflowApplication.BeginPersist%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginPersist%2A> 如果保留操作完成前调用，它阻止，直至保留操作已完成。       此方法完成异步保留操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步保留操作。"
  overload: System.Activities.WorkflowApplication.EndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  id: EndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.EndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待书签恢复操作完成。"
  remarks: "此方法可确定是否<xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> 如果在加载操作完成之前调用，它阻止，直至该操作已完成。       此方法恢复书签以异步方式使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "对异步书签恢复操作的引用。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "指示书签恢复操作的结果的枚举值之一。"
  overload: System.Activities.WorkflowApplication.EndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  id: EndRun(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndRun(IAsyncResult)
  nameWithType: WorkflowApplication.EndRun(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndRun(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步运行操作完成。"
  remarks: "此方法可确定是否<xref:System.Activities.WorkflowApplication.BeginRun%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginRun%2A> 如果调用恢复操作完成前，，阻止，直至恢复操作已完成。       此方法完成异步运行的操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndRun (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步运行操作。"
  overload: System.Activities.WorkflowApplication.EndRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  id: EndTerminate(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndTerminate(IAsyncResult)
  nameWithType: WorkflowApplication.EndTerminate(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndTerminate(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步终止操作完成。"
  remarks: "可以调用此方法来确定是否<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 如果调用在终止操作完成前，，阻止，直至该操作已完成。       此方法完成异步<xref:System.Activities.WorkflowApplication.BeginTerminate%2A>操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndTerminate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步终止操作。"
  overload: System.Activities.WorkflowApplication.EndTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  id: EndUnload(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndUnload(IAsyncResult)
  nameWithType: WorkflowApplication.EndUnload(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndUnload(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "等待挂起的异步卸载操作完成。"
  remarks: "可以调用此方法来确定是否<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作成功。</xref:System.Activities.WorkflowApplication.BeginUnload%2A> 如果调用在卸载操作完成前，，阻止，直至该操作已完成。       此方法完成异步<xref:System.Activities.WorkflowApplication.BeginUnload%2A>操作使用<xref:System.IAsyncResult>异步设计模式。</xref:System.IAsyncResult> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][异步编程概述](http://go.microsoft.com/fwlink/?LinkId=141764)。"
  syntax:
    content: public void EndUnload (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "异步卸载操作。"
  overload: System.Activities.WorkflowApplication.EndUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Extensions
  id: Extensions
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
  fullName: System.Activities.WorkflowApplication.Extensions
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取当前的工作流实例的扩展的集合。"
  syntax:
    content: public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "对象的集合。"
  overload: System.Activities.WorkflowApplication.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetBookmarks
  id: GetBookmarks
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetBookmarks()
  nameWithType: WorkflowApplication.GetBookmarks()
  fullName: System.Activities.WorkflowApplication.GetBookmarks()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回的工作流实例的书签的集合。"
  remarks: "如果未在 30 秒内完成此操作<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, GetBookmarks is called. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWhat is your name?   \nBookmarkName: UserName - OwnerDisplayName: ReadLine  \nSteve  \nHello, Steve  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/m-system.activities.work_27_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#14](~/add/codesnippet/csharp/m-system.activities.work_27_2.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "工作流实例的书签的只读集合。"
  overload: System.Activities.WorkflowApplication.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  id: GetBookmarks(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetBookmarks(TimeSpan)
  nameWithType: WorkflowApplication.GetBookmarks(TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetBookmarks(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回使用指定的超时间隔的工作流实例的书签的集合。"
  remarks: ''
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWhat is your name?   \nBookmarkName: UserName - OwnerDisplayName: ReadLine  \nSteve  \nHello, Steve  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/m-system.activities.work_8_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#14](~/add/codesnippet/csharp/m-system.activities.work_8_2.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "此方法必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "工作流实例的书签的只读集合。"
  overload: System.Activities.WorkflowApplication.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  id: GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetInstance(Guid,InstanceStore)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索工作流实例使用指定的实例标识符和实例存储区。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "实例标识符。"
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "检索到的实例。"
  overload: System.Activities.WorkflowApplication.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetInstance(Guid,InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索工作流实例使用指定的实例标识符、 实例存储区和超时间隔。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "实例标识符。"
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限。"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "对异步操作的引用。"
  overload: System.Activities.WorkflowApplication.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  id: GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetRunnableInstance(InstanceStore)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索指定的实例存储的工作流的可运行实例。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "可运行实例。"
  overload: System.Activities.WorkflowApplication.GetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetRunnableInstance(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "检索指定的实例存储区和超时间隔的工作流的可运行实例。"
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "对保留状态的工作流应用程序的当前实例的访问权限"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "可运行实例。"
  overload: System.Activities.WorkflowApplication.GetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Id
  id: Id
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowApplication.Id
  fullName: System.Activities.WorkflowApplication.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取当前工作流应用程序实例的 128 位 GUID 标识符。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the Id value to the console.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#28](~/add/codesnippet/csharp/p-system.activities.work_3_1.cs)]"
  syntax:
    content: public override Guid Id { get; }
    return:
      type: System.Guid
      description: "将 128 位 GUID 标识符。"
  overload: System.Activities.WorkflowApplication.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Idle
  id: Idle
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Idle
  nameWithType: WorkflowApplication.Idle
  fullName: System.Activities.WorkflowApplication.Idle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置&lt;xref:System.Action%601&gt;当前的工作流实例进入空闲状态时调用。"
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the Idle handler of a <xref:System.Activities.WorkflowApplication> instance. In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`. This code example is based off of [How to: Run a Workflow](~/add/includes/ajax-current-ext-md.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/add/includes/ajax-current-ext-md.md). If the Idle handler in that step is modified to contain the code from this example, the following output is displayed.  \n  \n```Output  \nBookmarkName: EnterGuess - OwnerDisplayName: ReadInt  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#2](~/add/codesnippet/csharp/p-system.activities.work_14_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationIdleEventArgs> Idle { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationIdleEventArgs}
      description: "在工作流实例进入空闲状态时执行的操作。"
  overload: System.Activities.WorkflowApplication.Idle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.InstanceStore
  id: InstanceStore
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
  fullName: System.Activities.WorkflowApplication.InstanceStore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置一个对象，提供的工作流应用程序的当前实例保留状态的访问。"
  remarks: ''
  example:
  - "The following example creates a WorkflowApplication instance and then configures the InstanceStore using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This code example is part of [How to: Create and Run a Long Running Workflow](~/add/includes/ajax-current-ext-md.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CFX_WorkflowApplicationExample#28](~/add/codesnippet/csharp/p-system.activities.work_11_1.cs)]"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }
    return:
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "实例存储区。"
  overload: System.Activities.WorkflowApplication.InstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  id: Load(System.Activities.WorkflowApplicationInstance)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "与指定的实例从实例存储区加载工作流实例。"
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Guid)
  id: Load(System.Guid)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(Guid)
  nameWithType: WorkflowApplication.Load(Guid)
  fullName: System.Activities.WorkflowApplication.Load(Guid)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的工作流实例加载到从实例存储区的内存。"
  remarks: ''
  example:
  - "The following example calls Load to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#27](~/add/codesnippet/csharp/m-system.activities.work_14_1.cs)]"
  syntax:
    content: public void Load (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "工作流实例的全局唯一 128 位标识符。"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从与指定的实例和更新映射实例存储区加载工作流实例。"
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "更新映射。"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  id: Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从指定的实例和超时间隔与实例存储区加载工作流实例。"
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  id: Load(System.Guid,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(Guid,TimeSpan)
  nameWithType: WorkflowApplication.Load(Guid,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(Guid,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的工作流实例加载到从实例存储区中使用指定的超时间隔的内存。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#27](~/add/codesnippet/csharp/m-system.activities.work_11_1.cs)]"
  syntax:
    content: public void Load (Guid instanceId, TimeSpan timeout);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "工作流实例的全局唯一 128 位标识符。"
    - id: timeout
      type: System.TimeSpan
      description: "在加载操作必须在其间完成取消加载操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  id: Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从实例存储区加载工作流实例与指定的实例，更新映射和超时间隔。"
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "实例。"
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "更新映射。"
    - id: timeout
      type: System.TimeSpan
      description: "开始加载操作必须在其中完成之前将取消该操作的时间间隔。"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance
  id: LoadRunnableInstance
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: LoadRunnableInstance()
  nameWithType: WorkflowApplication.LoadRunnableInstance()
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "从<xref:System.Activities.WorkflowApplication.InstanceStore*>.</xref:System.Activities.WorkflowApplication.InstanceStore*>加载可运行工作流实例"
  remarks: "可运行实例是为其计时器或实例锁已过期。       默认情况下，完成加载操作必须在 30 秒内或<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  syntax:
    content: public void LoadRunnableInstance ();
    parameters: []
  overload: System.Activities.WorkflowApplication.LoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  id: LoadRunnableInstance(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: LoadRunnableInstance(TimeSpan)
  nameWithType: WorkflowApplication.LoadRunnableInstance(TimeSpan)
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "加载可运行工作流实例从<xref:System.Activities.WorkflowApplication.InstanceStore*>使用指定的超时间隔。</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "可运行实例是为其计时器或实例锁已过期。"
  syntax:
    content: public void LoadRunnableInstance (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "在加载操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.LoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "要添加。"
    - id: callback
      type: System.AsyncCallback
      description: "要添加。"
    - id: state
      type: System.Object
      description: "要添加。"
    return:
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要添加。"
    - id: state
      type: System.Object
      description: "要添加。"
    return:
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "要添加。"
    - id: value
      type: System.Object
      description: "要添加。"
    - id: timeout
      type: System.TimeSpan
      description: "要添加。"
    - id: callback
      type: System.AsyncCallback
      description: "要添加。"
    - id: state
      type: System.Object
      description: "要添加。"
    return:
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "要添加。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowApplication.OnNotifyPaused()
  fullName: System.Activities.WorkflowApplication.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.WorkflowApplication.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "要添加。"
    - id: exceptionSource
      type: System.Activities.Activity
      description: "要添加。"
    - id: exceptionSourceInstanceId
      type: System.String
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowApplication.OnRequestAbort(Exception)
  fullName: System.Activities.WorkflowApplication.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnUnhandledException
  id: OnUnhandledException
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
  fullName: System.Activities.WorkflowApplication.OnUnhandledException
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置&lt;xref:System.Func%602&gt;当前的工作流实例遇到未经处理的异常时调用。"
  remarks: "这两个工作和<xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>都运行时的行为将指示工作流; 中未处理异常时但是，<xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>具有将挂起的工作流保留在持久性存储中，而工作不选项。</xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> </xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> 这样做的原因是，挂起的工作流会发生什么情况是特定于宿主的和<xref:System.Activities.WorkflowApplication>不是。</xref:System.Activities.WorkflowApplication> 若要实现此功能使用<xref:System.Activities.WorkflowApplication>，创建自定义<xref:System.Activities.Persistence.PersistenceParticipant>具有此行为。</xref:System.Activities.Persistence.PersistenceParticipant> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the OnUnhandledException handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/p-system.activities.work_10_1.cs)]"
  syntax:
    content: public Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction> OnUnhandledException { get; set; }
    return:
      type: System.Func{System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction}
      description: "用于工作流实例遇到未经处理的异常时调用的委托。"
  overload: System.Activities.WorkflowApplication.OnUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Persist
  id: Persist
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Persist()
  nameWithType: WorkflowApplication.Persist()
  fullName: System.Activities.WorkflowApplication.Persist()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将工作流实例保留到实例存储区。"
  remarks: "如果未在 30 秒内完成保留操作<xref:System.TimeoutException>引发。</xref:System.TimeoutException>       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following example calls Persist to persist a workflow instance before the workflow is started. This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#34](~/add/codesnippet/csharp/m-system.activities.work_0_1.cs)]"
  syntax:
    content: public void Persist ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  id: Persist(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Persist(TimeSpan)
  nameWithType: WorkflowApplication.Persist(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Persist(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将工作流实例保留到实例存储区中使用指定的超时间隔。"
  remarks: "如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started. This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#34](~/add/codesnippet/csharp/m-system.activities.work_13_1.cs)]"
  syntax:
    content: public void Persist (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "保留操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.PersistableIdle
  id: PersistableIdle
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
  fullName: System.Activities.WorkflowApplication.PersistableIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置<xref:System.Activities.ActivityFunc>当前的工作流实例处于空闲状态，并可被保留时调用。</xref:System.Activities.ActivityFunc>"
  remarks: "当工作流进入空闲状态，并可被保留，同时<xref:System.Activities.WorkflowApplication.Idle%2A>和调用 PersistableIdle，按此顺序。</xref:System.Activities.WorkflowApplication.Idle%2A> PersistableIdle 处理程序返回的一个<xref:System.Activities.PersistableIdleAction>枚举值<xref:System.Activities.PersistableIdleAction>， <xref:System.Activities.PersistableIdleAction>，或<xref:System.Activities.PersistableIdleAction>。</xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction>"
  example:
  - "The following example handles the PersistableIdle handler and instructs the runtime to persist and unload the workflow.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#26](~/add/codesnippet/csharp/p-system.activities.work_0_1.cs)]"
  syntax:
    content: public Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction> PersistableIdle { get; set; }
    return:
      type: System.Func{System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction}
      description: "<xref:System.Activities.ActivityFunc>当前的工作流实例处于空闲状态，并可被保留时调用。</xref:System.Activities.ActivityFunc>"
  overload: System.Activities.WorkflowApplication.PersistableIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  id: ResumeBookmark(System.Activities.Bookmark,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(Bookmark,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复指定的书签，使用指定的值。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/84810d78-26f4-4322-9177-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#24](~/add/codesnippet/csharp/84810d78-26f4-4322-9177-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "要恢复的书签。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  id: ResumeBookmark(System.String,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(String,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复具有指定名称，使用指定的值的书签。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/9a23a0e0-449b-442b-9754-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#22](~/add/codesnippet/csharp/9a23a0e0-449b-442b-9754-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "要恢复的书签的名称。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  id: ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(Bookmark,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复指定的书签，使用指定的值和超时间隔。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/b4838449-fded-4383-bd62-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#25](~/add/codesnippet/csharp/b4838449-fded-4383-bd62-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "要恢复的书签。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: timeout
      type: System.TimeSpan
      description: "必须在此期间恢复书签的时间间隔。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  id: ResumeBookmark(System.String,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(String,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "启动操作以恢复具有指定名称，使用指定的值和超时间隔的书签。 要恢复的书签是此前由工作流实例内的活动创建。"
  remarks: "书签结果指示恢复操作是否成功。"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/13944cca-055e-4dce-9b17-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#22](~/add/codesnippet/csharp/13944cca-055e-4dce-9b17-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "要恢复的书签的名称。"
    - id: value
      type: System.Object
      description: "一个对象作为参数传递给书签恢复时所调用的方法。"
    - id: timeout
      type: System.TimeSpan
      description: "必须在此期间恢复书签的时间间隔。"
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "书签恢复操作的结果。"
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Run
  id: Run
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Run()
  nameWithType: WorkflowApplication.Run()
  fullName: System.Activities.WorkflowApplication.Run()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "开始或恢复工作流实例的执行。"
  remarks: "调用此方法以开始执行新创建的工作流实例。       如果运行的操作未在 30 秒内完成<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to Run. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/m-system.activities.work_5_1.cs)]"
  syntax:
    content: public void Run ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Run*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Run(System.TimeSpan)
  id: Run(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Run(TimeSpan)
  nameWithType: WorkflowApplication.Run(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Run(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "开始或恢复工作流实例使用指定的超时间隔执行。"
  remarks: "请注意，与不同<xref:System.Activities.WorkflowInvoker.Invoke%2A>，此方法会超时，仅当工作流不能启动在指定的时间量，而无需在指定的时间内完成。</xref:System.Activities.WorkflowInvoker.Invoke%2A> 这样做的原因在于<xref:System.Activities.WorkflowInvoker.Invoke%2A>以同步方式执行工作流 （阻止宿主线程），运行以异步方式执行仅阻止宿主线程时间的同时，它采用启动工作流。</xref:System.Activities.WorkflowInvoker.Invoke%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/m-system.activities.work_20_1.cs)]"
  syntax:
    content: public void Run (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "调用此方法以开始执行新创建的工作流实例。       运行的操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Run*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
  fullName: System.Activities.WorkflowApplication.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Activities.WorkflowApplication.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception)
  id: Terminate(System.Exception)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(Exception)
  nameWithType: WorkflowApplication.Terminate(Exception)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的异常。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       默认情况下，终止操作必须完成在 30 秒内或<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  \nException: System.ApplicationException  \nTerminating the workflow.   \nWorkflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#16](~/add/codesnippet/csharp/m-system.activities.work_9_1.cs)]"
  syntax:
    content: public void Terminate (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "终止工作流实例的原因。"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.String)
  id: Terminate(System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(String)
  nameWithType: WorkflowApplication.Terminate(String)
  fullName: System.Activities.WorkflowApplication.Terminate(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的错误消息。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       默认情况下，终止操作必须完成在 30 秒内或<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   \nException: System.Activities.WorkflowApplicationTerminatedException  \nTerminating the workflow.   \nWorkflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#18](~/add/codesnippet/csharp/m-system.activities.work_19_1.cs)]"
  syntax:
    content: public void Terminate (string reason);
    parameters:
    - id: reason
      type: System.String
      description: "终止工作流实例的原因。"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  id: Terminate(System.Exception,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(Exception,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(Exception,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的异常和超时间隔。"
  remarks: "此方法会安排工作流终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  \nException: System.ApplicationException  \nTerminating the workflow.   \nWorkflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#17](~/add/codesnippet/csharp/93b3dd11-f70a-4d21-82ce-_1.cs)]"
  syntax:
    content: public void Terminate (Exception reason, TimeSpan timeout);
    parameters:
    - id: reason
      type: System.Exception
      description: "终止工作流实例的原因。"
    - id: timeout
      type: System.TimeSpan
      description: "将取消该操作并，终止操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  id: Terminate(System.String,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(String,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(String,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(String,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "终止工作流实例使用指定的错误消息和超时间隔。"
  remarks: "此方法会安排对工作流实例终止。 若要得到通知在终止完成后，使用<xref:System.Activities.WorkflowApplication.OnCompleted%2A>处理。</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   \nException: System.Activities.WorkflowApplicationTerminatedException  \nTerminating the workflow.   \nWorkflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#19](~/add/codesnippet/csharp/m-system.activities.work_7_1.cs)]"
  syntax:
    content: public void Terminate (string reason, TimeSpan timeout);
    parameters:
    - id: reason
      type: System.String
      description: "终止工作流实例的原因。"
    - id: timeout
      type: System.TimeSpan
      description: "将取消该操作并，终止操作必须完成的时间间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unload
  id: Unload
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unload()
  nameWithType: WorkflowApplication.Unload()
  fullName: System.Activities.WorkflowApplication.Unload()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "保留和卸载工作流实例。"
  remarks: "默认情况下，卸载操作必须完成在 30 秒内或<xref:System.TimeoutException>引发。</xref:System.TimeoutException>       如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following code example is part of the [NoPersistScope Activity](~/add/includes/ajax-current-ext-md.md) sample. In this example, the workflow is idle and the host application is waiting for user input. If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called. If successful, the workflow is persisted and unloaded from memory.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#20](~/add/codesnippet/csharp/m-system.activities.work_23_1.cs)]"
  syntax:
    content: public void Unload ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Unload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  id: Unload(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unload(TimeSpan)
  nameWithType: WorkflowApplication.Unload(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Unload(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "保留和卸载工作流实例使用指定的超时间隔。"
  remarks: "如果工作流实例以前从持久性，则相同加载<xref:System.Runtime.DurableInstancing.InstanceStore>用于加载工作流将用于保留结果。</xref:System.Runtime.DurableInstancing.InstanceStore> 如果工作流已创建但未保留，则<xref:System.Activities.WorkflowApplication.InstanceStore%2A>必须在调用此方法之前配置或其他<xref:System.InvalidOperationException>调用此方法时引发。</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following code example is part of the [NoPersistScope Activity](~/add/includes/ajax-current-ext-md.md) sample. In this example, the workflow is idle and the host application is waiting for user input. If the user chooses to unload, Unload is called. If successful, the workflow is persisted and unloaded from memory.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#20](~/add/codesnippet/csharp/m-system.activities.work_26_1.cs)]"
  syntax:
    content: public void Unload (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "卸载操作必须在其间完成取消操作并的间隔<xref:System.TimeoutException>引发。</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Unload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unloaded
  id: Unloaded
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
  fullName: System.Activities.WorkflowApplication.Unloaded
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置&lt;xref:System.Action%601&gt;卸载当前工作流时调用。"
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the Unloaded handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#3](~/add/codesnippet/csharp/p-system.activities.work_12_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationEventArgs> Unloaded { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationEventArgs}
      description: "卸载工作流实例时调用的操作。"
  overload: System.Activities.WorkflowApplication.Unloaded*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: System.Activities.Hosting.WorkflowInstance
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,IDictionary<String,Object>)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
- uid: System.Activities.WorkflowApplication.Abort
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort()
  nameWithType: WorkflowApplication.Abort()
  fullName: System.Activities.WorkflowApplication.Abort()
- uid: System.Activities.WorkflowApplication.Abort(System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort(String)
  nameWithType: WorkflowApplication.Abort(String)
  fullName: System.Activities.WorkflowApplication.Abort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.WorkflowApplication.Aborted
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
  fullName: System.Activities.WorkflowApplication.Aborted
- uid: System.Action{System.Activities.WorkflowApplicationAbortedEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationAbortedEventArgs>
  nameWithType: Action<WorkflowApplicationAbortedEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationAbortedEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationAbortedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationAbortedEventArgs
    name: WorkflowApplicationAbortedEventArgs
    nameWithType: WorkflowApplicationAbortedEventArgs
    fullName: WorkflowApplicationAbortedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: AddInitialInstanceValues(IDictionary<XName,Object>)
  nameWithType: WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  fullName: System.Activities.WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,Object>
  nameWithType: IDictionary<XName,Object>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
- uid: System.Activities.WorkflowIdentityFilter
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentityFilter
  nameWithType: WorkflowIdentityFilter
  fullName: System.Activities.WorkflowIdentityFilter
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplicationInstance
  parent: System.Activities
  isExternal: false
  name: WorkflowApplicationInstance
  nameWithType: WorkflowApplicationInstance
  fullName: System.Activities.WorkflowApplicationInstance
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(Guid,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(String,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(Exception,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(String,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.Cancel
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel()
  nameWithType: WorkflowApplication.Cancel()
  fullName: System.Activities.WorkflowApplication.Cancel()
- uid: System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel(TimeSpan)
  nameWithType: WorkflowApplication.Cancel(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Cancel(TimeSpan)
- uid: System.Activities.WorkflowApplication.Completed
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Completed
  nameWithType: WorkflowApplication.Completed
  fullName: System.Activities.WorkflowApplication.Completed
- uid: System.Action{System.Activities.WorkflowApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationCompletedEventArgs>
  nameWithType: Action<WorkflowApplicationCompletedEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationCompletedEventArgs
    name: WorkflowApplicationCompletedEventArgs
    nameWithType: WorkflowApplicationCompletedEventArgs
    fullName: WorkflowApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner(InstanceStore)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: WorkflowApplication.EndCancel(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCancel(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCreateDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndDeleteDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoad(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoad(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoad(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoadRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.EndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndPersist(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.EndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndRun(IAsyncResult)
  nameWithType: WorkflowApplication.EndRun(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndRun(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndTerminate(IAsyncResult)
  nameWithType: WorkflowApplication.EndTerminate(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndTerminate(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndUnload(IAsyncResult)
  nameWithType: WorkflowApplication.EndUnload(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndUnload(IAsyncResult)
- uid: System.Activities.WorkflowApplication.Extensions
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
  fullName: System.Activities.WorkflowApplication.Extensions
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.WorkflowApplication.GetBookmarks
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks()
  nameWithType: WorkflowApplication.GetBookmarks()
  fullName: System.Activities.WorkflowApplication.GetBookmarks()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BookmarkInfo>
  nameWithType: ReadOnlyCollection<BookmarkInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Hosting.BookmarkInfo
    name: BookmarkInfo
    nameWithType: BookmarkInfo
    fullName: BookmarkInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks(TimeSpan)
  nameWithType: WorkflowApplication.GetBookmarks(TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetBookmarks(TimeSpan)
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance(Guid,InstanceStore)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore)
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance(Guid,InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance(InstanceStore)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore)
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.Id
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Id
  nameWithType: WorkflowApplication.Id
  fullName: System.Activities.WorkflowApplication.Id
- uid: System.Activities.WorkflowApplication.Idle
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Idle
  nameWithType: WorkflowApplication.Idle
  fullName: System.Activities.WorkflowApplication.Idle
- uid: System.Action{System.Activities.WorkflowApplicationIdleEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationIdleEventArgs>
  nameWithType: Action<WorkflowApplicationIdleEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationIdleEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationIdleEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationIdleEventArgs
    name: WorkflowApplicationIdleEventArgs
    nameWithType: WorkflowApplicationIdleEventArgs
    fullName: WorkflowApplicationIdleEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.InstanceStore
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
  fullName: System.Activities.WorkflowApplication.InstanceStore
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance)
- uid: System.Activities.WorkflowApplication.Load(System.Guid)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(Guid)
  nameWithType: WorkflowApplication.Load(Guid)
  fullName: System.Activities.WorkflowApplication.Load(Guid)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
- uid: System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(Guid,TimeSpan)
  nameWithType: WorkflowApplication.Load(Guid,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(Guid,TimeSpan)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance()
  nameWithType: WorkflowApplication.LoadRunnableInstance()
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance()
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance(TimeSpan)
  nameWithType: WorkflowApplication.LoadRunnableInstance(TimeSpan)
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance(TimeSpan)
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndPersist(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnNotifyPaused
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowApplication.OnNotifyPaused()
  fullName: System.Activities.WorkflowApplication.OnNotifyPaused()
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowApplication.OnRequestAbort(Exception)
  fullName: System.Activities.WorkflowApplication.OnRequestAbort(Exception)
- uid: System.Activities.WorkflowApplication.OnUnhandledException
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
  fullName: System.Activities.WorkflowApplication.OnUnhandledException
- uid: System.Func{System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction}
  parent: System
  isExternal: true
  name: Func<WorkflowApplicationUnhandledExceptionEventArgs,UnhandledExceptionAction>
  nameWithType: Func<WorkflowApplicationUnhandledExceptionEventArgs,UnhandledExceptionAction>
  fullName: System.Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs
    name: WorkflowApplicationUnhandledExceptionEventArgs
    nameWithType: WorkflowApplicationUnhandledExceptionEventArgs
    fullName: WorkflowApplicationUnhandledExceptionEventArgs
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.UnhandledExceptionAction
    name: UnhandledExceptionAction
    nameWithType: UnhandledExceptionAction
    fullName: UnhandledExceptionAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.Persist
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist()
  nameWithType: WorkflowApplication.Persist()
  fullName: System.Activities.WorkflowApplication.Persist()
- uid: System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist(TimeSpan)
  nameWithType: WorkflowApplication.Persist(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Persist(TimeSpan)
- uid: System.Activities.WorkflowApplication.PersistableIdle
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
  fullName: System.Activities.WorkflowApplication.PersistableIdle
- uid: System.Func{System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction}
  parent: System
  isExternal: true
  name: Func<WorkflowApplicationIdleEventArgs,PersistableIdleAction>
  nameWithType: Func<WorkflowApplicationIdleEventArgs,PersistableIdleAction>
  fullName: System.Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationIdleEventArgs
    name: WorkflowApplicationIdleEventArgs
    nameWithType: WorkflowApplicationIdleEventArgs
    fullName: WorkflowApplicationIdleEventArgs
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.PersistableIdleAction
    name: PersistableIdleAction
    nameWithType: PersistableIdleAction
    fullName: PersistableIdleAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(Bookmark,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(String,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(Bookmark,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(String,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
- uid: System.Activities.WorkflowApplication.Run
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run()
  nameWithType: WorkflowApplication.Run()
  fullName: System.Activities.WorkflowApplication.Run()
- uid: System.Activities.WorkflowApplication.Run(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run(TimeSpan)
  nameWithType: WorkflowApplication.Run(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Run(TimeSpan)
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
  fullName: System.Activities.WorkflowApplication.SupportsInstanceKeys
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(Exception)
  nameWithType: WorkflowApplication.Terminate(Exception)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception)
- uid: System.Activities.WorkflowApplication.Terminate(System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(String)
  nameWithType: WorkflowApplication.Terminate(String)
  fullName: System.Activities.WorkflowApplication.Terminate(String)
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(Exception,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(Exception,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception,TimeSpan)
- uid: System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(String,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(String,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(String,TimeSpan)
- uid: System.Activities.WorkflowApplication.Unload
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload()
  nameWithType: WorkflowApplication.Unload()
  fullName: System.Activities.WorkflowApplication.Unload()
- uid: System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload(TimeSpan)
  nameWithType: WorkflowApplication.Unload(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Unload(TimeSpan)
- uid: System.Activities.WorkflowApplication.Unloaded
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
  fullName: System.Activities.WorkflowApplication.Unloaded
- uid: System.Action{System.Activities.WorkflowApplicationEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationEventArgs>
  nameWithType: Action<WorkflowApplicationEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationEventArgs
    name: WorkflowApplicationEventArgs
    nameWithType: WorkflowApplicationEventArgs
    fullName: WorkflowApplicationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.#ctor*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication
  nameWithType: WorkflowApplication.WorkflowApplication
- uid: System.Activities.WorkflowApplication.Abort*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort
  nameWithType: WorkflowApplication.Abort
- uid: System.Activities.WorkflowApplication.Aborted*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: AddInitialInstanceValues
  nameWithType: WorkflowApplication.AddInitialInstanceValues
- uid: System.Activities.WorkflowApplication.BeginCancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel
  nameWithType: WorkflowApplication.BeginCancel
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.BeginGetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance
  nameWithType: WorkflowApplication.BeginGetInstance
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance
  nameWithType: WorkflowApplication.BeginGetRunnableInstance
- uid: System.Activities.WorkflowApplication.BeginLoad*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad
  nameWithType: WorkflowApplication.BeginLoad
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance
- uid: System.Activities.WorkflowApplication.BeginPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist
  nameWithType: WorkflowApplication.BeginPersist
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark
  nameWithType: WorkflowApplication.BeginResumeBookmark
- uid: System.Activities.WorkflowApplication.BeginRun*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun
  nameWithType: WorkflowApplication.BeginRun
- uid: System.Activities.WorkflowApplication.BeginTerminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate
  nameWithType: WorkflowApplication.BeginTerminate
- uid: System.Activities.WorkflowApplication.BeginUnload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload
  nameWithType: WorkflowApplication.BeginUnload
- uid: System.Activities.WorkflowApplication.Cancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel
  nameWithType: WorkflowApplication.Cancel
- uid: System.Activities.WorkflowApplication.Completed*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Completed
  nameWithType: WorkflowApplication.Completed
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndCancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCancel
  nameWithType: WorkflowApplication.EndCancel
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndDeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndGetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetInstance
  nameWithType: WorkflowApplication.EndGetInstance
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetRunnableInstance
  nameWithType: WorkflowApplication.EndGetRunnableInstance
- uid: System.Activities.WorkflowApplication.EndLoad*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoad
  nameWithType: WorkflowApplication.EndLoad
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoadRunnableInstance
  nameWithType: WorkflowApplication.EndLoadRunnableInstance
- uid: System.Activities.WorkflowApplication.EndPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndPersist
  nameWithType: WorkflowApplication.EndPersist
- uid: System.Activities.WorkflowApplication.EndResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndResumeBookmark
  nameWithType: WorkflowApplication.EndResumeBookmark
- uid: System.Activities.WorkflowApplication.EndRun*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndRun
  nameWithType: WorkflowApplication.EndRun
- uid: System.Activities.WorkflowApplication.EndTerminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndTerminate
  nameWithType: WorkflowApplication.EndTerminate
- uid: System.Activities.WorkflowApplication.EndUnload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndUnload
  nameWithType: WorkflowApplication.EndUnload
- uid: System.Activities.WorkflowApplication.Extensions*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
- uid: System.Activities.WorkflowApplication.GetBookmarks*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks
  nameWithType: WorkflowApplication.GetBookmarks
- uid: System.Activities.WorkflowApplication.GetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance
  nameWithType: WorkflowApplication.GetInstance
- uid: System.Activities.WorkflowApplication.GetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance
  nameWithType: WorkflowApplication.GetRunnableInstance
- uid: System.Activities.WorkflowApplication.Id*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Id
  nameWithType: WorkflowApplication.Id
- uid: System.Activities.WorkflowApplication.Idle*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Idle
  nameWithType: WorkflowApplication.Idle
- uid: System.Activities.WorkflowApplication.InstanceStore*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
- uid: System.Activities.WorkflowApplication.Load*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load
  nameWithType: WorkflowApplication.Load
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance
  nameWithType: WorkflowApplication.LoadRunnableInstance
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowApplication.OnBeginAssociateKeys
- uid: System.Activities.WorkflowApplication.OnBeginPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowApplication.OnBeginPersist
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowApplication.OnBeginResumeBookmark
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowApplication.OnDisassociateKeys
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowApplication.OnEndAssociateKeys
- uid: System.Activities.WorkflowApplication.OnEndPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowApplication.OnEndPersist
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowApplication.OnEndResumeBookmark
- uid: System.Activities.WorkflowApplication.OnNotifyPaused*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowApplication.OnNotifyPaused
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowApplication.OnNotifyUnhandledException
- uid: System.Activities.WorkflowApplication.OnRequestAbort*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowApplication.OnRequestAbort
- uid: System.Activities.WorkflowApplication.OnUnhandledException*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
- uid: System.Activities.WorkflowApplication.Persist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist
  nameWithType: WorkflowApplication.Persist
- uid: System.Activities.WorkflowApplication.PersistableIdle*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
- uid: System.Activities.WorkflowApplication.ResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark
  nameWithType: WorkflowApplication.ResumeBookmark
- uid: System.Activities.WorkflowApplication.Run*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run
  nameWithType: WorkflowApplication.Run
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
- uid: System.Activities.WorkflowApplication.Terminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate
  nameWithType: WorkflowApplication.Terminate
- uid: System.Activities.WorkflowApplication.Unload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload
  nameWithType: WorkflowApplication.Unload
- uid: System.Activities.WorkflowApplication.Unloaded*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
