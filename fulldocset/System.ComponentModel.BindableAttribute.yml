### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.BindableAttribute
  id: BindableAttribute
  children:
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.Bindable
  - System.ComponentModel.BindableAttribute.Default
  - System.ComponentModel.BindableAttribute.Direction
  - System.ComponentModel.BindableAttribute.Equals(System.Object)
  - System.ComponentModel.BindableAttribute.GetHashCode
  - System.ComponentModel.BindableAttribute.IsDefaultAttribute
  - System.ComponentModel.BindableAttribute.No
  - System.ComponentModel.BindableAttribute.Yes
  langs:
  - csharp
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
  type: Class
  summary: "指定是否成员通常用于绑定。 此类不能被继承。"
  remarks: "你可以为多个成员，通常是属性，在控件上指定此属性。       如果设置为 BindableAttribute 与标记的属性`true`，则应为该属性引发属性更改通知。 这意味着，如果<xref:System.ComponentModel.BindableAttribute.Bindable%2A>属性是<xref:System.ComponentModel.BindableAttribute.Yes>，则支持双向数据绑定。</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.Bindable%2A> 如果<xref:System.ComponentModel.BindableAttribute.Bindable%2A>是<xref:System.ComponentModel.BindableAttribute.No>，仍可以绑定到属性，但它应不会显示在默认的属性集以将绑定到，因为它可能或可能不会引发属性更改通知。</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.Bindable%2A>      1> [!NOTE]&1;> 标记与某个属性时<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>设置为`true`，此属性的值设置为常量成员<xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> 为某一属性标记与<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>设置为`false`，值为<xref:System.ComponentModel.BindableAttribute.No>。</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> 因此，若要检查在代码中的此属性的值，你必须指定该属性为<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>或<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>      1> [!CAUTION]&1;> 只能在设计时，可以使用此属性。 你可以随意从绑定到任何属性在运行时。       有关详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example marks a property as appropriate to bind data to.  \n  \n [!code-cs[Classic BindableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._142_1.cs)]\n [!code-vb[Classic BindableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._142_1.vb)]\n [!code-cpp[Classic BindableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._142_1.cpp)]  \n  \n The next code example shows how to check the value of the BindableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Finally, the code returns the attributes for this property and saves them in the attributes variable. The code example presents two different ways to check the value of the BindableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._142_2.cs)]\n [!code-vb[Classic BindableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._142_2.vb)]\n [!code-cpp[Classic BindableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._142_2.cpp)]  \n  \n If you marked a class with the BindableAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._142_3.cs)]\n [!code-vb[Classic BindableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._142_3.vb)]\n [!code-cpp[Classic BindableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._142_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class BindableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>的布尔值的类。"
  remarks: "标记与某个属性时<xref:System.ComponentModel.BindableAttribute>设置为`true`，此属性的值设置为常量成员<xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> 为某一属性标记与<xref:System.ComponentModel.BindableAttribute>设置为`false`，值为<xref:System.ComponentModel.BindableAttribute.No>。</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> 因此，若要检查在代码中的此属性的值，你必须指定该属性为<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>或<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cs[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._14_1.cs)]\n [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._14_1.vb)]\n [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._14_1.cpp)]"
  syntax:
    content: public BindableAttribute (bool bindable);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要用于绑定; 的属性否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  id: '#ctor(System.ComponentModel.BindableSupport)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>类之一<xref href=&quot;System.ComponentModel.BindableSupport&quot;></xref>值。"
  remarks: "标记与某个属性时<xref:System.ComponentModel.BindableAttribute>设置为`true`，此属性的值设置为常量成员<xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> 为某一属性标记与<xref:System.ComponentModel.BindableAttribute>设置为`false`，值为<xref:System.ComponentModel.BindableAttribute.No>。</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> 因此，若要检查在代码中的此属性的值，你必须指定该属性为<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>或<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/cpp/f23f7ef8-7d45-4e98-96fc-_1.cpp)]\n [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/visualbasic/f23f7ef8-7d45-4e98-96fc-_1.vb)]\n [!code-cs[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/csharp/f23f7ef8-7d45-4e98-96fc-_1.cs)]"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "之一<xref href=&quot;System.ComponentModel.BindableSupport&quot;></xref>值。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  id: '#ctor(System.Boolean,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>类。"
  syntax:
    content: public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要用于绑定; 的属性否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "之一<xref href=&quot;System.ComponentModel.BindingDirection&quot;></xref>值。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  id: '#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>类。"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "之一<xref href=&quot;System.ComponentModel.BindableSupport&quot;></xref>值。"
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "之一<xref href=&quot;System.ComponentModel.BindingDirection&quot;></xref>值。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Bindable
  id: Bindable
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值属性通常用于绑定。"
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BindableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \n  \n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see  \n  \n [Assembly Names](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._3_1.cs)]\n [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._3_1.cpp)]\n [!code-vb[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._3_1.vb)]"
  syntax:
    content: public bool Bindable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性通常用于绑定;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.BindableAttribute.Bindable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Default
  id: Default
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的默认值为<xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>，即<xref href=&quot;System.ComponentModel.BindableAttribute.No&quot;> </xref>。 此字段为只读的。"
  remarks: "当将此值，<xref:System.ComponentModel.BindableAttribute>设置为常量成员<xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute></xref:System.ComponentModel.BindableAttribute>属性的标记 因此，当你想要检查是否将该属性设置为你的代码中的此值，你必须指定该属性作为<xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Default;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Direction
  id: Direction
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值的方向或此属性的数据绑定的说明。"
  syntax:
    content: public System.ComponentModel.BindingDirection Direction { get; }
    return:
      type: System.ComponentModel.BindingDirection
      description: "此属性的数据绑定的方向。"
  overload: System.ComponentModel.BindableAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定两个<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>对象是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>等同于当前<xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>是否不相等。"
  overload: System.ComponentModel.BindableAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "用作哈希函数<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>类。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的哈希代码<xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>。"
  overload: System.ComponentModel.BindableAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定此属性是否为默认值。"
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是为该属性类; 默认值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.No
  id: No
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定不通常使用绑定属性。 此字段为只读的。"
  remarks: "无字段是<xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>的默认设置       标记与某个属性时<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>构造函数的值的`false,`此属性的值设置为常量成员否。</xref:System.ComponentModel.BindableAttribute.%23ctor%2A> 因此，若要检查是否将属性设置为你的代码中的此值，你必须指定该属性为否。"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute No;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定属性通常用于绑定。 此字段为只读的。"
  remarks: "标记与某个属性时<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>构造函数的值的`true`的值<xref:System.ComponentModel.BindableAttribute>被设置为常量的成员是。</xref:System.ComponentModel.BindableAttribute> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> 因此，若要检查是否将属性设置为你的代码中的此值，你必须为是指定属性。"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Yes;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
- uid: System.ComponentModel.BindableSupport
  parent: System.ComponentModel
  isExternal: false
  name: BindableSupport
  nameWithType: BindableSupport
  fullName: System.ComponentModel.BindableSupport
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
- uid: System.ComponentModel.BindingDirection
  parent: System.ComponentModel
  isExternal: false
  name: BindingDirection
  nameWithType: BindingDirection
  fullName: System.ComponentModel.BindingDirection
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
- uid: System.ComponentModel.BindableAttribute.Bindable
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Default
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
- uid: System.ComponentModel.BindableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Direction
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.BindableAttribute.No
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
- uid: System.ComponentModel.BindableAttribute.Yes
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
- uid: System.ComponentModel.BindableAttribute.#ctor*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Bindable*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Direction*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals
  nameWithType: BindableAttribute.Equals
- uid: System.ComponentModel.BindableAttribute.GetHashCode*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: BindableAttribute.GetHashCode
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: BindableAttribute.IsDefaultAttribute
