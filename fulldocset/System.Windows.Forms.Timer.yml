### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Timer
  id: Timer
  children:
  - System.Windows.Forms.Timer.#ctor
  - System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.Timer.Dispose(System.Boolean)
  - System.Windows.Forms.Timer.Enabled
  - System.Windows.Forms.Timer.Interval
  - System.Windows.Forms.Timer.OnTick(System.EventArgs)
  - System.Windows.Forms.Timer.Start
  - System.Windows.Forms.Timer.Stop
  - System.Windows.Forms.Timer.Tag
  - System.Windows.Forms.Timer.Tick
  - System.Windows.Forms.Timer.ToString
  langs:
  - csharp
  name: Timer
  nameWithType: Timer
  fullName: System.Windows.Forms.Timer
  type: Class
  summary: "实现在用户定义的时间间隔引发事件的计时器。 此计时器最宜用于 Windows 窗体应用程序，并且必须在窗口中使用。"
  remarks: "计时器用于在用户定义的时间间隔引发事件。 此 Windows 计时器专为使用 UI 线程来执行处理的单线程方式的环境。 此过程要求用户代码有一个可用的用户界面消息泵，并始终从相同线程中，运行或到另一个线程的调用封送。       当你使用此计时器时，使用<xref:System.Windows.Forms.Timer.Tick>事件以执行轮询操作也可为指定的时间段显示初始屏幕。</xref:System.Windows.Forms.Timer.Tick> 每当<xref:System.Windows.Forms.Timer.Enabled%2A>属性设置为`true`和<xref:System.Windows.Forms.Timer.Interval%2A>属性是大于零，<xref:System.Windows.Forms.Timer.Tick>时间间隔基于引发事件<xref:System.Windows.Forms.Timer.Interval%2A>属性设置。</xref:System.Windows.Forms.Timer.Interval%2A> </xref:System.Windows.Forms.Timer.Tick> </xref:System.Windows.Forms.Timer.Interval%2A> </xref:System.Windows.Forms.Timer.Enabled%2A>       此类提供方法设置的时间间隔，还可以启动和停止计时器。      1> [!NOTE] 1> Windows 窗体 Timer 组件是单线程的且最多 55 毫秒的准确性。 如果需要更准确地多线程的计时器，使用<xref:System.Timers.Timer>类<xref:System.Timers>命名空间。</xref:System.Timers> </xref:System.Timers.Timer>"
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/t-system.windows.forms.t_2_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_2_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/t-system.windows.forms.t_2_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Tick")]

      [System.ComponentModel.DefaultProperty("Interval")]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      public class Timer : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Timer.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Windows.Forms.Timer.Timer()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>类。"
  remarks: "当创建一个新的计时器时，就会禁用;也就是说，<xref:System.Windows.Forms.Timer.Enabled%2A>设置为`false`。</xref:System.Windows.Forms.Timer.Enabled%2A> 若要启用计时器，请调用<xref:System.Windows.Forms.Timer.Start%2A>方法或一组<xref:System.Windows.Forms.Timer.Enabled%2A>到`true`。</xref:System.Windows.Forms.Timer.Enabled%2A> </xref:System.Windows.Forms.Timer.Start%2A>       如果禁用计时器，计时器超出作用域中，在垃圾回收发生时，将处理计时器。 如果计时器处于启用状态，即使超出作用域，它不进行垃圾回收。"
  syntax:
    content: public Timer ();
    parameters: []
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: System.Windows.Forms.Timer.Timer(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>以及指定的容器的类。"
  remarks: "<xref:System.Windows.Forms.Timer>构造函数，可将相关联<xref:System.Windows.Forms.Timer>与任意<xref:System.ComponentModel.Container>对象。</xref:System.ComponentModel.Container> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> 通过将相关联的<xref:System.Windows.Forms.Timer>如下，你的控件移交<xref:System.Windows.Forms.Timer>到<xref:System.ComponentModel.Container>。</xref:System.ComponentModel.Container></xref:System.Windows.Forms.Timer>的生存期</xref:System.Windows.Forms.Timer> 如果你在你的应用程序中使用的许多组件，并想要同时释放它们，这会很有用。 例如，如果您将相关联<xref:System.Windows.Forms.ToolTip>、 <xref:System.Windows.Forms.ImageList>，和一个<xref:System.Windows.Forms.Timer>与<xref:System.ComponentModel.Container>，则调用<xref:System.ComponentModel.Container.Dispose%2A>上<xref:System.ComponentModel.Container>将强制释放所有这些组件也。</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> </xref:System.ComponentModel.Container> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.ImageList> </xref:System.Windows.Forms.ToolTip>       当创建一个新的计时器时，就会禁用;也就是说，<xref:System.Windows.Forms.Timer.Enabled%2A>设置为`false`。</xref:System.Windows.Forms.Timer.Enabled%2A> 若要启用计时器，请调用<xref:System.Windows.Forms.Timer.Start%2A>方法或一组<xref:System.Windows.Forms.Timer.Enabled%2A>到`true`。</xref:System.Windows.Forms.Timer.Enabled%2A> </xref:System.Windows.Forms.Timer.Start%2A>       此实例将存在，直到其容器将它释放到垃圾回收。"
  syntax:
    content: public Timer (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>计时器表示的容器。"
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: System.Windows.Forms.Timer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "释放由计时器使用的内存以外的资源。"
  remarks: "在完成使用计时器时，请调用释放。 Dispose 方法使计时器处于不可用状态。 调用 Dispose 后，你必须释放对计时器的所有引用，以便可以通过垃圾回收回收其占用的内存。      1> [!NOTE]&1;> 始终调用 Dispose 在发布到计时器最后一个引用之前。 否则，仅直到垃圾回收调用计时器对象的析构函数时，不会释放计时器所使用的资源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>若要仅释放非托管的资源。"
  overload: System.Windows.Forms.Timer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Enabled
  id: Enabled
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Windows.Forms.Timer.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置是否正在运行的计时器。"
  remarks: "值时，计时器不进行垃圾回收`true`。       调用<xref:System.Windows.Forms.Timer.Start%2A>方法等同于将 Enabled 设置为`true`。</xref:System.Windows.Forms.Timer.Start%2A> 同样，调用<xref:System.Windows.Forms.Timer.Stop%2A>方法等同于将 Enabled 设置为`false`。</xref:System.Windows.Forms.Timer.Stop%2A>"
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/p-system.windows.forms.t_233_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_233_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/p-system.windows.forms.t_233_1.cs)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前启用计时器;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Timer.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Interval
  id: Interval
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Windows.Forms.Timer.Interval
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或之前设置的时间，以毫秒为单位， <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref>相对的最后一个匹配项于引发事件<xref href=&quot;System.Windows.Forms.Timer.Tick&quot;></xref>事件。"
  remarks: "若要获取的秒数的时间间隔内，请将此数字除以 1000。"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/p-system.windows.forms.t_13_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_13_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/p-system.windows.forms.t_13_1.cs)]"
  syntax:
    content: public int Interval { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>指定之前的毫秒数<xref href=&quot;System.Windows.Forms.Timer.Tick&quot;></xref>相对的最后一个匹配项于引发事件<xref href=&quot;System.Windows.Forms.Timer.Tick&quot;></xref>事件。</xref:System.Int32> 值不能小于一。"
  overload: System.Windows.Forms.Timer.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  id: OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Windows.Forms.Timer.OnTick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Timer.Tick&quot;></xref>事件。"
  remarks: "为每个计时器刻度调用此方法。 它调用通过<xref:System.Windows.Forms.Timer.Tick>.</xref:System.Windows.Forms.Timer.Tick>添加任何方法 如果从继承<xref:System.Windows.Forms.Timer>，您可以重写此方法。</xref:System.Windows.Forms.Timer>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnTick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs> 这始终是<xref:System.EventArgs>.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Timer.OnTick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Start
  id: Start
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Start()
  nameWithType: Timer.Start()
  fullName: System.Windows.Forms.Timer.Start()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "启动计时器。"
  remarks: "你还可以通过设置启动计时器<xref:System.Windows.Forms.Timer.Enabled%2A>属性`true`。</xref:System.Windows.Forms.Timer.Enabled%2A>"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/m-system.windows.forms.t_9_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_9_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/m-system.windows.forms.t_9_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Windows.Forms.Timer.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Stop
  id: Stop
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: System.Windows.Forms.Timer.Stop()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "停止计时器。"
  remarks: "也可以通过设置停止计时器<xref:System.Windows.Forms.Timer.Enabled%2A>属性`false`。</xref:System.Windows.Forms.Timer.Enabled%2A> A<xref:System.Windows.Forms.Timer>对象可能处于启用状态并禁用在同一会话中应用程序多次。</xref:System.Windows.Forms.Timer>       调用<xref:System.Windows.Forms.Timer.Start%2A>已禁用后<xref:System.Windows.Forms.Timer>通过将导致停止时调<xref:System.Windows.Forms.Timer>以重新启动中断的时间间隔。</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer.Start%2A> 如果你<xref:System.Windows.Forms.Timer>设置 5000 毫秒的间隔时间，并且你调用停止在大约 3000 毫秒，调用<xref:System.Windows.Forms.Timer.Start%2A>将导致<xref:System.Windows.Forms.Timer>引发前等待 5000 毫秒<xref:System.Windows.Forms.Timer.Tick>事件。</xref:System.Windows.Forms.Timer.Tick> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer.Start%2A> </xref:System.Windows.Forms.Timer>      1> [!NOTE]&1;> 调用停止对任何<xref:System.Windows.Forms.Timer>Windows 窗体中应用程序可以从其他导致消息<xref:System.Windows.Forms.Timer>组件会立即，处理，因为应用程序中的所有<xref:System.Windows.Forms.Timer>在主应用程序线程上运行的组件。</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> 如果你有两个<xref:System.Windows.Forms.Timer>组件，一个设置为 700 毫秒和一个设置为 500 毫秒，并且在第一个调用停止<xref:System.Windows.Forms.Timer>，你的应用程序可能会首先收到第二个组件的事件回调。</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> 如果这证明有问题，请考虑使用<xref:System.Threading.Timer>类<xref:System.Threading>命名空间而。</xref:System.Threading> </xref:System.Threading.Timer>"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/m-system.windows.forms.t_32_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_32_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/m-system.windows.forms.t_32_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Forms.Timer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Tag
  id: Tag
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tag
  nameWithType: Timer.Tag
  fullName: System.Windows.Forms.Timer.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个任意字符串，表示某种类型的用户状态。"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "一个任意字符串，表示某种类型的用户状态。"
  overload: System.Windows.Forms.Timer.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Tick
  id: Tick
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Windows.Forms.Timer.Tick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定的计时器间隔已过去而且计时器处于启用状态时发生。"
  remarks: "调用<xref:System.Diagnostics.Debug.Assert%2A>方法<xref:System.Diagnostics.Debug>从 Tick 事件中的类可能不会按预期方式，作为显示断言对话框框中可能会导致 Windows 重复引发 Tick 事件。</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Debug.Assert%2A> 我们建议你避免从测试此事件中的断言，并使用<xref:System.Diagnostics.Debug.Write%2A>， <xref:System.Diagnostics.Debug.WriteIf%2A>， <xref:System.Diagnostics.Debug.WriteLine%2A>，或<xref:System.Diagnostics.Debug.WriteLineIf%2A>方法相反。</xref:System.Diagnostics.Debug.WriteLineIf%2A> </xref:System.Diagnostics.Debug.WriteLine%2A> </xref:System.Diagnostics.Debug.WriteIf%2A> </xref:System.Diagnostics.Debug.Write%2A>       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/e-system.windows.forms.t_22_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/e-system.windows.forms.t_22_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/e-system.windows.forms.t_22_1.cs)]"
  syntax:
    content: public event EventHandler Tick;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.ToString
  id: ToString
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: System.Windows.Forms.Timer.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回一个字符串，表示<xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>。"
  remarks: "ToString 方法将返回包含的值的字符串<xref:System.Windows.Forms.Timer.Interval%2A>属性。</xref:System.Windows.Forms.Timer.Interval%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，表示当前<xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>。"
  overload: System.Windows.Forms.Timer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Windows.Forms.Timer.#ctor
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Windows.Forms.Timer.Timer()
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: System.Windows.Forms.Timer.Timer(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: System.Windows.Forms.Timer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Timer.Enabled
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Windows.Forms.Timer.Enabled
- uid: System.Windows.Forms.Timer.Interval
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Windows.Forms.Timer.Interval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Windows.Forms.Timer.OnTick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Timer.Start
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start()
  nameWithType: Timer.Start()
  fullName: System.Windows.Forms.Timer.Start()
- uid: System.Windows.Forms.Timer.Stop
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: System.Windows.Forms.Timer.Stop()
- uid: System.Windows.Forms.Timer.Tag
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
  fullName: System.Windows.Forms.Timer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Timer.Tick
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Windows.Forms.Timer.Tick
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Timer.ToString
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: System.Windows.Forms.Timer.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Timer.#ctor*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer
  nameWithType: Timer.Timer
- uid: System.Windows.Forms.Timer.Dispose*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose
  nameWithType: Timer.Dispose
- uid: System.Windows.Forms.Timer.Enabled*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
- uid: System.Windows.Forms.Timer.Interval*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
- uid: System.Windows.Forms.Timer.OnTick*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick
  nameWithType: Timer.OnTick
- uid: System.Windows.Forms.Timer.Start*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start
  nameWithType: Timer.Start
- uid: System.Windows.Forms.Timer.Stop*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop
  nameWithType: Timer.Stop
- uid: System.Windows.Forms.Timer.Tag*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
- uid: System.Windows.Forms.Timer.ToString*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString
  nameWithType: Timer.ToString
