### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  id: X509RawDataKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  type: Class
  summary: "表示密钥标识符子句，它标识<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>使用 X.509 证书的原始数据的安全令牌。"
  remarks: "通常情况下，X509RawDataKeyIdentifierClause 不需要时要使用，而不创建自定义安全令牌服务。 当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。 附加的引用指包含在 SOAP 消息的安全标头的安全令牌而未附加的引用是未包含在 SOAP 消息的安全标头的安全令牌。 这些引用通常确认已颁发的安全令牌的真实性。 使用 X509RawDataKeyIdentifierClause 类来引用<xref:System.IdentityModel.Tokens.X509SecurityToken>使用 X.509 证书的原始数据的安全令牌。</xref:System.IdentityModel.Tokens.X509SecurityToken> <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A>方法返回的原始数据。</xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]支持以下类型的安全令牌引用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>-X509RawDataKeyIdentifierClause- <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause><xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>       </xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: 'public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref>类使用指定的 X.509 证书原始数据。"
  syntax:
    content: public X509RawDataKeyIdentifierClause (byte[] certificateRawData);
    parameters:
    - id: certificateRawData
      type: System.Byte[]
      description: "数组<xref:System.Byte>，包含 X.509 证书的原始数据。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificateRawData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>certificateRawData</code>长度为零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref>类使用指定的 X.509 证书。"
  remarks: "原始数据获得`certificate`参数使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>方法。</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>"
  syntax:
    content: public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>包含 X.509 证书。"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示是否可以从 X.509 证书的原始数据创建密钥或构造函数中指定的字节数组。"
  remarks: "若要创建密钥，调用<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>方法。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>"
  syntax:
    content: public override bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从构造函数中指定的 X.509 证书或字节数组的原始数据创建一个密钥。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.X509AsymmetricSecurityKey&quot;> </xref> ，其中包含与 X.509 证书相关联的密钥。"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  id: GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与 X.509 证书相关联的原始数据。"
  syntax:
    content: public byte[] GetX509RawData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>，其中包含与 X.509 证书关联的原始数据。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否等效于指定的 X.509 证书。"
  remarks: "匹配方法调用<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>方法`certificate`然后到当前实例相比较，。</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>"
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含要比较的 X.509 证书。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> certificate </code>具有的原始数据相匹配的当前实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回当前对象。"
  remarks: "ToString 方法返回 base-64 编码的原始数据。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，表示当前对象。</xref:System.String>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509RawDataKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509RawDataKeyIdentifierClause.ToString
