### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataExchangeClient
  id: MetadataExchangeClient
  children:
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  - System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  - System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  - System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  - System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  langs:
  - csharp
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
  type: Class
  summary: "下载服务元数据。"
  remarks: "使用 MetadataExchangeClient 下载元数据。 通常情况下，为元数据请求配置并随后将传递到 MetadataExchangeClient<xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>或<xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>方法<xref:System.ServiceModel.Description.MetadataResolver>要用于下载元数据。</xref:System.ServiceModel.Description.MetadataResolver> </xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>       但是，你可以使用 MetadataExchangeClient 直接检索元数据作为<xref:System.ServiceModel.Description.MetadataSet>包含<xref:System.ServiceModel.Description.MetadataSection>对象。</xref:System.ServiceModel.Description.MetadataSection> </xref:System.ServiceModel.Description.MetadataSet>       直接使用还是传递给<xref:System.ServiceModel.Description.MetadataResolver>，MetadataExchangeClient 具有以下成员，以控制元数据下载过程:-使用的构造函数以自定义发出元数据请求时要使用的绑定。</xref:System.ServiceModel.Description.MetadataResolver>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials%2A>属性指定用于发出 HTTP/GET 请求的凭据。</xref:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials%2A>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials%2A>属性指定用于发出 Ws-transfer 元数据请求的凭据。</xref:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials%2A>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences%2A>属性可限制的元数据数目引用 MetadataExchangeClient 解析。</xref:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences%2A>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout%2A>检索元数据花费的属性来限制的时间。</xref:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout%2A>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences%2A>属性来指定是否要定位并检索其他元数据文档由自原始元数据终结点下载的元数据引用的。</xref:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences%2A>      -使用<xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>方法可开始下载处理。</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>       此外，你可以创建派生的类可以重写以下两个受保护的方法:-重写<xref:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory%2A>方法可修改使用 Ws-transfer 元数据请求的通道。</xref:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory%2A>      -重写<xref:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest%2A>方法可以修改<xref:System.Net.HttpWebRequest>发出使用 HTTP/GET 元数据请求。</xref:System.Net.HttpWebRequest> </xref:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest%2A>"
  example:
  - "The following code example shows the use of MetadataExchangeClient to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public class MetadataExchangeClient
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient()
  nameWithType: MetadataExchangeClient.MetadataExchangeClient()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>类。"
  syntax:
    content: public MetadataExchangeClient ();
    parameters: []
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  id: '#ctor(System.ServiceModel.Channels.Binding)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(Binding)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Binding)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Binding)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>类使用指定的绑定。"
  remarks: "使用此构造函数可指定下载元数据时要使用的绑定。"
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public MetadataExchangeClient (System.ServiceModel.Channels.Binding mexBinding);
    parameters:
    - id: mexBinding
      type: System.ServiceModel.Channels.Binding
      description: "要使用 Ws-transfer 检索元数据时使用的绑定。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(EndpointAddress)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>类。"
  remarks: "使用此构造函数指定元数据终结点的地址。"
  syntax:
    content: public MetadataExchangeClient (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "元数据地址中。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(String)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>类。"
  remarks: "使用此构造函数使用一个特定终结点配置元素中的数据创建一个通道，以下载元数据。"
  syntax:
    content: public MetadataExchangeClient (string endpointConfigurationName);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "下载元数据时要使用的终结点配置信息的名称。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: '#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>类。"
  remarks: "使用此构造函数指定地址以及是否要使用 HTTP GET 请求或 Ws-transfer Get。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>"
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public MetadataExchangeClient (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "元数据地址。"
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "要下载元数据时使用的模式。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "开始返回的异步方法调用<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>。"
  remarks: "异步实现<xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>方法。</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (AsyncCallback callback, object asyncState);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "在调用完成时调用的异步回调委托。"
    - id: asyncState
      type: System.Object
      description: "与异步调用关联的状态。"
    return:
      type: System.IAsyncResult
      description: "元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "开始返回的异步方法调用<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;></xref>使用指定的地址、 回调和异步状态。"
  remarks: "异步实现<xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>方法。</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "元数据地址。"
    - id: callback
      type: System.AsyncCallback
      description: "在调用完成时调用的异步回调委托。"
    - id: asyncState
      type: System.Object
      description: "与异步调用关联的状态。"
    return:
      type: System.IAsyncResult
      description: "获取从指定的元数据<code> address </code>。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "开始返回的异步方法调用<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;></xref>使用指定的地址、 回调、 异步状态和下载机制。"
  remarks: "异步实现<xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>方法。</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: address
      type: System.Uri
      description: "元数据地址。"
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>下载元数据时要使用的值。"
    - id: callback
      type: System.AsyncCallback
      description: "在调用完成时调用的异步回调委托。"
    - id: asyncState
      type: System.Object
      description: "与异步调用关联的状态。"
    return:
      type: System.IAsyncResult
      description: "获取从指定的元数据<code> address </code>。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  id: EndGetMetadata(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: EndGetMetadata(IAsyncResult)
  nameWithType: MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "结尾返回的异步方法调用<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>。"
  remarks: "结束异步之一<xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata%2A>方法返回下载的元数据。</xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata%2A>"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet EndGetMetadata (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>调用接收到对象<xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*>方法。</xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>包含下载的元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  id: GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetChannelFactory(EndpointAddress,String,String)
  nameWithType: MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "当在派生类中重写，返回用于发出 Ws-transfer 元数据请求的通道工厂。"
  remarks: "检索元数据的一种<xref:System.ServiceModel.Description.MetadataReference>。</xref:System.ServiceModel.Description.MetadataReference>时调用此方法"
  syntax:
    content: protected virtual System.ServiceModel.ChannelFactory<System.ServiceModel.Description.IMetadataExchange> GetChannelFactory (System.ServiceModel.EndpointAddress metadataAddress, string dialect, string identifier);
    parameters:
    - id: metadataAddress
      type: System.ServiceModel.EndpointAddress
      description: "元数据地址中。"
    - id: dialect
      type: System.String
      description: "元数据的方言。"
    - id: identifier
      type: System.String
      description: "元数据的标识符。"
    return:
      type: System.ServiceModel.ChannelFactory{System.ServiceModel.Description.IMetadataExchange}
      description: "A &lt;xref:System.ServiceModel.ChannelFactory%601&gt;类型的<xref:System.ServiceModel.Channels.IRequestChannel>发出 Ws-transfer 元数据请求。</xref:System.ServiceModel.Channels.IRequestChannel>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  id: GetMetadata
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata()
  nameWithType: MetadataExchangeClient.GetMetadata()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata ();
    parameters: []
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>包含下载的元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  id: GetMetadata(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;></xref>从指定的地址。"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "从其下载元数据的地址。"
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "元数据位于<code> address </code>。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  id: GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;></xref>从指定的地址和指定的路由。"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "从其下载元数据的地址。"
    - id: via
      type: System.Uri
      description: "获取表示路由的 URI 地址消息。"
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "已下载元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回<xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;></xref>从指定的地址使用指定的下载模式。"
  remarks: "使用此方法指定地址以及是否使用 HTTP GET 或 Ws-transfer Get 来下载元数据。"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "从其下载元数据的地址。"
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "要使用的下载机制。"
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "已下载元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  id: GetMetadataAsync
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync()
  nameWithType: MetadataExchangeClient.GetMetadataAsync()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回一个异步元数据集。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "异步元数据设置。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  id: GetMetadataAsync(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回从指定的地址设置异步元数据。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "从其下载异步元数据的地址"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "在地址位于异步元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  id: GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回从指定的地址，并在设置指定的路由异步元数据。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "从其下载元数据的地址。"
    - id: via
      type: System.Uri
      description: "获取表示路由的 URI 地址消息。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "已下载元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回从指定的地址使用指定的下载模式设置异步元数据。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "从其下载元数据的地址。"
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "要使用的下载机制。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "已下载元数据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  id: GetWebRequest(System.Uri,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetWebRequest(Uri,String,String)
  nameWithType: MetadataExchangeClient.GetWebRequest(Uri,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(Uri,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "当在派生类中重写，则返回<xref:System.Net.HttpWebRequest>用于发出 HTTP/GET 元数据请求。</xref:System.Net.HttpWebRequest>"
  remarks: "调用 GetWebRequest 方法:-时尝试解析<xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>      -如果<xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>使用。</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Net.HttpWebRequest GetWebRequest (Uri location, string dialect, string identifier);
    parameters:
    - id: location
      type: System.Uri
      description: "元数据的位置。"
    - id: dialect
      type: System.String
      description: "元数据的方言。"
    - id: identifier
      type: System.String
      description: "元数据的标识符。"
    return:
      type: System.Net.HttpWebRequest
      description: "内部<xref:System.Net.HttpWebRequest>用于发出 HTTP GET 元数据请求。</xref:System.Net.HttpWebRequest>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  id: HttpCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置用于发出 HTTP/GET 请求的凭据。"
  remarks: "使用 HttpCredentials 属性可自定义安全凭据<xref:System.ServiceModel.Description.MetadataExchangeClient>请求使用 HTTP/GET 元数据时使用。</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public System.Net.ICredentials HttpCredentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>用于建立申请凭据对象。</xref:System.Net.ICredentials>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  id: MaximumResolvedReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置对元数据引用的最大数<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>下载。"
  remarks: "使用 MaximumResolvedReferences 属性来限制由包含大量引用的元数据访问的资源。 此限制适用于导致后续请求，包括元数据引用、 元数据位置、 WSDL 导入和 XML 架构导入和包括的元数据中的任何引用。"
  syntax:
    content: public int MaximumResolvedReferences { get; set; }
    return:
      type: System.Int32
      description: "元数据引用的数目<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;></xref>解析。 默认值为 10。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  id: OperationTimeout
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
  fullName: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置的时间段内引发异常之前必须下载元数据。"
  remarks: "使用 OperationTimeout 属性来限制的时间量<xref:System.ServiceModel.Description.MetadataExchangeClient>采用在结束操作之前。</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public TimeSpan OperationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "在其中必须下载元数据; 该期间默认值为 1 分钟。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  id: ResolveMetadataReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置一个值，控制是否解析对元数据引用。"
  remarks: "将 ResolveMetadataReferences 属性设置为`false`可防止对元数据引用的解析。 在这种情况下，为<xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName><xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>在<xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>内的进行对象</xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>或</xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName>返回引用"
  syntax:
    content: public bool ResolveMetadataReferences { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果解析对元数据的引用;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  id: SoapCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置凭据用于发出 Ws-transfer 元数据请求的客户端安全。"
  remarks: "使用 SoapCredentials 属性指定的安全凭据<xref:System.ServiceModel.Description.MetadataExchangeClient>发出 Ws-transfer 元数据请求时使用。</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public System.ServiceModel.Description.ClientCredentials SoapCredentials { get; set; }
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "用于发出 Ws-transfer 元数据请求的客户端安全凭据。"
  overload: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient()
  nameWithType: MetadataExchangeClient.MetadataExchangeClient()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient()
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(Binding)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Binding)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(EndpointAddress)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(String)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: EndGetMetadata(IAsyncResult)
  nameWithType: MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(IAsyncResult)
- uid: System.ServiceModel.Description.MetadataSet
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataSet
  nameWithType: MetadataSet
  fullName: System.ServiceModel.Description.MetadataSet
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetChannelFactory(EndpointAddress,String,String)
  nameWithType: MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
- uid: System.ServiceModel.ChannelFactory{System.ServiceModel.Description.IMetadataExchange}
  parent: System.ServiceModel
  isExternal: true
  name: ChannelFactory<IMetadataExchange>
  nameWithType: ChannelFactory<IMetadataExchange>
  fullName: System.ServiceModel.ChannelFactory<System.ServiceModel.Description.IMetadataExchange>
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: ChannelFactory<System.ServiceModel.Description.IMetadataExchange>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IMetadataExchange
    name: IMetadataExchange
    nameWithType: IMetadataExchange
    fullName: IMetadataExchange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata()
  nameWithType: MetadataExchangeClient.GetMetadata()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata()
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync()
  nameWithType: MetadataExchangeClient.GetMetadataAsync()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync()
- uid: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<MetadataSet>
  nameWithType: Task<MetadataSet>
  fullName: System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.ServiceModel.Description.MetadataSet>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.MetadataSet
    name: MetadataSet
    nameWithType: MetadataSet
    fullName: MetadataSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetWebRequest(Uri,String,String)
  nameWithType: MetadataExchangeClient.GetWebRequest(Uri,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(Uri,String,String)
- uid: System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
  fullName: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata
  nameWithType: MetadataExchangeClient.BeginGetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: EndGetMetadata
  nameWithType: MetadataExchangeClient.EndGetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetChannelFactory
  nameWithType: MetadataExchangeClient.GetChannelFactory
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata
  nameWithType: MetadataExchangeClient.GetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync
  nameWithType: MetadataExchangeClient.GetMetadataAsync
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetWebRequest
  nameWithType: MetadataExchangeClient.GetWebRequest
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
