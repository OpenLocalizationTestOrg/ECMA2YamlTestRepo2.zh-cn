### YamlMime:ManagedReference
items:
- uid: System.Windows.ValidateValueCallback
  id: ValidateValueCallback
  langs:
  - csharp
  name: ValidateValueCallback
  nameWithType: ValidateValueCallback
  fullName: System.Windows.ValidateValueCallback
  type: Delegate
  summary: "表示用作验证依赖项属性的有效值的回调的方法。"
  remarks: "基于此委托回调所使用的特定签名<xref:System.Windows.DependencyProperty.Register%2A?displayProperty=fullName>和相关方法，如<xref:System.Windows.DependencyProperty.RegisterAttached%2A>只读的等效项。</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A?displayProperty=fullName> 应使用需要的签名`validateValueCallback`参数，如果你想设置其有效每次属性值的特定验证。 然后，以便它执行实际验证的建议的值，应实现此回调。 应返回回调`true`提交给回调的值是否有效，和`false`否则为。 A`false`的值将产生无效的属性集尝试属性系统的特定部分中出现异常，因此你的应用程序应准备好处理这些异常。       验证回调存储在依赖项属性标识符，而不是依赖属性元数据。 验证回调不具有访问特定实例的权限<xref:System.Windows.DependencyObject>上属性的设置，并且可以仅影响属性通常接受哪些值。</xref:System.Windows.DependencyObject> 如果需要可以更改基于特定实例的属性值的回调，则应使用的组合<xref:System.Windows.CoerceValueCallback>和<xref:System.Windows.PropertyChangedCallback>回调应用到你的属性的属性元数据。</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.CoerceValueCallback> 你也可能适用于应影响属性的值的相关属性的这些回调。 有关详细信息，请参阅[依赖项属性的回调和验证](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example includes an implementation of this callback to validate a range of values for a custom dependency property. In this case the property value expects an enumeration, and the validation assures that the provided value evaluates to a member of that enumeration.  \n  \n [!code-cs[DPCustom#ValidateValueCallback](~/add/codesnippet/csharp/DPCustom/default.xaml.cs#validatevaluecallback)]\n [!code-vb[DPCustom#ValidateValueCallback](~/add/codesnippet/visualbasic/dpcustom/default.xaml.vb#validatevaluecallback)]"
  syntax:
    content: public delegate bool ValidateValueCallback(object value);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
