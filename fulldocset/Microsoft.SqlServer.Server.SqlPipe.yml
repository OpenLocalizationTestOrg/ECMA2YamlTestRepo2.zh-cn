### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlPipe
  id: SqlPipe
  children:
  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  langs:
  - csharp
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
  type: Class
  summary: "允许在使用 SQL Server 数据库来将结果返回给调用方上的托管存储的过程运行过程。 此类不能被继承。"
  remarks: "此类的实例将提供给被管理的存储过程，通过<xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>属性的<xref:Microsoft.SqlServer.Server.SqlContext>类。</xref:Microsoft.SqlServer.Server.SqlContext> </xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]"
  syntax:
    content: public sealed class SqlPipe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "执行作为参数传递的命令，并将结果发送到客户端。"
  remarks: "除了任何实际的结果，其他消息和错误是还直接发送到客户端。       输出参数和返回值不会发送到客户端;这些是用于调用方，通过命令对象的 parameters 集合。       如果该命令未绑定到的进程内连接，<xref:System.InvalidOperationException>引发。</xref:System.InvalidOperationException> 绑定到的进程外连接的命令不支持此方法。       如果中有错误<xref:System.Data.SqlClient.SqlCommand>异常发送到的命名管道，但副本也会发送给调用托管代码已提交的对象。</xref:System.Data.SqlClient.SqlCommand> 如果调用的代码不会捕获异常，将 Transact SQL 代码在堆栈中向上传播并在输出中出现两次。 如果调用代码捕获了异常，则管道使用者仍会看到以下错误，但不是会重复错误。"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]"
  syntax:
    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>要执行对象。"
  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "绑定到的进程外连接的命令不支持此方法。"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  id: IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "获取一个值，该值指示是否<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>中将单个结果集发送回客户端的模式。 此属性是只读的。"
  syntax:
    content: public bool IsSendingResults { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>调用方法和<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>处于的模式将单个结果集发送回客户端; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "将发送的单行结果集直接向客户端或当前输出使用者。"
  syntax:
    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: '发送到客户端的单行结果集︰ <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>对象。'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  id: Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "将发送多行结果集直接向客户端或当前输出使用者。"
  remarks: "如果<xref:System.Data.SqlClient.SqlDataReader>作为一个参数具有隐藏列传入的对象，这些列不会传播到结果集发送到客户端。</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public void Send (System.Data.SqlClient.SqlDataReader reader);
    parameters:
    - id: reader
      type: System.Data.SqlClient.SqlDataReader
      description: '多行的结果集发送到客户端︰ <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>对象。'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  id: Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "直接向客户端或当前输出使用者发送字符串消息。"
  remarks: "作为一条信息性消息情况下，消息字符串发送到客户端。 客户端应用程序可通过不同的机制，具体取决于数据访问应用程序编程接口 (API)，它们使用侦听消息。 例如，如果客户端正在使用 ADO.NET，消息传输通过<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件。</xref:System.Data.SqlClient.SqlConnection.InfoMessage>"
  example:
  - "The following example uses the Send method to send a message string directly to the client.  \n  \n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]"
  syntax:
    content: public void Send (string message);
    parameters:
    - id: message
      type: System.String
      description: "要发送到客户端的消息字符串。"
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> message </code>大于 4000 个字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  id: SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "标记的一个结果集，结束，并且返回<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>回初始状态的实例。"
  remarks: "托管的存储的过程可以将结果集发送到不想实现一种<xref:System.Data.SqlClient.SqlDataReader>。</xref:System.Data.SqlClient.SqlDataReader>的客户端 此方法，以及<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>，允许要发送到客户端的自定义结果集的存储的过程。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]"
  syntax:
    content: public void SendResultsEnd ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>方法以前未被调用。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "将单个行的数据发送回客户端。"
  remarks: "托管的存储的过程可以将结果集发送到不想实现一种<xref:System.Data.SqlClient.SqlDataReader>。</xref:System.Data.SqlClient.SqlDataReader>的客户端 此方法，以及<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允许要发送到客户端的自定义结果集的存储的过程。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>       SendResultsRow 方法将一行数据发送回客户端。 通过调用一次发送每一行的 SendResultsRow，之前，随后可以将行返回给调用方。 已发送的所有行，对的调用后<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法仍要求标记结果集的末尾。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]"
  syntax:
    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>对象发送到客户端的行的列的值。 记录的架构必须与匹配的元数据所述的架构<xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;></xref>传递给<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>方法。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>方法以前未被调用。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "标记开始某一结果集发回到客户端，并使用记录的参数来构造描述结果集的元数据。"
  remarks: "托管的存储的过程可以将结果集发送到不想实现一种<xref:System.Data.SqlClient.SqlDataReader>。</xref:System.Data.SqlClient.SqlDataReader>的客户端 此方法，以及<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允许要发送到客户端的自定义结果集的存储的过程。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       SendResultsStart 方法标记的一个结果集，开始，并使用记录的参数来构造描述结果集的元数据。 所有后续的行，使用发送<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，必须与该元数据定义匹配。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       请注意，仅在调用 SendResultsStart 之后,<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>可以调用。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> <xref:Microsoft.SqlServer.Server.SqlPipe>引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:Microsoft.SqlServer.Server.SqlPipe>的相同实例中的任何其他方法 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>设置<xref:Microsoft.SqlServer.Server.SqlPipe>回中可以调用其他方法的初始状态。</xref:Microsoft.SqlServer.Server.SqlPipe></xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>       控制权将返回给 TRANSACT-SQL 从 CLR 执行后，不尝试使用静态或本地变量初始化为 CLR 内存。 例如，是否存储在进程的实例类，例如`SQLDataRecord`，控制从 CLR 返回之后将使用它。 一个例外是`SQLMetaData`进程类中。"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]"
  syntax:
    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>对象元数据是从其提取，用于描述结果集。"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> record </code>没有列或尚未初始化。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "以外的其他方法<> *1> 或<> *1> 在 SendResultsStart 方法之后调用。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlDataRecord
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlDataRecord
  nameWithType: SqlDataRecord
  fullName: Microsoft.SqlServer.Server.SqlDataRecord
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend
  nameWithType: SqlPipe.ExecuteAndSend
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
- uid: Microsoft.SqlServer.Server.SqlPipe.Send*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send
  nameWithType: SqlPipe.Send
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd
  nameWithType: SqlPipe.SendResultsEnd
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow
  nameWithType: SqlPipe.SendResultsRow
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart
  nameWithType: SqlPipe.SendResultsStart
