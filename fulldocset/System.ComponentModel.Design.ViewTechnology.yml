### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "定义一组设计器主机支持的技术的标识符。"
  remarks: "视图适配器模型替换，并将功能添加到的视图技术功能;然而，视图技术功能将保留向后兼容性和将来使用，如果你选择。 有关详细信息，请参阅&quot;.NET 形状库:: 示例设计器&quot;Windows 窗体知识库中在 http://windowsforms.net/articles/shapedesigner.aspx。       视图定义可以指示要用于控制设计器承载的文档的显示模式的标识符。       你只应在设计器宿主环境中使用的默认值。 在以前版本的[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]，视图技术枚举指定的用户界面模型根设计器支持的类型。 由于此模型不是可扩展的则应改用*视图适配器*模型。 视图适配器是适应到另一种类型的对象的类型。       例如，HTML 设计器可能会返回`DemoDOM`树作为其视图。 HTML 设计器返回默认视图的技术。 Windows 窗体承载环境将具有一个或多个适配器可用视图类。 如果有这样一个类可以转换`DemoDOM`到 Windows 窗体控件中，主机应用程序可以支持此类型的设计器。 如果未适配器可以处理从设计器的返回的数据类型<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>方法，设计器的负载将失败，并且用户将看到并出错。</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]具有一套用于提供视图适配器，以便它可调整到任何 UI 技术可扩展方案。 第三方技术提供商也可以提供适当的视图适配器，并且马上就可以使用其对象模型。       使用的示例，查看适配器，请参阅&quot;.NET 形状库:: 示例设计器&quot;Windows 窗体知识库中在 http://windowsforms.net/articles/shapedesigner.aspx。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "指定的默认视图技术支持。"
  remarks: "根设计器可能会返回任何类型的对象，但该对象必须是与主机的技术的适配器兼容。 如宿主环境[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]提供一种新的视图技术适配器中插入方法。 Windows 窗体设计器的默认视图对象是<xref:System.Windows.Forms.Control?displayProperty=fullName>实例。</xref:System.Windows.Forms.Control?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "表示在其中的视图对象直接传递给开发环境的模式。"
  remarks: "视图对象必须实现的开发环境要求任何接口。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]开发环境支持 ActiveX 控件、 活动文档或实现可通过 IVsWindowPane 接口的对象的视图对象[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]集成) 程序。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]开发环境对此视图技术提供支持。 不一定能够使用在所有开发环境中对此视图技术的支持。"
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "表示在 Windows 窗体控件对象所提供的根设计器的显示模式。"
  remarks: "设计器宿主用 Windows 窗体控件填充开发环境文档窗口。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
