### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeParameterReader
  id: MimeParameterReader
  children:
  - System.Web.Services.Protocols.MimeParameterReader.#ctor
  - System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)
  langs:
  - csharp
  name: MimeParameterReader
  nameWithType: MimeParameterReader
  fullName: System.Web.Services.Protocols.MimeParameterReader
  type: Class
  summary: "请求参数的实现使用 HTTP 的 Web 服务，但不支持 SOAP 的读取器提供通用的基实现。"
  remarks: "MimeParameterReader 和中的其他类<xref:System.Web.Services.Protocols>命名空间支持通过 HTTP GET 和 HTTP POST 操作的 Web 服务的.NET Framework 的实现。</xref:System.Web.Services.Protocols> Web 服务编写器和读卡器序列化和反序列化，分别的参数或返回对象的 Web 方法的 HTTP 请求或响应流之间。 Web 服务编写器和读卡器使用 HTTP 传输，但不交换使用 SOAP 标准的消息。       MimeParameterReader 类建立一种通用<xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A>设置的所有服务端读取器的 HTTP 都请求流到 Web 方法参数的格式。</xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A>       你通常不需要直接使用 MimeParameterReader 或其子代类。 根据 ASP.NET 配置文件 (Web.config) 中的设置，使用相应的类型。"
  syntax:
    content: 'public abstract class MimeParameterReader : System.Web.Services.Protocols.MimeFormatter'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeParameterReader
  langs:
  - csharp
  name: MimeParameterReader()
  nameWithType: MimeParameterReader.MimeParameterReader()
  fullName: System.Web.Services.Protocols.MimeParameterReader.MimeParameterReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Protocols.MimeParameterReader&quot;></xref>类。"
  syntax:
    content: protected MimeParameterReader ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeParameterReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)
  id: Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.MimeParameterReader
  langs:
  - csharp
  name: Read(HttpRequest)
  nameWithType: MimeParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.MimeParameterReader.Read(HttpRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "当在派生类中重写，反序列化为 Web 方法的参数值的数组的 HTTP 请求。"
  syntax:
    content: public abstract object[] Read (System.Web.HttpRequest request);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref>对象，其中包含操作的输入的消息。"
    return:
      type: System.Object[]
      description: "数组<xref:System.Object>包含反序列化的 HTTP 请求的对象。</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeParameterReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: System.Web.Services.Protocols.MimeFormatter
- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor
  parent: System.Web.Services.Protocols.MimeParameterReader
  isExternal: false
  name: MimeParameterReader()
  nameWithType: MimeParameterReader.MimeParameterReader()
  fullName: System.Web.Services.Protocols.MimeParameterReader.MimeParameterReader()
- uid: System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.MimeParameterReader
  isExternal: false
  name: Read(HttpRequest)
  nameWithType: MimeParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.MimeParameterReader.Read(HttpRequest)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor*
  parent: System.Web.Services.Protocols.MimeParameterReader
  isExternal: false
  name: MimeParameterReader
  nameWithType: MimeParameterReader.MimeParameterReader
- uid: System.Web.Services.Protocols.MimeParameterReader.Read*
  parent: System.Web.Services.Protocols.MimeParameterReader
  isExternal: false
  name: Read
  nameWithType: MimeParameterReader.Read
