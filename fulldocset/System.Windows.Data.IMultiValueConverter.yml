### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.IMultiValueConverter
  id: IMultiValueConverter
  children:
  - System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
  type: Interface
  summary: "提供一种方法来应用中的自定义逻辑<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>。"
  remarks: "若要将使用的转换器关联<xref:System.Windows.Data.MultiBinding>，创建一个类，实现 IMultiValueConverter 接口，然后实现<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>和<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>方法。</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.MultiBinding>       集合中的各个绑定可以具有其自己的值转换器。 有关详细信息，请参阅<xref:System.Windows.Data.IValueConverter>。</xref:System.Windows.Data.IValueConverter>"
  syntax:
    content: public interface IMultiValueConverter
  implements: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将源值转换为绑定目标的值。 数据绑定引擎将传播该值从源绑定到绑定目标时会调用此方法。"
  remarks: "数据绑定引擎不会捕获由用户提供的转换器所引发的异常。 通过转换方法引发任何异常或由转换方法调用的方法引发任何未捕获的异常被视为运行时错误。 通过返回处理预期的问题<xref:System.Windows.DependencyProperty>。<xref:System.Windows.DependencyProperty.UnsetValue>.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>"
  syntax:
    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: values
      type: System.Object[]
      description: "值的数组中的源绑定<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>生成。 值<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;></xref>指示源绑定没有可供转换的值。"
    - id: targetType
      type: System.Type
      description: "绑定目标属性的类型。"
    - id: parameter
      type: System.Object
      description: "要使用的转换器参数。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要在转换器中使用的区域性。"
    return:
      type: System.Object
      description: "转换后的值。       如果该方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，有效<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用值。       返回值<xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>。<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;></xref> 指示转换器没有生成一个值，并且绑定将使用<> *1> 是否可用，或者将使用默认值。     返回值<xref href=&quot;System.Windows.Data.Binding&quot;> </xref>。<xref href=&quot;System.Windows.Data.Binding.DoNothing&quot;></xref>指示绑定不会传输该值，或不使用<> *1> 或默认值。"
  overload: System.Windows.Data.IMultiValueConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将绑定目标值转换为源绑定值。"
  remarks: "如果有多个返回的值不是在绑定<xref:System.Windows.Data.MultiBinding>，忽略的多余的返回值。</xref:System.Windows.Data.MultiBinding> 如果有更多的源绑定不是返回值，则剩余的源绑定没有在其上设置任何值。 返回值类型未验证针对`targetTypes`; 将值直接设置源的绑定。       返回<xref:System.Windows.Data.Binding.DoNothing>位于`i`以不指示在索引处的源绑定上设置任何值`i`。</xref:System.Windows.Data.Binding.DoNothing>       返回<xref:System.Windows.DependencyProperty>。<xref:System.Windows.DependencyProperty.UnsetValue>位于`i`以指示转换器不能提供的值的索引处的源绑定`i`，并对其设置指示没有值</xref:System.Windows.DependencyProperty.UnsetValue></xref:System.Windows.DependencyProperty>       返回`null`以指示转换器无法执行转换，或在此方向上不支持转换。       数据绑定引擎不会捕获由用户提供的转换器所引发的异常。 ConvertBack 方法引发任何异常或由 ConvertBack 方法调用的方法引发任何未捕获的异常被视为运行时错误。 通过返回处理预期的问题`null`。"
  syntax:
    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "绑定目标生成的值。"
    - id: targetTypes
      type: System.Type[]
      description: "要转换的类型数组。 数组长度指示的数量和类型的建议的方法所返回的值。"
    - id: parameter
      type: System.Object
      description: "要使用的转换器参数。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要在转换器中使用的区域性。"
    return:
      type: System.Object[]
      description: "从目标值转换回源值的值的数组。"
  overload: System.Windows.Data.IMultiValueConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Data.IMultiValueConverter.Convert*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert
  nameWithType: IMultiValueConverter.Convert
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack
  nameWithType: IMultiValueConverter.ConvertBack
