### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  id: X509CertificateInitiatorClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorClientCredential
  nameWithType: X509CertificateInitiatorClientCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  type: Class
  summary: "定义客户端用于标识自身的证书。"
  syntax:
    content: public sealed class X509CertificateInitiatorClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置要使用用于向客户端通信时表示的服务的证书。"
  remarks: "当对第一次调用[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]代理，<xref:System.ServiceModel.Description.ClientCredentials>进行只读的。</xref:System.ServiceModel.Description.ClientCredentials> 随后，调用`set`方法会导致<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>用于表示服务返回到客户端通信时。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>时使用的方法在凭据为只读时。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用此选项可以指定要使用用于通过指定主题可分辨的名称表示的服务的证书。"
  remarks: "有关详细信息`subjectName`参数，请参阅<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>。</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>       值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机 （默认值） 的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行客户端应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果客户端应用程序的用户帐户下运行，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code specifies the certificate to use.  \n  \n [!code-cs[c_TcpClient#3](~/add/codesnippet/csharp/69e80778-6733-491a-9c08-_1.cs)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "使用者可分辨的名称。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "用于获取服务证书的证书存储区服务位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "指定要打开的 X.509 证书存储区的名称。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "允许你指定要使用通过指定查询参数，如表示客户端的证书<code> storeLocation </code>， <code> storeName </code>， <code> findType </code>和<code> findValue </code>。"
  remarks: "值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机 （默认值） 的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行客户端应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果客户端应用程序的用户帐户下运行，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>       值为`findType`都将纳入<xref:System.Security.Cryptography.X509Certificates.X509FindType>枚举。</xref:System.Security.Cryptography.X509Certificates.X509FindType>       最常使用的枚举是<xref:System.Security.Cryptography.X509Certificates.X509FindType>，执行对指定存储区中的证书的使用者名称执行不区分大小写的搜索。</xref:System.Security.Cryptography.X509Certificates.X509FindType> 这可能是不精确的搜索。 如果多个第一个匹配的使用与查找条件表示客户端返回一个证书。"
  example:
  - "The following code specifies the certificate to use.  \n  \n [!code-cs[c_TcpClient#2](~/add/codesnippet/csharp/8672a3e6-75ae-4ac7-9118-_1.cs)]\n [!code-vb[c_TcpClient#2](~/add/codesnippet/visualbasic/8672a3e6-75ae-4ac7-9118-_1.vb)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "用于获取客户端证书的客户端的证书存储位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "指定要打开的 X.509 证书存储区的名称。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "定义要执行的 X.509 搜索的类型。"
    - id: findValue
      type: System.Object
      description: "要在 X.509 证书存储区中搜索的值。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate
