### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SourceSwitch
  id: SourceSwitch
  children:
  - System.Diagnostics.SourceSwitch.#ctor(System.String)
  - System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.SourceSwitch.Level
  - System.Diagnostics.SourceSwitch.OnValueChanged
  - System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  langs:
  - csharp
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
  type: Class
  summary: "无需重新编译你的代码，提供了用于控制跟踪和调试输出一个多级开关。"
  remarks: "<xref:System.Diagnostics.TraceSource.Switch%2A>属性<xref:System.Diagnostics.TraceSource>类是 SourceSwitch 对象。</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.TraceSource.Switch%2A> SourceSwitch 类提供<xref:System.Diagnostics.SourceSwitch.Level%2A>属性来测试该开关的事件级别。</xref:System.Diagnostics.SourceSwitch.Level%2A> <xref:System.Diagnostics.SourceSwitch.Level%2A>属性获取或设置开关的<xref:System.Diagnostics.TraceLevel>值。</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.SourceSwitch.Level%2A>       你可以通过应用程序配置文件设置 SourceSwitch 的事件级别，然后使用应用程序中的配置的 SourceSwitch 级别。 或者，你可以在代码中创建 SourceSwitch 和设置级别直接，来检测特定的代码段。       若要配置 SourceSwitch，编辑你的应用程序的名称对应的配置文件。 在此文件中，你可以设置开关的值，或清除以前由应用程序设置的所有交换机。 应按照下面的示例所示格式设置的配置文件。      ```   <switches>     <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot;></add>   </switches>   ```使用开关来检查是否应传播或忽略跟踪。 每个<xref:System.Diagnostics.TraceSource>跟踪方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法之前调用中的侦听器。</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> </xref:System.Diagnostics.TraceSource> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法返回`false`、 忽略跟踪和跟踪方法将退出。</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法返回`true`，跟踪传递到侦听器。</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>"
  syntax:
    content: 'public class SourceSwitch : System.Diagnostics.Switch'
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: SourceSwitch(String)
  nameWithType: SourceSwitch.SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.SourceSwitch&quot;></xref>类，指定源的名称。"
  remarks: "`name`参数用于设置的值<xref:System.Diagnostics.Switch.DisplayName%2A>属性。</xref:System.Diagnostics.Switch.DisplayName%2A>       若要设置的级别你<xref:System.Diagnostics.SourceSwitch>，编辑你的应用程序的名称对应的配置文件。</xref:System.Diagnostics.SourceSwitch> 在此文件中，可以添加交换机并将其值设置、 移除开关，或清除所有交换机以前由应用程序设置。 若要添加一个源开关，在下面的示例所示配置文件应进行格式化。      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot; ></add>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: public SourceSwitch (string name);
    parameters:
    - id: name
      type: System.String
      description: "源的名称。"
  overload: System.Diagnostics.SourceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: SourceSwitch(String,String)
  nameWithType: SourceSwitch.SourceSwitch(String,String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.SourceSwitch&quot;></xref>类，指定显示名称和源开关的默认值。"
  remarks: "`displayName`参数用于设置的值<xref:System.Diagnostics.Switch.DisplayName%2A>属性;`defaultSwitchValue`参数是保存为一个字段，用于初始化<xref:System.Diagnostics.Switch.Value%2A>上第一个引用的属性。</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      1> [!NOTE]&1;> 如果在配置文件中定义了开关和`value`指定特性，配置文件值将优先和`defaultSwitchValue`将被忽略。       若要设置的级别你<xref:System.Diagnostics.SourceSwitch>，编辑你的应用程序的名称对应的配置文件。</xref:System.Diagnostics.SourceSwitch> 在此文件中，可以添加交换机并将其值设置、 移除开关，或清除所有交换机以前由应用程序设置。 若要添加一个源开关，在下面的示例所示配置文件应进行格式化。      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot; ></add>       </switches>     </system.diagnostics>   </configuration>   ```"
  example:
  - "The following code example creates a <xref:System.Diagnostics.SourceSwitch> with the name \"SourceSwitch\" and a default value of <xref:System.Diagnostics.SourceLevels>. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#7](~/add/codesnippet/csharp/m-system.diagnostics.sou_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#7](~/add/codesnippet/visualbasic/m-system.diagnostics.sou_0_1.vb)]"
  syntax:
    content: public SourceSwitch (string displayName, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "源开关的名称。"
    - id: defaultSwitchValue
      type: System.String
      description: "开关的默认值。"
  overload: System.Diagnostics.SourceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.Level
  id: Level
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: SourceSwitch.Level
  fullName: System.Diagnostics.SourceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置开关的级别。"
  remarks: "此属性获取其值从<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。</xref:System.Diagnostics.Switch.SwitchSetting%2A> 设置此属性还修改<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。</xref:System.Diagnostics.Switch.SwitchSetting%2A>      1> [!NOTE]&1;> 扩展性，该级别的属性可以设置为任何整数，而不是被限制为<xref:System.Diagnostics.SourceLevels>枚举值。</xref:System.Diagnostics.SourceLevels>"
  example:
  - "The following code example displays the value of the Level property for a source switch. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#8](~/add/codesnippet/csharp/p-system.diagnostics.sou_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#8](~/add/codesnippet/visualbasic/p-system.diagnostics.sou_1.vb)]"
  syntax:
    content: public System.Diagnostics.SourceLevels Level { get; set; }
    return:
      type: System.Diagnostics.SourceLevels
      description: "之一<xref href=&quot;System.Diagnostics.SourceLevels&quot;></xref>这些值表示的事件级别的交换机。"
  overload: System.Diagnostics.SourceSwitch.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: SourceSwitch.OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "时调用的值<xref:System.Diagnostics.Switch.Value*>属性更改。</xref:System.Diagnostics.Switch.Value*>"
  remarks: "OnValueChanged 方法将转换的新值<xref:System.Diagnostics.Switch.Value%2A>属性的整数表示形式中的匹配字段<xref:System.Diagnostics.SourceLevels>枚举，然后使用此整数设置<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.SourceLevels> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.SourceSwitch.OnValueChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新值<xref:System.Diagnostics.Switch.Value*>不是一个<xref href=&quot;System.Diagnostics.SourceLevels&quot;></xref>值。</xref:System.Diagnostics.Switch.Value*>"
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  id: ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: ShouldTrace(TraceEventType)
  nameWithType: SourceSwitch.ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(TraceEventType)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "确定是否跟踪侦听器应调用它，基于跟踪事件类型。"
  remarks: "调用此方法`Trace`中的方法<xref:System.Diagnostics.TraceSource>类以确定是否应调用侦听器来写入跟踪。</xref:System.Diagnostics.TraceSource>      1> [!NOTE]&1;> 应用程序代码不应调用此方法; 它旨在只能由<xref:System.Diagnostics.TraceSource>类</xref:System.Diagnostics.TraceSource>中的方法调用"
  syntax:
    content: public bool ShouldTrace (System.Diagnostics.TraceEventType eventType);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "之一<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果应调用的跟踪侦听器;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.SourceSwitch.ShouldTrace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch(String)
  nameWithType: SourceSwitch.SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch(String,String)
  nameWithType: SourceSwitch.SourceSwitch(String,String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String,String)
- uid: System.Diagnostics.SourceSwitch.Level
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: Level
  nameWithType: SourceSwitch.Level
  fullName: System.Diagnostics.SourceSwitch.Level
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: SourceSwitch.OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: ShouldTrace(TraceEventType)
  nameWithType: SourceSwitch.ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(TraceEventType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Diagnostics.SourceSwitch.#ctor*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch
  nameWithType: SourceSwitch.SourceSwitch
- uid: System.Diagnostics.SourceSwitch.Level*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: Level
  nameWithType: SourceSwitch.Level
- uid: System.Diagnostics.SourceSwitch.OnValueChanged*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: SourceSwitch.OnValueChanged
- uid: System.Diagnostics.SourceSwitch.ShouldTrace*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: ShouldTrace
  nameWithType: SourceSwitch.ShouldTrace
