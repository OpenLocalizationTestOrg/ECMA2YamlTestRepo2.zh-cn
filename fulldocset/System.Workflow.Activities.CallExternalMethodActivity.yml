### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.CallExternalMethodActivity
  id: CallExternalMethodActivity
  children:
  - System.Workflow.Activities.CallExternalMethodActivity.#ctor
  - System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  - System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  - System.Workflow.Activities.CallExternalMethodActivity.MethodName
  - System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: CallExternalMethodActivity
  nameWithType: CallExternalMethodActivity
  fullName: System.Workflow.Activities.CallExternalMethodActivity
  type: Class
  summary: "定义用于本地服务调用工作流通信活动。 此活动用于将数据从工作流发送到通过本地服务主机。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]本地服务是一个类以实现本地服务接口 (使用标记的接口<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) 并添加到<xref:System.Workflow.Activities.ExternalDataExchangeService>.</xref:System.Workflow.Activities.ExternalDataExchangeService> </xref:System.Workflow.Activities.ExternalDataExchangeAttribute>      1> [!NOTE]&1;> 外部方法调用的方法的所有参数时会克隆。 如果参数类型实现<xref:System.ICloneable>`Clone`调用方法或序列化和反序列化<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>。</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> </xref:System.ICloneable>"
  example:
  - "The following code example shows how to use the CallExternalMethodActivity in a custom activity to call an external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#213](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#213)]\n [!code-vb[wf_samples#213](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#213)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("MethodInvoking")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))]

      public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CallExternalMethodActivity()
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>. The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#214](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#214)]\n [!code-vb[wf_samples#214](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#214)]"
  syntax:
    content: public CallExternalMethodActivity ();
    parameters: []
  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CallExternalMethodActivity(String)
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;></xref>类使用活动的名称。"
  syntax:
    content: public CallExternalMethodActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "用户定义活动，用于初始化活动名称属性的名称。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  id: CorrelationToken
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置<xref href=&quot;System.Workflow.Runtime.CorrelationToken&quot;></xref>外部方法。"
  remarks: "此属性定义哪些特定<xref:System.Workflow.Activities.CallExternalMethodActivity>给定外部方法调用是来自的活动。</xref:System.Workflow.Activities.CallExternalMethodActivity> 此值随后可在本地通信服务事件负载中以将定向到正确该事件<xref:System.Workflow.Activities.HandleExternalEventActivity>活动。</xref:System.Workflow.Activities.HandleExternalEventActivity>       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]关联，请参阅[关联本地服务示例](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)。"
  example:
  - "The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object. This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[wf_samples#200](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#200)]\n [!code-vb[wf_samples#200](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#200)]"
  syntax:
    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }
    return:
      type: System.Workflow.Runtime.CorrelationToken
      description: "外部方法的相关标记。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  id: CorrelationTokenProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CorrelationTokenProperty
  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*>属性。</xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "尝试运行<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;></xref>具有指定<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> ，其中包含要在其中运行的执行环境<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "之一<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>值。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.Execute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "这&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A?displayProperty=fullName&gt;为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>executionContext</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "服务对象<code> executionContext </code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: CallExternalMethodActivity.InitializeProperties()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "对依赖项属性执行初始化。"
  remarks: "此方法初始化<xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>属性、 验证<xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>和<xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>属性设置和验证事件中引用<xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>可以在中引用的接口中找到属性<xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>属性。</xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>"
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置外部方法的声明具有接口<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example shows how to set the InterfaceType property. The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public virtual Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "外部方法的声明具有接口<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*>属性。</xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*>"
  remarks: "<xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>属性对应于使用<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>。</xref:System.Workflow.Activities.ExternalDataExchangeAttribute>标记时的接口的名称</xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  id: MethodInvoking
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodInvoking
  nameWithType: CallExternalMethodActivity.MethodInvoking
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "在调用方法之前发生。"
  remarks: ''
  example:
  - "The following code example shows how to use the MethodInvoking event to set the method to call before invoking the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public event EventHandler MethodInvoking;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  id: MethodInvokingEvent
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodInvokingEvent
  nameWithType: CallExternalMethodActivity.MethodInvokingEvent
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;></xref>事件。"
  remarks: "<xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>事件定义在活动调用外部方法的本地服务之前执行的事件委托。</xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  id: MethodName
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置与注册的本地服务调用的方法的名称<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeService&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example shows how to use the MethodName property to set the method name of the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public virtual string MethodName { get; set; }
    return:
      type: System.String
      description: "方法名<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeService&quot;></xref>接口。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  id: MethodNameProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodNameProperty
  nameWithType: CallExternalMethodActivity.MethodNameProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*>属性。</xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*>"
  remarks: "<xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>属性对应于包含在带有<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</xref:System.Workflow.Activities.ExternalDataExchangeAttribute>接口上的方法的名称</xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  id: OnMethodInvoked(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: OnMethodInvoked(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "为派生的类，以提取出并从<xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>.</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>返回值提供挂钩 运行外部方法后立即调用此方法。"
  remarks: ''
  example:
  - "The following example shows an implementation of the `OnMethodInvoked` method.  \n  \n [!code-cs[wf_samples#1](~/add/codesnippet/csharp/wf_snippets/snippets.cs#1)]\n [!code-vb[wf_samples#1](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#1)]"
  syntax:
    content: protected virtual void OnMethodInvoked (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>，其中包含的数据<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;></xref>事件。</xref:System.EventArgs>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  id: OnMethodInvoking(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: OnMethodInvoking(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "为派生类设置<xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>.</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>提供挂钩 运行外部方法之前调用此方法。"
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `OnMethodInvoking` method. This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[wf_samples#207](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#207)]\n [!code-vb[wf_samples#207](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#207)]"
  syntax:
    content: protected virtual void OnMethodInvoking (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>，其中包含的数据<xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;></xref>事件。</xref:System.EventArgs>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取外部方法的形参表中可绑定参数的集合。"
  remarks: ''
  example:
  - "The following example shows how to add a parameter binding to the parameter bindings collection. This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Host Communication Sample](http://msdn.microsoft.com/en-us/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).  \n  \n [!code-cs[WF_Samples#301](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#301)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "<xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref>要绑定到的参数。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>属性。</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "返回指定属性的访问类型。"
  remarks: "在编译时用于验证属性正确绑定到另一个。 如果没有此接口是直接从属性的 getter/setter 推断此信息。"
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "实现的对象<xref:System.IServiceProvider>提供访问设计时服务，如有必要。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "属性的名称。"
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref>枚举值，该值指示该属性的访问级别。"
  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "返回<xref:System.Type>指定属性。</xref:System.Type>"
  remarks: "在编译时用于验证属性正确绑定到一个其他。"
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "实现的对象<xref:System.IServiceProvider>提供访问设计时服务，如有必要。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "属性的名称。"
    return:
      type: System.Type
      description: "<xref:System.Type>作为传递其名称的属性<code> propertyName </code>参数。</xref:System.Type>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity()
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity(String)
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
- uid: System.Workflow.Runtime.CorrelationToken
  parent: System.Workflow.Runtime
  isExternal: false
  name: CorrelationToken
  nameWithType: CorrelationToken
  fullName: System.Workflow.Runtime.CorrelationToken
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationTokenProperty
  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: CallExternalMethodActivity.InitializeProperties()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodInvoking
  nameWithType: CallExternalMethodActivity.MethodInvoking
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodInvokingEvent
  nameWithType: CallExternalMethodActivity.MethodInvokingEvent
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodNameProperty
  nameWithType: CallExternalMethodActivity.MethodNameProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoked(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoking(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: Execute
  nameWithType: CallExternalMethodActivity.Execute
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: CallExternalMethodActivity.InitializeProperties
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoked
  nameWithType: CallExternalMethodActivity.OnMethodInvoked
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoking
  nameWithType: CallExternalMethodActivity.OnMethodInvoking
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
