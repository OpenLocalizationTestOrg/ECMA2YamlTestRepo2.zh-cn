### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Windows.Forms.TreeNodeCollection.Add(System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNodeCollection.Clear
  - System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Count
  - System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  - System.Windows.Forms.TreeNodeCollection.GetEnumerator
  - System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.IsReadOnly
  - System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Item(System.String)
  - System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
  type: Class
  summary: "表示一套<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象。"
  remarks: "<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>， <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>，和<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>方法使你能够添加和从集合中删除每个树节点。</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>      1> [!NOTE]&1;> 不支持枚举集合和删除节点。       你还可以使用<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法来添加或从集合中移除所有树节点。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>       类不能从副本类继承。"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_6_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_6_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_6_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public class TreeNodeCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将指定的标签文本的新树节点添加到当前的树节点集合的末尾。"
  remarks: "你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       若要删除<xref:System.Windows.Forms.TreeNode>之前添加，请使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>， <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_56_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_56_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_56_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string text);
    parameters:
    - id: text
      type: System.String
      description: "显示的标签文本<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示添加到集合中的树节点。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  id: Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将以前创建的树节点添加到树节点集合的末尾。"
  remarks: "此版本的<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>方法允许您添加之前创建<xref:System.Windows.Forms.TreeNode>的对象添加到树节点集合的末尾。</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       若要删除<xref:System.Windows.Forms.TreeNode>之前添加，请使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>， <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> A<xref:System.Windows.Forms.TreeNode>可以分配给只有一个<xref:System.Windows.Forms.TreeView>控件一次。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> 若要添加到新的树视图控件的树节点，你必须删除它从其他树视图中第一次或将其克隆。"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_22_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_22_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_22_1.cpp)]"
  syntax:
    content: public virtual int Add (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要添加到集合。"
    return:
      type: System.Int32
      description: "从零开始的索引值<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>添加到树节点集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code>当前分配给另一个<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "具有指定的键和文本，创建一个新的树节点并将其添加到集合。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text);
    parameters:
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已添加到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  id: Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其添加到集合。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像       树节点添加到集合的末尾。 你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);
    parameters:
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageIndex
      type: System.Int32
      description: "要在树节点中显示的图像的索引。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已添加到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其添加到集合。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       树节点添加到集合的末尾。 你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);
    parameters:
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageKey
      type: System.String
      description: "要在树节点中显示的图像。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已添加到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  id: Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其添加到集合。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       树节点添加到集合的末尾。 你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageIndex`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像       `selectedImageIndex`参数引用<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.StateImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageIndex
      type: System.Int32
      description: "要在树节点中显示的图像的索引。"
    - id: selectedImageIndex
      type: System.Int32
      description: "当它处于选定状态时要在树节点中显示的图像的索引。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "已添加到集合中的树节点。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其添加到集合。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       树节点添加到集合的末尾。 你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像       `selectedImageKey`参数引用<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.StateImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageKey
      type: System.String
      description: "在树节点中显示的图像的键。"
    - id: selectedImageKey
      type: System.String
      description: "当节点处于选定状态时要显示的图像的键。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已添加到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  id: AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向集合中添加先前创建的树节点的数组。"
  remarks: "<xref:System.Windows.Forms.TreeNode>中所含对象`nodes`数组追加到集合的末尾。</xref:System.Windows.Forms.TreeNode>       你可以使用在 AddRange 方法将一组快速添加之前创建<xref:System.Windows.Forms.TreeNode>到而不是手动添加每个集合对象<xref:System.Windows.Forms.TreeNode>集合使用<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode>       若要删除<xref:System.Windows.Forms.TreeNode>之前添加，请使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>， <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the AddRange method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/ef635824-b7a0-4e6a-bbd4-_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/ef635824-b7a0-4e6a-bbd4-_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/ef635824-b7a0-4e6a-bbd4-_1.cs)]"
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);
    parameters:
    - id: nodes
      type: System.Windows.Forms.TreeNode[]
      description: "数组<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象表示要添加到集合的树节点。"
  overload: System.Windows.Forms.TreeNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nodes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nodes</code>是另一个子<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  id: Clear
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从集合中移除所有树节点。"
  remarks: "此方法可用于清除整个集合的树视图中的树节点。       若要从集合中移除的每个树节点，使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>或<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>       若要添加新<xref:System.Windows.Forms.TreeNode>的对象添加到集合中，使用<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>， <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the Clear method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/m-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_20_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/m-system.windows.forms.t_20_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  id: Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定指定的树节点是否是集合的成员。"
  remarks: "此方法可用于确定是否<xref:System.Windows.Forms.TreeNode>属于集合，然后再尝试执行操作的时间为<xref:System.Windows.Forms.TreeNode>。</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode> a 你可以使用此方法以确认<xref:System.Windows.Forms.TreeNode>已添加到或仍是集合的成员。</xref:System.Windows.Forms.TreeNode>       此方法采用量是时间的节点集合的大小成正比，因此你可能想要避免使用较大的集合。       此方法检查引用相等性。 不能用于确定等效但不同的节点是否是集合中。      1> [!NOTE]&1;> 的引用相等性要求一个含义是，你无法自定义此方法的行为的派生<xref:System.Windows.Forms.TreeNode>类型通过重写<xref:System.Object.Equals%2A>方法的<xref:System.Windows.Forms.TreeNode>类。</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/049b6658-8822-4453-9f89-_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/049b6658-8822-4453-9f89-_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/049b6658-8822-4453-9f89-_1.vb)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要在集合中查找。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>是集合的成员; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定集合是否包含具有指定键的树节点。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       键比较不区分大小写。 如果`key`参数是`null`或空字符串，<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>属性返回`false`。</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "名称<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>搜索。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示的集合包含<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>具有指定键; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将整个集合复制到现有数组中在该数组中指定的位置。"
  remarks: ''
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/m-system.windows.forms.t_31_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_31_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/m-system.windows.forms.t_31_1.cpp)]"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "目标数组。"
    - id: index
      type: System.Int32
      description: "开始在目标数组中存储的索引。"
  overload: System.Windows.Forms.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Count
  id: Count
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取的总数<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>集合中的对象。"
  remarks: "Count 属性存储的数目<xref:System.Windows.Forms.TreeNode>分配给集合的对象。</xref:System.Windows.Forms.TreeNode> 你可用作计数属性值上限的循环来循环访问集合。      1> [!NOTE]&1;> 由于集合的索引值是从零开始的索引，你必须从减去&1; 循环变量。 如果你不考虑为此，你将超过上限的收集和 throw<xref:System.IndexOutOfRangeException>异常。</xref:System.IndexOutOfRangeException>"
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/p-system.windows.forms.t_28_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_28_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/p-system.windows.forms.t_28_1.cpp)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "总次数<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>集合中的对象。"
  overload: System.Windows.Forms.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "查找具有指定键，也可以选择搜索子节点的树节点。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       键比较不区分大小写。 如果`key`参数是`null`或空字符串，或没有匹配项，<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>属性返回一个空数组`.`</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);
    parameters:
    - id: key
      type: System.String
      description: "要搜索的树节点的名称。"
    - id: searchAllChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要搜索的树节点，则子节点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Windows.Forms.TreeNode[]
      description: "数组<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象其<xref:System.Windows.Forms.TreeNode.Name*>属性指定的键相匹配。</xref:System.Windows.Forms.TreeNode.Name*>"
  overload: System.Windows.Forms.TreeNodeCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回可用于循环访问树节点集合的枚举。"
  remarks: ''
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/m-system.windows.forms.t_51_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/m-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_51_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>表示树节点集合。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  id: IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回集合中指定的树节点的索引。"
  remarks: "此方法采用量是时间的节点集合的大小成正比，因此你可能想要避免使用较大的集合。       此方法检查引用相等性。 不能用于检索集合中的等效但不同节点的索引。      1> [!NOTE]&1;> 的引用相等性要求一个含义是，你无法自定义此方法的行为的派生<xref:System.Windows.Forms.TreeNode>类型通过重写<xref:System.Object.Equals%2A>方法的<xref:System.Windows.Forms.TreeNode>类。</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/cpp/m-system.windows.forms.t_27_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/csharp/m-system.windows.forms.t_27_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_27_1.vb)]"
  syntax:
    content: public int IndexOf (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要在集合中查找。"
    return:
      type: System.Int32
      description: "在树节点集合; 中找到的项的从零开始的索引否则为-1。"
  overload: System.Windows.Forms.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  id: IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回具有指定键的树节点的第一个匹配项的索引。"
  remarks: "如果连续调用 IndexOfKey，最后返回索引将检查键的匹配项的第一次，并且如果没有匹配项，从集合的开头开始搜索。       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       键比较不区分大小写。 如果`key`是`null`或空字符串，<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>属性将返回-1。</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual int IndexOfKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "要搜索的树节点的名称。"
    return:
      type: System.Int32
      description: "与指定的键，树节点的第一个匹配项的从零开始索引如果找到了;否则为-1。"
  overload: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定文本的树节点并将其插入指定索引处。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  id: Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将现有的树节点插入到指定位置的树节点集合。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName> <xref:System.Windows.Forms.TreeNode>插入到树视图中，与<xref:System.Windows.Forms.TreeView>重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       若要删除<xref:System.Windows.Forms.TreeNode>之前添加，请使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>， <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> A<xref:System.Windows.Forms.TreeNode>可以分配给只有一个<xref:System.Windows.Forms.TreeView>控件一次。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> 若要添加到新的树视图控件的树节点，你必须删除它从其他树视图中第一次或将其克隆。"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the Insert method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/13281f08-0181-4942-9ff8-_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/13281f08-0181-4942-9ff8-_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/13281f08-0181-4942-9ff8-_1.cs)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.TreeNode node);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的树节点的集合中的索引的位置。"
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要插入到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code>当前分配给另一个<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "使用指定的文本和密钥，创建一个树节点并将其插入到集合。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其插入集合中指定索引处。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageIndex
      type: System.Int32
      description: "要在树节点中显示的图像的索引。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其插入集合中指定索引处。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageKey
      type: System.String
      description: "在树节点中显示的图像的键。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其插入集合中指定索引处。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像       `selectedimageIndex`参数引用<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.StateImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageIndex
      type: System.Int32
      description: "要在树节点中显示的图像的索引。"
    - id: selectedImageIndex
      type: System.Int32
      description: "要为选定状态时，树节点中显示的图像的索引。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建具有指定的键、 文本和图像的树节点并将其插入集合中指定索引处。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数值将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Windows.Forms.TreeView>将重新排序。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       你还可以添加新<xref:System.Windows.Forms.TreeNode>到通过使用集合的对象<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>或<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey`参数引用<xref:System.Windows.Forms.TreeView.ImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.ImageList%2A>中的图像       `selectedimageKey`参数引用<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>属性</xref:System.Windows.Forms.TreeView.StateImageList%2A>中的图像"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入节点的集合中的位置。"
    - id: key
      type: System.String
      description: "树节点的名称。"
    - id: text
      type: System.String
      description: "要在树节点中显示的文本。"
    - id: imageKey
      type: System.String
      description: "在树节点中显示的图像的键。"
    - id: selectedImageKey
      type: System.String
      description: "要为选定状态时，树节点中显示的图像的键。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>已插入集合中。"
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示集合是否只读的。"
  remarks: ''
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_284_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_284_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_284_1.cs)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该集合为只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>位于指定索引集合中的位置。"
  remarks: "若要将分配<xref:System.Windows.Forms.TreeNode>对象到特定位置，或检索从<xref:System.Windows.Forms.TreeNodeCollection>，你可以引用具有特定的索引值的集合对象。</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> 索引值<xref:System.Windows.Forms.TreeNodeCollection>是从零开始的索引。</xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_118_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/p-system.windows.forms.t_118_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/p-system.windows.forms.t_118_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "索引的位置<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>集合中。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>位于指定索引集合中的位置。"
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>值小于 0 或大于集合中的树节点数。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从集合中获取具有指定键的树节点。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>       键比较不区分大小写。 如果`key`参数是`null`或空字符串，此项属性返回`null`。"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "名称<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>若要从集合中检索。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>与指定的键。"
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  id: Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从树节点集合中移除指定的树节点。"
  remarks: "当<xref:System.Windows.Forms.TreeNode>从树节点集合，所有后续的树节点将上移集合中的一个位置删除。</xref:System.Windows.Forms.TreeNode>       您还可以删除<xref:System.Windows.Forms.TreeNode>以前通过使用添加<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> 不支持枚举集合和删除节点。       若要添加新<xref:System.Windows.Forms.TreeNode>的对象添加到集合中，使用<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>， <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the Remove method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_35_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/m-system.windows.forms.t_35_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/m-system.windows.forms.t_35_1.cs)]"
  syntax:
    content: public void Remove (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>删除。"
  overload: System.Windows.Forms.TreeNodeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从指定索引处的树节点集合中移除的树节点。"
  remarks: "当<xref:System.Windows.Forms.TreeNode>从树节点集合，所有后续的树节点将上移集合中的一个位置删除。</xref:System.Windows.Forms.TreeNode>       您还可以删除<xref:System.Windows.Forms.TreeNode>以前通过使用添加<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>或<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> 不支持枚举集合和删除节点。       若要添加新<xref:System.Windows.Forms.TreeNode>的对象添加到集合中，使用<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>， <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>，或<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the RemoveAt method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_69_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/m-system.windows.forms.t_69_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/m-system.windows.forms.t_69_1.cs)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>删除。"
  overload: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  id: RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从集合中移除具有指定键的树节点。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于<xref:System.Windows.Forms.TreeNode>在<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode>密钥</xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual void RemoveByKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "要从集合中移除的树节点的名称。"
  overload: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示是否同步对集合的访问 （线程安全）。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取可用于同步对集合的访问的对象。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "可以用于对访问进行同步的对象<xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将对象添加到树节点集合的末尾。"
  remarks: "如果`node`不是<xref:System.Windows.Forms.TreeNodeCollection>，IList.Add 方法将使用<xref:System.Windows.Forms.TreeNode.ToString%2A>的<xref:System.Windows.Forms.TreeNode>类</xref:System.Windows.Forms.TreeNode>的方法</xref:System.Windows.Forms.TreeNode.ToString%2A>返回的字符串</xref:System.Windows.Forms.TreeNodeCollection>"
  syntax:
    content: int IList.Add (object node);
    parameters:
    - id: node
      type: System.Object
      description: "要添加到树节点集合的对象。"
    return:
      type: System.Int32
      description: "从零开始的索引值<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>已添加到树节点集合。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>node</code>当前分配给另一个<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>控件。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定指定的树节点是否是集合的成员。"
  remarks: "如果`node`不<xref:System.Windows.Forms.TreeNode>，IList.Contains 方法返回`false`。</xref:System.Windows.Forms.TreeNode> 因此，您不能传入的字符串以确定集合是否包含具有作为字符串的值的节点其<xref:System.Windows.Forms.TreeNode.Text%2A>属性。</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: bool IList.Contains (object node);
    parameters:
    - id: node
      type: System.Object
      description: "要在集合中找到的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> node </code>是集合的成员; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回集合中指定的树节点的索引。"
  remarks: "如果`node`不<xref:System.Windows.Forms.TreeNode>，IList.IndexOf 方法返回-1。</xref:System.Windows.Forms.TreeNode> 因此，不能将传递一个字符串来查找已作为字符串的值的节点在其<xref:System.Windows.Forms.TreeNode.Text%2A>属性。</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: int IList.IndexOf (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要在集合中查找。"
    return:
      type: System.Int32
      description: "在树节点集合; 中找到的项的从零开始的索引否则为-1。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在树节点集合中的指定位置处插入一个现有的树节点。"
  remarks: "如果<xref:System.Windows.Forms.TreeView.Sorted%2A>属性设置为`true`、`index`参数将被忽略。</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>插入到树视图和<xref:System.Web.UI.WebControls.TreeView>将重新排序。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Insert (int index, object node);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的树节点的集合中的索引的位置。"
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>要插入到集合。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>当前分配给另一个<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。       -or-       <code>node</code> is not a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示树节点集合是否具有固定的大小。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置集合中的指定索引处的树节点。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取或设置项位置的从零开始索引。"
    return:
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>中指定索引处<xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "设置的值不是<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从树节点集合中移除指定的树节点。"
  remarks: "不能传入要删除的节点具有作为字符串的值的字符串其<xref:System.Windows.Forms.TreeNode.Text%2A>属性。</xref:System.Windows.Forms.TreeNode.Text%2A>       当<xref:System.Windows.Forms.TreeNode>从树节点集合，所有后续的树节点将上移集合中的一个位置删除。</xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Remove (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>若要从集合中移除。"
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.TreeNodeCollection.Count
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.TreeNodeCollection.Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Windows.Forms.TreeNodeCollection.AddRange*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: TreeNodeCollection.AddRange
- uid: System.Windows.Forms.TreeNodeCollection.Clear*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Windows.Forms.TreeNodeCollection.Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey
  nameWithType: TreeNodeCollection.ContainsKey
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Windows.Forms.TreeNodeCollection.Count*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find
  nameWithType: TreeNodeCollection.Find
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey
  nameWithType: TreeNodeCollection.IndexOfKey
- uid: System.Windows.Forms.TreeNodeCollection.Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeCollection.Insert
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Windows.Forms.TreeNodeCollection.Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey
  nameWithType: TreeNodeCollection.RemoveByKey
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TreeNodeCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TreeNodeCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove
