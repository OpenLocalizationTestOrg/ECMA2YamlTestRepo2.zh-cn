### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IComponent
  id: IComponent
  children:
  - System.ComponentModel.IComponent.Disposed
  - System.ComponentModel.IComponent.Site
  langs:
  - csharp
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
  type: Interface
  summary: "提供所需的所有组件的功能。"
  remarks: "<xref:System.ComponentModel.Component>为 IComponent 的默认实现，并充当公共语言运行时中的所有组件的基类。</xref:System.ComponentModel.Component>       可以包含在容器中的组件。 在此上下文中，包含引用逻辑包容，而不是直观包容。 你可以使用组件和中的各种方案，visual 和非直观的容器。       <xref:System.Windows.Forms.Control?displayProperty=fullName>继承自<xref:System.ComponentModel.Component>，IComponent 的默认实现。</xref:System.ComponentModel.Component></xref:System.Windows.Forms.Control?displayProperty=fullName>       主要通过提供容器与其容器之间交互组件<xref:System.ComponentModel.ISite>，这是特定于容器的每个组件信息的存储库。</xref:System.ComponentModel.ISite>"
  example:
  - "The following code example demonstrates how to implement the IComponent, <xref:System.ComponentModel.ISite>, and <xref:System.ComponentModel.IContainer> interfaces.  \n  \n [!code-cs[ContainerExmpl#1](~/add/codesnippet/csharp/t-system.componentmodel._66_1.cs)]\n [!code-cpp[ContainerExmpl#1](~/add/codesnippet/cpp/t-system.componentmodel._66_1.cpp)]\n [!code-vb[ContainerExmpl#1](~/add/codesnippet/visualbasic/t-system.componentmodel._66_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.RootDesignerSerializer("System.ComponentModel.Design.Serialization.RootCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", true)]

      [System.ComponentModel.Designer("System.ComponentModel.Design.ComponentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ComponentDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ComponentConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IComponent : IDisposable
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.ComponentModel.IComponent.Disposed
  id: Disposed
  parent: System.ComponentModel.IComponent
  langs:
  - csharp
  name: Disposed
  nameWithType: IComponent.Disposed
  fullName: System.ComponentModel.IComponent.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "表示处理组件的已释放的事件的方法。"
  remarks: '在创建已释放的委托时，需要标识处理事件的方法。 若要将事件与事件处理程序关联，添加到事件的委托的一个实例。 除非移除了该委托，称为每当发生该事件时，事件处理程序。 有关事件处理程序委托的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。'
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComponent.Site
  id: Site
  parent: System.ComponentModel.IComponent
  langs:
  - csharp
  name: Site
  nameWithType: IComponent.Site
  fullName: System.ComponentModel.IComponent.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置<xref href=&quot;System.ComponentModel.ISite&quot;></xref>与关联<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>。"
  remarks: "站点还可以充当容器详细信息，每个组件的信息，如组件名称的存储库。"
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "<xref href=&quot;System.ComponentModel.ISite&quot;> </xref>与组件; 关联的对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果组件不具备站点。"
  overload: System.ComponentModel.IComponent.Site*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.IComponent.Disposed
  parent: System.ComponentModel.IComponent
  isExternal: false
  name: Disposed
  nameWithType: IComponent.Disposed
  fullName: System.ComponentModel.IComponent.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.IComponent.Site
  parent: System.ComponentModel.IComponent
  isExternal: false
  name: Site
  nameWithType: IComponent.Site
  fullName: System.ComponentModel.IComponent.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.IComponent.Site*
  parent: System.ComponentModel.IComponent
  isExternal: false
  name: Site
  nameWithType: IComponent.Site
