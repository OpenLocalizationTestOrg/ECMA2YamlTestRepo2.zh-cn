### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.MediaPlayer
  id: MediaPlayer
  children:
  - System.Windows.Media.MediaPlayer.#ctor
  - System.Windows.Media.MediaPlayer.Balance
  - System.Windows.Media.MediaPlayer.BufferingEnded
  - System.Windows.Media.MediaPlayer.BufferingProgress
  - System.Windows.Media.MediaPlayer.BufferingStarted
  - System.Windows.Media.MediaPlayer.CanPause
  - System.Windows.Media.MediaPlayer.Clock
  - System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.Close
  - System.Windows.Media.MediaPlayer.CreateInstanceCore
  - System.Windows.Media.MediaPlayer.DownloadProgress
  - System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.HasAudio
  - System.Windows.Media.MediaPlayer.HasVideo
  - System.Windows.Media.MediaPlayer.IsBuffering
  - System.Windows.Media.MediaPlayer.IsMuted
  - System.Windows.Media.MediaPlayer.MediaEnded
  - System.Windows.Media.MediaPlayer.MediaFailed
  - System.Windows.Media.MediaPlayer.MediaOpened
  - System.Windows.Media.MediaPlayer.NaturalDuration
  - System.Windows.Media.MediaPlayer.NaturalVideoHeight
  - System.Windows.Media.MediaPlayer.NaturalVideoWidth
  - System.Windows.Media.MediaPlayer.Open(System.Uri)
  - System.Windows.Media.MediaPlayer.Pause
  - System.Windows.Media.MediaPlayer.Play
  - System.Windows.Media.MediaPlayer.Position
  - System.Windows.Media.MediaPlayer.ReadPreamble
  - System.Windows.Media.MediaPlayer.ScriptCommand
  - System.Windows.Media.MediaPlayer.ScrubbingEnabled
  - System.Windows.Media.MediaPlayer.Source
  - System.Windows.Media.MediaPlayer.SpeedRatio
  - System.Windows.Media.MediaPlayer.Stop
  - System.Windows.Media.MediaPlayer.Volume
  - System.Windows.Media.MediaPlayer.WritePreamble
  langs:
  - csharp
  name: MediaPlayer
  nameWithType: MediaPlayer
  fullName: System.Windows.Media.MediaPlayer
  type: Class
  summary: "对于绘图提供媒体播放。"
  remarks: "虽然你可以将声明中此类的实例[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，则无法加载和播放其媒体而不使用代码。 若要在中播放媒体[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]只，请使用一种<xref:System.Windows.Controls.MediaElement>。</xref:System.Windows.Controls.MediaElement> 此外，如果声明中的某个实例[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，唯一的实际用途是将填充的属性元素语法<xref:System.Windows.Media.VideoDrawing.Player%2A>属性。</xref:System.Windows.Media.VideoDrawing.Player%2A>       将与你的应用程序的媒体的分发，不能将媒体文件用作为项目资源。 在项目文件中，你必须改为媒体将类型设置为`Content`并设置`CopyToOutputDirectory`到`PreserveNewest`或`Always`。       可以在两种不同模式，具体取决于玩家的决定因素中使用 MediaPlayer︰ 独立模式还是时钟模式。 在独立模式下，MediaPlayer 相当于图像和媒体打开通过<xref:System.Windows.Media.MediaPlayer.Open%2A>方法驱动器播放。</xref:System.Windows.Media.MediaPlayer.Open%2A> 在时钟模式下，MediaPlayer 可以被想象成动画的目标，因此它将具有对应的<xref:System.Windows.Media.Animation.Timeline>和<xref:System.Windows.Media.Animation.Clock>计时条目树的控件播放。</xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.Timeline> 有关媒体模式的详细信息，请参阅[多媒体概述](~/add/includes/ajax-current-ext-md.md)。       MediaPlayer 是不同于<xref:System.Windows.Controls.MediaElement>，因为它不是可以直接添加的控件[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]的应用程序。</xref:System.Windows.Controls.MediaElement> 若要显示使用 MediaPlayer，加载媒体<xref:System.Windows.Media.VideoDrawing>或<xref:System.Windows.Media.DrawingContext>必须使用。</xref:System.Windows.Media.DrawingContext> </xref:System.Windows.Media.VideoDrawing>"
  example:
  - '[How to: Play Media using a VideoDrawing](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: 'public class MediaPlayer : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.Clone
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.#ctor
  id: '#ctor'
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>类。"
  syntax:
    content: public MediaPlayer ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Balance
  id: Balance
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置左、 右扬声器卷之间的平衡。"
  remarks: "值-1 表示 100%的左侧发言人和 1 表示 100%的右侧发言人。"
  syntax:
    content: public double Balance { get; set; }
    return:
      type: System.Double
      description: "-1 和 1 之间的范围中的左侧和右侧扬声器的音量比率。 默认值为 0。"
  overload: System.Windows.Media.MediaPlayer.Balance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  id: BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "缓冲已完成时发生。"
  syntax:
    content: public event EventHandler BufferingEnded;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  id: BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取用于流式传输内容完成的缓冲百分比。"
  syntax:
    content: public double BufferingProgress { get; }
    return:
      type: System.Double
      description: "完成用于流式传输内容在 0 和 1 之间的值中表示的缓冲百分比。"
  overload: System.Windows.Media.MediaPlayer.BufferingProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  id: BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "当缓冲已启动时发生。"
  syntax:
    content: public event EventHandler BufferingStarted;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CanPause
  id: CanPause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否可以暂停媒体。"
  syntax:
    content: public bool CanPause { get; }
    return:
      type: System.Boolean
      description: "如果可以暂停媒体，则为 true否则为 false。"
  overload: System.Windows.Media.MediaPlayer.CanPause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Clock
  id: Clock
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref href=&quot;System.Windows.Media.MediaClock&quot;></xref>与关联<xref href=&quot;System.Windows.Media.MediaTimeline&quot;></xref>要播放。"
  remarks: "设置此属性告知<xref:System.Windows.Media.MediaPlayer>要时钟驱动，并且将利用计时引擎，同时使播放器处于时钟模式。</xref:System.Windows.Media.MediaPlayer> 停止任何正在播放的媒体和<xref:System.Uri>与新关联打开时钟。</xref:System.Uri>       当玩家在时钟模式中，查找使用<xref:System.Windows.Media.MediaPlayer.Position%2A>或调用<xref:System.Windows.Media.MediaPlayer.Play%2A>， <xref:System.Windows.Media.MediaPlayer.Pause%2A>，或<xref:System.Windows.Media.MediaPlayer.Stop%2A>方法将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Media.MediaPlayer.Stop%2A> </xref:System.Windows.Media.MediaPlayer.Pause%2A> </xref:System.Windows.Media.MediaPlayer.Play%2A> </xref:System.Windows.Media.MediaPlayer.Position%2A> 当播放器时钟为 null 时，这些操作才可用。"
  syntax:
    content: public System.Windows.Media.MediaClock Clock { get; set; }
    return:
      type: System.Windows.Media.MediaClock
      description: "与关联的时钟<xref href=&quot;System.Windows.Media.MediaTimeline&quot;></xref>要播放。 默认值为 null。"
  overload: System.Windows.Media.MediaPlayer.Clock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "使此实例的指定的深层副本<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>。 在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。"
  remarks: "调用此方法<xref:System.Windows.Freezable.Clone%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</xref:System.Windows.Freezable.Clone%2A> 若要创建当前对象的可修改副本，请调用<xref:System.Windows.Freezable.Clone%2A>而不是直接调用此方法。</xref:System.Windows.Freezable.Clone%2A>       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>克隆。"
  overload: System.Windows.Media.MediaPlayer.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "使此实例的指定的可修改深层副本<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>使用当前的属性值。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "调用此方法<xref:System.Windows.Freezable.CloneCurrentValue%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</xref:System.Windows.Freezable.CloneCurrentValue%2A> 若要创建当前对象的可修改副本，请调用<xref:System.Windows.Freezable.CloneCurrentValue%2A>而不是直接调用此方法。</xref:System.Windows.Freezable.CloneCurrentValue%2A>       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>克隆。"
  overload: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Close
  id: Close
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "关闭基础媒体。"
  remarks: "<xref:System.Windows.Media.MediaPlayer>可以通过调用再次打开<xref:System.Windows.Media.MediaPlayer.Open%2A>方法。</xref:System.Windows.Media.MediaPlayer.Open%2A> </xref:System.Windows.Media.MediaPlayer>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>实例。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "一个新<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>实例。"
  overload: System.Windows.Media.MediaPlayer.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  id: DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取位于远程服务器的内容的下载进度的百分比。"
  syntax:
    content: public double DownloadProgress { get; }
    return:
      type: System.Double
      description: "内容位于远程服务器由介于 0 和 1 之间的值表示的下载进度的百分比。 默认值为 0。"
  overload: System.Windows.Media.MediaPlayer.DownloadProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "使此实例的指定克隆<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>对象。"
  remarks: "在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。 请注意，如果这些属性包含资源引用或数据绑定<xref:System.Windows.Freezable.GetAsFrozen%2A>将失败时尝试冻结该对象，并将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Freezable.GetAsFrozen%2A>       调用此方法<xref:System.Windows.Freezable.GetAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</xref:System.Windows.Freezable.GetAsFrozen%2A> 若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接调用此方法。</xref:System.Windows.Freezable.GetAsFrozen%2A>       有关详细信息，请参阅<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>要克隆和冻结的对象。"
  overload: System.Windows.Media.MediaPlayer.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.HasAudio
  id: HasAudio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示媒体是否具有音频输出。"
  syntax:
    content: public bool HasAudio { get; }
    return:
      type: System.Boolean
      description: "如果媒体具有音频输出，则为 true否则为 false。"
  overload: System.Windows.Media.MediaPlayer.HasAudio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.HasVideo
  id: HasVideo
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否媒体具有视频输出。"
  syntax:
    content: public bool HasVideo { get; }
    return:
      type: System.Boolean
      description: "如果媒体具有视频输出，则为 true否则为 false。"
  overload: System.Windows.Media.MediaPlayer.HasVideo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  id: IsBuffering
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否缓冲媒体。"
  syntax:
    content: public bool IsBuffering { get; }
    return:
      type: System.Boolean
      description: "如果媒体正在缓冲; 则为 true否则为 false。"
  overload: System.Windows.Media.MediaPlayer.IsBuffering*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.IsMuted
  id: IsMuted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否静音媒体。"
  syntax:
    content: public bool IsMuted { get; set; }
    return:
      type: System.Boolean
      description: "如果媒体为静音，则为，true否则为 false。"
  overload: System.Windows.Media.MediaPlayer.IsMuted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  id: MediaEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "媒体已完成播放时发生。"
  syntax:
    content: public event EventHandler MediaEnded;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  id: MediaFailed
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "遇到错误时发生"
  remarks: "<a name=&quot;xamlAttributeUsage_MediaFailed&quot;></a># # XAML 属性用法```   <object MediaFailed=&quot;EventHandler&quot;/>   ```"
  syntax:
    content: public event EventHandler<System.Windows.Media.ExceptionEventArgs> MediaFailed;
    return:
      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  id: MediaOpened
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "当打开媒体时发生。"
  syntax:
    content: public event EventHandler MediaOpened;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取媒体的自然持续时间。"
  remarks: "无法确定 NaturalDuration 直到后<xref:System.Windows.Media.MediaPlayer.MediaOpened>发生。</xref:System.Windows.Media.MediaPlayer.MediaOpened>"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "媒体自然持续时间。 默认值为<xref:System.Windows.Duration.Automatic*>。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.MediaPlayer.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  id: NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取视频的像素高度。"
  remarks: "如果媒体类型是音频，则返回 null。"
  syntax:
    content: public int NaturalVideoHeight { get; }
    return:
      type: System.Int32
      description: "视频像素高度。"
  overload: System.Windows.Media.MediaPlayer.NaturalVideoHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  id: NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取视频的像素宽度。"
  remarks: "如果媒体类型是音频，则返回 null。"
  syntax:
    content: public int NaturalVideoWidth { get; }
    return:
      type: System.Int32
      description: "视频像素宽度。"
  overload: System.Windows.Media.MediaPlayer.NaturalVideoWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  id: Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "打开给定<xref:System.Uri>播放媒体。</xref:System.Uri>"
  syntax:
    content: public void Open (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "媒体源<xref:System.Uri>.</xref:System.Uri>"
  overload: System.Windows.Media.MediaPlayer.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Pause
  id: Pause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "暂停媒体播放。"
  remarks: "调用暂停时，玩家必须<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Windows.Media.MediaPlayer.Clock%2A>关联 计时引擎驱动媒体播放时，不能调用暂停。"
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Play
  id: Play
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "从当前<xref:System.Windows.Media.MediaPlayer.Position*>.</xref:System.Windows.Media.MediaPlayer.Position*>播放媒体"
  remarks: "当玩家必须<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Windows.Media.MediaPlayer.Clock%2A>关联调用 Play 计时引擎驱动媒体播放时，不能调用 play。"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Play*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Position
  id: Position
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置媒体的当前位置。"
  remarks: "如果玩家必须关联<xref:System.Windows.Media.MediaPlayer.Clock%2A>，则设置位置，则将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Media.MediaPlayer.Clock%2A> 计时引擎驱动媒体播放时，无法设置位置。      <a name=&quot;xamlTextUsage_Position&quot;></a># # XAML 文本用法不中最常用[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public TimeSpan Position { get; set; }
    return:
      type: System.TimeSpan
      description: "媒体的当前位置。"
  overload: System.Windows.Media.MediaPlayer.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  id: ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "可确保 MediaPlayer 正在访问从有效的线程。"
  syntax:
    content: protected void ReadPreamble ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.ReadPreamble*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  id: ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "脚本命令遇到的媒体时发生。"
  remarks: "<a name=&quot;xamlAttributeUsage_ScriptCommand&quot;></a># # XAML 属性用法```   <object ScriptCommand=&quot;EventHandler&quot;/>   ```"
  syntax:
    content: public event EventHandler<System.Windows.Media.MediaScriptCommandEventArgs> ScriptCommand;
    return:
      type: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  id: ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置一个值，该值指示是否启用清理。"
  syntax:
    content: public bool ScrubbingEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了清理;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.MediaPlayer.ScrubbingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Source
  id: Source
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取媒体<xref:System.Uri>.</xref:System.Uri>"
  remarks: "源是只读的。 此属性获取<xref:System.Uri>打开通过<xref:System.Windows.Media.MediaPlayer.Open%2A>方法或<xref:System.Uri>与<xref:System.Windows.Media.MediaPlayer.Clock%2A>.</xref:System.Windows.Media.MediaPlayer.Clock%2A>关联</xref:System.Uri></xref:System.Windows.Media.MediaPlayer.Open%2A></xref:System.Uri>"
  syntax:
    content: public Uri Source { get; }
    return:
      type: System.Uri
      description: "当前媒体<xref:System.Uri>.</xref:System.Uri>"
  overload: System.Windows.Media.MediaPlayer.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置的速度比在播放媒体。"
  remarks: "值小于一个产生比正常播放，而大于一个产生比正常播放快值慢。       如果玩家都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>，不允许设置 SpeedRatio。</xref:System.Windows.Media.MediaPlayer.Clock%2A> 无法设置 SpeedRatio，计时引擎驱动媒体播放时。       音频播放不保证时<xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>不`1`。</xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>      <a name=&quot;xamlTextUsage_SpeedRatio&quot;></a># # XAML 文本用法不中最常用[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "速率，则会播放该媒体后由介于 0 和最大双精度值之间的值表示。 默认值为 1.0。"
  overload: System.Windows.Media.MediaPlayer.SpeedRatio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Stop
  id: Stop
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "停止媒体播放。"
  remarks: "调用停止时，玩家必须<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Windows.Media.MediaPlayer.Clock%2A>关联 计时引擎驱动媒体播放时，不能调用停止。"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Volume
  id: Volume
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置媒体的音量。"
  remarks: "<a name=&quot;xamlTextUsage_Volume&quot;></a># # XAML 文本用法不中最常用[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public double Volume { get; set; }
    return:
      type: System.Double
      description: "表示介于 0 和 1 之间的线性标尺上的媒体的音量。 默认值为 0.5。"
  overload: System.Windows.Media.MediaPlayer.Volume*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  id: WritePreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "验证未冻结 MediaPlayer，而它正在访问从有效的线程上下文。"
  syntax:
    content: protected void WritePreamble ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.WritePreamble*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.MediaPlayer.#ctor
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
- uid: System.Windows.Media.MediaPlayer.Balance
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
- uid: System.Windows.Media.MediaPlayer.CanPause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.Clock
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
- uid: System.Windows.Media.MediaClock
  parent: System.Windows.Media
  isExternal: false
  name: MediaClock
  nameWithType: MediaClock
  fullName: System.Windows.Media.MediaClock
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.MediaPlayer.Close
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.MediaPlayer.HasAudio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
- uid: System.Windows.Media.MediaPlayer.HasVideo
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
- uid: System.Windows.Media.MediaPlayer.IsMuted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
- uid: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExceptionEventArgs>
  nameWithType: EventHandler<ExceptionEventArgs>
  fullName: System.EventHandler<System.Windows.Media.ExceptionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.ExceptionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.ExceptionEventArgs
    name: ExceptionEventArgs
    nameWithType: ExceptionEventArgs
    fullName: ExceptionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.MediaPlayer.Pause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
- uid: System.Windows.Media.MediaPlayer.Play
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
- uid: System.Windows.Media.MediaPlayer.Position
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
- uid: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<MediaScriptCommandEventArgs>
  nameWithType: EventHandler<MediaScriptCommandEventArgs>
  fullName: System.EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.MediaScriptCommandEventArgs
    name: MediaScriptCommandEventArgs
    nameWithType: MediaScriptCommandEventArgs
    fullName: MediaScriptCommandEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
- uid: System.Windows.Media.MediaPlayer.Source
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
- uid: System.Windows.Media.MediaPlayer.Stop
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
- uid: System.Windows.Media.MediaPlayer.Volume
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
- uid: System.Windows.Media.MediaPlayer.#ctor*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaPlayer
  nameWithType: MediaPlayer.MediaPlayer
- uid: System.Windows.Media.MediaPlayer.Balance*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Balance
  nameWithType: MediaPlayer.Balance
- uid: System.Windows.Media.MediaPlayer.BufferingProgress*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
- uid: System.Windows.Media.MediaPlayer.CanPause*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CanPause
  nameWithType: MediaPlayer.CanPause
- uid: System.Windows.Media.MediaPlayer.Clock*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Clock
  nameWithType: MediaPlayer.Clock
- uid: System.Windows.Media.MediaPlayer.CloneCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCore
  nameWithType: MediaPlayer.CloneCore
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: MediaPlayer.CloneCurrentValueCore
- uid: System.Windows.Media.MediaPlayer.Close*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Close
  nameWithType: MediaPlayer.Close
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CreateInstanceCore
  nameWithType: MediaPlayer.CreateInstanceCore
- uid: System.Windows.Media.MediaPlayer.DownloadProgress*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: MediaPlayer.GetAsFrozenCore
- uid: System.Windows.Media.MediaPlayer.HasAudio*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
- uid: System.Windows.Media.MediaPlayer.HasVideo*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
- uid: System.Windows.Media.MediaPlayer.IsBuffering*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
- uid: System.Windows.Media.MediaPlayer.IsMuted*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
- uid: System.Windows.Media.MediaPlayer.NaturalDuration*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
- uid: System.Windows.Media.MediaPlayer.Open*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Open
  nameWithType: MediaPlayer.Open
- uid: System.Windows.Media.MediaPlayer.Pause*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Pause
  nameWithType: MediaPlayer.Pause
- uid: System.Windows.Media.MediaPlayer.Play*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Play
  nameWithType: MediaPlayer.Play
- uid: System.Windows.Media.MediaPlayer.Position*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Position
  nameWithType: MediaPlayer.Position
- uid: System.Windows.Media.MediaPlayer.ReadPreamble*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ReadPreamble
  nameWithType: MediaPlayer.ReadPreamble
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
- uid: System.Windows.Media.MediaPlayer.Source*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Source
  nameWithType: MediaPlayer.Source
- uid: System.Windows.Media.MediaPlayer.SpeedRatio*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
- uid: System.Windows.Media.MediaPlayer.Stop*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Stop
  nameWithType: MediaPlayer.Stop
- uid: System.Windows.Media.MediaPlayer.Volume*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Volume
  nameWithType: MediaPlayer.Volume
- uid: System.Windows.Media.MediaPlayer.WritePreamble*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: WritePreamble
  nameWithType: MediaPlayer.WritePreamble
