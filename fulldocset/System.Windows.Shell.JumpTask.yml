### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpTask
  id: JumpTask
  children:
  - System.Windows.Shell.JumpTask.#ctor
  - System.Windows.Shell.JumpTask.ApplicationPath
  - System.Windows.Shell.JumpTask.Arguments
  - System.Windows.Shell.JumpTask.Description
  - System.Windows.Shell.JumpTask.IconResourceIndex
  - System.Windows.Shell.JumpTask.IconResourcePath
  - System.Windows.Shell.JumpTask.Title
  - System.Windows.Shell.JumpTask.WorkingDirectory
  langs:
  - csharp
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
  type: Class
  summary: "表示快捷方式中的应用程序[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏跳转列表。"
  remarks: "JumpTask 可视为应用程序的快捷方式。 通过设置指定的可执行文件的路径<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>属性。</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 如果<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>未设置，则暗示当前正在运行的进程的路径。</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 你可以选择指定<xref:System.Windows.Shell.JumpTask.Arguments%2A>要传递给在启动应用程序。</xref:System.Windows.Shell.JumpTask.Arguments%2A>       你可以设置基本的显示属性，如<xref:System.Windows.Shell.JumpTask.Title%2A>， <xref:System.Windows.Shell.JumpTask.Description%2A>，和<xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>来跳转列表中指定的任务的外观。</xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> </xref:System.Windows.Shell.JumpTask.Description%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> 用于 JumpTask 图标必须可用作本机资源。 如果多个图标资源可在 DLL 或可执行文件，则指定一个要使用通过指示中的偏移量<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>属性。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       默认情况下，JumpTask 将放置在**任务**跳转列表的类别。 你可以通过设置指定的任务的自定义分组<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>属性。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       你可以直观地分隔跳转列表中的项，通过创建不具有 JumpTask<xref:System.Windows.Shell.JumpTask.Title%2A>和<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> 此空 JumpTask 将显示为水平线跳转列表中。 在这种情况下，可以设置其他属性，但不是会有任何效果。"
  example:
  - "The following example shows how to declare a JumpTask in markup. The JumpTask opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a JumpTask in code. The JumpTask opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: 'public class JumpTask : System.Windows.Shell.JumpItem'
  inheritance:
  - System.Object
  - System.Windows.Shell.JumpItem
  implements: []
  inheritedMembers:
  - System.Windows.Shell.JumpItem.CustomCategory
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "初始化的新实例<xref href=&quot;System.Windows.Shell.JumpTask&quot;></xref>类。"
  syntax:
    content: public JumpTask ();
    parameters: []
  overload: System.Windows.Shell.JumpTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  id: ApplicationPath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置应用程序的路径。"
  remarks: "如果未指定 ApplicationPath 属性，则暗示当前正在运行的进程的路径。 应用程序可以包含为非自身的可执行文件的任务。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string ApplicationPath { get; set; }
    return:
      type: System.String
      description: "应用程序的路径。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Arguments
  id: Arguments
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置在启动时传递给应用程序的参数。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string Arguments { get; set; }
    return:
      type: System.String
      description: "传递给应用程序在启动时的参数。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Description
  id: Description
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置跳转列表中任务的工具提示中显示的文本。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "任务的工具提示中显示的文本。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  id: IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置资源中嵌入的图标的从零开始索引。"
  remarks: "与使用的图标<xref:System.Windows.Shell.JumpTask>必须可用作本机资源。</xref:System.Windows.Shell.JumpTask> 如果多个图标可在 DLL 或可执行文件，则会指定一个要使用通过指示 IconResourceIndex 属性中的偏移量。       如果指定没有图标资源，或者如果找不到指定的图标，将显示标准系统图标。 若要指定无图标将显示，请将 IconResourceIndex 属性设置为-1。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public int IconResourceIndex { get; set; }
    return:
      type: System.Int32
      description: "图标，则为-1 如果使用没有图标的从零开始的索引。 默认值为 0。"
  overload: System.Windows.Shell.JumpTask.IconResourceIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  id: IconResourcePath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置包含要在跳转列表中显示的图标资源的路径。"
  remarks: "与使用的图标<xref:System.Windows.Shell.JumpTask>必须可用作本机资源。</xref:System.Windows.Shell.JumpTask> 如果多个图标可在 DLL 或可执行文件，则指定一个要使用通过指示中的偏移量<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>属性。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       如果指定没有图标资源，或者如果找不到指定的图标，将显示标准系统图标。 若要指定将显示无图标，设置<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>为-1 的属性。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string IconResourcePath { get; set; }
    return:
      type: System.String
      description: "包含的图标资源的路径。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.IconResourcePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Title
  id: Title
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置显示跳转列表中的任务的文本。"
  remarks: "通常情况下，必须将标题属性设置为<xref:System.Windows.Shell.JumpTask>才会显示在跳转列表作为可单击的任务。</xref:System.Windows.Shell.JumpTask>       或者，你可以直观地分隔跳转列表中的项创建<xref:System.Windows.Shell.JumpTask>不具有标题和<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask> 此空<xref:System.Windows.Shell.JumpTask>将显示为水平线跳转列表中。</xref:System.Windows.Shell.JumpTask> 在这种情况下，可以设置其他属性，但不是会有任何效果。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "显示跳转列表中的任务的文本。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  id: WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置在启动应用程序的工作目录。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string WorkingDirectory { get; set; }
    return:
      type: System.String
      description: "在启动应用程序工作目录。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.WorkingDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Shell.JumpItem
  isExternal: false
  name: System.Windows.Shell.JumpItem
- uid: System.Windows.Shell.JumpTask.#ctor
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpTask.Arguments
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
- uid: System.Windows.Shell.JumpTask.#ctor*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask.JumpTask
- uid: System.Windows.Shell.JumpTask.ApplicationPath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
- uid: System.Windows.Shell.JumpTask.Arguments*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
- uid: System.Windows.Shell.JumpTask.IconResourcePath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
