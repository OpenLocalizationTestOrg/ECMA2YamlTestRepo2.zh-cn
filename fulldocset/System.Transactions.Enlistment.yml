### YamlMime:ManagedReference
items:
- uid: System.Transactions.Enlistment
  id: Enlistment
  children:
  - System.Transactions.Enlistment.Done
  langs:
  - csharp
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
  type: Class
  summary: "可以促进事务的最终阶段登记的事务参与者和事务管理器之间的通信。"
  remarks: "当<xref:System.Transactions.Transaction.EnlistVolatile%2A>和<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>对象调用来登记在事务中的参与者，它们将返回此对象，该对象描述登记。</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       在事务提交的最后阶段，事务管理器将此对象传递给资源管理器实现<xref:System.Transactions.IEnlistmentNotification>已登记在事务中的接口。</xref:System.Transactions.IEnlistmentNotification> 具体而言，事务管理器调用<xref:System.Transactions.IEnlistmentNotification.Commit%2A>或<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>的参与者，具体取决于是否后者已决定提交或回滚事务的方法。</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 参与者应调用<xref:System.Transactions.Enlistment.Done%2A>的此对象，以允许事务管理器知道它已完成其工作的方法。</xref:System.Transactions.Enlistment.Done%2A>       可以调用登记<xref:System.Transactions.Enlistment.Done%2A>已调用方法之前的任何时候<xref:System.Transactions.PreparingEnlistment.Prepared%2A>中准备阶段。</xref:System.Transactions.PreparingEnlistment.Prepared%2A> </xref:System.Transactions.Enlistment.Done%2A>  通过此操作，该登记投只读的票，这意味着它投票提交的事务，但不需要接收最终结果。 请注意之后,<xref:System.Transactions.Enlistment.Done%2A>方法调用，从事务管理器登记的参与者接收到的任何进一步的通知。</xref:System.Transactions.Enlistment.Done%2A>"
  example:
  - "The following example shows an implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, and when the <xref:System.Transactions.Enlistment.Done%2A> method should be called.  \n  \n [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/t-system.transactions.en_1.cs)]\n [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/t-system.transactions.en_1.vb)]"
  syntax:
    content: public class Enlistment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Enlistment.Done
  id: Done
  parent: System.Transactions.Enlistment
  langs:
  - csharp
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "指示事务参与者已完成其工作。"
  remarks: "在事务提交的最后阶段，事务管理器调用参与者<xref:System.Transactions.IEnlistmentNotification.Commit%2A>，<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>或<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>的参与者，具体取决于事务是提交还是回滚的方法。</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 资源管理器应执行任何工作完成事务，它已完成通过上调用 Done 的方法随后又通知事务管理器所需`enlistment`参数。       如果资源管理器已持久登记，但不响应通过调用 Done 方法，事务管理器不确定的资源管理器已收到相应通知调用。 在这种情况下，事务管理器将继续等待响应，并且保留信息与此事务。  如果执行此操作是永远不会调用，这段信息是围绕无限期保留在内存中或在系统级资源。 这会导致无法回收资源。 对于分布式事务，这可能最终填满 MSDTC 日志将停止 MSDTC 过程。 在由事务的情况下<xref:System.Transactions>，这会导致资源管理器的进程的内存消耗的逐步地持续增长。</xref:System.Transactions> 因此，很重要资源管理器完成后调用 Done 的方法你准备工作。       在任何时候登记调用 Done 的方法之前已调用<xref:System.Transactions.PreparingEnlistment.Prepared%2A>中准备阶段。</xref:System.Transactions.PreparingEnlistment.Prepared%2A> 通过此操作，该登记投只读的票，这意味着它投票提交的事务，但不需要接收最终结果。 请注意，调用此方法后，登记的参与者接收到任何进一步通知从事务管理器。"
  syntax:
    content: public void Done ();
    parameters: []
  overload: System.Transactions.Enlistment.Done*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.Enlistment.Done
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
- uid: System.Transactions.Enlistment.Done*
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done
  nameWithType: Enlistment.Done
