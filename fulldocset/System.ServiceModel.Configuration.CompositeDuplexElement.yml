### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.CompositeDuplexElement
  id: CompositeDuplexElement
  children:
  - System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  - System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  - System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  - System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  - System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  langs:
  - csharp
  name: CompositeDuplexElement
  nameWithType: CompositeDuplexElement
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement
  type: Class
  summary: "表示客户端必须公开服务以通过 HTTP 发送消息的终结点时使用的配置元素。 此类不能被继承。"
  remarks: "此配置元素将添加到自定义绑定的双向消息处理。 它用于传输本身不允许进行双工通信，例如，HTTP。 与此相反，，TCP 本身允许进行双工通信，和不需要使用服务在将消息发送回客户端此绑定元素。       客户端必须公开服务进行联系和建立连接的地址。 此客户端地址由<xref:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress%2A>属性。</xref:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress%2A>"
  syntax:
    content: 'public sealed class CompositeDuplexElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CompositeDuplexElement()
  nameWithType: CompositeDuplexElement.CompositeDuplexElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CompositeDuplexElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Configuration.CompositeDuplexElement&quot;></xref>类。"
  syntax:
    content: public CompositeDuplexElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: CompositeDuplexElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "将指定的绑定元素的内容应用到此绑定配置节。"
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "一个绑定元素。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取绑定元素的类型。"
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "绑定元素的类型。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置客户端的基址。"
  remarks: "服务使用此地址进行联系和建立与客户端的连接。"
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>包含基址的客户端。</xref:System.Uri>"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "将指定的配置元素的内容复制到此配置元素。"
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "要复制的配置元素。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: CompositeDuplexElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "要添加。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: CompositeDuplexElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "要添加。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CompositeDuplexElement()
  nameWithType: CompositeDuplexElement.CompositeDuplexElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CompositeDuplexElement()
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: CompositeDuplexElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: CompositeDuplexElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: CompositeDuplexElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CompositeDuplexElement
  nameWithType: CompositeDuplexElement.CompositeDuplexElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: CompositeDuplexElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CopyFrom
  nameWithType: CompositeDuplexElement.CopyFrom
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: CompositeDuplexElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: InitializeFrom
  nameWithType: CompositeDuplexElement.InitializeFrom
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
