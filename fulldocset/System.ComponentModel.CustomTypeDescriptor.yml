### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CustomTypeDescriptor
  id: CustomTypeDescriptor
  children:
  - System.ComponentModel.CustomTypeDescriptor.#ctor
  - System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  - System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - System.ComponentModel.CustomTypeDescriptor.GetClassName
  - System.ComponentModel.CustomTypeDescriptor.GetComponentName
  - System.ComponentModel.CustomTypeDescriptor.GetConverter
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.CustomTypeDescriptor.GetEvents
  - System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetProperties
  - System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  name: CustomTypeDescriptor
  nameWithType: CustomTypeDescriptor
  fullName: System.ComponentModel.CustomTypeDescriptor
  type: Class
  summary: "提供的一个简单的默认实现<xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;></xref>接口。"
  remarks: "如<xref:System.ComponentModel.TypeDescriptionProvider>，CustomTypeDescriptor 类依赖于类型的父对象<xref:System.ComponentModel.ICustomTypeDescriptor>构造过程中提供。</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider> 这允许从 CustomTypeDescriptor 有选择地重写方法派生的类。"
  syntax:
    content: 'public abstract class CustomTypeDescriptor : System.ComponentModel.ICustomTypeDescriptor'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ICustomTypeDescriptor
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: CustomTypeDescriptor()
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.CustomTypeDescriptor&quot;></xref>类。"
  remarks: "此构造函数等效于调用的其他<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A?displayProperty=fullName>构造函数的参数与`null`。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A?displayProperty=fullName>       所有方法<xref:System.ComponentModel.CustomTypeDescriptor>创建与此构造函数将返回默认值。</xref:System.ComponentModel.CustomTypeDescriptor>"
  syntax:
    content: protected CustomTypeDescriptor ();
    parameters: []
  overload: System.ComponentModel.CustomTypeDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  id: '#ctor(System.ComponentModel.ICustomTypeDescriptor)'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: CustomTypeDescriptor(ICustomTypeDescriptor)
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.CustomTypeDescriptor&quot;></xref>类使用父自定义类型描述符。"
  remarks: "如果`parent`参数是`null`，所有<xref:System.ComponentModel.CustomTypeDescriptor>方法将返回默认值。</xref:System.ComponentModel.CustomTypeDescriptor> 否则为所有<xref:System.ComponentModel.CustomTypeDescriptor>方法会将对方法的委托`parent`。</xref:System.ComponentModel.CustomTypeDescriptor>       大多数<xref:System.ComponentModel.CustomTypeDescriptor>方法返回`null`默认情况下。</xref:System.ComponentModel.CustomTypeDescriptor> 下表显示不会返回的方法的返回值`null`默认情况下。      |方法 |默认返回值 |  |------------|--------------------------|  |<xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A>|空的属性集合 (<xref:System.ComponentModel.AttributeCollection.Empty?displayProperty=fullName>)。 |  |<xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A>|默认值<xref:System.ComponentModel.TypeConverter>实例。 |  |<xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A>|一个空的事件集合 (<xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=fullName>)。 |  |<xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A>|空的属性集合 (<xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=fullName>)。 |</xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=fullName> </xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=fullName> </xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A> </xref:System.ComponentModel.AttributeCollection.Empty?displayProperty=fullName> </xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A>"
  syntax:
    content: protected CustomTypeDescriptor (System.ComponentModel.ICustomTypeDescriptor parent);
    parameters:
    - id: parent
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "父自定义类型描述符。"
  overload: System.ComponentModel.CustomTypeDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetAttributes()
  nameWithType: CustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的类型的自定义特性的集合。"
  remarks: "如果父自定义类型描述符传递给<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetAttributes 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection GetAttributes ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref>包含类型的属性。 默认值是<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetClassName()
  nameWithType: CustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的类的完全限定的名称。"
  remarks: "> [!NOTE]1> GetClassName 不是静态方法，因此，不能保证是线程安全的。       如果父自定义类型描述符传递给<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetClassName 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual string GetClassName ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>包含描述此类型描述符的类型的完全限定的类名。</xref:System.String> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetComponentName()
  nameWithType: CustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的类的名称。"
  remarks: "如果父自定义类型描述符传递给<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetComponentName 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual string GetComponentName ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>包含描述此类型描述符的组件实例的名称。</xref:System.String> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetComponentName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetConverter()
  nameWithType: CustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的类型的类型转换器。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetConverter 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.TypeConverter GetConverter ();
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>此类型描述符所代表的类型。 默认值是新创建<xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent()
  nameWithType: CustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的对象的默认事件的事件描述符。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetDefaultEvent 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptor GetDefaultEvent ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>为表示此类型描述符的对象上的默认事件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty()
  nameWithType: CustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的对象的默认属性的属性描述符。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetDefaultProperty 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor GetDefaultProperty ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>表示此类型描述符的对象上的默认属性。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: CustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回指定要与此类型描述符所表示的类关联的类型的编辑器。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetEditor 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "要检索的编辑器基类型。"
    return:
      type: System.Object
      description: "要与此类型描述符所表示的类相关联的给定类型的编辑器。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents()
  nameWithType: CustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的对象的事件描述符的集合。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetEvents 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection GetEvents ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref>包含表示此类型描述符的对象的事件描述符。 默认值是<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents(Attribute[])
  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回经过筛选的事件说明符表示通过此类型描述符的对象的集合。"
  remarks: "你可以使用`attributes`参数来筛选返回的集合。       如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetEvents 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "要用作筛选器的特性数组。 这可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref>包含表示此类型描述符的对象的事件说明。 默认值是<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties()
  nameWithType: CustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回表示此类型描述符的对象的属性说明符集合。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetProperties 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>包含表示此类型描述符的对象的属性说明。 默认值是<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties(Attribute[])
  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回经过筛选的此类型描述符所表示的对象的属性说明符集合。"
  remarks: "你可以使用`attributes`参数来筛选返回的集合。 有关筛选规则，请参阅<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>。</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>       如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetProperties 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "要用作筛选器的特性数组。 这可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>包含表示此类型描述符的对象的属性说明。 默认值是<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回包含指定的属性描述符所描述的属性的对象。"
  remarks: "如果父自定义类型描述符已传递到<xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>构造函数，GetPropertyOwner 方法将调用父级的相应方法。</xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A>"
  syntax:
    content: public virtual object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "针对其检索所属对象的属性描述符。"
    return:
      type: System.Object
      description: "<xref:System.Object>拥有指定的类型描述符的给定的属性。</xref:System.Object> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor()
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor(ICustomTypeDescriptor)
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: CustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: CustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: CustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: CustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: CustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: CustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: CustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: CustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents(Attribute[])
  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: CustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties(Attribute[])
  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: CustomTypeDescriptor.GetAttributes
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: CustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: CustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: CustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: CustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: CustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: CustomTypeDescriptor.GetEditor
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: CustomTypeDescriptor.GetEvents
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: CustomTypeDescriptor.GetProperties
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner
  nameWithType: CustomTypeDescriptor.GetPropertyOwner
