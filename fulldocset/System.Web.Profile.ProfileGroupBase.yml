### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileGroupBase
  id: ProfileGroupBase
  children:
  - System.Web.Profile.ProfileGroupBase.#ctor
  - System.Web.Profile.ProfileGroupBase.GetPropertyValue(System.String)
  - System.Web.Profile.ProfileGroupBase.Init(System.Web.Profile.ProfileBase,System.String)
  - System.Web.Profile.ProfileGroupBase.Item(System.String)
  - System.Web.Profile.ProfileGroupBase.SetPropertyValue(System.String,System.Object)
  langs:
  - csharp
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase
  fullName: System.Web.Profile.ProfileGroupBase
  type: Class
  summary: "提供对分组 ASP.NET 配置文件属性值的非类型化的访问。"
  remarks: "ASP.NET 使用 ProfileGroupBase 类在<xref:System.Web.HttpContext.Profile%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>属性</xref:System.Web.HttpContext.Profile%2A>中创建分组的属性 当属性被指定为一组属性使用[组的配置文件 （ASP.NET 设置架构） 的属性的元素](http://msdn.microsoft.com/en-us/b4e3672f-9653-4034-a178-fb358b02730e)，ASP.NET 与组中每个属性的强类型化访问器中创建新的类。 新的类继承 ProfileGroupBase 基类。 新的类调用的强类型化访问器<xref:System.Web.Profile.ProfileGroupBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileGroupBase.SetPropertyValue%2A>ProfileGroupBase 方法基类，以检索和设置配置文件属性值分别。</xref:System.Web.Profile.ProfileGroupBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileGroupBase.GetPropertyValue%2A>       ProfileGroupBase 通过调用获取并将属性值设置为继承<xref:System.Web.Profile.ProfileBase>类，提供给<xref:System.Web.Profile.ProfileGroupBase.Init%2A>ProfileGroupBase 类方法</xref:System.Web.Profile.ProfileGroupBase.Init%2A></xref:System.Web.Profile.ProfileBase>的类 请参阅<xref:System.Web.Profile.ProfileBase>行为、 异常和等等的详细信息的类。</xref:System.Web.Profile.ProfileBase>       此类不应在代码中创建。"
  example:
  - "The following Web.config file specifies a user profile that contains a group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name, for example, `Profile.Address.Street`. The second example shows an ASP.NET page that stores and retrieves the configured profile properties.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows an ASP.NET page that reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_11_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_11_1.aspx)]"
  syntax:
    content: public class ProfileGroupBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileGroupBase.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileGroupBase
  langs:
  - csharp
  name: ProfileGroupBase()
  nameWithType: ProfileGroupBase.ProfileGroupBase()
  fullName: System.Web.Profile.ProfileGroupBase.ProfileGroupBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "创建的实例<xref href=&quot;System.Web.Profile.ProfileGroupBase&quot;></xref>类。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileGroupBase>类来创建<xref:System.Web.HttpContext.Profile%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>属性</xref:System.Web.HttpContext.Profile%2A>中的分组的属性</xref:System.Web.Profile.ProfileGroupBase> 当属性被指定为一组属性使用[组的配置文件 （ASP.NET 设置架构） 的属性的元素](http://msdn.microsoft.com/en-us/b4e3672f-9653-4034-a178-fb358b02730e)元素，ASP.NET 创建的新类与组中每个属性的强类型化访问器。 新的类继承<xref:System.Web.Profile.ProfileGroupBase>基的类。</xref:System.Web.Profile.ProfileGroupBase>       此类不应在代码中创建。"
  example:
  - "The following Web.config file specifies a user profile that contains a group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name, for example, `Profile.Address.Street`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n             name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"  \n                userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_6_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public ProfileGroupBase ();
    parameters: []
  overload: System.Web.Profile.ProfileGroupBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileGroupBase.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileGroupBase
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProfileGroupBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileGroupBase.GetPropertyValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取分组的配置文件属性的值。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件的类。</xref:System.Web.Profile.ProfileBase> ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`用于每个组和中定义的属性类[配置文件元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)配置节。 强类型化访问器`ProfileCommon`类调用 GetPropertyValue 方法，以检索从非类型化的值<xref:System.Web.Profile.ProfileProvider>，生成的访问器，然后强制转换为指定类型和返回作为分组的属性值。</xref:System.Web.Profile.ProfileProvider>       GetPropertyValue 方法可用于按名称检索你的应用程序的用户配置文件的分组的属性值。 返回的值被类型化为`object`并且必须强制转换为检索时的特定对象类型。 对于配置文件属性值的强类型访问，你可以分组的属性按名称访问作为一组的成员<xref:System.Web.HttpContext.Profile%2A>属性，例如， `Profile.Address.City`。</xref:System.Web.HttpContext.Profile%2A>"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the grouped properties specified for the user profile. For an example of a Web.config file that specifies grouped properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileGroupBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_7_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_7_1.aspx)]"
  syntax:
    content: public object GetPropertyValue (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "分组的配置文件属性的名称。"
    return:
      type: System.Object
      description: "类型化为分组的配置文件属性的值<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileGroupBase.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileGroupBase.Init(System.Web.Profile.ProfileBase,System.String)
  id: Init(System.Web.Profile.ProfileBase,System.String)
  parent: System.Web.Profile.ProfileGroupBase
  langs:
  - csharp
  name: Init(ProfileBase,String)
  nameWithType: ProfileGroupBase.Init(ProfileBase,String)
  fullName: System.Web.Profile.ProfileGroupBase.Init(ProfileBase,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "由 ASP.NET 用于初始化分组的配置文件属性值和信息。"
  remarks: "此方法不应在代码中使用。"
  syntax:
    content: public void Init (System.Web.Profile.ProfileBase parent, string myName);
    parameters:
    - id: parent
      type: System.Web.Profile.ProfileBase
      description: "继承的类<xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> ，分配给<xref:System.Web.HttpContext.Profile*>属性。</xref:System.Web.HttpContext.Profile*>"
    - id: myName
      type: System.String
      description: "配置文件属性组的名称。"
  overload: System.Web.Profile.ProfileGroupBase.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileGroupBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileGroupBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileGroupBase.Item(String)
  fullName: System.Web.Profile.ProfileGroupBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取或设置按属性名称进行索引的分组的配置文件属性值。"
  remarks: "此属性可用于检索或设置应用程序的用户配置文件的分组的属性值。 返回的值被类型化为<xref:System.Object>并且必须强制转换为特定对象类型时检索。</xref:System.Object> 对于配置文件属性值的强类型访问，你可以属性按名称访问的组的成员作为<xref:System.Web.HttpContext.Profile%2A?displayProperty=fullName>属性，例如， `Profile.Address.City`。</xref:System.Web.HttpContext.Profile%2A?displayProperty=fullName>"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the grouped properties specified for the user profile. For an example of a Web.config file that specifies a group of properties in the profile, see the example provided for the <xref:System.Web.Profile.ProfileGroupBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/p-system.web.profile.pro_7_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/p-system.web.profile.pro_7_1.aspx)]"
  syntax:
    content: public object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "分组的配置文件属性的名称。"
    return:
      type: System.Object
      description: "指定分组的配置文件属性的值。"
  overload: System.Web.Profile.ProfileGroupBase.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileGroupBase.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileGroupBase
  langs:
  - csharp
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileGroupBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileGroupBase.SetPropertyValue(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "设置分组的配置文件属性的值。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</xref:System.Web.Profile.ProfileBase> ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`用于每个组和中定义的属性类[配置文件元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)配置节。 强类型化访问器`ProfileCommon`类调用 SetPropertyValue 方法，以向其传递分组的属性值<xref:System.Web.Profile.ProfileProvider>要存储在数据源。</xref:System.Web.Profile.ProfileProvider>       SetPropertyValue 方法可用于将值分配给的用户配置文件的分组属性为应用程序的名称。 值必须类型为`object,`，并且类型检查将在运行时完成，则不会编译时间。 对于配置文件属性值的强类型访问，你可以分组的属性按名称访问作为一组的成员<xref:System.Web.HttpContext.Profile%2A>属性，例如， `Profile.Address.City`。</xref:System.Web.HttpContext.Profile%2A>"
  example:
  - "The following ASP.NET page reads and sets the grouped properties specified for the user profile. For an example of a Web.config file that specifies grouped properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileGroupBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/21e1205e-df6e-4cc9-a5fd-_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/21e1205e-df6e-4cc9-a5fd-_1.aspx)]"
  syntax:
    content: public void SetPropertyValue (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "要设置的分组属性的名称。"
    - id: propertyValue
      type: System.Object
      description: "要赋给该分组的属性的值。"
  overload: System.Web.Profile.ProfileGroupBase.SetPropertyValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileGroupBase.#ctor
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: ProfileGroupBase()
  nameWithType: ProfileGroupBase.ProfileGroupBase()
  fullName: System.Web.Profile.ProfileGroupBase.ProfileGroupBase()
- uid: System.Web.Profile.ProfileGroupBase.GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProfileGroupBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileGroupBase.GetPropertyValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileGroupBase.Init(System.Web.Profile.ProfileBase,System.String)
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: Init(ProfileBase,String)
  nameWithType: ProfileGroupBase.Init(ProfileBase,String)
  fullName: System.Web.Profile.ProfileGroupBase.Init(ProfileBase,String)
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.Profile.ProfileGroupBase.Item(System.String)
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: Item(String)
  nameWithType: ProfileGroupBase.Item(String)
  fullName: System.Web.Profile.ProfileGroupBase.Item(String)
- uid: System.Web.Profile.ProfileGroupBase.SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileGroupBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileGroupBase.SetPropertyValue(String,Object)
- uid: System.Web.Profile.ProfileGroupBase.#ctor*
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase.ProfileGroupBase
- uid: System.Web.Profile.ProfileGroupBase.GetPropertyValue*
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProfileGroupBase.GetPropertyValue
- uid: System.Web.Profile.ProfileGroupBase.Init*
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: Init
  nameWithType: ProfileGroupBase.Init
- uid: System.Web.Profile.ProfileGroupBase.Item*
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: Item
  nameWithType: ProfileGroupBase.Item
- uid: System.Web.Profile.ProfileGroupBase.SetPropertyValue*
  parent: System.Web.Profile.ProfileGroupBase
  isExternal: false
  name: SetPropertyValue
  nameWithType: ProfileGroupBase.SetPropertyValue
