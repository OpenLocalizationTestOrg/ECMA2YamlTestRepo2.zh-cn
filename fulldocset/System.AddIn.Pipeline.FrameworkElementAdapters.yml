### YamlMime:ManagedReference
items:
- uid: System.AddIn.Pipeline.FrameworkElementAdapters
  id: FrameworkElementAdapters
  children:
  - System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)
  - System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: FrameworkElementAdapters
  nameWithType: FrameworkElementAdapters
  fullName: System.AddIn.Pipeline.FrameworkElementAdapters
  type: Class
  summary: "通过使用 FrameworkElementAdapters[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]外接程序之间进行转换<xref href=&quot;System.Windows.FrameworkElement&quot;></xref>和<xref href=&quot;System.AddIn.Contract.INativeHandleContract&quot;> </xref>。"
  remarks: "[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]扩展[!INCLUDE[TLA#tla_winfx](~/add/includes/ajax-current-ext-md.md)]外接程序模型允许[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)][!INCLUDE[TLA2#tla_ui#plural](~/add/includes/tla2sharptla-uisharpplural-md.md)]主机应用程序和外接程序之间传递。 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]要求[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] [!INCLUDE[TLA2#tla_ui#plural](~/add/includes/tla2sharptla-uisharpplural-md.md)] ，传递是直接或间接派生自<xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> 但是，加载项和主机应用程序通常运行在单独的应用程序域中，因此，分隔隔离边界。 为此，[!INCLUDE[TLA2#tla_winfx](~/add/includes/tla2sharptla-winfx-md.md)]外接程序模型要求跨隔离边界是可远程使用传递的类型。 可远程处理类型是否符合下列情况之一:-实现<xref:System.Runtime.Serialization.ISerializable>接口。</xref:System.Runtime.Serialization.ISerializable>      -具有<xref:System.SerializableAttribute>应用的属性。</xref:System.SerializableAttribute>      -派生自<xref:System.MarshalByRefObject>类。</xref:System.MarshalByRefObject>       <xref:System.Windows.FrameworkElement>不是远程和跨隔离边界之间的外接程序和主机应用程序传递之前，必须为可远程处理类型转换。</xref:System.Windows.FrameworkElement> 为此，你需要调用静态<xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A>方法将转换<xref:System.Windows.FrameworkElement>为可远程处理<xref:System.AddIn.Contract.INativeHandleContract>.</xref:System.AddIn.Contract.INativeHandleContract>的实例</xref:System.Windows.FrameworkElement></xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A>       一次<xref:System.AddIn.Contract.INativeHandleContract>传递跨隔离边界中，它必须转换为可由主机应用程序或外接程序显示类型</xref:System.AddIn.Contract.INativeHandleContract> 在此情况下，静态<xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A>方法调用将转换<xref:System.AddIn.Contract.INativeHandleContract>到一种<xref:System.Windows.FrameworkElement>。</xref:System.Windows.FrameworkElement> </xref:System.AddIn.Contract.INativeHandleContract> </xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A>       有关更多详细的展示[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]外接程序，请参阅[WPF 外接程序概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static class FrameworkElementAdapters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)
  id: ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  langs:
  - csharp
  name: ContractToViewAdapter(INativeHandleContract)
  nameWithType: FrameworkElementAdapters.ContractToViewAdapter(INativeHandleContract)
  fullName: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(INativeHandleContract)
  type: Method
  assemblies:
  - System.Windows.Presentation
  namespace: System.AddIn.Pipeline
  summary: "返回<xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ，已转换从<xref href=&quot;System.AddIn.Contract.INativeHandleContract&quot;> </xref>。"
  syntax:
    content: public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);
    parameters:
    - id: nativeHandleContract
      type: System.AddIn.Contract.INativeHandleContract
      description: "<xref href=&quot;System.AddIn.Contract.INativeHandleContract&quot;> </xref>已跨隔离边界在主机应用程序和外接程序之间传递。"
    return:
      type: System.Windows.FrameworkElement
      description: "A <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ，将显示从主机应用程序或外接程序，具体取决于在其中方向[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]两者之间传递。"
  overload: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)
  id: ViewToContractAdapter(System.Windows.FrameworkElement)
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  langs:
  - csharp
  name: ViewToContractAdapter(FrameworkElement)
  nameWithType: FrameworkElementAdapters.ViewToContractAdapter(FrameworkElement)
  fullName: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(FrameworkElement)
  type: Method
  assemblies:
  - System.Windows.Presentation
  namespace: System.AddIn.Pipeline
  summary: "返回<xref href=&quot;System.AddIn.Contract.INativeHandleContract&quot;> </xref> ，已转换从<xref href=&quot;System.Windows.FrameworkElement&quot;> </xref>。"
  syntax:
    content: public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);
    parameters:
    - id: root
      type: System.Windows.FrameworkElement
      description: "<xref href=&quot;System.Windows.FrameworkElement&quot;> </xref>以宿主应用程序和外接程序之间传递跨隔离边界。"
    return:
      type: System.AddIn.Contract.INativeHandleContract
      description: "<xref href=&quot;System.AddIn.Contract.INativeHandleContract&quot;> </xref>从主机应用程序或外接程序，具体取决于在其中的方向传递[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]两者之间传递。"
  overload: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>root</code>不是元素树的根元素。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  isExternal: false
  name: ContractToViewAdapter(INativeHandleContract)
  nameWithType: FrameworkElementAdapters.ContractToViewAdapter(INativeHandleContract)
  fullName: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(INativeHandleContract)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.AddIn.Contract.INativeHandleContract
  parent: System.AddIn.Contract
  isExternal: false
  name: INativeHandleContract
  nameWithType: INativeHandleContract
  fullName: System.AddIn.Contract.INativeHandleContract
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  isExternal: false
  name: ViewToContractAdapter(FrameworkElement)
  nameWithType: FrameworkElementAdapters.ViewToContractAdapter(FrameworkElement)
  fullName: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(FrameworkElement)
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter*
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  isExternal: false
  name: ContractToViewAdapter
  nameWithType: FrameworkElementAdapters.ContractToViewAdapter
- uid: System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter*
  parent: System.AddIn.Pipeline.FrameworkElementAdapters
  isExternal: false
  name: ViewToContractAdapter
  nameWithType: FrameworkElementAdapters.ViewToContractAdapter
