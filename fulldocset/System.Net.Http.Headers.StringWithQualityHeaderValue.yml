### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  id: StringWithQualityHeaderValue
  children:
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  - System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  - System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  langs:
  - csharp
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
  type: Class
  summary: "表示具有可选质量的字符串标头值。"
  remarks: "StringWithQualityHeaderValue 类提供支持的字符串与用于某些标头中定义某一质量系数[RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642)由 IETF。       质量因素允许用户代理，以指示在各种标头包括 Accept、 Accept-charset、 Accept-encoding、 和接受语言标头中的各种选项首选项的相对程度。 质量使用按从 0 到 1。 默认值为 q =&1;。"
  syntax:
    content: 'public class StringWithQualityHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新实例<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>类。"
  syntax:
    content: public StringWithQualityHeaderValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "用于初始化新实例的字符串。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新实例<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>类。"
  syntax:
    content: public StringWithQualityHeaderValue (string value, double quality);
    parameters:
    - id: value
      type: System.String
      description: "用于初始化新实例的字符串。"
    - id: quality
      type: System.Double
      description: "一个质量因子，用于初始化新实例。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "确定指定的对象是否等于当前<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要与当前对象进行比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等于当前对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "用作哈希函数<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  remarks: "哈希代码是一个数字值，用于标识相等测试过程中的对象。 它还可以充当集合中的对象的索引。       GetHashCode 方法是适合在哈希算法和哈希表之类的数据结构中使用。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前对象的哈希代码。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "将字符串转换为<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>实例。"
  syntax:
    content: public static System.Net.Http.Headers.StringWithQualityHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "一个字符串，表示质量标头值信息。"
    return:
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref>实例。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>引用。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>不是具有质量标头值信息的有效字符串。"
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  id: Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "获取来自的质量系数<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  syntax:
    content: public Nullable<double> Quality { get; }
    return:
      type: System.Nullable{System.Double}
      description: "来自的质量系数<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "创建新对象的当前副本<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>实例。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "当前实例的副本。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "返回一个字符串，表示当前<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示当前对象的字符串。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "确定字符串是否为有效<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>信息。"
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.StringWithQualityHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "要验证的字符串。"
    - id: parsedValue
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref>版本的字符串。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  id: Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "获取从的字符串值<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "中的字符串值<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>对象。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals
  nameWithType: StringWithQualityHeaderValue.Equals
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: StringWithQualityHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse
  nameWithType: StringWithQualityHeaderValue.Parse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString
  nameWithType: StringWithQualityHeaderValue.ToString
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: StringWithQualityHeaderValue.TryParse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
