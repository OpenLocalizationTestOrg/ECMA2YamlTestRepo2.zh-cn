### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.TypeSchema
  id: TypeSchema
  children:
  - System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  - System.Web.UI.Design.TypeSchema.GetViews
  langs:
  - csharp
  name: TypeSchema
  nameWithType: TypeSchema
  fullName: System.Web.UI.Design.TypeSchema
  type: Class
  summary: "表示的结构，即架构，对象类型。"
  remarks: "TypeSchema 类提供了有关特定的类，给定此类的实例的信息。 例如，给定<xref:System.Data.DataSet>对象，<xref:System.Web.UI.WebControls.GridView>对象或你创建的自定义类、 方法和属性的实例提供有关该对象派生自的类的信息。</xref:System.Web.UI.WebControls.GridView> </xref:System.Data.DataSet> 它不提供有关特定实例，但有关类的信息。       TypeSchema 类是自定义控件设计器用于帮助你准备用于预览自定义控件的示例数据。"
  syntax:
    content: 'public sealed class TypeSchema : System.Web.UI.Design.IDataSourceSchema'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.Design.IDataSourceSchema
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "创建的新实例<xref href=&quot;System.Web.UI.Design.TypeSchema&quot;></xref>类使用提供<xref:System.Type>对象。</xref:System.Type>"
  syntax:
    content: public TypeSchema (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>描述一个对象。</xref:System.Type>"
  overload: System.Web.UI.Design.TypeSchema.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.GetViews
  id: GetViews
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "获取数据源视图架构描述符的数组。"
  remarks: "尽管 GetViews 方法始终返回的<xref:System.Web.UI.Design.IDataSourceViewSchema>对象实现的<xref:System.Web.UI.Design.IDataSourceViewSchema>接口，准确的返回值是依赖于在创建<xref:System.Web.UI.Design.TypeSchema>类</xref:System.Web.UI.Design.TypeSchema>的实例时提供的对象</xref:System.Web.UI.Design.IDataSourceViewSchema></xref:System.Web.UI.Design.IDataSourceViewSchema>数组       下表提供了返回值的示例。      |基础类型 |返回值 |  |---------------------|------------------|  |A <xref:System.Data.DataSet>|类型<xref:System.Web.UI.Design.DataSetViewSchema>的数组，一个用于每个<xref:System.Data.DataTable>。 |  |A <xref:System.Data.DataTable>|包含<xref:System.Web.UI.Design.DataSetViewSchema>的一个项数组。 |  |<xref:System.Collections.IEnumerable>类型 |包含<xref:System.Web.UI.Design.IDataSourceViewSchema>的一个项数组。 |  |任何其他类型 |一个项数组，包含<xref:System.Web.UI.Design.IDataSourceViewSchema>。 |</xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataSet>"
  syntax:
    content: public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();
    parameters: []
    return:
      type: System.Web.UI.Design.IDataSourceViewSchema[]
      description: "实例的数组<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;> </xref>，或类实现的实例的<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;></xref>接口。"
  overload: System.Web.UI.Design.TypeSchema.GetViews*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.TypeSchema.GetViews
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
- uid: System.Web.UI.Design.IDataSourceViewSchema[]
  parent: System.Web.UI.Design
  isExternal: false
  name: IDataSourceViewSchema
  nameWithType: IDataSourceViewSchema
  fullName: System.Web.UI.Design.IDataSourceViewSchema[]
  spec.csharp:
  - uid: System.Web.UI.Design.IDataSourceViewSchema
    name: IDataSourceViewSchema
    nameWithType: IDataSourceViewSchema
    fullName: IDataSourceViewSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Design.TypeSchema.#ctor*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema
  nameWithType: TypeSchema.TypeSchema
- uid: System.Web.UI.Design.TypeSchema.GetViews*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews
  nameWithType: TypeSchema.GetViews
