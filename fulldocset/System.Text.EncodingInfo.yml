### YamlMime:ManagedReference
items:
- uid: System.Text.EncodingInfo
  id: EncodingInfo
  children:
  - System.Text.EncodingInfo.CodePage
  - System.Text.EncodingInfo.DisplayName
  - System.Text.EncodingInfo.Equals(System.Object)
  - System.Text.EncodingInfo.GetEncoding
  - System.Text.EncodingInfo.GetHashCode
  - System.Text.EncodingInfo.Name
  langs:
  - csharp
  name: EncodingInfo
  nameWithType: EncodingInfo
  fullName: System.Text.EncodingInfo
  type: Class
  summary: "提供有关编码的基本信息。"
  remarks: "此类主要用于通过<xref:System.Text.Encoding>类。</xref:System.Text.Encoding> <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName>方法返回此类型的数组。</xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName>       此类旨在提供有关编码的极少信息。 若要获取其他信息，应用程序应使用<xref:System.Text.EncodingInfo.GetEncoding%2A>方法要获取其实例的<xref:System.Text.Encoding>类，其中包含有关对其进行编码表示的更全面信息。</xref:System.Text.Encoding> </xref:System.Text.EncodingInfo.GetEncoding%2A>"
  example:
  - "The following example uses the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method to retrieve an EncodingInfo object for each encoding supported by the .NET Framework. It then displays the value of each encoding's <xref:System.Text.EncodingInfo.CodePage%2A>, <xref:System.Text.EncodingInfo.Name%2A>, and <xref:System.Text.EncodingInfo.DisplayName%2A> property and compares them with the corresponding <xref:System.Text.Encoding> names.  \n  \n [!code-cs[System.Text.EncodingInfo#1](~/add/codesnippet/csharp/t-system.text.encodinginfo_1.cs)]\n [!code-cpp[System.Text.EncodingInfo#1](~/add/codesnippet/cpp/t-system.text.encodinginfo_1.cpp)]\n [!code-vb[System.Text.EncodingInfo#1](~/add/codesnippet/visualbasic/t-system.text.encodinginfo_1.vb)]"
  syntax:
    content: public sealed class EncodingInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.CodePage
  id: CodePage
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: CodePage
  nameWithType: EncodingInfo.CodePage
  fullName: System.Text.EncodingInfo.CodePage
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "获取的编码的代码页标识符。"
  remarks: "此成员是等效于<xref:System.Text.Encoding.CodePage%2A?displayProperty=fullName>.</xref:System.Text.Encoding.CodePage%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the different names for each encoding and compares them with the equivalent <xref:System.Text.Encoding> names.  \n  \n [!code-cs[System.Text.EncodingInfo#1](~/add/codesnippet/csharp/p-system.text.encodingin_0_1.cs)]\n [!code-cpp[System.Text.EncodingInfo#1](~/add/codesnippet/cpp/p-system.text.encodingin_0_1.cpp)]\n [!code-vb[System.Text.EncodingInfo#1](~/add/codesnippet/visualbasic/p-system.text.encodingin_0_1.vb)]"
  syntax:
    content: public int CodePage { get; }
    return:
      type: System.Int32
      description: "编码的代码页标识符。"
  overload: System.Text.EncodingInfo.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.DisplayName
  id: DisplayName
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: DisplayName
  nameWithType: EncodingInfo.DisplayName
  fullName: System.Text.EncodingInfo.DisplayName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "获取的编码的用户可读说明。"
  remarks: "此属性定义与所表示的名称相同的显示名称<xref:System.Text.Encoding.EncodingName%2A>属性。</xref:System.Text.Encoding.EncodingName%2A> 你的应用程序应该用于<xref:System.Text.EncodingInfo.Name%2A>将名称传递到<xref:System.Text.Encoding.GetEncoding%2A>。</xref:System.Text.Encoding.GetEncoding%2A> </xref:System.Text.EncodingInfo.Name%2A>"
  example:
  - "The following code example retrieves the different names for each encoding and compares them with the equivalent <xref:System.Text.Encoding> names.  \n  \n [!code-cs[System.Text.EncodingInfo#1](~/add/codesnippet/csharp/p-system.text.encodingin_1_1.cs)]\n [!code-cpp[System.Text.EncodingInfo#1](~/add/codesnippet/cpp/p-system.text.encodingin_1_1.cpp)]\n [!code-vb[System.Text.EncodingInfo#1](~/add/codesnippet/visualbasic/p-system.text.encodingin_1_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "编码的用户可读说明。"
  overload: System.Text.EncodingInfo.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EncodingInfo.Equals(Object)
  fullName: System.Text.EncodingInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "获取一个值，该值指示指定的对象是否等于当前<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象。"
  remarks: "两个<xref:System.Text.EncodingInfo>对象相等，如果其<xref:System.Text.EncodingInfo.CodePage%2A>属性是否相等。</xref:System.Text.EncodingInfo.CodePage%2A> </xref:System.Text.EncodingInfo>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要比较的当前对象<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>是<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象以及是否等于当前<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Text.EncodingInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.GetEncoding
  id: GetEncoding
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: GetEncoding()
  nameWithType: EncodingInfo.GetEncoding()
  fullName: System.Text.EncodingInfo.GetEncoding()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "返回<xref:System.Text.Encoding>对应于当前对象<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象。</xref:System.Text.Encoding>"
  remarks: ''
  example:
  - "The following code example retrieves the different names for each encoding and compares them with the equivalent <xref:System.Text.Encoding> names.  \n  \n [!code-cs[System.Text.EncodingInfo#1](~/add/codesnippet/csharp/m-system.text.encodingin_1.cs)]\n [!code-cpp[System.Text.EncodingInfo#1](~/add/codesnippet/cpp/m-system.text.encodingin_1.cpp)]\n [!code-vb[System.Text.EncodingInfo#1](~/add/codesnippet/visualbasic/m-system.text.encodingin_1.vb)]"
  syntax:
    content: public System.Text.Encoding GetEncoding ();
    parameters: []
    return:
      type: System.Text.Encoding
      description: "A<xref:System.Text.Encoding>对应于当前对象<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象。</xref:System.Text.Encoding>"
  overload: System.Text.EncodingInfo.GetEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.GetHashCode
  id: GetHashCode
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EncodingInfo.GetHashCode()
  fullName: System.Text.EncodingInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "返回当前的哈希代码<xref href=&quot;System.Text.EncodingInfo&quot;></xref>对象。"
  remarks: "GetHashCode 方法返回的值不适合进行区分两个<xref:System.Text.EncodingInfo>从另一个对象。</xref:System.Text.EncodingInfo> 如果你的应用程序需要的唯一哈希代码，它应重写 GetHashCode 方法。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.Text.EncodingInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncodingInfo.Name
  id: Name
  parent: System.Text.EncodingInfo
  langs:
  - csharp
  name: Name
  nameWithType: EncodingInfo.Name
  fullName: System.Text.EncodingInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "获取与 Internet 编号分配机构 (IANA 注册） 的编码的名称。"
  remarks: "此属性定义适合于传递给<xref:System.Text.Encoding.GetEncoding%2A>.</xref:System.Text.Encoding.GetEncoding%2A>的名称 此名称是所表示的名称相同<xref:System.Text.Encoding.WebName%2A>属性。</xref:System.Text.Encoding.WebName%2A> 其值时的一种标准的名称，编码的实际实现可能不符合该标准完全。 你的应用程序应使用<xref:System.Text.EncodingInfo.DisplayName%2A>用户可读名称。</xref:System.Text.EncodingInfo.DisplayName%2A>       <xref:System.Text.Encoding.GetEncodings%2A>方法获取受支持的编码，唯一不同的代码页的完整列表。</xref:System.Text.Encoding.GetEncodings%2A> 如果你的应用程序检索使用 Name 属性的编码，请注意，检索某些重复的编码。 有关处理这些重复项的详细信息，请参阅<xref:System.Text.Encoding.GetEncodings%2A>.</xref:System.Text.Encoding.GetEncodings%2A>的说明"
  example:
  - "The following code example retrieves the different names for each encoding and compares them with the equivalent <xref:System.Text.Encoding> names.  \n  \n [!code-cs[System.Text.EncodingInfo#1](~/add/codesnippet/csharp/p-system.text.encodingin_2_1.cs)]\n [!code-cpp[System.Text.EncodingInfo#1](~/add/codesnippet/cpp/p-system.text.encodingin_2_1.cpp)]\n [!code-vb[System.Text.EncodingInfo#1](~/add/codesnippet/visualbasic/p-system.text.encodingin_2_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "IANA 的编码的名称。 IANA 有关的详细信息，请参阅 www.iana.org。"
  overload: System.Text.EncodingInfo.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.EncodingInfo.CodePage
  parent: System.Text.EncodingInfo
  isExternal: false
  name: CodePage
  nameWithType: EncodingInfo.CodePage
  fullName: System.Text.EncodingInfo.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncodingInfo.DisplayName
  parent: System.Text.EncodingInfo
  isExternal: false
  name: DisplayName
  nameWithType: EncodingInfo.DisplayName
  fullName: System.Text.EncodingInfo.DisplayName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.EncodingInfo.Equals(System.Object)
  parent: System.Text.EncodingInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: EncodingInfo.Equals(Object)
  fullName: System.Text.EncodingInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.EncodingInfo.GetEncoding
  parent: System.Text.EncodingInfo
  isExternal: false
  name: GetEncoding()
  nameWithType: EncodingInfo.GetEncoding()
  fullName: System.Text.EncodingInfo.GetEncoding()
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text.EncodingInfo.GetHashCode
  parent: System.Text.EncodingInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: EncodingInfo.GetHashCode()
  fullName: System.Text.EncodingInfo.GetHashCode()
- uid: System.Text.EncodingInfo.Name
  parent: System.Text.EncodingInfo
  isExternal: false
  name: Name
  nameWithType: EncodingInfo.Name
  fullName: System.Text.EncodingInfo.Name
- uid: System.Text.EncodingInfo.CodePage*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: CodePage
  nameWithType: EncodingInfo.CodePage
- uid: System.Text.EncodingInfo.DisplayName*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: DisplayName
  nameWithType: EncodingInfo.DisplayName
- uid: System.Text.EncodingInfo.Equals*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: Equals
  nameWithType: EncodingInfo.Equals
- uid: System.Text.EncodingInfo.GetEncoding*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: GetEncoding
  nameWithType: EncodingInfo.GetEncoding
- uid: System.Text.EncodingInfo.GetHashCode*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: GetHashCode
  nameWithType: EncodingInfo.GetHashCode
- uid: System.Text.EncodingInfo.Name*
  parent: System.Text.EncodingInfo
  isExternal: false
  name: Name
  nameWithType: EncodingInfo.Name
