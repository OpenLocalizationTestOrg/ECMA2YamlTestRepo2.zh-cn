### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "表示的有序的集合<xref href=&quot;System.Windows.Media.Visual&quot;></xref>对象。"
  remarks: "VisualCollection 具有隐含了上下文关联。 如果某一过程尝试从所属的上下文之外的其他上下文访问 VisualCollection <xref:System.Windows.Media.ContainerVisual>，将引发异常。</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>类。"
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "Visual 父对象，其<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>返回。"
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "追加<xref href=&quot;System.Windows.Media.Visual&quot;></xref>到末尾<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "添加<xref:System.Windows.Media.Visual>其值是`null`允许存在并且不会引发异常。</xref:System.Windows.Media.Visual>       Add 方法还设置之间 visual，父作为所有者的父-子关系的<xref:System.Windows.Media.VisualCollection>，和子`visual`。</xref:System.Windows.Media.VisualCollection>       如果你需要更好地控制低级别的自定义类的可视子对象的基础存储实现，请考虑使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 当你使用这些方法时，你必须定义您自己的存储实现，并且不使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要追加到<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "位于集合中的索引<code> visual </code>已添加。"
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.ArgumentException>如果引发<xref href=&quot;System.Windows.Media.Visual&quot;></xref>是根元素。</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置元素的数目<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>可以包含。"
  remarks: "容量的值是元素的数目，<xref:System.Windows.Media.VisualCollection>能够存储。</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>是的其实是<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>的视觉对象数</xref:System.Windows.Media.VisualCollection.Count%2A> 容量始终是大于或等于<xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> 如果<xref:System.Windows.Media.VisualCollection.Count%2A>添加元素的容量时超出容量<xref:System.Windows.Media.VisualCollection>增加。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> 默认情况下容量为零。"
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "元素的数目， <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>可以包含。"
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "容量设置为小于<xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*>值"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除所有元素从<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "<xref:System.Windows.Media.VisualCollection.Count%2A>重置为零。</xref:System.Windows.Media.VisualCollection.Count%2A> 值<xref:System.Windows.Media.VisualCollection.Capacity%2A>保持不变。</xref:System.Windows.Media.VisualCollection.Capacity%2A> 若要重置的容量<xref:System.Windows.Media.VisualCollection>，将其设置<xref:System.Windows.Media.VisualCollection.Capacity%2A>到所需大小的属性。</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "返回<xref:System.Boolean>值，该值指示是否指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>集合中包含。</xref:System.Boolean>"
  remarks: "此函数的最坏情况的运行时方案是`O(n)`，其中`n`是中的项目<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>数"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>在集合中搜索。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> visual </code>包含在集合; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "将复制到一个数组中从特定数组索引开始集合中的项。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "一维<xref:System.Array>的目标位置的元素的复制从<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中的从零开始索引`array`复制开始处。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "将当前集合复制到传入<xref href=&quot;System.Windows.Media.Visual&quot;></xref>数组。"
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "数组<xref href=&quot;System.Windows.Media.Visual&quot;></xref>对象 （其必须具有从零开始的索引）。"
    - id: index
      type: System.Int32
      description: "中从其开始复制的索引`array`。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取集合中的元素数。"
  remarks: "计数是其实是<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>的元素的数目 <xref:System.Windows.Media.VisualCollection.Capacity%2A>是的元素数的<xref:System.Windows.Media.VisualCollection>能够存储。</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       计数始终是小于或等于<xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> 如果计数超过<xref:System.Windows.Media.VisualCollection.Capacity%2A>时添加元素，该列表的容量翻倍通过自动重新在内部数组分配在复制旧元素和添加新的元素之前。</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "元素的数目， <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>包含。"
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "检索的枚举数可循环访问<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "一个可用于循环访问集合的枚举。"
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "返回的从零开始的索引<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
  remarks: "如果<xref:System.Windows.Media.Visual>不在<xref:System.Windows.Media.VisualCollection>，则返回-1。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> 如果`null`传递给方法，的索引的第一个条目，`null`返回。 如果没有 null 项，则返回-1。"
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要在中查找<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "索引<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "将元素插入<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>的指定索引处。"
  remarks: "如果<xref:System.Windows.Media.VisualCollection.Count%2A>已经等于<xref:System.Windows.Media.VisualCollection.Capacity%2A>、 容量的<xref:System.Windows.Media.VisualCollection>之前新增加<xref:System.Windows.Media.Visual>插入。</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> 如果`index`等同于<xref:System.Windows.Media.VisualCollection.Count%2A>，`visual`添加到<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>末尾</xref:System.Windows.Media.VisualCollection.Count%2A> 任何现有 visual 对象而言是等于或大于`index`将移动，以容纳新<xref:System.Windows.Media.Visual>，并更新其索引值。</xref:System.Windows.Media.Visual>       Insert 方法还设置之间 visual，父作为所有者的父-子关系的<xref:System.Windows.Media.VisualCollection>，和子`visual`。</xref:System.Windows.Media.VisualCollection>       如果你需要更好地控制低级别的可视子对象的基础存储实现，请考虑使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 当你使用这些方法时，在定义您自己的存储实现，并且不使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引，应在此处插入值。"
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要插入到<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零或大于<xref:System.Windows.Media.VisualCollection.Count*>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>是只读的。"
  remarks: "此属性始终是`false`所有<xref:System.Windows.Media.VisualCollection>对象。</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "值，该值指示是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>是只读的。"
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否访问<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>同步的 （线程安全）。"
  remarks: "此属性始终是`false`所有<xref:System.Windows.Media.VisualCollection>对象。</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "值，该值指示是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>同步的 （线程安全）。"
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref href=&quot;System.Windows.Media.Visual&quot;></xref>处的从零开始的索引存储<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "此属性提供访问特定能力<xref:System.Windows.Media.Visual>中<xref:System.Windows.Media.VisualCollection>使用索引。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>要获取或设置从中<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零，或<code>index</code>等于或大于<xref:System.Windows.Media.VisualCollection.Count*>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新的子元素已有父级，或指定索引处的值不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "中移除指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>对象<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "请按照所移除的对象的可视化对象将移动以占据空出的位置，并且会更新其索引值。 如果`visual`是`null`，第一个`null`项将被删除。 请注意，移除`null`项是集合的大小呈线性。       Remove 方法还会删除之间 visual，父作为所有者的父-子关系的<xref:System.Windows.Media.VisualCollection>，和子`visual`。</xref:System.Windows.Media.VisualCollection>       如果你需要更好地控制低级别的可视子对象的基础存储实现，请考虑使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 当你使用这些方法时，在定义您自己的存储实现，并且不使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要从此<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "删除中的指定索引处的视觉对象<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "请按照所移除的对象的可视化对象将移动以占据空出的位置，并且会更新其索引值。       RemoveAt 方法还会删除之间 visual，父作为所有者的父-子关系的<xref:System.Windows.Media.VisualCollection>，和子`visual`。</xref:System.Windows.Media.VisualCollection>       如果你需要更好地控制低级别的可视子对象的基础存储实现，请考虑使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 当你使用这些方法时，在定义您自己的存储实现，并且不使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要删除的视觉对象的从零开始的索引。"
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零，或<code>index</code>等于或大于<xref:System.Windows.Media.VisualCollection.Count*>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除一定范围的视觉对象从<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "跟在移除视觉对象将移动以占据空出的位置，并且会更新其索引值。       RemoveRange 方法还会删除父视觉对象，但作为所有者之间的父-子关系的<xref:System.Windows.Media.VisualCollection>，以及子视觉对象的范围。</xref:System.Windows.Media.VisualCollection>       如果你需要更好地控制低级别的可视子对象的基础存储实现，请考虑使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 当你使用这些方法时，在定义您自己的存储实现，并且不使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的元素范围的从零开始索引。"
    - id: count
      type: System.Int32
      description: "要移除的元素数。"
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零或<code>count</code>小于零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>和<code>count</code>不引用有效的一系列元素中<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取可以用于对访问进行同步的对象<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "类型<xref:System.Object>.</xref:System.Object>的值"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "此成员支持[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IEnumerable.GetEnumerator*>。</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "一个可用于循环访问集合的对象。"
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
