### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  summary: "提供<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>基类的所有许可证。 为组件的特定实例授予许可证。"
  remarks: "所有组件必须都调用<xref:System.ComponentModel.License.Dispose%2A>时授予他们的许可证释放或完成组件。</xref:System.ComponentModel.License.Dispose%2A>"
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.License&quot;></xref>类。"
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "当在派生类中重写，释放许可证使用的资源。"
  remarks: "所有组件必须都调用释放它们授予时释放或完成组件的许可证。       A<xref:System.ComponentModel.LicenseProvider>可以使用它来跟踪其使用情况会授予许可证。</xref:System.ComponentModel.LicenseProvider>       在完成使用<xref:System.ComponentModel.License>.</xref:System.ComponentModel.License>时调用的 Dispose Dispose 方法离开<xref:System.ComponentModel.License>中不可用状态。</xref:System.ComponentModel.License> 调用 Dispose 后，必须释放对所有引用<xref:System.ComponentModel.License>以便可以通过垃圾回收回收其占用的内存。</xref:System.ComponentModel.License>      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.ComponentModel.License>。</xref:System.ComponentModel.License>最后一个引用之前 否则为资源<xref:System.ComponentModel.License>是使用不会被释放之前垃圾集合调用<xref:System.ComponentModel.License>对象的析构函数。</xref:System.ComponentModel.License> </xref:System.ComponentModel.License>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "当在派生类中重写，获取授予此组件的许可证密钥。"
  remarks: "A<xref:System.ComponentModel.LicenseProvider>字符串可以用作任何 Unicode 字符的许可密钥。</xref:System.ComponentModel.LicenseProvider> LicenseKey 应视为不透明的 cookie，即，具有有意隐藏的内部结构的 cookie。"
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: "此组件将授予许可证密钥。"
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
