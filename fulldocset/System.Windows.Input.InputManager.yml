### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.InputManager
  id: InputManager
  children:
  - System.Windows.Input.InputManager.Current
  - System.Windows.Input.InputManager.EnterMenuMode
  - System.Windows.Input.InputManager.HitTestInvalidatedAsync
  - System.Windows.Input.InputManager.InputProviders
  - System.Windows.Input.InputManager.IsInMenuMode
  - System.Windows.Input.InputManager.LeaveMenuMode
  - System.Windows.Input.InputManager.MostRecentInputDevice
  - System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  - System.Windows.Input.InputManager.PostNotifyInput
  - System.Windows.Input.InputManager.PostProcessInput
  - System.Windows.Input.InputManager.PreNotifyInput
  - System.Windows.Input.InputManager.PreProcessInput
  - System.Windows.Input.InputManager.PrimaryKeyboardDevice
  - System.Windows.Input.InputManager.PrimaryMouseDevice
  - System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  - System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  langs:
  - csharp
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
  type: Class
  summary: "管理中的所有输入的系统[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]。"
  remarks: "InputManager 类负责协调中的所有输入系统[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]。       筛选器是侦听<xref:System.Windows.Input.InputManager.PreProcessInput>或<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput></xref:System.Windows.Input.InputManager.PreProcessInput>任何代码  筛选器可以修改输入的临时区域。       监视器是侦听<xref:System.Windows.Input.InputManager.PreNotifyInput>或<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput></xref:System.Windows.Input.InputManager.PreNotifyInput>任何代码  监视器不能修改输入的临时区域。       InputManager 控制输入的临时区域。  输入的临时区域可处理输入到[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]事件。       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PreProcessInput>事件。</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  通知前步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PreNotifyInput>事件。</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PostNotifyInput>事件。</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  后续处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PostProcessInput>事件。</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: 'public sealed class InputManager : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.InputManager.Current
  id: Current
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取<xref href=&quot;System.Windows.Input.InputManager&quot;></xref>与当前线程关联。"
  remarks: "此类在 Internet 区域中将不可用。"
  syntax:
    content: public static System.Windows.Input.InputManager Current { get; }
    return:
      type: System.Windows.Input.InputManager
      description: "输入管理器。"
  overload: System.Windows.Input.InputManager.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.EnterMenuMode
  id: EnterMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "控件通过调用进入了菜单模式时发生<xref:System.Windows.Input.InputManager.PushMenuMode*>方法。</xref:System.Windows.Input.InputManager.PushMenuMode*>"
  remarks: "组件注册为输入的输入的管理器菜单模式的控件响应此事件的委托。"
  syntax:
    content: public event EventHandler EnterMenuMode;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  id: HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "命中测试的结果可能已更改时发生。"
  syntax:
    content: public event EventHandler HitTestInvalidatedAsync;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.InputProviders
  id: InputProviders
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取与注册的个的集合<xref href=&quot;System.Windows.Input.InputManager&quot;> </xref>。"
  syntax:
    content: public System.Collections.ICollection InputProviders { get; }
    return:
      type: System.Collections.ICollection
      description: "提供的输入的集合。"
  overload: System.Windows.Input.InputManager.InputProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.IsInMenuMode
  id: IsInMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;></xref>处于菜单模式。"
  remarks: "IsInMenuMode 属性返回`true`如果任何菜单处于打开状态，并且它将返回`false`如果没有菜单处于打开状态。"
  syntax:
    content: public bool IsInMenuMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;></xref>处于菜单模式; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.InputManager.IsInMenuMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  id: LeaveMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "控件通过调用离开菜单模式时发生<xref:System.Windows.Input.InputManager.PopMenuMode*>方法。</xref:System.Windows.Input.InputManager.PopMenuMode*>"
  remarks: "组件注册此事件来响应离开输入管理器的菜单模式的控件的委托。"
  syntax:
    content: public event EventHandler LeaveMenuMode;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  id: MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取一个值，表示与最新输入事件相关联的输入的设备。"
  syntax:
    content: public System.Windows.Input.InputDevice MostRecentInputDevice { get; }
    return:
      type: System.Windows.Input.InputDevice
      description: "输入的设备。"
  overload: System.Windows.Input.InputManager.MostRecentInputDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  id: PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "由组件调用以退出菜单模式。"
  remarks: "组件调用此方法以将输入管理器的菜单模式。 `menuSite`释放对窗口消息特许访问权限。       调用此方法会导致打开菜单要递减的内部计数和设置<xref:System.Windows.Input.InputManager.IsInMenuMode%2A>属性`false`，如果这是关闭的最后一个菜单。</xref:System.Windows.Input.InputManager.IsInMenuMode%2A>"
  syntax:
    content: public void PopMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "要退出的菜单。"
  overload: System.Windows.Input.InputManager.PopMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostNotifyInput
  id: PostNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "之后，将会<xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;></xref>处理程序完成处理的输入和相应[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]在引发事件。"
  remarks: "监视器是侦听的任何代码<xref:System.Windows.Input.InputManager.PreNotifyInput>或 PostNotifyInput。</xref:System.Windows.Input.InputManager.PreNotifyInput>  监视器不能修改输入的临时区域。       以便在处理程序之前在系统中调用处理程序添加用户，将按相反的顺序调用附加到 PostNotifyInput 处理程序。       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PreProcessInput>事件。</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  通知前步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PreNotifyInput>事件。</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发 PostNotifyInput 事件。      5.  后续处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PostProcessInput>事件。</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostProcessInput
  id: PostProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "之后，将会<xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;></xref>处理程序完成处理的输入。"
  remarks: "筛选器是侦听的任何代码<xref:System.Windows.Input.InputManager.PreProcessInput>或 PostProcessInput。</xref:System.Windows.Input.InputManager.PreProcessInput>  筛选器可以修改输入的临时区域。       以便在处理程序之前在系统中调用处理程序添加用户，将按相反的顺序调用附加到 PostProcessInput 处理程序。       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PreProcessInput>事件。</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  通知前步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PreNotifyInput>事件。</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PostNotifyInput>事件。</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  后续处理阶段。  输入管理器引发 PostProcessInput 事件。"
  syntax:
    content: public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;
    return:
      type: System.Windows.Input.ProcessInputEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreNotifyInput
  id: PreNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "发生时<xref href=&quot;System.Windows.Input.InputManager.PreProcessInput&quot;></xref>处理程序完成处理输入，如果未取消输入。"
  remarks: "监视器是侦听 PreNotifyInput 或<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput>任何代码  监视器不能修改输入的临时区域。       以便在处理程序之前在系统中调用处理程序添加用户，将按相反的顺序调用附加到 PreNotifyInput 处理程序。       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PreProcessInput>事件。</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  通知前步骤。  输入管理器引发 PreNotifyInput 事件。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PostNotifyInput>事件。</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  后续处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PostProcessInput>事件。</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreProcessInput
  id: PreProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "发生时<xref href=&quot;System.Windows.Input.InputManager&quot;></xref>开始处理输入的项。"
  remarks: "筛选器是侦听 PreProcessInput 或<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput>任何代码  筛选器可以修改输入的临时区域。       以便在处理程序之前在系统中调用处理程序添加用户，将按相反的顺序调用附加到 PreProcessInput 处理程序。       调用<xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>上<xref:System.Windows.Input.PreProcessInputEventArgs>传递给<xref:System.Windows.Input.PreProcessInputEventHandler>将取消输入的处理。</xref:System.Windows.Input.PreProcessInputEventHandler> </xref:System.Windows.Input.PreProcessInputEventArgs> </xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发 PreProcessInput 事件。      2.  通知前步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PreNotifyInput>事件。</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PostNotifyInput>事件。</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  后续处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PostProcessInput>事件。</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;
    return:
      type: System.Windows.Input.PreProcessInputEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  id: PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取主键盘设备。"
  syntax:
    content: public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }
    return:
      type: System.Windows.Input.KeyboardDevice
      description: "键盘设备中。"
  overload: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  id: PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取主鼠标设备。"
  syntax:
    content: public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "将鼠标设备。"
  overload: System.Windows.Input.InputManager.PrimaryMouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  id: ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "同步处理指定的输入。"
  remarks: "筛选器是侦听<xref:System.Windows.Input.InputManager.PreProcessInput>或<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput></xref:System.Windows.Input.InputManager.PreProcessInput>任何代码  筛选器可以修改输入的临时区域。       监视器是侦听<xref:System.Windows.Input.InputManager.PreNotifyInput>或<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput></xref:System.Windows.Input.InputManager.PreNotifyInput>任何代码  监视器不能修改输入的临时区域。       指定的输入处理的所有筛选器和监视器，和最后调度到作为输入事件的相应元素。       在处理输入[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在以下步骤︰ 1。  预处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PreProcessInput>事件。</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  通知前步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PreNotifyInput>事件。</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]引发输入的事件。      4.  通知后步骤。  输入管理器引发<xref:System.Windows.Input.InputManager.PostNotifyInput>事件。</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  后续处理阶段。  输入管理器引发<xref:System.Windows.Input.InputManager.PostProcessInput>事件。</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public bool ProcessInput (System.Windows.Input.InputEventArgs input);
    parameters:
    - id: input
      type: System.Windows.Input.InputEventArgs
      description: "要处理的输入。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已处理所有的输入的事件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.InputManager.ProcessInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  id: PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "由输入菜单模式的组件调用。"
  remarks: "组件调用此方法以输入输入管理器的菜单模式。 `menuSite`获取对窗口消息特许访问权限。 调用此方法会导致打开菜单以递增的内部计数和设置<xref:System.Windows.Input.InputManager.IsInMenuMode%2A>属性`true`，如果这是打开的第一个菜单。</xref:System.Windows.Input.InputManager.IsInMenuMode%2A>"
  syntax:
    content: public void PushMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "要输入的菜单。"
  overload: System.Windows.Input.InputManager.PushMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.InputManager.Current
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
- uid: System.Windows.Input.InputManager
  parent: System.Windows.Input
  isExternal: false
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
- uid: System.Windows.Input.InputManager.EnterMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
- uid: System.Windows.Input.InputManager.InputProviders
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.Input.InputManager.IsInMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputDevice
  parent: System.Windows.Input
  isExternal: false
  name: InputDevice
  nameWithType: InputDevice
  fullName: System.Windows.Input.InputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.InputManager.PostNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
- uid: System.Windows.Input.NotifyInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: NotifyInputEventHandler
  nameWithType: NotifyInputEventHandler
  fullName: System.Windows.Input.NotifyInputEventHandler
- uid: System.Windows.Input.InputManager.PostProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
- uid: System.Windows.Input.ProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ProcessInputEventHandler
  nameWithType: ProcessInputEventHandler
  fullName: System.Windows.Input.ProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PreNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
- uid: System.Windows.Input.InputManager.PreProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
- uid: System.Windows.Input.PreProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: PreProcessInputEventHandler
  nameWithType: PreProcessInputEventHandler
  fullName: System.Windows.Input.PreProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.KeyboardDevice
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardDevice
  nameWithType: KeyboardDevice
  fullName: System.Windows.Input.KeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
- uid: System.Windows.Input.InputManager.Current*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
- uid: System.Windows.Input.InputManager.InputProviders*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
- uid: System.Windows.Input.InputManager.IsInMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode
  nameWithType: InputManager.PopMenuMode
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput
  nameWithType: InputManager.ProcessInput
- uid: System.Windows.Input.InputManager.PushMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode
  nameWithType: InputManager.PushMenuMode
