### YamlMime:ManagedReference
items:
- uid: System.Configuration.RsaProtectedConfigurationProvider
  id: RsaProtectedConfigurationProvider
  children:
  - System.Configuration.RsaProtectedConfigurationProvider.#ctor
  - System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  - System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  - System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  - System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  - System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  - System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  - System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  - System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  - System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  langs:
  - csharp
  name: RsaProtectedConfigurationProvider
  nameWithType: RsaProtectedConfigurationProvider
  fullName: System.Configuration.RsaProtectedConfigurationProvider
  type: Class
  summary: "提供<xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;></xref>使用 RSA 加密来加密和解密配置数据的实例。"
  remarks: "RsaProtectedConfigurationProvider 类提供了一种方法来加密存储在配置文件，它可帮助防止未经授权访问的敏感信息。 通过声明提供程序并在配置文件中而不是创建此类的实例进行适当的设置，如本主题后面的示例中所示使用内置的 RsaProtectedConfigurationProvider 实例。       RsaProtectedConfigurationProvider 对象使用由提供的加密函数<xref:System.Security.Cryptography.RSA>类进行加密和解密配置节。</xref:System.Security.Cryptography.RSA>      1> [!NOTE]&1;> 之前 ASP.NET 可以解密加密的信息配置文件中，ASP.NET 应用程序的标识必须具有对用于加密和解密配置数据的加密密钥的读取访问。 有关详细信息，请参阅[演练︰ 加密配置信息使用受保护的配置](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows how to use the standard RsaProtectedConfigurationProvider to protect or unprotect a configuration section.  \n  \n [!code-vb[System.Configuration.RsaProtectedConfigurationProvider#1](~/add/codesnippet/visualbasic/t-system.configuration.r_1_1.vb)]\n [!code-cs[System.Configuration.RsaProtectedConfigurationProvider#1](~/add/codesnippet/csharp/t-system.configuration.r_1_1.cs)]  \n  \n The following example shows an excerpt from a configuration file after encryption.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <connectionStrings configProtectionProvider=\"RsaProtectedConfigurationProvider\">  \n    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"  \n        xmlns=\"http://www.w3.org/2001/04/xmlenc#\">  \n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />  \n      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">  \n        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">  \n          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />  \n          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">  \n            <KeyName>Rsa Key</KeyName>  \n          </KeyInfo>  \n          <CipherData>  \n            <CipherValue>B702tRDVHJjC3CYXt7I0ucCDjdht/Vyk/DdUhwQyt7vepSD85dwCP8ox9Y1BUdjajFeTFfFBsGypbli5HPGRYamQdrVkPo07bBBXNT5H02qxREguGUU4iDtV1Xp8BLVZjQMV4ZgP6Wbctw2xRvPC7GvKHLI4fUN/Je5LmutsijA=</CipherValue>  \n          </CipherData>  \n        </EncryptedKey>  \n      </KeyInfo>  \n      <CipherData>  \n        <CipherValue>ME+XJA2TAj3QN3yT4pJq3sRArC0i7Cz3Da71BkaRe9QNfuVuUjcv0jeGUN4wDdOAZ7LPq6UpVrpirY3kQcALDvPJ5nKxk++Mw75rjtIO8eh2goTY9rCK6zanfzaDshFy7IqItpvs/y2kmij25nM3ury6uO0hCf0UbEL1mbT2jXDqvcrHZUobO1Ef6bygBZ/8HpU+VfF9CTCob/BBE9zUkK37EQhcduwsnzBvDblYbF/Rd+F4lxAkZnecGLfCZjOzJB4xH1a0vvWtPR7zNwL/7I0uHzQjyMdWrkBnotMjoR70R7NELBotCogWO0MBimncKigdR3dTTdrCd72a7UJ4LMlEQaZXGIJp4PIg6qVDHII=</CipherValue>  \n      </CipherData>  \n    </EncryptedData>  \n  </connectionStrings>  \n</configuration>  \n```"
  syntax:
    content: 'public sealed class RsaProtectedConfigurationProvider : System.Configuration.ProtectedConfigurationProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.ProtectedConfigurationProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: RsaProtectedConfigurationProvider()
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;></xref>类。"
  remarks: "RsaProtectedConfigurationProvider 构造函数不应在代码中直接使用。 它是由 ASP.NET 配置系统调用的。"
  syntax:
    content: public RsaProtectedConfigurationProvider ();
    parameters: []
  overload: System.Configuration.RsaProtectedConfigurationProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  id: AddKey(System.Int32,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: AddKey(Int32,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将密钥添加到 RSA 密钥容器。"
  syntax:
    content: public void AddKey (int keySize, bool exportable);
    parameters:
    - id: keySize
      type: System.Int32
      description: "要添加的键的大小。"
    - id: exportable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示密钥可以导出，;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.AddKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  id: CspProviderName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取 Windows 加密 API （加密 API） 加密服务提供程序 (CSP) 的名称。"
  syntax:
    content: public string CspProviderName { get; }
    return:
      type: System.String
      description: "CryptoAPI 加密服务提供程序的名称。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  id: Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Decrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "解密传递给它的 XML 节点。"
  syntax:
    content: public override System.Xml.XmlNode Decrypt (System.Xml.XmlNode encryptedNode);
    parameters:
    - id: encryptedNode
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>进行解密。"
    return:
      type: System.Xml.XmlNode
      description: "已解密的 XML 节点。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.Decrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  id: DeleteKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: DeleteKey()
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "从 RSA 密钥容器中删除密钥。"
  syntax:
    content: public void DeleteKey ();
    parameters: []
  overload: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  id: Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Encrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "加密传递给它的 XML 节点。"
  syntax:
    content: public override System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>进行加密。"
    return:
      type: System.Xml.XmlNode
      description: "加密<xref href=&quot;System.Xml.XmlNode&quot;></xref>对象。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.Encrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  id: ExportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: ExportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "从密钥容器中导出 RSA 密钥。"
  syntax:
    content: public void ExportKey (string xmlFileName, bool includePrivateParameters);
    parameters:
    - id: xmlFileName
      type: System.String
      description: "文件名和路径以导出到的密钥。"
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示，将导出专用参数;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.ExportKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，例如位于未映射的驱动器上。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时出错。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  id: ImportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: ImportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将 RSA 密钥导入密钥容器。"
  syntax:
    content: public void ImportKey (string xmlFileName, bool exportable);
    parameters:
    - id: xmlFileName
      type: System.String
      description: "文件名和路径来导入中的键。"
    - id: exportable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示密钥可以导出，;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.ImportKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，例如位于未映射的驱动器上。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时出错。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定是只写的文件。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化使用默认设置提供程序。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection configurationValues);
    parameters:
    - id: name
      type: System.String
      description: "要对对象使用的提供程序名称。"
    - id: configurationValues
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>初始化对象时要使用的值的集合。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.Initialize*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>configurationValues</code>包括一个或多个无法识别的值。"
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  id: KeyContainerName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取密钥容器的名称。"
  syntax:
    content: public string KeyContainerName { get; }
    return:
      type: System.String
      description: "密钥容器的名称。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  id: RsaPublicKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取提供程序所使用的公钥。"
  syntax:
    content: public System.Security.Cryptography.RSAParameters RsaPublicKey { get; }
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>包含提供程序所使用的公钥的对象。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  id: UseFIPS
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示句柄。"
  syntax:
    content: public bool UseFIPS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果句柄;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  id: UseMachineContainer
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;></xref>对象正在使用计算机密钥容器。"
  syntax:
    content: public bool UseMachineContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;></xref>对象正在使用计算机密钥容器; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  id: UseOAEP
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示提供程序是否正在使用最优非对称加密填充 (OAEP) 密钥交换数据。"
  syntax:
    content: public bool UseOAEP { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;></xref>对象正在使用最优非对称加密填充 (OAEP) 密钥交换数据; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: System.Configuration.ProtectedConfigurationProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaProtectedConfigurationProvider()
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: AddKey(Int32,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Decrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: DeleteKey()
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey()
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Encrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(XmlNode)
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ExportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ImportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaProtectedConfigurationProvider
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: AddKey
  nameWithType: RsaProtectedConfigurationProvider.AddKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Decrypt
  nameWithType: RsaProtectedConfigurationProvider.Decrypt
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: DeleteKey
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Encrypt
  nameWithType: RsaProtectedConfigurationProvider.Encrypt
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ExportKey
  nameWithType: RsaProtectedConfigurationProvider.ExportKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ImportKey
  nameWithType: RsaProtectedConfigurationProvider.ImportKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Initialize
  nameWithType: RsaProtectedConfigurationProvider.Initialize
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
