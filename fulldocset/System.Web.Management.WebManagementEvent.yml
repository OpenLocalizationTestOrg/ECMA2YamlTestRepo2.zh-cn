### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebManagementEvent
  id: WebManagementEvent
  children:
  - System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  langs:
  - csharp
  name: WebManagementEvent
  nameWithType: WebManagementEvent
  fullName: System.Web.Management.WebManagementEvent
  type: Class
  summary: "定义执行应用程序和进程的信息的事件的基类。"
  remarks: "ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management?displayProperty=fullName>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</xref:System.Web.Management?displayProperty=fullName> 它还包含在管理运行状况事件期间帮助的支持类型。       WebManagementEvent 是所有 ASP.NET 运行状况监视事件类型的基类。 它使用<xref:System.Web.Management.WebProcessInformation>类来获取对其派生类可用的进程信息。</xref:System.Web.Management.WebProcessInformation>      1> [!NOTE]&1;> 在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。 你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关从 WebManagementEvent 类派生的示例，请参阅本主题中提供的示例。"
  example:
  - "The following example shows how to implement a custom event by deriving it from the WebManagementEvent class.  \n  \n [!code-cs[System.Web.Management.WebManagementEvent#1](~/add/codesnippet/csharp/t-system.web.management._15_1.cs)]\n [!code-vb[System.Web.Management.WebManagementEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._15_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the custom event.  \n  \n```  \n<healthMonitoring enabled=\"true\"   \n  heartBeatInterval=\"0\">  \n  <eventMappings>  \n  \n    <add  name=\"SampleWebManagementEvent\" type=\"SamplesAspNet.SampleWebManagementEvent,webmanagementevent,Version=1.0.1573.24438, Culture=neutral, PublicKeyToken=2f5f337ae5c9bdaa, processorArchitecture=MSIL\"/>  \n  \n  </eventMappings>  \n  <rules>  \n    <add   \n      name=\"Custom WebManagementEvent\"  \n      eventName=\"SampleWebManagementEvent\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Critical\"/>  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebManagementEvent : System.Web.Management.WebBaseEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  platform:
  - net462
- uid: System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebManagementEvent
  langs:
  - csharp
  name: WebManagementEvent(String,Object,Int32)
  nameWithType: WebManagementEvent.WebManagementEvent(String,Object,Int32)
  fullName: System.Web.Management.WebManagementEvent.WebManagementEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化的新实例<xref href=&quot;System.Web.Management.WebManagementEvent&quot;></xref>类使用提供的参数。"
  remarks: "WebManagementEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebManagementEvent>类</xref:System.Web.Management.WebManagementEvent>派生时，可以调用 WebManagementEvent 构造函数"
  syntax:
    content: protected WebManagementEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "事件说明。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
  overload: System.Web.Management.WebManagementEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebManagementEvent
  langs:
  - csharp
  name: WebManagementEvent(String,Object,Int32,Int32)
  nameWithType: WebManagementEvent.WebManagementEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebManagementEvent.WebManagementEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化的新实例<xref href=&quot;System.Web.Management.WebManagementEvent&quot;></xref>类使用提供的参数。"
  remarks: "WebManagementEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebManagementEvent>类</xref:System.Web.Management.WebManagementEvent>派生时，可以调用 WebManagementEvent 构造函数"
  syntax:
    content: protected WebManagementEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "事件说明。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref>值，该值指定事件的详细的标识符。"
  overload: System.Web.Management.WebManagementEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebManagementEvent.ProcessInformation
  id: ProcessInformation
  parent: System.Web.Management.WebManagementEvent
  langs:
  - csharp
  name: ProcessInformation
  nameWithType: WebManagementEvent.ProcessInformation
  fullName: System.Web.Management.WebManagementEvent.ProcessInformation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取 ASP.NET 应用程序宿主进程的信息。"
  remarks: ''
  example:
  - "The following code example shows how to obtain the ProcessInformation value.  \n  \n [!code-cs[System.Web.Management.WebManagementEvent#5](~/add/codesnippet/csharp/p-system.web.management._52_1.cs)]\n [!code-vb[System.Web.Management.WebManagementEvent#5](~/add/codesnippet/visualbasic/p-system.web.management._52_1.vb)]"
  syntax:
    content: public System.Web.Management.WebProcessInformation ProcessInformation { get; }
    return:
      type: System.Web.Management.WebProcessInformation
      description: "A <xref href=&quot;System.Web.Management.WebProcessInformation&quot;> </xref>对象，其中包含有关进程的信息。"
  overload: System.Web.Management.WebManagementEvent.ProcessInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebBaseEvent
  isExternal: false
  name: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebManagementEvent
  isExternal: false
  name: WebManagementEvent(String,Object,Int32)
  nameWithType: WebManagementEvent.WebManagementEvent(String,Object,Int32)
  fullName: System.Web.Management.WebManagementEvent.WebManagementEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebManagementEvent
  isExternal: false
  name: WebManagementEvent(String,Object,Int32,Int32)
  nameWithType: WebManagementEvent.WebManagementEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebManagementEvent.WebManagementEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebManagementEvent.ProcessInformation
  parent: System.Web.Management.WebManagementEvent
  isExternal: false
  name: ProcessInformation
  nameWithType: WebManagementEvent.ProcessInformation
  fullName: System.Web.Management.WebManagementEvent.ProcessInformation
- uid: System.Web.Management.WebProcessInformation
  parent: System.Web.Management
  isExternal: false
  name: WebProcessInformation
  nameWithType: WebProcessInformation
  fullName: System.Web.Management.WebProcessInformation
- uid: System.Web.Management.WebManagementEvent.#ctor*
  parent: System.Web.Management.WebManagementEvent
  isExternal: false
  name: WebManagementEvent
  nameWithType: WebManagementEvent.WebManagementEvent
- uid: System.Web.Management.WebManagementEvent.ProcessInformation*
  parent: System.Web.Management.WebManagementEvent
  isExternal: false
  name: ProcessInformation
  nameWithType: WebManagementEvent.ProcessInformation
