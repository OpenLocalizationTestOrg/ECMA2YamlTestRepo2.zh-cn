### YamlMime:ManagedReference
items:
- uid: System.Configuration.Configuration
  id: Configuration
  children:
  - System.Configuration.Configuration.AppSettings
  - System.Configuration.Configuration.AssemblyStringTransformer
  - System.Configuration.Configuration.ConnectionStrings
  - System.Configuration.Configuration.EvaluationContext
  - System.Configuration.Configuration.FilePath
  - System.Configuration.Configuration.GetSection(System.String)
  - System.Configuration.Configuration.GetSectionGroup(System.String)
  - System.Configuration.Configuration.HasFile
  - System.Configuration.Configuration.Locations
  - System.Configuration.Configuration.NamespaceDeclared
  - System.Configuration.Configuration.RootSectionGroup
  - System.Configuration.Configuration.Save
  - System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  - System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  - System.Configuration.Configuration.SaveAs(System.String)
  - System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  - System.Configuration.Configuration.SectionGroups
  - System.Configuration.Configuration.Sections
  - System.Configuration.Configuration.TargetFramework
  - System.Configuration.Configuration.TypeStringTransformer
  langs:
  - csharp
  name: Configuration
  nameWithType: Configuration
  fullName: System.Configuration.Configuration
  type: Class
  summary: "表示适用于特定计算机、 应用程序或资源的配置文件。 此类不能被继承。"
  remarks: "配置设置存储在配置文件的层次结构。 配置类实例表示的合并的视图，从所有应用于特定的物理实体，如一台计算机，或逻辑实体，如应用程序或网站的配置文件的配置设置。 在本地计算机或远程服务器上，可以存在逻辑实体。 有关配置文件的信息，请参阅[配置应用](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 配置文件](~/add/includes/ajax-current-ext-md.md)。       当配置文件不存在为指定的实体时，配置对象表示由 Machine.config 文件定义的默认配置设置。       你可以通过使用以下类获取配置对象:-<xref:System.Configuration.ConfigurationManager>类，如果你的实体为客户端应用程序。</xref:System.Configuration.ConfigurationManager>      -<xref:System.Web.Configuration.WebConfigurationManager>类，如果你的实体是一个 Web 应用程序。</xref:System.Web.Configuration.WebConfigurationManager>       返回配置对象的方法的名称开头&quot;打开&quot;。       你还可以生成表示配置对象中的配置设置的配置文件。 若要执行此操作，使用以下方法之一:-调用<xref:System.Configuration.Configuration.Save%2A>方法来创建新的配置文件。</xref:System.Configuration.Configuration.Save%2A>      -调用<xref:System.Configuration.Configuration.SaveAs%2A>方法来生成新的配置文件在另一个位置。</xref:System.Configuration.Configuration.SaveAs%2A>       创建配置文件的方法的名称开头&quot;保存&quot;。      1> [!NOTE]&1;> 若要启用对远程计算机上的配置设置的访问，使用 Aspnet_regiis 命令行工具。 有关此工具的详细信息，请参阅[ASP.NET IIS 注册工具 (Aspnet_regiis.exe)](~/add/includes/ajax-current-ext-md.md)。 有关创建和访问包含在.NET Framework 中的固有部分以外的自定义配置设置的信息，请参阅<xref:System.Configuration.ConfigurationSection>。</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following code example demonstrates how to use the Configuration class to access configuration file elements.  \n  \n [!code-vb[System.Configuration.Configuration#31](~/add/codesnippet/visualbasic/t-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.Configuration#31](~/add/codesnippet/csharp/t-system.configuration.c_3_1.cs)]"
  syntax:
    content: public sealed class Configuration
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Configuration.AppSettings
  id: AppSettings
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: AppSettings
  nameWithType: Configuration.AppSettings
  fullName: System.Configuration.Configuration.AppSettings
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.AppSettingsSection&quot;></xref>对象配置节，其中应用到此<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "使用该 AppSettings 属性来访问和更改`appSettings`默认情况下，打开配置文件中定义的配置节。"
  example:
  - "The following code example demonstrates how to use the AppSettings property.  \n  \n [!code-vb[System.Configuration.Configuration#5](~/add/codesnippet/visualbasic/p-system.configuration.c_42_1.vb)]\n [!code-cs[System.Configuration.Configuration#5](~/add/codesnippet/csharp/p-system.configuration.c_42_1.cs)]"
  syntax:
    content: public System.Configuration.AppSettingsSection AppSettings { get; }
    return:
      type: System.Configuration.AppSettingsSection
      description: "<xref href=&quot;System.Configuration.AppSettingsSection&quot;> </xref>对象，表示<xref uid=&quot;langword_csharp_appSettings&quot; name=&quot;appSettings&quot; href=&quot;&quot;></xref>应用到此配置节<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.AppSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.AssemblyStringTransformer
  id: AssemblyStringTransformer
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
  fullName: System.Configuration.Configuration.AssemblyStringTransformer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定一个函数委托，用于转换配置文件中的程序集字符串。"
  remarks: "此属性支持.NET Framework 配置系统的用户设置一个函数委托，用于转换在配置文件中找到的程序集字符串。 [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]在项目所面向的.NET framework 早期版本时，请使用此属性。 该函数可确保，程序集字符串的格式正确的.NET framework 目标版本更新的配置文件时。"
  syntax:
    content: public Func<string,string> AssemblyStringTransformer { get; set; }
    return:
      type: System.Func{System.String,System.String}
      description: "一个委托，用于转换类型字符串。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.AssemblyStringTransformer*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.ConnectionStrings
  id: ConnectionStrings
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
  fullName: System.Configuration.Configuration.ConnectionStrings
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.ConnectionStringsSection&quot;></xref>应用到此配置节对象<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "使用 ConnectionStrings 属性来访问和更改`connectionStrings`打开配置文件中定义的配置节。"
  example:
  - "The following code example demonstrates how to use the ConnectionStrings property.  \n  \n [!code-vb[System.Configuration.Configuration#6](~/add/codesnippet/visualbasic/p-system.configuration.c_40_1.vb)]\n [!code-cs[System.Configuration.Configuration#6](~/add/codesnippet/csharp/p-system.configuration.c_40_1.cs)]"
  syntax:
    content: public System.Configuration.ConnectionStringsSection ConnectionStrings { get; }
    return:
      type: System.Configuration.ConnectionStringsSection
      description: "A <xref href=&quot;System.Configuration.ConnectionStringsSection&quot;> </xref>配置节对象，表示<xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;></xref>应用到此配置节<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.ConnectionStrings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.EvaluationContext
  id: EvaluationContext
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
  fullName: System.Configuration.Configuration.EvaluationContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.ContextInformation&quot;></xref>对象<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "A<xref:System.Configuration.ContextInformation>对象提供所需的上下文<xref:System.Configuration.Configuration>计算位置基于对象进行响应。</xref:System.Configuration.Configuration> </xref:System.Configuration.ContextInformation>"
  example:
  - "The following code example demonstrates how to use the EvaluationContext property.  \n  \n [!code-vb[System.Configuration.Configuration#7](~/add/codesnippet/visualbasic/p-system.configuration.c_54_1.vb)]\n [!code-cs[System.Configuration.Configuration#7](~/add/codesnippet/csharp/p-system.configuration.c_54_1.cs)]"
  syntax:
    content: public System.Configuration.ContextInformation EvaluationContext { get; }
    return:
      type: System.Configuration.ContextInformation
      description: "<xref href=&quot;System.Configuration.ContextInformation&quot;> </xref>对象<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.EvaluationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.FilePath
  id: FilePath
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: FilePath
  nameWithType: Configuration.FilePath
  fullName: System.Configuration.Configuration.FilePath
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取表示此配置文件的物理路径<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "如果此 FilePath 属性的值表示的合并的视图和应用程序的实际文件不存在，则返回父配置文件的路径。"
  example:
  - "The following code example demonstrates how to use the FilePath property.  \n  \n [!code-vb[System.Configuration.Configuration#8](~/add/codesnippet/visualbasic/p-system.configuration.c_51_1.vb)]\n [!code-cs[System.Configuration.Configuration#8](~/add/codesnippet/csharp/p-system.configuration.c_51_1.cs)]"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "这表示的配置文件的物理路径<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: Configuration.GetSection(String)
  fullName: System.Configuration.Configuration.GetSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "返回指定<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>对象。"
  remarks: "配置设置包含在组一起为方便起见类似设置的部分。 GetSection 方法检索按其名称的配置节。"
  example:
  - "The following example shows how to use the GetSection method to access a custom section. For the complete example code that defines a class that stores information for the `CustomSection` section, see the <xref:System.Configuration.Configuration> class overview.  \n  \n [!code-vb[System.Configuration.Configuration#3](~/add/codesnippet/visualbasic/m-system.configuration.c_21_1.vb)]\n [!code-cs[System.Configuration.Configuration#3](~/add/codesnippet/csharp/m-system.configuration.c_21_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "要返回的部分路径。"
    return:
      type: System.Configuration.ConfigurationSection
      description: "指定<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>对象。"
  overload: System.Configuration.Configuration.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.GetSectionGroup(System.String)
  id: GetSectionGroup(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: GetSectionGroup(String)
  nameWithType: Configuration.GetSectionGroup(String)
  fullName: System.Configuration.Configuration.GetSectionGroup(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取指定<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: "GetSectionGroup 方法用于获取特定<xref:System.Configuration.ConfigurationSectionGroup>从<xref:System.Configuration.Configuration>对象。</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationSectionGroup>"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroup GetSectionGroup (string sectionGroupName);
    parameters:
    - id: sectionGroupName
      type: System.String
      description: "路径名称<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>返回。"
    return:
      type: System.Configuration.ConfigurationSectionGroup
      description: "<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;> </xref>指定。"
  overload: System.Configuration.Configuration.GetSectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.HasFile
  id: HasFile
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: HasFile
  nameWithType: Configuration.HasFile
  fullName: System.Configuration.Configuration.HasFile
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示由此所表示的资源是否存在文件<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "HasFile 属性也会返回`true`由此表示的资源时<xref:System.Configuration.Configuration>对象从 Web.config 文件中继承设置。</xref:System.Configuration.Configuration>       HasFile 属性返回`false`时这<xref:System.Configuration.Configuration>对象表示特定位置的配置。</xref:System.Configuration.Configuration>"
  example:
  - "The following code example demonstrates how to use the HasFile property.  \n  \n [!code-vb[System.Configuration.Configuration#9](~/add/codesnippet/visualbasic/p-system.configuration.c_23_1.vb)]\n [!code-cs[System.Configuration.Configuration#9](~/add/codesnippet/csharp/p-system.configuration.c_23_1.cs)]"
  syntax:
    content: public bool HasFile { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有配置文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.HasFile*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Locations
  id: Locations
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Locations
  nameWithType: Configuration.Locations
  fullName: System.Configuration.Configuration.Locations
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取定义在此位置<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "位置属性适用时，才<xref:System.Configuration.Configuration.HasFile%2A>属性返回`true`。</xref:System.Configuration.Configuration.HasFile%2A> 如果此配置继承所有设置，或未定义位置，则返回空集合。"
  syntax:
    content: public System.Configuration.ConfigurationLocationCollection Locations { get; }
    return:
      type: System.Configuration.ConfigurationLocationCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationLocationCollection&quot;> </xref>包含在此定义的位置<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.Locations*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.NamespaceDeclared
  id: NamespaceDeclared
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
  fullName: System.Configuration.Configuration.NamespaceDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置一个值，该值指示配置文件是否具有一个 XML 命名空间。"
  remarks: "配置文件的格式为 XML 文件，但不需要的 XML 命名空间。 如果此值为`true`后<xref:System.Configuration.Configuration>对象已打开，则该文件包含的命名空间引用。</xref:System.Configuration.Configuration> 如果设置为`true`之前<xref:System.Configuration.Configuration>保存对象，然后命名空间引用将添加到文件。</xref:System.Configuration.Configuration>"
  syntax:
    content: public bool NamespaceDeclared { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果配置文件具有 XML 命名空间;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.NamespaceDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.RootSectionGroup
  id: RootSectionGroup
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
  fullName: System.Configuration.Configuration.RootSectionGroup
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取根<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>此<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroup RootSectionGroup { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroup
      description: "此根节组<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.RootSectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Save
  id: Save
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save()
  nameWithType: Configuration.Save()
  fullName: System.Configuration.Configuration.Save()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到当前的 XML 配置文件的对象。"
  remarks: "Save 方法仍然存在以来修改过的任何配置设置<xref:System.Configuration.Configuration>创建对象。</xref:System.Configuration.Configuration> 如果配置文件不存在所表示的物理位置<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同于继承的配置的任何设置。</xref:System.Configuration.Configuration.FilePath%2A>       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>      1> [!NOTE]&1;> 创建者所有者 ACL （访问控制列表） 中列出的目录时包含配置文件中，当前用户的保存将成为该文件的新所有者和继承的创建者所有者授予的权限。 这会导致为当前用户的权限提升和之前的所有者的特权删除。"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  id: Save(System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save(ConfigurationSaveMode)
  nameWithType: Configuration.Save(ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到当前的 XML 配置文件的对象。"
  remarks: "Save 方法仍然存在中的配置设置<xref:System.Configuration.Configuration>对象基于`saveMode`参数。</xref:System.Configuration.Configuration>       如果配置文件不存在所表示的物理位置<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同于继承的配置的任何设置。</xref:System.Configuration.Configuration.FilePath%2A>       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>      1> [!NOTE]&1;> 创建者所有者 ACL （访问控制列表） 中列出的目录时包含配置文件中，当前用户的保存将成为该文件的新所有者和继承的创建者所有者授予的权限。 这会导致为当前用户的权限提升和之前的所有者的特权删除。"
  example:
  - "The following code example demonstrates how to use the Save method to save a custom section.  \n  \n [!code-vb[System.Configuration.Configuration#2](~/add/codesnippet/visualbasic/ff1dd447-b23a-44d0-8833-_1.vb)]\n [!code-cs[System.Configuration.Configuration#2](~/add/codesnippet/csharp/ff1dd447-b23a-44d0-8833-_1.cs)]"
  syntax:
    content: public void Save (System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>值，该值确定要保存哪些属性值。"
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  id: Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save(ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.Save(ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到当前的 XML 配置文件的对象。"
  remarks: "Save 方法仍然存在中的配置设置<xref:System.Configuration.Configuration>对象基于`saveMode`和`forceSaveAll`参数。</xref:System.Configuration.Configuration>       如果在所表示的<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同的继承配置...的任何设置</xref:System.Configuration.Configuration.FilePath%2A>的物理位置，配置文件不存在。       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>      1> [!NOTE]&1;> 创建者所有者 ACL （访问控制列表） 中列出的目录时包含配置文件中，当前用户的保存将成为该文件的新所有者和继承的创建者所有者授予的权限。 这会导致为当前用户的权限提升和之前的所有者的特权删除。"
  syntax:
    content: public void Save (System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);
    parameters:
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>值，该值确定要保存哪些属性值。"
    - id: forceSaveAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保存即使不修改配置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String)
  id: SaveAs(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String)
  nameWithType: Configuration.SaveAs(String)
  fullName: System.Configuration.Configuration.SaveAs(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到指定的 XML 配置文件的对象。"
  remarks: "另存为方法可用于保持以来修改过的任何配置设置<xref:System.Configuration.Configuration>对象创建的新文件。</xref:System.Configuration.Configuration>       如果在所表示的<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同的继承配置...的任何设置</xref:System.Configuration.Configuration.FilePath%2A>的物理位置，配置文件不存在。       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>"
  syntax:
    content: public void SaveAs (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "要保存到配置文件的路径和文件名称。"
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  id: SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String,ConfigurationSaveMode)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到指定的 XML 配置文件的对象。"
  remarks: "另存为方法中的配置设置保持<xref:System.Configuration.Configuration>到新文件的对象基于`saveMode`参数。</xref:System.Configuration.Configuration>       如果在所表示的<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同的继承配置...的任何设置</xref:System.Configuration.Configuration.FilePath%2A>的物理位置，配置文件不存在。       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>"
  syntax:
    content: public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: filename
      type: System.String
      description: "要保存到配置文件的路径和文件名称。"
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>值，该值确定要保存哪些属性值。"
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  id: SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String,ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将包含在此配置设置<xref href=&quot;System.Configuration.Configuration&quot;></xref>到指定的 XML 配置文件的对象。"
  remarks: "另存为方法中的配置设置保持<xref:System.Configuration.Configuration>到新文件的对象基于`saveMode`和`forceSaveAll`参数。</xref:System.Configuration.Configuration>       如果配置文件不存在所表示的物理位置<xref:System.Configuration.Configuration.FilePath%2A>属性，新的配置文件将创建包含不同于继承的配置的任何设置。</xref:System.Configuration.Configuration.FilePath%2A>       如果配置文件后这已更改<xref:System.Configuration.Configuration>创建对象时，将发生运行时错误。</xref:System.Configuration.Configuration>"
  example:
  - "The following code example demonstrates how to use the SaveAs method.  \n  \n [!code-vb[System.Configuration.Configuration#4](~/add/codesnippet/visualbasic/482b549a-5bc1-4854-b723-_1.vb)]\n [!code-cs[System.Configuration.Configuration#4](~/add/codesnippet/csharp/482b549a-5bc1-4854-b723-_1.cs)]"
  syntax:
    content: public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);
    parameters:
    - id: filename
      type: System.String
      description: "要保存到配置文件的路径和文件名称。"
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>值，该值确定要保存哪些属性值。"
    - id: forceSaveAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保存即使不修改配置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>为 null 或空字符串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Configuration.Configuration.SectionGroups
  id: SectionGroups
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
  fullName: System.Configuration.Configuration.SectionGroups
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取定义此配置节组的集合。"
  remarks: "配置节可以组合到组，为方便起见，以及添加功能。 访问要检索的 SectionGroups 属性<xref:System.Configuration.ConfigurationSectionGroupCollection>对象，表示此节组集合<xref:System.Configuration.Configuration>对象。</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationSectionGroupCollection> 如果此<xref:System.Configuration.Configuration>对象表示的继承的视图，就将返回节组合并的列表。</xref:System.Configuration.Configuration>"
  example:
  - "The following code example demonstrates how to use the SectionGroups property.  \n  \n [!code-vb[System.Configuration.Configuration#10](~/add/codesnippet/visualbasic/p-system.configuration.c_36_1.vb)]\n [!code-cs[System.Configuration.Configuration#10](~/add/codesnippet/csharp/p-system.configuration.c_36_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroupCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationSectionGroupCollection&quot;> </xref>表示此节组集合集合<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.SectionGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Sections
  id: Sections
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Sections
  nameWithType: Configuration.Sections
  fullName: System.Configuration.Configuration.Sections
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取定义此章节的集合<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  remarks: "访问要检索的部分属性<xref:System.Configuration.ConfigurationSectionCollection>表示此节的集合对象<xref:System.Configuration.Configuration>对象。</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationSectionCollection> 如果此<xref:System.Configuration.Configuration>对象表示合并的配置，就将返回的节合并的列表。</xref:System.Configuration.Configuration>"
  example:
  - "The following example shows how to retrieve the Sections property value and to display the number of the sections in the collection.  \n  \n [!code-vb[System.Configuration.Configuration#11](~/add/codesnippet/visualbasic/p-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.Configuration#11](~/add/codesnippet/csharp/p-system.configuration.c_31_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionCollection Sections { get; }
    return:
      type: System.Configuration.ConfigurationSectionCollection
      description: "定义此章节的集合<xref href=&quot;System.Configuration.Configuration&quot;></xref>对象。"
  overload: System.Configuration.Configuration.Sections*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.TargetFramework
  id: TargetFramework
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
  fullName: System.Configuration.Configuration.TargetFramework
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "当版本更早版本比当前为目标时指定.NET Framework 的目标的版本。"
  remarks: "当配置系统序列化到 XML 的配置对象的层次结构时，它会检查此属性的值。 如果该属性不`null`，配置系统会针对每个配置节组和配置节执行版本检查。 配置系统还会执行版本检查标记为已更改版本间的单独的配置属性。 (有关详细信息，请参阅<xref:System.Configuration.ConfigurationPropertyOptions>。)</xref:System.Configuration.ConfigurationPropertyOptions>配置系统还会执行版本检查的配置节中的配置元素。       如果此属性的值是`null`，配置系统在序列化过程不执行任何版本检查。"
  syntax:
    content: public System.Runtime.Versioning.FrameworkName TargetFramework { get; set; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: ".NET Framework 的目标版本的名称。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示当前版本为目标。"
  overload: System.Configuration.Configuration.TargetFramework*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.TypeStringTransformer
  id: TypeStringTransformer
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
  fullName: System.Configuration.Configuration.TypeStringTransformer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定一个函数委托，用于转换类型配置文件中的字符串。"
  remarks: "此属性支持.NET Framework 配置系统的用户设置一个函数委托，用于转换类型字符串在配置文件中找到。 [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]在项目所面向的.NET framework 早期版本时，请使用此属性。 该函数可确保，类型字符串的格式正确的.NET framework 目标版本更新的配置文件时。"
  syntax:
    content: public Func<string,string> TypeStringTransformer { get; set; }
    return:
      type: System.Func{System.String,System.String}
      description: "一个委托，用于转换类型字符串。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Configuration.TypeStringTransformer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Configuration.AppSettings
  parent: System.Configuration.Configuration
  isExternal: false
  name: AppSettings
  nameWithType: Configuration.AppSettings
  fullName: System.Configuration.Configuration.AppSettings
- uid: System.Configuration.AppSettingsSection
  parent: System.Configuration
  isExternal: false
  name: AppSettingsSection
  nameWithType: AppSettingsSection
  fullName: System.Configuration.AppSettingsSection
- uid: System.Configuration.Configuration.AssemblyStringTransformer
  parent: System.Configuration.Configuration
  isExternal: false
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
  fullName: System.Configuration.Configuration.AssemblyStringTransformer
- uid: System.Func{System.String,System.String}
  parent: System
  isExternal: true
  name: Func<String,String>
  nameWithType: Func<String,String>
  fullName: System.Func<System.String,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Configuration.Configuration.ConnectionStrings
  parent: System.Configuration.Configuration
  isExternal: false
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
  fullName: System.Configuration.Configuration.ConnectionStrings
- uid: System.Configuration.ConnectionStringsSection
  parent: System.Configuration
  isExternal: false
  name: ConnectionStringsSection
  nameWithType: ConnectionStringsSection
  fullName: System.Configuration.ConnectionStringsSection
- uid: System.Configuration.Configuration.EvaluationContext
  parent: System.Configuration.Configuration
  isExternal: false
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
  fullName: System.Configuration.Configuration.EvaluationContext
- uid: System.Configuration.ContextInformation
  parent: System.Configuration
  isExternal: false
  name: ContextInformation
  nameWithType: ContextInformation
  fullName: System.Configuration.ContextInformation
- uid: System.Configuration.Configuration.FilePath
  parent: System.Configuration.Configuration
  isExternal: false
  name: FilePath
  nameWithType: Configuration.FilePath
  fullName: System.Configuration.Configuration.FilePath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Configuration.GetSection(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSection(String)
  nameWithType: Configuration.GetSection(String)
  fullName: System.Configuration.Configuration.GetSection(String)
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.Configuration.GetSectionGroup(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSectionGroup(String)
  nameWithType: Configuration.GetSectionGroup(String)
  fullName: System.Configuration.Configuration.GetSectionGroup(String)
- uid: System.Configuration.ConfigurationSectionGroup
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroup
  nameWithType: ConfigurationSectionGroup
  fullName: System.Configuration.ConfigurationSectionGroup
- uid: System.Configuration.Configuration.HasFile
  parent: System.Configuration.Configuration
  isExternal: false
  name: HasFile
  nameWithType: Configuration.HasFile
  fullName: System.Configuration.Configuration.HasFile
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Configuration.Locations
  parent: System.Configuration.Configuration
  isExternal: false
  name: Locations
  nameWithType: Configuration.Locations
  fullName: System.Configuration.Configuration.Locations
- uid: System.Configuration.ConfigurationLocationCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationLocationCollection
  nameWithType: ConfigurationLocationCollection
  fullName: System.Configuration.ConfigurationLocationCollection
- uid: System.Configuration.Configuration.NamespaceDeclared
  parent: System.Configuration.Configuration
  isExternal: false
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
  fullName: System.Configuration.Configuration.NamespaceDeclared
- uid: System.Configuration.Configuration.RootSectionGroup
  parent: System.Configuration.Configuration
  isExternal: false
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
  fullName: System.Configuration.Configuration.RootSectionGroup
- uid: System.Configuration.Configuration.Save
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save()
  nameWithType: Configuration.Save()
  fullName: System.Configuration.Configuration.Save()
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save(ConfigurationSaveMode)
  nameWithType: Configuration.Save(ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save(ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.Save(ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode,Boolean)
- uid: System.Configuration.Configuration.SaveAs(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String)
  nameWithType: Configuration.SaveAs(String)
  fullName: System.Configuration.Configuration.SaveAs(String)
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String,ConfigurationSaveMode)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode)
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String,ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
- uid: System.Configuration.Configuration.SectionGroups
  parent: System.Configuration.Configuration
  isExternal: false
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
  fullName: System.Configuration.Configuration.SectionGroups
- uid: System.Configuration.ConfigurationSectionGroupCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroupCollection
  nameWithType: ConfigurationSectionGroupCollection
  fullName: System.Configuration.ConfigurationSectionGroupCollection
- uid: System.Configuration.Configuration.Sections
  parent: System.Configuration.Configuration
  isExternal: false
  name: Sections
  nameWithType: Configuration.Sections
  fullName: System.Configuration.Configuration.Sections
- uid: System.Configuration.ConfigurationSectionCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionCollection
  nameWithType: ConfigurationSectionCollection
  fullName: System.Configuration.ConfigurationSectionCollection
- uid: System.Configuration.Configuration.TargetFramework
  parent: System.Configuration.Configuration
  isExternal: false
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
  fullName: System.Configuration.Configuration.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.Configuration.TypeStringTransformer
  parent: System.Configuration.Configuration
  isExternal: false
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
  fullName: System.Configuration.Configuration.TypeStringTransformer
- uid: System.Configuration.Configuration.AppSettings*
  parent: System.Configuration.Configuration
  isExternal: false
  name: AppSettings
  nameWithType: Configuration.AppSettings
- uid: System.Configuration.Configuration.AssemblyStringTransformer*
  parent: System.Configuration.Configuration
  isExternal: false
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
- uid: System.Configuration.Configuration.ConnectionStrings*
  parent: System.Configuration.Configuration
  isExternal: false
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
- uid: System.Configuration.Configuration.EvaluationContext*
  parent: System.Configuration.Configuration
  isExternal: false
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
- uid: System.Configuration.Configuration.FilePath*
  parent: System.Configuration.Configuration
  isExternal: false
  name: FilePath
  nameWithType: Configuration.FilePath
- uid: System.Configuration.Configuration.GetSection*
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSection
  nameWithType: Configuration.GetSection
- uid: System.Configuration.Configuration.GetSectionGroup*
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSectionGroup
  nameWithType: Configuration.GetSectionGroup
- uid: System.Configuration.Configuration.HasFile*
  parent: System.Configuration.Configuration
  isExternal: false
  name: HasFile
  nameWithType: Configuration.HasFile
- uid: System.Configuration.Configuration.Locations*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Locations
  nameWithType: Configuration.Locations
- uid: System.Configuration.Configuration.NamespaceDeclared*
  parent: System.Configuration.Configuration
  isExternal: false
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
- uid: System.Configuration.Configuration.RootSectionGroup*
  parent: System.Configuration.Configuration
  isExternal: false
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
- uid: System.Configuration.Configuration.Save*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save
  nameWithType: Configuration.Save
- uid: System.Configuration.Configuration.SaveAs*
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs
  nameWithType: Configuration.SaveAs
- uid: System.Configuration.Configuration.SectionGroups*
  parent: System.Configuration.Configuration
  isExternal: false
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
- uid: System.Configuration.Configuration.Sections*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Sections
  nameWithType: Configuration.Sections
- uid: System.Configuration.Configuration.TargetFramework*
  parent: System.Configuration.Configuration
  isExternal: false
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
- uid: System.Configuration.Configuration.TypeStringTransformer*
  parent: System.Configuration.Configuration
  isExternal: false
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
