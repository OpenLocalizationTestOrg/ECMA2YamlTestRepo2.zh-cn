### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.TripleDESCng
  id: TripleDESCng
  children:
  - System.Security.Cryptography.TripleDESCng.#ctor
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.TripleDESCng.CreateDecryptor
  - System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCng.CreateEncryptor
  - System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  - System.Security.Cryptography.TripleDESCng.GenerateIV
  - System.Security.Cryptography.TripleDESCng.GenerateKey
  - System.Security.Cryptography.TripleDESCng.Key
  - System.Security.Cryptography.TripleDESCng.KeySize
  langs:
  - csharp
  name: TripleDESCng
  nameWithType: TripleDESCng
  fullName: System.Security.Cryptography.TripleDESCng
  type: Class
  summary: "提供三重数据加密标准 (3DES) 算法的下一代加密技术 (CNG) 实现。"
  syntax:
    content: 'public sealed class TripleDESCng : System.Security.Cryptography.TripleDES'
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.TripleDES
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  - System.Security.Cryptography.TripleDES.Create
  - System.Security.Cryptography.TripleDES.Create(System.String)
  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng()
  nameWithType: TripleDESCng.TripleDESCng()
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>类具有临时键。"
  syntax:
    content: public TripleDESCng ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String)
  nameWithType: TripleDESCng.TripleDESCng(String)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>类具有指定的密钥名称，它表示的现有持久化 3DES 密钥。"
  remarks: "此构造函数使用默认<xref:System.Security.Cryptography.CngKeyOpenOptions>值<xref:System.Security.Cryptography.CngKeyOpenOptions>和<xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>作为默认密钥存储提供程序 (KSP) 来打开密钥。</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> </xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public TripleDESCng (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "键的名称。"
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "在此系统上不支持下一代加密技术 (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他错误。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String,CngProvider)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>类具有指定的密钥名称，它表示的现有持久存储 3DES 密钥，以及指定的密钥存储提供程序 (KSP)。"
  remarks: "默认<xref:System.Security.Cryptography.CngKeyOpenOptions>值<xref:System.Security.Cryptography.CngKeyOpenOptions>用于打开密钥。</xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "键的名称。"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "包含密钥的 KSP。"
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "在此系统上不支持下一代加密技术 (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他错误。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>类具有指定的密钥名称，它表示的现有持久化 3DES 密钥，指定的密钥存储提供程序 (KSP) 和密钥打开选项。"
  syntax:
    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: "键的名称。"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "包含密钥的 KSP。"
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "指定用于打开密钥，如其中 （计算机或用户存储） 从打开的注册表项，以及是否禁止显示用户界面提示的选项的枚举值的按位组合。"
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "在此系统上不支持下一代加密技术 (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他错误。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: TripleDESCng.CreateDecryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用当前的密钥和初始化向量创建一个对称 3DES 解密器对象 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "此方法来创建使用的加密的消息解密<xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>重载具有相同签名。</xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 对称解密器对象。"
  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用指定的键和初始化向量 (IV) 创建对称 3DES 解密器对象。"
  remarks: "This method decrypts an encrypted message created using the [CreateEncryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=False) overload with the same signature.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.TripleDESCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "要使用的 3DES 算法的密钥。 密钥大小必须是 192 位。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用的 3DES 算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 对称解密器对象。"
  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>不是此算法的有效大小。       -或-<code>rgbIV</code>大小不匹配此算法的块大小。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>是此算法的已知弱密钥，不能使用。       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: TripleDESCng.CreateEncryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "创建对称 3DES 加密器对象使用当前的密钥和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "此方法用于加密消息，然后使用<xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>重载具有相同的签名来解密此方法的结果。</xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "对称 3DES 加密器对象。"
  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用指定的键和初始化向量 (IV) 创建对称 3DES 加密器对象。"
  remarks: "此方法用于加密消息，然后使用<xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>重载具有相同的签名来解密此方法的结果。</xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>      1> [!NOTE]&1;> 如果已创建<xref:System.Security.Cryptography.TripleDESCng>对象使用的现有保留的密钥以及你想要使用的密钥加密消息时，你想要设置<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>属性，然后调用的无参数<xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>重载改为; 否则为使用此方法会创建按指定的临时密钥`rgbKey`参数。</xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor> </xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "要使用的 3DES 算法的密钥。 密钥大小必须是 192 位。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用的 3DES 算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "对称 3DES 加密器对象。"
  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>不是此算法的有效大小。       -或-<code>rgbIV</code>大小不匹配此算法的块大小。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>是此算法的已知弱密钥，不能使用。       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TripleDESCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "要添加。"
  overload: System.Security.Cryptography.TripleDESCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: TripleDESCng.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "生成的随机初始化向量 (IV) 用于 3DES 算法。"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: TripleDESCng.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "生成用于 3DES 算法的随机密钥。"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.Key
  id: Key
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: Key
  nameWithType: TripleDESCng.Key
  fullName: System.Security.Cryptography.TripleDESCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取或设置的密钥<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>算法。"
  remarks: "如果已创建<xref:System.Security.Cryptography.TripleDESCng>对象使用的现有保留的密钥，当读取将成为键属性，尝试将密钥导出的值时。</xref:System.Security.Cryptography.TripleDESCng> 在此情况下，如果键不是可导出，<xref:System.Security.Cryptography.CryptographicException>将引发。</xref:System.Security.Cryptography.CryptographicException>       除此之外，如果你设置键属性的值，将不再使用保存的密钥和将改用临时键。 如果你需要使用同样，持久化的密钥的新实例<xref:System.Security.Cryptography.TripleDESCng>类需要创建。</xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "密钥<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>算法。"
  overload: System.Security.Cryptography.TripleDESCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.KeySize
  id: KeySize
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: KeySize
  nameWithType: TripleDESCng.KeySize
  fullName: System.Security.Cryptography.TripleDESCng.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取或设置大小，以位为单位的所用的密钥<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>算法。"
  remarks: "如果已创建<xref:System.Security.Cryptography.TripleDESCng>对象使用的现有保留的密钥和设置 KeySize 属性的值、 保存的密钥将不再使用和将改用临时键。</xref:System.Security.Cryptography.TripleDESCng> 如果你需要使用同样，持久化的密钥的新实例<xref:System.Security.Cryptography.TripleDESCng>类需要创建。</xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: "大小，以位为单位的所用的密钥<xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;></xref>算法。"
  overload: System.Security.Cryptography.TripleDESCng.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.TripleDES
  isExternal: false
  name: System.Security.Cryptography.TripleDES
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.TripleDESCng.#ctor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng()
  nameWithType: TripleDESCng.TripleDESCng()
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String)
  nameWithType: TripleDESCng.TripleDESCng(String)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String,CngProvider)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor()
  nameWithType: TripleDESCng.CreateDecryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor()
  nameWithType: TripleDESCng.CreateEncryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TripleDESCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateIV()
  nameWithType: TripleDESCng.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateKey()
  nameWithType: TripleDESCng.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()
- uid: System.Security.Cryptography.TripleDESCng.Key
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Key
  nameWithType: TripleDESCng.Key
  fullName: System.Security.Cryptography.TripleDESCng.Key
- uid: System.Security.Cryptography.TripleDESCng.KeySize
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: KeySize
  nameWithType: TripleDESCng.KeySize
  fullName: System.Security.Cryptography.TripleDESCng.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.TripleDESCng.#ctor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng
  nameWithType: TripleDESCng.TripleDESCng
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor
  nameWithType: TripleDESCng.CreateDecryptor
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor
  nameWithType: TripleDESCng.CreateEncryptor
- uid: System.Security.Cryptography.TripleDESCng.Dispose*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Dispose
  nameWithType: TripleDESCng.Dispose
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateIV
  nameWithType: TripleDESCng.GenerateIV
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateKey
  nameWithType: TripleDESCng.GenerateKey
- uid: System.Security.Cryptography.TripleDESCng.Key*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Key
  nameWithType: TripleDESCng.Key
- uid: System.Security.Cryptography.TripleDESCng.KeySize*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: KeySize
  nameWithType: TripleDESCng.KeySize
