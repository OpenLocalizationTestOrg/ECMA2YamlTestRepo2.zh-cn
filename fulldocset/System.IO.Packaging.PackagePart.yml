### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackagePart
  id: PackagePart
  children:
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.PackagePart.CompressionOption
  - System.IO.Packaging.PackagePart.ContentType
  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  - System.IO.Packaging.PackagePart.GetContentTypeCore
  - System.IO.Packaging.PackagePart.GetRelationship(System.String)
  - System.IO.Packaging.PackagePart.GetRelationships
  - System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  - System.IO.Packaging.PackagePart.GetStream
  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.PackagePart.Package
  - System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  - System.IO.Packaging.PackagePart.Uri
  langs:
  - csharp
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
  type: Class
  summary: "提供基本类，部分存储在<xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。  此类为抽象类。"
  remarks: "PackagePart 包含三个基本元素: |访问 |说明 |  |------------|-----------------|  |<xref:System.IO.Packaging.PackagePart.Uri%2A>|[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的一部分。 |  |<xref:System.IO.Packaging.PackagePart.ContentType%2A>|[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]内容的流类型。 |  |<xref:System.IO.Packaging.PackagePart.GetStream%2A>|部件的内容数据流 |</xref:System.IO.Packaging.PackagePart.GetStream%2A> </xref:System.IO.Packaging.PackagePart.ContentType%2A> </xref:System.IO.Packaging.PackagePart.Uri%2A>"
  syntax:
    content: public abstract class PackagePart
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  id: '#ctor(System.IO.Packaging.Package,System.Uri)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: PackagePart(Package,Uri)
  nameWithType: PackagePart.PackagePart(Package,Uri)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "初始化的新实例<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>类指定的父<xref:System.IO.Packaging.PackagePart.Package*>和部分[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.IO.Packaging.PackagePart.Package*>"
  remarks: "`partUri`必须是有效的<xref:System.IO.Packaging.PackagePart>[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]根据带[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范和[开放式打包约定](http://go.microsoft.com/fwlink/?LinkID=71255)规范。</xref:System.IO.Packaging.PackagePart>       使用此构造函数时<xref:System.IO.Packaging.PackagePart.ContentType%2A>部件的立即未知，并且将设置更高版本时<xref:System.IO.Packaging.Package.CreatePart%2A>称为。</xref:System.IO.Packaging.Package.CreatePart%2A> </xref:System.IO.Packaging.PackagePart.ContentType%2A>       默认情况下，<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>部件的属性初始化为<xref:System.IO.Packaging.CompressionOption>.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>"
  syntax:
    content: protected PackagePart (System.IO.Packaging.Package package, Uri partUri);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>的一部分。"
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的一部分，相对于父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>根。"
  overload: System.IO.Packaging.PackagePart.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>or <code>partUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: PackagePart(Package,Uri,String)
  nameWithType: PackagePart.PackagePart(Package,Uri,String)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri,String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "初始化的新实例<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>类指定的父<xref:System.IO.Packaging.PackagePart.Package*>、 部分[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，和[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]内容类型。</xref:System.IO.Packaging.PackagePart.Package*>"
  remarks: "`partUri`必须是有效的<xref:System.IO.Packaging.PackagePart>[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]根据带[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范和[开放式打包约定](http://go.microsoft.com/fwlink/?LinkID=71255)规范。</xref:System.IO.Packaging.PackagePart>       默认情况下，<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>部件的属性初始化为<xref:System.IO.Packaging.CompressionOption>.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       `contentType`必须是[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]类型格式根据[RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616.html) *超文本传输协议 HTTP*，3.7 节了解。  下表显示的内容示例[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]中使用类型[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]文档。      |说明 |内容类型 |  |-----------------|------------------|  |字体 | 应用程序/vnd.ms opentype |  |ICC profile|application/vnd.ms-color.iccprofile|  |JPEG 图像 | 映像/jpeg |  |经过模糊处理的 font|application/vnd.ms-package.obfuscated-opentype|  |PNG 图像 | 映像/png |  |PrintTicket|application/vnd.ms-printing.printticket+xml|  |TIFF 图像 | 图像/tiff |  |Windows Media 照片图像 | 映像/vnd.ms 照片 |"
  syntax:
    content: protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>的一部分。"
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的一部分，相对于父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>根。"
    - id: contentType
      type: System.String
      description: "[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]部分数据流的内容类型。"
  overload: System.IO.Packaging.PackagePart.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>or <code>partUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: PackagePart(Package,Uri,String,CompressionOption)
  nameWithType: PackagePart.PackagePart(Package,Uri,String,CompressionOption)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri,String,CompressionOption)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "初始化的新实例<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>类指定的父<xref:System.IO.Packaging.PackagePart.Package*>、 部分[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]内容类型，和<xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref>。</xref:System.IO.Packaging.PackagePart.Package*>"
  remarks: "`partUri`必须是有效的<xref:System.IO.Packaging.PackagePart>[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]根据带[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范和[开放式打包约定](http://go.microsoft.com/fwlink/?LinkID=71255)规范。</xref:System.IO.Packaging.PackagePart>       `contentType`必须是[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]类型格式根据[RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616.html) *超文本传输协议 HTTP*，3.7 节了解。  下表显示的内容示例[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]中使用类型[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]文档。      |说明 |内容类型 |  |-----------------|------------------|  |字体 | 应用程序/vnd.ms opentype |  |ICC profile|application/vnd.ms-color.iccprofile|  |JPEG 图像 | 映像/jpeg |  |经过模糊处理的 font|application/vnd.ms-package.obfuscated-opentype|  |PNG 图像 | 映像/png |  |PrintTicket|application/vnd.ms-printing.printticket+xml|  |TIFF 图像 | 图像/tiff |  |Windows Media 照片图像 | 映像/vnd.ms 照片 |"
  syntax:
    content: protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>的一部分。"
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的一部分，相对于父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>根。"
    - id: contentType
      type: System.String
      description: "[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]部件的数据流的内容类型。"
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "部分数据流压缩选项。"
  overload: System.IO.Packaging.PackagePart.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>or <code>partUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> compressionOption </code>值无效。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.CompressionOption
  id: CompressionOption
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: CompressionOption
  nameWithType: PackagePart.CompressionOption
  fullName: System.IO.Packaging.PackagePart.CompressionOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "获取压缩选项的部分内容流。"
  remarks: "CompressionOption 是一个只读属性，可以访问仅当父<xref:System.IO.Packaging.Package>处于打开状态。</xref:System.IO.Packaging.Package>       CompressionOption 属性自动设置<xref:System.IO.Packaging.PackagePart.%23ctor%2A>构造函数。</xref:System.IO.Packaging.PackagePart.%23ctor%2A>  构造函数设置后，无法更改 CompressionOption。"
  syntax:
    content: public System.IO.Packaging.CompressionOption CompressionOption { get; }
    return:
      type: System.IO.Packaging.CompressionOption
      description: "部分内容流压缩选项。"
  overload: System.IO.Packaging.PackagePart.CompressionOption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.ContentType
  id: ContentType
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: ContentType
  nameWithType: PackagePart.ContentType
  fullName: System.IO.Packaging.PackagePart.ContentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "获取[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]类型的内容的流。"
  remarks: "ContentType 是一个只读属性，可以访问仅当父<xref:System.IO.Packaging.Package>处于打开状态。</xref:System.IO.Packaging.Package>       ContentType 属性自动设置<xref:System.IO.Packaging.PackagePart.%23ctor%2A>构造函数。</xref:System.IO.Packaging.PackagePart.%23ctor%2A>  构造函数设置后，无法更改 ContentType。       ContentType 属性是[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]类型格式根据[RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616.html) *超文本传输协议 HTTP*，3.7 节了解。  下表显示的内容示例[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]中使用类型[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]文档。      |说明 |内容类型 |  |-----------------|------------------|  |字体 | 应用程序/vnd.ms opentype |  |ICC profile|application/vnd.ms-color.iccprofile|  |JPEG 图像 | 映像/jpeg |  |经过模糊处理的 font|application/vnd.ms-package.obfuscated-opentype|  |PNG 图像 | 映像/png |  |PrintTicket|application/vnd.ms-printing.printticket+xml|  |TIFF 图像 | 图像/tiff |  |Windows Media 照片图像 | 映像/vnd.ms 照片 |"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]的一部分的内容数据流的类型。"
  overload: System.IO.Packaging.PackagePart.ContentType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<> *1> 已调用)。      -派生的类返回的字符串<> *1> 方法为空。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: PackagePart.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "一部分级别之间创建关系这<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>向指定目标<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>或外部的资源。"
  remarks: "部分级关系定义此部分的目标一部分或资源之间的关联。  部分级关系可以是两种形式之一。      -之间源<xref:System.IO.Packaging.PackagePart>到目标<xref:System.IO.Packaging.PackagePart>内<xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart>      -之间源<xref:System.IO.Packaging.PackagePart>到包外部的目标资源。</xref:System.IO.Packaging.PackagePart>       在部分关系源部分都视为&quot;所有者&quot;的关系。  当删除源部分时，还删除拥有的一部分的所有关系。  创建或删除的关系的过程不会以物理方式更改目标部分或以任何方式的资源。       CreateRelationship 方法不会以物理方式更改的源部分中，或目标部分或以任何方式的资源。       关系的目标不能为另一个关系。       如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode>，`targetUri`必须根据格式是相对 URI [RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。</xref:System.IO.Packaging.TargetMode>  内部的相对 URI 可以是可以是绝对路径开头正斜杠 （&quot;/&quot;） 字符如&quot;/ page1.xaml&quot;或&quot;/ images/picture4.jpg&quot;，或相对路径，如&quot;.../ imagespicture1.jpg&quot;可解析根据包根目录 （&quot;/&quot;） 的基 uri。       如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode>，`targetUri`可以是绝对或相对的 URI 格式根据[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot;是一个绝对 URI，它引用的外部的目标资源&quot;page2.xml&quot;的一个示例。  &quot;images/picture1.jpg&quot;是一个相对的 URI，也引用外部的目标资源&quot;1.jpg&quot;但哪些解析对包本身的 URI 的示例。       `relationshipType`必须是[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，形成根据[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。  不同的包类型可以定义不同的部分级关系类型。  下表显示了一部分级`relationshipType`Uri 定义的文档，符合*打开 XML 纸张规范 (XPS)*。      |XPS 文档部分级关系 |关系类型 URI |  |-------------------------------------------|---------------------------|  |数字签名定义 |[http://schemas.microsoft.com/xps/2005/06/signature-definitions](http://schemas.microsoft.com/xps/2005/06/signature-definitions)|  | DiscardControl | http://schemas.microsoft.com/xps/2005/06/discard-control |  | DocumentStructure | http://schemas.microsoft.com/xps/2005/06/documentstructure |  | PrintTicket | http://schemas.microsoft.com/xps/2005/06/printticket |  |所需资源 | http://schemas.microsoft.com/xps/2005/06/required-resource |  |限制字体 | http://schemas.microsoft.com/xps/2005/06/restricted-font |  | StartPart | http://schemas.microsoft.com/xps/2005/06/fixedrepresentation |  | StoryFragments | http://schemas.microsoft.com/xps/2005/06/storyfragments |      有关包关系的详细信息请参阅部分 1.3*开放式打包约定 (OPC)*规范下载[http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)。       有关详细信息，有关 XPS 文档，请参阅*打开 XML 纸张规范 (XPS)*下载[http://go.microsoft.com/fwlink/?LinkID=67000](http://go.microsoft.com/fwlink/?LinkID=67000)。"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目标部分。"
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "枚举值之一。 例如， <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref>如果目标一部分位于<xref href=&quot;System.IO.Packaging.Package&quot;> </xref>; 或<xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref>如果目标是外部的资源<xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    - id: relationshipType
      type: System.String
      description: "关系的角色。"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "这之间的部分级关系<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>到目标<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>或外部的资源。"
  overload: System.IO.Packaging.PackagePart.CreateRelationship*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> targetMode </code>参数不是有效<xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref>枚举值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "由标识的部分<code> targetUri </code>关系 （关系的目标不能是另一个关系）。       -or-       <code>targetMode</code> is specified as <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> but <code>targetUri</code> is an absolute external [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只读的 （不能添加新的关系）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: PackagePart.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "一部分级别之间创建关系这<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>向指定目标<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>或外部的资源。"
  remarks: "部分级关系定义此部分的目标一部分或资源之间的关联。  部分级关系可以是两种形式之一。      -之间源<xref:System.IO.Packaging.PackagePart>到目标<xref:System.IO.Packaging.PackagePart>内<xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart>      -之间源<xref:System.IO.Packaging.PackagePart>到包外部的目标资源。</xref:System.IO.Packaging.PackagePart>       在部分关系源部分都视为&quot;所有者&quot;的关系。  当删除源部分时，还删除拥有的一部分的所有关系。  创建或删除的关系的过程不会以物理方式更改目标部分或以任何方式的资源。       `id`必须是有效的 XML 标识符。  `id`类型是 xsd:ID 并且必须遵循中规定的命名约定*XML 架构第 2 部分︰ 数据类型*规范 (请参阅[http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))。       CreateRelationship 方法不会以物理方式更改的源部分中，或目标部分或以任何方式的资源。       关系的目标不能为另一个关系。       如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode>，`targetUri`必须根据格式是相对 URI [RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。</xref:System.IO.Packaging.TargetMode>  内部的相对 URI 可以是可以是绝对路径开头正斜杠 （&quot;/&quot;） 字符如&quot;/ page1.xaml&quot;或&quot;/ images/picture4.jpg&quot;，或相对路径，如&quot;.../ imagespicture1.jpg&quot;可解析根据包根目录 （&quot;/&quot;） 的基 uri。       如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode>，`targetUri`可以是绝对或相对的 URI 格式根据[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot;是一个绝对 URI，它引用的外部的目标资源&quot;page2.xml&quot;的一个示例。  &quot;images/picture1.jpg&quot;是一个相对的 URI，也引用外部的目标资源&quot;1.jpg&quot;但哪些解析对包本身的 URI 的示例。       `relationshipType`必须是[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，形成根据[RFC 3986](http://tools.ietf.org/html/rfc3986) *统一资源标识符 (URI) 泛型语法*规范。  不同的包类型可以定义不同的部分级关系类型。  下表显示了一部分级`relationshipType`Uri 定义的文档，符合*打开 XML 纸张规范 (XPS)*。      |XPS 文档部分级关系 |关系类型 URI |  |-------------------------------------------|---------------------------|  |数字签名定义 | http://schemas.microsoft.com/xps/2005/06/signature-definitions |  | DiscardControl | http://schemas.microsoft.com/xps/2005/06/discard-control |  | DocumentStructure | http://schemas.microsoft.com/xps/2005/06/documentstructure |  | PrintTicket | http://schemas.microsoft.com/xps/2005/06/printticket |  |所需资源 | http://schemas.microsoft.com/xps/2005/06/required-resource |  |限制字体 | http://schemas.microsoft.com/xps/2005/06/restricted-font |  | StartPart | http://schemas.microsoft.com/xps/2005/06/fixedrepresentation |  | StoryFragments | http://schemas.microsoft.com/xps/2005/06/storyfragments |      有关包关系的详细信息请参阅部分 1.3*开放式打包约定 (OPC)*规范下载[http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)。       有关详细信息，有关 XPS 文档，请参阅*打开 XML 纸张规范 (XPS)*下载[http://go.microsoft.com/fwlink/?LinkID=67000](http://go.microsoft.com/fwlink/?LinkID=67000)。"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目标部分。"
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "枚举值之一。 例如， <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref>如果目标一部分位于<xref href=&quot;System.IO.Packaging.Package&quot;> </xref>; 或<xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref>如果目标是外部的资源<xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    - id: relationshipType
      type: System.String
      description: "关系的角色。"
    - id: id
      type: System.String
      description: "关系的唯一 ID。"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "这之间的部分级关系<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>到目标<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>或外部的资源。"
  overload: System.IO.Packaging.PackagePart.CreateRelationship*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> targetMode </code>参数不是有效<xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref>枚举值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "由标识的部分<code> targetUri </code>关系 （关系的目标不能是另一个关系）。       -or-       <code>targetMode</code> is specified as <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> but <code>targetUri</code> is an absolute external [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只读的 （不能添加新的关系）。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>不是有效的 XML 标识符。       -具有指定的部件<code>id</code>已存在。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: PackagePart.DeleteRelationship(String)
  fullName: System.IO.Packaging.PackagePart.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "删除指定的一部分级别<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref>。"
  remarks: "`id`必须是有效的 XML 标识符。  `id`类型是 xsd:ID 并且必须遵循中规定的命名约定*XML 架构第 2 部分︰ 数据类型*规范 (请参阅[http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))。       如果指定`id`不符<xref:System.IO.Packaging.PackageRelationship.Id%2A>没有关系删除任何所拥有的此部分的关系，并且不会引发异常。</xref:System.IO.Packaging.PackageRelationship.Id%2A>       不删除指定的关系，DeleteRelationship 方法不会以物理方式更改此部分或目标部分。"
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>要删除的关系。</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.PackagePart.DeleteRelationship*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只读的 （关系不能被删除）。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>不是有效的 XML 标识符。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetContentTypeCore
  id: GetContentTypeCore
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetContentTypeCore()
  nameWithType: PackagePart.GetContentTypeCore()
  fullName: System.IO.Packaging.PackagePart.GetContentTypeCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "当在派生类中重写，则返回[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]的部分内容类型。"
  remarks: "GetContentTypeCore 为虚方法的<xref:System.IO.Packaging.PackagePart>抽象基的类。</xref:System.IO.Packaging.PackagePart> 仅在其中的内容类型的值不能在提供的构造，时间的派生类型中实现此方法，或如果计算内容类型值是不常用的或成本高昂的操作。 返回值必须为有效[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]内容类型。       派生的类可以调用 GetContentTypeCore 初始化<xref:System.IO.Packaging.PackagePart.ContentType%2A>的派生类的默认值的属性。</xref:System.IO.Packaging.PackagePart.ContentType%2A>  后<xref:System.IO.Packaging.PackagePart.ContentType%2A>属性已设置它不能更改。</xref:System.IO.Packaging.PackagePart.ContentType%2A>"
  syntax:
    content: protected virtual string GetContentTypeCore ();
    parameters: []
    return:
      type: System.String
      description: "[!INCLUDE[TLA2#tla_mime](~/add/includes/tla2sharptla-mime-md.md)]的部分内容类型。"
  overload: System.IO.Packaging.PackagePart.GetContentTypeCore*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "派生的类不提供 GetContentTypeCore 方法所需的重写实现。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: PackagePart.GetRelationship(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回具有指定<xref:System.IO.Packaging.PackageRelationship.Id*>.</xref:System.IO.Packaging.PackageRelationship.Id*>的关系"
  remarks: "`id`必须是有效的 XML 标识符。  `id`类型是 xsd:ID 并且必须遵循中规定的命名约定*XML 架构第 2 部分︰ 数据类型*规范 (请参阅[http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))。       你可以使用<xref:System.IO.Packaging.PackagePart.RelationshipExists%2A>方法确定是否与指定<xref:System.IO.Packaging.PackageRelationship.Id%2A>归此部件</xref:System.IO.Packaging.PackageRelationship.Id%2A>之间的关系</xref:System.IO.Packaging.PackagePart.RelationshipExists%2A>"
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>要返回的关系。</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "匹配所指定的关系<code> id </code>。"
  overload: System.IO.Packaging.PackagePart.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>不是有效的 XML 标识符。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>为一个空字符串。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>       -与指定的关系<code> id </code>包中不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只写的 （无法读取关系信息）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: PackagePart.GetRelationships()
  fullName: System.IO.Packaging.PackagePart.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回所拥有的此部分的所有关系的集合。"
  remarks: "返回的集合不`null`; 但是，如果一部分未定义任何关系的集合可能包含零个元素。"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "所拥有的一部分的所有关系的集合。"
  overload: System.IO.Packaging.PackagePart.GetRelationships*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只写的 （无法读取关系信息）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: PackagePart.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回与匹配指定的<xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>关系的集合"
  remarks: "返回的集合不`null`; 但是，如果没有关系匹配指定的集合可能包含零个元素`relationshipType`部分定义。       任何前导空格或尾随空格中的`relationshipType`自动修整字符串。"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.RelationshipType*>查找并返回集合中的关系。</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "具有指定关系的集合<code> relationshipType </code>。"
  overload: System.IO.Packaging.PackagePart.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>为一个空字符串。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只写的 （无法读取关系信息）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetStream
  id: GetStream
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetStream()
  nameWithType: PackagePart.GetStream()
  fullName: System.IO.Packaging.PackagePart.GetStream()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回一部分内容数据的流。"
  remarks: "此方法将内容流打开与<xref:System.IO.FileMode>和<xref:System.IO.FileMode><xref:System.IO.FileAccess>都与父<xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>相同的权限</xref:System.IO.FileAccess></xref:System.IO.FileMode></xref:System.IO.FileMode>       重载<xref:System.IO.Packaging.PackagePart.GetStream%2A>方法，可设置特定<xref:System.IO.FileMode>.</xref:System.IO.FileMode> </xref:System.IO.Packaging.PackagePart.GetStream%2A>"
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "内容数据流，部件。"
  overload: System.IO.Packaging.PackagePart.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "返回的流对象<xref:System.IO.Packaging.PackagePart.GetStreamCore*>派生子类的方法是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.IO.Packaging.PackagePart.GetStreamCore*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  id: GetStream(System.IO.FileMode)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetStream(FileMode)
  nameWithType: PackagePart.GetStream(FileMode)
  fullName: System.IO.Packaging.PackagePart.GetStream(FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回在指定的 I/O 中的内容流打开<xref href=&quot;System.IO.FileMode&quot;> </xref>。"
  remarks: "<xref:System.IO.FileAccess>返回的内容流的权限是与父<xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>的权限相同</xref:System.IO.FileAccess>"
  syntax:
    content: public System.IO.Stream GetStream (System.IO.FileMode mode);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "要在其中打开内容流 I/O 模式。"
    return:
      type: System.IO.Stream
      description: "部件的内容流。"
  overload: System.IO.Packaging.PackagePart.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> mode </code>参数不是有效<xref href=&quot;System.IO.FileMode&quot;></xref>枚举值。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code> mode </code>参数不是与包和部分流兼容。       -返回的流对象<xref:System.IO.Packaging.PackagePart.GetStreamCore*>派生子类的方法是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.IO.Packaging.PackagePart.GetStreamCore*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  id: GetStream(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetStream(FileMode,FileAccess)
  nameWithType: PackagePart.GetStream(FileMode,FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStream(FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回与指定打开的部分内容流<xref href=&quot;System.IO.FileMode&quot;></xref>和<xref href=&quot;System.IO.FileAccess&quot;> </xref>。"
  syntax:
    content: public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "要在其中打开内容流 I/O 模式。"
    - id: access
      type: System.IO.FileAccess
      description: "要在打开内容的流中使用的访问权限。"
    return:
      type: System.IO.Stream
      description: "该部件的的内容流。"
  overload: System.IO.Packaging.PackagePart.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> mode </code>参数不是有效<xref href=&quot;System.IO.FileMode&quot;></xref>枚举值。       -或- <code> access </code>参数不是有效<xref href=&quot;System.IO.FileAccess&quot;></xref>枚举值。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>或<code>access</code>包和部分流与不兼容。       -或-<code>access</code>参数指定为<xref href=&quot;System.IO.FileAccess&quot;></xref>但<code>mode</code>参数需要写访问权限。  (<xref href=&quot;System.IO.FileMode&quot;></xref> values of <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, and <xref href=&quot;System.IO.FileMode&quot;></xref> require <xref href=&quot;System.IO.FileAccess&quot;></xref> or <xref href=&quot;System.IO.FileAccess&quot;></xref> access.)      -返回的流对象<xref:System.IO.Packaging.PackagePart.GetStreamCore*>派生子类的方法是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  id: GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: GetStreamCore(FileMode,FileAccess)
  nameWithType: PackagePart.GetStreamCore(FileMode,FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStreamCore(FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "当在派生类中重写，返回与指定打开的部分内容流<xref href=&quot;System.IO.FileMode&quot;></xref>和<xref href=&quot;System.IO.FileAccess&quot;> </xref>。"
  remarks: "应用程序不应调用 GetStreamCore 直接，但应改为调用<xref:System.IO.Packaging.PackagePart.GetStream%2A>.</xref:System.IO.Packaging.PackagePart.GetStream%2A>"
  syntax:
    content: protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "要在其中打开内容流 I/O 模式。"
    - id: access
      type: System.IO.FileAccess
      description: "要在打开内容的流中使用的访问权限。"
    return:
      type: System.IO.Stream
      description: "部件的内容数据流。"
  overload: System.IO.Packaging.PackagePart.GetStreamCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.Package
  id: Package
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: Package
  nameWithType: PackagePart.Package
  fullName: System.IO.Packaging.PackagePart.Package
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "获取父<xref href=&quot;System.IO.Packaging.Package&quot;></xref>的一部分。"
  remarks: "包是一个只读属性，可以访问仅当父<xref:System.IO.Packaging.Package>处于打开状态。</xref:System.IO.Packaging.Package>       由自动设置包属性<xref:System.IO.Packaging.PackagePart.%23ctor%2A>构造函数。</xref:System.IO.Packaging.PackagePart.%23ctor%2A>  构造函数设置后，无法更改父包部件。"
  syntax:
    content: public System.IO.Packaging.Package Package { get; }
    return:
      type: System.IO.Packaging.Package
      description: "父包的一部分。"
  overload: System.IO.Packaging.PackagePart.Package*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或-包未打开 (<>*1> 或<> *1> 已调用)。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: PackagePart.RelationshipExists(String)
  fullName: System.IO.Packaging.PackagePart.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回一个值，该值指示此部分是否拥有以指定<xref:System.IO.Packaging.PackageRelationship.Id*>.</xref:System.IO.Packaging.PackageRelationship.Id*>关系"
  remarks: '`id`必须是有效的 XML 标识符。  `id`类型是 xsd:ID 并且必须遵循中规定的命名约定*XML 架构第 2 部分︰ 数据类型*规范 (请参阅[http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))。'
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>要检查为的关系</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此部分拥有与指定的关系<code> id </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Packaging.PackagePart.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>不是有效的 XML 标识符。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包是只写的 （无法读取关系信息）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackagePart.Uri
  id: Uri
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  name: Uri
  nameWithType: PackagePart.Uri
  fullName: System.IO.Packaging.PackagePart.Uri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "获取[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的一部分。"
  remarks: "Uri 是一个只读属性，可以访问仅当父<xref:System.IO.Packaging.Package>处于打开状态。</xref:System.IO.Packaging.Package>       Uri 属性自动设置<xref:System.IO.Packaging.PackagePart.%23ctor%2A>构造函数。</xref:System.IO.Packaging.PackagePart.%23ctor%2A>  构造函数设置后，无法更改的一部分的 Uri。"
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的相对于包根的部分。"
  overload: System.IO.Packaging.PackagePart.Uri*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "一部分已被删除。       -或- <> </> *1> 未处于打开状态 (<>*1> 或<xref:System.IO.Packaging.Package.Close*>已调用)。</xref:System.IO.Packaging.Package.Close*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: PackagePart(Package,Uri)
  nameWithType: PackagePart.PackagePart(Package,Uri)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: PackagePart(Package,Uri,String)
  nameWithType: PackagePart.PackagePart(Package,Uri,String)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: PackagePart(Package,Uri,String,CompressionOption)
  nameWithType: PackagePart.PackagePart(Package,Uri,String,CompressionOption)
  fullName: System.IO.Packaging.PackagePart.PackagePart(Package,Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.PackagePart.CompressionOption
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: CompressionOption
  nameWithType: PackagePart.CompressionOption
  fullName: System.IO.Packaging.PackagePart.CompressionOption
- uid: System.IO.Packaging.PackagePart.ContentType
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: ContentType
  nameWithType: PackagePart.ContentType
  fullName: System.IO.Packaging.PackagePart.ContentType
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: PackagePart.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: PackagePart.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: PackagePart.DeleteRelationship(String)
  fullName: System.IO.Packaging.PackagePart.DeleteRelationship(String)
- uid: System.IO.Packaging.PackagePart.GetContentTypeCore
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetContentTypeCore()
  nameWithType: PackagePart.GetContentTypeCore()
  fullName: System.IO.Packaging.PackagePart.GetContentTypeCore()
- uid: System.IO.Packaging.PackagePart.GetRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationship(String)
  nameWithType: PackagePart.GetRelationship(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationship(String)
- uid: System.IO.Packaging.PackagePart.GetRelationships
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationships()
  nameWithType: PackagePart.GetRelationships()
  fullName: System.IO.Packaging.PackagePart.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: PackagePart.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationshipsByType(String)
- uid: System.IO.Packaging.PackagePart.GetStream
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStream()
  nameWithType: PackagePart.GetStream()
  fullName: System.IO.Packaging.PackagePart.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStream(FileMode)
  nameWithType: PackagePart.GetStream(FileMode)
  fullName: System.IO.Packaging.PackagePart.GetStream(FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStream(FileMode,FileAccess)
  nameWithType: PackagePart.GetStream(FileMode,FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStream(FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStreamCore(FileMode,FileAccess)
  nameWithType: PackagePart.GetStreamCore(FileMode,FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStreamCore(FileMode,FileAccess)
- uid: System.IO.Packaging.PackagePart.Package
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: Package
  nameWithType: PackagePart.Package
  fullName: System.IO.Packaging.PackagePart.Package
- uid: System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: PackagePart.RelationshipExists(String)
  fullName: System.IO.Packaging.PackagePart.RelationshipExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackagePart.Uri
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: Uri
  nameWithType: PackagePart.Uri
  fullName: System.IO.Packaging.PackagePart.Uri
- uid: System.IO.Packaging.PackagePart.#ctor*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart.PackagePart
- uid: System.IO.Packaging.PackagePart.CompressionOption*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: CompressionOption
  nameWithType: PackagePart.CompressionOption
- uid: System.IO.Packaging.PackagePart.ContentType*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: ContentType
  nameWithType: PackagePart.ContentType
- uid: System.IO.Packaging.PackagePart.CreateRelationship*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: CreateRelationship
  nameWithType: PackagePart.CreateRelationship
- uid: System.IO.Packaging.PackagePart.DeleteRelationship*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: DeleteRelationship
  nameWithType: PackagePart.DeleteRelationship
- uid: System.IO.Packaging.PackagePart.GetContentTypeCore*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetContentTypeCore
  nameWithType: PackagePart.GetContentTypeCore
- uid: System.IO.Packaging.PackagePart.GetRelationship*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationship
  nameWithType: PackagePart.GetRelationship
- uid: System.IO.Packaging.PackagePart.GetRelationships*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationships
  nameWithType: PackagePart.GetRelationships
- uid: System.IO.Packaging.PackagePart.GetRelationshipsByType*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: PackagePart.GetRelationshipsByType
- uid: System.IO.Packaging.PackagePart.GetStream*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStream
  nameWithType: PackagePart.GetStream
- uid: System.IO.Packaging.PackagePart.GetStreamCore*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: GetStreamCore
  nameWithType: PackagePart.GetStreamCore
- uid: System.IO.Packaging.PackagePart.Package*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: Package
  nameWithType: PackagePart.Package
- uid: System.IO.Packaging.PackagePart.RelationshipExists*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: RelationshipExists
  nameWithType: PackagePart.RelationshipExists
- uid: System.IO.Packaging.PackagePart.Uri*
  parent: System.IO.Packaging.PackagePart
  isExternal: false
  name: Uri
  nameWithType: PackagePart.Uri
