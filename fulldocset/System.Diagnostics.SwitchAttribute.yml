### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SwitchAttribute
  id: SwitchAttribute
  children:
  - System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)
  - System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)
  - System.Diagnostics.SwitchAttribute.SwitchDescription
  - System.Diagnostics.SwitchAttribute.SwitchName
  - System.Diagnostics.SwitchAttribute.SwitchType
  langs:
  - csharp
  name: SwitchAttribute
  nameWithType: SwitchAttribute
  fullName: System.Diagnostics.SwitchAttribute
  type: Class
  summary: "标识程序集、 类或成员中使用的开关。"
  remarks: "可以在程序集、 类、 构造函数、 方法、 属性或事件使用 SwitchAttribute 属性。       检查程序集的配置设置的工具，可以使用 SwitchAttribute 属性。"
  example:
  - "The following example shows how to use the SwitchAttribute attribute to identify the switch used in an assembly. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event)]

      public sealed class SwitchAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Diagnostics.SwitchAttribute
  langs:
  - csharp
  name: SwitchAttribute(String,Type)
  nameWithType: SwitchAttribute.SwitchAttribute(String,Type)
  fullName: System.Diagnostics.SwitchAttribute.SwitchAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.SwitchAttribute&quot;></xref>类，指定的名称和类型的交换机。"
  remarks: "`switchName`参数应匹配<xref:System.Diagnostics.Switch.DisplayName%2A>交换机的属性。</xref:System.Diagnostics.Switch.DisplayName%2A>"
  example:
  - "The following code example shows the use of the SwitchAttribute constructor to create a switch attribute. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#2](~/add/codesnippet/csharp/m-system.diagnostics.swi_2_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#2](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_2_1.vb)]"
  syntax:
    content: public SwitchAttribute (string switchName, Type switchType);
    parameters:
    - id: switchName
      type: System.String
      description: "交换机的显示名称。"
    - id: switchType
      type: System.Type
      description: "交换机的类型。"
  overload: System.Diagnostics.SwitchAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)
  id: GetAll(System.Reflection.Assembly)
  parent: System.Diagnostics.SwitchAttribute
  langs:
  - csharp
  name: GetAll(Assembly)
  nameWithType: SwitchAttribute.GetAll(Assembly)
  fullName: System.Diagnostics.SwitchAttribute.GetAll(Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "返回所有开关指定程序集的属性。"
  remarks: ''
  example:
  - "The following code example shows the use of the GetAll method to identify the switches used in an assembly. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#12](~/add/codesnippet/csharp/m-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#12](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public static System.Diagnostics.SwitchAttribute[] GetAll (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "要检查开关特性的程序集。"
    return:
      type: System.Diagnostics.SwitchAttribute[]
      description: "程序集包含所有开关特性的数组。"
  overload: System.Diagnostics.SwitchAttribute.GetAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.SwitchAttribute.SwitchDescription
  id: SwitchDescription
  parent: System.Diagnostics.SwitchAttribute
  langs:
  - csharp
  name: SwitchDescription
  nameWithType: SwitchAttribute.SwitchDescription
  fullName: System.Diagnostics.SwitchAttribute.SwitchDescription
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置该交换机的说明。"
  remarks: "SwitchDescription 属性通常指示开关的功能。"
  syntax:
    content: public string SwitchDescription { get; set; }
    return:
      type: System.String
      description: "交换机的说明。"
  overload: System.Diagnostics.SwitchAttribute.SwitchDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SwitchAttribute.SwitchName
  id: SwitchName
  parent: System.Diagnostics.SwitchAttribute
  langs:
  - csharp
  name: SwitchName
  nameWithType: SwitchAttribute.SwitchName
  fullName: System.Diagnostics.SwitchAttribute.SwitchName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置该交换机的显示名称。"
  remarks: "SwitchName 属性应与匹配<xref:System.Diagnostics.Switch.DisplayName%2A>交换机的属性。</xref:System.Diagnostics.Switch.DisplayName%2A>"
  example:
  - "The following code example displays the value the SwitchName property for all switches used in an assembly. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#12](~/add/codesnippet/csharp/p-system.diagnostics.swi_3_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#12](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_3_1.vb)]"
  syntax:
    content: public string SwitchName { get; set; }
    return:
      type: System.String
      description: "交换机的显示名称。"
  overload: System.Diagnostics.SwitchAttribute.SwitchName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "开关名称设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "开关名称设置为空字符串。"
  platform:
  - net462
- uid: System.Diagnostics.SwitchAttribute.SwitchType
  id: SwitchType
  parent: System.Diagnostics.SwitchAttribute
  langs:
  - csharp
  name: SwitchType
  nameWithType: SwitchAttribute.SwitchType
  fullName: System.Diagnostics.SwitchAttribute.SwitchType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置类型的交换机。"
  remarks: ''
  example:
  - "The following code example displays the value of the SwitchType property for all switches used in an assembly. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#12](~/add/codesnippet/csharp/p-system.diagnostics.swi_4_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#12](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_4_1.vb)]"
  syntax:
    content: public Type SwitchType { get; set; }
    return:
      type: System.Type
      description: "交换机的类型。"
  overload: System.Diagnostics.SwitchAttribute.SwitchType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "SwitchType 设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchAttribute(String,Type)
  nameWithType: SwitchAttribute.SwitchAttribute(String,Type)
  fullName: System.Diagnostics.SwitchAttribute.SwitchAttribute(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: GetAll(Assembly)
  nameWithType: SwitchAttribute.GetAll(Assembly)
  fullName: System.Diagnostics.SwitchAttribute.GetAll(Assembly)
- uid: System.Diagnostics.SwitchAttribute[]
  parent: System.Diagnostics
  isExternal: false
  name: SwitchAttribute
  nameWithType: SwitchAttribute
  fullName: System.Diagnostics.SwitchAttribute[]
  spec.csharp:
  - uid: System.Diagnostics.SwitchAttribute
    name: SwitchAttribute
    nameWithType: SwitchAttribute
    fullName: SwitchAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Diagnostics.SwitchAttribute.SwitchDescription
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchDescription
  nameWithType: SwitchAttribute.SwitchDescription
  fullName: System.Diagnostics.SwitchAttribute.SwitchDescription
- uid: System.Diagnostics.SwitchAttribute.SwitchName
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchName
  nameWithType: SwitchAttribute.SwitchName
  fullName: System.Diagnostics.SwitchAttribute.SwitchName
- uid: System.Diagnostics.SwitchAttribute.SwitchType
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchType
  nameWithType: SwitchAttribute.SwitchType
  fullName: System.Diagnostics.SwitchAttribute.SwitchType
- uid: System.Diagnostics.SwitchAttribute.#ctor*
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchAttribute
  nameWithType: SwitchAttribute.SwitchAttribute
- uid: System.Diagnostics.SwitchAttribute.GetAll*
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: GetAll
  nameWithType: SwitchAttribute.GetAll
- uid: System.Diagnostics.SwitchAttribute.SwitchDescription*
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchDescription
  nameWithType: SwitchAttribute.SwitchDescription
- uid: System.Diagnostics.SwitchAttribute.SwitchName*
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchName
  nameWithType: SwitchAttribute.SwitchName
- uid: System.Diagnostics.SwitchAttribute.SwitchType*
  parent: System.Diagnostics.SwitchAttribute
  isExternal: false
  name: SwitchType
  nameWithType: SwitchAttribute.SwitchType
