### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "提供操作系统特定功能查询。"
  remarks: "使用`static`中提供此类的实例<xref:System.Windows.Forms.OSFeature.Feature%2A>查询操作系统功能的属性。</xref:System.Windows.Forms.OSFeature.Feature%2A> 无法创建此类的实例。       若要确定功能的版本，请调用<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法。</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 若要确定是否存在一项功能或特定版本，请调用<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>方法并指定功能来查找此类中提供的功能标识符</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.OSFeature&quot;></xref>类。"
  remarks: "此类不能实例化。 若要查询操作系统功能，使用`static`的<xref:System.Windows.Forms.OSFeature>类中提供</xref:System.Windows.Forms.OSFeature>的实例"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>实例<xref href=&quot;System.Windows.Forms.OSFeature&quot;></xref>类要用于查询功能。 此属性是只读的。"
  remarks: "使用此`static`查询操作系统功能的属性。 无法创建此类的实例。       若要确定功能的版本，请调用<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法。</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 若要确定是否存在一项功能或特定版本，请调用<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>方法并指定功能来查找此类中提供的功能标识符</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "实例<xref href=&quot;System.Windows.Forms.OSFeature&quot;></xref>类。"
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索指定的功能在系统上当前可用的版本。"
  remarks: "使用<xref:System.Windows.Forms.OSFeature.Feature%2A>属性，`static`实例<xref:System.Windows.Forms.OSFeature>中此类的查询的版本数的一项功能提供。</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "请求其版本，或者该功能<xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;></xref>或<xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>。"
    return:
      type: System.Version
      description: "A<xref:System.Version>表示指定的操作系统功能在系统中; 上当前可用的版本或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到功能。</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索一个值，该值指示操作系统是否支持指定的功能或度量值。"
  remarks: "通常，你使用 IsPresent 方法来确定操作系统是否支持特定功能或度量值由标识`enumValue`。 根据从 IsPresent 返回的值，你将在你的代码中执行条件操作。 例如，如果调用此方法的参数值<xref:System.Windows.Forms.SystemParameter>返回`true`，你可以创建应用程序中的平面样式的所有者描述菜单。</xref:System.Windows.Forms.SystemParameter>       如果它们不能在特定操作系统版本上，则访问某些系统功能或度量值可以引发异常。 在这种情况下，应首先使用相应<xref:System.Windows.Forms.SystemParameter>枚举值，以及 IsPresent，以确定是否支持该度量值。</xref:System.Windows.Forms.SystemParameter> 例如，调用与 IsPresent<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>之前获取<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>属性值。</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "A <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref>表示要搜索的功能。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果的功能是在系统中; 上可用否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表示分层、 顶级窗口功能。 此字段为只读的。"
  remarks: "分层的窗口可以通过透明的或半透明操作系统。 在 Windows 2000 中首先引入了对分层窗口支持。 有关详细信息，请参阅&quot;分层 Windows:: 新方法对使用透明度和透明度效果在 Windows 应用程序&quot;在 http://msdn.microsoft.com 平台 SDK 文档中。       若要确定是否安装了分层的窗口功能，使用<xref:System.Windows.Forms.OSFeature.Feature%2A>要调用基类方法的属性<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>与作为功能看起来为 LayeredWindows</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       或者，你可以检查以查看是否通过调用安装该功能<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>与作为功能的 LayeredWindows，若要查找的方法。</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表示操作系统主题功能。 此字段为只读的。"
  remarks: "主题是在 Microsoft Plus 中包括墙纸、 游标、 字体、 声音和首次引入的图标的可视界面设置的集合 ！ 对于 Windows 95。 .NET Framework 不直接支持操作主题，尽管它具有对中的视觉样式提供广泛支持<xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>命名空间。</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> 有关 Windows 主题的详细信息，请参阅主题和视觉样式和 Win32 SDK 中的视觉样式引用的主题。       若要确定是否安装了该功能，调用基类方法<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>作为要查找为功能的主题</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       或者，你可以检查以查看是否通过调用安装该功能<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>主题作为要查找的功能的方法。</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
