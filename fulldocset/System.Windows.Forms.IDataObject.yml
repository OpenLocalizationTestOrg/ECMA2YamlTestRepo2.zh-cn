### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "提供有关将数据传输格式无关的机制。"
  remarks: "`IDataObject`接口由<xref:System.Windows.Forms.Clipboard>类和在拖放操作。</xref:System.Windows.Forms.Clipboard>       类中实现时，IDataObject 方法允许用户以类的实例中的多个格式存储数据。 将数据存储在多个格式可能性目标应用程序，你可能不知道，其格式要求，可以检索存储的数据。 若要将数据存储 IDataObject 实例中，调用<xref:System.Windows.Forms.IDataObject.SetData%2A>方法并指定数据格式以`format`参数。</xref:System.Windows.Forms.IDataObject.SetData%2A> 设置`autoConvert`参数`false`如果不希望存储的数据会在检索时要转换为另一种格式。 调用<xref:System.Windows.Forms.IDataObject.SetData%2A>上 IDataObject 以多种格式存储数据的一个实例多次。</xref:System.Windows.Forms.IDataObject.SetData%2A>       从 IDataObject 的存储的数据检索通过调用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法和指定数据格式在`format`参数。</xref:System.Windows.Forms.IDataObject.GetData%2A> 设置`autoConvert`参数`false`检索时存储在指定的格式的数据。 若要将存储的数据转换为指定的格式，设置`autoConvert`到`true`，或者不使用`autoConvert`。       若要确定 IDataObject 中存储的数据的格式，请使用以下 IDataObject 方法。      -调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>方法来检索其中的所有格式的数据为可用的数组。</xref:System.Windows.Forms.IDataObject.GetFormats%2A> 设置`autoConvert`参数`false`获取仅在其中存储数据的格式。 若要获取数据存在的所有格式，设置`autoConvert`到`true`，或不使用此参数。      -调用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法来确定存储的数据是否可在特定的格式。</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 如果您不希望存储的数据转换为指定的格式，设置`autoConvert`参数`false`。       请参阅<xref:System.Windows.Forms.DataObject>的实现此接口的类。</xref:System.Windows.Forms.DataObject> 请参阅<xref:System.Windows.Forms.DataFormats>预定义的类<xref:System.Windows.Forms.Clipboard>数据格式。</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索与指定的数据格式关联的数据。"
  remarks: "如果此方法找不到指定的格式中的数据，它将尝试将数据转换为格式。 如果数据无法转换为指定的格式，此方法返回`null`。       若要确定是否数据相关联，或者可以转换为一种格式，调用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>在调用<xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A>之前</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的此实例中存储的数据的有效格式的列表。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "要检索的数据的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Object
      description: "指定的格式，与关联的数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索与指定的类类型格式关联的数据。"
  remarks: "如果此方法找不到指定的格式中的数据，它将尝试将数据转换为格式。 如果数据无法转换为指定的格式，此方法返回`null`。       若要确定是否数据相关联，或者可以转换为一种格式，调用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>在调用<xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A>之前</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的此实例中存储的数据的有效格式的列表。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>表示要检索的数据的格式。</xref:System.Type> 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Object
      description: "指定的格式，与关联的数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索与指定的数据格式，使用一个布尔值确定是否将数据转换为格式关联的数据。"
  remarks: "如果`autoConvert`参数是`true`和此方法不能在指定的格式中查找数据，它会尝试将数据转换为格式。 如果数据无法转换为指定的格式，或使用存储数据`autoConvert`参数设置为`false`，此方法返回`null`。       如果`autoConvert`参数是`false`，此方法返回数据中指定的格式，或`null`如果找不到此格式中的没有数据。       若要确定是否数据相关联，或者可以转换为一种格式，请调用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>之前调用 GetData。</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的此实例中存储的数据的有效格式的列表。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "要检索的数据的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将数据转换为指定的格式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "指定的格式，与关联的数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定是否在此实例中存储的数据相关联，或者可以转换为指定的格式。"
  remarks: "调用此方法以确定在此<xref:System.Windows.Forms.DataObject>之前调用<xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A></xref:System.Windows.Forms.DataObject>是否存在一种格式 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>于此实例中可用的格式。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "要检查的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据存储在此实例相关联，，或者可以转换为指定的格式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定是否在此实例中存储的数据相关联，或者可以转换为指定的格式。"
  remarks: "调用此方法以确定在此<xref:System.Windows.Forms.DataObject>之前调用<xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A></xref:System.Windows.Forms.DataObject>是否存在一种格式 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>于此实例中可用的格式。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>表示对其进行检查的格式。</xref:System.Type> 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据存储在此实例相关联，，或者可以转换为指定的格式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定此实例中存储的数据是否与指定的格式，使用一个布尔值确定是否将数据转换为格式相关联。"
  remarks: "调用此方法以确定在此<xref:System.Windows.Forms.DataObject>之前调用<xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A></xref:System.Windows.Forms.DataObject>是否存在一种格式 调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>于此实例中可用的格式。</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       此方法返回`true`时:-`autoConvert`参数是`true`的数据也可以转换为适当的格式的格式。      -`autoConvert`参数是`false`和该数据会在适当的格式。       此方法返回`false`时:-`autoConvert`参数是`true`和此方法不能在指定的格式中, 查找数据和它不能将数据转换为指定的格式，或使用存储数据`autoConvert`设置为`false`。      -`autoConvert`参数是`false`，，在此实例中指定的格式不存在数据。      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "要检查的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要确定此实例中存储的数据是否可以转换为指定的格式;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以检查数据是否在指定的格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据在或者可以转换为指定的格式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回此实例中存储的数据与关联，或可以转换为的所有格式的列表。"
  remarks: "调用此方法以获取支持的数据格式之前调用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法。</xref:System.Windows.Forms.IDataObject.GetData%2A> 请参阅<xref:System.Windows.Forms.DataFormats>类预定义的格式。</xref:System.Windows.Forms.DataFormats>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "表示此对象中存储的数据支持的所有格式的列表的名称数组。"
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取此实例中存储的数据与关联或可转换为，使用一个布尔值以确定是否检索所有数据可以转换为的格式或仅本机数据格式的所有格式的列表。"
  remarks: "调用此方法以获取支持的数据格式之前调用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法。</xref:System.Windows.Forms.IDataObject.GetData%2A> 请参阅<xref:System.Windows.Forms.DataFormats>类预定义的格式。</xref:System.Windows.Forms.DataFormats>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要检索所有格式此实例中存储该数据与关联，或可以转换为;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>检索只有本机数据格式。"
    return:
      type: System.String[]
      description: "表示此对象中存储的数据支持的所有格式的列表的名称数组。"
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将指定的数据存储在此情况下，使用的格式的数据的类。"
  remarks: "格式被派生自数据类。       它检索时，可将数据存储使用此方法转换兼容的格式。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "要存储的数据。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在此实例中存储指定的数据和其关联的格式。"
  remarks: "如果不知道的目标应用程序的格式，你可以在使用此方法的多种格式存储数据。       它检索时，可将数据存储使用此方法转换兼容的格式。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "与数据相关联的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: data
      type: System.Object
      description: "要存储的数据。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在此实例中存储指定的数据和其关联的类的类型。"
  remarks: "如果不知道的目标应用程序的格式，你可以在使用此方法的多种格式存储数据。       它检索时，可将数据存储使用此方法转换兼容的格式。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>表示与数据关联的格式。</xref:System.Type> 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: data
      type: System.Object
      description: "要存储的数据。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将指定的数据和其关联的格式存储在此情况下，使用一个布尔值指定数据是否可以转换为另一种格式。"
  remarks: "如果不知道的目标应用程序的格式，你可以在使用此方法的多种格式存储数据。       此方法的实现，请参阅<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "与数据相关联的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要允许数据转换为另一种格式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: data
      type: System.Object
      description: "要存储的数据。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
