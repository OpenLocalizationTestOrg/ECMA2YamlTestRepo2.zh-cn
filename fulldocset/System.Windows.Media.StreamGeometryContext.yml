### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.StreamGeometryContext
  id: StreamGeometryContext
  children:
  - System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.Close
  - System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  langs:
  - csharp
  name: StreamGeometryContext
  nameWithType: StreamGeometryContext
  fullName: System.Windows.Media.StreamGeometryContext
  type: Class
  summary: "描述使用绘图命令的几何图形。 此类用于<xref href=&quot;System.Windows.Media.StreamGeometry&quot;></xref>类，以创建不支持数据绑定、 动画或修改的轻量几何图形。"
  syntax:
    content: 'public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  id: ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "将一段弧线，绘制到指定的点。"
  remarks: "此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw an arc using the ArcTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]"
  syntax:
    content: public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "弧的最终目标点。"
    - id: size
      type: System.Windows.Size
      description: "其外围用于绘制角的椭圆半径 （一半的宽度和高度的一半）。 如果所有方向非常舍入 oval，弧将舍入，如果它是几乎平面弧线也将如此。 例如，非常大的宽度和高度将表示一个非常大的椭圆，从而将提供角度略曲率。"
    - id: rotationAngle
      type: System.Double
      description: "指定曲线的椭圆旋转角度。 可以使用此参数 rotated 曲率。"
    - id: isLargeArc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要绘制大于 180 度; 弧线否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "一个值，该值指示是否绘制弧<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>或<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>方向。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.ArcTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  id: BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: BeginFigure(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "指定新图的起始点。"
  remarks: "通过多次调用此方法，你可以创建此<xref:System.Windows.Media.StreamGeometryContext>。</xref:System.Windows.Media.StreamGeometryContext>内的多个数字 （自包含几何形状）       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  syntax:
    content: public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);
    parameters:
    - id: startPoint
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref>图开始。"
    - id: isFilled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用的命中测试、 呈现和剪辑; 此图包含的区域否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isClosed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要关闭图;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 例如，如果绘制两条连接线，和`isClosed`设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，绘图就只是两个线，但如果`isClosed`设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，两个线将封闭进而形成一个三角形。"
  overload: System.Windows.Media.StreamGeometryContext.BeginFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  id: BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: BezierTo(Point,Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "将贝塞尔曲线绘制到指定的点。"
  remarks: "由一个起点、 终点和两个控制点定义三次方贝塞尔曲线。 第一个控制点确定的段的第一半曲率和第二个控制点确定的段的第二半曲率。       此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a Bezier curve using the BezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]"
  syntax:
    content: public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "第一个控制点用于指定的曲线形状。"
    - id: point2
      type: System.Windows.Point
      description: "第二个控制点用于指定的曲线形状。"
    - id: point3
      type: System.Windows.Point
      description: "曲线的最终目标点。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.BezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.Close
  id: Close
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: Close()
  nameWithType: StreamGeometryContext.Close()
  fullName: System.Windows.Media.StreamGeometryContext.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "关闭此上下文，并刷新其内容，以使其可以呈现。"
  remarks: "关闭之后，无法修改上下文。 上下文必须先关闭，然后可以呈现其内容。"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Windows.Media.StreamGeometryContext.Close*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此上下文已关闭或释放。"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  id: LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: LineTo(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "为指定绘制一条直线<xref href=&quot;System.Windows.Point&quot;> </xref>。"
  remarks: "此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a triangle using the LineTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]"
  syntax:
    content: public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "行的末尾目标点。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.LineTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "绘制一个或多个连接的贝塞尔曲线。"
  remarks: "中的第一个点`points`指定的第一个控制点，下一步指定第二个控制点，第三个点指定的终结点下, 一个点指定为下一条曲线，依次类推的第一个控制点。       此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw multiple connected Bezier curves using the PolyBezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]"
  syntax:
    content: public abstract void PolyBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "指定控件点和一个或多个条贝塞尔曲线的目标点的点的列表。 此列表中的点的数量应为三的倍数。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.PolyBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyLineTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "绘制一个或多个连接的直线。"
  remarks: "此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a triangle using the PolyLineTo method.  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]"
  syntax:
    content: public abstract void PolyLineTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "指定一个或多个目标点的点的集合互相连接的直线。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.PolyLineTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "绘制一个或多个连接二次贝塞尔曲线。"
  remarks: "此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw multiple connected quadratic Bezier curves using the PolyQuadraticBezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]"
  syntax:
    content: public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "一个或多个二次贝塞尔曲线的点的指定控点和目标的点的集合。 列表中的第一个点指定曲线的控制点、 下一个点指定的目标点、 下一个点指定为下一条曲线，依次类推的控制点。 此列表必须包含偶数个点。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  id: QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "绘制二次贝塞尔曲线。"
  remarks: "与三次方贝塞尔曲线上，使用两个控制点，不同二次贝塞尔曲线使用单个控点。       此方法使用前一条线段的终点作为其起点。 如果这是在图中的第一个段，它使用由指定的点<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法作为其起点。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A<xref:System.Windows.Media.StreamGeometry>如果它包含无法序列化<xref:System.Windows.Media.Transform>或任何非描边或未填充的线段。</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a quadratic Bezier curve using the QuadraticBezierTo method.  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]"
  syntax:
    content: public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "用于指定曲线的形状的控制点。"
    - id: point2
      type: System.Windows.Point
      description: "曲线的最终目标点。"
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使线段描边时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>此段和前一条线段之间的联接视为时用描边角<xref href=&quot;System.Windows.Media.Pen&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试添加段，而无需通过调用启动图<xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>方法。</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()
  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BeginFigure(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BezierTo(Point,Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.Close
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: Close()
  nameWithType: StreamGeometryContext.Close()
  fullName: System.Windows.Media.StreamGeometryContext.Close()
- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: LineTo(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
- uid: System.Collections.Generic.IList{System.Windows.Point}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Point>
  nameWithType: IList<Point>
  fullName: System.Collections.Generic.IList<System.Windows.Point>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Windows.Point>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyLineTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()
  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()
- uid: System.Windows.Media.StreamGeometryContext.ArcTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: ArcTo
  nameWithType: StreamGeometryContext.ArcTo
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BeginFigure
  nameWithType: StreamGeometryContext.BeginFigure
- uid: System.Windows.Media.StreamGeometryContext.BezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BezierTo
  nameWithType: StreamGeometryContext.BezierTo
- uid: System.Windows.Media.StreamGeometryContext.Close*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: Close
  nameWithType: StreamGeometryContext.Close
- uid: System.Windows.Media.StreamGeometryContext.LineTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: LineTo
  nameWithType: StreamGeometryContext.LineTo
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyBezierTo
  nameWithType: StreamGeometryContext.PolyBezierTo
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyLineTo
  nameWithType: StreamGeometryContext.PolyLineTo
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyQuadraticBezierTo
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: QuadraticBezierTo
  nameWithType: StreamGeometryContext.QuadraticBezierTo
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose
