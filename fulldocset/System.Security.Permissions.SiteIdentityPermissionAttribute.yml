### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute
  id: SiteIdentityPermissionAttribute
  children:
  - System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.SiteIdentityPermissionAttribute.Site
  langs:
  - csharp
  name: SiteIdentityPermissionAttribute
  nameWithType: SiteIdentityPermissionAttribute
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute
  type: Class
  summary: "允许的操作安全<xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;></xref>要应用于使用声明性安全的代码。 此类不能被继承。"
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \n  \n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  langs:
  - csharp
  name: SiteIdentityPermissionAttribute(SecurityAction)
  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.SiteIdentityPermissionAttribute&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>。"
  syntax:
    content: public SiteIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "之一<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SiteIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回的新实例<xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref>。"
  remarks: "此方法仅应由安全系统中，永远不会由应用程序代码调用。       在编译时，属性将安全声明转换为元数据中序列化形式。 从权限，此方法返回对应于此属性创建元数据中的声明性安全数据。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref>相对应的此属性。"
  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermissionAttribute.Site
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置调用代码的站点名称。"
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "要比较指定由安全提供程序的站点名称的站点名称。"
  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.Site*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: SiteIdentityPermissionAttribute(SecurityAction)
  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SiteIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermissionAttribute.Site
  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.Site
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: SiteIdentityPermissionAttribute
  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SiteIdentityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site*
  parent: System.Security.Permissions.SiteIdentityPermissionAttribute
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermissionAttribute.Site
