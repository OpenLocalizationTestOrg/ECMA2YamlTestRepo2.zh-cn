### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.CompositeActivity
  id: CompositeActivity
  children:
  - System.Workflow.ComponentModel.CompositeActivity.#ctor
  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  langs:
  - csharp
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
  type: Class
  summary: "派生<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> ，它是包含其他活动的所有活动的基类。 CompositeActivity 负责管理其子活动的执行。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]CompositeActivity 管理其子活动使用<xref:System.Workflow.ComponentModel.ActivityExecutionContext>类方法和<xref:System.Workflow.ComponentModel.Activity>类。</xref:System.Workflow.ComponentModel.Activity>在定义事件</xref:System.Workflow.ComponentModel.ActivityExecutionContext>的执行  例如，一个子活动计划的执行，使用<xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A>的<xref:System.Workflow.ComponentModel.ActivityExecutionContext>.</xref:System.Workflow.ComponentModel.ActivityExecutionContext> </xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> 子活动完成执行后通过订阅到<xref:System.Workflow.ComponentModel.Activity.Closed><xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>上定义的事件</xref:System.Workflow.ComponentModel.Activity.Closed>时，可以通知 CompositeActivity 活动       工作流运行时强制实施某些约束在 CompositeActivity 执行时，其中最基本的是 CompositeActivity 活动能将移到<xref:System.Workflow.ComponentModel.Activity.Closed>状态任何子活动是否仍在<xref:System.Workflow.ComponentModel.Activity.Executing>， <xref:System.Workflow.ComponentModel.Activity.Canceling>， <xref:System.Workflow.ComponentModel.Activity.Compensating>，或<xref:System.Workflow.ComponentModel.Activity.Faulting>，状态。</xref:System.Workflow.ComponentModel.Activity.Faulting> </xref:System.Workflow.ComponentModel.Activity.Compensating> </xref:System.Workflow.ComponentModel.Activity.Canceling> </xref:System.Workflow.ComponentModel.Activity.Executing> </xref:System.Workflow.ComponentModel.Activity.Closed>"
  example:
  - "This example shows a basic `CompositeActivity` that executes its first child activity for execution. When the child activity moves to the Closed state, the composite activity is notified and then completes its execution.  \n  \n```c#  \npublic class HasOneChildActivity : CompositeActivity  \n{  \n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \n    {  \n        Activity child = this.EnabledActivities[0];  \n        child.Closed += this.ChildClosed;  \n        executionContext.ExecuteActivity(child);  \n  \n        return ActivityExecutionStatus.Executing;  \n    }  \n  \n    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  \n    {  \n        e.Activity.Closed -= this.ChildClosed;  \n        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  \n  \n        executionContext.CloseActivity();  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.TypeDescriptionProvider(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityTypeDescriptorProvider))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))]

      [System.Workflow.ComponentModel.Serialization.ContentProperty("Activities")]

      public class CompositeActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity()
  nameWithType: CompositeActivity.CompositeActivity()
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;></xref>类。"
  syntax:
    content: public CompositeActivity ();
    parameters: []
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity(IEnumerable<Activity>)
  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;></xref>类<xref:System.Object>实现<xref:System.Collections.IEnumerable>接口类型<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.Collections.IEnumerable> </xref:System.Object>"
  syntax:
    content: public CompositeActivity (System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity> children);
    parameters:
    - id: children
      type: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}
      description: "<xref:System.Object>实现<xref:System.Collections.IEnumerable>接口类型<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.Collections.IEnumerable> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity(String)
  nameWithType: CompositeActivity.CompositeActivity(String)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;></xref>类，以及该活动的名称。"
  syntax:
    content: public CompositeActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "实例的名称。"
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities
  id: Activities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Activities
  nameWithType: CompositeActivity.Activities
  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取表示该集合，该对象<xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;> </xref>，所有子活动。"
  remarks: "表示由复合活动管理的子活动的集合。 可以更新此集合。"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCollection Activities { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityCollection
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;></xref>所有子活动。"
  overload: System.Workflow.ComponentModel.CompositeActivity.Activities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  id: ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "适用<xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;></xref>清单在此实例的参数。"
  syntax:
    content: protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);
    parameters:
    - id: workflowChanges
      type: System.Workflow.ComponentModel.WorkflowChanges
      description: "<xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;> </xref>应用。"
  overload: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowChanges</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  id: CanModifyActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取或设置一个值，该值控制是否中的单个活动<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>可以修改。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  remarks: ''
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the CanModifyActivities permissive for this type.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: protected bool CanModifyActivities { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果中的单个活动<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>可修改; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  overload: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositeActivity.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "调用<> *1> 上此实例，并根据需要调用<> *1> 的此实例的所有子活动上。"
  remarks: "在整个活动的生存期可能创建或释放多个.NET 对象。 每次从内存卸载工作流实例时，.NET 对象释放对应工作流树中的活动 (<xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A>每个活动上调用方法)。</xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> 当工作流实例加载回内存中时，为使用对应卸载操作中的状态的每个活动创建新的.NET 对象。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放使用的此实例和所有子活动的此实例; 的托管和非托管资源<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源的此实例。"
  overload: System.Workflow.ComponentModel.CompositeActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  id: EnabledActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取表示的子集的只读集合<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>已启用。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity> EnabledActivities { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}
      description: "表示的子集的只读集合<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>已启用。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  overload: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  id: GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: GetDynamicActivities(Activity)
  nameWithType: CompositeActivity.GetDynamicActivities(Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "返回一个包含所有当前正在执行的指定的活动实例的数组。"
  syntax:
    content: protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "指定<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.Activity[]
      description: "当前正在执行的活动实例的数组。"
  overload: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在此实例的执行上下文中引发异常时调用。"
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>此实例。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>导致此错误。</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref>中时得到的尝试取消此实例。"
  overload: System.Workflow.ComponentModel.CompositeActivity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: CompositeActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化此实例和指定<xref:System.IServiceProvider>.</xref:System.IServiceProvider>的所有适当的子活动"
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "指定<xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.CompositeActivity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "添加活动时调用。"
  syntax:
    content: protected virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "指定<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "指定<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>addedActivity</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "移除活动时调用。"
  remarks: "当前实现不提供任何功能。"
  syntax:
    content: protected virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "指定<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "指定<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  id: OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "工作流运行时引擎每次调用<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>加载此活动。"
  syntax:
    content: protected override void OnActivityExecutionContextLoad (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.Object>实现<xref:System.IServiceProvider>并为此实例提供服务。</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  id: OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "工作流运行时引擎每次调用<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>此活动是卸载。"
  syntax:
    content: protected override void OnActivityExecutionContextUnload (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.Object>实现<xref:System.IServiceProvider>并为此实例提供服务。</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  id: OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnListChanged(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "执行其他处理时<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>属性更改。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  syntax:
    content: protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&quot;> </xref>事件所广播。"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  id: OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnListChanging(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "对基础<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>进行更改之前发生的事件"
  syntax:
    content: protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
      description: "<xref:System.EventArgs>与事件相关。</xref:System.EventArgs>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "对集合进行了更改后调用<xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>的此实例。</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  remarks: "当在派生类中重写，提供为此事件的处理。"
  syntax:
    content: protected virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);
    parameters:
    - id: rootContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>与此实例关联。"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  id: Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Uninitialize(IServiceProvider)
  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "当转换到的活动由工作流运行时引擎调用<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>状态从<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>状态。"
  remarks: "此方法用于活动清理，例如清除依赖属性和删除队列。"
  syntax:
    content: protected override void Uninitialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.Object>实现<xref:System.IServiceProvider>并为此实例提供服务。</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity()
  nameWithType: CompositeActivity.CompositeActivity()
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity(IEnumerable<Activity>)
  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)
- uid: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Activity>
  nameWithType: IEnumerable<Activity>
  fullName: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity(String)
  nameWithType: CompositeActivity.CompositeActivity(String)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Activities
  nameWithType: CompositeActivity.Activities
  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities
- uid: System.Workflow.ComponentModel.ActivityCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCollection
  nameWithType: ActivityCollection
  fullName: System.Workflow.ComponentModel.ActivityCollection
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
- uid: System.Workflow.ComponentModel.WorkflowChanges
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowChanges
  nameWithType: WorkflowChanges
  fullName: System.Workflow.ComponentModel.WorkflowChanges
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositeActivity.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Activity>
  nameWithType: ReadOnlyCollection<Activity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: GetDynamicActivities(Activity)
  nameWithType: CompositeActivity.GetDynamicActivities(Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)
- uid: System.Workflow.ComponentModel.Activity[]
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity[]
  spec.csharp:
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: CompositeActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanged(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
- uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCollectionChangeEventArgs
  nameWithType: ActivityCollectionChangeEventArgs
  fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanging(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity.CompositeActivity
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Activities
  nameWithType: CompositeActivity.Activities
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: ApplyWorkflowChanges
  nameWithType: CompositeActivity.ApplyWorkflowChanges
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Dispose
  nameWithType: CompositeActivity.Dispose
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: GetDynamicActivities
  nameWithType: CompositeActivity.GetDynamicActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: HandleFault
  nameWithType: CompositeActivity.HandleFault
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Initialize
  nameWithType: CompositeActivity.Initialize
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: CompositeActivity.OnActivityChangeAdd
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: CompositeActivity.OnActivityChangeRemove
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextLoad
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextUnload
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanged
  nameWithType: CompositeActivity.OnListChanged
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanging
  nameWithType: CompositeActivity.OnListChanging
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Uninitialize
  nameWithType: CompositeActivity.Uninitialize
