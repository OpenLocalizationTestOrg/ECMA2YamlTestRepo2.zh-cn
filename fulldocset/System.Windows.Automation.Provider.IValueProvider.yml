### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IValueProvider
  id: IValueProvider
  children:
  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  - System.Windows.Automation.Provider.IValueProvider.Value
  langs:
  - csharp
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Windows.Automation.Provider.IValueProvider
  type: Interface
  summary: "公开方法和属性，以支持 UI 自动化客户端访问的控件进行的内部值未跨越范围和，可以表示为字符串。"
  remarks: "控件的值可能或可能不可编辑，具体取决于控件和其设置。       实现 UI 自动化提供程序必须支持上<xref:System.Windows.Automation.ValuePattern>控件模式。</xref:System.Windows.Automation.ValuePattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IValueProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "获取一个值，指定控件的值是只读的。"
  remarks: "控件应将其<xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>设置为`true`及其<xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty>设置为`false`之前允许到<xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>。</xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>调用</xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty></xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be changed.  \n  \n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#isreadonly)]\n [!code-cs[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#isreadonly)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值是只读的;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果能修改它。"
  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  id: SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "设置控件的值。"
  remarks: "单行编辑控件支持通过实现<xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider>以编程方式访问其内容 但是，多行编辑控件不实现<xref:System.Windows.Automation.Provider.IValueProvider>; 相反，它们提供对通过实现<xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider>其内容的访问</xref:System.Windows.Automation.Provider.IValueProvider>       控件如<xref:System.Windows.Automation.ControlType.ListItem>和<xref:System.Windows.Automation.ControlType.TreeItem>必须实现<xref:System.Windows.Automation.Provider.IValueProvider>如果任一项的值是可编辑，而不考虑当前编辑控件模式。</xref:System.Windows.Automation.Provider.IValueProvider> </xref:System.Windows.Automation.ControlType.TreeItem> </xref:System.Windows.Automation.ControlType.ListItem> 父控件还必须实现<xref:System.Windows.Automation.Provider.IValueProvider>如果子项是可编辑。</xref:System.Windows.Automation.Provider.IValueProvider>       ![可编辑列表项。](~/add/media/uia-valuepattern-editable-listitem.PNG &quot;可编辑列表项。&quot;)   可编辑列表项的示例"
  example:
  - "The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \n  \n [!code-vb[UIAIValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#setvalue)]\n [!code-cs[UIAIValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#setvalue)]"
  syntax:
    content: public void SetValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "要设置的值。 提供程序负责将值转换为相应的数据类型。"
  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "如果区域设置特定的信息传递给如格式不正确的日期格式不正确的控件。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果无法将新值从字符串转换为格式控件可识别。"
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "当尝试操作未启用的控件。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "获取控件的值。"
  remarks: "单行编辑控件支持通过实现以编程方式访问其内容<xref:System.Windows.Automation.Provider.IValueProvider>(除了<xref:System.Windows.Automation.Provider.ITextProvider>)。</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider> 但是，多行编辑控件不实现<xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider>       若要检索多行编辑控件的文本内容，控件必须实现<xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider> 但是，<xref:System.Windows.Automation.Provider.ITextProvider>不支持设置控件的值。</xref:System.Windows.Automation.Provider.ITextProvider>       <xref:System.Windows.Automation.Provider.IValueProvider>不支持检索格式设置信息或子字符串值。</xref:System.Windows.Automation.Provider.IValueProvider> 实现<xref:System.Windows.Automation.Provider.ITextProvider>在这些情况下。</xref:System.Windows.Automation.Provider.ITextProvider>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be retrieved.  \n  \n [!code-vb[UIAIValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#value)]\n [!code-cs[UIAIValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#value)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "作为字符串控件的值。"
  overload: System.Windows.Automation.Provider.IValueProvider.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue
  nameWithType: IValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IValueProvider.Value*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
