### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "表示配置文件中的 Uri 部分。"
  remarks: "现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供针对国际资源标识符 (IRI) 和国际化域名的支持。</xref:System.Uri?displayProperty=fullName> 除非专门允许 IRI 和 IDN，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       可以使用 UriSection 类检索 IRI 和 IDN 的配置设置。"
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.UriSection&quot;></xref>类。"
  remarks: "现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供针对国际资源标识符 (IRI) 和国际化域名的支持。</xref:System.Uri?displayProperty=fullName> 除非专门允许 IRI 和 IDN，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       可以使用<xref:System.Configuration.UriSection>类</xref:System.Configuration.UriSection>检索 IRI 和 IDN 的配置设置       IRI 支持的详细信息，请参阅备注部分的<xref:System.Uri?displayProperty=fullName>类。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.IdnElement&quot;></xref>对象，其中包含的配置设置的国际域名 (IDN) 处理中&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  remarks: "现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供针对国际资源标识符 (IRI) 和国际化域名的支持。</xref:System.Uri?displayProperty=fullName> 除非专门允许 IRI 和 IDN，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       可以使用<xref:System.Configuration.UriSection>类</xref:System.Configuration.UriSection>检索 IRI 和 IDN 的配置设置 Idn 属性返回 IDN 配置设置在<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>中处理       必须为 IDN 处理为可能启用 IRI 处理。 如果 IRI 处理处于禁用状态，则 IDN 处理将设置为其中的.NET Framework 2.0 行为用于实现兼容性和不使用 IDN 名称的默认设置。       国际化域名 (IDN) 属性仅控制 IDN 处理。 默认情况下执行所有其他 IRI 处理 （例如字符规范化）。       配置设置<xref:System.Configuration.IdnElement>将能读取一次当第一个<xref:System.Uri?displayProperty=fullName>类构造。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> 将忽略在此时间之后的配置设置的更改。       IRI 支持的详细信息，请参阅备注部分的<xref:System.Uri?displayProperty=fullName>类。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "配置设置的国际域名 (IDN) 处理中&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.IriParsingElement&quot;></xref>对象，其中包含的国际资源标识符 (IRI) 分析中的配置设置&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  remarks: "现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供针对国际资源标识符 (IRI) 和国际化域名的支持。</xref:System.Uri?displayProperty=fullName> 除非专门允许 IRI 和 IDN，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       可以使用<xref:System.Configuration.UriSection>类</xref:System.Configuration.UriSection>检索 IRI 和 IDN 的配置设置 IriParsing 属性返回 IRI 分析在<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>中的配置的设置       必须为 IDN 处理为可能启用 IRI 处理。 如果 IRI 处理处于禁用状态，则 IDN 处理将设置为其中的.NET Framework 2.0 行为用于实现兼容性和不使用 IDN 名称的默认设置。       国际化域名 (IDN) 属性仅控制 IDN 处理。 默认情况下执行所有其他 IRI 处理 （例如字符规范化）。       配置设置<xref:System.Configuration.IriParsingElement>将能读取一次当第一个<xref:System.Uri?displayProperty=fullName>类构造。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> 将忽略在此时间之后的配置设置的更改。       IRI 支持的详细信息，请参阅备注部分的<xref:System.Uri?displayProperty=fullName>类。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "国际资源标识符 (IRI) 分析中的配置设置&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;></xref>对象，其中包含在分析的方案的配置设置&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  remarks: "SchemeSettings 属性不是泛型的。 仅 genericUriParserOptions =&quot;DontUnescapePathDotsAndSlashes&quot;配置设置的 HTTP 和 HTTPS 方案受支持。 将忽略所有其他设置。"
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "在分析的方案的配置设置&lt;xref:System.Uri?displayProperty=fullName&gt;类"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
