### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInToken
  id: AddInToken
  children:
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  - System.AddIn.Hosting.AddInToken.AddInFullName
  - System.AddIn.Hosting.AddInToken.AssemblyName
  - System.AddIn.Hosting.AddInToken.Description
  - System.AddIn.Hosting.AddInToken.EnableDirectConnect
  - System.AddIn.Hosting.AddInToken.Equals(System.Object)
  - System.AddIn.Hosting.AddInToken.GetEnumerator
  - System.AddIn.Hosting.AddInToken.GetHashCode
  - System.AddIn.Hosting.AddInToken.Name
  - System.AddIn.Hosting.AddInToken.Publisher
  - System.AddIn.Hosting.AddInToken.QualificationData
  - System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  - System.AddIn.Hosting.AddInToken.ToString
  - System.AddIn.Hosting.AddInToken.Version
  langs:
  - csharp
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
  type: Class
  summary: "表示可以激活的外接程序。"
  remarks: "AddInToken 对象表示外接程序和其关联的管道段，可激活。 令牌包含名称、 程序集名称、 说明、 发布者和它所代表的外接程序版本。       使用<xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName>方法来获取标记，表示其管道匹配指定的主机视图的外接程序的集合。</xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> 使用<xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName>方法获取表示指定的外接所有与指定的主机视图匹配的管道的令牌的集合。</xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName>       若要激活外接程序，请将传递表示所需外接程序到令牌<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法。</xref:System.AddIn.Hosting.AddInToken.Activate%2A> 此方法返回表示外接程序的主机视图的类型的实例。       <xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法有多个重载。</xref:System.AddIn.Hosting.AddInToken.Activate%2A> 当你使用的重载，不需要的应用程序域的名称作为其参数之一时，将自动创建一个新的应用程序域外接程序。       你可以使用语言集成查询 (LINQ) 的扩展方法在 AddInToken，将该令牌视为的集合上执行查询<xref:System.AddIn.Hosting.QualificationDataItem>结构。</xref:System.AddIn.Hosting.QualificationDataItem>"
  example:
  - "This section contains two examples. The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.  \n  \n **Example 1**  \n  \n The following example shows how to activate an add-in with a token.  \n  \n [!code-vb[AddInP3Host#5](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#5)]\n [!code-cs[AddInP3Host#5](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#5)]  \n  \n **Example 2**  \n  \n The following example shows the custom `ChooseAddIn` method, which enumerates an AddInToken collection. The user selects a token from this collection to activate the corresponding add-in.  \n  \n [!code-vb[AddInP3Host#13](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#13)]\n [!code-cs[AddInP3Host#13](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#13)]"
  syntax:
    content: 'public sealed class AddInToken : System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  id: Activate``1(System.AddIn.Hosting.AddInEnvironment)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInEnvironment)
  nameWithType: AddInToken.Activate(AddInEnvironment)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInEnvironment)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInEnvironment environment);
    parameters:
    - id: environment
      type: System.AddIn.Hosting.AddInEnvironment
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel);
    parameters:
    - id: trustLevel
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  id: Activate``1(System.AppDomain)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AppDomain)
  nameWithType: AddInToken.Activate(AppDomain)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AppDomain)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (AppDomain target);
    parameters:
    - id: target
      type: System.AppDomain
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  id: Activate``1(System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(PermissionSet)
  nameWithType: AddInToken.Activate(PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(PermissionSet)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.Security.PermissionSet permissions);
    parameters:
    - id: permissions
      type: System.Security.PermissionSet
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInProcess,AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);
    parameters:
    - id: process
      type: System.AddIn.Hosting.AddInProcess
      description: "要添加。"
    - id: level
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInProcess,PermissionSet)
  nameWithType: AddInToken.Activate(AddInProcess,PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,PermissionSet)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);
    parameters:
    - id: process
      type: System.AddIn.Hosting.AddInProcess
      description: "要添加。"
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInSecurityLevel,String)
  nameWithType: AddInToken.Activate(AddInSecurityLevel,String)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel,String)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);
    parameters:
    - id: trustLevel
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "要添加。"
    - id: appDomainName
      type: System.String
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.AddInFullName
  id: AddInFullName
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
  fullName: System.AddIn.Hosting.AddInToken.AddInFullName
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取命名空间和外接程序的类型。"
  remarks: "此属性获取外接程序的完整名称，如将由返回<xref:System.Type.FullName%2A?displayProperty=fullName>属性。</xref:System.Type.FullName%2A?displayProperty=fullName> 此值始终为的实例上可用<xref:System.AddIn.Hosting.AddInToken>对象。</xref:System.AddIn.Hosting.AddInToken>"
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, AddInFullName, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken>class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string AddInFullName { get; }
    return:
      type: System.String
      description: "外接程序，由其命名空间完全限定的类型。"
  overload: System.AddIn.Hosting.AddInToken.AddInFullName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.AssemblyName
  id: AssemblyName
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
  fullName: System.AddIn.Hosting.AddInToken.AssemblyName
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取包含外接程序的程序集的名称。"
  remarks: "此属性获取包含外接程序的程序集的显示名称，如将由返回<xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>属性。</xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> 此值始终为的实例上可用<xref:System.AddIn.Hosting.AddInToken>对象。</xref:System.AddIn.Hosting.AddInToken>"
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, AssemblyName, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public System.Reflection.AssemblyName AssemblyName { get; }
    return:
      type: System.Reflection.AssemblyName
      description: "程序集的名称。"
  overload: System.AddIn.Hosting.AddInToken.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Description
  id: Description
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Description
  nameWithType: AddInToken.Description
  fullName: System.AddIn.Hosting.AddInToken.Description
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取外接程序的说明。"
  remarks: "此属性获取中指定外接程序的说明<xref:System.AddIn.AddInAttribute>属性。</xref:System.AddIn.AddInAttribute>"
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, Description, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "外接程序的说明或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果中未指定说明<xref href=&quot;System.AddIn.AddInAttribute&quot;></xref>属性。"
  overload: System.AddIn.Hosting.AddInToken.Description*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  id: EnableDirectConnect
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
  fullName: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取和设置一个值，指示在条件允许时外接程序是否应直接连接到它们的宿主。"
  remarks: "要进行直接连接必须存在以下条件:-此属性必须设置为`true`。      -外接程序必须与主机相同的应用程序域中。      -外接程序视图和外接程序的主机视图必须是相同的类型。      的管道所有段都必须可用。       如果建立直接连接，则外接程序端适配器和主机端适配器未实例化。"
  syntax:
    content: public static bool EnableDirectConnect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果外接程序应直接连接到主机;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Hosting.AddInToken.EnableDirectConnect*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AddInToken.Equals(Object)
  fullName: System.AddIn.Hosting.AddInToken.Equals(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "确定指定的对象是否等于当前实例。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要与当前实例进行比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的对象与当前实例是否相等。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Hosting.AddInToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator
  id: GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AddInToken.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.GetEnumerator()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "返回与此令牌相关联的管道段的限定数据的枚举数。"
  remarks: "使用此方法将一个令牌，就像它是项的集合限定数据，例如，在`foreach`语句 (`For Each`在 Visual Basic 中， `for each` Visual c + +)。       使用此方法返回的枚举器循环访问与当前的令牌相关联的管道段限定数据项。 限定数据的每个项是<xref:System.AddIn.Hosting.QualificationDataItem>结构，用于标识的管道段以及包含名称/值对从<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性应用于该段。</xref:System.AddIn.Pipeline.QualificationDataAttribute> </xref:System.AddIn.Hosting.QualificationDataItem>      1> [!NOTE]&1;> 外接程序模型不使用限定数据应用于的外接程序的主机视图。 因此，当枚举限定数据操作时你将找不到任何项<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性是<xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.</xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> </xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>       或者，可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>属性来获取一组嵌套包含限定数据的管道段的字典。</xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>"
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}
      description: "一个枚举器可用于循环访问与当前的令牌相关联的管道段的限定数据。"
  overload: System.AddIn.Hosting.AddInToken.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.GetHashCode
  id: GetHashCode
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AddInToken.GetHashCode()
  fullName: System.AddIn.Hosting.AddInToken.GetHashCode()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "用作令牌的哈希函数。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的令牌哈希代码。"
  overload: System.AddIn.Hosting.AddInToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Name
  id: Name
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Name
  nameWithType: AddInToken.Name
  fullName: System.AddIn.Hosting.AddInToken.Name
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取外接程序的名称。"
  remarks: "此属性获取外接程序中指定的名称<xref:System.AddIn.AddInAttribute>属性。</xref:System.AddIn.AddInAttribute> 此值始终为的实例上可用<xref:System.AddIn.Hosting.AddInToken>对象。</xref:System.AddIn.Hosting.AddInToken>"
  example:
  - "The following example displays the value of the Name, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "外接程序的名称。"
  overload: System.AddIn.Hosting.AddInToken.Name*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Publisher
  id: Publisher
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Publisher
  nameWithType: AddInToken.Publisher
  fullName: System.AddIn.Hosting.AddInToken.Publisher
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取外接程序的发布者。"
  remarks: "此属性获取中指定外接程序的发布者<xref:System.AddIn.AddInAttribute>属性。</xref:System.AddIn.AddInAttribute>"
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, Publisher, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Publisher { get; }
    return:
      type: System.String
      description: "外接程序的发布者或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果中未指定发布服务器<xref href=&quot;System.AddIn.AddInAttribute&quot;></xref>属性。"
  overload: System.AddIn.Hosting.AddInToken.Publisher*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.QualificationData
  id: QualificationData
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: QualificationData
  nameWithType: AddInToken.QualificationData
  fullName: System.AddIn.Hosting.AddInToken.QualificationData
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取与当前的令牌相关联的管道中的数据段的字典。"
  remarks: "此属性用于获取已应用于管道段使用的数据<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性。</xref:System.AddIn.Pipeline.QualificationDataAttribute> 此数据可用于标识和处理撰写管道的类型。       此属性返回的字典的字典。 顶级字典始终具有六个键。 每个键是<xref:System.AddIn.Hosting.AddInSegmentType>管道中的段的值。</xref:System.AddIn.Hosting.AddInSegmentType> 每个值是一个泛型<xref:System.Collections.Generic.IDictionary%602>具有包含数据分段的限定的字符串键的字符串。</xref:System.Collections.Generic.IDictionary%602>       密钥和这些内部字典的值都是名称和值中指定<xref:System.AddIn.Pipeline.QualificationDataAttribute>段的属性。</xref:System.AddIn.Pipeline.QualificationDataAttribute> 如果任何限定数据已不应用到的段，其字典为空。      1> [!NOTE]&1;> 外接程序模型不使用限定数据应用于的外接程序的主机视图。 因此，字典中是否的<xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>始终为空。</xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>       或者，你可以通过枚举中获取限定数据<xref:System.AddIn.Hosting.AddInToken>就像它是一套<xref:System.AddIn.Hosting.QualificationDataItem>结构，而使用`foreach`语句 (`For Each`在 Visual Basic 中， `for each` Visual c + +)。</xref:System.AddIn.Hosting.QualificationDataItem> </xref:System.AddIn.Hosting.AddInToken> 请参阅提供的示例<xref:System.AddIn.Hosting.QualificationDataItem>结构。</xref:System.AddIn.Hosting.QualificationDataItem>"
  example:
  - "The following example shows how to examine an add-in's qualification data.  \n  \n [!code-vb[AddInP3Host#11](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#11)]\n [!code-cs[AddInP3Host#11](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#11)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<string,string>> QualificationData { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}
      description: "一个字典，其键为管线段，其值为字典的名称/值对该表示限定数据以供每个段。"
  overload: System.AddIn.Hosting.AddInToken.QualificationData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "返回与此令牌相关联的管道段的限定数据的枚举数。"
  remarks: "此方法允许令牌被视为集合的限定数据项，例如在`foreach`语句 (`For Each`在 Visual Basic 中， `for each` Visual c + +)。       使用此方法返回的枚举器循环访问与当前的令牌相关联的管道段限定数据项。 限定数据的每个项是<xref:System.AddIn.Hosting.QualificationDataItem>结构，用于标识的管道段以及包含名称/值对从<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性应用于该段。</xref:System.AddIn.Pipeline.QualificationDataAttribute> </xref:System.AddIn.Hosting.QualificationDataItem>      1> [!NOTE]&1;> 外接程序模型不使用限定数据应用于的外接程序的主机视图。 因此，当枚举限定数据操作时你将找不到任何项<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性是<xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.</xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> </xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>       或者，可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>属性来获取一组嵌套包含限定数据的管道段的字典。</xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "一个枚举器可用于循环访问与当前的令牌相关联的管道段的限定数据。"
  overload: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.ToString
  id: ToString
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: ToString()
  nameWithType: AddInToken.ToString()
  fullName: System.AddIn.Hosting.AddInToken.ToString()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "返回一个字符串，表示令牌。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示令牌的字符串。"
  overload: System.AddIn.Hosting.AddInToken.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Version
  id: Version
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Version
  nameWithType: AddInToken.Version
  fullName: System.AddIn.Hosting.AddInToken.Version
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取外接程序，在中指定的版本<xref href=&quot;System.AddIn.AddInAttribute&quot;></xref>属性。"
  remarks: "版本号为自由格式字符串。"
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and Version properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "外接程序的版本或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果中未指定的版本号<xref href=&quot;System.AddIn.AddInAttribute&quot;></xref>属性。"
  overload: System.AddIn.Hosting.AddInToken.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInEnvironment)
  nameWithType: AddInToken.Activate(AddInEnvironment)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInEnvironment)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel)
- uid: System.AddIn.Hosting.AddInSecurityLevel
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInSecurityLevel
  nameWithType: AddInSecurityLevel
  fullName: System.AddIn.Hosting.AddInSecurityLevel
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AppDomain)
  nameWithType: AddInToken.Activate(AppDomain)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(PermissionSet)
  nameWithType: AddInToken.Activate(PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInProcess,AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,AddInSecurityLevel)
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInProcess,PermissionSet)
  nameWithType: AddInToken.Activate(AddInProcess,PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,PermissionSet)
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInSecurityLevel,String)
  nameWithType: AddInToken.Activate(AddInSecurityLevel,String)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Hosting.AddInToken.AddInFullName
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
  fullName: System.AddIn.Hosting.AddInToken.AddInFullName
- uid: System.AddIn.Hosting.AddInToken.AssemblyName
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
  fullName: System.AddIn.Hosting.AddInToken.AssemblyName
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.AddIn.Hosting.AddInToken.Description
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Description
  nameWithType: AddInToken.Description
  fullName: System.AddIn.Hosting.AddInToken.Description
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
  fullName: System.AddIn.Hosting.AddInToken.EnableDirectConnect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Equals(Object)
  nameWithType: AddInToken.Equals(Object)
  fullName: System.AddIn.Hosting.AddInToken.Equals(Object)
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetEnumerator()
  nameWithType: AddInToken.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<QualificationDataItem>
  nameWithType: IEnumerator<QualificationDataItem>
  fullName: System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.AddIn.Hosting.QualificationDataItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Hosting.QualificationDataItem
    name: QualificationDataItem
    nameWithType: QualificationDataItem
    fullName: QualificationDataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInToken.GetHashCode
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetHashCode()
  nameWithType: AddInToken.GetHashCode()
  fullName: System.AddIn.Hosting.AddInToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.AddInToken.Name
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Name
  nameWithType: AddInToken.Name
  fullName: System.AddIn.Hosting.AddInToken.Name
- uid: System.AddIn.Hosting.AddInToken.Publisher
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Publisher
  nameWithType: AddInToken.Publisher
  fullName: System.AddIn.Hosting.AddInToken.Publisher
- uid: System.AddIn.Hosting.AddInToken.QualificationData
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: QualificationData
  nameWithType: AddInToken.QualificationData
  fullName: System.AddIn.Hosting.AddInToken.QualificationData
- uid: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<AddInSegmentType,IDictionary<String,String>>
  nameWithType: IDictionary<AddInSegmentType,IDictionary<String,String>>
  fullName: System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Hosting.AddInSegmentType
    name: AddInSegmentType
    nameWithType: AddInSegmentType
    fullName: AddInSegmentType
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.AddIn.Hosting.AddInToken.ToString
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: ToString()
  nameWithType: AddInToken.ToString()
  fullName: System.AddIn.Hosting.AddInToken.ToString()
- uid: System.AddIn.Hosting.AddInToken.Version
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Version
  nameWithType: AddInToken.Version
  fullName: System.AddIn.Hosting.AddInToken.Version
- uid: System.AddIn.Hosting.AddInToken.Activate<T>*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate<T>
  nameWithType: AddInToken.Activate<T>
- uid: System.AddIn.Hosting.AddInToken.AddInFullName*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
- uid: System.AddIn.Hosting.AddInToken.AssemblyName*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
- uid: System.AddIn.Hosting.AddInToken.Description*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Description
  nameWithType: AddInToken.Description
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
- uid: System.AddIn.Hosting.AddInToken.Equals*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Equals
  nameWithType: AddInToken.Equals
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetEnumerator
  nameWithType: AddInToken.GetEnumerator
- uid: System.AddIn.Hosting.AddInToken.GetHashCode*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetHashCode
  nameWithType: AddInToken.GetHashCode
- uid: System.AddIn.Hosting.AddInToken.Name*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Name
  nameWithType: AddInToken.Name
- uid: System.AddIn.Hosting.AddInToken.Publisher*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Publisher
  nameWithType: AddInToken.Publisher
- uid: System.AddIn.Hosting.AddInToken.QualificationData*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: QualificationData
  nameWithType: AddInToken.QualificationData
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator
- uid: System.AddIn.Hosting.AddInToken.ToString*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: ToString
  nameWithType: AddInToken.ToString
- uid: System.AddIn.Hosting.AddInToken.Version*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Version
  nameWithType: AddInToken.Version
