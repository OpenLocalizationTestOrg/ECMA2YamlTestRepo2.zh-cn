### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNode
  id: TreeNode
  children:
  - System.Windows.Forms.TreeNode.#ctor
  - System.Windows.Forms.TreeNode.#ctor(System.String)
  - System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNode.BackColor
  - System.Windows.Forms.TreeNode.BeginEdit
  - System.Windows.Forms.TreeNode.Bounds
  - System.Windows.Forms.TreeNode.Checked
  - System.Windows.Forms.TreeNode.Clone
  - System.Windows.Forms.TreeNode.Collapse
  - System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  - System.Windows.Forms.TreeNode.ContextMenu
  - System.Windows.Forms.TreeNode.ContextMenuStrip
  - System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  - System.Windows.Forms.TreeNode.EnsureVisible
  - System.Windows.Forms.TreeNode.Expand
  - System.Windows.Forms.TreeNode.ExpandAll
  - System.Windows.Forms.TreeNode.FirstNode
  - System.Windows.Forms.TreeNode.ForeColor
  - System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  - System.Windows.Forms.TreeNode.FullPath
  - System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  - System.Windows.Forms.TreeNode.Handle
  - System.Windows.Forms.TreeNode.ImageIndex
  - System.Windows.Forms.TreeNode.ImageKey
  - System.Windows.Forms.TreeNode.Index
  - System.Windows.Forms.TreeNode.IsEditing
  - System.Windows.Forms.TreeNode.IsExpanded
  - System.Windows.Forms.TreeNode.IsSelected
  - System.Windows.Forms.TreeNode.IsVisible
  - System.Windows.Forms.TreeNode.LastNode
  - System.Windows.Forms.TreeNode.Level
  - System.Windows.Forms.TreeNode.Name
  - System.Windows.Forms.TreeNode.NextNode
  - System.Windows.Forms.TreeNode.NextVisibleNode
  - System.Windows.Forms.TreeNode.NodeFont
  - System.Windows.Forms.TreeNode.Nodes
  - System.Windows.Forms.TreeNode.Parent
  - System.Windows.Forms.TreeNode.PrevNode
  - System.Windows.Forms.TreeNode.PrevVisibleNode
  - System.Windows.Forms.TreeNode.Remove
  - System.Windows.Forms.TreeNode.SelectedImageIndex
  - System.Windows.Forms.TreeNode.SelectedImageKey
  - System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.StateImageIndex
  - System.Windows.Forms.TreeNode.StateImageKey
  - System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.Tag
  - System.Windows.Forms.TreeNode.Text
  - System.Windows.Forms.TreeNode.Toggle
  - System.Windows.Forms.TreeNode.ToolTipText
  - System.Windows.Forms.TreeNode.ToString
  - System.Windows.Forms.TreeNode.TreeView
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
  type: Class
  summary: "表示节点的<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。"
  remarks: "<xref:System.Windows.Forms.TreeNode.Nodes%2A>集合包含所有子树节点对象分配给当前的 TreeNode。</xref:System.Windows.Forms.TreeNode.Nodes%2A> 您可以添加、 删除或克隆 TreeNode;执行此操作时，所有子树节点已添加、 删除，或克隆。 每个树节点可以包含其他树节点对象的集合。 这可以使难以确定您正在<xref:System.Windows.Forms.TreeView>当循环访问集合。</xref:System.Windows.Forms.TreeView> 若要确定你的树状结构中的位置，请使用<xref:System.Windows.Forms.TreeNode.FullPath%2A>属性。</xref:System.Windows.Forms.TreeNode.FullPath%2A> <xref:System.Windows.Forms.TreeNode.FullPath%2A>可以使用分析字符串<xref:System.Windows.Forms.TreeView.PathSeparator%2A>字符串值，以确定其中一个树节点标签开始和结束。</xref:System.Windows.Forms.TreeView.PathSeparator%2A> </xref:System.Windows.Forms.TreeNode.FullPath%2A>       通过设置来设置树节点标签<xref:System.Windows.Forms.TreeNode.Text%2A>属性显式。</xref:System.Windows.Forms.TreeNode.Text%2A> 替代方法是使用其中一个树节点<xref:System.Windows.Forms.TreeNode.%23ctor%2A>具有表示一个字符串参数的构造函数<xref:System.Windows.Forms.TreeNode.Text%2A>属性。</xref:System.Windows.Forms.TreeNode.Text%2A> </xref:System.Windows.Forms.TreeNode.%23ctor%2A> 如果显示，旁边 TreeNode 映像，才显示标签。       若要显示的树节点旁的映像，将分配<xref:System.Windows.Forms.ImageList>到<xref:System.Windows.Forms.TreeView.ImageList%2A>的父属性<xref:System.Windows.Forms.TreeView>可控制并指派<xref:System.Drawing.Image>通过引用中的索引值<xref:System.Windows.Forms.ImageList>属性。</xref:System.Windows.Forms.ImageList> </xref:System.Drawing.Image> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A> </xref:System.Windows.Forms.ImageList> 设置<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>属性的索引值<xref:System.Drawing.Image>想要显示当树节点处于未选中状态。</xref:System.Drawing.Image> </xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 同样，设置<xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>属性的索引值<xref:System.Drawing.Image>你想要选择的树节点时显示。</xref:System.Drawing.Image> </xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>       选择特定的树节点并循环访问<xref:System.Windows.Forms.TreeView.Nodes%2A>集合可以通过使用以下属性值: <xref:System.Windows.Forms.TreeNode.FirstNode%2A> <xref:System.Windows.Forms.TreeNode.LastNode%2A> <xref:System.Windows.Forms.TreeNode.NextNode%2A> <xref:System.Windows.Forms.TreeNode.PrevNode%2A> <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>、 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>.</xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> </xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> </xref:System.Windows.Forms.TreeNode.PrevNode%2A> </xref:System.Windows.Forms.TreeNode.NextNode%2A> </xref:System.Windows.Forms.TreeNode.LastNode%2A> </xref:System.Windows.Forms.TreeNode.FirstNode%2A> </xref:System.Windows.Forms.TreeView.Nodes%2A> 分配到的上述属性之一返回 TreeNode<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>属性以选择在该树节点<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>       可以展开树节点以显示子树节点的下一个级别。 用户可以展开树节点按加号 （+） 如果显示，或者你可以通过调用展开树节点旁 TreeNode，按钮<xref:System.Windows.Forms.TreeNode.Expand%2A>方法。</xref:System.Windows.Forms.TreeNode.Expand%2A> 若要展开中的所有子树节点级别<xref:System.Windows.Forms.TreeNode.Nodes%2A>集合，请调用<xref:System.Windows.Forms.TreeNode.ExpandAll%2A>方法。</xref:System.Windows.Forms.TreeNode.ExpandAll%2A> </xref:System.Windows.Forms.TreeNode.Nodes%2A> 您可以通过调用折叠子树节点级别<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法或用户可以按减号 （-） 按钮旁边 TreeNode，如果一个显示。</xref:System.Windows.Forms.TreeNode.Collapse%2A> 你还可以调用<xref:System.Windows.Forms.TreeNode.Toggle%2A>方法以改变展开和折叠状态之间 TreeNode。</xref:System.Windows.Forms.TreeNode.Toggle%2A>       树节点 （可选） 可以显示一个复选框。 若要显示对应的复选框，设置<xref:System.Windows.Forms.TreeView.CheckBoxes%2A>属性<xref:System.Windows.Forms.TreeView>到`true`。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.CheckBoxes%2A> <xref:System.Windows.Forms.TreeNode.Checked%2A>属性设置为`true`处于选中状态的树节点。</xref:System.Windows.Forms.TreeNode.Checked%2A>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the TreeNode objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_1_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_1_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_1_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))]

      public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Windows.Forms.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/m-system.windows.forms.t_46_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/m-system.windows.forms.t_46_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>带有指定的标签文本的类。"
  remarks: "`text`参数值分配给节点的<xref:System.Windows.Forms.TreeNode.Text%2A>属性并且将成为树节点标签。</xref:System.Windows.Forms.TreeNode.Text%2A>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_17_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_17_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_17_1.cpp)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "标签<xref:System.Windows.Forms.TreeNode.Text*>的新的树节点。</xref:System.Windows.Forms.TreeNode.Text*>"
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>类使用指定的序列化信息和上下文。"
  syntax:
    content: protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> ，其中包含要反序列化类的数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>，包含的源和目标的序列化流。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  id: '#ctor(System.String,System.Windows.Forms.TreeNode[])'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>用指定的标签文本和子树节点的类。"
  remarks: "`text`参数值分配给节点的<xref:System.Windows.Forms.TreeNode.Text%2A>属性并且将成为树节点标签。</xref:System.Windows.Forms.TreeNode.Text%2A> 中包含的树节点`children`数组添加到<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>属性。</xref:System.Windows.Forms.TreeNode.Nodes%2A> </xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/f9da6810-4d20-4683-b032-_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/f9da6810-4d20-4683-b032-_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/f9da6810-4d20-4683-b032-_1.vb)]"
  syntax:
    content: public TreeNode (string text, System.Windows.Forms.TreeNode[] children);
    parameters:
    - id: text
      type: System.String
      description: "标签<xref:System.Windows.Forms.TreeNode.Text*>的新的树节点。</xref:System.Windows.Forms.TreeNode.Text*>"
    - id: children
      type: System.Windows.Forms.TreeNode[]
      description: "子数组<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象。"
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,Int32,Int32)
  nameWithType: TreeNode.TreeNode(String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>具有指定的标签文本和图像的树节点处于选定和未选定状态时显示的类。"
  remarks: "`text`参数值分配给节点的<xref:System.Windows.Forms.TreeNode.Text%2A>属性并且将成为树节点标签。</xref:System.Windows.Forms.TreeNode.Text%2A> `imageIndex`和`selectedImageIndex`有效值的索引值<xref:System.Drawing.Image>存储在<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> </xref:System.Windows.Forms.ImageList> </xref:System.Drawing.Image> 在引用的映像`imageIndex`不在选定树节点时，将显示属性。 同样，在引用的映像`selectedImageIndex`树节点处于选定状态时，将显示属性。"
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/8c41dd24-47e3-4299-bfdf-_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/8c41dd24-47e3-4299-bfdf-_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/8c41dd24-47e3-4299-bfdf-_1.cs)]"
  syntax:
    content: public TreeNode (string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: text
      type: System.String
      description: "标签<xref:System.Windows.Forms.TreeNode.Text*>的新的树节点。</xref:System.Windows.Forms.TreeNode.Text*>"
    - id: imageIndex
      type: System.Int32
      description: "索引值<xref href=&quot;System.Drawing.Image&quot;></xref>若要取消选定的树节点时显示。"
    - id: selectedImageIndex
      type: System.Int32
      description: "索引值<xref href=&quot;System.Drawing.Image&quot;></xref>在选定树节点时显示。"
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  id: '#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,Int32,Int32,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>用指定的标签文本、 子树节点，以及当树节点处于选定和未选定状态时要显示的图像的类。"
  remarks: "`text`参数值分配给节点的<xref:System.Windows.Forms.TreeNode.Text%2A>属性并且将成为树节点标签。</xref:System.Windows.Forms.TreeNode.Text%2A> `imageIndex`和`selectedImageIndex`有效值的索引值<xref:System.Drawing.Image>存储在<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> </xref:System.Windows.Forms.ImageList> </xref:System.Drawing.Image> 在引用的映像`imageIndex`参数未选中树节点时显示。 同样，在引用的映像`selectedImageIndex`参数显示当树节点处于选定状态时。 中包含的树节点`children`数组添加到<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>属性。</xref:System.Windows.Forms.TreeNode.Nodes%2A> </xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/737755cf-fb88-4601-a0bc-_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/737755cf-fb88-4601-a0bc-_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/737755cf-fb88-4601-a0bc-_1.cs)]"
  syntax:
    content: public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);
    parameters:
    - id: text
      type: System.String
      description: "标签<xref:System.Windows.Forms.TreeNode.Text*>的新的树节点。</xref:System.Windows.Forms.TreeNode.Text*>"
    - id: imageIndex
      type: System.Int32
      description: "索引值<xref href=&quot;System.Drawing.Image&quot;></xref>若要取消选定的树节点时显示。"
    - id: selectedImageIndex
      type: System.Int32
      description: "索引值<xref href=&quot;System.Drawing.Image&quot;></xref>在选定树节点时显示。"
    - id: children
      type: System.Windows.Forms.TreeNode[]
      description: "子数组<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象。"
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.BackColor
  id: BackColor
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: BackColor
  nameWithType: TreeNode.BackColor
  fullName: System.Windows.Forms.TreeNode.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置树节点的背景色。"
  remarks: "如果 BackColor 属性设置为<xref:System.Drawing.Color?displayProperty=fullName>、<xref:System.Drawing.Color>使用是<xref:System.Windows.Forms.Control.BackColor%2A>属性值<xref:System.Windows.Forms.TreeView>树节点分配到的控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Drawing.Color> </xref:System.Drawing.Color?displayProperty=fullName>"
  example:
  - "The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its <xref:System.Windows.Forms.TreeNode.Checked%2A> property set to `true` by setting its BackColor property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_251_1.vb)]\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_251_1.cpp)]\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_251_1.cs)]"
  syntax:
    content: public System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "后台<xref href=&quot;System.Drawing.Color&quot;></xref>的树节点。 默认值是<xref href=&quot;System.Drawing.Color&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.BeginEdit
  id: BeginEdit
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: TreeNode.BeginEdit()
  fullName: System.Windows.Forms.TreeNode.BeginEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "启动的树节点标签编辑。"
  remarks: "使用此方法的典型方案是调用在<xref:System.Windows.Forms.MenuItem.Click>事件<xref:System.Windows.Forms.MenuItem>或<xref:System.Windows.Forms.ContextMenu>。</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MenuItem.Click>上      1> [!NOTE]&1;> 当此方法才有效<xref:System.Windows.Forms.TreeView.LabelEdit%2A>属性<xref:System.Windows.Forms.TreeView>设置为`true`。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.LabelEdit%2A> 如果<xref:System.Windows.Forms.TreeView.LabelEdit%2A>设置为`false`、 引发异常，树节点将不处于可编辑状态。</xref:System.Windows.Forms.TreeView.LabelEdit%2A>"
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right-clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_77_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_77_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_77_1.vb)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.BeginEdit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A?displayProperty=fullName&gt;设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。'
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Bounds
  id: Bounds
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Bounds
  nameWithType: TreeNode.Bounds
  fullName: System.Windows.Forms.TreeNode.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取树节点的界限。"
  remarks: "相对于窗口左上角的坐标为<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example changes the size <xref:System.Windows.Forms.TreeNode.NodeFont%2A> to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView> control with a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \n  \n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_227_1.cs)]\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_227_1.cpp)]\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_227_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>表示树节点的边界。"
  overload: System.Windows.Forms.TreeNode.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Checked
  id: Checked
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Windows.Forms.TreeNode.Checked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值树节点是否处于选中状态。"
  remarks: ''
  example:
  - "The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its Checked property set to `true` by setting its <xref:System.Windows.Forms.TreeNode.BackColor%2A> property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_26_1.vb)]\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_26_1.cpp)]\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_26_1.cs)]"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>树节点是否处于选中状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Clone
  id: Clone
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Windows.Forms.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将复制的树节点和取得 root 权限在此树节点处的整个子树。"
  remarks: "复制树状结构从被克隆的树节点和更低版本。 分配给任何子树节点<xref:System.Windows.Forms.TreeNode>被克隆包含在新的树节点和子树。</xref:System.Windows.Forms.TreeNode>       Clone 方法执行节点的浅表副本。 如果值<xref:System.Windows.Forms.TreeNode.Tag%2A>属性都是引用类型，原始和克隆副本将指向相同的单个实例的<xref:System.Windows.Forms.TreeNode.Tag%2A>值。</xref:System.Windows.Forms.TreeNode.Tag%2A> </xref:System.Windows.Forms.TreeNode.Tag%2A>"
  example:
  - "The following code example clones the last child tree node of the last root tree node and inserts the clone as the first root tree node in the `TreeNodeCollection`. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects and a <xref:System.Windows.Forms.Button>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#3](~/add/codesnippet/visualbasic/m-system.windows.forms.t_43_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#3](~/add/codesnippet/csharp/m-system.windows.forms.t_43_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#3](~/add/codesnippet/cpp/m-system.windows.forms.t_43_1.cpp)]"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，表示克隆<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。</xref:System.Object>"
  overload: System.Windows.Forms.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Collapse
  id: Collapse
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Windows.Forms.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "折叠树节点。"
  remarks: "折叠方法折叠当前<xref:System.Windows.Forms.TreeNode>及其子节点。</xref:System.Windows.Forms.TreeNode> 如果你想要只折叠当前<xref:System.Windows.Forms.TreeNode>，使用<xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName>重载，并传入`true`若要忽略及其子节点。</xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName> </xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> 的状态<xref:System.Windows.Forms.TreeNode>保持不变。</xref:System.Windows.Forms.TreeNode> 例如，如果子节点的下一个级别已未处于折叠状态以前，当<xref:System.Windows.Forms.TreeNode.Expand%2A>方法被调用时，子节点中显示其以前扩展状态。</xref:System.Windows.Forms.TreeNode.Expand%2A>"
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the Collapse method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_7_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_7_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_7_1.cpp)]"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  id: Collapse(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Collapse(Boolean)
  nameWithType: TreeNode.Collapse(Boolean)
  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "折叠<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>并可选择折叠及其子级。"
  remarks: "使用折叠方法，并传递`true`，当你想要折叠节点，但在保持展开状态保留及其子节点。"
  syntax:
    content: public void Collapse (bool ignoreChildren);
    parameters:
    - id: ignoreChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>将子节点保留在其当前状态;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>可折叠子节点。"
  overload: System.Windows.Forms.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ContextMenu
  id: ContextMenu
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
  fullName: System.Windows.Forms.TreeNode.ContextMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取与此树节点关联的快捷菜单。"
  remarks: "与树节点关联的快捷菜单的首选的方法是使用<xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A>属性。</xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A>"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }
    return:
      type: System.Windows.Forms.ContextMenu
      description: "<xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>树节点与该键相关联。"
  overload: System.Windows.Forms.TreeNode.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置与此树节点关联的快捷菜单。"
  remarks: "当用户右键单击树节点，将显示的快捷菜单。"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "<xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref>与树节点关联。"
  overload: System.Windows.Forms.TreeNode.ContextMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Deserialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "加载的状态<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>从指定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>。"
  syntax:
    content: protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>描述<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>指示反序列化期间的流的状态。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Windows.Forms.TreeNode.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  id: EndEdit(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: EndEdit(Boolean)
  nameWithType: TreeNode.EndEdit(Boolean)
  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "结束编辑树节点标签。"
  remarks: ''
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_40_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_40_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_40_1.vb)]"
  syntax:
    content: public void EndEdit (bool cancel);
    parameters:
    - id: cancel
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未保存; 编辑树节点标签文本已取消否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.EndEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.EnsureVisible
  id: EnsureVisible
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: EnsureVisible()
  nameWithType: TreeNode.EnsureVisible()
  fullName: System.Windows.Forms.TreeNode.EnsureVisible()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确保树节点是展开树节点和滚动树视图控件，根据需要可见。"
  remarks: "当调用 EnsureVisible 方法时，树将展开，并滚动来确保当前的树节点是在<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>中可见 此方法很有用，如果您要基于特定条件的代码中选择的树节点。 通过选择节点后，请调用此方法，用户可以查看并与所选节点进行交互。      1> [!NOTE]&1;> 如果<xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName>属性设置为的高度的树视图控件，调用此方法具有较大值意外的结果。</xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName>"
  example:
  - "The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_34_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/m-system.windows.forms.t_34_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/m-system.windows.forms.t_34_1.cpp)]"
  syntax:
    content: public void EnsureVisible ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.EnsureVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Expand
  id: Expand
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Windows.Forms.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "展开树节点。"
  remarks: "展开方法会扩展到当前<xref:System.Windows.Forms.TreeNode>下一级节点下。</xref:System.Windows.Forms.TreeNode>      1> [!NOTE]&1;> 的状态<xref:System.Windows.Forms.TreeNode>保持不变。</xref:System.Windows.Forms.TreeNode> 例如，如果没有以前，折叠子节点的下一个级别，调用扩展方法时，子节点中显示其以前扩展状态。"
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the Expand method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_74_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_74_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_74_1.cpp)]"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Windows.Forms.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "展开所有子树节点。"
  remarks: "全部展开方法会扩展到分配的所有子树节点<xref:System.Windows.Forms.TreeNode.Nodes%2A>集合。</xref:System.Windows.Forms.TreeNode.Nodes%2A>      1> [!NOTE]&1;> 的状态<xref:System.Windows.Forms.TreeNode>保持不变。</xref:System.Windows.Forms.TreeNode> 例如，如果子节点的下一个级别已未处于折叠状态以前，当<xref:System.Windows.Forms.TreeNode.Expand%2A>方法被调用时，子节点中显示其以前扩展状态。</xref:System.Windows.Forms.TreeNode.Expand%2A>"
  example:
  - "The following code example expands all the tree nodes in a <xref:System.Windows.Forms.TreeView> control when a <xref:System.Windows.Forms.CheckBox> is checked, and collapses the <xref:System.Windows.Forms.TreeNode.FirstNode%2A> when the <xref:System.Windows.Forms.CheckBox> is cleared. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.CheckBox>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#1](~/add/codesnippet/cpp/m-system.windows.forms.t_38_1.cpp)]\n [!code-cs[TreeNode_ForeColor#1](~/add/codesnippet/csharp/m-system.windows.forms.t_38_1.cs)]\n [!code-vb[TreeNode_ForeColor#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_38_1.vb)]"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FirstNode
  id: FirstNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FirstNode
  nameWithType: TreeNode.FirstNode
  fullName: System.Windows.Forms.TreeNode.FirstNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取树节点集合中的第一个子树节点。"
  remarks: "FirstNode 是第一个子级<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>当前的树节点的属性。</xref:System.Windows.Forms.TreeNode.Nodes%2A> </xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> 如果<xref:System.Windows.Forms.TreeNode>具有不到子树节点，FirstNode 属性返回`null`。</xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_89_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_89_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_89_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode FirstNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "第一个子级<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>中<xref:System.Windows.Forms.TreeNode.Nodes*>集合。</xref:System.Windows.Forms.TreeNode.Nodes*>"
  overload: System.Windows.Forms.TreeNode.FirstNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ForeColor
  nameWithType: TreeNode.ForeColor
  fullName: System.Windows.Forms.TreeNode.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置树节点的前景色。"
  remarks: "如果`null`、<xref:System.Drawing.Color>使用是<xref:System.Windows.Forms.Control.ForeColor%2A>属性值<xref:System.Windows.Forms.TreeView>树节点分配到的控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.Control.ForeColor%2A> </xref:System.Drawing.Color>"
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_178_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_178_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_178_1.vb)]"
  syntax:
    content: public System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "前台<xref href=&quot;System.Drawing.Color&quot;></xref>的树节点。"
  overload: System.Windows.Forms.TreeNode.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  id: FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FromHandle(TreeView,IntPtr)
  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)
  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回具有指定的树节点句柄并分配到指定的树视图控件。"
  remarks: "当一个节点添加到<xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName>集合，<xref:System.Windows.Forms.TreeView>可用节点句柄之前，控件将发送 NM_CUSTOMDRAW 通知。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName> 如果你重写<xref:System.Windows.Forms.Control.WndProc%2A>方法<xref:System.Windows.Forms.TreeView>若要提供自定义绘制到此通知的响应中，应始终检查此方法的返回值`null`尝试访问的节点之前。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.Control.WndProc%2A>"
  example:
  - "The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its <xref:System.Windows.Forms.TreeNode.Handle%2A> property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/0a58bc0d-b346-4d14-af9f-_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/0a58bc0d-b346-4d14-af9f-_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/0a58bc0d-b346-4d14-af9f-_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);
    parameters:
    - id: tree
      type: System.Windows.Forms.TreeView
      description: "<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref> ，其中包含的树节点。"
    - id: handle
      type: System.IntPtr
      description: "树节点的句柄。"
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示分配到指定的树节点<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>与指定句柄的控件。"
  overload: System.Windows.Forms.TreeNode.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FullPath
  id: FullPath
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FullPath
  nameWithType: TreeNode.FullPath
  fullName: System.Windows.Forms.TreeNode.FullPath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取当前的树节点从根树节点的路径。"
  remarks: "路径由必须导航来访问此树节点中，从根树节点开始的所有树节点的标签。 中指定的分隔符分隔节点标签<xref:System.Windows.Forms.TreeView.PathSeparator%2A>属性<xref:System.Windows.Forms.TreeView>包含此节点的控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.PathSeparator%2A> 例如，如果分隔符字符的树视图控件名为&quot;位置&quot;设置为反斜杠字符 (\\\\)，FullPath 属性值是&quot;Country\\Region\\State&quot;。"
  example:
  - "The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/p-system.windows.forms.t_103_1.cpp)]\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/p-system.windows.forms.t_103_1.cs)]\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_103_1.vb)]"
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "当前的树节点中的根树节点路径。"
  overload: System.Windows.Forms.TreeNode.FullPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此节点不包含在<xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  id: GetNodeCount(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: GetNodeCount(Boolean)
  nameWithType: TreeNode.GetNodeCount(Boolean)
  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回子树节点的数。"
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/m-system.windows.forms.t_75_1.cpp)]\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/m-system.windows.forms.t_75_1.cs)]\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_75_1.vb)]"
  syntax:
    content: public int GetNodeCount (bool includeSubTrees);
    parameters:
    - id: includeSubTrees
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在生成的计数包括在此树节点; 处间接取得 root 权限的所有树节点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "分配给子树节点数<xref:System.Windows.Forms.TreeNode.Nodes*>集合。</xref:System.Windows.Forms.TreeNode.Nodes*>"
  overload: System.Windows.Forms.TreeNode.GetNodeCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Handle
  id: Handle
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Handle
  nameWithType: TreeNode.Handle
  fullName: System.Windows.Forms.TreeNode.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取树节点的句柄。"
  remarks: "如果句柄尚未创建引用的句柄属性时，则创建它。"
  example:
  - "The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its Handle property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/p-system.windows.forms.t_268_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/p-system.windows.forms.t_268_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/p-system.windows.forms.t_268_1.vb)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "树节点句柄。"
  overload: System.Windows.Forms.TreeNode.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ImageIndex
  id: ImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
  fullName: System.Windows.Forms.TreeNode.ImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当树节点处于未选中状态时显示的图像的图像列表索引值。"
  remarks: "ImageIndex 值是索引值<xref:System.Drawing.Image>存储在<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> </xref:System.Windows.Forms.ImageList> </xref:System.Drawing.Image>      1> [!NOTE]&1;> ImageIndex 属性的默认值是相同<xref:System.Windows.Forms.TreeView.ImageIndex%2A>属性<xref:System.Windows.Forms.TreeView>控件<xref:System.Windows.Forms.TreeNode>分配给。</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageIndex%2A>       <xref:System.Windows.Forms.TreeNode.ImageKey%2A>和 ImageIndex 属性是互相排斥的方式; 因此，如果将设置一个属性，另一个被忽略。</xref:System.Windows.Forms.TreeNode.ImageKey%2A> 如果你设置<xref:System.Windows.Forms.TreeNode.ImageKey%2A>属性，ImageIndex 属性自动设置为-1。</xref:System.Windows.Forms.TreeNode.ImageKey%2A> 或者，如果你设置 ImageIndex，<xref:System.Windows.Forms.TreeNode.ImageKey%2A>自动设置为一个空字符串 (&quot;&quot;)。</xref:System.Windows.Forms.TreeNode.ImageKey%2A>"
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_272_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_272_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_272_1.cs)]"
  syntax:
    content: public int ImageIndex { get; set; }
    return:
      type: System.Int32
      description: "表示在分配的图像位置的从零开始的索引值<xref href=&quot;System.Windows.Forms.ImageList&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.ImageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ImageKey
  id: ImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ImageKey
  nameWithType: TreeNode.ImageKey
  fullName: System.Windows.Forms.TreeNode.ImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当节点处于未选中状态时与此树节点关联的图像的键。"
  remarks: "此属性返回的映像键包含在<xref:System.Windows.Forms.TreeView.ImageList%2A>属性包含<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       ImageKey 不区分大小写。       ImageKey 和<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>是互相排斥的属性; 如果将设置一个属性，另一个被忽略。</xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 如果设置 ImageKey 属性中，<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>属性自动设置为-1。</xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 或者，如果你设置<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>，ImageKey 自动设置为一个空字符串 (&quot;&quot;)。</xref:System.Windows.Forms.TreeNode.ImageIndex%2A>"
  syntax:
    content: public string ImageKey { get; set; }
    return:
      type: System.String
      description: "当节点处于未选中状态时与此树节点关联的图像的键。"
  overload: System.Windows.Forms.TreeNode.ImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Index
  id: Index
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Index
  nameWithType: TreeNode.Index
  fullName: System.Windows.Forms.TreeNode.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取树节点的树节点集合中的位置。"
  remarks: ''
  example:
  - "The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and Index property values of the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeNode.Parent%2A> property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_120_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_120_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_120_1.vb)]"
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "表示中的树节点的位置的从零开始的索引值<xref:System.Windows.Forms.TreeNode.Nodes*>集合。</xref:System.Windows.Forms.TreeNode.Nodes*>"
  overload: System.Windows.Forms.TreeNode.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsEditing
  id: IsEditing
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsEditing
  nameWithType: TreeNode.IsEditing
  fullName: System.Windows.Forms.TreeNode.IsEditing
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值的树节点是否处于可编辑状态。"
  remarks: ''
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, letting the user edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_7_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_7_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_7_1.vb)]"
  syntax:
    content: public bool IsEditing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>树节点是否处于可编辑状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.IsEditing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsExpanded
  id: IsExpanded
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
  fullName: System.Windows.Forms.TreeNode.IsExpanded
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值的树节点是否处于扩展状态。"
  remarks: ''
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_106_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/p-system.windows.forms.t_106_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/p-system.windows.forms.t_106_1.cpp)]"
  syntax:
    content: public bool IsExpanded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果树节点处于展开状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.IsExpanded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsSelected
  id: IsSelected
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsSelected
  nameWithType: TreeNode.IsSelected
  fullName: System.Windows.Forms.TreeNode.IsSelected
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值的树节点是否处于选定状态。"
  remarks: ''
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> containing several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_224_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_224_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_224_1.cpp)]"
  syntax:
    content: public bool IsSelected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>树节点是否处于选定状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.IsSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsVisible
  id: IsVisible
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsVisible
  nameWithType: TreeNode.IsVisible
  fullName: System.Windows.Forms.TreeNode.IsVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示树节点可见还是部分可见。"
  remarks: ''
  example:
  - "The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_184_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/p-system.windows.forms.t_184_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/p-system.windows.forms.t_184_1.cpp)]"
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>树节点是否可见或部分可见的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.LastNode
  id: LastNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: LastNode
  nameWithType: TreeNode.LastNode
  fullName: System.Windows.Forms.TreeNode.LastNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取最后一个子树节点。"
  remarks: "LastNode 是最后一个子级<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>当前的树节点的属性。</xref:System.Windows.Forms.TreeNode.Nodes%2A> </xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> 如果<xref:System.Windows.Forms.TreeNode>具有不到子树节点，LastNode 属性返回`null`。</xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_169_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_169_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_169_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode LastNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示最后一个子树节点。"
  overload: System.Windows.Forms.TreeNode.LastNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Level
  id: Level
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Level
  nameWithType: TreeNode.Level
  fullName: System.Windows.Forms.TreeNode.Level
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取中的树节点的从零开始的深度<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>控件。"
  remarks: "对于级别的属性中，根节点被视为第一个嵌套的级别，并返回 0。"
  syntax:
    content: public int Level { get; }
    return:
      type: System.Int32
      description: "中的树节点的从零开始的深度<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>控件。"
  overload: System.Windows.Forms.TreeNode.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Name
  id: Name
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Name
  nameWithType: TreeNode.Name
  fullName: System.Windows.Forms.TreeNode.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置树节点的名称。"
  remarks: "<xref:System.Windows.Forms.TreeNode>是还节点的键，节点时的一种<xref:System.Windows.Forms.TreeNodeCollection>。</xref:System.Windows.Forms.TreeNodeCollection>一部分</xref:System.Windows.Forms.TreeNode>a 名称 如果节点没有名称，名称将返回空字符串 (&quot;&quot;)。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它表示树节点的名称。</xref:System.String>"
  overload: System.Windows.Forms.TreeNode.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NextNode
  id: NextNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NextNode
  nameWithType: TreeNode.NextNode
  fullName: System.Windows.Forms.TreeNode.NextNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取下一个同级树节点。"
  remarks: "NextNode 是父级的下一个同级<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>该树节点<xref:System.Windows.Forms.TreeNode>.</xref:System.Windows.Forms.TreeNode>属性</xref:System.Windows.Forms.TreeNode.Nodes%2A></xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode> 如果没有下一步树节点，NextNode 属性返回`null`。"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_51_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_51_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode NextNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示下一个同级树节点。"
  overload: System.Windows.Forms.TreeNode.NextNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NextVisibleNode
  id: NextVisibleNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
  fullName: System.Windows.Forms.TreeNode.NextVisibleNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取下一个可见的树节点。"
  remarks: "NextVisibleNode 可以是子级、 同级控件或从另一个分支的树节点。 如果没有下一步树节点，NextVisibleNode 属性返回`null`。"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_267_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_267_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_267_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode NextVisibleNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示下一个可见的树节点。"
  overload: System.Windows.Forms.TreeNode.NextVisibleNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NodeFont
  id: NodeFont
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NodeFont
  nameWithType: TreeNode.NodeFont
  fullName: System.Windows.Forms.TreeNode.NodeFont
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置用于在树节点标签上显示文本的字体。"
  remarks: "如果`null`、<xref:System.Drawing.Font>使用是<xref:System.Windows.Forms.Control.Font%2A>属性值<xref:System.Windows.Forms.TreeView>此节点附加到的控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.Control.Font%2A> </xref:System.Drawing.Font>      1> [!NOTE]&1;> 如果节点字体大于<xref:System.Windows.Forms.Control.Font%2A>中设置的属性值<xref:System.Windows.Forms.TreeView>剪裁控件，树节点标签文本。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.Control.Font%2A>"
  example:
  - "The following code example changes the size of NodeFont to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \n  \n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_20_1.cs)]\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_20_1.vb)]"
  syntax:
    content: public System.Drawing.Font NodeFont { get; set; }
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>用于在树节点标签上显示文本。"
  overload: System.Windows.Forms.TreeNode.NodeFont*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Nodes
  id: Nodes
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Nodes
  nameWithType: TreeNode.Nodes
  fullName: System.Windows.Forms.TreeNode.Nodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取的集合<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>对象分配给当前的树节点。"
  remarks: "节点属性可以包含其他集合<xref:System.Windows.Forms.TreeNode>对象。</xref:System.Windows.Forms.TreeNode> 每个集合中的树节点有可以包含其自己的节点属性<xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> 此嵌套的树节点可能会使难以导航树状结构。 <xref:System.Windows.Forms.TreeNode.FullPath%2A>属性，则可以更方便地确定你在树中的位置。</xref:System.Windows.Forms.TreeNode.FullPath%2A>"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls named `treeView1` and `treeView2`, and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_107_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_107_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_107_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeCollection Nodes { get; }
    return:
      type: System.Windows.Forms.TreeNodeCollection
      description: "A <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>表示分配给当前的树节点的树节点。"
  overload: System.Windows.Forms.TreeNode.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Parent
  id: Parent
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Windows.Forms.TreeNode.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取当前的树节点的树节点的父级。"
  remarks: "如果在根级别上时的树节点，父属性返回`null`。"
  example:
  - "The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and <xref:System.Windows.Forms.TreeNode.Index%2A> property values of the <xref:System.Windows.Forms.TreeNode> represented by the Parent property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_38_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_38_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_38_1.vb)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Parent { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> ，它表示当前的树节点的父节点。"
  overload: System.Windows.Forms.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.PrevNode
  id: PrevNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: PrevNode
  nameWithType: TreeNode.PrevNode
  fullName: System.Windows.Forms.TreeNode.PrevNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取树节点的上一个同级。"
  remarks: "PrevNode 是父级的上一个同级<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存储在<xref:System.Windows.Forms.TreeNode.Nodes%2A>该树节点<xref:System.Windows.Forms.TreeNode>.</xref:System.Windows.Forms.TreeNode>属性</xref:System.Windows.Forms.TreeNode.Nodes%2A></xref:System.Windows.Forms.TreeNodeCollection></xref:System.Windows.Forms.TreeNode> 如果没有任何以前的树节点，PrevNode 属性返回`null`。"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_237_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_237_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_237_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode PrevNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示上一个同级树节点。"
  overload: System.Windows.Forms.TreeNode.PrevNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode
  id: PrevVisibleNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取上一个可见的树节点。"
  remarks: "PrevVisibleNode 可以是子级、 同级控件或从另一个分支的树节点。 如果没有任何以前的树节点，PrevVisibleNode 属性返回`null`。"
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_203_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_203_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_203_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode PrevVisibleNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>表示的上一个可见的树节点。"
  overload: System.Windows.Forms.TreeNode.PrevVisibleNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Remove
  id: Remove
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Remove()
  nameWithType: TreeNode.Remove()
  fullName: System.Windows.Forms.TreeNode.Remove()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从树视图控件中移除当前的树节点。"
  remarks: "调用删除方法时，树节点中，并分配给<xref:System.Windows.Forms.TreeNode>，从<xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView>删除</xref:System.Windows.Forms.TreeNode>任何子树节点 删除的子节点会从<xref:System.Windows.Forms.TreeView>，但仍会将其附加到此树节点。</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_3_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_3_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_3_1.vb)]"
  syntax:
    content: public void Remove ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex
  id: SelectedImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当树节点处于选定状态时显示的图像的图像列表索引值。"
  remarks: "SelectedImageIndex 值是索引值<xref:System.Drawing.Image>存储在<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> </xref:System.Windows.Forms.ImageList> </xref:System.Drawing.Image>      1> [!NOTE]&1;> SelectedImageIndex 属性的默认值是相同<xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A>属性<xref:System.Windows.Forms.TreeView>控件<xref:System.Windows.Forms.TreeNode>分配给。</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A>"
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> containing a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> containing `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_172_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_172_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_172_1.cs)]"
  syntax:
    content: public int SelectedImageIndex { get; set; }
    return:
      type: System.Int32
      description: "一个从零开始的索引值，表示中的图像位置<xref href=&quot;System.Windows.Forms.ImageList&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.SelectedImageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.SelectedImageKey
  id: SelectedImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
  fullName: System.Windows.Forms.TreeNode.SelectedImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置它为选定状态时，树节点中显示的图像的键。"
  remarks: "此属性返回的映像键包含在<xref:System.Windows.Forms.TreeView.ImageList%2A>的父属性<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public string SelectedImageKey { get; set; }
    return:
      type: System.String
      description: "当树节点处于选定状态时显示的图像的键。"
  overload: System.Windows.Forms.TreeNode.SelectedImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Serialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "保存的状态<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>到指定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>。"
  syntax:
    content: protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>描述<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>指示在序列化过程的流的状态</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Windows.Forms.TreeNode.Serialize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.StateImageIndex
  id: StateImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
  fullName: System.Windows.Forms.TreeNode.StateImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置用于指示的状态的映像索引<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>时父<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>具有其<xref:System.Windows.Forms.TreeView.CheckBoxes*>属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Forms.TreeView.CheckBoxes*>"
  remarks: "中包含此属性返回的图像索引<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父属性<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>       如果父<xref:System.Windows.Forms.TreeView>具有复选框启用，忽略 StateImageIndex 和节点将显示中的第一个或第二个图像<xref:System.Windows.Forms.TreeView.StateImageList%2A>在父上设置<xref:System.Windows.Forms.TreeView>选中或选中状态，以分别指示。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A> </xref:System.Windows.Forms.TreeView> 切换<xref:System.Windows.Forms.TreeNode.Checked%2A>属性不会影响 StateImageIndex 的值。</xref:System.Windows.Forms.TreeNode.Checked%2A>       StateImageIndex 返回-1 时未设置。 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>而 StateImageIndex 属性都是互斥的这意味着如果已设置，另一个被忽略。</xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 如果你设置<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>属性，StateImageIndex 属性自动设置为-1。</xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 或者，如果你设置 StateImageIndex，<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>自动设置为一个空字符串 (&quot;&quot;)。</xref:System.Windows.Forms.TreeNode.StateImageKey%2A>"
  syntax:
    content: public int StateImageIndex { get; set; }
    return:
      type: System.Int32
      description: "用于指示的状态的图像的索引<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.StateImageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的索引小于-1 或大于 14。"
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.StateImageKey
  id: StateImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
  fullName: System.Windows.Forms.TreeNode.StateImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置用于指示的状态的图像的键<xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>时父<xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>具有其<xref:System.Windows.Forms.TreeView.CheckBoxes*>属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Forms.TreeView.CheckBoxes*>"
  remarks: "此属性返回的映像密钥将包含在<xref:System.Windows.Forms.TreeView.StateImageList%2A>的父属性<xref:System.Windows.Forms.TreeView>控件。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>       如果父<xref:System.Windows.Forms.TreeView>具有复选框启用，忽略 StateImageKey 和节点将显示中的第一个或第二个图像<xref:System.Windows.Forms.TreeView.StateImageList%2A>在父上设置<xref:System.Windows.Forms.TreeView>选中或选中状态，以分别指示。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A> </xref:System.Windows.Forms.TreeView> 切换<xref:System.Windows.Forms.TreeNode.Checked%2A>属性不会影响 StateImageKey 的值。</xref:System.Windows.Forms.TreeNode.Checked%2A>       StateImageKey 和<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>属性是互斥的这意味着如果已设置，另一个被忽略。</xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 如果设置 StateImageKey 属性中，<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>属性自动设置为-1。</xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 或者，如果你设置<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>，StateImageKey 自动设置为一个空字符串 (&quot;&quot;)。</xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 你应设置 StateImageKey 为介于 0 和 14 的相应索引的映像。 你可以设置 StateImageKey 为带索引值的图像大于 14 （将不引发异常），但可能不会显示图像"
  syntax:
    content: public string StateImageKey { get; set; }
    return:
      type: System.String
      description: "用于指示的状态的图像的键<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.StateImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "序列化所需的数据，并用其填充序列化信息对象<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> ，其中包含要序列化的数据<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>，包含此序列化的目标信息。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Tag
  id: Tag
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Tag
  nameWithType: TreeNode.Tag
  fullName: System.Windows.Forms.TreeNode.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置包含有关树节点的数据的对象。"
  remarks: "任何<xref:System.Object>派生的类型可以分配给此属性。</xref:System.Object> 如果通过 Windows 窗体设计器设置此属性，可以分配纯文本。      1> [!CAUTION]&1;><xref:System.Windows.Forms.TreeNode.Clone%2A>方法执行节点的浅表副本。</xref:System.Windows.Forms.TreeNode.Clone%2A> 如果标记属性的值是引用类型，则同时原始和克隆副本将指向相同的单个实例的标记值。"
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the Tag property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_222_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_222_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_222_1.vb)]"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>包含有关树节点的数据。</xref:System.Object> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Text
  id: Text
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Windows.Forms.TreeNode.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置树节点的标签中显示的文本。"
  remarks: "最大字符数，<xref:System.Windows.Forms.TreeNode>可以显示是 259。</xref:System.Windows.Forms.TreeNode> 如果<xref:System.String>拥有多于 259 个字符分配给此属性，会显示仅前 259 个字符。</xref:System.String>       用户不能设置此属性，如果<xref:System.Windows.Forms.TreeView.LabelEdit%2A>的父属性<xref:System.Windows.Forms.TreeView>设置为`false`。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.LabelEdit%2A> 显式设置此属性的替代方法是通过使用之一中创建的树节点<xref:System.Windows.Forms.TreeNode.%23ctor%2A>具有表示的文本属性一个字符串参数的构造函数。</xref:System.Windows.Forms.TreeNode.%23ctor%2A> 旁边显示标签<xref:System.Windows.Forms.TreeNode>映像，如果一个显示。</xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_94_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_94_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_94_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "显示的树节点标签中的文本。"
  overload: System.Windows.Forms.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Toggle
  id: Toggle
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Toggle()
  nameWithType: TreeNode.Toggle()
  fullName: System.Windows.Forms.TreeNode.Toggle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "切换为树节点展开或折叠状态。"
  remarks: "树节点将切换到相反的当前状态，请展开或折叠状态。      1> [!NOTE]&1;> 的状态<xref:System.Windows.Forms.TreeNode>保持不变。</xref:System.Windows.Forms.TreeNode> 例如，如果子节点的下一个级别已未处于折叠状态以前，当<xref:System.Windows.Forms.TreeNode.Expand%2A>方法被调用时，子节点中显示其以前扩展状态。</xref:System.Windows.Forms.TreeNode.Expand%2A>"
  example:
  - "The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_28_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_28_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_28_1.vb)]"
  syntax:
    content: public void Toggle ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Toggle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ToolTipText
  id: ToolTipText
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
  fullName: System.Windows.Forms.TreeNode.ToolTipText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当鼠标指针悬停于时显示的文本<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  remarks: "必须设置<xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A>的父属性<xref:System.Windows.Forms.TreeView>到`true`ToolTipText 要在运行时可见的。</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A>       如果<xref:System.Windows.Forms.TreeView>控件具有工具提示，并且还包含<xref:System.Windows.Forms.TreeNode>具有<xref:System.Windows.Forms.ToolTip>，则只<xref:System.Windows.Forms.ToolTip>将显示节点。</xref:System.Windows.Forms.ToolTip> </xref:System.Windows.Forms.ToolTip> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example demonstrates how to use the ToolTipText and <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> properties. To run this example, paste the following code into a Windows Form and call `InitializeTreeViewWithToolTips` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-cs[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/csharp/p-system.windows.forms.t_52_1.cs)]\n [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/visualbasic/p-system.windows.forms.t_52_1.vb)]"
  syntax:
    content: public string ToolTipText { get; set; }
    return:
      type: System.String
      description: "获取当鼠标指针悬停于时显示的文本<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>。"
  overload: System.Windows.Forms.TreeNode.ToolTipText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ToString
  id: ToString
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNode.ToString()
  fullName: System.Windows.Forms.TreeNode.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回表示当前对象的字符串。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示当前对象的字符串。"
  overload: System.Windows.Forms.TreeNode.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.TreeView
  id: TreeView
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeView
  nameWithType: TreeNode.TreeView
  fullName: System.Windows.Forms.TreeNode.TreeView
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取父树节点分配给树视图。"
  remarks: ''
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_40_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_40_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_40_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeView TreeView { get; }
    return:
      type: System.Windows.Forms.TreeView
      description: "A <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>表示树节点的分配对象、 父树视图或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果节点未分配到的树视图。"
  overload: System.Windows.Forms.TreeNode.TreeView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Forms.TreeNode.#ctor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Windows.Forms.TreeNode.TreeNode()
- uid: System.Windows.Forms.TreeNode.#ctor(System.String)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,Int32,Int32)
  nameWithType: TreeNode.TreeNode(String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,Int32,Int32,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
- uid: System.Windows.Forms.TreeNode.BackColor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BackColor
  nameWithType: TreeNode.BackColor
  fullName: System.Windows.Forms.TreeNode.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.TreeNode.BeginEdit
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BeginEdit()
  nameWithType: TreeNode.BeginEdit()
  fullName: System.Windows.Forms.TreeNode.BeginEdit()
- uid: System.Windows.Forms.TreeNode.Bounds
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Bounds
  nameWithType: TreeNode.Bounds
  fullName: System.Windows.Forms.TreeNode.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNode.Checked
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Windows.Forms.TreeNode.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNode.Clone
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Windows.Forms.TreeNode.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.TreeNode.Collapse
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Windows.Forms.TreeNode.Collapse()
- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse(Boolean)
  nameWithType: TreeNode.Collapse(Boolean)
  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)
- uid: System.Windows.Forms.TreeNode.ContextMenu
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
  fullName: System.Windows.Forms.TreeNode.ContextMenu
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Deserialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EndEdit(Boolean)
  nameWithType: TreeNode.EndEdit(Boolean)
  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)
- uid: System.Windows.Forms.TreeNode.EnsureVisible
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EnsureVisible()
  nameWithType: TreeNode.EnsureVisible()
  fullName: System.Windows.Forms.TreeNode.EnsureVisible()
- uid: System.Windows.Forms.TreeNode.Expand
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Windows.Forms.TreeNode.Expand()
- uid: System.Windows.Forms.TreeNode.ExpandAll
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Windows.Forms.TreeNode.ExpandAll()
- uid: System.Windows.Forms.TreeNode.FirstNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FirstNode
  nameWithType: TreeNode.FirstNode
  fullName: System.Windows.Forms.TreeNode.FirstNode
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Windows.Forms.TreeNode.ForeColor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ForeColor
  nameWithType: TreeNode.ForeColor
  fullName: System.Windows.Forms.TreeNode.ForeColor
- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FromHandle(TreeView,IntPtr)
  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)
  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)
- uid: System.Windows.Forms.TreeView
  parent: System.Windows.Forms
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Windows.Forms.TreeView
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.TreeNode.FullPath
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FullPath
  nameWithType: TreeNode.FullPath
  fullName: System.Windows.Forms.TreeNode.FullPath
- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: GetNodeCount(Boolean)
  nameWithType: TreeNode.GetNodeCount(Boolean)
  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)
- uid: System.Windows.Forms.TreeNode.Handle
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Handle
  nameWithType: TreeNode.Handle
  fullName: System.Windows.Forms.TreeNode.Handle
- uid: System.Windows.Forms.TreeNode.ImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
  fullName: System.Windows.Forms.TreeNode.ImageIndex
- uid: System.Windows.Forms.TreeNode.ImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageKey
  nameWithType: TreeNode.ImageKey
  fullName: System.Windows.Forms.TreeNode.ImageKey
- uid: System.Windows.Forms.TreeNode.Index
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Index
  nameWithType: TreeNode.Index
  fullName: System.Windows.Forms.TreeNode.Index
- uid: System.Windows.Forms.TreeNode.IsEditing
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsEditing
  nameWithType: TreeNode.IsEditing
  fullName: System.Windows.Forms.TreeNode.IsEditing
- uid: System.Windows.Forms.TreeNode.IsExpanded
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
  fullName: System.Windows.Forms.TreeNode.IsExpanded
- uid: System.Windows.Forms.TreeNode.IsSelected
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsSelected
  nameWithType: TreeNode.IsSelected
  fullName: System.Windows.Forms.TreeNode.IsSelected
- uid: System.Windows.Forms.TreeNode.IsVisible
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsVisible
  nameWithType: TreeNode.IsVisible
  fullName: System.Windows.Forms.TreeNode.IsVisible
- uid: System.Windows.Forms.TreeNode.LastNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: LastNode
  nameWithType: TreeNode.LastNode
  fullName: System.Windows.Forms.TreeNode.LastNode
- uid: System.Windows.Forms.TreeNode.Level
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Level
  nameWithType: TreeNode.Level
  fullName: System.Windows.Forms.TreeNode.Level
- uid: System.Windows.Forms.TreeNode.Name
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Name
  nameWithType: TreeNode.Name
  fullName: System.Windows.Forms.TreeNode.Name
- uid: System.Windows.Forms.TreeNode.NextNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextNode
  nameWithType: TreeNode.NextNode
  fullName: System.Windows.Forms.TreeNode.NextNode
- uid: System.Windows.Forms.TreeNode.NextVisibleNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
  fullName: System.Windows.Forms.TreeNode.NextVisibleNode
- uid: System.Windows.Forms.TreeNode.NodeFont
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NodeFont
  nameWithType: TreeNode.NodeFont
  fullName: System.Windows.Forms.TreeNode.NodeFont
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.TreeNode.Nodes
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Nodes
  nameWithType: TreeNode.Nodes
  fullName: System.Windows.Forms.TreeNode.Nodes
- uid: System.Windows.Forms.TreeNodeCollection
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
- uid: System.Windows.Forms.TreeNode.Parent
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Windows.Forms.TreeNode.Parent
- uid: System.Windows.Forms.TreeNode.PrevNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevNode
  nameWithType: TreeNode.PrevNode
  fullName: System.Windows.Forms.TreeNode.PrevNode
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode
- uid: System.Windows.Forms.TreeNode.Remove
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Remove()
  nameWithType: TreeNode.Remove()
  fullName: System.Windows.Forms.TreeNode.Remove()
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex
- uid: System.Windows.Forms.TreeNode.SelectedImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
  fullName: System.Windows.Forms.TreeNode.SelectedImageKey
- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Serialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.StateImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
  fullName: System.Windows.Forms.TreeNode.StateImageIndex
- uid: System.Windows.Forms.TreeNode.StateImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
  fullName: System.Windows.Forms.TreeNode.StateImageKey
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.Tag
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Tag
  nameWithType: TreeNode.Tag
  fullName: System.Windows.Forms.TreeNode.Tag
- uid: System.Windows.Forms.TreeNode.Text
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Windows.Forms.TreeNode.Text
- uid: System.Windows.Forms.TreeNode.Toggle
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Toggle()
  nameWithType: TreeNode.Toggle()
  fullName: System.Windows.Forms.TreeNode.Toggle()
- uid: System.Windows.Forms.TreeNode.ToolTipText
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
  fullName: System.Windows.Forms.TreeNode.ToolTipText
- uid: System.Windows.Forms.TreeNode.ToString
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToString()
  nameWithType: TreeNode.ToString()
  fullName: System.Windows.Forms.TreeNode.ToString()
- uid: System.Windows.Forms.TreeNode.TreeView
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeView
  nameWithType: TreeNode.TreeView
  fullName: System.Windows.Forms.TreeNode.TreeView
- uid: System.Windows.Forms.TreeNode.#ctor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Windows.Forms.TreeNode.BackColor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BackColor
  nameWithType: TreeNode.BackColor
- uid: System.Windows.Forms.TreeNode.BeginEdit*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BeginEdit
  nameWithType: TreeNode.BeginEdit
- uid: System.Windows.Forms.TreeNode.Bounds*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Bounds
  nameWithType: TreeNode.Bounds
- uid: System.Windows.Forms.TreeNode.Checked*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Windows.Forms.TreeNode.Clone*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Windows.Forms.TreeNode.Collapse*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Windows.Forms.TreeNode.ContextMenu*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
- uid: System.Windows.Forms.TreeNode.Deserialize*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Deserialize
  nameWithType: TreeNode.Deserialize
- uid: System.Windows.Forms.TreeNode.EndEdit*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EndEdit
  nameWithType: TreeNode.EndEdit
- uid: System.Windows.Forms.TreeNode.EnsureVisible*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EnsureVisible
  nameWithType: TreeNode.EnsureVisible
- uid: System.Windows.Forms.TreeNode.Expand*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Windows.Forms.TreeNode.ExpandAll*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Windows.Forms.TreeNode.FirstNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FirstNode
  nameWithType: TreeNode.FirstNode
- uid: System.Windows.Forms.TreeNode.ForeColor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ForeColor
  nameWithType: TreeNode.ForeColor
- uid: System.Windows.Forms.TreeNode.FromHandle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FromHandle
  nameWithType: TreeNode.FromHandle
- uid: System.Windows.Forms.TreeNode.FullPath*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FullPath
  nameWithType: TreeNode.FullPath
- uid: System.Windows.Forms.TreeNode.GetNodeCount*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: GetNodeCount
  nameWithType: TreeNode.GetNodeCount
- uid: System.Windows.Forms.TreeNode.Handle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Handle
  nameWithType: TreeNode.Handle
- uid: System.Windows.Forms.TreeNode.ImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
- uid: System.Windows.Forms.TreeNode.ImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageKey
  nameWithType: TreeNode.ImageKey
- uid: System.Windows.Forms.TreeNode.Index*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Index
  nameWithType: TreeNode.Index
- uid: System.Windows.Forms.TreeNode.IsEditing*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsEditing
  nameWithType: TreeNode.IsEditing
- uid: System.Windows.Forms.TreeNode.IsExpanded*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
- uid: System.Windows.Forms.TreeNode.IsSelected*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsSelected
  nameWithType: TreeNode.IsSelected
- uid: System.Windows.Forms.TreeNode.IsVisible*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsVisible
  nameWithType: TreeNode.IsVisible
- uid: System.Windows.Forms.TreeNode.LastNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: LastNode
  nameWithType: TreeNode.LastNode
- uid: System.Windows.Forms.TreeNode.Level*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Level
  nameWithType: TreeNode.Level
- uid: System.Windows.Forms.TreeNode.Name*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Name
  nameWithType: TreeNode.Name
- uid: System.Windows.Forms.TreeNode.NextNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextNode
  nameWithType: TreeNode.NextNode
- uid: System.Windows.Forms.TreeNode.NextVisibleNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
- uid: System.Windows.Forms.TreeNode.NodeFont*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NodeFont
  nameWithType: TreeNode.NodeFont
- uid: System.Windows.Forms.TreeNode.Nodes*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Nodes
  nameWithType: TreeNode.Nodes
- uid: System.Windows.Forms.TreeNode.Parent*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Windows.Forms.TreeNode.PrevNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevNode
  nameWithType: TreeNode.PrevNode
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
- uid: System.Windows.Forms.TreeNode.Remove*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Remove
  nameWithType: TreeNode.Remove
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
- uid: System.Windows.Forms.TreeNode.SelectedImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
- uid: System.Windows.Forms.TreeNode.Serialize*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Serialize
  nameWithType: TreeNode.Serialize
- uid: System.Windows.Forms.TreeNode.StateImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
- uid: System.Windows.Forms.TreeNode.StateImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Windows.Forms.TreeNode.Tag*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Tag
  nameWithType: TreeNode.Tag
- uid: System.Windows.Forms.TreeNode.Text*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Windows.Forms.TreeNode.Toggle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Toggle
  nameWithType: TreeNode.Toggle
- uid: System.Windows.Forms.TreeNode.ToolTipText*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
- uid: System.Windows.Forms.TreeNode.ToString*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToString
  nameWithType: TreeNode.ToString
- uid: System.Windows.Forms.TreeNode.TreeView*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeView
  nameWithType: TreeNode.TreeView
