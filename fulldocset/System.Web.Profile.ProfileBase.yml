### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileBase
  id: ProfileBase
  children:
  - System.Web.Profile.ProfileBase.#ctor
  - System.Web.Profile.ProfileBase.Create(System.String)
  - System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  - System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  - System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.IsAnonymous
  - System.Web.Profile.ProfileBase.IsDirty
  - System.Web.Profile.ProfileBase.Item(System.String)
  - System.Web.Profile.ProfileBase.LastActivityDate
  - System.Web.Profile.ProfileBase.LastUpdatedDate
  - System.Web.Profile.ProfileBase.Properties
  - System.Web.Profile.ProfileBase.Save
  - System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  - System.Web.Profile.ProfileBase.UserName
  langs:
  - csharp
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
  type: Class
  summary: "提供对配置文件属性值和信息的非类型化的访问。"
  remarks: "ASP.NET 使用 ProfileBase 类来创建用户配置文件使用的类。 ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自 ProfileBase 类。 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>ProfileBase 方法基类，以检索和设置配置文件属性值分别。</xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 实例`ProfileCommon`类设置的值为<xref:System.Web.HttpContext.Profile%2A>ASP.NET 应用程序的属性。</xref:System.Web.HttpContext.Profile%2A>       若要创建 ASP.NET 应用程序中的用户配置文件的实例，建议你使用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following code example shows a Web.config file that specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\" >  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"RecentSearchList\"  \n          type=\"System.Collections.Specialized.StringCollection\"  \n          serializeAs=\"Xml\"  \n          allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. Before attempting to run this code, set the provider to the default `AspNetSqlProvider` in the ASP.NET configuration settings for the Web site.  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_1.aspx)]  \n  \n The following code example defines a class that inherits from the ProfileBase class to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_2.cs)]\n [!code-vb[System.Web.Profile.ProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_2.vb)]"
  syntax:
    content: 'public class ProfileBase : System.Configuration.SettingsBase'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements: []
  inheritedMembers:
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "创建的实例<xref href=&quot;System.Web.Profile.ProfileBase&quot;></xref>类。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</xref:System.Web.Profile.ProfileBase> ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法<xref:System.Web.Profile.ProfileBase>基类，以检索和设置配置文件属性值分别。</xref:System.Web.Profile.ProfileBase> </xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 实例`ProfileCommon`类设置的值为<xref:System.Web.HttpContext.Profile%2A>ASP.NET 应用程序的属性。</xref:System.Web.HttpContext.Profile%2A>      1> [!NOTE]&1;> 用于生成存储中的类的基类<xref:System.Web.HttpContext.Profile%2A>可以使用重写属性`inherits`节的配置文件的属性。</xref:System.Web.HttpContext.Profile%2A> 在这种情况下将指定的自定义类继承自<xref:System.Web.Profile.ProfileBase>基的类。</xref:System.Web.Profile.ProfileBase>       此构造函数不是应用程序代码中使用。 若要创建的用户配置文件的实例，使用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following Web.config file specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n   <connectionStrings>  \n       <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n   </connectionStrings>  \n  \n  <system.web>  \n   <anonymousIdentification enabled=\"true\" />  \n  \n   <profile defaultProvider=\"SqlProvider\" >  \n     <providers>  \n       <add  \n         name=\"SqlProvider\"  \n         connectionStringName=\"SqlServices\"  \n         applicationName=\"ProfileBaseApplication\"  \n         type=\"System.Web.Profile.SqlProfileProvider\" />  \n     </providers>  \n  \n     <properties>  \n       <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n       <add name=\"RecentSearchList\"  \n            type=\"System.Collections.Specialized.StringCollection\"  \n            serializeAs=\"Xml\"  \n            allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n   </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the `ZipCode` property specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_1_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public ProfileBase ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.#ctor*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref>特性的 Web.config 文件的部分是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法创建 Web.config 文件的部分中指定的属性类型。       -或- <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>的元素的属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       -或- <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>和<> *1> 属性指定<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。      -使用指定的提供程序名称<xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;></xref>中找不到配置文件属性的属性<> *1> 集合。       -或- <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>为找不到配置文件属性指定。       -或-配置文件属性指定在基类中指定的属性名称匹配的名称包含<xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;></xref>节的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  id: Create(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "由 ASP.NET 用于创建指定的用户名称的配置文件的实例。"
  remarks: "Create 方法创建和初始化新的配置文件实例并且适用于应用程序使用自定义配置文件对象或管理在非 ASP.NET 环境中的用户配置文件。       Create 方法的此重载假定指定的用户名称是已验证的用户。"
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_2_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/csharp/m-system.web.profile.pro_2_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username);
    parameters:
    - id: username
      type: System.String
      description: "要创建的配置文件的用户名称。"
    return:
      type: System.Web.Profile.ProfileBase
      description: "<xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> ，表示指定的用户配置文件。"
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref>特性的 Web.config 文件的部分是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当前的托管权限级别是小于<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法创建 Web.config 文件的部分中指定的属性类型。       -或- <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>的元素的属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       -或- <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>和<> *1> 属性指定<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。      -使用指定的提供程序名称<xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;></xref>中找不到配置文件属性的属性<> *1> 集合。       -或- <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>为找不到配置文件属性指定。       -或-配置文件属性指定在基类中指定的属性名称匹配的名称包含<xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;></xref>节的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "由 ASP.NET 用于创建指定的用户名称的配置文件的实例。 采用一个参数，指示用户是否已经过身份验证或匿名。"
  remarks: "Create 方法创建和初始化新的配置文件实例并且适用于应用程序使用自定义配置文件对象或管理在非 ASP.NET 环境中的用户配置文件。       Create 方法的此重载可用于创建某个已经过身份验证的用户或匿名用户的配置文件。"
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/visualbasic/m-system.web.profile.pro_9_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/csharp/m-system.web.profile.pro_9_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "要创建的配置文件的用户名称。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示用户进行身份验证;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指示用户是匿名的。"
    return:
      type: System.Web.Profile.ProfileBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref>对象，表示指定的用户的配置文件。"
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref>特性的 Web.config 文件的部分是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当前的托管权限级别是小于<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法创建 Web.config 文件的部分中指定的属性类型。       -或- <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>的元素的属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       -或- <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>和<> *1> 属性指定<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。      -使用指定的提供程序名称<xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;></xref>中找不到配置文件属性的属性<> *1> 集合。       -或- <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>为找不到配置文件属性指定。       -或-配置文件属性指定在基类中指定的属性名称匹配的名称包含<xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;></xref>节的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  id: GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取一组由一个组名称的属性。"
  remarks: "配置文件属性可以分为组，以便更好地组织。 GetProfileGroup 属性可以用于检索一组属性按组名称。 此外可以通过指定组名称作为的成员访问组中的配置文件属性`Profile`每页上提供的属性。 例如，`ZipCode`配置文件是的成员的属性`Address`无法使用访问配置文件组`Profile.Address.ZipCode`。"
  example:
  - "The following Web.config file specifies a user profile that contains group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name. For example, `Profile.Address.Street`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_5_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "属性组的名称。"
    return:
      type: System.Web.Profile.ProfileGroupBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileGroupBase&quot;> </xref>一组配置为具有指定的组名称的属性的对象。"
  overload: System.Web.Profile.ProfileBase.GetProfileGroup*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "在配置部分中找不到指定的配置文件属性组名称。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取配置文件属性的值。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</xref:System.Web.Profile.ProfileBase> ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 强类型化访问器`ProfileCommon`类调用 GetPropertyValue 方法，以检索从非类型化的值<xref:System.Web.Profile.ProfileProvider>，生成的访问器，然后强制转换为指定类型和返回作为属性值。</xref:System.Web.Profile.ProfileProvider>       GetPropertyValue 方法可用于按名称检索你的应用程序的用户配置文件的属性值。 返回的值都是非类型化，并且必须强制转换为检索时的特定对象类型。 对于配置文件属性值的强类型访问，你可以属性按名称访问为每一页上提供的配置文件属性的成员等`Profile.CustomerAddress`。"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_10_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_10_1.aspx)]"
  syntax:
    content: public object GetPropertyValue (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "配置文件属性的名称。"
    return:
      type: System.Object
      description: "指定的配置文件属性值，该值类型化为<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileBase.GetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "尝试将属性值设置为匿名配置文件，该属性的<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "没有为当前配置文件定义属性。       -或者-当前配置文件中不存在指定的配置文件属性名称。       -或者-的提供程序指定的配置文件属性不能识别指定的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  id: Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "初始化的配置文件属性值和当前用户的信息。"
  remarks: "此方法不应在代码中使用。 使用之一<xref:System.Web.Profile.ProfileBase.Create%2A>重载来创建用户配置文件的实例。</xref:System.Web.Profile.ProfileBase.Create%2A>"
  syntax:
    content: public void Initialize (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "要初始化的配置文件的用户名称。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示用户进行身份验证;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指示用户是匿名的。"
  overload: System.Web.Profile.ProfileBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  id: IsAnonymous
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取一个值，该值指示用户配置文件是否为匿名用户。"
  remarks: "使用配置部分启用匿名访问的用户配置文件和`allowAnonymous`用于指定配置文件属性的配置元素的属性。"
  syntax:
    content: public bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户配置文件适用于匿名用户;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileBase.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsDirty
  id: IsDirty
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取一个值，该值指示是否已修改的任何配置文件属性。"
  remarks: "IsDirty 属性可由配置文件提供程序期间<xref:System.Configuration.SettingsBase.Save%2A>方法来确定属性是否组成基元类型、 字符串或<xref:System.DateTime>对象已更改。</xref:System.DateTime> </xref:System.Configuration.SettingsBase.Save%2A> 更改的属性然后更新配置文件提供者在<xref:System.Configuration.SettingsBase.Save%2A>方法。</xref:System.Configuration.SettingsBase.Save%2A> <xref:System.Configuration.SettingsBase.Save%2A>自动在调用方法的末尾页执行如果<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性是`true`调用的配置文件提供<xref:System.Configuration.SettingsBase.Save%2A>方法显式无法确定与自定义类类型或复杂类型，例如集合、 配置文件属性是否已更改。</xref:System.Configuration.SettingsBase.Save%2A> </xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Configuration.SettingsBase.Save%2A> 你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件可确定是否已修改的自定义对象，并可继续使用自动保存已修改的对象还是要取消自动保存，如果任何对象进行了不修改。</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> 默认行为<xref:System.Web.Profile.ProfileBase>类是将 IsDirty 属性设置为`true`访问属性的自定义或复杂类型的第一次属性。</xref:System.Web.Profile.ProfileBase>"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果任何配置文件属性进行了修改;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileBase.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取或设置按属性名称进行索引的配置文件属性值。"
  remarks: "此属性可用于检索或按名称设置为你的应用程序的用户配置文件的属性值。 返回的值被类型化为`object`并且必须强制转换为检索时的特定对象类型。 对于配置文件属性值的强类型访问，你可以访问属性按名称作为的成员`Profile`属性可在每个页面，例如， `Profile.CustomerAddress`。"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the Item collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_3_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "配置文件属性的名称。"
    return:
      type: System.Object
      description: "指定的配置文件属性值，该值类型化为<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileBase.Item*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "尝试将属性值设置为匿名配置文件，该属性的<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "没有为当前配置文件定义属性。       -或者-当前配置文件中不存在指定的配置文件属性名称。       -或者-的提供程序指定的配置文件属性不能识别指定的属性。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "尝试将被标记为一个属性值设置为只读的。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "尝试将值分配给使用不兼容的类型的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  id: LastActivityDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取最新的日期和时间，该配置文件已读取或修改。"
  remarks: "此属性的值只能由默认配置文件提供程序进行修改。 由提供程序不是默认配置文件提供程序对配置文件属性所做的更改不影响 LastActivityDate 属性的值。"
  syntax:
    content: public DateTime LastActivityDate { get; }
    return:
      type: System.DateTime
      description: "最新的日期和时间，该配置文件已读取或修改默认提供程序。"
  overload: System.Web.Profile.ProfileBase.LastActivityDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  id: LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取最新的日期和修改配置文件的时间。"
  remarks: "此属性的值只能由默认配置文件提供程序进行修改。 由提供程序不是默认配置文件提供程序对配置文件属性所做的更改不影响 LastUpdatedDate 属性的值。"
  syntax:
    content: public DateTime LastUpdatedDate { get; }
    return:
      type: System.DateTime
      description: "最新的日期和时间配置文件修改了默认的提供程序。"
  overload: System.Web.Profile.ProfileBase.LastUpdatedDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Properties
  id: Properties
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取的集合<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>配置文件中的每个属性的对象。"
  remarks: "此属性可用于获取有关配置应用程序，包括属性名称和类型的配置文件属性的信息。 你还可以引用<xref:System.Web.Profile.ProfileProvider>每个属性。</xref:System.Web.Profile.ProfileProvider> A<xref:System.Web.Profile.ProfileProvider>管理存储和检索的数据源的属性值。</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static Properties collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_2_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_2_1.aspx)]"
  syntax:
    content: public static System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>的<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>应用程序的配置文件中的每个属性的对象。"
  overload: System.Web.Profile.ProfileBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法创建 Web.config 文件的部分中指定的属性类型。       -或- <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>的元素的属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       -或- <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性 Web.config 文件的部分中的属性将设置为<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>和<> *1> 属性指定<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。      -使用指定的提供程序名称<xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;></xref>中找不到配置文件属性的属性<> *1> 集合。       -或- <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>为找不到配置文件属性指定。       -或-配置文件属性指定在基类中指定的属性名称匹配的名称包含<xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;></xref>节的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Save
  id: Save
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "使用已更改的配置文件属性值更新配置文件数据源。"
  remarks: "Save 方法修改配置文件将属性值写入到数据源。 配置文件提供程序执行更新可减少的数据源中的活动数量时，才<xref:System.Web.Profile.ProfileBase.IsDirty%2A>属性设置为`true`。</xref:System.Web.Profile.ProfileBase.IsDirty%2A> 这是默认<xref:System.Web.Profile.SqlProfileProvider>.</xref:System.Web.Profile.SqlProfileProvider>这种情况 Save 方法已保存到数据源中的属性值后<xref:System.Web.Profile.ProfileBase.IsDirty%2A>设置为`false`。</xref:System.Web.Profile.ProfileBase.IsDirty%2A>       你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件实现自定义逻辑，用于确定是否已修改与自定义的类型或复杂类型的配置文件属性和继续自动保存已修改的对象或取消自动保存，如果任何对象进行了不修改。</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "设置配置文件属性的值。"
  remarks: "ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</xref:System.Web.Profile.ProfileBase> ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 强类型化访问器`ProfileCommon`类调用 SetPropertyValue 方法，以便传递到的属性值<xref:System.Web.Profile.ProfileProvider>要存储在数据源。</xref:System.Web.Profile.ProfileProvider>       SetPropertyValue 方法可用于按名称为你的应用程序分配用户配置文件中的属性值。 值为非类型化，并在运行时，不是编译时将执行类型检查。 对于配置文件属性值的强类型访问，你可以访问属性按名称作为的成员`Profile`属性可在每一页上，例如， `Profile.CustomerAddress`。"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public void SetPropertyValue (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "要设置的属性名称。"
    - id: propertyValue
      type: System.Object
      description: "要分配给属性的值。"
  overload: System.Web.Profile.ProfileBase.SetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "尝试将属性值设置为匿名配置文件，该属性的<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "没有为当前配置文件定义属性。       -或者-当前配置文件中不存在指定的配置文件属性名称。       -或者-的提供程序指定的配置文件属性不能识别指定的属性。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "尝试将被标记为只读属性上设置的值。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "尝试将值分配给使用不兼容的类型的属性。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.UserName
  id: UserName
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取配置文件的用户名称。"
  remarks: "UserName 属性返回的身份验证的用户配置文件关联的名称或如果分配到配置文件的匿名用户标识符<xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>属性是`true`。</xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>       使用配置部分启用匿名访问的用户配置文件和`allowAnonymous`用于指定配置文件属性的配置元素的属性。"
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "该配置文件或分配到配置文件的匿名用户标识符的用户名称。"
  overload: System.Web.Profile.ProfileBase.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Web.Profile.ProfileBase.#ctor
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
- uid: System.Web.Profile.ProfileGroupBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase
  fullName: System.Web.Profile.ProfileGroupBase
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Web.Profile.ProfileBase.Save
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
- uid: System.Web.Profile.ProfileBase.UserName
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
- uid: System.Web.Profile.ProfileBase.#ctor*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase.ProfileBase
- uid: System.Web.Profile.ProfileBase.Create*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create
  nameWithType: ProfileBase.Create
- uid: System.Web.Profile.ProfileBase.GetProfileGroup*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup
  nameWithType: ProfileBase.GetProfileGroup
- uid: System.Web.Profile.ProfileBase.GetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProfileBase.GetPropertyValue
- uid: System.Web.Profile.ProfileBase.Initialize*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize
  nameWithType: ProfileBase.Initialize
- uid: System.Web.Profile.ProfileBase.IsAnonymous*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item
  nameWithType: ProfileBase.Item
- uid: System.Web.Profile.ProfileBase.LastActivityDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
- uid: System.Web.Profile.ProfileBase.Save*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save
  nameWithType: ProfileBase.Save
- uid: System.Web.Profile.ProfileBase.SetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue
  nameWithType: ProfileBase.SetPropertyValue
- uid: System.Web.Profile.ProfileBase.UserName*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
