### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeaderAttribute
  id: SoapHeaderAttribute
  children:
  - System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  - System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  - System.Web.Services.Protocols.SoapHeaderAttribute.Required
  langs:
  - csharp
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute
  type: Class
  summary: "此特性应用于 XML Web 服务方法或 XML Web 服务客户端指定的 XML Web service 方法或 XML Web 服务客户端可以处理的 SOAP 标头。 此类不能被继承。"
  remarks: "基本步骤为接收和处理的 SOAP 标头是︰ 1。  创建派生自的类<xref:System.Web.Services.Protocols.SoapHeader>表示数据的 SOAP 标头中传递。</xref:System.Web.Services.Protocols.SoapHeader>      2.  将成员添加到 XML Web 服务类或在步骤 1 中创建的类型的 XML Web 服务客户端代理类。      3.  应用于 XML Web service 方法或在代理类中，指定在步骤 2 中创建的成员的对应方法的 SoapHeaderAttribute<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>      4.  在 XML Web service 方法或 XML Web 服务客户端代码中，访问<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性来处理的 SOAP 标头中发送的数据。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>       有关更多详细信息，请参阅<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method requires the client to invoke the XML Web service method with this <xref:System.Web.Services.Protocols.SoapHeader>. The `Hello` XML Web service also catches any SOAP headers other than `MyHeader`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class SoapHeaderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Protocols.SoapHeaderAttribute&quot;></xref>类，设置表示 SOAP 标头内容的 XML Web 服务类的成员。"
  remarks: "XML Web 服务客户端或 XML Web 服务可以指定它想要处理针对特定的 XML Web 服务方法通过将应用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>到的 XML Web 服务类中的 XML Web 服务方法或代理类中的相应方法</xref:System.Web.Services.Protocols.SoapHeaderAttribute>的 SOAP 标头 在要接收的 SOAP 标头的内容的 XML Web 服务方法的顺序，成员添加到的<xref:System.Type>从<xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader>派生</xref:System.Type>的 XML Web 服务类 同样，XML Web 服务客户端将成员添加到从<xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader>派生的代理类 <xref:System.Type>派生从<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 标头的内容并且在创建 XML Web 服务或想要接收的 SOAP 标头的 XML Web 服务客户端的开发人员。</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> 创建类后,<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以应用于 XML Web service 方法或 XML Web 服务客户端代理类后缀中与内容要接收的 SOAP 标头的成员的对应方法`memberName`此构造函数参数或<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> </xref:System.Web.Services.Protocols.SoapHeaderAttribute>       XML Web 服务方法可以通过将多个成员添加到的 XML Web 服务类或 XML Web 服务代理类并将其反过来应用多个接收多个 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>属性指向 XML Web service 方法。</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       若要接收并在编写 XML Web 服务处理未知的 SOAP 标头，指定<xref:System.Type>要为任一<xref:System.Web.Services.Protocols.SoapUnknownHeader>、<xref:System.Web.Services.Protocols.SoapHeader>或的任一类数组</xref:System.Web.Services.Protocols.SoapHeader></xref:System.Web.Services.Protocols.SoapUnknownHeader>的成员</xref:System.Type>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_3_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_3_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_3_1.vb)]"
  syntax:
    content: public SoapHeaderAttribute (string memberName);
    parameters:
    - id: memberName
      type: System.String
      description: "表示 SOAP 标头内容的 XML Web 服务类的成员。 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>属性将设置为此参数的值。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  id: Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置是否适用于 XML Web 服务和 / 或 XML Web 服务客户端的 SOAP 标头。"
  remarks: ''
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies that `MyHeader` must be sent to the XML Web service method and the client to invocate the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_71_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_71_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_71_1.vb)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapHeaderDirection
      description: "SOAP 标头的目标接收方。 默认值是<xref href=&quot;System.Web.Services.Protocols.SoapHeaderDirection&quot;> </xref>，这意味着的目标接收方是只是 XML Web 服务。"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  id: MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置表示 SOAP 标头内容的 XML Web 服务类的成员。"
  remarks: "XML Web 服务或 XML Web 服务客户端可以指定它想要通过将应用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>到的 XML Web 服务类中的 XML Web 服务方法或代理类中的相应方法</xref:System.Web.Services.Protocols.SoapHeaderAttribute>处理的 SOAP 标头 在要接收的 SOAP 标头的内容的 XML Web 服务方法的顺序，成员添加到从<xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader>派生的类型的 XML Web 服务类 同样，XML Web 服务客户端将成员添加到从<xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader>派生的代理类 <xref:System.Type>派生从<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 标头的内容并且在创建 XML Web 服务或想要接收的 SOAP 标头的 XML Web 服务客户端的开发人员。</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> 创建类后,<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以应用于 XML Web service 方法或指定要接收与成员名属性的 SOAP 标头内容的成员的 XML Web 服务客户端代理类中的相应方法。</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       XML Web 服务方法可以通过将多个成员添加到的 XML Web 服务类或 XML Web 服务代理类并将其反过来应用多个接收多个 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>属性指向 XML Web service 方法。</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       若要接收并在编写 XML Web 服务处理未知的 SOAP 标头，指定要为任一<xref:System.Web.Services.Protocols.SoapUnknownHeader>、<xref:System.Web.Services.Protocols.SoapHeader>或的任一类数组</xref:System.Web.Services.Protocols.SoapHeader></xref:System.Web.Services.Protocols.SoapUnknownHeader>的成员类型"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the MemberName property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_28_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_28_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_28_1.vb)]"
  syntax:
    content: public string MemberName { get; set; }
    return:
      type: System.String
      description: "表示 SOAP 标头内容的 XML Web 服务类的成员。 没有默认值。"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  id: Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "此成员已过时，并没有任何功能。"
  remarks: "若要验证是否 SOAP 标头会发送到 XML Web 服务，确认成员中指定<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性是`null`。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> 如果它是`null`，未发送的 SOAP 标头。       在.NET Framework SDK 1.0 版中，所需的属性指示是否必须理解并由接收方 XML Web 服务或 XML Web 服务客户端处理的 SOAP 标头。 如果接收方未处理的 SOAP 标头已引发异常。"
  syntax:
    content: public bool Required { get; set; }
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>值。</xref:System.Boolean>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderDirection
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapHeaderDirection
  nameWithType: SoapHeaderDirection
  fullName: System.Web.Services.Protocols.SoapHeaderDirection
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
