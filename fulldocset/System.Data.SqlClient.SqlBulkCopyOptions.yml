### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  id: SqlBulkCopyOptions
  children:
  - System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications
  - System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  - System.Data.SqlClient.SqlBulkCopyOptions.Default
  - System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  - System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  - System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  - System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  - System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  langs:
  - csharp
  name: SqlBulkCopyOptions
  nameWithType: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
  type: Enum
  summary: "指定要使用的实例的一个或多个选项的按位标志<xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref>。"
  remarks: "在构造时，可以使用 SqlBulkCopyOptions 枚举<xref:System.Data.SqlClient.SqlBulkCopy>要更改实例如何<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>为该实例的方法的行为。</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> </xref:System.Data.SqlClient.SqlBulkCopy>"
  example:
  - "The following console application demonstrates how to perform a bulk load that copies the value in the identity column of the source table to the corresponding column in the destination table, instead of generating a new value for each row's identity column.  \n  \n To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty. All rows load from the source. Next, run the sample again without emptying the table. An exception is thrown, and the code writes a message to the console window notifying you that rows were not added because of primary key violations.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.KeepIdentity#1](~/add/codesnippet/csharp/t-system.data.sqlclient._5_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._5_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      public enum SqlBulkCopyOptions
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications
  id: AllowEncryptedValueModifications
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: AllowEncryptedValueModifications
  nameWithType: SqlBulkCopyOptions.AllowEncryptedValueModifications
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "如果指定，**AllowEncryptedValueModifications**启用的表或数据库之间的加密数据而无需解密数据的大容量复制。 通常情况下，应用程序可以不解密 （应用程序将连接到数据库与列加密设置关键字设置为禁用） 的数据从一个表中的加密列选择数据，然后将使用此选项大容量插入仍然为加密的数据。 有关详细信息，请参阅[始终加密](https://msdn.microsoft.com/library/mt163865.aspx)。       指定时要格外小心**AllowEncryptedValueModifications**这可能会导致损坏数据库，因为该驱动程序不会检查是否确实已加密数据，或者如果正确加密与目标列中使用的相同的加密类型、 算法和密钥。"
  syntax:
    content: AllowEncryptedValueModifications
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  id: CheckConstraints
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: CheckConstraints
  nameWithType: SqlBulkCopyOptions.CheckConstraints
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "插入数据时，请检查约束。 默认情况下，不会检查约束。"
  syntax:
    content: CheckConstraints
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.Default
  id: Default
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: Default
  nameWithType: SqlBulkCopyOptions.Default
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.Default
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "使用所有选项默认值。"
  syntax:
    content: Default
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  id: FireTriggers
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: FireTriggers
  nameWithType: SqlBulkCopyOptions.FireTriggers
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "如果指定，导致服务器激发插入触发器，从而插入到数据库的行。"
  syntax:
    content: FireTriggers
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  id: KeepIdentity
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: KeepIdentity
  nameWithType: SqlBulkCopyOptions.KeepIdentity
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "保留源标识值。 如果未指定，由目标分配标识值。"
  syntax:
    content: KeepIdentity
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  id: KeepNulls
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: KeepNulls
  nameWithType: SqlBulkCopyOptions.KeepNulls
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "保留目标表而不考虑默认值的设置中的 null 值。 如果未指定，null 值将替换为默认值 （如果适用）。"
  syntax:
    content: KeepNulls
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  id: TableLock
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: TableLock
  nameWithType: SqlBulkCopyOptions.TableLock
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "大容量复制操作期间获取大容量更新锁。 如果未指定，则使用行锁定。"
  syntax:
    content: TableLock
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  id: UseInternalTransaction
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  name: UseInternalTransaction
  nameWithType: SqlBulkCopyOptions.UseInternalTransaction
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "如果指定，每批批量复制操作将在事务内发生。 如果指示此选项，并且还提供<xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>到构造函数中，对象<xref:System.ArgumentException>发生。</xref:System.ArgumentException>"
  syntax:
    content: UseInternalTransaction
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: AllowEncryptedValueModifications
  nameWithType: SqlBulkCopyOptions.AllowEncryptedValueModifications
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyOptions
  nameWithType: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
- uid: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: CheckConstraints
  nameWithType: SqlBulkCopyOptions.CheckConstraints
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
- uid: System.Data.SqlClient.SqlBulkCopyOptions.Default
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: Default
  nameWithType: SqlBulkCopyOptions.Default
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.Default
- uid: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: FireTriggers
  nameWithType: SqlBulkCopyOptions.FireTriggers
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: KeepIdentity
  nameWithType: SqlBulkCopyOptions.KeepIdentity
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: KeepNulls
  nameWithType: SqlBulkCopyOptions.KeepNulls
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
- uid: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: TableLock
  nameWithType: SqlBulkCopyOptions.TableLock
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
- uid: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  isExternal: false
  name: UseInternalTransaction
  nameWithType: SqlBulkCopyOptions.UseInternalTransaction
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
