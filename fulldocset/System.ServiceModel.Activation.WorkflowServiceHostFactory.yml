### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory
  id: WorkflowServiceHostFactory
  children:
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  langs:
  - csharp
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory
  type: Class
  summary: "提供的实例的工厂<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>的托管宿主的环境而主机实例以响应传入消息动态创建。"
  remarks: "支持动态激活的托管宿主环境是 Internet 信息服务 (IIS) 和 Windows 进程激活服务 (WAS)。       如果已实现的自定义派生<xref:System.ServiceModel.WorkflowServiceHost>，还应考虑实现派生自 WorkflowServiceHostFactory 类工厂</xref:System.ServiceModel.WorkflowServiceHost>       如果已实现的自定义派生<xref:System.ServiceModel.ServiceHostBase>，然后还应考虑实现派生从工厂的工厂<xref:System.ServiceModel.Activation.ServiceHostFactoryBase>直接。</xref:System.ServiceModel.Activation.ServiceHostFactoryBase> </xref:System.ServiceModel.ServiceHostBase>"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Activation.WorkflowServiceHostFactory&quot;></xref>类。"
  syntax:
    content: public WorkflowServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "创建<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>从包含文件名称的工作流标记文件或工作流服务类型的类型名称和指定的服务的基址的字符串。"
  remarks: "`constructorString`参数可能是一个完全限定的工作流类型名，也无法工作流定义文件的相对文件路径在中声明的.svc 文件中的<xref:System.ServiceModel.Activation.ServiceHostFactory>指令。</xref:System.ServiceModel.Activation.ServiceHostFactory>      1> [!NOTE]&1;> 若要将规则定义与工作流定义关联，扩展名为.rules 工作流定义文件相同名称来命名规则定义文件，并将其放在与工作流定义文件相同的目录中。 例如，规则定义文件 CalculatorServiceWorkflow.rules 必须与 CalculatorServiceWorkflow.xoml 位于同一目录中。"
  example:
  - "The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow\" %>  \n```  \n  \n The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow.xoml\" %>  \n```"
  syntax:
    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: "定义工作流服务或工作流服务类型的类型名称的工作流标记文件的文件名。"
    - id: baseAddresses
      type: System.Uri[]
      description: "类型的数组<xref:System.Uri>，其中包含所承载服务的基址。</xref:System.Uri>"
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "A <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>与工作流服务关联的对象。 默认实现返回<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>具有指定基址的对象。"
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost
