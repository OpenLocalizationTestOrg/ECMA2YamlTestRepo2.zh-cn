### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCredential
  id: SqlCredential
  children:
  - System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  - System.Data.SqlClient.SqlCredential.Password
  - System.Data.SqlClient.SqlCredential.UserId
  langs:
  - csharp
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
  type: Class
  summary: "SqlCredential 提供更安全的方式来指定登录名尝试使用密码[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]身份验证。       SqlCredential 组成的用户 id 和密码，将用于[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]身份验证。 SqlCredential 对象中的密码属于类型<xref href=&quot;System.Security.SecureString&quot;> </xref>。       SqlCredential 不能被继承。       Windows 身份验证 (<xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;></xref>) 保持登录到的最安全方法[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]数据库。"
  remarks: "使用<xref:System.Data.SqlClient.SqlConnection.Credential%2A>要获取或设置连接的 SqlCredential 对象。</xref:System.Data.SqlClient.SqlConnection.Credential%2A> 使用<xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A>更改 SqlCredential 对象的密码。</xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> 有关 SqlCredential 对象如何影响连接池行为的信息，请参阅[SQL Server 连接池 (ADO.NET)](~/add/includes/ajax-current-ext-md.md)。       <xref:System.InvalidOperationException>将引发异常，如果在与任何以下连接字符串关键字的连接中使用的非 null SqlCredential 对象:- `Integrated Security = true`       -    `Password`       -    `User ID`       -    `Context Connection = true`下面的示例连接到[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]数据库使用<xref:System.Data.SqlClient.SqlConnection.Credential%2A>: ```   // change connection string in the APP.CONFIG file   <connectionStrings>     <add name=&quot;MyConnString&quot;          connectionString=&quot;Initial Catalog=myDB;Server=myServer&quot;          providerName=&quot;System.Data.SqlClient&quot; />   </connectionStrings>      // then use the following snippet:   using System.Configuration;      System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();   System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();      Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);   ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];      using (SqlConnection conn = new SqlConnection(connString.ConnectionString))   {   SecureString pwd = txtPwd.SecurePassword;   pwd.MakeReadOnly();   SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);   conn.Credential = cred;   conn.Open();   ``` </xref:System.Data.SqlClient.SqlConnection.Credential%2A> </xref:System.InvalidOperationException>"
  syntax:
    content: public sealed class SqlCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: SqlCredential(String,SecureString)
  nameWithType: SqlCredential.SqlCredential(String,SecureString)
  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "创建类型的对象<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref>。"
  remarks: "构造函数不接受 null 参数。 A<xref:System.String.Empty>允许值。</xref:System.String.Empty> 尝试将 null 值参数传递的构造函数中将引发<xref:System.ArgumentNullException>异常。</xref:System.ArgumentNullException>"
  syntax:
    content: public SqlCredential (string userId, System.Security.SecureString password);
    parameters:
    - id: userId
      type: System.String
      description: "用户 id 中。"
    - id: password
      type: System.Security.SecureString
      description: "密码，则为<xref href=&quot;System.Security.SecureString&quot;> </xref>值标记为只读。  传递读/写<xref href=&quot;System.Security.SecureString&quot;></xref>参数将引发<xref:System.ArgumentException>.</xref:System.ArgumentException>"
  overload: System.Data.SqlClient.SqlCredential.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.Password
  id: Password
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: Password
  nameWithType: SqlCredential.Password
  fullName: System.Data.SqlClient.SqlCredential.Password
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "返回的密码组件<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref>对象。"
  syntax:
    content: public System.Security.SecureString Password { get; }
    return:
      type: System.Security.SecureString
      description: "返回的密码组件<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref>对象。"
  overload: System.Data.SqlClient.SqlCredential.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.UserId
  id: UserId
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: UserId
  nameWithType: SqlCredential.UserId
  fullName: System.Data.SqlClient.SqlCredential.UserId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "返回的用户 ID 组件<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref>对象。"
  syntax:
    content: public string UserId { get; }
    return:
      type: System.String
      description: "返回的用户 ID 组件<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref>对象..."
  overload: System.Data.SqlClient.SqlCredential.UserId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: SqlCredential(String,SecureString)
  nameWithType: SqlCredential.SqlCredential(String,SecureString)
  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlCredential.Password
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: Password
  nameWithType: SqlCredential.Password
  fullName: System.Data.SqlClient.SqlCredential.Password
- uid: System.Data.SqlClient.SqlCredential.UserId
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: UserId
  nameWithType: SqlCredential.UserId
  fullName: System.Data.SqlClient.SqlCredential.UserId
- uid: System.Data.SqlClient.SqlCredential.#ctor*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential.SqlCredential
- uid: System.Data.SqlClient.SqlCredential.Password*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: Password
  nameWithType: SqlCredential.Password
- uid: System.Data.SqlClient.SqlCredential.UserId*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: UserId
  nameWithType: SqlCredential.UserId
