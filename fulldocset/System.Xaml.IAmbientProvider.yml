### YamlMime:ManagedReference
items:
- uid: System.Xaml.IAmbientProvider
  id: IAmbientProvider
  children:
  - System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])
  - System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  - System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  - System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])
  - System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  langs:
  - csharp
  name: IAmbientProvider
  nameWithType: IAmbientProvider
  fullName: System.Xaml.IAmbientProvider
  type: Interface
  summary: "表示一种服务，可以返回有关环境属性或类型转换器和标记扩展的环境类型的信息项。"
  remarks: "此接口表示服务类型转换器和标记扩展的环境属性标识符获取 XAML 类型系统可帮助 (<xref:System.Xaml.XamlMember>对象)。</xref:System.Xaml.XamlMember> 服务还可以从类获取环境的属性值。 类型也可以是环境;使用该类型作为其值的任何成员应视为环境。       此服务通常通过调用返回<xref:System.IServiceProvider.GetService%2A>，针对特定于上下文的服务提供商。</xref:System.IServiceProvider.GetService%2A> 服务提供程序是普遍适用于需要它，如值转换器执行代码的上下文。 有关详细信息，请参阅[类型转换器和 XAML 的标记扩展](~/add/includes/ajax-current-ext-md.md)和[可供类型转换器和标记扩展的上下文服务](~/add/includes/ajax-current-ext-md.md)。      ## 有关环境属性环境属性是其属性值应为可供类型转换器和存在的标记扩展用法，XAML 节点结构中和从其创建的对象图中的属性。 这是适用于 XAML 处理器在加载路径的对象编写阶段或保存的序列化阶段期间路径。       在加载路径的情况下，环境属性值可能会影响在 XAML 节点结构中其下存在其他属性的对象图中的值。 当处理为 XAML 节点流，环境概念意味着环境属性值必须是可供类型转换器和标记扩展`StartObject`到`EndObject`。 同样，使用的类型转换器于保存路径可以使用环境的属性和其值的知识。 因此，生成的 XAML 是更好的往返过程表示形式。       成员一般情况下，XAML 未指定对象的成员必须处理的顺序。 但是，任何环境属性值都必须处理第一次 XAML 读取器，以便其他属性中包含的类型转换器和标记扩展用法可以通过 IAmbientProvider 服务访问它。       <xref:System.Xaml.XamlMember.DependsOn%2A>是一个类似的概念，也会影响 XAML 节点处理顺序。</xref:System.Xaml.XamlMember.DependsOn%2A> 但是，<xref:System.Xaml.XamlMember.DependsOn%2A>仅用于对等成员和节点关系; 它不能影响所有后代。</xref:System.Xaml.XamlMember.DependsOn%2A> 此外，<xref:System.Xaml.XamlMember.DependsOn%2A>直接影响对象关系图属性设置; 而环境技术依赖于类型转换器或标记扩展。</xref:System.Xaml.XamlMember.DependsOn%2A> 在环境的技术中，还必须特定的类型转换器或标记扩展定义，以指定应如何解释并应用于对象的环境属性值。      ## WPF 使用情况说明中所示的环境属性方案[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]功能集<xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>，这可以限定必要的属性名称查找有关其他值。</xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> 在此情况下，<xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>值限定<xref:System.Windows.Setter.Property%2A?displayProperty=fullName>位于它。 下的 XAML 节点中的值</xref:System.Windows.Setter.Property%2A?displayProperty=fullName></xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> <xref:System.Windows.Setter.Property%2A?displayProperty=fullName>用于一种<xref:System.Windows.DependencyProperty>。</xref:System.Windows.DependencyProperty>类型转换器行为</xref:System.Windows.Setter.Property%2A?displayProperty=fullName> 此行为活动访问环境<xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>值通过查询<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>程序是可供类型转换器和标记扩展的服务上下文中。</xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> </xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>       如下所示的 WPF 功能集的环境类型方案为<xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary>具有<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>属性，它可以包含其他<xref:System.Windows.ResourceDictionary>对象，若要合并和预期的资源解析顺序合并的方案不冲突的使用类型的加载顺序。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A></xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary>适用<xref:System.Windows.Markup.AmbientAttribute>以便 XAML 处理器可以正确处理的合并字典中的引用`StaticResource`用法。</xref:System.Windows.Markup.AmbientAttribute></xref:System.Windows.ResourceDictionary> 具体而言，`StaticResource`是标记扩展，调用<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>"
  syntax:
    content: public interface IAmbientProvider
  implements: []
  platform:
  - net462
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])
  id: GetAllAmbientValues(System.Xaml.XamlType[])
  parent: System.Xaml.IAmbientProvider
  langs:
  - csharp
  name: GetAllAmbientValues(XamlType[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(XamlType[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(XamlType[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返回可能的环境类型，针对请求的类型的对象实例的可枚举集合。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<object> GetAllAmbientValues (System.Xaml.XamlType[] types);
    parameters:
    - id: types
      type: System.Xaml.XamlType[]
      description: "要从中检索环境类型信息的类型集。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "表示请求集的值的对象的可枚举集<xref href=&quot;System.Xaml.XamlType&quot;></xref>标识符。"
  overload: System.Xaml.IAmbientProvider.GetAllAmbientValues*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  id: GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  langs:
  - csharp
  name: GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返回请求的属性集的环境属性信息项的可枚举集合。"
  remarks: "每个<xref:System.Xaml.AmbientPropertyValue>返回包含<xref:System.Xaml.XamlMember>标识符和属性值。</xref:System.Xaml.XamlMember> </xref:System.Xaml.AmbientPropertyValue>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Xaml.AmbientPropertyValue> GetAllAmbientValues (System.Collections.Generic.IEnumerable<System.Xaml.XamlType> ceilingTypes, System.Xaml.XamlMember[] properties);
    parameters:
    - id: ceilingTypes
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlType}
      description: "指定应停止计算为遇到向上遍历对象图中的一个或多个类型。 此类型包含所需的环境属性。 May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: properties
      type: System.Xaml.XamlMember[]
      description: "指定一个或多个标识的属性视为环境的属性标识符对象。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.AmbientPropertyValue}
      description: "请求的属性集的环境属性信息项的可枚举集合。 每个属性信息<xref href=&quot;System.Xaml.AmbientPropertyValue&quot;></xref>返回将与一种输入<code> properties </code>。"
  overload: System.Xaml.IAmbientProvider.GetAllAmbientValues*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  id: GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  langs:
  - csharp
  name: GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返回的类型和属性所请求集的环境属性信息项的可枚举集合。"
  remarks: "Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.  \n  \n This particular GetAllAmbientValues overload can search for ambient types and ambient properties in the same pass through a tree. Using this overload results in an ordering of items in the return value that is different from [GetAllAmbientValues(IEnumerable\\<XamlType>, XamlMember\\[\\])](assetId:///M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])?qualifyHint=False&autoUpgrade=False) or [GetAllAmbientValues(XamlType\\[\\])](assetId:///M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])?qualifyHint=False&autoUpgrade=False).  \n  \n This overload also permits the search to not use any saved context. The [GetAllAmbientValues(IEnumerable\\<XamlType>, XamlMember\\[\\])](assetId:///M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])?qualifyHint=False&autoUpgrade=False) or [GetAllAmbientValues(XamlType\\[\\])](assetId:///M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])?qualifyHint=False&autoUpgrade=False) overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`). The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML. In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Xaml.AmbientPropertyValue> GetAllAmbientValues (System.Collections.Generic.IEnumerable<System.Xaml.XamlType> ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable<System.Xaml.XamlType> types, System.Xaml.XamlMember[] properties);
    parameters:
    - id: ceilingTypes
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlType}
      description: "指定应停止计算为遇到向上遍历对象图中的一个或多个类型。 此类型包含所需的环境属性。 May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: searchLiveStackOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要在不使用已保存的上下文;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>使用已保存的上下文。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 请参阅备注。"
    - id: types
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlType}
      description: "要添加。"
    - id: properties
      type: System.Xaml.XamlMember[]
      description: "指定一个或多个标识的属性视为环境的属性标识符对象。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.AmbientPropertyValue}
      description: "针对所请求的类型和属性的环境属性信息项的可枚举集合。 每个属性信息<xref href=&quot;System.Xaml.AmbientPropertyValue&quot;></xref>返回将与一种输入<code> types </code>或<code> properties </code>。"
  overload: System.Xaml.IAmbientProvider.GetAllAmbientValues*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])
  id: GetFirstAmbientValue(System.Xaml.XamlType[])
  parent: System.Xaml.IAmbientProvider
  langs:
  - csharp
  name: GetFirstAmbientValue(XamlType[])
  nameWithType: IAmbientProvider.GetFirstAmbientValue(XamlType[])
  fullName: System.Xaml.IAmbientProvider.GetFirstAmbientValue(XamlType[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返回是请求的类型的可能环境类型的第一个匹配对象。"
  syntax:
    content: public object GetFirstAmbientValue (System.Xaml.XamlType[] types);
    parameters:
    - id: types
      type: System.Xaml.XamlType[]
      description: "要从中检索环境类型信息的类型集。"
    return:
      type: System.Object
      description: "所请求集的的第一个结果对象。"
  overload: System.Xaml.IAmbientProvider.GetFirstAmbientValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  id: GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  langs:
  - csharp
  name: GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "从请求的属性，基于第一次遇到哪个属性集返回单个环境的属性信息项。"
  remarks: "每个<xref:System.Xaml.AmbientPropertyValue>返回包含<xref:System.Xaml.XamlMember>标识符和属性值。</xref:System.Xaml.XamlMember> </xref:System.Xaml.AmbientPropertyValue>"
  syntax:
    content: public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable<System.Xaml.XamlType> ceilingTypes, System.Xaml.XamlMember[] properties);
    parameters:
    - id: ceilingTypes
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlType}
      description: "指定应停止计算为遇到向上遍历对象图中的一个或多个类型。 此类型包含所需的环境属性。"
    - id: properties
      type: System.Xaml.XamlMember[]
      description: "指定标识要将其视为环境的属性的一个或多个对象。"
    return:
      type: System.Xaml.AmbientPropertyValue
      description: "从第一个环境属性值的单个环境的属性信息项<code> properties </code>找到的列表。"
  overload: System.Xaml.IAmbientProvider.GetFirstAmbientValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetAllAmbientValues(XamlType[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(XamlType[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(XamlType[])
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType[]
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType[]
  spec.csharp:
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,XamlMember[])
- uid: System.Collections.Generic.IEnumerable{System.Xaml.AmbientPropertyValue}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<AmbientPropertyValue>
  nameWithType: IEnumerable<AmbientPropertyValue>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.AmbientPropertyValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.AmbientPropertyValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.AmbientPropertyValue
    name: AmbientPropertyValue
    nameWithType: AmbientPropertyValue
    fullName: AmbientPropertyValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlType>
  nameWithType: IEnumerable<XamlType>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember[]
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember[]
  spec.csharp:
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetAllAmbientValues(IEnumerable<XamlType>,Boolean,IEnumerable<XamlType>,XamlMember[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetFirstAmbientValue(XamlType[])
  nameWithType: IAmbientProvider.GetFirstAmbientValue(XamlType[])
  fullName: System.Xaml.IAmbientProvider.GetFirstAmbientValue(XamlType[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
  nameWithType: IAmbientProvider.GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
  fullName: System.Xaml.IAmbientProvider.GetFirstAmbientValue(IEnumerable<XamlType>,XamlMember[])
- uid: System.Xaml.AmbientPropertyValue
  parent: System.Xaml
  isExternal: false
  name: AmbientPropertyValue
  nameWithType: AmbientPropertyValue
  fullName: System.Xaml.AmbientPropertyValue
- uid: System.Xaml.IAmbientProvider.GetAllAmbientValues*
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetAllAmbientValues
  nameWithType: IAmbientProvider.GetAllAmbientValues
- uid: System.Xaml.IAmbientProvider.GetFirstAmbientValue*
  parent: System.Xaml.IAmbientProvider
  isExternal: false
  name: GetFirstAmbientValue
  nameWithType: IAmbientProvider.GetFirstAmbientValue
