### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommandBuilder
  id: OdbcCommandBuilder
  children:
  - System.Data.Odbc.OdbcCommandBuilder.#ctor
  - System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  - System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  langs:
  - csharp
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder
  fullName: System.Data.Odbc.OdbcCommandBuilder
  type: Class
  summary: "自动生成用于协调对所做更改的单表命令<xref href=&quot;System.Data.DataSet&quot;></xref>与关联的数据源。 此类不能被继承。"
  remarks: "<xref:System.Data.Odbc.OdbcDataAdapter>不会自动生成所需进行对帐对所做更改的 SQL 语句<xref:System.Data.DataSet>与数据源关联。</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter> 但是，你可以在其中创建 OdbcCommandBuilder 对象，它通过设置<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性的<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>生成单表更新的 SQL 语句 OdbcCommandBuilder 然后生成未设置任何其他 SQL 语句。       之间的关系<xref:System.Data.Odbc.OdbcDataAdapter>和其相应 OdbcCommandBuilder 始终是一对一。</xref:System.Data.Odbc.OdbcDataAdapter> 若要创建这种对应关系，你可以设置<xref:System.Data.Odbc.OdbcDataAdapter>OdbcCommandBuilder 对象属性。</xref:System.Data.Odbc.OdbcDataAdapter> 这将导致 OdbcCommandBuilder 将自身注册为侦听器，它将产生的<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>影响<xref:System.Data.DataSet>.</xref:System.Data.DataSet>的事件</xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>的输出       若要生成 INSERT、 UPDATE 或 DELETE 语句，OdbcCommandBuilder 使用<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性，以检索所需的元数据集。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 如果你更改的值<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>元数据进行检索，如第一次更新，然后，你应调用后<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法来更新元数据。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>      1> [!NOTE]&1;> 如果 SELECT 语句分配给<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性使用别名列名称，生成的 INSERT、 UPDATE 和 DELETE 语句可能不准确或失败。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 如果基础的 ODBC 驱动程序无法提供别名列名称的相应的基列名称 (使用 SQL_DESC_BASE_COLUMN_NAME 值`SQLColAttribute`)，无法生成 INSERT、 UPDATE 和 DELETE 语句中使用的别名。 例如，Microsoft ODBC Driver for Oracle 返回的别名名称作为基列名称。 因此，生成的 INSERT、 UPDATE 和 DELETE 语句可能会导致错误。       OdbcCommandBuilder 还使用<xref:System.Data.Odbc.OdbcCommand.Connection%2A>， <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>，和<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性引用的<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> 用户应调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改一个或多个这些属性，或如果的值<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>更改属性本身。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>， <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>属性保留其以前的值。</xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>       如果调用<xref:System.ComponentModel.Component.Dispose%2A>，与关联被断开 OdbcCommandBuilder <xref:System.Data.Odbc.OdbcDataAdapter>，并且不再使用所生成的命令。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OdbcCommandBuilder.  \n  \n [!code-cs[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: 'public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>类。"
  remarks: "基构造函数初始化为其默认值的所有字段。"
  syntax:
    content: public OdbcCommandBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  id: '#ctor(System.Data.Odbc.OdbcDataAdapter)'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>使用关联的类<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>对象。"
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>将自己注册为侦听器<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>由生成的事件<xref:System.Data.Odbc.OdbcDataAdapter>此属性中指定。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       当你创建的新实例<xref:System.Data.Odbc.OdbcCommandBuilder>，任何现有<xref:System.Data.Odbc.OdbcCommandBuilder>与此关联<xref:System.Data.Odbc.OdbcDataAdapter>发布。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>要与此关联对象<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "要添加。"
    - id: datarow
      type: System.Data.DataRow
      description: "要添加。"
    - id: statementType
      type: System.Data.StatementType
      description: "要添加。"
    - id: whereClause
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>此对象<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>对象将生成 SQL 语句。"
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>将自己注册为侦听器<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>由生成的事件<xref:System.Data.Odbc.OdbcDataAdapter>此属性中指定。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       当你创建的新实例<xref:System.Data.Odbc.OdbcCommandBuilder>，任何现有<xref:System.Data.Odbc.OdbcCommandBuilder>与此关联<xref:System.Data.Odbc.OdbcDataAdapter>发布。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>与此关联的对象<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  id: DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "从存储过程中指定检索参数信息<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>并填充<xref:System.Data.Odbc.OdbcCommand.Parameters*>的指定集合<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>对象。</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  remarks: "DeriveParameters 覆盖<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>任何现有参数信息       DeriveParameters 需要额外调用数据源以获取信息。 如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。       你可以仅 DeriveParameters 使用存储过程。 你无法使用 DeriveParameters 填充<xref:System.Data.Odbc.OdbcParameterCollection>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</xref:System.Data.Odbc.OdbcParameterCollection>"
  syntax:
    content: public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);
    parameters:
    - id: command
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>引用存储的过程是派生参数信息。 派生的参数添加到<xref:System.Data.Odbc.OdbcCommand.Parameters*>集合<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>。</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  overload: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基础的 ODBC 驱动程序不支持返回存储的过程的参数信息，或命令文本不是有效的存储的过程名称，或<xref href=&quot;System.Data.CommandType&quot;></xref>指定未<xref uid=&quot;langword_csharp_CommandType.StoredProcedure&quot; name=&quot;CommandType.StoredProcedure&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行删除操作的数据源所需的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetDeleteCommand 方法，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand>       你还可以用作 GetDeleteCommand 修改命令的基础。 例如，你可能会调用 GetDeleteCommand 和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，GetDeleteCommand 将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetDeleteCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行删除操作的数据源所需的对象。"
  remarks: "你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       你还可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 例如，你可能在其中调用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.Odbc.OdbcCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Odbc.OdbcCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行数据源中的插入所需的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetInsertCommand 方法，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand>       你还可以用作 GetInsertCommand 修改命令的基础。 例如，你可能会调用 GetInsertCommand 和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，GetInsertCommand 仍将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetInsertCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行数据源中的插入所需的对象。"
  remarks: "你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       你还可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 例如，你可能在其中调用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Common.DbCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行数据源中的更新所需的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetUpdateCommand 方法，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand>       你还可以用作 GetUpdateCommand 修改命令的基础。 例如，你可能会调用 GetUpdateCommand 和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，GetUpdateCommand 仍将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetUpdateCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行数据源中的更新所需的对象。"
  remarks: "你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Odbc.OdbcCommand>要执行对象。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       你还可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 例如，你可能在其中调用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       当首次生成 SQL 语句后，你必须明确地调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Common.DbCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自动生成<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符的形式。 这包括正确转义任何在标识符中嵌入的引号。"
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "原始不带引号的标识符。"
    return:
      type: System.String
      description: "带引号的标识符的版本。 正确转义标识符中嵌入的引号。"
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符的形式。 这包括正确转义任何在标识符中嵌入的引号。"
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "原始不带引号的标识符。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "当连接传递时，会导致以从 ODBC 驱动程序，调用 SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR) 获取引号字符的托管的包装。 当没有连接传递时，字符串括在引号中的值使用<> *1> 和<> *1>。"
    return:
      type: System.String
      description: "带引号的标识符的版本。 正确转义标识符中嵌入的引号。"
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "提供了带引号的标识符，返回该标识符，包括正确的正确却未加引号的形式非转义在标识符中任何嵌入的引号。"
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "将已删除其嵌入的引号的标识符。"
    return:
      type: System.String
      description: "不带引号的标识符，使用嵌入的引号未正确转义。"
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "提供了带引号的标识符，返回该标识符，包括正确的正确却未加引号的形式非转义在标识符中任何嵌入的引号。"
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "将已删除其嵌入的引号的标识符。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "The <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
    return:
      type: System.String
      description: "不带引号的标识符，使用嵌入的引号未正确转义。"
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
- uid: System.Data.Odbc.OdbcDataAdapter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OdbcCommandBuilder.DeriveParameters
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OdbcCommandBuilder.GetDeleteCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OdbcCommandBuilder.GetInsertCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OdbcCommandBuilder.GetParameterName
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OdbcCommandBuilder.GetUpdateCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OdbcCommandBuilder.QuoteIdentifier
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier
