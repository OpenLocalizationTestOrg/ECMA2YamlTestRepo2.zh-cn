### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACng
  id: RSACng
  children:
  - System.Security.Cryptography.RSACng.#ctor
  - System.Security.Cryptography.RSACng.#ctor(System.Int32)
  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACng.Key
  - System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACng.SignatureAlgorithm
  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACng
  nameWithType: RSACng
  fullName: System.Security.Cryptography.RSACng
  type: Class
  summary: "提供 RSA 算法的下一代加密技术 (CNG) 实现。"
  remarks: "RSACng 类派生自<xref:System.Security.Cryptography.RSA>类。</xref:System.Security.Cryptography.RSA> 因此，它不是使用现有的<xref:System.Security.Cryptography.RSACryptoServiceProvider>.</xref:System.Security.Cryptography.RSACryptoServiceProvider>临时替代       RSACng 使用类似于<xref:System.Security.Cryptography.ECDsaCng>类，而不是<xref:System.Security.Cryptography.RSACryptoServiceProvider>类</xref:System.Security.Cryptography.RSACryptoServiceProvider></xref:System.Security.Cryptography.ECDsaCng>的编程模型 例如:-使用 RSACng 的密钥管理的单独<xref:System.Security.Cryptography.CngKey>对象。</xref:System.Security.Cryptography.CngKey> 与此相反，<xref:System.Security.Cryptography.RSACryptoServiceProvider>都有一个直接绑定到该类型本身的操作的密钥。</xref:System.Security.Cryptography.RSACryptoServiceProvider>      -RSACng 执行诸如签名和验证签名，就像使用 RSACng 对象的属性操作<xref:System.Security.Cryptography.ECDsaCng>使用其对象属性来控制签名和验证操作。</xref:System.Security.Cryptography.ECDsaCng>"
  syntax:
    content: 'public sealed class RSACng : System.Security.Cryptography.RSA'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>使用随机的 2048 位密钥对的类。"
  syntax:
    content: public RSACng ();
    parameters: []
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>类随机生成的密钥与指定的大小。"
  remarks: "有效密钥大小范围是从 384 至 16,384 位，以 8 为增量。 我们建议为所有密钥使用 2048 位的最小大小。"
  syntax:
    content: public RSACng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "要生成以位为单位的密钥大小。"
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code>不是有效的。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>与指定的键的类。"
  remarks: "<xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>的`key`必须<xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>       此构造函数创建密钥的副本。 即使`key`是释放，RSA 中此密钥对象的副本保持活动状态。"
  syntax:
    content: public RSACng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "要用于 RSA 操作的键。"
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>不是有效的 RSA 密钥。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "进行解密输入数据使用指定的填充模式。"
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要解密的数据。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填充模式。"
    return:
      type: System.Byte[]
      description: "已解密的数据。"
  overload: System.Security.Cryptography.RSACng.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等于&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName&gt;，否则<xref:System.Security.Cryptography.RSAEncryptionPadding.Mode*>的<code>padding</code>不等于<xref href=&quot;System.Security.Cryptography.RSAEncryptionPaddingMode&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "对输入的数据使用私钥进行解密。"
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要解密密码文本。"
    return:
      type: System.Byte[]
      description: "解密结果<code> rgb </code>以纯文本格式的参数。"
  overload: System.Security.Cryptography.RSACng.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持此方法调用。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "要添加。"
  overload: System.Security.Cryptography.RSACng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用指定的填充输入的数据进行加密。"
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要加密的数据。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填充模式。"
    return:
      type: System.Byte[]
      description: "返回<xref:System.Byte>.</xref:System.Byte>"
  overload: System.Security.Cryptography.RSACng.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等于&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "对输入的数据使用公钥进行加密。"
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要进行加密的纯文本。"
    return:
      type: System.Byte[]
      description: "加密结果<code> rgb </code>密码文本形式的参数。"
  overload: System.Security.Cryptography.RSACng.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持此方法调用。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "到 RSA 对象使用的密钥导出<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;></xref>对象。"
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含专用参数;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "RSA 对象使用的密钥。"
  overload: System.Security.Cryptography.RSACng.ExportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "要添加。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要添加。"
    return:
      type: System.Byte[]
      description: "要添加。"
  overload: System.Security.Cryptography.RSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要添加。"
    - id: offset
      type: System.Int32
      description: "要添加。"
    - id: count
      type: System.Int32
      description: "要添加。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要添加。"
    return:
      type: System.Byte[]
      description: "要添加。"
  overload: System.Security.Cryptography.RSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "替换当前实例使用通过创建新的现有密钥<xref href=&quot;System.Security.Cryptography.CngKey&quot;></xref>参数结构。"
  remarks: "如果`parameters`包含仅 exponent 和 modulus，只导入的公共密钥。 如果`parameters`还包含对导入的完整密钥 P 和 Q 值。"
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "RSA 参数。"
  overload: System.Security.Cryptography.RSACng.ImportParameters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameters</code>包含既不指数，也不取模。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>parameters</code>不是有效的 RSA 密钥。       -或-<code>parameters</code>是完整密钥对和使用 KSP 的默认值。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Key
  id: Key
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取将由使用的密钥<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>对象用于它执行任何加密操作。"
  remarks: "返回<xref:System.Security.Cryptography.CngKey>如果密钥重置，例如通过更改释放对象<xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName>属性，通过使用<xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName>创建新密钥，或通过处置父<xref:System.Security.Cryptography.RSA>对象。</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey> 因此，您应该确保，在这些情况下不再使用的键对象。       这<xref:System.Security.Cryptography.CngKey>对象不是相同<xref:System.Security.Cryptography.CngKey>对象传递给<xref:System.Security.Cryptography.RSACng.%23ctor%2A>构造函数，如果使用了该构造函数。</xref:System.Security.Cryptography.RSACng.%23ctor%2A> </xref:System.Security.Cryptography.CngKey> </xref:System.Security.Cryptography.CngKey> 但是，它将指向相同的 CNG 密钥。"
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "使用的密钥<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>对象。"
  overload: System.Security.Cryptography.RSACng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取与此实现 RSA 可用的密钥交换算法的名称。"
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "返回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取与此实现 RSA 可用的签名算法的名称。"
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "返回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSACng.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "通过使用指定的哈希算法和填充模式了哈希处理的数据进行签名。"
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "哈希进行签名。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "哈希算法名称。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填充模式。"
    return:
      type: System.Byte[]
      description: "已签名的数据。"
  overload: System.Security.Cryptography.RSACng.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt;属性<code> hashAlgorithm </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等于&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "验证已签名且已使用指定的算法和填充模式哈希处理的数据。"
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "要验证哈希值。"
    - id: signature
      type: System.Byte[]
      description: "数据的签名。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "哈希算法名称。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填充模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果签名对哈希值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSACng.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt;属性<code> hashAlgorithm </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等于&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。       -或者-签名格式不正确。 (在[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]和 4.6.1 唯一; 第一页为[!INCLUDE[net_v462](~/add/includes/net-v462-md.md)]，该方法返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果签名格式不正确。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.RSACng.#ctor
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSACng.Key
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSACng.#ctor*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng
  nameWithType: RSACng.RSACng
- uid: System.Security.Cryptography.RSACng.Decrypt*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Decrypt
  nameWithType: RSACng.Decrypt
- uid: System.Security.Cryptography.RSACng.DecryptValue*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: DecryptValue
  nameWithType: RSACng.DecryptValue
- uid: System.Security.Cryptography.RSACng.Dispose*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Dispose
  nameWithType: RSACng.Dispose
- uid: System.Security.Cryptography.RSACng.Encrypt*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Encrypt
  nameWithType: RSACng.Encrypt
- uid: System.Security.Cryptography.RSACng.EncryptValue*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: EncryptValue
  nameWithType: RSACng.EncryptValue
- uid: System.Security.Cryptography.RSACng.ExportParameters*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ExportParameters
  nameWithType: RSACng.ExportParameters
- uid: System.Security.Cryptography.RSACng.HashData*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData
  nameWithType: RSACng.HashData
- uid: System.Security.Cryptography.RSACng.ImportParameters*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ImportParameters
  nameWithType: RSACng.ImportParameters
- uid: System.Security.Cryptography.RSACng.Key*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Key
  nameWithType: RSACng.Key
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACng.SignHash*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignHash
  nameWithType: RSACng.SignHash
- uid: System.Security.Cryptography.RSACng.VerifyHash*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: VerifyHash
  nameWithType: RSACng.VerifyHash
