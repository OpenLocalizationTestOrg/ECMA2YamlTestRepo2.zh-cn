### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElementCollection
  id: ConfigurationElementCollection
  children:
  - System.Configuration.ConfigurationElementCollection.#ctor
  - System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection
  fullName: System.Configuration.ConfigurationElementCollection
  type: Class
  summary: "表示一个配置元素，该元素包含子元素的集合。"
  remarks: "ConfigurationElementCollection 表示配置文件中的元素的集合。      1> [!NOTE]&1;> 配置文件中的元素是指基本的 XML 元素或部分。 如果有的话，简单元素将是具有相关属性的 XML 标记。 简单元素构成部分。 复杂部分可以包含一个或多个简单的元素、 元素的集合和其他部分。       使用 ConfigurationElementCollection 要使用的集合<xref:System.Configuration.ConfigurationElement>对象。</xref:System.Configuration.ConfigurationElement> 实现此类，以添加自定义<xref:System.Configuration.ConfigurationElement>元素的一种<xref:System.Configuration.ConfigurationSection>。</xref:System.Configuration.ConfigurationSection></xref:System.Configuration.ConfigurationElement>组成的集合"
  example:
  - "The following example shows how to use the ConfigurationElementCollection.  \n  \n The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/csharp/t-system.configuration.c_14_1.cs)]  \n  \n This second code example uses the classes specified before. You combine these two examples in a console application project.  \n  \n [!code-cs[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/csharp/t-system.configuration.c_14_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/visualbasic/t-system.configuration.c_14_2.vb)]  \n  \n When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n           <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"4040 />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>类。"
  remarks: "创建<xref:System.Configuration.ConfigurationElementCollection>你的应用程序需要创建自定义<xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection>时</xref:System.Configuration.ConfigurationElementCollection>的新实例"
  syntax:
    content: protected ConfigurationElementCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "创建的新实例<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>类。"
  remarks: "<xref:System.Collections.IComparer>用于设置要使用比较器。</xref:System.Collections.IComparer> 例如，不区分大小写的比较器可用于使密钥区分大小写。"
  syntax:
    content: protected ConfigurationElementCollection (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>要使用比较器。</xref:System.Collections.IComparer>"
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comparer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  id: AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>要在添加操作相关联<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>在派生类中重写时。"
  syntax:
    content: protected string AddElementName { get; set; }
    return:
      type: System.String
      description: "元素的名称。"
  overload: System.Configuration.ConfigurationElementCollection.AddElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所选的值以保留的前缀&quot;config&quot;或&quot;锁定&quot;开头。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "添加到一个配置元素<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  remarks: "BaseAdd 方法用于添加新<xref:System.Configuration.ConfigurationElement>到集合。</xref:System.Configuration.ConfigurationElement> 如果重写它派生类中添加元素时，所需自定义行为。       添加时，元素才被视为重复，仅当键相同而值不同。 因为不争用元素以静默方式接受具有相同键和值的元素。 但是，因为无法从逻辑上确定哪个竞争值有效，则无法添加键相同而值不同的元素。"
  example:
  - "The following code example shows how to override the BaseAdd method and how to call it from an `Add` method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/visualbasic/158cf871-201b-4f7d-bc42-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/csharp/158cf871-201b-4f7d-bc42-_1.cs)]"
  syntax:
    content: protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  id: BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将一个配置元素添加到配置元素集合。"
  remarks: "使用可选的参数`throwIfExists`引发<xref:System.Exception>异常如果指定<xref:System.Configuration.ConfigurationElement>对象已存在于<xref:System.Configuration.ConfigurationElementCollection>集合。</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Exception>       只有键相同而值不同，元素才被视为重复。 因为不争用元素以静默方式接受具有相同键和值的元素。 但是，因为无法从逻辑上确定哪个竞争值有效，则无法添加键相同而值不同的元素。"
  syntax:
    content: protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
    - id: throwIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果引发异常<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>指定已包含在<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>添加已存在于<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>和<code> throwIfExists </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "将一个配置元素添加到配置元素集合。"
  remarks: "使用`index`参数将添加<xref:System.Configuration.ConfigurationElement>对象传递给<xref:System.Configuration.ConfigurationElementCollection>特定索引位置处。</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "若要添加指定的索引位置<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  id: BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "从集合中移除所有配置元素对象。"
  remarks: "当调用 BaseClear 方法时，它将删除所有<xref:System.Configuration.ConfigurationElement>从集合的对象。</xref:System.Configuration.ConfigurationElement> 它还可以将插入`clear`指令插入配置文件。"
  example:
  - "The following code example shows how to call the BaseClear method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_3_1.cs)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.BaseClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n A collection item has been locked in a higher-level configuration."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取指定的索引位置处的配置元素。"
  remarks: ''
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/visualbasic/m-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/csharp/m-system.configuration.c_6_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>返回。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>的指定索引处。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  id: BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "返回具有指定键的配置元素。"
  remarks: "BaseGet 方法返回`null`如果没有任何<xref:System.Configuration.ConfigurationElement>与集合中指定的键的对象。</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/visualbasic/m-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/csharp/m-system.configuration.c_31_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要返回的元素的键。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>具有指定键; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "返回一个数组中包含的配置元素的所有密钥<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  syntax:
    content: protected object[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.Object[]
      description: "数组的所有包含的键<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>中所含对象<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取的密钥<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>中指定的索引位置。"
  syntax:
    content: protected object BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
    return:
      type: System.Object
      description: "指定的密钥<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  id: BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示指定的索引<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example shows how to call the BaseIndexOf method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/add/codesnippet/visualbasic/15cdbd2f-44ec-4b04-ad90-_1.vb)]"
  syntax:
    content: protected int BaseIndexOf (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定的索引位置。"
    return:
      type: System.Int32
      description: "指定的索引<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>; 否则为-1。"
  overload: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  id: BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>具有指定键已从<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  syntax:
    content: protected bool BaseIsRemoved (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要检查的元素的键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>与指定的键已被删除; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  id: BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "删除<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>从集合。"
  remarks: "BaseRemove 方法插入`<remove>`指令的配置文件插入<xref:System.Configuration.ConfigurationElement>与指定的键。</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseRemove method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_35_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_35_1.cs)]"
  syntax:
    content: protected void BaseRemove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "键<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>删除。"
  overload: System.Configuration.ConfigurationElementCollection.BaseRemove*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "不<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>与指定集合中存在的键，已移除元素，或因为无法移除此元素的值其<xref:System.Configuration.ConfigurationProperty.Type*>不<xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref>。</xref:System.Configuration.ConfigurationProperty.Type*>"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "删除<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>中指定的索引位置。"
  remarks: "BaseRemoveAt 方法插入`<remove>`指令插入指定的索引位置处的元素的配置文件。"
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>删除。"
  overload: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n <code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the number of <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects in the collection.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has already been removed.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has been locked at a higher level.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object was inherited.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object's <xref:System.Configuration.ConfigurationProperty.Type*> is not <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref> or <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  id: ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>要中的清除操作相关联<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>在派生类中重写时。"
  syntax:
    content: protected string ClearElementName { get; set; }
    return:
      type: System.String
      description: "元素的名称。"
  overload: System.Configuration.ConfigurationElementCollection.ClearElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所选的值以保留的前缀&quot;config&quot;或&quot;锁定&quot;开头。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取的类型<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  remarks: "该类型将为<xref:System.Configuration.ConfigurationElementCollectionType>或<xref:System.Configuration.ConfigurationElementCollectionType>字段。</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> 有关详细信息，请参阅<xref:System.Configuration.ConfigurationElementCollectionType>。</xref:System.Configuration.ConfigurationElementCollectionType>"
  example:
  - "The following code example shows how to get the CollectionType property.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/visualbasic/p-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/csharp/p-system.configuration.c_6_1.cs)]"
  syntax:
    content: public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "<xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref>的此集合。"
  overload: System.Configuration.ConfigurationElementCollection.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "内容复制<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>到一个数组。"
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationElement[]
      description: "要的内容复制到数组<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "从此处开始复制的索引位置。"
  overload: System.Configuration.ConfigurationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取集合中的元素数。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中的元素数目。"
  overload: System.Configuration.ConfigurationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  id: CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "当在派生类中重写，创建一个新<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
  remarks: "重写 CreateNewElement 方法以创建自定义<xref:System.Configuration.ConfigurationElement>特定类型的对象。</xref:System.Configuration.ConfigurationElement> 当从配置文件加载一个集合时，CreateNewElement 调用创建各个元素。 必须从<xref:System.Configuration.ConfigurationElementCollection>类</xref:System.Configuration.ConfigurationElementCollection>派生的类中重写 CreateNewElement"
  example:
  - "The following code example shows how to override the CreateNewElement method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/visualbasic/m-system.configuration.c_38_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/csharp/m-system.configuration.c_38_1.cs)]"
  syntax:
    content: protected abstract System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "一个新创建<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  id: CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "创建一个新<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>在派生类中重写时。"
  remarks: "重写 CreateNewElement 方法以创建自定义<xref:System.Configuration.ConfigurationElement>特定类型的对象。</xref:System.Configuration.ConfigurationElement> 当从配置文件加载一个集合时，CreateNewElement 调用创建各个元素。 必须从<xref:System.Configuration.ConfigurationElementCollection>类</xref:System.Configuration.ConfigurationElementCollection>派生的类中重写 CreateNewElement"
  syntax:
    content: protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "名称<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>创建。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "一个新<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>具有指定名称。"
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  id: ElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取用于标识此配置文件，当在派生类中重写中的元素集合的名称。"
  remarks: "重写 ElementName 属性以命名自定义<xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected virtual string ElementName { get; }
    return:
      type: System.String
      description: "集合; 的名称否则为空字符串。 默认值为一个空字符串。"
  overload: System.Configuration.ConfigurationElementCollection.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  id: EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置一个值，指定是否已清除的集合。"
  remarks: "将 EmitClear 属性设置为`true`导致`<clear>`指令时序列化集合写入到配置文件。"
  syntax:
    content: public bool EmitClear { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已清除的集合;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.EmitClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "配置是只读的。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "比较<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>到指定的对象。"
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "要比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要与进行比较的对象是否等于当前<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取当在派生类中重写的指定的配置元素的元素键。"
  remarks: ''
  example:
  - "The following code example shows how to override GetElementKey method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/visualbasic/85b3e1dd-d2ae-4572-b7ba-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/csharp/85b3e1dd-d2ae-4572-b7ba-_1.cs)]"
  syntax:
    content: protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>要返回的密钥。"
    return:
      type: System.Object
      description: "<xref:System.Object>充当指定的密钥<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>。</xref:System.Object>"
  overload: System.Configuration.ConfigurationElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref:System.Collections.IEnumerator>用于循环访问<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>用于循环访问<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个唯一值，表示<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>实例。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "一个唯一值，表示<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>当前实例。"
  overload: System.Configuration.ConfigurationElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  id: IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否指定<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>中存在<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  remarks: "重写 IsElementName 方法以提供自定义行为。"
  syntax:
    content: protected virtual bool IsElementName (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "要验证的元素名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该元素存在集合中的否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.IsElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  id: IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否指定<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>可以删除从<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  remarks: "删除集合的元素之前查询 IsElementRemovable。"
  syntax:
    content: protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "要检查的元素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>可以从这移除<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否这<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>自上次保存或加载在派生类中重写时已被修改。"
  remarks: "如果<xref:System.Configuration.ConfigurationElement.IsModified%2A>方法的任何<xref:System.Configuration.ConfigurationElement>中包含<xref:System.Configuration.ConfigurationElementCollection>返回`true`，整个集合的 IsModified 方法返回`true`也。</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.IsModified%2A>"
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已修改任何包含的元素，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Configuration.ConfigurationElementCollection.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>对象只读。"
  remarks: "系统定义不能修改的配置元素。 调用此方法来确定是否可以修改元素。"
  syntax:
    content: public override bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> ; 否则为读取对象<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否同步对集合的访问。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果访问<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>同步; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "导致配置系统引发异常。"
  remarks: "OnDeserializeUnrecognizedElement 称为时从配置文件中读取的无法识别的配置元素。       重写此方法以提供自定义的处理操作的配置文件中的无法识别的配置元素。 默认返回值， `false`，会导致配置系统引发异常。"
  syntax:
    content: protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "无法识别的元素的名称。"
    - id: reader
      type: System.Xml.XmlReader
      description: "从配置文件读取 XML 输入的流。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则无法识别的元素的反序列化否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "在指定的元素<code> elementName </code>是<xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;></xref>元素。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elementName</code>保留的前缀&quot;config&quot;或&quot;锁定&quot;开头。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  id: RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>要执行删除操作相关联<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>在派生类中重写时。"
  syntax:
    content: protected string RemoveElementName { get; set; }
    return:
      type: System.String
      description: "元素的名称。"
  overload: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所选的值以保留的前缀&quot;config&quot;或&quot;锁定&quot;开头。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "重置<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>到其未修改的状态，当在派生类中重写。"
  remarks: "重置方法的默认行为是清除任何修改过的元素<xref:System.Configuration.ConfigurationElementCollection>对象将包含并且将修改过的元素设置为值指定由其父配置文件。</xref:System.Configuration.ConfigurationElementCollection> 如果中的任意元素<xref:System.Configuration.ConfigurationElementCollection>具有子元素，对这些子元素也称为重置。</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>表示集合的父元素，如果任何; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "值重置<xref:System.Configuration.ConfigurationElementCollection.IsModified*>属性<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>当在派生类中重写</xref:System.Configuration.ConfigurationElementCollection.IsModified*>"
  remarks: "ResetModified 方法确定更新的配置时，此集合中的元素是否写入到配置文件。"
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "在派生类中重写时，配置文件中的 XML 元素写入配置数据。"
  remarks: "SerializeElement 方法将集合中包含的配置元素和其所包含的任何嵌套的元素的内容写入配置文件。 重写 SerializeElement 提供现成的集合内容和嵌套的元素的自定义写入过程。"
  syntax:
    content: protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "将 XML 写入配置文件的输出流。"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要序列化集合键;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>成功写入到配置文件。"
  overload: System.Configuration.ConfigurationElementCollection.SerializeElement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "一个集合中的元素已添加或替换和保留的前缀&quot;config&quot;或&quot;锁定&quot;开头。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "集<xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>属性<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>对象和所有子元素。</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>"
  remarks: "此方法在内部用于设置保留不能修改这些系统的配置元素。 若要确定哪些元素是可修改，请调用<xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>方法。</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>"
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取用于对访问进行同步的对象<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "用于对访问进行同步的对象<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "副本<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>到一个数组。"
  syntax:
    content: void ICollection.CopyTo (Array arr, int index);
    parameters:
    - id: arr
      type: System.Array
      description: "要将此复制到数组<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "从此处开始复制的索引位置。"
  overload: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  id: ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否试图添加重复<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>到<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>将导致异常引发。"
  remarks: "如果在添加一个重复的元素时，引发异常<xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>的元素值是其中一种<xref:System.Configuration.ConfigurationElementCollectionType>或<xref:System.Configuration.ConfigurationElementCollectionType>。</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>       请注意，使用相同键和值的元素不被视为重复项，并且以静默方式接受。 具有相同的密钥，但不同的值的唯一元素将被视为重复项。 有关详细信息，请参阅备注部分<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>方法。</xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>"
  syntax:
    content: protected virtual bool ThrowOnDuplicate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果尝试添加重复<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>至此<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>将导致引发异常，则引发该异常; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "反转从配置层次结构的不同级别合并配置信息的效果"
  remarks: "取消合并方法可反转从配置层次结构的不同级别合并配置信息的效果。 这允许在当前的层次结构级别，以区别于该组在父级别，序列化之前的配置设置。       取消合并由新的临时元素来比较父对象和源对象上的系统调用。 基于<xref:System.Configuration.ConfigurationSaveMode>值，它然后设置要包含需要进行序列化的数据的临时对象。</xref:System.Configuration.ConfigurationSaveMode> 有关保存模式的详细信息，请参阅<xref:System.Configuration.ConfigurationSaveMode>。</xref:System.Configuration.ConfigurationSaveMode>"
  syntax:
    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "A <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>当前级别上包含属性的合并的视图的对象。"
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "父<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>对象的当前元素，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果这是最高级别。"
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>枚举值，该值确定要包括哪些属性值。"
  overload: System.Configuration.ConfigurationElementCollection.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
- uid: System.Configuration.ConfigurationElement[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: ConfigurationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.Count
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElementCollection.#ctor*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection
- uid: System.Configuration.ConfigurationElementCollection.AddElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd
  nameWithType: ConfigurationElementCollection.BaseAdd
- uid: System.Configuration.ConfigurationElementCollection.BaseClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear
  nameWithType: ConfigurationElementCollection.BaseClear
- uid: System.Configuration.ConfigurationElementCollection.BaseGet*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet
  nameWithType: ConfigurationElementCollection.BaseGet
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey
  nameWithType: ConfigurationElementCollection.BaseGetKey
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf
  nameWithType: ConfigurationElementCollection.BaseIndexOf
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved
  nameWithType: ConfigurationElementCollection.BaseIsRemoved
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove
  nameWithType: ConfigurationElementCollection.BaseRemove
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt
  nameWithType: ConfigurationElementCollection.BaseRemoveAt
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationElementCollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.Count*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: ConfigurationElementCollection.CreateNewElement
- uid: System.Configuration.ConfigurationElementCollection.ElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElementCollection.Equals
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: ConfigurationElementCollection.GetElementKey
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationElementCollection.GetEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElementCollection.GetHashCode
- uid: System.Configuration.ConfigurationElementCollection.IsElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName
  nameWithType: ConfigurationElementCollection.IsElementName
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable
  nameWithType: ConfigurationElementCollection.IsElementRemovable
- uid: System.Configuration.ConfigurationElementCollection.IsModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElementCollection.IsModified
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElementCollection.IsReadOnly
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElementCollection.Reset
- uid: System.Configuration.ConfigurationElementCollection.ResetModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElementCollection.ResetModified
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElementCollection.SerializeElement
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElementCollection.SetReadOnly
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElementCollection.Unmerge
