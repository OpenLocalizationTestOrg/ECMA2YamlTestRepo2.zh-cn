### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlCollection
  id: ControlCollection
  children:
  - System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Clear
  - System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.ControlCollection.Count
  - System.Web.UI.ControlCollection.GetEnumerator
  - System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.IsReadOnly
  - System.Web.UI.ControlCollection.IsSynchronized
  - System.Web.UI.ControlCollection.Item(System.Int32)
  - System.Web.UI.ControlCollection.Owner
  - System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  - System.Web.UI.ControlCollection.SyncRoot
  langs:
  - csharp
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
  type: Class
  summary: "提供使 ASP.NET 服务器控件能够维护一份及其子控件的集合容器。"
  remarks: "你可以访问的任何属性和方法通过 ControlCollection 类的<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>属性。</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 由于<xref:System.Web.UI.Control>类是所有 ASP.NET 服务器控件的基类，所有服务器控件都继承此属性。</xref:System.Web.UI.Control>       有关集合的详细信息，请参阅[集合和数据结构](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`. When created, the two controls are added to the ControlCollection. The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>. The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.  \n  \n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_0_1.vb)]\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_0_1.cs)]"
  syntax:
    content: 'public class ControlCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  id: '#ctor(System.Web.UI.Control)'
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>指定的父服务器控件的类。"
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_10_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_10_1.vb)]"
  syntax:
    content: public ControlCollection (System.Web.UI.Control owner);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "为创建控件集合 ASP.NET 服务器控件。"
  overload: System.Web.UI.ControlCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "如果则会发生<code> owner </code>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  id: Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将指定的<xref href=&quot;System.Web.UI.Control&quot;></xref>到集合的对象。"
  remarks: "新控件添加到数组末尾之间的序号索引。 控件可以所有 ASP.NET 服务器控件，你创建的自定义服务器控件或文本控件的实例。       若要将控件添加到集合中的特定索引位置处，使用<xref:System.Web.UI.ControlCollection.AddAt%2A>方法。</xref:System.Web.UI.ControlCollection.AddAt%2A>"
  example:
  - "The following code example uses the Add method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_5_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_5_1.vb)]"
  syntax:
    content: public virtual void Add (System.Web.UI.Control child);
    parameters:
    - id: child
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>要添加到集合。"
  overload: System.Web.UI.ControlCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "则引发该异常的如果<code> child </code>参数未指定控件。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "则引发该异常的如果<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>是只读的。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  id: AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将指定的<xref href=&quot;System.Web.UI.Control&quot;></xref>到集合中的指定的索引位置处的对象。"
  remarks: "添加的控件均可以是任何 ASP.NET 服务器控件，你创建的自定义服务器控件或文本控件的实例。"
  example:
  - "The following code example uses the AddAt method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_0_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_0_1.aspx)]"
  syntax:
    content: public virtual void AddAt (int index, System.Web.UI.Control child);
    parameters:
    - id: index
      type: System.Int32
      description: "在数组中要添加的子控件的位置。"
    - id: child
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>要添加到集合。"
  overload: System.Web.UI.ControlCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> child </code>参数未指定控件。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>参数小于零或大于&lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;属性。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>是只读的。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Clear
  id: Clear
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "从当前服务器控件中移除所有控件<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: "使用此方法可清空自定义控件的<xref:System.Web.UI.ControlCollection>当重写<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>和<xref:System.Web.UI.Control.DataBind%2A>方法。</xref:System.Web.UI.Control.DataBind%2A> </xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection> 当你开发复合、 模板化控件或模板化数据绑定控件时执行此操作。"
  example:
  - "The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method, and using the Clear method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object. In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_6_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_6_1.vb)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.UI.ControlCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  id: Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定指定的服务器控件是否在父服务器控件的<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_3_1.aspx)]
     [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_3_1.aspx)]
  syntax:
    content: public virtual bool Contains (System.Web.UI.Control c);
    parameters:
    - id: c
      type: System.Web.UI.Control
      description: "要在集合中搜索的服务器控件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合; 中存在指定的服务器控件否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "子控件存储在副本<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象传递给&lt;xref:System.Array?displayProperty=fullName&gt;对象，在指定的索引位置开始&lt;xref:System.Array?displayProperty=fullName&gt;。"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "&lt;Xref:System.Array?displayProperty=fullName&gt;要复制到的子控件。"
    - id: index
      type: System.Int32
      description: "中从零开始的相对索引`array`复制开始处。"
  overload: System.Web.UI.ControlCollection.CopyTo*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>array</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和不一维。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Count
  id: Count
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取服务器控件中的数<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>指定 ASP.NET 服务器控件的对象。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Count property to iterate through a control's <xref:System.Web.UI.ControlCollection> object. The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> property verifies that the control has child controls. If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> returns `false`, the remaining code does not run.  \n  \n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_1_1.vb)]\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_1_1.cs)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "中的服务器控件数<xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>。"
  overload: System.Web.UI.ControlCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索的枚举数可循环访问<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_1_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_1_1.aspx)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "枚举数循环访问集合。"
  overload: System.Web.UI.ControlCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  id: IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索指定的索引<xref href=&quot;System.Web.UI.Control&quot;></xref>集合中的对象。"
  remarks: "使用此方法来确定指定的服务器控件中的索引位置<xref:System.Web.UI.ControlCollection>对象。</xref:System.Web.UI.ControlCollection>"
  example:
  - "The following code example uses the IndexOf method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_4_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_4_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>为其返回索引。"
    return:
      type: System.Int32
      description: "指定的服务器控件的索引。 如果服务器控件不是当前集合的成员，则返回-1。"
  overload: System.Web.UI.ControlCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象是只读的。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the IsReadOnly property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_5_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_5_1.aspx)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>同步对象。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the IsSynchronized property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_6_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_6_1.aspx)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "此属性始终是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取位于指定的索引位置到服务器控件的引用<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example uses the Item property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call. This is performed by the `myButton.Controls.Remove` syntax.  \n  \n [!code-vb[ControlCollection_ReSubmit_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_2_1.aspx)]\n [!code-cs[ControlCollection_ReSubmit_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_2_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "在的服务器控件的位置<xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>。"
    return:
      type: System.Web.UI.Control
      description: "对控件的引用。"
  overload: System.Web.UI.ControlCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>参数小于零或大于或等于&lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Owner
  id: Owner
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取到的 ASP.NET 服务器控件<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象所属。"
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the Owner property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_4_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_4_1.vb)]"
  syntax:
    content: protected System.Web.UI.Control Owner { get; }
    return:
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>到<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>所属。"
  overload: System.Web.UI.ControlCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  id: Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "从父服务器控件中移除指定的服务器控件<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: "若要从索引位置移除的控件，使用<xref:System.Web.UI.ControlCollection.RemoveAt%2A>方法。</xref:System.Web.UI.ControlCollection.RemoveAt%2A>"
  example:
  - "The following code example uses the Remove method to delete a child control from the `myButton` server control. First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_9_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/csharp/m-system.web.ui.controlc_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "要删除的服务器控件。"
  overload: System.Web.UI.ControlCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "从中移除指定的索引位置中，子控件<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: "若要从基于其值的集合中移除的控件，使用<xref:System.Web.UI.ControlCollection.Remove%2A>方法。</xref:System.Web.UI.ControlCollection.Remove%2A>"
  example:
  - "The following code example uses the RemoveAt method to delete a child control from the `myButton` server control. The method call first specifies an index location of 1 from which the control is deleted. The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_7_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/csharp/m-system.web.ui.controlc_7_1.aspx)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "若要从集合中移除服务器控件的序号索引。"
  overload: System.Web.UI.ControlCollection.RemoveAt*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "则引发该异常的如果<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>是只读的。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取可用于同步对控件集合的访问的对象。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the SyncRoot property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_3_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_3_1.aspx)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>用于同步集合。</xref:System.Object>"
  overload: System.Web.UI.ControlCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlCollection.Clear
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.ControlCollection.Count
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
- uid: System.Web.UI.ControlCollection.IsReadOnly
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
- uid: System.Web.UI.ControlCollection.Owner
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
- uid: System.Web.UI.ControlCollection.SyncRoot
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
- uid: System.Web.UI.ControlCollection.#ctor*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection.ControlCollection
- uid: System.Web.UI.ControlCollection.Add*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add
  nameWithType: ControlCollection.Add
- uid: System.Web.UI.ControlCollection.AddAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt
  nameWithType: ControlCollection.AddAt
- uid: System.Web.UI.ControlCollection.Clear*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear
  nameWithType: ControlCollection.Clear
- uid: System.Web.UI.ControlCollection.Contains*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains
  nameWithType: ControlCollection.Contains
- uid: System.Web.UI.ControlCollection.CopyTo*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo
  nameWithType: ControlCollection.CopyTo
- uid: System.Web.UI.ControlCollection.Count*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ControlCollection.GetEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf
  nameWithType: ControlCollection.IndexOf
- uid: System.Web.UI.ControlCollection.IsReadOnly*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item
  nameWithType: ControlCollection.Item
- uid: System.Web.UI.ControlCollection.Owner*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove
  nameWithType: ControlCollection.Remove
- uid: System.Web.UI.ControlCollection.RemoveAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ControlCollection.RemoveAt
- uid: System.Web.UI.ControlCollection.SyncRoot*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
