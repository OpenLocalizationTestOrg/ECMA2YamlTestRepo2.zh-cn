### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeDefaultValueExpression
  id: CodeDefaultValueExpression
  children:
  - System.CodeDom.CodeDefaultValueExpression.#ctor
  - System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  - System.CodeDom.CodeDefaultValueExpression.Type
  langs:
  - csharp
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression
  fullName: System.CodeDom.CodeDefaultValueExpression
  type: Class
  summary: "表示为默认值的引用。"
  remarks: "CodeDefaultValueExpression 可以用于表示为默认值的引用。       <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A>属性指定对值类型的引用。</xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> 在基于泛型的代码生成过程中使用的 CodeDefaultValueExpression 类。 有关泛型的详细信息，请参阅[.NET Framework 类库中的泛型](~/add/includes/ajax-current-ext-md.md)。 若要进一步描述要将新的默认值添加到代码图的 CodeDefaultValueExpression 类使用此部分中提供了以下步骤的代码。       第 1 部分中的代码摘自更大的示例提供的<xref:System.CodeDom.CodeTypeParameter>类。</xref:System.CodeDom.CodeTypeParameter> 此代码，通过 C# 代码生成器，运行时生成的第 2 部分中显示的 C# 代码。 当第 3 部分中的语句中调用此代码时，结果将是第 4 部分中所示的输出。      ```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(&quot;S&quot;);               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(&quot;T&quot;);               sType.HasConstructorConstraint = true;                  printMethod.Name = &quot;Print&quot;;               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;T&quot;))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;S&quot;))));   ```      ```   // Part 2: Code generated by code in part 1.   public virtual void Print<S, T>()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```      ```   // Part 3: Call to the generated method.   dict.Print<System.Decimal, int>();   ```      ```   // Part 4: Output of the generated method.   0   0      ```"
  example:
  - "The following code example shows the use of the CodeDefaultValueExpression to create default values for decimal and integer parameters. This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDOM.Generics.1#7](~/add/codesnippet/visualbasic/t-system.codedom.codedef_1.vb)]\n [!code-cs[System.CodeDOM.Generics.1#7](~/add/codesnippet/csharp/t-system.codedom.codedef_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeDefaultValueExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;></xref>类。"
  syntax:
    content: public CodeDefaultValueExpression ();
    parameters: []
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  id: '#ctor(System.CodeDom.CodeTypeReference)'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;></xref>类使用指定的代码类型引用。"
  syntax:
    content: public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> ，它指定对值类型的引用。"
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  id: Type
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置默认值的数据类型引用。"
  syntax:
    content: public System.CodeDom.CodeTypeReference Type { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>表示具有默认值的数据类型的对象。"
  overload: System.CodeDom.CodeDefaultValueExpression.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression
- uid: System.CodeDom.CodeDefaultValueExpression.Type*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
