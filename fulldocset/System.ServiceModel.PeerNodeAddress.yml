### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerNodeAddress
  id: PeerNodeAddress
  children:
  - System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  - System.ServiceModel.PeerNodeAddress.EndpointAddress
  - System.ServiceModel.PeerNodeAddress.IPAddresses
  langs:
  - csharp
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress
  fullName: System.ServiceModel.PeerNodeAddress
  type: Class
  summary: "指定包含类型<xref:System.ServiceModel.EndpointAddress>个对等节点，以及一个可选集合的多宿主 IP 地址。</xref:System.ServiceModel.EndpointAddress>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(Name="PeerNodeAddress", Namespace="http://schemas.microsoft.com/net/2006/05/peer")]

      [System.Runtime.Serialization.KnownType(typeof(System.Net.IPAddress[]))]

      public sealed class PeerNodeAddress
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})'
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  nameWithType: PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  fullName: System.ServiceModel.PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;></xref>与所提供<xref:System.ServiceModel.EndpointAddress>和集合的多宿主 IP 地址也是为本地计算机配置。</xref:System.ServiceModel.EndpointAddress>"
  syntax:
    content: public PeerNodeAddress (System.ServiceModel.EndpointAddress endpointAddress, System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress> ipAddresses);
    parameters:
    - id: endpointAddress
      type: System.ServiceModel.EndpointAddress
      description: "A <xref:System.ServiceModel.EndpointAddress>，表示网格中的对等节点的地址。</xref:System.ServiceModel.EndpointAddress>"
    - id: ipAddresses
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;包含 IP 地址配置为本地计算机，并可用于连接到的对等节点。"
  overload: System.ServiceModel.PeerNodeAddress.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "提供给构造函数的自变量之一设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress
  id: EndpointAddress
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
  fullName: System.ServiceModel.PeerNodeAddress.EndpointAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "获取<xref:System.ServiceModel.EndpointAddress>与此关联<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref>。</xref:System.ServiceModel.EndpointAddress>"
  syntax:
    content: public System.ServiceModel.EndpointAddress EndpointAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "A<xref:System.ServiceModel.EndpointAddress>与此关联<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref>。</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.PeerNodeAddress.EndpointAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses
  id: IPAddresses
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
  fullName: System.ServiceModel.PeerNodeAddress.IPAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "获取此地址的多宿主 IP 集合<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref>。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress> IPAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
      description: "集合的多宿主 IP 地址与此关联<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref>。"
  overload: System.ServiceModel.PeerNodeAddress.IPAddresses*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  nameWithType: PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  fullName: System.ServiceModel.PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IPAddress>
  nameWithType: ReadOnlyCollection<IPAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Net.IPAddress>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: IPAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
  fullName: System.ServiceModel.PeerNodeAddress.EndpointAddress
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
  fullName: System.ServiceModel.PeerNodeAddress.IPAddresses
- uid: System.ServiceModel.PeerNodeAddress.#ctor*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress.PeerNodeAddress
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
