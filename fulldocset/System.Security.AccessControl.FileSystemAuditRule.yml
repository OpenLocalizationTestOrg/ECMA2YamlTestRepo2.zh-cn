### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAuditRule
  id: FileSystemAuditRule
  children:
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
  type: Class
  summary: "表示定义的文件或目录的审核规则的访问控制项 (ACE) 的抽象。 此类不能被继承。"
  remarks: "FileSystemAuditRule 类表示基础访问控制项 (ACE)，指定的用户帐户，要提供 （读取、 写入和等等） 的访问的类型的抽象，以及是否执行审核。  此类还可以指定如何从继承的审核规则和传播到对象。       若要允许文件和目录审核 Windows NT 或更高版本，必须在您的计算机上启用审核访问安全策略。  默认情况下，此策略设置为无审核。       若要启用审核访问安全策略，请执行以下步骤︰ 1。  打开**本地安全设置**Microsoft 管理控制台 (MMC) 管理单元中，位于管理工具文件夹中。      2.  展开本地策略文件夹并左键单击审核策略文件夹。      3.  双击**审核对象访问**上的 MMC 管理单元中，右窗格中的条目或右键单击，然后选择要显示的属性**审核对象访问属性**对话框。      4.  选择**成功**或**失败**复选框以记录成功或失败。       请注意，用户帐户的审核规则的相同的用户帐户需要相应的访问规则。       使用 FileSystemAuditRule 类创建新的审核规则。  您可以保留此规则使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the FileSystemAuditRule class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/t-system.security.access_9_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/t-system.security.access_9_1.cs)]"
  syntax:
    content: 'public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类使用对用户帐户、 一个值，指定的操作与审核规则关联的类型和一个值，指定何时执行审核的引用。"
  remarks: "使用此构造函数创建审核规则，您可以保留使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  审核规则可确定何时以及如何对系统对象执行操作如文件和文件夹，被记录下来。"
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封装到用户帐户的引用的对象。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定的操作与审核规则关联的类型的值。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定何时执行审核的值。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>参数不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> flags </code>参数。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值传递到<code> flags </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类使用的用户帐户名称、 一个值，指定的操作与审核规则关联的类型和一个值，指定何时执行审核。"
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemAuditRule> class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/0cfd6a33-c1ca-4126-9899-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/0cfd6a33-c1ca-4126-9899-_1.cs)]"
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "用户帐户的名称。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定的操作与审核规则关联的类型的值。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定何时执行审核的值。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> flags </code>参数。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值传递到<code> flags </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类使用的用户帐户，一个值，指定审核规则、 值，该值确定如何继承权限、 一个值，确定如何传播的权限和一个值，指定何时执行审核与关联的操作类型的引用名称。"
  remarks: "使用此构造函数创建审核规则，您可以保留使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  审核规则可确定何时以及如何对系统对象执行操作如文件和文件夹，被记录下来。"
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封装到用户帐户的引用的对象。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定的操作与审核规则关联的类型的值。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何将访问掩码传播到子对象的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定访问控制项 (Ace) 如何传播到子对象的值。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定何时执行审核的值。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>参数不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> flags </code>参数。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值传递到<code> flags </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类使用的用户帐户、 一个值，指定的操作与审核规则关联的类型、 值，该值确定如何继承权限，一个值，确定如何传播的权限和一个值，指定何时执行审核的名称。"
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "用户帐户的名称。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定的操作与审核规则关联的类型的值。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何将访问掩码传播到子对象的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定访问控制项 (Ace) 如何传播到子对象的值。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定何时执行审核的值。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>与当前关联标志<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>对象。"
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>与当前关联标志<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>对象。"
  overload: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
