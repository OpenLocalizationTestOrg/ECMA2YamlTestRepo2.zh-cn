### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  id: SessionSecurityTokenCacheKey
  children:
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  type: Class
  summary: "表示中的条目的键<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCache&quot;> </xref>。"
  remarks: "在缓存时<xref:System.IdentityModel.Tokens.SessionSecurityToken>有两个所需的索引。</xref:System.IdentityModel.Tokens.SessionSecurityToken> 一个是上下文 ID，由表示<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName>属性中所有会话令牌都是唯一的。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> 另一种是密钥生成，由表示<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName>属性，它是在会话令牌中唯一。</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> 会话令牌颁发时具有仅上下文 id。 续订的会话令牌时，将添加密钥生成。 续订后，续订的会话令牌的唯一地标识通过上下文 ID 和密钥生成。       类型 SessionSecurityTokenCacheKey 的对象用作会话令牌缓存的索引。 索引将始终有一个有效<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A>属性指定，但<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>属性可以是`null`，取决于是否续订令牌。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> 此外还有一个可选<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>这将给予为作用域令牌的终结点。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>"
  syntax:
    content: public class SessionSecurityTokenCacheKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  id: '#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>类。"
  syntax:
    content: public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);
    parameters:
    - id: endpointId
      type: System.String
      description: "为作用域的缓存项的终结点 ID。 这是应的值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A?displayProperty=fullName&gt;的缓存的令牌的属性。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "缓存项的上下文 ID。 这是应的值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName&gt;的缓存的令牌的属性。"
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "密钥生成的缓存项。 这是应的值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName&gt;的缓存的令牌的属性。 当续订令牌后，此值才可用。 它将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>时缓存新令牌。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取缓存密钥的上下文 ID。"
  remarks: "这对应于<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>的缓存的令牌的属性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "缓存键上下文 ID。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取此缓存条目范围到的终结点 ID。"
  remarks: "这对应于<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>的缓存的令牌的属性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>"
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "为作用域此缓存条目的端点 ID。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "确定指定的对象是否与当前的缓存键相同。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>未在比较中使用属性。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要与当前的缓存键进行比较的对象。 应可从<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定的对象是否与当前的缓存键; 相同否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  id: GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回当前的缓存密钥的哈希代码。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>属性不用于生成的哈希代码。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的缓存键的哈希代码。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  id: IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置一个值，该值指示是否可以执行索引比较时忽略密钥生成。"
  remarks: '此属性会影响在其中的方式<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>属性视为通过以下方法和运算符︰ <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>，和<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>'
  syntax:
    content: public bool IgnoreKeyGeneration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要忽略密钥生成;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取密钥生成的缓存密钥"
  remarks: "这对应于<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>的缓存的令牌的属性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "密钥生成的缓存密钥"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "实现的相等运算符<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>类。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>未在比较中使用属性。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Equality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比较的第一个缓存键。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比较的第二个缓存键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果缓存键是否相等。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "实现的相等运算符<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>类。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>未在比较中使用属性。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Inequality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比较的第一个缓存键。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比较的第二个缓存键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果缓存密钥是否不相等;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "重写<xref:System.Object.ToString*>提供的唯一标识符。</xref:System.Object.ToString*>"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>未使用属性。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串形式中的键。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals
  nameWithType: SessionSecurityTokenCacheKey.Equals
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality
  nameWithType: SessionSecurityTokenCacheKey.op_Equality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString
  nameWithType: SessionSecurityTokenCacheKey.ToString
