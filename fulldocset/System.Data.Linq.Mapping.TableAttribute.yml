### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.TableAttribute
  id: TableAttribute
  children:
  - System.Data.Linq.Mapping.TableAttribute.#ctor
  - System.Data.Linq.Mapping.TableAttribute.Name
  langs:
  - csharp
  name: TableAttribute
  nameWithType: TableAttribute
  fullName: System.Data.Linq.Mapping.TableAttribute
  type: Class
  summary: "将类指定为与数据库表关联的实体类。"
  remarks: "此属性用于将类指定为与数据库表或视图关联的实体类。 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]将类视为持久性类具有 TableAttribute 属性类。       [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]支持仅单表映射。 这就是说，实体类必须映射到一个数据库表，而你不能在同一时间将数据库表映射到多个类。       你可以使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性 TableAttribute 属性指定的名称表中，以及你可以选择使用架构名称限定表名。</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 如果你不通过使用指定名称<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性，表名假定可与类名称相同。</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>      ## 架构限定名称你可以选择使用架构名称来限定表名。 默认情况下，在第一个期间左侧令牌<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字符串被视为架构名称。</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 名称的其余部分被视为表名称。 提供程序行情作为相应的表名称。 例如， [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] SQL Server 提供程序可确保，则使用方括号至少需要位置。      1> [!NOTE]&1;> 在某些情况下，您必须显式对属性因为 SQL Server 提供程序无法自动-引号。 下表显示了一些示例。      |用例 |示例︰ 标识符名称 |示例︰ 应在属性中字符串 |否则为...|  |----------|------------------------------|--------------------------------------------|----------------|  |架构名称包含句点 |架构:&quot;A.B&quot;<br /><br /> 表:&quot;C&quot;|&quot;[A.B]。C&quot;|第一个期间假定架构名称分开的表名称。 |  |架构/表名称开头`@`|&quot;@SomeName&quot;|&quot;[@SomeName]&quot;|假定为参数名称。 |  |架构开头`[`和结束的`]`|&quot;[Schema.Table]&quot;|&quot;[[架构]。[表]]]&quot;|不带引号的标识符类似于带引号的标识符。 |  |表开头`[`和结束的`]`|&quot;[表]&quot;|&quot;[[表]]]&quot;|不带引号的标识符类似于带引号的标识符。 |"
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class TableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "初始化的新实例<xref href=&quot;System.Data.Linq.Mapping.TableAttribute&quot;></xref>类。"
  syntax:
    content: public TableAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.TableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "获取或设置表或视图的名称。"
  remarks: "如果你不通过使用名称指定一个名称，假定表名为的类名称相同。      1> [!NOTE]&1;> （可选） 可以使用架构名称来限定表名 (例如，Schema3.Table5)。 默认情况下，名称字符串中的第一个期间左侧令牌被视为架构名称，并为的表名称的其余部分。       在下面的示例中，默认表名， `Customer`，更改为`Customers`。"
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "默认情况下，值是类的名称相同。"
  overload: System.Data.Linq.Mapping.TableAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute
  nameWithType: TableAttribute.TableAttribute
- uid: System.Data.Linq.Mapping.TableAttribute.Name*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
