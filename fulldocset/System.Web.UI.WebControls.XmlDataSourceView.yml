### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSourceView
  id: XmlDataSourceView
  children:
  - System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  - System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  langs:
  - csharp
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView
  fullName: System.Web.UI.WebControls.XmlDataSourceView
  type: Class
  summary: "表示 XML 数据上的表格数据源视图<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>控件可以显示其基础数据表格和分层格式 Web 服务器控件，将绑定到它。</xref:System.Web.UI.WebControls.XmlDataSource> 控件如<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DropDownList>使用<xref:System.Web.UI.WebControls.XmlDataSource>将绑定到 XML 数据并将其呈现以列表或表格形式，同时从派生的控件<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类，如<xref:System.Web.UI.WebControls.TreeView>，将绑定到 XML 数据并将其以分层形式呈现。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.DropDownList> </xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.XmlDataSource>创建内部通过不同的代码路径每种视图类型。</xref:System.Web.UI.WebControls.XmlDataSource> 如果<xref:System.Web.UI.IDataSource.GetView%2A>对<xref:System.Web.UI.WebControls.XmlDataSource>XmlDataSourceView 创建受支持<xref:System.Web.UI.WebControls.XmlDataSource>。</xref:System.Web.UI.WebControls.XmlDataSource> 、</xref:System.Web.UI.WebControls.XmlDataSource>调用方法</xref:System.Web.UI.IDataSource.GetView%2A> 如果<xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>调用方法时，<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>创建。</xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> 为派生自的 Web 服务器控件提供 XmlDataSourceView 类<xref:System.Web.UI.WebControls.DataBoundControl>并绑定到列表和表格数据，而<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>为派生自的 Web 服务器控件提供<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>并将绑定到分层数据。</xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.DataBoundControl> 所有数据绑定控件方法都会都调用内部，`Select`上返回哪一种数据源视图对象的方法。       如所有<xref:System.Web.UI.DataSourceView>帮助程序对象，XmlDataSourceView 定义数据源可以使用基础数据执行的操作。</xref:System.Web.UI.DataSourceView> 因为 XmlDataSourceView 类仅重写<xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>方法，因此关联<xref:System.Web.UI.WebControls.XmlDataSource>控件不支持更新、 插入或删除操作。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 因为 XmlDataSourceView 类为密封类，不能扩展 XmlDataSourceView 类，以添加此功能，但你可以派生从数据源控件<xref:System.Web.UI.WebControls.XmlDataSource>和中的一个视图<xref:System.Web.UI.DataSourceView>如果需要其他功能。</xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: 'public sealed class XmlDataSourceView : System.Web.UI.DataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  id: '#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)'
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化新的命名实例<xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;></xref>类，并将关联指定<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;></xref>与其。"
  syntax:
    content: public XmlDataSourceView (System.Web.UI.WebControls.XmlDataSource owner, string name);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.XmlDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> ， <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref>与相关联。"
    - id: name
      type: System.String
      description: "视图的名称。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "要添加。"
    return:
      type: System.Collections.IEnumerable
      description: "要添加。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从基础 XML 中检索的数据行的列表。"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用于请求对数据执行基本的数据检索操作的对象。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>数据项的集合。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.XmlDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
- uid: System.Web.UI.WebControls.XmlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView.XmlDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: XmlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select
  nameWithType: XmlDataSourceView.Select
