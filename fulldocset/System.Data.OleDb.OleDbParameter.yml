### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbParameter
  id: OleDbParameter
  children:
  - System.Data.OleDb.OleDbParameter.#ctor
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  - System.Data.OleDb.OleDbParameter.DbType
  - System.Data.OleDb.OleDbParameter.Direction
  - System.Data.OleDb.OleDbParameter.IsNullable
  - System.Data.OleDb.OleDbParameter.OleDbType
  - System.Data.OleDb.OleDbParameter.ParameterName
  - System.Data.OleDb.OleDbParameter.Precision
  - System.Data.OleDb.OleDbParameter.ResetDbType
  - System.Data.OleDb.OleDbParameter.ResetOleDbType
  - System.Data.OleDb.OleDbParameter.Scale
  - System.Data.OleDb.OleDbParameter.Size
  - System.Data.OleDb.OleDbParameter.SourceColumn
  - System.Data.OleDb.OleDbParameter.SourceColumnNullMapping
  - System.Data.OleDb.OleDbParameter.SourceVersion
  - System.Data.OleDb.OleDbParameter.System#ICloneable#Clone
  - System.Data.OleDb.OleDbParameter.ToString
  - System.Data.OleDb.OleDbParameter.Value
  langs:
  - csharp
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
  type: Class
  summary: "表示参数传递给<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>和 （可选） 到其映射<xref href=&quot;System.Data.DataSet&quot;></xref>列。 此类不能被继承。"
  remarks: "OLE DB.NET Framework 数据提供程序使用而不是命名参数问号 （？） 标记的位置参数。       在查询用于 Oracle (MSDAORA) 和 OLE DB.NET Framework 数据提供程序的 Microsoft OLE DB 提供程序的 Oracle 数据库时，使用`LIKE`子句为固定长度字段中的查询值可能不会返回所有预期的匹配项。 原因是当 Oracle 匹配中的固定长度字段值时`LIKE`子句，它与相匹配的字符串，包括任何填充尾随空格的整个长度。 例如，如果表中的 Oracle 数据库包含一个名为&quot;Field1&quot;定义为字段`char(3)`，并输入值&quot;a&quot;到该表中，下面的代码的行不返回行。      ```vb#   Dim queryString As String = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;;   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;;   OleDbDataReader reader = command.ExecuteReader();   ```这是因为 Oracle 存储&quot;a&quot;形式的列值 (填充&quot;a&quot;以尾随空格，以达到固定的字段长度为 3)，其中 Oracle 不会将其作为&quot;a&quot;的参数值的匹配项的情况下`LIKE`固定长度的字段的比较。       若要解决此问题，请将百分比 （&quot;%&quot;） 通配符字符追加到的参数值 (`&quot;a%&quot;`)，或改用 SQL`=`比较相反。"
  example:
  - "The following example creates multiple instances of OleDbParameter through the <xref:System.Data.OleDb.OleDbParameterCollection> collection within the <xref:System.Data.OleDb.OleDbDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.OleDb.OleDbDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \n  \n [!code-vb[Classic WebData OleDbParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_5_1.vb)]\n [!code-cs[Classic WebData OleDbParameter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))]

      public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter()
  nameWithType: OleDbParameter.OleDbParameter()
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类。"
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbParameter.OleDbParameter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: public OleDbParameter ();
    parameters: []
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)
  id: '#ctor(System.String,System.Data.OleDb.OleDbType)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,OleDbType)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称和数据类型。"
  remarks: "数据类型，并在适当时<xref:System.Data.OleDb.OleDbParameter.Size%2A>和<xref:System.Data.OleDb.OleDbParameter.Precision%2A>会从值推断出`dataType`参数。</xref:System.Data.OleDb.OleDbParameter.Precision%2A> </xref:System.Data.OleDb.OleDbParameter.Size%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/add/codesnippet/csharp/9545ec3c-a337-4c06-a8da-_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/add/codesnippet/visualbasic/9545ec3c-a337-4c06-a8da-_1.vb)]"
  syntax:
    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);
    parameters:
    - id: name
      type: System.String
      description: "要映射的参数的名称。"
    - id: dataType
      type: System.Data.OleDb.OleDbType
      description: "之一<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>值。"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dataType </code>参数不是无效的后端数据类型。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称和新值<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。"
  remarks: "你使用的此重载时要格外小心<xref:System.Data.OleDb.OleDbParameter>构造函数来指定整数参数值。</xref:System.Data.OleDb.OleDbParameter> 因为此重载接受`value`类型的<xref:System.Object>，必须将转换到的整数值<xref:System.Object>键入时的值为零，如下面的 C# 示例所示。</xref:System.Object> </xref:System.Object>      ```   Parameter = new OleDbParameter(&quot;@pname&quot;, Convert.ToInt32(0));   ```如果不执行此转换，则编译器将认为你尝试调用<xref:System.Data.OleDb.OleDbParameter.%23ctor%2A>构造函数重载。</xref:System.Data.OleDb.OleDbParameter.%23ctor%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter>.  \n  \n [!code-cs[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_16_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_16_1.vb)]"
  syntax:
    content: public OleDbParameter (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "要映射的参数的名称。"
    - id: value
      type: System.Object
      description: "新值<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>对象。"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)
  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,OleDbType,Int32)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称、 数据类型和长度。"
  remarks: "<xref:System.Data.OleDb.OleDbParameter.Size%2A>根据的值进行推断`dataType`如果未显式设置的参数`size`参数。</xref:System.Data.OleDb.OleDbParameter.Size%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/add/codesnippet/visualbasic/258d96fc-eacc-4579-be65-_1.vb)]\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/add/codesnippet/csharp/258d96fc-eacc-4579-be65-_1.cs)]"
  syntax:
    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);
    parameters:
    - id: name
      type: System.String
      description: "要映射的参数的名称。"
    - id: dataType
      type: System.Data.OleDb.OleDbType
      description: "之一<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "参数的长度。"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dataType </code>参数不是无效的后端数据类型。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,OleDbType,Int32,String)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称、 数据类型、 长度和源列名。"
  remarks: "<xref:System.Data.OleDb.OleDbParameter.Size%2A>根据的值进行推断`dataType`如果未显式设置的参数`size`参数。</xref:System.Data.OleDb.OleDbParameter.Size%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/add/codesnippet/visualbasic/a2a04a3a-d9c0-49e2-8704-_1.vb)]\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/add/codesnippet/csharp/a2a04a3a-d9c0-49e2-8704-_1.cs)]"
  syntax:
    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);
    parameters:
    - id: name
      type: System.String
      description: "要映射的参数的名称。"
    - id: dataType
      type: System.Data.OleDb.OleDbType
      description: "之一<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "参数的长度。"
    - id: srcColumn
      type: System.String
      description: "源列的名称。"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dataType </code>参数不是无效的后端数据类型。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称、 数据类型、 长度、 源列名、 参数方向、 数值精度和其他属性。"
  remarks: "<xref:System.Data.OleDb.OleDbParameter.Size%2A>和<xref:System.Data.OleDb.OleDbParameter.Precision%2A>会从值推断出`dataType`如果它们未显式设置的参数`size`和`precision`参数。</xref:System.Data.OleDb.OleDbParameter.Precision%2A> </xref:System.Data.OleDb.OleDbParameter.Size%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and displays the <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  \n  \n [!code-cs[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/csharp/21acfaf3-4211-4231-915b-_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/visualbasic/21acfaf3-4211-4231-915b-_1.vb)]"
  syntax:
    content: public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "参数的名称。"
    - id: dbType
      type: System.Data.OleDb.OleDbType
      description: "之一<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "参数的长度。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "之一<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字段的值可以为 null;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: precision
      type: System.Byte
      description: "总数的位数向左和向其小数点右侧<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "小数位数的总数<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*>"
    - id: srcColumn
      type: System.String
      description: "源列的名称。"
    - id: srcVersion
      type: System.Data.DataRowVersion
      description: "之一<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>的值<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dataType </code>参数不是无效的后端数据类型。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>类，该类使用参数名称、 数据类型、 长度、 源列名、 参数方向、 数值精度和其他属性。"
  remarks: "<xref:System.Data.OleDb.OleDbParameter.Size%2A>和<xref:System.Data.OleDb.OleDbParameter.Precision%2A>会从值推断出`dataType`如果它们未显式设置的参数`size`和`precision`参数。</xref:System.Data.OleDb.OleDbParameter.Precision%2A> </xref:System.Data.OleDb.OleDbParameter.Size%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and displays the <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  \n  \n [!code-cs[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/csharp/93078b65-3e17-4ead-9f09-_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/visualbasic/93078b65-3e17-4ead-9f09-_1.vb)]"
  syntax:
    content: public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "参数的名称。"
    - id: dbType
      type: System.Data.OleDb.OleDbType
      description: "之一<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "参数的长度。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "之一<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
    - id: precision
      type: System.Byte
      description: "总数的位数向左和向其小数点右侧<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "小数位数的总数<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "源列的名称。"
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "之一<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。"
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果源列可以为 null;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它不是。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>的值<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dataType </code>参数不是无效的后端数据类型。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.DbType
  id: DbType
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: DbType
  nameWithType: OleDbParameter.DbType
  fullName: System.Data.OleDb.OleDbParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.DbType&quot;></xref>的参数。"
  remarks: "<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>和链接的 DbType。</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> 因此，设置 DbType 更改<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>到支持<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>。</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> </xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>       有关支持的数据类型的列表，请参阅相应<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>成员。</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> 有关详细信息，请参阅[DataAdapter 参数](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbParameter.DbType Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_22_1.cs)]\n [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_22_1.vb)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "之一<xref href=&quot;System.Data.DbType&quot;></xref>值。 默认值是<xref href=&quot;System.Data.DbType&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbParameter.DbType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "该属性未设置为有效<xref href=&quot;System.Data.DbType&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.Direction
  id: Direction
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: Direction
  nameWithType: OleDbParameter.Direction
  fullName: System.Data.OleDb.OleDbParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置一个值，该值指示参数是只可输入，输出、 双向参数还是存储的过程返回值参数。"
  remarks: "如果<xref:System.Data.ParameterDirection>是输出，而执行的关联<xref:System.Data.OleDb.OleDbCommand>不返回一个值，<xref:System.Data.OleDb.OleDbParameter>包含一个 null 值。</xref:System.Data.OleDb.OleDbParameter> </xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.ParameterDirection>       `Output``InputOut`，和`ReturnValue`参数返回通过调用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>无法访问，直到你调用<xref:System.Data.OleDb.OleDbDataReader.Close%2A>或**释放** <xref:System.Data.OleDb.OleDbDataReader>。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.Direction = ParameterDirection.Output  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n```c#  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.Direction = ParameterDirection.Output;  \n }  \n```"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "之一<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "该属性未设置为一个有效<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.IsNullable
  id: IsNullable
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: OleDbParameter.IsNullable
  fullName: System.Data.OleDb.OleDbParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置一个值，该值指示参数是否接受 null 值。"
  remarks: "处理 null 值使用<xref:System.DBNull>类。</xref:System.DBNull>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.IsNullable = True  \n    parameter.Direction = ParameterDirection.Output  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n```c#  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.IsNullable = true;  \n    parameter.Direction = ParameterDirection.Output;  \n }  \n```"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果接受 null 值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.OleDbType
  id: OleDbType
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: OleDbType
  nameWithType: OleDbParameter.OleDbType
  fullName: System.Data.OleDb.OleDbParameter.OleDbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.OleDb.OleDbType&quot;></xref>的参数。"
  remarks: "OleDbType 和<xref:System.Data.OleDb.OleDbParameter.DbType%2A>链接。</xref:System.Data.OleDb.OleDbParameter.DbType%2A> 因此，设置<xref:System.Data.OleDb.OleDbParameter.DbType%2A>更改为支持<xref:System.Data.OleDb.OleDbType>。</xref:System.Data.OleDb.OleDbType> OleDbType</xref:System.Data.OleDb.OleDbParameter.DbType%2A>       有关支持的数据类型的列表，请参阅相应<xref:System.Data.OleDb.OleDbType>成员。</xref:System.Data.OleDb.OleDbType> 有关详细信息，请参阅[DataAdapter 参数](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OleDb.OleDbType OleDbType { get; set; }
    return:
      type: System.Data.OleDb.OleDbType
      description: "<xref href=&quot;System.Data.OleDb.OleDbType&quot;> </xref>的参数。 默认值是<xref href=&quot;System.Data.OleDb.OleDbType&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbParameter.OleDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.ParameterName
  id: ParameterName
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: OleDbParameter.ParameterName
  fullName: System.Data.OleDb.OleDbParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置的名称<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。"
  remarks: "OLE DB.NET Provider 使用而不是命名参数问号 （？） 标记的位置参数。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.Direction = ParameterDirection.Output  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.Direction = ParameterDirection.Output;  \n }  \n```"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "名称<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Data.OleDb.OleDbParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.Precision
  id: Precision
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: Precision
  nameWithType: OleDbParameter.Precision
  fullName: System.Data.OleDb.OleDbParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置用于表示的数字的最大数<xref:System.Data.OleDb.OleDbParameter.Value*>属性。</xref:System.Data.OleDb.OleDbParameter.Value*>"
  remarks: "精度属性仅用于 decimal 和 numeric 输入参数。       精度属性应设置仅对`Decimal`和`Numeric`之前调用<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>的<xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>方法</xref:System.Data.OleDb.OleDbCommand.Prepare%2A>的参数       此属性设置为数据库中的值以外的值取决于数据提供程序的实现，并可能会返回错误代码，截断或舍入数据。       `Precision`属性仅会影响参数其<xref:System.Data.OleDb.OleDbType>是`Decimal`， `Numeric`，或`VarNumeric`。</xref:System.Data.OleDb.OleDbType> 对于其他数据类型，`Precision`将被忽略。      1> [!NOTE]&1;> 不支持此属性的使用将数据强制传递到数据库。 若要舍入、 截断，或者将其传递到数据库之前强制数据，使用<xref:System.Math>类属于`System`之前将值分配给参数的命名空间`Value`属性。</xref:System.Math>      1> [!NOTE] 1> 附带.NET Framework 1.0 版的.NET framework 数据提供程序不验证精度或<xref:System.Data.OleDb.OleDbParameter.Scale%2A>的<xref:System.Decimal>参数值。</xref:System.Decimal> </xref:System.Data.OleDb.OleDbParameter.Scale%2A> 这会导致在数据源中要插入的截断的数据。 如果你使用的.NET Framework 1.0 版，验证精度和<xref:System.Data.OleDb.OleDbParameter.Scale%2A>的<xref:System.Decimal>之前设置参数值的值。</xref:System.Decimal> </xref:System.Data.OleDb.OleDbParameter.Scale%2A> <xref:System.Data.OleDb.OleDbParameter.Scale%2A>值超出了<xref:System.Decimal>参数的小数位数仍将被截断。</xref:System.Decimal></xref:System.Data.OleDb.OleDbParameter.Scale%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Price\", OleDbType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Price\", OleDbType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "用于表示的数字的最大数<> *1> 属性。默认值为 0，它表示的数据提供程序设置的精度<> *1>。"
  overload: System.Data.OleDb.OleDbParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: OleDbParameter.ResetDbType()
  fullName: System.Data.OleDb.OleDbParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "重置与此关联的类型<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。"
  remarks: "执行命令时包括参数值、 代码可以显式设置参数的类型或参数可以推断出类型的值。 调用此方法将重置参数，以便它可以再次推断出类型参数中传递的值。 调用此方法会影响这两个的<xref:System.Data.OleDb.OleDbParameter.DbType%2A>和<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>的<xref:System.Data.OleDb.OleDbParameter>。</xref:System.Data.OleDb.OleDbParameter>属性</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A></xref:System.Data.OleDb.OleDbParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.OleDb.OleDbParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType
  id: ResetOleDbType
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: ResetOleDbType()
  nameWithType: OleDbParameter.ResetOleDbType()
  fullName: System.Data.OleDb.OleDbParameter.ResetOleDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "重置与此关联的类型<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>。"
  remarks: "执行命令时包括参数值、 代码可以显式设置参数的类型或参数可以推断出类型的值。 调用此方法将重置参数，以便它可以再次推断出类型参数中传递的值。 调用此方法会影响这两个的<xref:System.Data.OleDb.OleDbParameter.DbType%2A>和<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>的<xref:System.Data.OleDb.OleDbParameter>。</xref:System.Data.OleDb.OleDbParameter>属性</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A></xref:System.Data.OleDb.OleDbParameter.DbType%2A>"
  syntax:
    content: public void ResetOleDbType ();
    parameters: []
  overload: System.Data.OleDb.OleDbParameter.ResetOleDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.Scale
  id: Scale
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: Scale
  nameWithType: OleDbParameter.Scale
  fullName: System.Data.OleDb.OleDbParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置到的小数位数<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*>"
  remarks: "小数位数属性仅用于 decimal 和 numeric 之前调用的输入参数<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>方法<xref:System.Data.OleDb.OleDbCommand>并指定数值输出参数。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.Prepare%2A>       此属性设置为数据库中的值以外的值取决于数据提供程序的实现，并可能会返回错误代码，截断或舍入数据。       使用 SQL Server 本机客户端时 10 （或更高版本），将其类型的参数绑定`Decimal`， `Numeric,``VarNumeric, DBDate`，或`DBTimeStamp`，你必须手动指定适当的比例值。      1> [!NOTE]&1;> 不支持此属性的使用将数据强制传递到数据库。 若要舍入、 截断，或者将其传递到数据库之前强制数据，使用<xref:System.Math>类属于`System`之前将值分配给参数的命名空间`Value`属性。</xref:System.Math>      1> [!NOTE] 1> 附带.NET Framework 1.0 版的.NET framework 数据提供程序不验证<xref:System.Data.OleDb.OleDbParameter.Precision%2A>或小数位数为<xref:System.Decimal>参数值。</xref:System.Decimal> </xref:System.Data.OleDb.OleDbParameter.Precision%2A> 这会导致在数据源中要插入的截断的数据。 如果你使用的.NET Framework 1.0 版，验证<xref:System.Data.OleDb.OleDbParameter.Precision%2A>和<xref:System.Data.OleDb.OleDbParameter>的<xref:System.Decimal>之前设置参数值的值。</xref:System.Decimal> </xref:System.Data.OleDb.OleDbParameter> </xref:System.Data.OleDb.OleDbParameter.Precision%2A> 缩放值超过<xref:System.Decimal>参数的小数位数仍将被截断。</xref:System.Decimal>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Price\", OleDbType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Price\", OleDbType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "小数位数数<xref:System.Data.OleDb.OleDbParameter.Value*>得到解决。</xref:System.Data.OleDb.OleDbParameter.Value*> 默认值为 0。"
  overload: System.Data.OleDb.OleDbParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.Size
  id: Size
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: Size
  nameWithType: OleDbParameter.Size
  fullName: System.Data.OleDb.OleDbParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置的最大大小，以字节为单位，列中的数据。"
  remarks: "大小属性用于二进制和字符串类型。       对于非字符串数据类型和 ANSI 字符串数据，大小属性引用的字节数。 Unicode 字符串数据大小是指的字符数。 字符串的计数不包括结尾的字符。       对于可变长度数据类型，大小描述数据传输到服务器的最大数量。 例如，对于 Unicode 字符串值，大小无法用来限制发送到服务器以的前 100 个字符的数据量。       对于双向和输出参数和返回值，必须设置的值的大小。 这不是必需的输入参数，并且如果没有显式设置的值推断从指定的参数的实际大小执行参数化的语句时。       <xref:System.Data.OleDb.OleDbParameter.DbType%2A>， <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>，并且可以通过设置<xref:System.Data.OleDb.OleDbParameter.Value%2A>.</xref:System.Data.OleDb.OleDbParameter.Value%2A>推断的参数的大小属性</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A></xref:System.Data.OleDb.OleDbParameter.DbType%2A> 因此，不需要指定它们。 但是，它们未公开在<xref:System.Data.OleDb.OleDbParameter>属性设置。</xref:System.Data.OleDb.OleDbParameter> 例如，如果已推断出参数的大小，大小不包含推断出的值在语句执行后。       对于固定长度的数据类型，则忽略大小的值。 它可以检索用于信息说明，并返回最大传输到服务器参数的值时，提供程序使用的字节数。       如果为<xref:System.Data.OleDb.OleDbParameter>超过指定的大小，<xref:System.Data.OleDb.OleDbParameter.Value%2A>的<xref:System.Data.OleDb.OleDbParameter>包含指定的值，截断至<xref:System.Data.OleDb.OleDbParameter>.</xref:System.Data.OleDb.OleDbParameter>大小</xref:System.Data.OleDb.OleDbParameter></xref:System.Data.OleDb.OleDbParameter.Value%2A></xref:System.Data.OleDb.OleDbParameter>提供的值的大小"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim myValue As String = \"12 foot scarf - multiple colors, one previous owner\"  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar)  \n    parameter.Direction = ParameterDirection.Output  \n    parameter.Size = myValue.Length  \n    parameter.Value = myValue  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    string myValue = \"12 foot scarf - multiple colors, one previous owner\";  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar);  \n    parameter.Direction = ParameterDirection.Output;  \n    parameter.Size = myValue.Length;  \n    parameter.Value = myValue;  \n }  \n```"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "以字节为单位，列中数据的最大大小。 根据参数值，默认值进行推断。"
  overload: System.Data.OleDb.OleDbParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: OleDbParameter.SourceColumn
  fullName: System.Data.OleDb.OleDbParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置映射到的源列的名称<xref href=&quot;System.Data.DataSet&quot;></xref>和用于加载或返回<xref:System.Data.OleDb.OleDbParameter.Value*>.</xref:System.Data.OleDb.OleDbParameter.Value*>"
  remarks: "当 SourceColumn 设置为一个空字符串之外的任何内容时，将从具有 SourceColumn 名称的列中检索参数的值。 如果<xref:System.Data.OleDb.OleDbParameter.Direction%2A>设置为`Input`，值取自<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbParameter.Direction%2A> 如果<xref:System.Data.OleDb.OleDbParameter.Direction%2A>设置为`Output`，从数据源中获取的值。</xref:System.Data.OleDb.OleDbParameter.Direction%2A> A<xref:System.Data.OleDb.OleDbParameter.Direction%2A>的`InputOutput`是这两者的组合。</xref:System.Data.OleDb.OleDbParameter.Direction%2A>       有关如何使用 SourceColumn 属性的详细信息，请参阅[DataAdapter 参数](~/add/includes/ajax-current-ext-md.md)和[使用 Dataadapter 更新数据源](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n }  \n```"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "映射到源列的名称<xref href=&quot;System.Data.DataSet&quot;> </xref>。 默认值为一个空字符串。"
  overload: System.Data.OleDb.OleDbParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: OleDbParameter.SourceColumnNullMapping
  fullName: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "设置或获取一个值，该值指示源列是否可以为 null。 这允许<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>以正确地生成 Update 语句为 null 的列。"
  remarks: "通过使用 SourceColumnNullMapping<xref:System.Data.Common.DbCommandBuilder>时处理可以为 null 的列正确生成更新命令。</xref:System.Data.Common.DbCommandBuilder> 通常情况下，使用 SourceColumnNullMapping 受到开发人员从<xref:System.Data.Common.DbCommandBuilder>.</xref:System.Data.Common.DbCommandBuilder>继承       <xref:System.Data.Common.DbCommandBuilder>使用此属性来确定源列是否可以为 null，并将此属性设置为`true`是否可以为 null，和`false`如果它不是。</xref:System.Data.Common.DbCommandBuilder> 当<xref:System.Data.Common.DbCommandBuilder>是生成其 Update 语句，检查每个参数 SourceColumnNullMapping。</xref:System.Data.Common.DbCommandBuilder> 如果属性是`true`，<xref:System.Data.Common.DbCommandBuilder>生成 WHERE 子句，如下所示 （在此查询表达式中，&quot;FieldName&quot;表示的字段名称）︰```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```字段如果 SourceColumnNullMapping 为 false，<xref:System.Data.Common.DbCommandBuilder>生成以下 WHERE 子句︰```   FieldName = @OriginalFieldName   ```此外，@IsNull_FieldName如果源字段包含 null 值和 0，如果它不包含 1。</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder> 此机制允许 SQL Server 中的一个性能优化，并提供的可以在多个提供程序的通用代码。"
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果源列可以为 null;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它不是。"
  overload: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: OleDbParameter.SourceVersion
  fullName: System.Data.OleDb.OleDbParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.DataRowVersion&quot;></xref>加载<xref:System.Data.OleDb.OleDbParameter.Value*>.</xref:System.Data.OleDb.OleDbParameter.Value*>时要使用"
  remarks: "使用<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>期间更新操作来确定是否将参数值设置为`Current`或`Original`。</xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 这样可以更新主键。 此属性设置为的新版<xref:System.Data.DataRow>由<xref:System.Data.DataRow.Item%2A>属性，或<xref:System.Data.DataRow.GetChildRows%2A>方法<xref:System.Data.DataRow>对象。</xref:System.Data.DataRow> </xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \n    parameter.SourceVersion = DataRowVersion.Current  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n    parameter.SourceVersion = DataRowVersion.Current;  \n }  \n```"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "之一<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbParameter.SourceVersion*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "该属性未设置为其中一个<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbParameter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "有关此成员的说明，请参阅&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.OleDb.OleDbParameter>实例被强制转换为<xref:System.ICloneable>接口。</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个新<xref:System.Object>，它是此实例的副本。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.ToString
  id: ToString
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: OleDbParameter.ToString()
  fullName: System.Data.OleDb.OleDbParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取一个字符串，包含<xref:System.Data.OleDb.OleDbParameter.ParameterName*>.</xref:System.Data.OleDb.OleDbParameter.ParameterName*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，包含<xref:System.Data.OleDb.OleDbParameter.ParameterName*>.</xref:System.Data.OleDb.OleDbParameter.ParameterName*>"
  overload: System.Data.OleDb.OleDbParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbParameter.Value
  id: Value
  parent: System.Data.OleDb.OleDbParameter
  langs:
  - csharp
  name: Value
  nameWithType: OleDbParameter.Value
  fullName: System.Data.OleDb.OleDbParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置参数的值。"
  remarks: "用于输入参数的值绑定到<xref:System.Data.OleDb.OleDbCommand>，发送到服务器。</xref:System.Data.OleDb.OleDbCommand> 对于输出参数和返回值参数，该数值将在完成<xref:System.Data.OleDb.OleDbCommand>后<xref:System.Data.OleDb.OleDbDataReader>已关闭。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbCommand>       当你向服务器发送 null 参数值时，必须指定<xref:System.DBNull>，而不是 null。</xref:System.DBNull> 系统中的 null 值是一个空的对象具有任何值。 <xref:System.DBNull>用于表示 null 值。</xref:System.DBNull>       如果应用程序指定数据库类型，绑定的值转换为该类型时提供程序将数据发送到服务器。 提供程序尝试将任何类型的值的转换，如果它支持<xref:System.IConvertible>接口。</xref:System.IConvertible> 如果指定的类型不兼容的值，可能会导致转换错误。       同时<xref:System.Data.OleDb.OleDbParameter.DbType%2A>和<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>属性可以推断出的值设置。</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> </xref:System.Data.OleDb.OleDbParameter.DbType%2A>       Value 属性覆盖由<xref:System.Data.IDbDataAdapter>.</xref:System.Data.IDbDataAdapter>的更新方法"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOleDbParameter()  \n    Dim parameter As New OleDbParameter(\"Description\", OleDbType.VarChar, 88)  \n    parameter.Value = \"garden hose\"  \nEnd Sub 'CreateOleDbParameter  \n```  \n  \n [C#]  \n  \n```  \npublic void CreateOleDbParameter()   \n {  \n    OleDbParameter parameter = new OleDbParameter(\"Description\", OleDbType.VarChar, 88);  \n    parameter.Value = \"garden hose\";  \n }  \n```"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>的参数的值。</xref:System.Object> 默认值为 null。"
  overload: System.Data.OleDb.OleDbParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.OleDb.OleDbParameter.#ctor
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter()
  nameWithType: OleDbParameter.OleDbParameter()
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter()
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,OleDbType)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbType
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbType
  nameWithType: OleDbType
  fullName: System.Data.OleDb.OleDbType
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,OleDbType,Int32)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,OleDbType,Int32,String)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
- uid: System.Data.OleDb.OleDbParameter.DbType
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: DbType
  nameWithType: OleDbParameter.DbType
  fullName: System.Data.OleDb.OleDbParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.OleDb.OleDbParameter.Direction
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Direction
  nameWithType: OleDbParameter.Direction
  fullName: System.Data.OleDb.OleDbParameter.Direction
- uid: System.Data.OleDb.OleDbParameter.IsNullable
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: IsNullable
  nameWithType: OleDbParameter.IsNullable
  fullName: System.Data.OleDb.OleDbParameter.IsNullable
- uid: System.Data.OleDb.OleDbParameter.OleDbType
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbType
  nameWithType: OleDbParameter.OleDbType
  fullName: System.Data.OleDb.OleDbParameter.OleDbType
- uid: System.Data.OleDb.OleDbParameter.ParameterName
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ParameterName
  nameWithType: OleDbParameter.ParameterName
  fullName: System.Data.OleDb.OleDbParameter.ParameterName
- uid: System.Data.OleDb.OleDbParameter.Precision
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Precision
  nameWithType: OleDbParameter.Precision
  fullName: System.Data.OleDb.OleDbParameter.Precision
- uid: System.Data.OleDb.OleDbParameter.ResetDbType
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: OleDbParameter.ResetDbType()
  fullName: System.Data.OleDb.OleDbParameter.ResetDbType()
- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ResetOleDbType()
  nameWithType: OleDbParameter.ResetOleDbType()
  fullName: System.Data.OleDb.OleDbParameter.ResetOleDbType()
- uid: System.Data.OleDb.OleDbParameter.Scale
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Scale
  nameWithType: OleDbParameter.Scale
  fullName: System.Data.OleDb.OleDbParameter.Scale
- uid: System.Data.OleDb.OleDbParameter.Size
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Size
  nameWithType: OleDbParameter.Size
  fullName: System.Data.OleDb.OleDbParameter.Size
- uid: System.Data.OleDb.OleDbParameter.SourceColumn
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OleDbParameter.SourceColumn
  fullName: System.Data.OleDb.OleDbParameter.SourceColumn
- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OleDbParameter.SourceColumnNullMapping
  fullName: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping
- uid: System.Data.OleDb.OleDbParameter.SourceVersion
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OleDbParameter.SourceVersion
  fullName: System.Data.OleDb.OleDbParameter.SourceVersion
- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbParameter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbParameter.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbParameter.ToString
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ToString()
  nameWithType: OleDbParameter.ToString()
  fullName: System.Data.OleDb.OleDbParameter.ToString()
- uid: System.Data.OleDb.OleDbParameter.Value
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Value
  nameWithType: OleDbParameter.Value
  fullName: System.Data.OleDb.OleDbParameter.Value
- uid: System.Data.OleDb.OleDbParameter.#ctor*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter.OleDbParameter
- uid: System.Data.OleDb.OleDbParameter.DbType*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: DbType
  nameWithType: OleDbParameter.DbType
- uid: System.Data.OleDb.OleDbParameter.Direction*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Direction
  nameWithType: OleDbParameter.Direction
- uid: System.Data.OleDb.OleDbParameter.IsNullable*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: IsNullable
  nameWithType: OleDbParameter.IsNullable
- uid: System.Data.OleDb.OleDbParameter.OleDbType*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: OleDbType
  nameWithType: OleDbParameter.OleDbType
- uid: System.Data.OleDb.OleDbParameter.ParameterName*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ParameterName
  nameWithType: OleDbParameter.ParameterName
- uid: System.Data.OleDb.OleDbParameter.Precision*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Precision
  nameWithType: OleDbParameter.Precision
- uid: System.Data.OleDb.OleDbParameter.ResetDbType*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ResetDbType
  nameWithType: OleDbParameter.ResetDbType
- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ResetOleDbType
  nameWithType: OleDbParameter.ResetOleDbType
- uid: System.Data.OleDb.OleDbParameter.Scale*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Scale
  nameWithType: OleDbParameter.Scale
- uid: System.Data.OleDb.OleDbParameter.Size*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Size
  nameWithType: OleDbParameter.Size
- uid: System.Data.OleDb.OleDbParameter.SourceColumn*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OleDbParameter.SourceColumn
- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OleDbParameter.SourceColumnNullMapping
- uid: System.Data.OleDb.OleDbParameter.SourceVersion*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OleDbParameter.SourceVersion
- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbParameter.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbParameter.ToString*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: ToString
  nameWithType: OleDbParameter.ToString
- uid: System.Data.OleDb.OleDbParameter.Value*
  parent: System.Data.OleDb.OleDbParameter
  isExternal: false
  name: Value
  nameWithType: OleDbParameter.Value
