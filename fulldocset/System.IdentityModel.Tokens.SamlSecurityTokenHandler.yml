### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  id: SamlSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  type: Class
  summary: "表示从 SAML 1.1 断言创建的安全令牌的安全令牌处理程序。"
  remarks: "SamlSecurityTokenHandler 类序列化和反序列化安全令牌由 SAML 1.1 断言到<xref:System.IdentityModel.Tokens.SamlSecurityToken>对象。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全令牌处理程序负责创建、 读取、 写入和验证令牌。       你可以配置安全令牌服务 (STS)，或者通过将 SamlSecurityTokenHandler 类的实例添加信赖方 (RP) 应用程序处理支持 SAML 1.1 断言的安全令牌<xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>配置服务 （或应用程序） 的对象。</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> 可以以编程方式或配置文件中完成此操作。 处理程序本身配置为通过集合的集合指定的配置从<xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A>属性添加到集合时。</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> 虽然可能通过设置单独配置处理程序，但其<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>属性，这不是，通常需要; 但是，如果必须单独配置处理程序，该属性应设置后该处理程序添加到集合。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>       对于许多情况下，SamlSecurityTokenHandler 类可以使用作为-;但是，此类提供通过方法它公开点的多个扩展。 通过从 SamlSecurityTokenHandler 派生和重写特定方法，你可以修改的默认实现中提供的令牌处理功能，或可以将扩展的处理添加到可能需要在某些方案中自定义的 SAML 断言规范。"
  syntax:
    content: 'public class SamlSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;></xref>与默认安全令牌要求类。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A>属性设置为实例<xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement>，它使用默认构造函数创建。</xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A>"
  syntax:
    content: public SamlSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;></xref>与指定的安全令牌要求类。"
  syntax:
    content: public SamlSecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);
    parameters:
    - id: samlSecurityTokenRequirement
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref>验证令牌时要使用此实例。 集<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*>属性。</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityTokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将所有与 ActAs 主题关联的属性集合中的委托添加。"
  syntax:
    content: protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "此委托<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref>对象序列化到<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>。 通过指定委托<xref:System.Security.Claims.ClaimsIdentity.Actor*>属性。</xref:System.Security.Claims.ClaimsIdentity.Actor*>"
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "ActAs 令牌将序列化到属性集合。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  id: Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis︰ 名称︰ tc: SAML:1.0:assertion"
  syntax:
    content: public const string Assertion;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  id: BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis︰ 名称︰ tc: SAML:1.0:cm:bearer"
  syntax:
    content: public const string BearerConfirmationMethod;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "该值指示是否可以处理此实例的类型的令牌作为读取当前 XML 元素。"
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 读取器定位开始元素处。 读取器不应为高级。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*>方法可以读取元素; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示此处理程序可以验证类型的令牌<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  remarks: "此方法重写基类方法，并始终返回`true`。"
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指示该处理程序可以验证类型的令牌<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示此处理程序是否可以序列化类型的令牌<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  remarks: "此方法重写基类方法，并始终返回`true`。"
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>;指示处理程序可以序列化类型的令牌<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置当前实例用来验证 X.509 证书的 X.509 证书验证程序。"
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> ，它表示验证程序。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  id: CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将使用通用声明类型、 声明值类型和原始颁发者属性收集到单个属性具有多个值。"
  syntax:
    content: protected virtual System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> CollectAttributeValues (System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "类型的集合<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>它包含生成从声明的特性。"
    return:
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "集合<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>包含从输入集合中派生的属性。 共享通用的声明类型，输入集合中的属性声明值，并与其他属性的原始颁发者合并到输出集合中的多个值的单个属性。 输入集合中的特性与其他属性不能共享声明类型、 声明值或原始颁发者显示输出集合中未更改。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，将创建<xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref>为断言的对象。"
  remarks: "默认情况下，此方法返回`null`。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> object. 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  id: CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建<xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref>通过使用指定的颁发者、 条件、 建议和语句的对象。 你可以重写此方法以自定义用于创建断言的参数。"
  remarks: "为断言创建一个唯一的随机 id 和<xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A>属性设置为此值。</xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> <xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A>设置为<xref:System.DateTime.UtcNow%2A>。</xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion CreateAssertion (string issuer, System.IdentityModel.Tokens.SamlConditions conditions, System.IdentityModel.Tokens.SamlAdvice advice, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> statements);
    parameters:
    - id: issuer
      type: System.String
      description: "该断言的颁发者。"
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref>将添加到断言。"
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref>将添加到断言。"
    - id: statements
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "集合<xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref>将添加到断言。"
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "SAML 断言创建。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>声明中的对象。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "<xref href=&quot;System.Security.Claims.Claim&quot;> </xref>从其生成 SAML 属性。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> ，该字符串包含转换后的声明。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建<xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref>从令牌描述符的对象。"
  remarks: "此方法可能返回`null`如果令牌描述符不包含任何使用者或使用者不具有任何声明。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement CreateAttributeStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref>用于<xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> ，它创建。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref>对象，其中包含声明将转换为 SAML 属性的值。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> ，包含已转换的声明。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建从指定的身份验证信息的 SAML 1.1 身份验证语句。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement CreateAuthenticationStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "在 SamlSubject 的语句。"
    - id: authInfo
      type: System.Security.Claims.AuthenticationInformation
      description: "<xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref>从其生成 SAML 身份验证语句。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "包含使用在令牌颁发中的所有其他信息。"
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "SAML 身份验证语句创建。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  id: CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建从 SAML 1.1 令牌的声明。"
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.SamlSecurityToken samlSecurityToken);
    parameters:
    - id: samlSecurityToken
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>表示从中创建声明的安全令牌。"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> ，包含从令牌中提取的声明。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*> property of <code>samlSecurityToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "没有配置处理程序或颁发者名称注册表未配置为处理程序。 ( <> </> *1> 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，或者设置为<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;></xref>与<> *1> 属性都<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "返回配置的颁发者名称注册表安全令牌的颁发者名称 (<code>samlSecurityToken</code>) 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建为断言的条件。"
  remarks: "通常情况下，条件应包括在断言，以限制被误用的断言的影响。 指定的条件 NotBefore 和 NotOnOrAfter 条件可以限制在泄露断言的情况下的漏洞的时间长度。 AudienceRestrictionCondition 可以用于预期的信赖方来显式声明或断言，结合的限制实施适当的受众的信赖方方可以帮助缓解信赖方之间的欺骗攻击。       默认实现将创建基于的 NotBefore 和 NotOnOrAfter 条件<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>属性`tokenDescriptor`。</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> 它还将生成限制到断言消耗 AudienceRestrictionCondition<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>属性`tokenDescriptor`。</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "令牌的生存期。"
    - id: relyingPartyAddress
      type: System.String
      description: "为其创建令牌终结点地址。 地址建模为 AudienceRestriction 条件。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref>包含断言的条件的对象。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建 SAML 1.1 断言的主题。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "从中创建使用者的安全令牌描述符。"
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref>表示断言的主题。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  id: CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "令牌未附加到消息，请创建安全令牌引用。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "SAML 令牌中。"
    - id: attached
      type: System.Boolean
      description: "一个值，该值指示是否应创建一个附加或未附加引用。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> ，表示令牌的引用。 (实例<xref href=&quot;System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause&quot;></xref>实际返回。)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建要包括在断言的 SAML 1.1 语句。"
  remarks: "中的 SAML 1.1 断言不需要语句。 此方法可能返回空集合。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "从中创建语句令牌描述符。"
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "枚举<xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref>包含的语句。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建基于令牌的描述符的安全令牌。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "从其创建安全令牌的令牌描述符。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示 SAML 1.1 安全令牌。 (返回的标记是实际的实例<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  id: CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>对象使用的指定用户主体名称 (UPN)。"
  syntax:
    content: protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);
    parameters:
    - id: upn
      type: System.String
      description: "要用于创建标识的 UPN。"
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "已创建的 Windows 标识。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>upn</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  id: CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "生成表示 Actor 的 SAML 1.1 特性的集合从一个 XML 格式字符串。"
  remarks: "字符串的格式为&quot;\\<Actor&1;>\\<属性名称、 ns&1;>\\<AttributeValue&1;>...\\</AttributeValue&1;>，... \\< /属性&1;>...\\</Actor>&quot;"
  syntax:
    content: protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
      description: "类型的枚举<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>它包含的特性。"
    return:
      type: System.String
      description: "格式正确的 XML 字符串构造使用的特性。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  id: DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回与匹配的 SAML 身份验证方法指定的规范化的值 SAML11 身份验证方法标识符。"
  remarks: 'DenormalizeAuthenticationType 方法返回与指定的规范化的 URI 匹配的 SAML11 身份验证方法标识符。 例如，如果<xref:System.IdentityModel.Tokens.AuthenticationMethods.X509>为指定`normalizedAuthenticationType`，返回了以下 URI: `urn:oasis:names:tc:SAML:1.0:am:X509-PKI`。</xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> 如果映射不存在`normalizedAuthenticationType`，它将返回未更改。'
  syntax:
    content: protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);
    parameters:
    - id: normalizedAuthenticationType
      type: System.String
      description: "规范化的值。 之一<xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;></xref>值。"
    return:
      type: System.String
      description: "SAML11 身份验证方法标识符 (URI) 指定的规范化的标识符相匹配。 如果不找到任何匹配的 SAML11 身份验证方法，则<code> normalizedAuthenticationType </code> URI 将返回未更改。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  id: DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "如果指定的标记已存在于令牌重放缓存，则将引发异常否则令牌添加到缓存中。"
  remarks: "默认行为是仅检查持有者令牌 （没有密钥的令牌）。 令牌重放缓存是<xref:System.IdentityModel.Tokens.TokenReplayCache>对象配置为通过此处理程序<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache%2A>属性<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration>对象通过引用<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>属性。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache%2A> </xref:System.IdentityModel.Tokens.TokenReplayCache>"
  syntax:
    content: protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示 SAML 1.1 安全令牌 (令牌的类型应该是<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>) 要检查。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -或- <> </> *1> 的处理程序配置的属性 (通过访问<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>属性) 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>不能强制转换为的实例<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "与令牌相关联的断言的 ID 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空。 ( <> </> *1> 令牌引用的属性<xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref>具有<> *1> 属性，引用<xref:System.IdentityModel.Tokens.SamlId>与<xref:System.IdentityModel.Tokens.SamlId.Value*>属性都<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空。)</xref:System.IdentityModel.Tokens.SamlId.Value*> </xref:System.IdentityModel.Tokens.SamlId>"
  - type: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    description: "中已存在该令牌<xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  id: FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "UPN 声明中指定的值的查找<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref>为了映射到的标识对象<xref:System.Security.Claims.WindowsClaimsIdentity>对象。</xref:System.Security.Claims.WindowsClaimsIdentity>"
  syntax:
    content: protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
      description: "包含所需的 UPN 声明的声明标识对象。"
    return:
      type: System.String
      description: "一个字符串，包含 UPN 声明找到的值。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取加密凭据的令牌。 重写此方法以更改加密凭据的令牌。"
  remarks: "默认实现检索中的加密凭据<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>属性`tokenDescriptor`。</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "检索某些加密凭据从作用域对象的作用域。"
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>表示加密凭据的令牌。</xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "加密令牌描述符从检索到凭据不对称。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "用于签名断言中获取的凭据。"
  remarks: "用作安全令牌的 SAML2 断言应进行签名。       默认实现使用<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>属性`tokenDescriptor`以检索凭据。</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "令牌的描述符。"
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref>表示签名断言的凭据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  id: GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回令牌重放缓存中应截止保存令牌的时间。"
  remarks: "默认情况下，如果存在，此方法也会返回 SAML 条件的 NotOnOrAfter。       如果该值不存在，则返回第一个 SubjectConfirmationData 的 NotOnOrAfter。       此函数将永远不会返回从当前时间 μ 值 (<xref:System.DateTime.Now%2A>) 比 Configuration.TokenReplayCacheExpirationPeriod。</xref:System.DateTime.Now%2A>"
  syntax:
    content: protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.SamlSecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "为其返回的过期时间令牌。"
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示过期时间。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取支持此处理程序的令牌类型标识符。"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "包含令牌的字符串的数组类型支持此处理程序的标识符。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置安全令牌序列化程序用于序列化和反序列化密钥标识符。"
  remarks: "序列化和反序列化<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>对象。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>表示序列化程序。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "尝试将值设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>时发生。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从 XML 加载自定义配置。"
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> ，它指定 SAML 令牌身份验证要求。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "中指定的配置<code> customConfigElements </code>无效。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  id: Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis︰ 名称︰ tc: SAML:1.0"
  syntax:
    content: public const string Namespace;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  id: NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回与 SAML 1.1 身份验证方法标识符相匹配的规范化的值。"
  remarks: "NormalizeAuthenticationType 方法返回<xref:System.IdentityModel.Tokens.AuthenticationMethods>匹配的指定的 SAML11 身份验证方法标识符的值。</xref:System.IdentityModel.Tokens.AuthenticationMethods> 例如，如果`urn:oasis:names:tc:SAML:1.0:am:X509-PKI`为指定`saml11AuthenticationMethod`，<xref:System.IdentityModel.Tokens.AuthenticationMethods.X509>返回。</xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> 如果映射不存在`saml11AuthenticationMethod`，它将返回未更改。"
  syntax:
    content: protected virtual string NormalizeAuthenticationType (string saml11AuthenticationMethod);
    parameters:
    - id: saml11AuthenticationMethod
      type: System.String
      description: "SAML 1.1 身份验证方法标识符 (URI) 进行规范化。"
    return:
      type: System.String
      description: "规范化的值，该值是一个的<xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;></xref>值。 如果没有匹配值存在， <code> saml11AuthenticationMethod </code>返回，不变。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从 SAML 1.1 属性语句创建声明并将它们添加到指定的使用者。"
  remarks: "创建的声明将添加到使用者。"
  syntax:
    content: protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.SamlAttributeStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref>从其声明的创建。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "声明将添加到使用者。"
    - id: issuer
      type: System.String
      description: "颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从 SAML 1.1 身份验证语句创建声明并将它们添加到指定的使用者。"
  syntax:
    content: protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.SamlAuthenticationStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref>从其声明的创建。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "声明将添加到使用者。"
    - id: issuer
      type: System.String
      description: "颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从 SAML 1.1 授权决策语句创建声明并将它们添加到指定的使用者。"
  remarks: "默认实现没有任何影响。"
  syntax:
    content: protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref>从其声明的创建。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "声明将添加到使用者。"
    - id: issuer
      type: System.String
      description: "颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从 SAML 1.1 主题创建声明并将它们添加到指定的使用者。"
  syntax:
    content: protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref>从其声明的创建。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "声明将添加到使用者。"
    - id: issuer
      type: System.String
      description: "颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从一组 SAML 1.1 语句创建声明并将它们添加到指定的使用者。"
  syntax:
    content: protected virtual void ProcessStatement (System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement> statements, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statements
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
      description: "从中创建声明 SAML 语句。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "声明将添加到使用者。"
    - id: issuer
      type: System.String
      description: "颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  id: ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Action&gt;元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAction ReadAction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAction
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;> </xref> ，它表示读取操作元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  id: ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Advice&gt;元素。"
  remarks: "建议元素都有一个扩展点，以允许从非 SAML 1.1 命名空间包含的 XML 元素。 默认情况下，因为建议可能忽略而不会影响的语义的断言，将忽略任何此类元素。 若要处理这些元素的处理，重写此方法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice ReadAdvice (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> ，它表示读取建议元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  id: ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Assertion&gt;元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion ReadAssertion (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref>表示读取了 Assertion 元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  id: ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Attribute&gt;元素。"
  remarks: "默认实现需要属性元素的内容是一个简单的字符串。 若要处理复杂内容或声明简单类型 xs: string 以外的内容，重写此方法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute ReadAttribute (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref>表示读取了 Assertion 元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  id: ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:AttributeStatement&gt;元素，或&lt;saml:Statement&gt;指定 saml:AttributeStatementType 的 xsi: type 的元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> ，表示所读取的元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  id: ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取属性值。"
  syntax:
    content: protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "所读取的属性。"
    return:
      type: System.String
      description: "一个包含属性值的字符串。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  id: ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:AudienceRestrictionCondition&gt;从指定的 XML 读取器的元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAudienceRestrictionCondition ReadAudienceRestrictionCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 读取器定位在&lt;saml:AudienceRestrictionCondition&gt;读取的元素。"
    return:
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> ，表示所读取的元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  id: ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:AuthnStatement&gt;元素或&lt;saml:Statement&gt;指定 saml:AuthnStatementType 的 xsi: type 的元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref> ，表示所读取的元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  id: ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:AuthorityBinding&gt;元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorityBinding ReadAuthorityBinding (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 读取器定位在&lt;saml:AuthorityBinding&gt;元素"
    return:
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAuthorityBinding&quot;> </xref>读取。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>未放置在 saml:AuthorityBinding 元素或包含一个无法识别的子元素或不是有效的子元素。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  id: ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:AuthzDecisionStatement&gt;元素或&lt;saml:Statement&gt;指定 saml:AuthzDecisionStatementType 的 xsi: type 的元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "A <xref:System.IdentityModel.Tokens.SamlAuthorizationStatement>，表示所读取的元素。</xref:System.IdentityModel.Tokens.SamlAuthorizationStatement>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  id: ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从指定的读取器读取 saml:AudienceRestrictionCondition 或 saml:DoNotCacheCondition"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlCondition ReadCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "从其中读取元素读取器。"
    return:
      type: System.IdentityModel.Tokens.SamlCondition
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;> </xref>从 XML 读取。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>将位于未知元素。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  id: ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Conditions&gt;元素。"
  remarks: "若要处理自定义\\<saml:Condition&1;> 元素，重写此方法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions ReadConditions (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> ，它表示读取条件元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>未放置在 Conditions 元素。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  id: ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从指定的 XML 读取器读取 saml:DoNotCacheCondition 元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlDoNotCacheCondition ReadDoNotCacheCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 读取器位于 saml:DoNotCacheCondition 元素"
    return:
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;> </xref>读取。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>未放置在 saml:DoNotCacheCondition 元素。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  id: ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Evidence&gt;元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlEvidence ReadEvidence (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> ，它表示读取证据元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  id: ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "反序列化签名 KeyInfo 的 SAML。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XmlReader 可以位于 ds:KeyInfo 元素。"
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "具有签名检查断言。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> ，表示要用于检查签名的键。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  id: ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Statement&gt;元素。"
  remarks: "默认实现仅处理指定的 saml:AttributeStatementType、 saml:AuthnStatementType 和 saml:AuthzDecisionStatementType xsi: type 的语句元素。 若要处理自定义语句，重写此方法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlStatement ReadStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref> ，表示所读取的语句元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  id: ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取&lt;saml:Subject&gt;元素。"
  remarks: "默认实现不处理可选\\<EncryptedID&1;> 元素。 若要处理 encryped Id 使用者中的，重写此方法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject ReadSubject (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于要读取的元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> ，表示使用者读取的元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  id: ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "反序列化 SAML 主题&lt;ds:KeyInfo&gt;元素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>位于&lt;ds:KeyInfo&gt;元素。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>表示的内容&lt;ds:KeyInfo&gt;元素。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从指定的流中读取 SAML 1.1 令牌。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A<xref:System.Xml.XmlReader>到 SAML 1.1 安全令牌的流。</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "实例<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -或- <> </> *1> 由指定的配置属性<> *1> 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。      -或- <> </> *1> 由指定的配置属性<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "解析到的签名密钥标识符<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref>要为其颁发者令牌解析。"
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "当前<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref>与此处理程序关联。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示解析的令牌。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "该处理程序无法解析令牌。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "解析<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> saml:Subject 元素中指定。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKey ResolveSubjectKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier subjectKeyIdentifier);
    parameters:
    - id: subjectKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "要解析为密钥的密钥标识符。"
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "从密钥标识符解析键。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  id: SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置此实例的令牌要求的安全。"
  syntax:
    content: public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref>指定的要求。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "尝试将值设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>时发生。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  id: SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "此方法会被调用时的一种特殊类型<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>检测到。 <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>中包装传递<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> ，其中包含属性值的集合 (在<xref:System.IdentityModel.Tokens.SamlAttribute.Values*>属性)，其中每个将会映射到声明。</xref:System.IdentityModel.Tokens.SamlAttribute.Values*> 会在返回的所有声明<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref>与指定的颁发者。"
  syntax:
    content: protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.SamlAttribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> to use."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref>的此令牌的主题。"
    - id: issuer
      type: System.String
      description: "声明颁发者。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>不包含任何有效的属性值。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取支持此处理程序的令牌类型。"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>的<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>类</xref:System.Type>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将签名的密钥标识符解析为 SecurityToken。"
  syntax:
    content: protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref>要为其颁发者令牌解析。"
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "当前<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref>与此处理程序关联。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "此方法返回时，包含解析的安全令牌，如果令牌已成功解决。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该标记处于已解决状态。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  id: UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis︰ 名称︰ tc: SAML:1.0:am︰ 未指定"
  syntax:
    content: public const string UnspecifiedAuthenticationMethod;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  id: ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "验证指定<xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref>对象。"
  remarks: "如果条件无效，将引发相应的异常。 令牌可能不是有效的多种原因。 例如，当前时间或可能不在令牌的有效期内，令牌可能包含数据矛盾或无效，令牌可能包含不受支持的 SAML 1.1 元素。"
  syntax:
    content: protected virtual void ValidateConditions (System.IdentityModel.Tokens.SamlConditions conditions, bool enforceAudienceRestriction);
    parameters:
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "要验证的 SAML 1.1 条件。"
    - id: enforceAudienceRestriction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要检查受众限制条件。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "验证令牌数据，并返回其声明。"
  remarks: "如果该令牌无效，将引发相应的异常。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "要验证的 SAML 1.1 令牌。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "在令牌中包含的标识。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  id: WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Action&gt;元素。"
  syntax:
    content: protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAction action);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: action
      type: System.IdentityModel.Tokens.SamlAction
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>action</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  id: WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Advice&gt;元素。"
  syntax:
    content: protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAdvice advice);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>advice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  id: WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "序列化到指定的 XML 编写器指定的 SAML 断言。"
  syntax:
    content: protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用于序列化。</xref:System.Xml.XmlWriter>"
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> ，表示要序列化的断言。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>assertion</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定的断言<code> assertion </code>同时具有<xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>和<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials>属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials> </xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>       -或-有任何语句和指定的断言中没有使用者<code> data </code>。 (这两个<> *1> 属性和<> *1> 属性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。)如果断言不包含语句，它必须包含一个使用者。       -指定通过断言<code> assertion </code>包含的身份验证、 属性或授权决策语句和任何使用者 — 这些语句需要一个使用者。 ( <> </> *1> 属性包含的声明类型的<xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref>， <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref>，或<xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;></xref>和<> *1> 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "令牌加密凭据没有指定的对称密钥。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Attribute&gt;元素。"
  syntax:
    content: protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attribute</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  id: WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:AttributeStatement&gt;元素。"
  syntax:
    content: protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttributeStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入 saml:Attribute 值。"
  remarks: "默认情况下该方法将值作为字符串。"
  syntax:
    content: protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来编写。</xref:System.Xml.XmlWriter>"
    - id: value
      type: System.String
      description: "一个字符串，包含要写入的属性值。"
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>表示正在写入其值的属性。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  id: WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:AudienceRestriction&gt;元素。"
  syntax:
    content: protected virtual void WriteAudienceRestrictionCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAudienceRestrictionCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: condition
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.IdentityModel.Tokens.SamlConditions.Conditions*>属性<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>中指定<code> condition </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空集合。</xref:System.IdentityModel.Tokens.SamlConditions.Conditions*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  id: WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:AuthnStatement&gt;元素。"
  syntax:
    content: protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthenticationStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  id: WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:AuthorityBinding&gt;元素。"
  syntax:
    content: protected virtual void WriteAuthorityBinding (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorityBinding authorityBinding);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: authorityBinding
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authorityBinding</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  id: WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:AuthzDecisionStatement&gt;元素。"
  syntax:
    content: protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  id: WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "序列化指定<xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;></xref>对象。"
  remarks: "默认情况下，此方法将调用是<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A>或<xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A>方法序列化条件基于的一种<xref:System.IdentityModel.Tokens.SamlCondition>指定。</xref:System.IdentityModel.Tokens.SamlCondition> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A>"
  syntax:
    content: protected virtual void WriteCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: condition
      type: System.IdentityModel.Tokens.SamlCondition
      description: "要写入的数据。 默认情况下，仅<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>和<xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;></xref>支持。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>condition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>condition</code>不支持。 。 默认情况下，仅<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>和<xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;></xref>支持。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  id: WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Conditions&gt;元素。"
  syntax:
    content: protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlConditions conditions);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditions</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  id: WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:DoNotCacheCondition&gt;元素。"
  syntax:
    content: protected virtual void WriteDoNotCacheCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlDoNotCacheCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "用于将数据写入 XML 编写器。"
    - id: condition
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>condition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  id: WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Evidence&gt;元素。"
  syntax:
    content: protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlEvidence evidence);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: evidence
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入签名&lt;ds:KeyInfo&gt;使用指定的 XML 编写器的元素。"
  syntax:
    content: protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来序列化密钥标识符。</xref:System.Xml.XmlWriter>"
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> ，它表示要编写的密钥标识符。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signingKeyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "处理程序无法将指定的密钥标识符序列化为<code> signingKeyIdentifier </code>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  id: WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入 SamlStatement。"
  remarks: "此方法可以编写\\<saml:AttributeStatement&1;>， \\<saml:AuthnStatement&1;>，或\\<saml:AuthzDecisionStatement&1;> 元素。 若要处理自定义<xref:System.IdentityModel.Tokens.SamlStatement>以进行写入的类\\<saml:Statement&1;> 元素，重写此方法。</xref:System.IdentityModel.Tokens.SamlStatement>"
  syntax:
    content: protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlStatement
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  id: WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入&lt;saml:Subject&gt;元素。"
  syntax:
    content: protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlSubject subject);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: subject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "要写入的数据。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "序列化使用者&lt;ds:KeyInfo&gt;使用指定的 XML 编写器的元素。"
  syntax:
    content: protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier subjectSki);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来序列化密钥标识符。</xref:System.Xml.XmlWriter>"
    - id: subjectSki
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> ，它表示要编写的密钥标识符。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectSki</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将 Saml 令牌写入指定的 XML 编写器。"
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>用来写入数据。</xref:System.Xml.XmlWriter>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "要写入的标记。"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>不是<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>对象。"
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenReplayDetectedException
  nameWithType: SecurityTokenReplayDetectedException
  fullName: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<SamlAttribute>
  nameWithType: ICollection<SamlAttribute>
  fullName: System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlStatement>
  nameWithType: IEnumerable<SamlStatement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttributeStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttributeStatement
  nameWithType: SamlAttributeStatement
  fullName: System.IdentityModel.Tokens.SamlAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSubject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSubject
  nameWithType: SamlSubject
  fullName: System.IdentityModel.Tokens.SamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAuthenticationStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthenticationStatement
  nameWithType: SamlAuthenticationStatement
  fullName: System.IdentityModel.Tokens.SamlAuthenticationStatement
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlAttribute>
  nameWithType: IEnumerable<SamlAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorizationDecisionStatement
  nameWithType: SamlAuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlStatement>
  nameWithType: IList<SamlStatement>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAction
  nameWithType: SamlAction
  fullName: System.IdentityModel.Tokens.SamlAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorityBinding
  nameWithType: SamlAuthorityBinding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlDoNotCacheCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlDoNotCacheCondition
  nameWithType: SamlDoNotCacheCondition
  fullName: System.IdentityModel.Tokens.SamlDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
- uid: System.IdentityModel.Tokens.SamlEvidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlEvidence
  nameWithType: SamlEvidence
  fullName: System.IdentityModel.Tokens.SamlEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: SamlSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice
  nameWithType: SamlSecurityTokenHandler.CreateAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion
  nameWithType: SamlSecurityTokenHandler.CreateAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute
  nameWithType: SamlSecurityTokenHandler.CreateAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims
  nameWithType: SamlSecurityTokenHandler.CreateClaims
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions
  nameWithType: SamlSecurityTokenHandler.CreateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements
  nameWithType: SamlSecurityTokenHandler.CreateStatements
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: SamlSecurityTokenHandler.CreateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn
  nameWithType: SamlSecurityTokenHandler.FindUpn
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement
  nameWithType: SamlSecurityTokenHandler.ProcessStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction
  nameWithType: SamlSecurityTokenHandler.ReadAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice
  nameWithType: SamlSecurityTokenHandler.ReadAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion
  nameWithType: SamlSecurityTokenHandler.ReadAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute
  nameWithType: SamlSecurityTokenHandler.ReadAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition
  nameWithType: SamlSecurityTokenHandler.ReadCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions
  nameWithType: SamlSecurityTokenHandler.ReadConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence
  nameWithType: SamlSecurityTokenHandler.ReadEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement
  nameWithType: SamlSecurityTokenHandler.ReadStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject
  nameWithType: SamlSecurityTokenHandler.ReadSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: SamlSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions
  nameWithType: SamlSecurityTokenHandler.ValidateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: SamlSecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction
  nameWithType: SamlSecurityTokenHandler.WriteAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice
  nameWithType: SamlSecurityTokenHandler.WriteAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion
  nameWithType: SamlSecurityTokenHandler.WriteAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute
  nameWithType: SamlSecurityTokenHandler.WriteAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition
  nameWithType: SamlSecurityTokenHandler.WriteCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions
  nameWithType: SamlSecurityTokenHandler.WriteConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence
  nameWithType: SamlSecurityTokenHandler.WriteEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement
  nameWithType: SamlSecurityTokenHandler.WriteStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject
  nameWithType: SamlSecurityTokenHandler.WriteSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: SamlSecurityTokenHandler.WriteToken
