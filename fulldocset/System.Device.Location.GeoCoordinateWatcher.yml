### YamlMime:ManagedReference
items:
- uid: System.Device.Location.GeoCoordinateWatcher
  id: GeoCoordinateWatcher
  children:
  - System.Device.Location.GeoCoordinateWatcher.#ctor
  - System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  - System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  - System.Device.Location.GeoCoordinateWatcher.Dispose
  - System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  - System.Device.Location.GeoCoordinateWatcher.Finalize
  - System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  - System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  - System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  - System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  - System.Device.Location.GeoCoordinateWatcher.Permission
  - System.Device.Location.GeoCoordinateWatcher.Position
  - System.Device.Location.GeoCoordinateWatcher.PositionChanged
  - System.Device.Location.GeoCoordinateWatcher.Start
  - System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  - System.Device.Location.GeoCoordinateWatcher.Status
  - System.Device.Location.GeoCoordinateWatcher.StatusChanged
  - System.Device.Location.GeoCoordinateWatcher.Stop
  - System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  langs:
  - csharp
  name: GeoCoordinateWatcher
  nameWithType: GeoCoordinateWatcher
  fullName: System.Device.Location.GeoCoordinateWatcher
  type: Class
  summary: "提供位置基于纬度和经度坐标的数据。"
  remarks: "GeoCoordinateWatcher 类提供了基于坐标的位置数据来自当前位置提供程序。 因为最高的计算机上，基于多种因素，例如年龄和准确性的所有提供程序中的数据请求的位置的应用程序，以及与位置提供程序关联的电源消耗和性能影响的准确性优先当前位置提供程序。 随着时间推移，例如，当 GPS 设备失去其附属信号功能和 Wi-fi 三角化提供程序将成为最准确的提供程序计算机上可能会更改当前的位置提供程序。       若要开始访问位置的数据，创建一个 GeoCoordinateWatcher 并调用<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>或<xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A>启动获取来自当前位置提供程序的数据。</xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>       <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性可以进行检查，以确定数据是否可用。</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> 从一次数据是否可用，你都可以获取位置<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性，或通过处理接收连续位置更新<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件。</xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>       <xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>， <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>，和<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性支持<xref:System.ComponentModel.INotifyPropertyChanged>，以便应用程序可以数据绑定到这些属性。</xref:System.ComponentModel.INotifyPropertyChanged> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>       在 Windows 7 中，所有<xref:System.Device.Location>类都可以完全正常运行，如果安装位置提供程序，并能够解析计算机的位置。</xref:System.Device.Location>      1> [!NOTE] 1> 上 Windows 7 简易版中，唯一支持的位置提供程序是默认位置中的提供程序 Control Panel 中，和外接程序必须要安装指定纬度和经度。       **请注意**在 Windows 7 之前的 Windows 版本中，在以下条件适用:-所有，则<xref:System.Device.Location>可以创建构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      的<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将始终为<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>所指示位置      的将不引发任何位置事件。"
  example:
  - "The following program shows how to create a GeoCoordinateWatcher and start acquiring data by using an initialization timeout. The code then prints the coordinates of the location, if known.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#1)]  \n  \n The following program shows how to receive continuous location updates by subscribing to <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> events.  \n  \n [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataAsync/GetLocationDataAsync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/csharp/getlocationdataasync/getlocationdataasync.cs#1)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class GeoCoordinateWatcher : IDisposable, System.ComponentModel.INotifyPropertyChanged, System.Device.Location.IGeoPositionWatcher<System.Device.Location.GeoCoordinate>
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - System.Device.Location.IGeoPositionWatcher<System.Device.Location.GeoCoordinate>
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor
  id: '#ctor'
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: GeoCoordinateWatcher()
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher()
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>使用默认精度设置。"
  remarks: "默认值精度设置为<xref:System.Device.Location.GeoPositionAccuracy>。</xref:System.Device.Location.GeoPositionAccuracy>       **请注意**在 Windows 7 之前的 Windows 版本中，在以下条件适用:-所有，则<xref:System.Device.Location>可以创建构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      的<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将始终为<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>所指示位置      的将不引发任何位置事件。"
  syntax:
    content: public GeoCoordinateWatcher ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  id: '#ctor(System.Device.Location.GeoPositionAccuracy)'
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: GeoCoordinateWatcher(GeoPositionAccuracy)
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>，给定的精度级别。"
  remarks: "**请注意**在 Windows 7 之前的 Windows 版本中，在以下条件适用:-所有，则<xref:System.Device.Location>可以创建构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      的<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将始终为<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>所指示位置      的将不引发任何位置事件。"
  syntax:
    content: public GeoCoordinateWatcher (System.Device.Location.GeoPositionAccuracy desiredAccuracy);
    parameters:
    - id: desiredAccuracy
      type: System.Device.Location.GeoPositionAccuracy
      description: "<xref:System.Device.Location.GeoLocationAccuracy>指示位置提供程序的请求的精度的级别。</xref:System.Device.Location.GeoLocationAccuracy>       精确<xref href=&quot;System.Device.Location.GeoPositionAccuracy&quot;></xref>会降低性能，应仅在需要高精度时指定。"
  overload: System.Device.Location.GeoCoordinateWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  id: DesiredAccuracy
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
  fullName: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "提供的位置数据的请求的准确性级别<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>。"
  remarks: "精确<xref:System.Device.Location.GeoPositionAccuracy>会降低性能，应仅在需要高精度时指定。</xref:System.Device.Location.GeoPositionAccuracy>       **请注意**在 Windows 7 之前的 Windows 版本中，在以下条件适用:-所有，则<xref:System.Device.Location>可以创建构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      的<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将始终为<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>所指示位置      的将不引发任何位置事件。"
  syntax:
    content: public System.Device.Location.GeoPositionAccuracy DesiredAccuracy { get; }
    return:
      type: System.Device.Location.GeoPositionAccuracy
      description: "<xref href=&quot;System.Device.Location.GeoPositionAccuracy&quot;></xref>指示位置提供程序的请求的精度级别。"
  overload: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose
  id: Dispose
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Dispose()
  nameWithType: GeoCoordinateWatcher.Dispose()
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "释放由当前实例的所有资源<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>类。"
  remarks: "调用<xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>完成之后使用<xref:System.Device.Location.GeoCoordinateWatcher>类？ qualifyHint = False & 自动升级 = True。</xref:System.Device.Location.GeoCoordinateWatcher> </xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>       应调用此方法，以便可以释放非托管的资源。       有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: GeoCoordinateWatcher.Dispose(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "释放当前实例所使用的所有资源<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>类。"
  remarks: "调用<xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>完成之后使用<xref:System.Device.Location.GeoCoordinateWatcher>类？ qualifyHint = False & 自动升级 = True。</xref:System.Device.Location.GeoCoordinateWatcher> </xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>       应调用此方法，以便可以释放非托管的资源。       有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Device.Location.GeoCoordinateWatcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize
  id: Finalize
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Finalize()
  nameWithType: GeoCoordinateWatcher.Finalize()
  fullName: System.Device.Location.GeoCoordinateWatcher.Finalize()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "释放资源并执行其他清理操作之前<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>通过垃圾回收回收。"
  syntax:
    content: ~GeoCoordinateWatcher ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  id: MovementThreshold
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
  fullName: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "必须移动，以米为单位，相对于从上一个坐标的距离<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;></xref>之前的位置提供程序将引发另一个事件<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;></xref>事件。"
  remarks: "默认移动阈值为零，这意味着，任何更改在由当前的位置提供程序原因检测到的位置<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件和中的更新<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性。</xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>      1> [!NOTE]&1;> 移动阈值并不保证将在所请求的阈值接收事件。 该平台将尝试接受请求某个特定移动阈值，但不是会在某些情况下，事件引发在请求的阈值。       **请注意**在 Windows 7 之前的 Windows 版本中，在以下条件适用:-所有，则<xref:System.Device.Location>可以创建构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      的<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将始终为<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>所指示位置      的将不引发任何位置事件。       下图表示位置提供程序 （例如，GPS 设备） 提供到计算机的位置坐标。 P1、 在关系图中，表示中包括的位置数据<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件，和 P2、 P3 和 P4 表示在移动的阈值内的点。</xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> 因此，当位置提供程序提供数据，该值指示在这些点 （P1、 P2、 P3、 和 P4） 的某个位置不<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>引发的事件，和<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>返回 P1。</xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> 在 movementthreshold 的关系距离，之外会因此在该点，是点 P5<xref:System.Device.Location.GeoLocationProvider.Location%2A>更新和<xref:System.Device.Location.GeoLocationProvider.LocationChanged>引发事件。</xref:System.Device.Location.GeoLocationProvider.LocationChanged> </xref:System.Device.Location.GeoLocationProvider.Location%2A>       ![演示 movementthreshold 的关系的关系图](~/add/media/ndp-movementthreshold.png &quot;关系图演示 movementthreshold 的关系&quot;)"
  syntax:
    content: public double MovementThreshold { get; set; }
    return:
      type: System.Double
      description: "距离，以米为单位。"
  overload: System.Device.Location.GeoCoordinateWatcher.MovementThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  id: OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  nameWithType: GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "时调用<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;></xref>事件发生。"
  remarks: ''
  example:
  - "The following program shows how to subscribe to continuous updates from <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> events.  \n  \n [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataAsync/GetLocationDataAsync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/csharp/getlocationdataasync/getlocationdataasync.cs#1)]"
  syntax:
    content: protected void OnPositionChanged (System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate> e);
    parameters:
    - id: e
      type: System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}
      description: "A &lt;xref:System.Device.Location.GeoPositionChangedEventArgs%601&gt;对象，其中包含新的位置。"
  overload: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  id: OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "时调用<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.StatusChanged&quot;></xref>事件发生。"
  syntax:
    content: protected void OnPositionStatusChanged (System.Device.Location.GeoPositionStatusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Device.Location.GeoPositionStatusChangedEventArgs
      description: "A <xref href=&quot;System.Device.Location.GeoPositionStatusChangedEventArgs&quot;> </xref>对象，其中包含新的状态。"
  overload: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPropertyChanged(String)
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged(String)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(String)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "时的一个属性调用<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>更改。"
  remarks: "处理<xref:System.Device.Location.GeoCoordinateWatcher.System.ComponentModel.INotifyPropertyChanged.PropertyChanged>事件以在 Windows 窗体应用程序中实现数据绑定。</xref:System.Device.Location.GeoCoordinateWatcher.System.ComponentModel.INotifyPropertyChanged.PropertyChanged>       此方法指示<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性，<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性，或<xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>属性已更改。</xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>"
  syntax:
    content: protected void OnPropertyChanged (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "已更改的属性名称。"
  overload: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Permission
  id: Permission
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
  fullName: System.Device.Location.GeoCoordinateWatcher.Permission
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "指示是否已授予或拒绝访问位置提供程序中的位置数据的权限。"
  syntax:
    content: public System.Device.Location.GeoPositionPermission Permission { get; }
    return:
      type: System.Device.Location.GeoPositionPermission
      description: "一个值，指示是否已授予或拒绝权限。"
  overload: System.Device.Location.GeoCoordinateWatcher.Permission*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Position
  id: Position
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
  fullName: System.Device.Location.GeoCoordinateWatcher.Position
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>指示当前的位置。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of the Position property is saved in a <xref:System.Device.Location.GeoCoordinate> object. The latitude and longitude fields of the <xref:System.Device.Location.GeoCoordinate> are printed if they are known.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#2](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#2)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#2](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#2)]"
  syntax:
    content: public System.Device.Location.GeoPosition<System.Device.Location.GeoCoordinate> Position { get; }
    return:
      type: System.Device.Location.GeoPosition{System.Device.Location.GeoCoordinate}
      description: "<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>指示当前的位置。"
  overload: System.Device.Location.GeoCoordinateWatcher.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  id: PositionChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: PositionChanged
  nameWithType: GeoCoordinateWatcher.PositionChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "指示已更改的纬度或经度位置数据。"
  remarks: "在移动的距离，因为最后一个事件超过<xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>。</xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>指定的阈值时，仅将引发此事件       <xref:System.Device.Location.GeoPositionChangedEventArgs%601>传递给事件处理程序对象包括<xref:System.Device.Location.GeoPosition%601>对象，其中包含更新的位置数据。</xref:System.Device.Location.GeoPosition%601> </xref:System.Device.Location.GeoPositionChangedEventArgs%601>"
  example:
  - "The following example shows how to handle the first PositionChanged event.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>> PositionChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Start
  id: Start
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Start()
  nameWithType: GeoCoordinateWatcher.Start()
  fullName: System.Device.Location.GeoCoordinateWatcher.Start()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "启动获取来自当前位置提供程序的数据。 此方法使<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;></xref>事件并允许访问<xref:System.Device.Location.GeoCoordinateWatcher.Position*>属性。</xref:System.Device.Location.GeoCoordinateWatcher.Position*>"
  remarks: "调用此方法将启动获取来自当前位置提供程序的数据。 根据因素，如年龄和来自所有提供程序、 请求的应用程序或应用程序和设备的功率消耗的准确性和与位置提供程序关联的性能影响数据的准确性，当前的位置提供程序处于选中状态。 随着时间推移，例如，当 GPS 设备失去其附属信号功能和 Wi-fi 三角化提供程序将成为最准确的提供程序计算机上可能会更改当前的位置提供程序。       如果当前设置优先级位置提供程序没有数据时<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>方法被调用时，它将开始获取的数据。</xref:System.Device.Location.GeoCoordinateWatcher.Start%2A> 如果权限已被授予到客户端，当数据变为可用时，数据可以同步，访问，并且如果正在处理事件以异步方式传递。       如果禁用了 Windows 7 传感器和位置平台时<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>调用，<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>将立即返回，<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>将不会引发事件，并通过<xref:System.Device.Location.GeoPosition%601.Location%2A><xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将包含<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性</xref:System.Device.Location.GeoPosition%601.Location%2A>返回的位置</xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged></xref:System.Device.Location.GeoCoordinateWatcher.Start%2A></xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>       如果当前的按优先级排列的位置提供确实具有数据，它将立即可用同步，并将以异步方式传递，如果正在处理事件。       如果调用应用程序不具有访问位置提供程序中的数据的权限，则将对话框中，若要授予或拒绝权限提示用户。 将无模式对话框。"
  example:
  - "The following program handles the first location update that occurs after Start is called.  \n  \n [!code-vb[System.Device.Location.GetLocationDataUpdateOnce#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataUpdateOnce/GetLocationDataUpdateOnce.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataUpdateOnce#1](~/add/codesnippet/csharp/getlocationdataupdateonce/getlocationdataupdateonce.cs#1)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  id: Start(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Start(Boolean)
  nameWithType: GeoCoordinateWatcher.Start(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Start(Boolean)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "启动获取来自当前位置提供程序的数据。 此方法使<xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;></xref>事件并允许访问<xref:System.Device.Location.GeoCoordinateWatcher.Position*>属性。</xref:System.Device.Location.GeoCoordinateWatcher.Position*>"
  syntax:
    content: public void Start (bool suppressPermissionPrompt);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要禁止显示权限对话框中;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以根据需要显示权限对话框中是否已被授予的权限。"
  overload: System.Device.Location.GeoCoordinateWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Status
  id: Status
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
  fullName: System.Device.Location.GeoCoordinateWatcher.Status
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取的当前状态<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example handles <xref:System.Device.Location.GeoCoordinateWatcher.StatusChanged> events and prints a message based on the Status.  \n  \n [!code-cs[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/csharp/showstatusupdates/showstatusupdates.cs#1)]\n [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/visualbasic/System.Device.Location.ShowStatusUpdates/ShowStatusUpdates.vb#1)]"
  syntax:
    content: public System.Device.Location.GeoPositionStatus Status { get; }
    return:
      type: System.Device.Location.GeoPositionStatus
      description: "A <xref href=&quot;System.Device.Location.GeoPositionStatus&quot;> </xref>表示从数据的可用性<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinateWatcher.Status*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  id: StatusChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: StatusChanged
  nameWithType: GeoCoordinateWatcher.StatusChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "指示的状态<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>对象已更改。"
  remarks: "对同一个引发事件 StatusChanged 线程<xref:System.Device.Location.GeoCoordinateWatcher>上创建对象。</xref:System.Device.Location.GeoCoordinateWatcher>"
  example:
  - "The following example demonstrates how to handle StatusChanged events.  \n  \n [!code-cs[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/csharp/showstatusupdates/showstatusupdates.cs#1)]\n [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/visualbasic/System.Device.Location.ShowStatusUpdates/ShowStatusUpdates.vb#1)]"
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Stop
  id: Stop
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Stop()
  nameWithType: GeoCoordinateWatcher.Stop()
  fullName: System.Device.Location.GeoCoordinateWatcher.Stop()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "停止<xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;></xref>从提供位置数据和事件。"
  remarks: "停止调用时，不进一步后<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件发生，并且<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性将返回<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>       当调用停止，<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性设置为<xref:System.Device.Location.GeoLocationStatus.Disabled>。</xref:System.Device.Location.GeoLocationStatus.Disabled> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  id: TryStart(System.Boolean,System.TimeSpan)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: TryStart(Boolean,TimeSpan)
  nameWithType: GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "启动获取来自当前位置提供程序的数据。 此方法以同步方式返回。"
  remarks: "此方法将阻止调用线程执行期间指定的时间段内`timeout`。 从你的应用程序用户界面线程调用 TryStart 时要格外小心。"
  example:
  - "The following example demonstrates how to call TryStart.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#1)]"
  syntax:
    content: public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要禁止显示权限对话框中;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以显示权限对话框。"
    - id: timeout
      type: System.TimeSpan
      description: "以毫秒为单位的位置提供程序，即可在超时前等待的时间。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在指定的时间段内启动数据采集<code> timeout </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinateWatcher.TryStart*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher()
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher()
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher()
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher(GeoPositionAccuracy)
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
- uid: System.Device.Location.GeoPositionAccuracy
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionAccuracy
  nameWithType: GeoPositionAccuracy
  fullName: System.Device.Location.GeoPositionAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
  fullName: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose()
  nameWithType: GeoCoordinateWatcher.Dispose()
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose()
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: GeoCoordinateWatcher.Dispose(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Finalize()
  nameWithType: GeoCoordinateWatcher.Finalize()
  fullName: System.Device.Location.GeoCoordinateWatcher.Finalize()
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
  fullName: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  nameWithType: GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
- uid: System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionChangedEventArgs<GeoCoordinate>
  nameWithType: GeoPositionChangedEventArgs<GeoCoordinate>
  fullName: System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  spec.csharp:
  - uid: System.Device.Location.GeoPositionChangedEventArgs`1
    name: GeoPositionChangedEventArgs
    nameWithType: GeoPositionChangedEventArgs
    fullName: GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
- uid: System.Device.Location.GeoPositionStatusChangedEventArgs
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatusChangedEventArgs
  nameWithType: GeoPositionStatusChangedEventArgs
  fullName: System.Device.Location.GeoPositionStatusChangedEventArgs
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPropertyChanged(String)
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged(String)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.GeoCoordinateWatcher.Permission
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
  fullName: System.Device.Location.GeoCoordinateWatcher.Permission
- uid: System.Device.Location.GeoPositionPermission
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionPermission
  nameWithType: GeoPositionPermission
  fullName: System.Device.Location.GeoPositionPermission
- uid: System.Device.Location.GeoCoordinateWatcher.Position
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
  fullName: System.Device.Location.GeoCoordinateWatcher.Position
- uid: System.Device.Location.GeoPosition{System.Device.Location.GeoCoordinate}
  parent: System.Device.Location
  isExternal: false
  name: GeoPosition<GeoCoordinate>
  nameWithType: GeoPosition<GeoCoordinate>
  fullName: System.Device.Location.GeoPosition<System.Device.Location.GeoCoordinate>
  spec.csharp:
  - uid: System.Device.Location.GeoPosition`1
    name: GeoPosition
    nameWithType: GeoPosition
    fullName: GeoPosition<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: PositionChanged
  nameWithType: GeoCoordinateWatcher.PositionChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.PositionChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionChangedEventArgs<GeoCoordinate>>
  nameWithType: EventHandler<GeoPositionChangedEventArgs<GeoCoordinate>>
  fullName: System.EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionChangedEventArgs`1
    name: GeoPositionChangedEventArgs
    nameWithType: GeoPositionChangedEventArgs
    fullName: GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.Start
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start()
  nameWithType: GeoCoordinateWatcher.Start()
  fullName: System.Device.Location.GeoCoordinateWatcher.Start()
- uid: System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start(Boolean)
  nameWithType: GeoCoordinateWatcher.Start(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Start(Boolean)
- uid: System.Device.Location.GeoCoordinateWatcher.Status
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
  fullName: System.Device.Location.GeoCoordinateWatcher.Status
- uid: System.Device.Location.GeoPositionStatus
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatus
  nameWithType: GeoPositionStatus
  fullName: System.Device.Location.GeoPositionStatus
- uid: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: StatusChanged
  nameWithType: GeoCoordinateWatcher.StatusChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.StatusChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionStatusChangedEventArgs>
  nameWithType: EventHandler<GeoPositionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionStatusChangedEventArgs
    name: GeoPositionStatusChangedEventArgs
    nameWithType: GeoPositionStatusChangedEventArgs
    fullName: GeoPositionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.Stop
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Stop()
  nameWithType: GeoCoordinateWatcher.Stop()
  fullName: System.Device.Location.GeoCoordinateWatcher.Stop()
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: TryStart(Boolean,TimeSpan)
  nameWithType: GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose
  nameWithType: GeoCoordinateWatcher.Dispose
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Finalize
  nameWithType: GeoCoordinateWatcher.Finalize
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionChanged
  nameWithType: GeoCoordinateWatcher.OnPositionChanged
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionStatusChanged
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPropertyChanged
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged
- uid: System.Device.Location.GeoCoordinateWatcher.Permission*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
- uid: System.Device.Location.GeoCoordinateWatcher.Position*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
- uid: System.Device.Location.GeoCoordinateWatcher.Start*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start
  nameWithType: GeoCoordinateWatcher.Start
- uid: System.Device.Location.GeoCoordinateWatcher.Status*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
- uid: System.Device.Location.GeoCoordinateWatcher.Stop*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Stop
  nameWithType: GeoCoordinateWatcher.Stop
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: TryStart
  nameWithType: GeoCoordinateWatcher.TryStart
