### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameResolver
  id: PeerNameResolver
  children:
  - System.Net.PeerToPeer.PeerNameResolver.#ctor
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  - System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  langs:
  - csharp
  name: PeerNameResolver
  nameWithType: PeerNameResolver
  fullName: System.Net.PeerToPeer.PeerNameResolver
  type: Class
  summary: "指定的值解析<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>到<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>使用 PNRP Namespace 提供程序 API 协议。"
  remarks: "A<xref:System.Net.PeerToPeer.PeerNameRecord>其中包含的所有信息<xref:System.Net.PeerToPeer.PeerName>，已发布在<xref:System.Net.PeerToPeer.Cloud>或在解析过程中查询的云。</xref:System.Net.PeerToPeer.Cloud> </xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRecord>"
  syntax:
    content: public class PeerNameResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "初始化的新默认实例<xref href=&quot;System.Net.PeerToPeer.PeerNameResolver&quot;></xref>类。"
  remarks: "已成功解决后<xref:System.Net.PeerToPeer.PeerName>、<xref:System.Net.PeerToPeer.PeerNameRecord>包含指定的所有信息<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>过程中查询的群中发布的<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public PeerNameResolver ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  id: OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "返回对等解析数据后的<xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;></xref>引发事件。"
  remarks: "此方法是用来处理对等名称解析数据之后对等解析已完成, 的异步回调。       派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件由对等解析程序对象引发。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref>包含返回的数据的对象<xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;></xref>事件。"
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  id: OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "返回对等解析进度数据时<xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;></xref>引发事件。"
  remarks: "此方法是用来处理对等解析数据后已请求对等解析进度的异步回调。       派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件发生。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>"
  syntax:
    content: protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&quot;></xref>对象，其中包含对等名称解析进度信息返回<xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;></xref>事件。"
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  id: Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "解析指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>中调用的对等方已知的所有云。"
  remarks: "此方法将对等名称与云相关联。 所有云都被都查询<xref:System.Net.PeerToPeer.PeerName>。</xref:System.Net.PeerToPeer.PeerName> 如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException>       对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。       调用的<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>每个对等名称记录在<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。</xref:System.Net.PeerToPeer.PeerNameRecordCollection>方法</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A></xref:System.Net.PeerToPeer.PeerNameResolver> 请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。       如果<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。</xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  example:
  - "The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.  \n  \n [!code-cs[NCLPNRPPeerNameResolver#1](~/add/codesnippet/csharp/m-system.net.peertopeer._2_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> ，其中包含对等名称的所有记录 (表示为<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>对象) 与指定的对等名称关联。 对于不安全的对等名称，相同<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>可由不同用户在同一个注册<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>，以及与不同的终结点相关联。"
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "指定的对等名称无法解析。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "将在调用对等方，返回不超过指定数目的已知的所有云的指定的对等名解析<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>对象。"
  remarks: "此方法将对等名称与云相关联。 所有云都被都查询的对等名称。 对于不安全的对等名称，可由不同用户在同一个注册相同的对等名称<xref:System.Net.PeerToPeer.Cloud>，以及与不同的终结点相关联。</xref:System.Net.PeerToPeer.Cloud> 如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （例如，未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: maxRecords
      type: System.Int32
      description: "最大数<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>对象以获取从所有<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>为所提供的对象`peerName`。"
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref>其大小小于或等于<code> maxRecords </code>条目。 此集合包含与关联的对等名称记录<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>的已解决。"
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code>参数是否小于或等于零。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "无法解析提供的对等名称。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "解析指定<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>中指定<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>。</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （即未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。       如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>在其中解析的对等名称。"
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;></xref>包含对等名称的所有记录 (表示为<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>对象) 与指定的对等名称关联。 对于不安全的对等名称，相同<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>可由不同用户在同一个注册<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>，以及与不同的终结点相关联。"
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "无法解析提供的对等名称。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "解析指定<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>中指定<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>，返回不超过指定数目的<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>对象。</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。 如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException>       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。       如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>在其中解析`peerName`。"
    - id: maxRecords
      type: System.Int32
      description: "对等名称记录对象，以获得指定的云的最大数目`peerName`。"
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref>其大小小于或等于<code> maxRecords </code>条目。 此集合包含与关联的对等名称记录<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>的已解决。"
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code>参数是否小于或等于零。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "无法解析提供的对等名称。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "开始异步对等名称解析操作，以指定<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>中调用的对等方已知的所有云。</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "此方法以异步方式将对等名称与云相关联。 所有云都被都查询<xref:System.Net.PeerToPeer.PeerName>。</xref:System.Net.PeerToPeer.PeerName> 它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException>       对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。       调用的<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>每个对等名称记录在<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。</xref:System.Net.PeerToPeer.PeerNameRecordCollection>方法</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A></xref:System.Net.PeerToPeer.PeerNameResolver> 请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。       解析程序对象的所有异步引用均与一个唯一标识符标记协调。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: userState
      type: System.Object
      description: "用户定义的对象，其中包含有关对等名称解析操作的状态信息。"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个<code> peerName </code>和<code> userState </code>参数设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "开始异步对等名称解析操作，以指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>中调用的对等方已知的所有云，返回 no 多个<code> maxRecords </code>的对等名称条目。"
  remarks: "此方法以异步方式将对等名称与云相关联。 所有云都被都查询<xref:System.Net.PeerToPeer.PeerName>。</xref:System.Net.PeerToPeer.PeerName> 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。 如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</xref:System.Net.PeerToPeer.PeerToPeerException>       此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。       解析程序对象的所有异步引用均与一个唯一标识符标记协调<xref:System.Object>.</xref:System.Object> 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: maxRecords
      type: System.Int32
      description: "记录用于获取对等机名称的最大数量。"
    - id: userState
      type: System.Object
      description: "用户定义的对象，其中包含有关解析操作的信息。"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个<code> peerName </code>和<code> userState </code>参数设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code>参数是否小于或等于零。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "开始异步对等名称解析操作，以指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>中指定<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>。"
  remarks: "此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。       如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。       解析程序对象的所有异步引用均与一个唯一标识符标记协调。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>若要解决。"
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>在其中解析`peerName`。"
    - id: userState
      type: System.Object
      description: "用户定义<xref:System.Object>，包含有关对等名称解析操作信息。</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个<code> peerName </code>和<code> userState </code>参数设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "开始异步对等名称解析操作，以指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>中指定<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>。  解析操作将解决否多个<code> maxRecords </code>指定的对等名称的条目。"
  remarks: "对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。       此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。       对等解析程序对象的所有异步引用均与一个唯一标识符标记协调<xref:System.Object>.</xref:System.Object> 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "`peerName`若要解决。"
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "`cloud`在其中解析`peerName`。"
    - id: maxRecords
      type: System.Int32
      description: "最大记录以获取从数`cloud`为`peerName`。"
    - id: userState
      type: System.Object
      description: "用户定义的对象，其中包含有关对等名称解析操作的信息。"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个<code> peerName </code>和<code> userState </code>参数设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "提供的一个或多个参数均无效。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "成功完成此操作需要至少一个事件处理程序。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code>参数是否小于或等于零。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  id: ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "取消指定的异步对等名称解析请求。"
  remarks: "调用此方法可确保系统不会尝试获取其他记录的指定<xref:System.Net.PeerToPeer.PeerName>。</xref:System.Net.PeerToPeer.PeerName>  如果不未完成的异步对等名称解析操作时调用此方法，则它将充当&quot;没有操作&quot;(NO OP)。       `userState`必须提供对象，因为它用于跟踪特定的异步调用，多个调用时。 此调用方提供的对象是唯一的每个对等名称解析请求。       此方法将立即返回，但该操作可能适用也可能会不立即取消。 事件自变量返回<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件包含的字段的可能轮询由客户端用于确定是否发生取消。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>       调用此方法可以确保与事件自变量将尽可能快地终止 ResolveCompleted 事件<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>设置为`true`。</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>"
  syntax:
    content: public void ResolveAsyncCancel (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "对象提供<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>方法实例启动解析操作。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userState </code>参数不能为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  id: ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "当特定对等名称解析请求时终止 ResolveCompleted 事件<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>已完成。</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件将会引发一次每个终结点找到，并且仅在当发现的所有终结点后后，将引发此事件。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       如果也会引发此事件<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作完成时出错或已取消。</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  id: ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "此事件发出信号时<xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;></xref>在响应中找到对象<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>某一特定操作<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  remarks: "如果选择多个<xref:System.Net.PeerToPeer.PeerName>正在查询的群中存在的对象，该事件处于有信号状态一次每个<xref:System.Net.PeerToPeer.PeerNameRecord>找到。</xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs> ResolveProgressChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveProgressChangedEventArgs
  nameWithType: ResolveProgressChangedEventArgs
  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveProgressChangedEventArgs>
  nameWithType: EventHandler<ResolveProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
    name: ResolveProgressChangedEventArgs
    nameWithType: ResolveProgressChangedEventArgs
    fullName: ResolveProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver
  nameWithType: PeerNameResolver.PeerNameResolver
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted
  nameWithType: PeerNameResolver.OnResolveCompleted
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged
  nameWithType: PeerNameResolver.OnResolveProgressChanged
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerNameResolver.Resolve
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync
  nameWithType: PeerNameResolver.ResolveAsync
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel
  nameWithType: PeerNameResolver.ResolveAsyncCancel
