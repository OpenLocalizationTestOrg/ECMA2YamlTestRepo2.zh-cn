### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.NonceCache
  id: NonceCache
  children:
  - System.ServiceModel.Security.NonceCache.#ctor
  - System.ServiceModel.Security.NonceCache.CacheSize
  - System.ServiceModel.Security.NonceCache.CachingTimeSpan
  - System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  - System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  langs:
  - csharp
  name: NonceCache
  nameWithType: NonceCache
  fullName: System.ServiceModel.Security.NonceCache
  type: Class
  summary: "表示缓存中的，以便 nonce 抽象基类。"
  syntax:
    content: public abstract class NonceCache
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: NonceCache()
  nameWithType: NonceCache.NonceCache()
  fullName: System.ServiceModel.Security.NonceCache.NonceCache()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "从初始化派生类中的构造函数调用<xref href=&quot;System.ServiceModel.Security.NonceCache&quot;></xref>类。"
  syntax:
    content: protected NonceCache ();
    parameters: []
  overload: System.ServiceModel.Security.NonceCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CacheSize
  id: CacheSize
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CacheSize
  nameWithType: NonceCache.CacheSize
  fullName: System.ServiceModel.Security.NonceCache.CacheSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置指定的缓存可以包含的 nonce 的数目为缓存的最大大小。"
  syntax:
    content: public int CacheSize { get; set; }
    return:
      type: System.Int32
      description: "指定的缓存可以包含的 nonce 的数目为缓存的最大大小。"
  overload: System.ServiceModel.Security.NonceCache.CacheSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "尝试设置的值小于零时发生。"
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  id: CachingTimeSpan
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
  fullName: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置后从缓存删除 nonce 的最大时间跨度。"
  syntax:
    content: public TimeSpan CachingTimeSpan { get; set; }
    return:
      type: System.TimeSpan
      description: "最大的时间跨度后从缓存删除 nonce。 此值应至少两次的最大时钟偏差添加到重播窗口大小。"
  overload: System.ServiceModel.Security.NonceCache.CachingTimeSpan*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "尝试设置的值小于<xref:System.TimeSpan>发生。</xref:System.TimeSpan>       -或者-尝试设置一个值大于允许的最大时发生。"
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  id: CheckNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CheckNonce(Byte[])
  nameWithType: NonceCache.CheckNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.CheckNonce(Byte[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "当在派生类中重写，则返回一个值，该值指示指定的 nonce 是否已在缓存中。"
  syntax:
    content: public abstract bool CheckNonce (byte[] nonce);
    parameters:
    - id: nonce
      type: System.Byte[]
      description: "若要检查的 nonce。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的 nonce 缓存; 中已存在否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Security.NonceCache.CheckNonce*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  id: TryAddNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: TryAddNonce(Byte[])
  nameWithType: NonceCache.TryAddNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.TryAddNonce(Byte[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "当在派生类中重写，尝试向缓存添加指定的 nonce。"
  syntax:
    content: public abstract bool TryAddNonce (byte[] nonce);
    parameters:
    - id: nonce
      type: System.Byte[]
      description: "若要向缓存添加 nonce。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 nonce 已添加到缓存;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Security.NonceCache.TryAddNonce*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Security.NonceCache.#ctor
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: NonceCache()
  nameWithType: NonceCache.NonceCache()
  fullName: System.ServiceModel.Security.NonceCache.NonceCache()
- uid: System.ServiceModel.Security.NonceCache.CacheSize
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CacheSize
  nameWithType: NonceCache.CacheSize
  fullName: System.ServiceModel.Security.NonceCache.CacheSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
  fullName: System.ServiceModel.Security.NonceCache.CachingTimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CheckNonce(Byte[])
  nameWithType: NonceCache.CheckNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.CheckNonce(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: TryAddNonce(Byte[])
  nameWithType: NonceCache.TryAddNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.TryAddNonce(Byte[])
- uid: System.ServiceModel.Security.NonceCache.#ctor*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: NonceCache
  nameWithType: NonceCache.NonceCache
- uid: System.ServiceModel.Security.NonceCache.CacheSize*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CacheSize
  nameWithType: NonceCache.CacheSize
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
- uid: System.ServiceModel.Security.NonceCache.CheckNonce*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CheckNonce
  nameWithType: NonceCache.CheckNonce
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: TryAddNonce
  nameWithType: NonceCache.TryAddNonce
