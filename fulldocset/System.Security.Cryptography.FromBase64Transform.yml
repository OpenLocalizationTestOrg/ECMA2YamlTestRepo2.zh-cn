### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.FromBase64Transform
  id: FromBase64Transform
  children:
  - System.Security.Cryptography.FromBase64Transform.#ctor
  - System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  - System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  - System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  - System.Security.Cryptography.FromBase64Transform.Clear
  - System.Security.Cryptography.FromBase64Transform.Dispose
  - System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  - System.Security.Cryptography.FromBase64Transform.Finalize
  - System.Security.Cryptography.FromBase64Transform.InputBlockSize
  - System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  - System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: FromBase64Transform
  nameWithType: FromBase64Transform
  fullName: System.Security.Cryptography.FromBase64Transform
  type: Class
  summary: "将转换<xref href=&quot;System.Security.Cryptography.CryptoStream&quot;></xref>从 base 64。"
  remarks: "Base 64 内容传输编码表示用户不可窗体中的任意位序列可读。"
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/t-system.security.crypto_20_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_20_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/t-system.security.crypto_20_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class FromBase64Transform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>类。"
  remarks: "在默认配置中，将忽略空格。 请参阅<xref:System.Security.Cryptography.FromBase64TransformMode>有关详细信息。</xref:System.Security.Cryptography.FromBase64TransformMode>"
  syntax:
    content: public FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  id: '#ctor(System.Security.Cryptography.FromBase64TransformMode)'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>与指定的转换模式的类。"
  remarks: ''
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/6e8f7a21-5a5f-4a36-9e3b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/6e8f7a21-5a5f-4a36-9e3b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/6e8f7a21-5a5f-4a36-9e3b-_1.cs)]"
  syntax:
    content: public FromBase64Transform (System.Security.Cryptography.FromBase64TransformMode whitespaces);
    parameters:
    - id: whitespaces
      type: System.Security.Cryptography.FromBase64TransformMode
      description: "之一<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>值。"
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "获取一个值，该值指示是否可以重复使用当前转换。"
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "获取一个值，该值指示是否可以转换多个块。"
  remarks: "在当前实现中，只有一个块可以转换一次，因此此属性始终为`false`。"
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  id: Clear
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "释放使用的所有资源<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>。"
  remarks: "此方法是对<xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>的简单调用       调用`Dispose`允许使用的资源<xref:System.Security.Cryptography.FromBase64Transform>可以重新分配用于其他目的。</xref:System.Security.Cryptography.FromBase64Transform> 有关详细信息`Dispose`，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "释放当前实例所使用的所有资源<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>类。"
  remarks: "调用`Dispose`在完成使用<xref:System.Security.Cryptography.FromBase64Transform>.</xref:System.Security.Cryptography.FromBase64Transform>时 `Dispose`方法使<xref:System.Security.Cryptography.FromBase64Transform>中不可用状态。</xref:System.Security.Cryptography.FromBase64Transform> 在调用`Dispose`，必须释放对所有引用<xref:System.Security.Cryptography.FromBase64Transform>以便垃圾回收器才能回收的内存，<xref:System.Security.Cryptography.FromBase64Transform>占用。</xref:System.Security.Cryptography.FromBase64Transform> </xref:System.Security.Cryptography.FromBase64Transform>       有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用`Dispose`在发布到<xref:System.Security.Cryptography.FromBase64Transform>。</xref:System.Security.Cryptography.FromBase64Transform>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.Security.Cryptography.FromBase64Transform>对象的`Finalize`方法。</xref:System.Security.Cryptography.FromBase64Transform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "释放由非托管的资源<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "此方法称为由公共`Dispose()`方法和`Finalize`方法。 `Dispose()`调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。 `Finalize`调用`Dispose`释放设置为`false`。       当`disposing`参数是`true`，此方法释放由任何托管对象持有的全部资源此<xref:System.Security.Cryptography.FromBase64Transform>引用。</xref:System.Security.Cryptography.FromBase64Transform> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  id: Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "释放由非托管的资源<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>。"
  syntax:
    content: ~FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "获取输入的块大小。"
  remarks: "此转换的输入的块大小是一个字节。"
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "输入数据块的大小以字节为单位。"
  overload: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "获取输出块大小。"
  remarks: "此转换的输出块大小为 3 个字节。"
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "输出数据块的大小以字节为单位。"
  overload: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "从 base 64 转换的输入的字节数组的指定的区域，并将结果复制到输出字节数组的指定区域。"
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/89d8dcd5-d4bc-45bd-bddf-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/89d8dcd5-d4bc-45bd-bddf-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/89d8dcd5-d4bc-45bd-bddf-_1.cs)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "要从 base 64 计算的输入。"
    - id: inputOffset
      type: System.Int32
      description: "偏移量从其开始使用数据的输入的字节数组。"
    - id: inputCount
      type: System.Int32
      description: "要用作数据的输入的字节数组中的字节数。"
    - id: outputBuffer
      type: System.Byte[]
      description: "要向其写入结果输出。"
    - id: outputOffset
      type: System.Int32
      description: "偏移量从此处开始写入数据的输出字节数组。"
    return:
      type: System.Int32
      description: "写入的字节数。"
  overload: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "当前<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>已释放对象。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>使用了无效值。       -或-<code>inputBuffer</code>具有一个无效的偏移量长度。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>超出了范围。 此参数要求的非负数。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "将指定的字节数组的指定的区域从 base 64 转换。"
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/77c58bc9-6ff0-4b4a-ba5b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/77c58bc9-6ff0-4b4a-ba5b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/77c58bc9-6ff0-4b4a-ba5b-_1.cs)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "要从 base 64 转换的输入。"
    - id: inputOffset
      type: System.Int32
      description: "偏移量从其开始使用数据的字节数组。"
    - id: inputCount
      type: System.Int32
      description: "要用作数据的字节数组中的字节数。"
    return:
      type: System.Byte[]
      description: "计算的转换。"
  overload: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "当前<xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref>已释放对象。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputBuffer</code>有一个无效的偏移量的长度。       -或-<code>inputCount</code>具有无效值。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>超出了范围。 此参数要求的非负数。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
- uid: System.Security.Cryptography.FromBase64TransformMode
  parent: System.Security.Cryptography
  isExternal: false
  name: FromBase64TransformMode
  nameWithType: FromBase64TransformMode
  fullName: System.Security.Cryptography.FromBase64TransformMode
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.FromBase64Transform.#ctor*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform
  nameWithType: FromBase64Transform.FromBase64Transform
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear
  nameWithType: FromBase64Transform.Clear
- uid: System.Security.Cryptography.FromBase64Transform.Dispose*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose
  nameWithType: FromBase64Transform.Dispose
- uid: System.Security.Cryptography.FromBase64Transform.Finalize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize
  nameWithType: FromBase64Transform.Finalize
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock
  nameWithType: FromBase64Transform.TransformBlock
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: FromBase64Transform.TransformFinalBlock
