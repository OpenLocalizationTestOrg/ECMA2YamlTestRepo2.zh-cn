### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  id: KerberosRequestorSecurityToken
  children:
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  langs:
  - csharp
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  type: Class
  summary: "表示基于在 SOAP 请求中发送的 Kerberos 票证的安全令牌。"
  remarks: "通常情况下，应用程序开发人员不需要使用 KerberosRequestorSecurityToken 类，除非 Web 服务必须获得与 Kerberos 票证关联的服务主体名称。 若要获取的服务主体名称值，请获取的值<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>属性。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>       有两个类表示基于 Kerberos 票证的安全令牌︰ KerberosRequestorSecurityToken 和<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>。</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> KerberosRequestorSecurityToken 安全令牌由在传出 SOAP 消息中使用 KerberosRequestorSecurityToken 安全令牌的客户端而<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>安全令牌由接收包含该安全令牌的 SOAP 消息的 Web 服务。</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>"
  syntax:
    content: 'public class KerberosRequestorSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>类使用了与指定的服务主体名称关联的服务。"
  remarks: '服务主体名称必须采用以下格式之一︰`host/<hostname>@<domain>`或`<hostname>`，其中`hostname`是承载目标 Web 服务的计算机的名称和`domain`是主计算机所在的 Kerberos 领域的完全限定域名。 服务主体名称与运行服务的帐户关联，并且此映射存储在 Kerberos 域控制器 (KDC)。'
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "服务主体名称<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌。 集<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>属性。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "无法为当前用户获取 Kerberos 票证。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>类。"
  remarks: "服务主体名称必须采用以下格式之一︰`host/<hostname>@<domain>`或`<hostname>`，其中`hostname`是承载目标 Web 服务的计算机的名称和`domain`是主计算机所在的 Kerberos 领域的完全限定域名。 服务主体名称与运行服务的帐户关联，并且此映射存储在 Kerberos 域控制器 (KDC)。       当`null`传递到`networkCredential`参数，<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>为当前用户获取安全令牌。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>"
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential, string id);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "服务主体名称<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌。 集<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>属性。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "之一<xref:System.Security.Principal.TokenImpersonationLevel>值，该值指定客户端如何允许<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌进行模拟。</xref:System.Security.Principal.TokenImpersonationLevel>"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>，它指定要获取的用户<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌为</xref:System.Net.NetworkCredential>"
    - id: id
      type: System.String
      description: "安全令牌的唯一标识符。 设置的值<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>属性。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>networkCredential</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>且不等于<xref:System.Net.CredentialCache.DefaultNetworkCredentials*>和<xref:System.Net.NetworkCredential.UserName*>属性为空或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "无法为指定的用户获得 Kerberos 票证。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Identity&quot; name=&quot;Identity&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "要添加。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  id: GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取 Kerberos 票证请求。"
  remarks: "发出的 Kerberos 票证请求是使用`InitializeSecurityContext`API。"
  syntax:
    content: public byte[] GetRequest ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>包含结果 Kerberos 票证请求。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取安全令牌的唯一标识符。"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "安全令牌的唯一标识符。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否与指定的密钥标识符相匹配。"
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>要与此实例进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> keyIdentifierClause </code>属于类型<xref href=&quot;System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause&quot;></xref>和 Kerberos 票证请求匹配的结果; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  id: SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与此安全令牌关联的 Kerberos 票证的对称会话密钥。"
  remarks: "当与获取 Kerberos 票证的对称会话密钥对指定的用户的调用的构造函数之一设置 SecurityKey 属性。"
  syntax:
    content: public System.IdentityModel.Tokens.SymmetricSecurityKey SecurityKey { get; }
    return:
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref>包含与此安全令牌关联的 Kerberos 票证的对称会话密钥。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与安全令牌相关联的加密密钥。"
  remarks: "SecurityKeys 属性包含中的对称会话密钥<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>属性。</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，包含与安全令牌相关联的密钥集。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取的服务主体名称<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌。"
  remarks: '服务主体名称可以采用以下格式之一︰`host/<hostname>@<domain>`或`<hostname>`，其中`hostname`是承载目标 Web 服务的计算机的名称和`domain`是主计算机所在的 Kerberos 领域的完全限定域名。'
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "服务主体名称<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>安全令牌。"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取此安全令牌无效的时间的最初时刻。"
  remarks: "ValidFrom 属性设置为即时中时以协调世界时 (UTC) 获得 Kerberos 票证的时间。"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示时刻从该处此安全令牌的第一次有效的时间。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取的最后时刻此安全令牌无效。"
  remarks: "<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>属性已设置为即时中 Kerberos 票证到期以协调世界时 (UTC) 时间。</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示的最后时刻此安全令牌无效。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest
  nameWithType: KerberosRequestorSecurityToken.GetRequest
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
