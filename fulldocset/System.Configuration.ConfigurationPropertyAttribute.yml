### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPropertyAttribute
  id: ConfigurationPropertyAttribute
  children:
  - System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  - System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  - System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  - System.Configuration.ConfigurationPropertyAttribute.IsKey
  - System.Configuration.ConfigurationPropertyAttribute.IsRequired
  - System.Configuration.ConfigurationPropertyAttribute.Name
  - System.Configuration.ConfigurationPropertyAttribute.Options
  langs:
  - csharp
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute
  fullName: System.Configuration.ConfigurationPropertyAttribute
  type: Class
  summary: "以声明方式指示.NET Framework 来实例化的配置属性。 此类不能被继承。"
  remarks: "你可以使用 ConfigurationPropertyAttribute 修饰配置属性，将指示.NET Framework 来实例化和初始化使用装饰参数的值的属性。      1> [!NOTE]&1;> 创建自定义配置元素的最简单方法是使用特性化 （声明性） 模型。 声明的自定义的公共属性并使用 ConfigurationPropertyAttribute 属性修饰它们。 对于每个使用此特性标记的属性，.NET Framework 使用反射读取装饰参数以及创建相关<xref:System.Configuration.ConfigurationProperty>实例。</xref:System.Configuration.ConfigurationProperty> 你还可以使用的编程模型，在这种情况下它是你有责任声明自定义的公共属性，并返回它们的集合。       .NET Framework 配置系统提供的自定义配置元素的创建过程中可以使用的属性类型。 有两种类型的属性类型︰ 1。  指示如何实例化自定义的配置元素属性的.NET Framework 类型。 这些类型包括:- <xref:System.Configuration.ConfigurationCollectionAttribute>-ConfigurationPropertyAttribute 2。</xref:System.Configuration.ConfigurationCollectionAttribute>  指示如何验证自定义的配置元素属性的.NET Framework 类型。 These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.StringValidatorAttribute></xref:System.Configuration.RegexStringValidatorAttribute></xref:System.Configuration.LongValidatorAttribute></xref:System.Configuration.IntegerValidatorAttribute>"
  example:
  - "The following example shows how to define the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the ConfigurationPropertyAttribute attribute.  \n  \n The example contains two classes. The `UrlsSection` custom class uses the ConfigurationPropertyAttribute to define its own properties. The `UsingConfigurationPropertyAttribute` class uses the `UrlsSection` to read and write the custom section in the application configuration file.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_21_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_21_1.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/visualbasic/t-system.configuration.c_21_2.vb)]\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/csharp/t-system.configuration.c_21_2.cs)]  \n  \n The following is an excerpt of the configuration file containing the custom section as defined in the previous sample.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n    <configSections>  \n        <section name=\"CustomSection\" type=\"UrlsSection, UsingConfigurationPropertyAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <CustomSection name=\"Contoso\" url=\"http://www.contoso.com\" />  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class ConfigurationPropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.ConfigurationPropertyAttribute&quot;></xref>类。"
  syntax:
    content: public ConfigurationPropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "名称<xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>定义对象。"
  overload: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置修饰的属性的默认值。"
  remarks: ''
  example:
  - "The following example shows how to use the DefaultValue property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_19_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_19_1.vb)]"
  syntax:
    content: public object DefaultValue { get; set; }
    return:
      type: System.Object
      description: "表示修饰的配置元素属性的默认值的对象。"
  overload: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  id: IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置一个值，该值指示这是否经过修饰的配置属性的默认属性集合。"
  remarks: "如果修饰的属性不是一个集合，则忽略 IsDefaultCollection 属性值。"
  syntax:
    content: public bool IsDefaultCollection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该属性表示的元素，则默认集合否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  id: IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置一个值，该值指示这是否为修饰的元素属性的密钥属性。"
  remarks: "将 IsKey 属性仅适用于修饰的属性是集合的情况。 如果属性不是一个集合，它不产生任何影响。 可以将多个元素标记为 IsKey。"
  example:
  - "The following example shows how to use the IsKey property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/csharp/p-system.configuration.c_4_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/visualbasic/p-system.configuration.c_4_1.vb)]"
  syntax:
    content: public bool IsKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是集合; 的某个元素的键属性否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  id: IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置一个值，该值修饰的元素属性是否必需的。"
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_44_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_44_1.vb)]"
  syntax:
    content: public bool IsRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该属性是必需的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  id: Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取修饰的配置元素属性的名称。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "修饰的配置元素属性的名称。"
  overload: System.Configuration.ConfigurationPropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  id: Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置<xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref>修饰的配置元素属性。"
  syntax:
    content: public System.Configuration.ConfigurationPropertyOptions Options { get; set; }
    return:
      type: System.Configuration.ConfigurationPropertyOptions
      description: "之一<xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref>与属性关联的枚举值。"
  overload: System.Configuration.ConfigurationPropertyAttribute.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
- uid: System.Configuration.ConfigurationPropertyOptions
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyOptions
  nameWithType: ConfigurationPropertyOptions
  fullName: System.Configuration.ConfigurationPropertyOptions
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
