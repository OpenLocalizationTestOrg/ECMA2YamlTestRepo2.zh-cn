### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  id: ContractBasedImportDefinition
  children:
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  langs:
  - csharp
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  type: Class
  summary: "表示导入所需<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;></xref>对象，并且可以指定的协定名称和元数据。"
  syntax:
    content: 'public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ImportDefinition
  implements: []
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality
  - System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>类。"
  syntax:
    content: protected ContractBasedImportDefinition ();
    parameters: []
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>类，该类具有指定的协定名称、 所需的类型标识、 必需的元数据、 基数，和创建策略，并指示导入定义是否可重新组合还是系统必备组件。"
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);
    parameters:
    - id: contractName
      type: System.String
      description: "协定名称<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>所需的导入定义的对象。"
    - id: requiredTypeIdentity
      type: System.String
      description: "期望的导出类型的类型标识。 使用<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>方法来生成给定类型的类型标识。</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> 如果没有特定的类型是必需的使用<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "包含的元数据名称和所需的导入定义; 类型的键/值对的集合或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>属性设置为一个空&lt;xref:System.Collections.Generic.IEnumerable%601&gt;集合。</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "一个枚举值，该值指示的基数<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>所需的导入定义的对象。"
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定导入定义，可以满足整个生命周期的多次<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定感到满意之前，需要导入定义<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;></xref>可以开始生成导出的对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "一个值，该值指示导入程序的使用来满足此导入导出需要特定的创建策略。 如果不需要任何特定的创建策略，则默认值是<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>为空字符串 (&quot;&quot;)。       -<code>requiredMetadata</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       -<code>cardinality</code>不是一个<xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;></xref>值。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>类，该类具有指定的协定名称、 所需的类型标识、 必选和可选元数据、 基数，和创建策略，并指示导入定义是否可重新组合还是系统必备组件。"
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata);
    parameters:
    - id: contractName
      type: System.String
      description: "协定名称<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>所需的导入定义的对象。"
    - id: requiredTypeIdentity
      type: System.String
      description: "期望的导出类型的类型标识。 使用<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>方法来生成给定类型的类型标识。</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> 如果没有特定的类型是必需的使用<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "包含的元数据名称和所需的导入定义; 类型的键/值对的集合或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>属性设置为一个空&lt;xref:System.Collections.Generic.IEnumerable%601&gt;集合。</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "一个枚举值，该值指示的基数<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>所需的导入定义的对象。"
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定导入定义，可以满足整个生命周期的多次<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定感到满意之前，需要导入定义<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;></xref>可以开始生成导出的对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "一个值，该值指示导入程序的使用来满足此导入导出需要特定的创建策略。 如果不需要任何特定的创建策略，则默认值是<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>。"
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "与此导入关联的元数据。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>为空字符串 (&quot;&quot;)。       -<code>requiredMetadata</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       -<code>cardinality</code>不是一个<xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;></xref>值。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  id: Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "获取定义必须匹配以满足导入所描述此导入定义的条件的表达式。"
  syntax:
    content: public override System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> Constraint { get; }
    return:
      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
      description: "一个表达式，包含&lt;xref:System.Func%602&gt;定义必须为匹配的条件的对象<xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;></xref>满足<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  id: IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "返回一个值，该值指示是否将此对象所表示的约束满足所表示的给定的导出定义导出的。"
  syntax:
    content: public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);
    parameters:
    - id: exportDefinition
      type: System.ComponentModel.Composition.Primitives.ExportDefinition
      description: "要测试的导出定义。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果不满足约束为;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "获取或设置一个值，该值指示导入程序需要特定<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>的使用来满足此导入导出。"
  syntax:
    content: public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "以下值之一︰ <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>，如果导入程序不需要特定<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>。       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>需要使用的所有导出应都由容器中的所有导入程序。       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>需要使用的所有导出应都为非共享容器中。 在这种情况下，每个导入程序接收的单独实例。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  id: RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "获取所需的导入定义的导出的元数据名称。"
  remarks: "此属性的重写应永远不会返回`null`或返回<xref:System.Collections.Generic.IEnumerable%601>集合，其中包含的元素将是`null`。</xref:System.Collections.Generic.IEnumerable%601> 如果定义不包含必需的元数据，返回一个空<xref:System.Collections.Generic.IEnumerable%601>集合相反。</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> RequiredMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "集合<xref:System.String>对象，其中包含元数据名称<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>所需的对象<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>。</xref:System.String> 默认值为空&lt;xref:System.Collections.Generic.IEnumerable%601&gt;集合。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  id: RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "获取与匹配导出，这是预期的类型<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>。"
  syntax:
    content: public virtual string RequiredTypeIdentity { get; }
    return:
      type: System.String
      description: "通过调用生成的字符串<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>上导入此预期的类型的方法。</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> 如果值为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，此导入不需要特定的类型。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "返回的字符串表示形式这<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>对象。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串表示形式这<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>对象。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Type>>
  nameWithType: IEnumerable<KeyValuePair<String,Type>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportCardinality
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportCardinality
  nameWithType: ImportCardinality
  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<ExportDefinition,Boolean>>
  nameWithType: Expression<Func<ExportDefinition,Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
- uid: System.ComponentModel.Composition.Primitives.ExportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ExportDefinition
  nameWithType: ExportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString
  nameWithType: ContractBasedImportDefinition.ToString
