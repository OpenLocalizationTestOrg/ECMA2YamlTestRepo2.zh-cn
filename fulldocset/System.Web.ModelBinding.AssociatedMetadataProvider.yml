### YamlMime:ManagedReference
items:
- uid: System.Web.ModelBinding.AssociatedMetadataProvider
  id: AssociatedMetadataProvider
  children:
  - System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  - System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  - System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  langs:
  - csharp
  name: AssociatedMetadataProvider
  nameWithType: AssociatedMetadataProvider
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider
  type: Class
  summary: "提供一个抽象类可以实现元数据提供程序。"
  remarks: "元数据提供程序模型提供元数据。 元数据提供程序必须从<xref:System.Web.ModelBinding.ModelMetadataProvider>.</xref:System.Web.ModelBinding.ModelMetadataProvider>派生 如果你想要使用自定义验证程序或使用基于属性的元数据的第三方验证程序，你可以继承此类。       此类实现的抽象方法<xref:System.Web.ModelBinding.ModelMetadataProvider>类并包含其他抽象方法。</xref:System.Web.ModelBinding.ModelMetadataProvider> 当您实现此类时，使用<xref:System.Web.ModelBinding.AssociatedValidatorProvider>类，以实现验证程序。</xref:System.Web.ModelBinding.AssociatedValidatorProvider>       松散耦合模型提供程序类和验证程序提供程序类。 因此，它们独立工作，并且每个其他没有任何依赖关系。       但是，元数据提供程序公开元数据可以访问和使用验证提供程序。 例如，默认元数据提供程序 (<xref:System.Web.ModelBinding.DataAnnotationsModelMetadataProvider>类) 读取对象的显示名称。</xref:System.Web.ModelBinding.DataAnnotationsModelMetadataProvider> 此显示名称使用通过<xref:System.Web.ModelBinding.DataAnnotationsModelValidatorProvider>验证提供程序创建了验证错误消息时。</xref:System.Web.ModelBinding.DataAnnotationsModelValidatorProvider>"
  syntax:
    content: 'public abstract class AssociatedMetadataProvider : System.Web.ModelBinding.ModelMetadataProvider'
  inheritance:
  - System.Object
  - System.Web.ModelBinding.ModelMetadataProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  id: '#ctor'
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: AssociatedMetadataProvider()
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider()
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.AssociatedMetadataProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，初始化派生自的类的新实例<xref href=&quot;System.Web.ModelBinding.AssociatedMetadataProvider&quot;></xref>类。"
  syntax:
    content: protected AssociatedMetadataProvider ();
    parameters: []
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  id: CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，创建模型的元数据。"
  syntax:
    content: protected abstract System.Web.ModelBinding.ModelMetadata CreateMetadata (System.Collections.Generic.IEnumerable<Attribute> attributes, Type containerType, Func<object> modelAccessor, Type modelType, string propertyName);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "中的特性。"
    - id: containerType
      type: System.Type
      description: "容器的类型或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不不存在任何容器。"
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "模型访问器。"
    - id: modelType
      type: System.Type
      description: "模型的类型。"
    - id: propertyName
      type: System.String
      description: "该属性的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果模型不是属性。"
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "模型的元数据。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  id: FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  nameWithType: AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "允许派生类，以筛选属性的列表。"
  remarks: "中的代码<xref:System.Web.ModelBinding.AssociatedMetadataProvider>基类返回的所有属性。</xref:System.Web.ModelBinding.AssociatedMetadataProvider> 此方法可让筛选属性的派生的类。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<Attribute> FilterAttributes (Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor, System.Collections.Generic.IEnumerable<Attribute> attributes);
    parameters:
    - id: containerType
      type: System.Type
      description: "容器的类型。"
    - id: propertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "属性描述符。"
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "中的特性。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "特性列表。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  id: GetMetadataForProperties(System.Object,System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperties(Object,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，则返回所有属性的元的数据。"
  syntax:
    content: public override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> GetMetadataForProperties (object container, Type containerType);
    parameters:
    - id: container
      type: System.Object
      description: "容器。"
    - id: containerType
      type: System.Type
      description: "容器的类型。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
      description: "所有属性的的元数据。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>containerType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  id: GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，返回指定属性描述符对象的属性元数据。"
  syntax:
    content: protected virtual System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func<object> modelAccessor, Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "模型访问器。"
    - id: containerType
      type: System.Type
      description: "容器的类型。"
    - id: propertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "属性描述符。"
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "指定的属性元数据。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  id: GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperty(Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，返回指定属性名称的属性元数据。"
  syntax:
    content: public override System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func<object> modelAccessor, Type containerType, string propertyName);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "模型访问器。"
    - id: containerType
      type: System.Type
      description: "容器的类型。"
    - id: propertyName
      type: System.String
      description: "属性的名称。"
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "指定的属性元数据。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>containerType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> propertyName </code>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空。       -具有指定的名称的属性<code> propertyName </code>中找不<code> containerType </code>类型。"
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  id: GetMetadataForType(System.Func{System.Object},System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForType(Func<Object>,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，则返回模型类型的元数据。"
  syntax:
    content: public override System.Web.ModelBinding.ModelMetadata GetMetadataForType (Func<object> modelAccessor, Type modelType);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "模型访问器。"
    - id: modelType
      type: System.Type
      description: "模型的类型。"
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "模型类型的元数据。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>modelType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type)
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor(Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "当在派生类中重写，则返回指定类型的描述符对象。"
  syntax:
    content: protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "类型。"
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "类型描述符对象。"
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.ModelBinding.ModelMetadataProvider
  isExternal: false
  name: System.Web.ModelBinding.ModelMetadataProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: AssociatedMetadataProvider()
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider()
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.AssociatedMetadataProvider()
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
- uid: System.Web.ModelBinding.ModelMetadata
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: System.Web.ModelBinding.ModelMetadata
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  nameWithType: AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperties(Object,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
- uid: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelMetadata>
  nameWithType: IEnumerable<ModelMetadata>
  fullName: System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.ModelBinding.ModelMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: ModelMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty(Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForType(Func<Object>,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetTypeDescriptor(Type)
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor(Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(Type)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: AssociatedMetadataProvider
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: CreateMetadata
  nameWithType: AssociatedMetadataProvider.CreateMetadata
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: FilterAttributes
  nameWithType: AssociatedMetadataProvider.FilterAttributes
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperties
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForType
  nameWithType: AssociatedMetadataProvider.GetMetadataForType
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetTypeDescriptor
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor
