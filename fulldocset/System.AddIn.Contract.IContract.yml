### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.IContract
  id: IContract
  children:
  - System.AddIn.Contract.IContract.AcquireLifetimeToken
  - System.AddIn.Contract.IContract.GetRemoteHashCode
  - System.AddIn.Contract.IContract.QueryContract(System.String)
  - System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  - System.AddIn.Contract.IContract.RemoteToString
  - System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  langs:
  - csharp
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
  type: Interface
  summary: "表示独立更新的组件之间的通信所用的所有协定的基接口。"
  remarks: "IContract 接口定义一个协定，独立更新的组件，如应用程序和外接程序时，可以使用它进行通信。 组件可以使用 IContract 跨进程通信或应用程序域边界或与中的相同进程或应用程序域的其他组件进行通信。 IContract 有用途类似使用作为.NET Framework 创建的组件`IUnknown`接口用于创建使用 com。 组件 若要确定对象是否实现特定的约定，请使用<xref:System.AddIn.Contract.IContract.QueryContract%2A>方法。</xref:System.AddIn.Contract.IContract.QueryContract%2A>"
  syntax:
    content: public interface IContract
  implements: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken
  id: AcquireLifetimeToken
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: AcquireLifetimeToken()
  nameWithType: IContract.AcquireLifetimeToken()
  fullName: System.AddIn.Contract.IContract.AcquireLifetimeToken()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "指定的协定是访问客户端，直到客户端在撤消此协定。"
  remarks: "客户端实现的对象的<xref:System.AddIn.Contract.IContract>调用 AcquireLifetimeToken 方法，以通知对象，客户端需要向该协定的访问权限。</xref:System.AddIn.Contract.IContract> <xref:System.AddIn.Contract.IContract>保证，只要尚未吊销至少一个它传递到客户端的生存期标记为可用。</xref:System.AddIn.Contract.IContract>       若要撤消一个协定，客户端调用<xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A>方法。</xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A>"
  syntax:
    content: public int AcquireLifetimeToken ();
    parameters: []
    return:
      type: System.Int32
      description: "一个值，也称为一个生存期令牌，它标识已获取协定的客户端。"
  overload: System.AddIn.Contract.IContract.AcquireLifetimeToken*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode
  id: GetRemoteHashCode
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: GetRemoteHashCode()
  nameWithType: IContract.GetRemoteHashCode()
  fullName: System.AddIn.Contract.IContract.GetRemoteHashCode()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "返回的哈希代码<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
  syntax:
    content: public int GetRemoteHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "哈希代码<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
  overload: System.AddIn.Contract.IContract.GetRemoteHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.QueryContract(System.String)
  id: QueryContract(System.String)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: QueryContract(String)
  nameWithType: IContract.QueryContract(String)
  fullName: System.AddIn.Contract.IContract.QueryContract(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "返回实现此协定的协定。"
  remarks: "该 QueryContract 方法使<xref:System.AddIn.Contract.IContract>对象来公开其他协定。</xref:System.AddIn.Contract.IContract> QueryContract 起作用类似于`IUnknown.QueryInterface`COM 中的方法       用于标识约定的字符串的格式由定义<xref:System.AddIn.Contract.IContract>实现。</xref:System.AddIn.Contract.IContract> 建议你使用<xref:System.Type.AssemblyQualifiedName%2A>正在查询的协定。</xref:System.Type.AssemblyQualifiedName%2A>"
  syntax:
    content: public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);
    parameters:
    - id: contractIdentifier
      type: System.String
      description: "一个字符串，标识正在请求的协定。"
    return:
      type: System.AddIn.Contract.IContract
      description: "<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>表示的客户端请求从当前协定; 一个协定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果当前协定不支持请求的协定。"
  overload: System.AddIn.Contract.IContract.QueryContract*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  id: RemoteEquals(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RemoteEquals(IContract)
  nameWithType: IContract.RemoteEquals(IContract)
  fullName: System.AddIn.Contract.IContract.RemoteEquals(IContract)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "该值指示指定的协定是否等于该<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
  syntax:
    content: public bool RemoteEquals (System.AddIn.Contract.IContract contract);
    parameters:
    - id: contract
      type: System.AddIn.Contract.IContract
      description: "要与此比较的协定<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>contract</code> is equal to this <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.IContract.RemoteEquals*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RemoteToString
  id: RemoteToString
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RemoteToString()
  nameWithType: IContract.RemoteToString()
  fullName: System.AddIn.Contract.IContract.RemoteToString()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "返回当前的字符串表示<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
  syntax:
    content: public string RemoteToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串表示形式当前<xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>。"
  overload: System.AddIn.Contract.IContract.RemoteToString*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  id: RevokeLifetimeToken(System.Int32)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RevokeLifetimeToken(Int32)
  nameWithType: IContract.RevokeLifetimeToken(Int32)
  fullName: System.AddIn.Contract.IContract.RevokeLifetimeToken(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "指定协定不再是访问客户端。"
  remarks: "客户端实现的对象的<xref:System.AddIn.Contract.IContract>调用 RevokeLifetimeToken 方法，以通知对象客户端不再需要该合同。</xref:System.AddIn.Contract.IContract> <xref:System.AddIn.Contract.IContract>保证，只要尚未吊销至少一个它传递到客户端的生存期标记为可用。</xref:System.AddIn.Contract.IContract>       获取一个协定，客户端调用<xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A>方法。</xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A>"
  syntax:
    content: public void RevokeLifetimeToken (int token);
    parameters:
    - id: token
      type: System.Int32
      description: "一个值，也称为生存期标记，用于标识正在调用协定的客户端。"
  overload: System.AddIn.Contract.IContract.RevokeLifetimeToken*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: AcquireLifetimeToken()
  nameWithType: IContract.AcquireLifetimeToken()
  fullName: System.AddIn.Contract.IContract.AcquireLifetimeToken()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: GetRemoteHashCode()
  nameWithType: IContract.GetRemoteHashCode()
  fullName: System.AddIn.Contract.IContract.GetRemoteHashCode()
- uid: System.AddIn.Contract.IContract.QueryContract(System.String)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: QueryContract(String)
  nameWithType: IContract.QueryContract(String)
  fullName: System.AddIn.Contract.IContract.QueryContract(String)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteEquals(IContract)
  nameWithType: IContract.RemoteEquals(IContract)
  fullName: System.AddIn.Contract.IContract.RemoteEquals(IContract)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.IContract.RemoteToString
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteToString()
  nameWithType: IContract.RemoteToString()
  fullName: System.AddIn.Contract.IContract.RemoteToString()
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RevokeLifetimeToken(Int32)
  nameWithType: IContract.RevokeLifetimeToken(Int32)
  fullName: System.AddIn.Contract.IContract.RevokeLifetimeToken(Int32)
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: AcquireLifetimeToken
  nameWithType: IContract.AcquireLifetimeToken
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: GetRemoteHashCode
  nameWithType: IContract.GetRemoteHashCode
- uid: System.AddIn.Contract.IContract.QueryContract*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: QueryContract
  nameWithType: IContract.QueryContract
- uid: System.AddIn.Contract.IContract.RemoteEquals*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteEquals
  nameWithType: IContract.RemoteEquals
- uid: System.AddIn.Contract.IContract.RemoteToString*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteToString
  nameWithType: IContract.RemoteToString
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RevokeLifetimeToken
  nameWithType: IContract.RevokeLifetimeToken
