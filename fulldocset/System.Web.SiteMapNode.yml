### YamlMime:ManagedReference
items:
- uid: System.Web.SiteMapNode
  id: SiteMapNode
  children:
  - System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String)
  - System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String)
  - System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String)
  - System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String)
  - System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)
  - System.Web.SiteMapNode.Attributes
  - System.Web.SiteMapNode.ChildNodes
  - System.Web.SiteMapNode.Clone
  - System.Web.SiteMapNode.Clone(System.Boolean)
  - System.Web.SiteMapNode.Description
  - System.Web.SiteMapNode.Equals(System.Object)
  - System.Web.SiteMapNode.GetAllNodes
  - System.Web.SiteMapNode.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  - System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)
  - System.Web.SiteMapNode.GetHashCode
  - System.Web.SiteMapNode.GetHierarchicalDataSourceView
  - System.Web.SiteMapNode.GetImplicitResourceString(System.String)
  - System.Web.SiteMapNode.HasChildNodes
  - System.Web.SiteMapNode.IsAccessibleToUser(System.Web.HttpContext)
  - System.Web.SiteMapNode.IsDescendantOf(System.Web.SiteMapNode)
  - System.Web.SiteMapNode.Item(System.String)
  - System.Web.SiteMapNode.Key
  - System.Web.SiteMapNode.NextSibling
  - System.Web.SiteMapNode.ParentNode
  - System.Web.SiteMapNode.PreviousSibling
  - System.Web.SiteMapNode.Provider
  - System.Web.SiteMapNode.ReadOnly
  - System.Web.SiteMapNode.ResourceKey
  - System.Web.SiteMapNode.Roles
  - System.Web.SiteMapNode.RootNode
  - System.Web.SiteMapNode.System#ICloneable#Clone
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path
  - System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type
  - System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description
  - System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name
  - System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl
  - System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value
  - System.Web.SiteMapNode.Title
  - System.Web.SiteMapNode.ToString
  - System.Web.SiteMapNode.Url
  langs:
  - csharp
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
  type: Class
  summary: "表示如所描述分层站点地图结构中的节点<xref href=&quot;System.Web.SiteMap&quot;></xref>类和实现抽象类<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>类。"
  remarks: "SiteMapNode 对象表示站点地图结构中的网站页。 由静态加载 SiteMapNode 对象<xref:System.Web.SiteMap>类在运行时使用一个或多个站点映射提供程序站点地图数据从持久性存储区加载到内存。</xref:System.Web.SiteMap> 通过包装 SiteMapNode 对象<xref:System.Web.UI.WebControls.SiteMapNodeItem>类用于通过 Web 服务器控件，如<xref:System.Web.UI.WebControls.SiteMapPath>控件。</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       SiteMapNode 类包括多个属性，用于描述网站，包括描述页上，如属性中的一个页<xref:System.Web.SiteMapNode.Url%2A>， <xref:System.Web.SiteMapNode.Title%2A>，和<xref:System.Web.SiteMapNode.Description%2A>属性。</xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> </xref:System.Web.SiteMapNode.Url%2A> 而<xref:System.Web.SiteMapNode.Url%2A>属性由<xref:System.Web.XmlSiteMapProvider>类中，这是对 ASP.NET、 默认站点地图提供商提供作为提供程序使用来跟踪节点的内部集合中的查找键，SiteMapNode 类支持基本<xref:System.Web.SiteMapNode.Key%2A>站点地图提供程序可以用于跟踪节点的属性。</xref:System.Web.SiteMapNode.Key%2A> </xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode.Url%2A> 此外，<xref:System.Web.SiteMapNode.Url%2A>导航控件使用属性来呈现页导航结构中的超链接。</xref:System.Web.SiteMapNode.Url%2A> <xref:System.Web.SiteMapNode.Title%2A>属性是 SiteMapNode 的友好名称，通常是相同的 Web 窗体，HTML 标题和导航控件用于呈现简单的标签。</xref:System.Web.SiteMapNode.Title%2A> 最后，<xref:System.Collections.Specialized.NameValueCollection>其他<xref:System.Web.SiteMapNode.Attributes%2A>属性可供站点地图提供程序使用 SiteMapNode 对象，但需要基 SiteMapNode 类中不提供的附加属性</xref:System.Web.SiteMapNode.Attributes%2A>的集合</xref:System.Collections.Specialized.NameValueCollection>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to create a new site map node collection and add elements to it. The second code example demonstrates how to load site map data from a text file.  \n  \n The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection> collection, and then add elements to it with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/t-system.web.sitemapnode_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/t-system.web.sitemapnode_1.vb)]  \n  \n The following code example demonstrates how the `SimpleTextSiteMapProvider` parses a text file that contains site map data in comma-delimited strings. A new SiteMapNode object is added to the internal tracking collections of the class for each line that is read from the file.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/add/codesnippet/visualbasic/t-system.web.sitemapnode_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/add/codesnippet/csharp/t-system.web.sitemapnode_2.cs)]"
  syntax:
    content: 'public class SiteMapNode : ICloneable, System.Web.UI.IHierarchyData, System.Web.UI.INavigateUIData'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IHierarchyData
  - System.Web.UI.INavigateUIData
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String)
  id: '#ctor(System.Web.SiteMapProvider,System.String)'
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: SiteMapNode(SiteMapProvider,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类，使用指定<code> key </code>用于标识该节点表示页站点地图提供程序，用于管理节点。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是默认值<xref:System.Web.SiteMapProvider>对 ASP.NET、 提供程序实现使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>作为查找键，如果其中一个为提供节点 （如果 URL 是未提供为节点生成的跟踪标识符） 的属性。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.SiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>控件提供了一个 URL 并通过使用<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>"
  syntax:
    content: public SiteMapNode (System.Web.SiteMapProvider provider, string key);
    parameters:
    - id: provider
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与节点关联。"
    - id: key
      type: System.String
      description: "特定于提供程序查找键。"
  overload: System.Web.SiteMapNode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=\"System.Web.SiteMapProvider\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String)
  id: '#ctor(System.Web.SiteMapProvider,System.String,System.String)'
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: SiteMapNode(SiteMapProvider,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类使用指定的 URL， <code> key </code>用于标识该节点表示，页站点地图提供程序，用于管理节点。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是默认值<xref:System.Web.SiteMapProvider>对 ASP.NET、 提供程序实现使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>作为查找键，如果其中一个为提供节点 （如果 URL 是未提供为节点生成的跟踪标识符） 的属性。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.SiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>对象，提供了一个 URL，并由<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection> collection, and then add elements to it with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/12361078-5bb9-4815-8bff-_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/12361078-5bb9-4815-8bff-_1.vb)]"
  syntax:
    content: public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url);
    parameters:
    - id: provider
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与节点关联。"
    - id: key
      type: System.String
      description: "特定于提供程序查找键。"
    - id: url
      type: System.String
      description: "该节点表示的站点内的页的 URL。"
  overload: System.Web.SiteMapNode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=\"System.Web.SiteMapProvider\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String)
  id: '#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String)'
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: SiteMapNode(SiteMapProvider,String,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类使用指定的 URL， <code> key </code>来标识该节点表示的页面、 标题和站点地图提供程序，用于管理节点。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是默认值<xref:System.Web.SiteMapProvider>对 ASP.NET、 提供程序实现使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>作为查找键，如果其中一个为提供节点 （如果 URL 是未提供为节点生成的跟踪标识符） 的属性。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.SiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>对象，提供了一个 URL，并由<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>       如果没有`title`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>属性返回<xref:System.String.Empty?displayProperty=fullName>字段。</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.SiteMapNode.Title%2A>"
  example:
  - "The following code example demonstrates how to use the SiteMapNode constructor to create a new instance of the <xref:System.Web.SiteMapNode> class. The node is initialized with values from a Microsoft Access database row.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method.  \n  \n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/add/codesnippet/csharp/b3e99ffb-aa82-4520-9c46-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/add/codesnippet/visualbasic/b3e99ffb-aa82-4520-9c46-_1.vb)]\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/add/codesnippet/cpp/b3e99ffb-aa82-4520-9c46-_1.cpp)]"
  syntax:
    content: public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title);
    parameters:
    - id: provider
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与节点关联。"
    - id: key
      type: System.String
      description: "特定于提供程序查找键。"
    - id: url
      type: System.String
      description: "该节点表示的站点内的页的 URL。"
    - id: title
      type: System.String
      description: "对于节点，通常由导航控件显示标签。"
  overload: System.Web.SiteMapNode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=\"System.Web.SiteMapProvider\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String)'
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: SiteMapNode(SiteMapProvider,String,String,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类使用指定的 URL， <code> key </code>来标识该节点表示的页面、 标题和说明和站点地图提供程序，用于管理节点。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是默认值<xref:System.Web.SiteMapProvider>对 ASP.NET、 提供程序实现使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>作为查找键，如果其中一个为提供节点 （如果 URL 是未提供为节点生成的跟踪标识符） 的属性。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.SiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>对象，提供了一个 URL，并由<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>       如果没有`title`或`description`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性返回<xref:System.String.Empty?displayProperty=fullName>字段。</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A>"
  example:
  - "The following code example demonstrates how to use the SiteMapNode constructor to create a <xref:System.Web.SiteMapNode> object by parsing data from a simple text file to build a site map in memory.  \n  \n This code example is part of a larger example provided for the abstract <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/add/codesnippet/visualbasic/ca94b486-bed3-44f0-9c77-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/add/codesnippet/csharp/ca94b486-bed3-44f0-9c77-_1.cs)]"
  syntax:
    content: public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title, string description);
    parameters:
    - id: provider
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与节点关联。"
    - id: key
      type: System.String
      description: "特定于提供程序查找键。"
    - id: url
      type: System.String
      description: "该节点表示的站点内的页的 URL。"
    - id: title
      type: System.String
      description: "对于节点，通常由导航控件显示标签。"
    - id: description
      type: System.String
      description: "该节点表示页的说明。"
  overload: System.Web.SiteMapNode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=\"System.Web.SiteMapProvider\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)
  id: '#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)'
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类使用的指定的站点映射提供程序管理节点、 URL、 标题、 描述、 角色、 其他特性和用于本地化的显式和隐式的资源键。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是默认值<xref:System.Web.SiteMapProvider>对 ASP.NET、 提供程序实现使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>作为查找键，如果其中一个为提供节点 （如果 URL 是未提供为节点生成的跟踪标识符） 的属性。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.SiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>对象，提供了一个 URL，并由<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>       <xref:System.Collections.Specialized.NameValueCollection>的属性集合，<xref:System.Web.SiteMapNode>创建可通过<xref:System.Web.SiteMapNode.Attributes%2A>属性，并可轻松地应用附加到的站点属性映射节点并扩展其功能而不用派生自定义类来执行此操作。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode> </xref:System.Collections.Specialized.NameValueCollection>       提供<xref:System.Collections.IList>角色，以提供一组可以查看节点的角色的集合时<xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>属性返回`true`。</xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A> </xref:System.Collections.IList>  有关详细信息，请参阅<xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>。</xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>       <xref:System.Web.XmlSiteMapProvider>提供程序使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName>属性作为查找键。</xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> </xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>，它由<xref:System.Web.XmlSiteMapProvider>必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>       如果没有`title`或`description`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性返回<xref:System.String.Empty?displayProperty=fullName>字段。</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A>       若要以编程方式指定本地化资源用于，设置的值`implicitResourceKey`为唯一的名称将用于标识的节点或集的本地化的资源`explicitResourceKeys`到<xref:System.Collections.Specialized.NameValueCollection>的集合`name/value`对 where`name`节点属性或要本地化的自定义属性和`value`包含的节点属性或自定义属性的本地化值。</xref:System.Collections.Specialized.NameValueCollection> 然后可以在相应的.resx 文件中设置的本地化的值。 有关如何本地化<xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Description%2A>，和的任何自定义属性<xref:System.Web.SiteMapNode>对象，请参阅[如何︰ 本地化站点地图数据](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> 语法要求`explicitResourceKeys`集合，请参阅<xref:System.Collections.Specialized.NameValueCollection>。</xref:System.Collections.Specialized.NameValueCollection>"
  syntax:
    content: public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title, string description, System.Collections.IList roles, System.Collections.Specialized.NameValueCollection attributes, System.Collections.Specialized.NameValueCollection explicitResourceKeys, string implicitResourceKey);
    parameters:
    - id: provider
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与节点关联。"
    - id: key
      type: System.String
      description: "特定于提供程序查找键。"
    - id: url
      type: System.String
      description: "该节点表示的站点内的页的 URL。"
    - id: title
      type: System.String
      description: "对于节点，通常由导航控件显示标签。"
    - id: description
      type: System.String
      description: "该节点表示页的说明。"
    - id: roles
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>的角色的人员才能查看通过所代表的页<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。</xref:System.Collections.IList>"
    - id: attributes
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>的其他属性，用于初始化<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
    - id: explicitResourceKeys
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>的用于本地化的显式资源键。"
    - id: implicitResourceKey
      type: System.String
      description: "用于本地化隐式的资源键。"
  overload: System.Web.SiteMapNode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=\"System.Web.SiteMapProvider\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.Attributes
  id: Attributes
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Attributes
  nameWithType: SiteMapNode.Attributes
  fullName: System.Web.SiteMapNode.Attributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置为定义的强类型属性以外的其他属性的集合<xref href=&quot;System.Web.SiteMapNode&quot;></xref>类。"
  remarks: "在需要以适用于网站的其他属性时，通常使用集合的属性将映射节点，但不是希望为了做到这一点派生一个自定义类。       与相同的方式在不执行受保护的特性属性<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性。</xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> 有关本地化支持，开发人员必须使用的默认索引器。"
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection Attributes { get; set; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>的其他属性<xref href=&quot;System.Web.SiteMapNode&quot;></xref>超出<> *1>， <> </> *1>， <> </> *1>，和<> *1>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果不存在特性。"
  overload: System.Web.SiteMapNode.Attributes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.ChildNodes
  id: ChildNodes
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: SiteMapNode.ChildNodes
  fullName: System.Web.SiteMapNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置当前节点的所有子<xref href=&quot;System.Web.SiteMapNode&quot;></xref>从关联的对象<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>提供程序。"
  remarks: "<xref:System.Web.SiteMapNode>依赖于<xref:System.Web.SiteMapProvider>它是与相关联来跟踪它与站点图中的其他节点的关系。</xref:System.Web.SiteMapProvider> </xref:System.Web.SiteMapNode> 此属性调用的<xref:System.Web.SiteMapProvider.GetChildNodes%2A>方法，向自身，以检索<xref:System.Web.SiteMapNodeCollection>.</xref:System.Web.SiteMapNodeCollection>传递引用</xref:System.Web.SiteMapProvider.GetChildNodes%2A>       如果启用了安全修整，则返回当前用户有权查看的节点。 如果不允许用户若要查看任何子节点，则返回空集合。"
  syntax:
    content: public virtual System.Web.SiteMapNodeCollection ChildNodes { get; set; }
    return:
      type: System.Web.SiteMapNodeCollection
      description: "只读<xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>的子节点，如果存在当前节点; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.ChildNodes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.Clone
  id: Clone
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Clone()
  nameWithType: SiteMapNode.Clone()
  fullName: System.Web.SiteMapNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建一个新的节点是当前节点的副本。"
  remarks: "调用<xref:System.Web.SiteMapNode.Clone%2A>方法参数设置为`false`。</xref:System.Web.SiteMapNode.Clone%2A> 提供程序， <xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Url%2A>， <xref:System.Web.SiteMapNode.Description%2A>，和<xref:System.Web.SiteMapNode.Key%2A>属性都将复制。</xref:System.Web.SiteMapNode.Key%2A> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.SiteMapNode.Title%2A> <xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合复制到新的集合。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Roles%2A> 将不会克隆上级节点和子节点。"
  syntax:
    content: public virtual System.Web.SiteMapNode Clone ();
    parameters: []
    return:
      type: System.Web.SiteMapNode
      description: "新的节点是当前节点的副本。"
  overload: System.Web.SiteMapNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Clone(System.Boolean)
  id: Clone(System.Boolean)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Clone(Boolean)
  nameWithType: SiteMapNode.Clone(Boolean)
  fullName: System.Web.SiteMapNode.Clone(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建副本的当前节点，并根据需要克隆所有父节点和上级节点的当前节点的新副本。"
  remarks: "如果`cloneParentNodes`参数是`true`，克隆方法以递归方式将克隆所有直接祖先节点，并将它们与当前克隆的节点关联。 子节点将不会克隆。       <xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合应用于新的集合。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Roles%2A>"
  example:
  - "The following code example demonstrates how to call the Clone method to create a duplicate site map node from the current node. The `ExpandForumPaths` method is registered to handle the <xref:System.Web.SiteMap.SiteMapResolve> event. It uses the Clone method to create a working copy of the current site map node, modify attributes based on personalization data, and return the working copy.  \n  \n [!code-cs[System.Web.SiteMap.SiteMapResolve#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_8_1.cs)]\n [!code-vb[System.Web.SiteMap.SiteMapResolve#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_8_1.vb)]"
  syntax:
    content: public virtual System.Web.SiteMapNode Clone (bool cloneParentNodes);
    parameters:
    - id: cloneParentNodes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要克隆所有父节点和上级节点的当前节点;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.SiteMapNode
      description: "新的节点是当前节点的副本。"
  overload: System.Web.SiteMapNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Description
  id: Description
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Description
  nameWithType: SiteMapNode.Description
  fullName: System.Web.SiteMapNode.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置的说明<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
  remarks: "虽然<xref:System.Web.SiteMapNode.Title%2A>的<xref:System.Web.SiteMapNode>使用由某些作为标签或超链接的导航控件，这些说明用作 ToolTip 元素为鼠标通过事件。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A>       如果，则返回 Description 属性的本地化的值<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性是`true`。</xref:System.Web.SiteMapProvider.EnableLocalization%2A>"
  syntax:
    content: public virtual string Description { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示节点; 的说明否则为&lt;xref:System.String?displayProperty=fullName&gt;。"
  overload: System.Web.SiteMapNode.Description*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SiteMapNode.Equals(Object)
  fullName: System.Web.SiteMapNode.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值指示是否当前<xref href=&quot;System.Web.SiteMapNode&quot;></xref>等同于指定的对象。"
  remarks: "两个<xref:System.Web.SiteMapNode>对象可视为相等，如果满足两个以下条件:-这两个<xref:System.Web.SiteMapNode>对象具有相同的值<xref:System.Web.SiteMapNode.Key%2A>属性。</xref:System.Web.SiteMapNode.Key%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode>      -的固定区域性的、 不区分大小写比较这两者的<xref:System.Web.SiteMapNode.Url%2A>属性返回`true`。</xref:System.Web.SiteMapNode.Url%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的当前对象<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>既是<xref href=&quot;System.Web.SiteMapNode&quot;></xref>完全相同，则为当前<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetAllNodes
  id: GetAllNodes
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetAllNodes()
  nameWithType: SiteMapNode.GetAllNodes()
  fullName: System.Web.SiteMapNode.GetAllNodes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索所有的只读集合<xref href=&quot;System.Web.SiteMapNode&quot;></xref>的调用节点，而不考虑一定程度的分离派生的对象。"
  remarks: "此方法检索直接子节点和所有其子节点，以递归方式。"
  example:
  - "The following code example demonstrates how to retrieve all the child nodes of the <xref:System.Web.SiteMap.RootNode%2A> with the GetAllNodes method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_4_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_4_1.aspx)]"
  syntax:
    content: public System.Web.SiteMapNodeCollection GetAllNodes ();
    parameters: []
    return:
      type: System.Web.SiteMapNodeCollection
      description: "只读<xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>表示的所有后代<xref href=&quot;System.Web.SiteMapNode&quot;></xref>当前提供程序的作用域内。"
  overload: System.Web.SiteMapNode.GetAllNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  id: GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNode.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNode.GetDataSourceView(SiteMapDataSource,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索<xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;></xref>与当前节点关联的对象。"
  syntax:
    content: public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SiteMapDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSource&quot;> </xref>视图关联的控件。"
    - id: viewName
      type: System.String
      description: "视图的名称。"
    return:
      type: System.Web.UI.WebControls.SiteMapDataSourceView
      description: "命名<xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;></xref>对当前节点。"
  overload: System.Web.SiteMapNode.GetDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)
  id: GetExplicitResourceString(System.String,System.String,System.Boolean)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetExplicitResourceString(String,String,Boolean)
  nameWithType: SiteMapNode.GetExplicitResourceString(String,String,Boolean)
  fullName: System.Web.SiteMapNode.GetExplicitResourceString(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索基于的本地化的字符串<xref href=&quot;System.Web.SiteMapNode&quot;></xref>要本地化，如果未找到资源时，返回的默认字符串和一个布尔值，该值指示是否引发异常，如果未找到资源时。"
  remarks: "GetExplicitResourceString 方法调用中`get`的访问器<xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性和中定义任何自定义特性<xref:System.Web.SiteMapNode.Attributes%2A>属性。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> <xref:System.Web.SiteMapProvider>依据对象<xref:System.Web.SiteMapNode>跟踪必须具有其<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性设置为`true`GetExplicitResourceString 方法以返回本地化的字符串。</xref:System.Web.SiteMapProvider.EnableLocalization%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapProvider> 如果<xref:System.Web.SiteMapProvider.EnableLocalization%2A>设置为`false`、 不执行本地化和在于︰ 绝不调用 GetExplicitResourceString 方法。</xref:System.Web.SiteMapProvider.EnableLocalization%2A>       <xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性和中定义任何自定义特性<xref:System.Web.SiteMapNode.Attributes%2A>属性第一次调用<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法。</xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> </xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> 如果它返回`null`，GetExplicitResourceString 方法调用与`defaultValue`（假设已定义） 的显式资源表达式设置为默认值的值和`throwIfNotFound`设置为`true`。      1> [!NOTE]&1;><xref:System.Web.XmlSiteMapProvider>类有这样一个限制，<xref:System.Web.SiteMapNode>对象不能定义隐式资源表达式和属性的显式资源表达式。</xref:System.Web.SiteMapNode> </xref:System.Web.XmlSiteMapProvider> 但是，自定义提供程序实现可以选择要同时使用。       GetExplicitResourceString 方法使用<xref:System.Collections.Specialized.NameValueCollection>的资源的回收密钥<xref:System.Web.SiteMapNode>对象使用进行初始化。</xref:System.Web.SiteMapNode> </xref:System.Collections.Specialized.NameValueCollection> 如果未指定的资源键的集合，GetExplicitResourceString 返回`null`。"
  syntax:
    content: protected string GetExplicitResourceString (string attributeName, string defaultValue, bool throwIfNotFound);
    parameters:
    - id: attributeName
      type: System.String
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>要本地化属性。"
    - id: defaultValue
      type: System.String
      description: "要返回如果未找到匹配的资源属性的默认值。"
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>引发<xref:System.InvalidOperationException>，如果为定义的显式资源`attributeName`，`defaultValue`是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，和本地化的值不是找到; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.InvalidOperationException>"
    return:
      type: System.String
      description: "表示已本地化的属性的字符串。"
  overload: System.Web.SiteMapNode.GetExplicitResourceString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "找不到匹配的资源对象和<code> throwIfNotFound </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetHashCode
  id: GetHashCode
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SiteMapNode.GetHashCode()
  fullName: System.Web.SiteMapNode.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回的哈希代码<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象。"
  remarks: "使用查找键生成哈希代码 (也就是说，哈希的<xref:System.Web.SiteMapNode.Key%2A>属性) 的站点映射节点。</xref:System.Web.SiteMapNode.Key%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位带符号的整数，表示该哈希代码。"
  overload: System.Web.SiteMapNode.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetHierarchicalDataSourceView
  id: GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNode.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNode.GetHierarchicalDataSourceView()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索<xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;></xref>与当前节点关联的对象。"
  syntax:
    content: public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;> </xref>对当前节点。"
  overload: System.Web.SiteMapNode.GetHierarchicalDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.GetImplicitResourceString(System.String)
  id: GetImplicitResourceString(System.String)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: GetImplicitResourceString(String)
  nameWithType: SiteMapNode.GetImplicitResourceString(String)
  fullName: System.Web.SiteMapNode.GetImplicitResourceString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取本地化的字符串基于属性名称和<xref:System.Web.SiteMapProvider.ResourceKey*>由指定的属性<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>依据<xref href=&quot;System.Web.SiteMapNode&quot;></xref>进行跟踪。</xref:System.Web.SiteMapProvider.ResourceKey*>"
  remarks: "GetImplicitResourceString 方法调用中的 get 访问器<xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性和中定义任何自定义特性<xref:System.Web.SiteMapNode.Attributes%2A>属性。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A> <xref:System.Web.SiteMapProvider>所依据的提供程序<xref:System.Web.SiteMapNode>跟踪对象必须具有其<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性设置为`true`GetImplicitResourceString 方法调用。</xref:System.Web.SiteMapProvider.EnableLocalization%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapProvider> 如果<xref:System.Web.SiteMapProvider.EnableLocalization%2A>设置为`false`、 不执行本地化和在于︰ 绝不调用 GetImplicitResourceString 方法。</xref:System.Web.SiteMapProvider.EnableLocalization%2A>       如果 GetImplicitResourceString 方法返回一个字符串，不为空，这将成为的值<xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Description%2A>，或自定义特性属性。</xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Title%2A>       GetImplicitResourceString 方法使用的值<xref:System.Web.SiteMapNode.ResourceKey%2A>属性来本地化该特性。</xref:System.Web.SiteMapNode.ResourceKey%2A> 如果<xref:System.Web.SiteMapNode.ResourceKey%2A>未指定，则 GetImplicitResourceString 返回`null`。</xref:System.Web.SiteMapNode.ResourceKey%2A>      1> [!NOTE]&1;><xref:System.Web.XmlSiteMapProvider>类有这样一个限制，<xref:System.Web.SiteMapNode>对象不能定义隐式资源表达式和属性的显式资源表达式。</xref:System.Web.SiteMapNode> </xref:System.Web.XmlSiteMapProvider> 但是，自定义提供程序实现可以选择要同时使用。"
  syntax:
    content: protected string GetImplicitResourceString (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>要本地化属性。"
    return:
      type: System.String
      description: "表示已本地化的属性的字符串。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.GetImplicitResourceString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNode.HasChildNodes
  id: HasChildNodes
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: HasChildNodes
  nameWithType: SiteMapNode.HasChildNodes
  fullName: System.Web.SiteMapNode.HasChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值指示是否当前<xref href=&quot;System.Web.SiteMapNode&quot;></xref>有任何子节点。"
  remarks: "此属性是调用一个便捷属性<xref:System.Web.SiteMapNode.ChildNodes%2A>属性在内部，因此它不会执行性能优于如果你调用<xref:System.Web.SiteMapNode.ChildNodes%2A>属性你自己和检查以查看它是否为空。</xref:System.Web.SiteMapNode.ChildNodes%2A> </xref:System.Web.SiteMapNode.ChildNodes%2A>"
  syntax:
    content: public virtual bool HasChildNodes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果节点没有子级;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.HasChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.IsAccessibleToUser(System.Web.HttpContext)
  id: IsAccessibleToUser(System.Web.HttpContext)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: IsAccessibleToUser(HttpContext)
  nameWithType: SiteMapNode.IsAccessibleToUser(HttpContext)
  fullName: System.Web.SiteMapNode.IsAccessibleToUser(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值指定的站点映射节点是否可以查看用户在指定的上下文中。"
  remarks: "IsAccessibleToUser 方法调用<xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>的节点是与，传递指定的提供程序的方法`context`。</xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>"
  syntax:
    content: public virtual bool IsAccessibleToUser (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> ，其中包含用户信息。"
    return:
      type: System.Boolean
      description: '<xref uid="langword_csharp_true" name="true" href=""></xref> if any one of the following conditions is met: the security trimming is enabled and the current user is a member of at least one of the roles allowing access to view the site map node; the current user is authorized specifically for the requested node''s URL in the authorization element for the current application and the URL is located within the directory structure for the application; the current thread has an associated <xref href="System.Security.Principal.WindowsIdentity"></xref> that has file access to the requested node''s URL and the URL is located within the directory structure for the application; or security trimming is not enabled and therefore any user is allowed to view the site map node; otherwise, <xref uid="langword_csharp_false" name="false" href=""></xref>.'
  overload: System.Web.SiteMapNode.IsAccessibleToUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定的上下文是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.IsDescendantOf(System.Web.SiteMapNode)
  id: IsDescendantOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: IsDescendantOf(SiteMapNode)
  nameWithType: SiteMapNode.IsDescendantOf(SiteMapNode)
  fullName: System.Web.SiteMapNode.IsDescendantOf(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值指示当前的站点映射节点为儿童或直接指定节点的后代。"
  syntax:
    content: public virtual bool IsDescendantOf (System.Web.SiteMapNode node);
    parameters:
    - id: node
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>检查当前节点是否为子级或子代。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前节点是子任务或后代，则为指定的节点;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.IsDescendantOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Item(String)
  nameWithType: SiteMapNode.Item(String)
  fullName: System.Web.SiteMapNode.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置从的自定义特性<xref:System.Web.SiteMapNode.Attributes*>集合或资源字符串基于指定的键。</xref:System.Web.SiteMapNode.Attributes*>"
  remarks: "Item 属性是一个索引器，首先确定的提供程序是否跟踪<xref:System.Web.SiteMapNode>对象支持本地化。</xref:System.Web.SiteMapNode> 如果是，项调用<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法，并传递`key`参数。</xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> 如果任何本地化的文本返回，项调用<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>方法。</xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>       如果返回任何本地化的文本，或者如果该提供程序不支持本地化，项将尝试返回元素<xref:System.Web.SiteMapNode.Attributes%2A>集合，并使用指定`key`。</xref:System.Web.SiteMapNode.Attributes%2A>"
  syntax:
    content: public virtual string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "一个字符串，标识要检索的属性或资源的字符串。"
    return:
      type: System.String
      description: "自定义的属性或资源字符串，将由标识<code> key </code>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.Key
  id: Key
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Key
  nameWithType: SiteMapNode.Key
  fullName: System.Web.SiteMapNode.Key
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取表示站点映射节点的查找键的字符串。"
  remarks: "在内部，站点导航类搜索站点地图节点，以及用于建立节点之间的关系时可以使用此查找键。 <xref:System.Web.SiteMapProvider>类还公开<xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A>方法作为一种方法来获取对引用<xref:System.Web.SiteMapNode>与键值匹配的对象。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A> </xref:System.Web.SiteMapProvider>       用于键的特定值是提供程序特定的;但是，它是不一定能保证`null`。"
  syntax:
    content: public string Key { get; }
    return:
      type: System.String
      description: "表示查找键的字符串。"
  overload: System.Web.SiteMapNode.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.NextSibling
  id: NextSibling
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: NextSibling
  nameWithType: SiteMapNode.NextSibling
  fullName: System.Web.SiteMapNode.NextSibling
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取下一个<xref href=&quot;System.Web.SiteMapNode&quot;></xref>与当前的一个，相对于在同一层次结构级别上的节点<xref:System.Web.SiteMapNode.ParentNode*>属性 （如果存在）。</xref:System.Web.SiteMapNode.ParentNode*>"
  remarks: "NextSibling 属性假设<xref:System.Web.SiteMapProvider>对象实现其内部的集合，以便当父节点检索其<xref:System.Web.SiteMapNode.ChildNodes%2A>属性，节点处于相同的顺序在站点图中显示。</xref:System.Web.SiteMapNode.ChildNodes%2A> </xref:System.Web.SiteMapProvider> 如果你在站点地图提供商提供的实现中使用.NET Framework 集合类，选择实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.ArrayList>或<xref:System.Collections.Specialized.ListDictionary>类。</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.ArrayList> </xref:System.Collections.IList> 如果你选择不实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.Hashtable>类，用于简单的站点导航操作可能会发生意外的结果。</xref:System.Collections.Hashtable> </xref:System.Collections.IList>"
  syntax:
    content: public virtual System.Web.SiteMapNode NextSibling { get; }
    return:
      type: System.Web.SiteMapNode
      description: "下一步<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>、 按顺序后的当前一个，在父节点中; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果不存在父级，不则遵循此一个不到任何节点或启用了安全修整，用户不能查看父或下一个同级节点。"
  overload: System.Web.SiteMapNode.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.ParentNode
  id: ParentNode
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: ParentNode
  nameWithType: SiteMapNode.ParentNode
  fullName: System.Web.SiteMapNode.ParentNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置<xref href=&quot;System.Web.SiteMapNode&quot;></xref>是当前节点的父级的对象。"
  remarks: "<xref:System.Web.SiteMapNode>类依赖于它与之关联到站点地图中其他节点跟踪其关系站点地图提供商提供。</xref:System.Web.SiteMapNode> ParentNode 属性调用的<xref:System.Web.SiteMapProvider.GetParentNode%2A>方法，向自身，以检索父<xref:System.Web.SiteMapNode>.</xref:System.Web.SiteMapNode>传递引用</xref:System.Web.SiteMapProvider.GetParentNode%2A>"
  syntax:
    content: public virtual System.Web.SiteMapNode ParentNode { get; set; }
    return:
      type: System.Web.SiteMapNode
      description: "父<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果启用了安全修整且用户不能查看的父节点。"
  overload: System.Web.SiteMapNode.ParentNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.PreviousSibling
  id: PreviousSibling
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: PreviousSibling
  nameWithType: SiteMapNode.PreviousSibling
  fullName: System.Web.SiteMapNode.PreviousSibling
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取以前<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象与当前相同的级别上相对于<xref:System.Web.SiteMapNode.ParentNode*>对象 （如果存在）。</xref:System.Web.SiteMapNode.ParentNode*>"
  remarks: "PreviousSibling 属性假定站点地图提供程序实现其内部集合，以便当父节点检索其<xref:System.Web.SiteMapNode.ChildNodes%2A>对象，在站点图中显示节点处于相同顺序。</xref:System.Web.SiteMapNode.ChildNodes%2A> 如果你的<xref:System.Web.SiteMapProvider>提供程序，选择的集合实现的<xref:System.Collections.IList>接口，如<xref:System.Collections.ArrayList>或<xref:System.Collections.Specialized.ListDictionary>类</xref:System.Collections.Specialized.ListDictionary></xref:System.Collections.ArrayList></xref:System.Collections.IList></xref:System.Web.SiteMapProvider>实现中使用.NET Framework 集合类 如果你选择不实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.Hashtable>类，用于简单的站点导航操作可能会发生意外的结果。</xref:System.Collections.Hashtable> </xref:System.Collections.IList>"
  syntax:
    content: public virtual System.Web.SiteMapNode PreviousSibling { get; }
    return:
      type: System.Web.SiteMapNode
      description: "上一个<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>、 按顺序之前的当前一个，在父节点中; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果不存在父级、 在此之前没有节点或启用了安全修整以及该用户无法查看父或上一个同级节点。"
  overload: System.Web.SiteMapNode.PreviousSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Provider
  id: Provider
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Provider
  nameWithType: SiteMapNode.Provider
  fullName: System.Web.SiteMapNode.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>提供程序， <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>跟踪对象。"
  remarks: "始终返回提供程序;传递`null`到<xref:System.Web.SiteMapNode>构造函数会导致<xref:System.ArgumentException>异常。</xref:System.ArgumentException> </xref:System.Web.SiteMapNode>"
  syntax:
    content: public System.Web.SiteMapProvider Provider { get; }
    return:
      type: System.Web.SiteMapProvider
      description: "<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> ， <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>跟踪通过。"
  overload: System.Web.SiteMapNode.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.ReadOnly
  id: ReadOnly
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: ReadOnly
  nameWithType: SiteMapNode.ReadOnly
  fullName: System.Web.SiteMapNode.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置一个值，该值指示是否可以修改站点映射节点。"
  remarks: "A<xref:System.Web.SiteMapNode>对象是默认情况下可修改。</xref:System.Web.SiteMapNode>      1> [!NOTE]&1;> 通过返回的所有节点<xref:System.Web.XmlSiteMapProvider>是只读的默认情况下。</xref:System.Web.XmlSiteMapProvider>       <xref:System.Web.SiteMapNode.Attributes%2A>， <xref:System.Web.SiteMapNode.ChildNodes%2A>， <xref:System.Web.SiteMapNode.Description%2A>， <xref:System.Web.SiteMapNode.ParentNode%2A>， <xref:System.Web.SiteMapNode.Roles%2A>， <xref:System.Web.SiteMapNode.Title%2A>，和<xref:System.Web.SiteMapNode.Url%2A>属性使用赋值函数尝试来修改站点映射节点的属性之前检查 ReadOnly 属性。</xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.SiteMapNode.Title%2A> </xref:System.Web.SiteMapNode.Roles%2A> </xref:System.Web.SiteMapNode.ParentNode%2A> </xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.ChildNodes%2A> </xref:System.Web.SiteMapNode.Attributes%2A> 如果该节点是只读的当调用赋值函数时，<xref:System.Web.SiteMapNode>对象引发<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException> </xref:System.Web.SiteMapNode>"
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以修改站点映射节点;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.ResourceKey
  id: ResourceKey
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: ResourceKey
  nameWithType: SiteMapNode.ResourceKey
  fullName: System.Web.SiteMapNode.ResourceKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置用于本地化的资源键<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
  remarks: "使用的 ResourceKey 属性 set 访问器时<xref:System.Web.SiteMapNode.ReadOnly%2A>属性是`true`将导致<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException> </xref:System.Web.SiteMapNode.ReadOnly%2A> 若要设置为 ResourceKey<xref:System.Web.SiteMapNode>对象，请使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数。</xref:System.Web.SiteMapNode.%23ctor%2A> </xref:System.Web.SiteMapNode>"
  syntax:
    content: public string ResourceKey { get; set; }
    return:
      type: System.String
      description: "包含资源密钥名称的字符串。"
  overload: System.Web.SiteMapNode.ResourceKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.Roles
  id: Roles
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Roles
  nameWithType: SiteMapNode.Roles
  fullName: System.Web.SiteMapNode.Roles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置的与之关联的角色的集合<xref href=&quot;System.Web.SiteMapNode&quot;></xref>在安全修整期间使用的对象。"
  remarks: "如果启用了安全修整，站点地图提供商提供生成当前用户是能够查看，在某种程度上角色集合中是否包含当前用户分配的角色基于的节点的一个节点的树。 URL 授权和文件授权还用于确定用户是否有权访问<xref:System.Web.SiteMapNode>对象。</xref:System.Web.SiteMapNode> 有关授权的详细信息，请参阅[ASP.NET 授权](~/add/includes/ajax-current-ext-md.md)。       你可以使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数提供的角色添加至列表<xref:System.Web.SiteMapNode>对象时首次创建。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.%23ctor%2A>"
  syntax:
    content: public System.Collections.IList Roles { get; set; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>的角色。</xref:System.Collections.IList>"
  overload: System.Web.SiteMapNode.Roles*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.RootNode
  id: RootNode
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: RootNode
  nameWithType: SiteMapNode.RootNode
  fullName: System.Web.SiteMapNode.RootNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "站点映射提供程序层次结构中获取根提供程序的根节点。 如果不提供程序存在层次结构，RootNode 属性获取当前的提供程序的根节点。"
  remarks: "<xref:System.Web.SiteMapNode>类依赖于它与之关联到站点地图中其他节点跟踪其关系站点地图提供商提供。</xref:System.Web.SiteMapNode> RootNode 属性调用<xref:System.Web.SiteMapProvider.RootNode%2A>根提供程序的属性 (<xref:System.Web.SiteMapProvider.RootProvider%2A>属性) 以检索的根节点。</xref:System.Web.SiteMapProvider.RootProvider%2A> </xref:System.Web.SiteMapProvider.RootNode%2A>"
  syntax:
    content: public virtual System.Web.SiteMapNode RootNode { get; }
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>表示站点导航结构的根节点。"
  overload: System.Web.SiteMapNode.RootNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "无法从根提供程序检索的根节点。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SiteMapNode.System.ICloneable.Clone()
  fullName: System.Web.SiteMapNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建一个新的节点是当前节点的副本。 有关此成员的说明，请参阅&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "<xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合复制到新的集合。</xref:System.Web.SiteMapNode.Attributes%2A> </xref:System.Web.SiteMapNode.Roles%2A>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新的节点是当前节点的副本。"
  overload: System.Web.SiteMapNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren
  id: System#Web#UI#IHierarchyData#GetChildren
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.GetChildren()
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetChildren()
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.GetChildren()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索当前项的层次结构子数据项。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A?displayProperty=fullName&gt;。"
  remarks: "IHierarchyData.GetChildren 方法会委托给<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。</xref:System.Web.SiteMapNode.ChildNodes%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: System.Web.UI.IHierarchicalEnumerable IHierarchyData.GetChildren ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchicalEnumerable
      description: "<xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref>表示的直属子对象的层次结构中的当前项。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent
  id: System#Web#UI#IHierarchyData#GetParent
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.GetParent()
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetParent()
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.GetParent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索当前项的分层父级。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A?displayProperty=fullName&gt;。"
  remarks: "IHierarchyData.GetParent 方法会委托给<xref:System.Web.SiteMapNode.ParentNode%2A>属性。</xref:System.Web.SiteMapNode.ParentNode%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: System.Web.UI.IHierarchyData IHierarchyData.GetParent ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref>表示层次结构中的当前项的父级。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren
  id: System#Web#UI#IHierarchyData#HasChildren
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.HasChildren
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.HasChildren
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.HasChildren
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值指示是否当前<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象具有任何子节点。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A?displayProperty=fullName&gt;。"
  remarks: "IHierarchyData.HasChildren 属性委托给<xref:System.Web.SiteMapNode.HasChildNodes%2A>属性。</xref:System.Web.SiteMapNode.HasChildNodes%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: bool System.Web.UI.IHierarchyData.HasChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该节点具有子节点;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item
  id: System#Web#UI#IHierarchyData#Item
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.Item
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Item
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Item
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取层次结构的数据项。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.Item%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: object System.Web.UI.IHierarchyData.Item { get; }
    return:
      type: System.Object
      description: "一个层次结构数据的节点对象。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path
  id: System#Web#UI#IHierarchyData#Path
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.Path
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Path
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取层次结构的数据项的路径。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.Path%2A?displayProperty=fullName&gt;。"
  remarks: "IHierarchyData.Path 属性委托给<xref:System.Web.SiteMapNode.Url%2A>属性。</xref:System.Web.SiteMapNode.Url%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.IHierarchyData.Path { get; }
    return:
      type: System.String
      description: "数据项目的路径。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type
  id: System#Web#UI#IHierarchyData#Type
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.IHierarchyData.Type
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Type
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取表示分层数据项目的类型名称的字符串。 有关此成员的说明，请参阅&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.IHierarchyData>接口。</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.IHierarchyData.Type { get; }
    return:
      type: System.String
      description: "名为的字符串`&quot;SiteMapNode&quot;`。"
  overload: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description
  id: System#Web#UI#INavigateUIData#Description
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.INavigateUIData.Description
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Description
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref:System.Web.SiteMapNode.Description*>站点映射节点的属性。</xref:System.Web.SiteMapNode.Description*> 有关此成员的说明，请参阅&lt;xref:System.Web.UI.INavigateUIData.Description%2A?displayProperty=fullName&gt;。"
  remarks: "INavigateUIData.Description 属性委托给<xref:System.Web.SiteMapNode.Description%2A>属性。</xref:System.Web.SiteMapNode.Description%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.INavigateUIData>接口。</xref:System.Web.UI.INavigateUIData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.INavigateUIData.Description { get; }
    return:
      type: System.String
      description: "中的节点的导航控件，则工具提示显示文本否则为&lt;xref:System.String?displayProperty=fullName&gt;如果没有<xref:System.Web.SiteMapNode.Description*>设置。</xref:System.Web.SiteMapNode.Description*>"
  overload: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name
  id: System#Web#UI#INavigateUIData#Name
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.INavigateUIData.Name
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Name
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref:System.Web.SiteMapNode.Title*>站点映射节点的属性。</xref:System.Web.SiteMapNode.Title*> 有关此成员的说明，请参阅&lt;xref:System.Web.UI.INavigateUIData.Name%2A?displayProperty=fullName&gt;。"
  remarks: "INavigateUIData.Name 属性委托给<xref:System.Web.SiteMapNode.Title%2A>属性。</xref:System.Web.SiteMapNode.Title%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.INavigateUIData>接口。</xref:System.Web.UI.INavigateUIData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.INavigateUIData.Name { get; }
    return:
      type: System.String
      description: "节点的导航控件，则显示的文本否则为&lt;xref:System.String?displayProperty=fullName&gt;如果没有<xref:System.Web.SiteMapNode.Title*>设置节点。</xref:System.Web.SiteMapNode.Title*>"
  overload: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl
  id: System#Web#UI#INavigateUIData#NavigateUrl
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.INavigateUIData.NavigateUrl
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.NavigateUrl
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref:System.Web.SiteMapNode.Url*>站点映射节点的属性。</xref:System.Web.SiteMapNode.Url*> 有关此成员的说明，请参阅&lt;xref:System.Web.UI.INavigateUIData.NavigateUrl%2A?displayProperty=fullName&gt;。"
  remarks: "INavigateUIData.NavigateUrl 属性委托给<xref:System.Web.SiteMapNode.Url%2A>属性。</xref:System.Web.SiteMapNode.Url%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.INavigateUIData>接口。</xref:System.Web.UI.INavigateUIData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.INavigateUIData.NavigateUrl { get; }
    return:
      type: System.String
      description: "要时单击节点; 导航到的 URL否则为&lt;xref:System.String?displayProperty=fullName&gt;如果没有<xref:System.Web.SiteMapNode.Url*>设置节点。</xref:System.Web.SiteMapNode.Url*>"
  overload: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value
  id: System#Web#UI#INavigateUIData#Value
  isEii: true
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: System.Web.UI.INavigateUIData.Value
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Value
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref:System.Web.SiteMapNode.Title*>站点映射节点的属性。</xref:System.Web.SiteMapNode.Title*> 有关此成员的说明，请参阅&lt;xref:System.Web.UI.INavigateUIData.Value%2A?displayProperty=fullName&gt;。"
  remarks: "INavigateUIData.Value 属性委托给<xref:System.Web.SiteMapNode.Title%2A>属性，用于存储有关导航节点，如用于处理回发事件数据的其他数据。</xref:System.Web.SiteMapNode.Title%2A>       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.SiteMapNode>实例被强制转换为<xref:System.Web.UI.INavigateUIData>接口。</xref:System.Web.UI.INavigateUIData> </xref:System.Web.SiteMapNode>"
  syntax:
    content: string System.Web.UI.INavigateUIData.Value { get; }
    return:
      type: System.String
      description: "一个值，不会显示;否则为&lt;xref:System.String?displayProperty=fullName&gt;。"
  overload: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Title
  id: Title
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Title
  nameWithType: SiteMapNode.Title
  fullName: System.Web.SiteMapNode.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置标题<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象。"
  remarks: "Title 属性用于通过导航控件呈现的节点，而不是使用的标签<xref:System.Web.SiteMapNode.Url%2A>属性，而<xref:System.Web.SiteMapNode.Description%2A>属性用作鼠标悬停事件的工具提示元素。</xref:System.Web.SiteMapNode.Description%2A> </xref:System.Web.SiteMapNode.Url%2A>       如果返回的 Title 属性的本地化的值<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性是`true`。</xref:System.Web.SiteMapProvider.EnableLocalization%2A>"
  syntax:
    content: public virtual string Title { get; set; }
    return:
      type: System.String
      description: "表示节点的标题的字符串。 默认值是&lt;xref:System.String?displayProperty=fullName&gt;。"
  overload: System.Web.SiteMapNode.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
- uid: System.Web.SiteMapNode.ToString
  id: ToString
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: ToString()
  nameWithType: SiteMapNode.ToString()
  fullName: System.Web.SiteMapNode.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将此实例的值转换<xref href=&quot;System.Web.SiteMapNode&quot;></xref>为其等效的字符串表示形式的类。"
  remarks: "ToString 方法将返回<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>对象。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A>"
  example:
  - "The following code example demonstrates how to compare the ToString method to the <xref:System.Web.SiteMapNode.Url%2A> and <xref:System.Web.SiteMapNode.Title%2A> properties of a <xref:System.Web.SiteMapNode> object.  \n  \n [!code-cs[System.Web.SiteMap_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_1_1.aspx)]\n [!code-vb[System.Web.SiteMap_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_1_1.aspx)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串表示形式的值<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
  overload: System.Web.SiteMapNode.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNode.Url
  id: Url
  parent: System.Web.SiteMapNode
  langs:
  - csharp
  name: Url
  nameWithType: SiteMapNode.Url
  fullName: System.Web.SiteMapNode.Url
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取或设置页面的 URL <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>对象所表示。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类，它是 ASP.NET 的默认映射提供程序实现，将此 Url 属性用作查找键。</xref:System.Web.XmlSiteMapProvider> 因此，任何<xref:System.Web.SiteMapNode>对象，由用于<xref:System.Web.XmlSiteMapProvider>类必须提供程序的范围内具有唯一的 URL。</xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode>       忽略前导空格和尾随空白字符。"
  example:
  - "The following code example demonstrates how to set the Url property of a <xref:System.Web.SiteMapNode> object. The `AccessSiteMapProvider` stores its root node as a row that has no `parentnodeid` defined. The row is returned using an <xref:System.Data.OleDb.OleDbDataReader> object, and <xref:System.Web.SiteMapNode> properties are set from the values in the data reader.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/csharp/p-system.web.sitemapnode_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/visualbasic/p-system.web.sitemapnode_1_1.vb)]\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/cpp/p-system.web.sitemapnode_1_1.cpp)]"
  syntax:
    content: public virtual string Url { get; set; }
    return:
      type: System.String
      description: "该节点表示页面的 URL。 默认值是&lt;xref:System.String?displayProperty=fullName&gt;。"
  overload: System.Web.SiteMapNode.Url*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该节点是只读的。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode(SiteMapProvider,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String)
- uid: System.Web.SiteMapProvider
  parent: System.Web
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapProvider
  fullName: System.Web.SiteMapProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode(SiteMapProvider,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String)
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode(SiteMapProvider,String,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String)
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode(SiteMapProvider,String,String,String,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String)
- uid: System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
  nameWithType: SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
  fullName: System.Web.SiteMapNode.SiteMapNode(SiteMapProvider,String,String,String,String,IList,NameValueCollection,NameValueCollection,String)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.SiteMapNode.Attributes
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Attributes
  nameWithType: SiteMapNode.Attributes
  fullName: System.Web.SiteMapNode.Attributes
- uid: System.Web.SiteMapNode.ChildNodes
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ChildNodes
  nameWithType: SiteMapNode.ChildNodes
  fullName: System.Web.SiteMapNode.ChildNodes
- uid: System.Web.SiteMapNodeCollection
  parent: System.Web
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
- uid: System.Web.SiteMapNode.Clone
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Clone()
  nameWithType: SiteMapNode.Clone()
  fullName: System.Web.SiteMapNode.Clone()
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.SiteMapNode.Clone(System.Boolean)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Clone(Boolean)
  nameWithType: SiteMapNode.Clone(Boolean)
  fullName: System.Web.SiteMapNode.Clone(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SiteMapNode.Description
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Description
  nameWithType: SiteMapNode.Description
  fullName: System.Web.SiteMapNode.Description
- uid: System.Web.SiteMapNode.Equals(System.Object)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Equals(Object)
  nameWithType: SiteMapNode.Equals(Object)
  fullName: System.Web.SiteMapNode.Equals(Object)
- uid: System.Web.SiteMapNode.GetAllNodes
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetAllNodes()
  nameWithType: SiteMapNode.GetAllNodes()
  fullName: System.Web.SiteMapNode.GetAllNodes()
- uid: System.Web.SiteMapNode.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNode.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNode.GetDataSourceView(SiteMapDataSource,String)
- uid: System.Web.UI.WebControls.SiteMapDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSourceView
  nameWithType: SiteMapDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapDataSourceView
- uid: System.Web.UI.WebControls.SiteMapDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSource
  nameWithType: SiteMapDataSource
  fullName: System.Web.UI.WebControls.SiteMapDataSource
- uid: System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetExplicitResourceString(String,String,Boolean)
  nameWithType: SiteMapNode.GetExplicitResourceString(String,String,Boolean)
  fullName: System.Web.SiteMapNode.GetExplicitResourceString(String,String,Boolean)
- uid: System.Web.SiteMapNode.GetHashCode
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetHashCode()
  nameWithType: SiteMapNode.GetHashCode()
  fullName: System.Web.SiteMapNode.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SiteMapNode.GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNode.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNode.GetHierarchicalDataSourceView()
- uid: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapHierarchicalDataSourceView
  nameWithType: SiteMapHierarchicalDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
- uid: System.Web.SiteMapNode.GetImplicitResourceString(System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetImplicitResourceString(String)
  nameWithType: SiteMapNode.GetImplicitResourceString(String)
  fullName: System.Web.SiteMapNode.GetImplicitResourceString(String)
- uid: System.Web.SiteMapNode.HasChildNodes
  parent: System.Web.SiteMapNode
  isExternal: false
  name: HasChildNodes
  nameWithType: SiteMapNode.HasChildNodes
  fullName: System.Web.SiteMapNode.HasChildNodes
- uid: System.Web.SiteMapNode.IsAccessibleToUser(System.Web.HttpContext)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: IsAccessibleToUser(HttpContext)
  nameWithType: SiteMapNode.IsAccessibleToUser(HttpContext)
  fullName: System.Web.SiteMapNode.IsAccessibleToUser(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SiteMapNode.IsDescendantOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: IsDescendantOf(SiteMapNode)
  nameWithType: SiteMapNode.IsDescendantOf(SiteMapNode)
  fullName: System.Web.SiteMapNode.IsDescendantOf(SiteMapNode)
- uid: System.Web.SiteMapNode.Item(System.String)
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Item(String)
  nameWithType: SiteMapNode.Item(String)
  fullName: System.Web.SiteMapNode.Item(String)
- uid: System.Web.SiteMapNode.Key
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Key
  nameWithType: SiteMapNode.Key
  fullName: System.Web.SiteMapNode.Key
- uid: System.Web.SiteMapNode.NextSibling
  parent: System.Web.SiteMapNode
  isExternal: false
  name: NextSibling
  nameWithType: SiteMapNode.NextSibling
  fullName: System.Web.SiteMapNode.NextSibling
- uid: System.Web.SiteMapNode.ParentNode
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ParentNode
  nameWithType: SiteMapNode.ParentNode
  fullName: System.Web.SiteMapNode.ParentNode
- uid: System.Web.SiteMapNode.PreviousSibling
  parent: System.Web.SiteMapNode
  isExternal: false
  name: PreviousSibling
  nameWithType: SiteMapNode.PreviousSibling
  fullName: System.Web.SiteMapNode.PreviousSibling
- uid: System.Web.SiteMapNode.Provider
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Provider
  nameWithType: SiteMapNode.Provider
  fullName: System.Web.SiteMapNode.Provider
- uid: System.Web.SiteMapNode.ReadOnly
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ReadOnly
  nameWithType: SiteMapNode.ReadOnly
  fullName: System.Web.SiteMapNode.ReadOnly
- uid: System.Web.SiteMapNode.ResourceKey
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ResourceKey
  nameWithType: SiteMapNode.ResourceKey
  fullName: System.Web.SiteMapNode.ResourceKey
- uid: System.Web.SiteMapNode.Roles
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Roles
  nameWithType: SiteMapNode.Roles
  fullName: System.Web.SiteMapNode.Roles
- uid: System.Web.SiteMapNode.RootNode
  parent: System.Web.SiteMapNode
  isExternal: false
  name: RootNode
  nameWithType: SiteMapNode.RootNode
  fullName: System.Web.SiteMapNode.RootNode
- uid: System.Web.SiteMapNode.System#ICloneable#Clone
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SiteMapNode.System.ICloneable.Clone()
  fullName: System.Web.SiteMapNode.System.ICloneable.Clone()
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.GetChildren()
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetChildren()
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.GetChildren()
- uid: System.Web.UI.IHierarchicalEnumerable
  parent: System.Web.UI
  isExternal: false
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.GetParent()
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetParent()
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.GetParent()
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.HasChildren
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.HasChildren
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.HasChildren
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Item
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Item
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Item
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Path
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Path
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Path
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Type
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Type
  fullName: System.Web.SiteMapNode.System.Web.UI.IHierarchyData.Type
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Description
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Description
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Description
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Name
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Name
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Name
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.NavigateUrl
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.NavigateUrl
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.NavigateUrl
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Value
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Value
  fullName: System.Web.SiteMapNode.System.Web.UI.INavigateUIData.Value
- uid: System.Web.SiteMapNode.Title
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Title
  nameWithType: SiteMapNode.Title
  fullName: System.Web.SiteMapNode.Title
- uid: System.Web.SiteMapNode.ToString
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ToString()
  nameWithType: SiteMapNode.ToString()
  fullName: System.Web.SiteMapNode.ToString()
- uid: System.Web.SiteMapNode.Url
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Url
  nameWithType: SiteMapNode.Url
  fullName: System.Web.SiteMapNode.Url
- uid: System.Web.SiteMapNode.#ctor*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode.SiteMapNode
- uid: System.Web.SiteMapNode.Attributes*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Attributes
  nameWithType: SiteMapNode.Attributes
- uid: System.Web.SiteMapNode.ChildNodes*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ChildNodes
  nameWithType: SiteMapNode.ChildNodes
- uid: System.Web.SiteMapNode.Clone*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Clone
  nameWithType: SiteMapNode.Clone
- uid: System.Web.SiteMapNode.Description*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Description
  nameWithType: SiteMapNode.Description
- uid: System.Web.SiteMapNode.Equals*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Equals
  nameWithType: SiteMapNode.Equals
- uid: System.Web.SiteMapNode.GetAllNodes*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetAllNodes
  nameWithType: SiteMapNode.GetAllNodes
- uid: System.Web.SiteMapNode.GetDataSourceView*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetDataSourceView
  nameWithType: SiteMapNode.GetDataSourceView
- uid: System.Web.SiteMapNode.GetExplicitResourceString*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetExplicitResourceString
  nameWithType: SiteMapNode.GetExplicitResourceString
- uid: System.Web.SiteMapNode.GetHashCode*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetHashCode
  nameWithType: SiteMapNode.GetHashCode
- uid: System.Web.SiteMapNode.GetHierarchicalDataSourceView*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetHierarchicalDataSourceView
  nameWithType: SiteMapNode.GetHierarchicalDataSourceView
- uid: System.Web.SiteMapNode.GetImplicitResourceString*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: GetImplicitResourceString
  nameWithType: SiteMapNode.GetImplicitResourceString
- uid: System.Web.SiteMapNode.HasChildNodes*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: HasChildNodes
  nameWithType: SiteMapNode.HasChildNodes
- uid: System.Web.SiteMapNode.IsAccessibleToUser*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: IsAccessibleToUser
  nameWithType: SiteMapNode.IsAccessibleToUser
- uid: System.Web.SiteMapNode.IsDescendantOf*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: IsDescendantOf
  nameWithType: SiteMapNode.IsDescendantOf
- uid: System.Web.SiteMapNode.Item*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Item
  nameWithType: SiteMapNode.Item
- uid: System.Web.SiteMapNode.Key*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Key
  nameWithType: SiteMapNode.Key
- uid: System.Web.SiteMapNode.NextSibling*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: NextSibling
  nameWithType: SiteMapNode.NextSibling
- uid: System.Web.SiteMapNode.ParentNode*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ParentNode
  nameWithType: SiteMapNode.ParentNode
- uid: System.Web.SiteMapNode.PreviousSibling*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: PreviousSibling
  nameWithType: SiteMapNode.PreviousSibling
- uid: System.Web.SiteMapNode.Provider*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Provider
  nameWithType: SiteMapNode.Provider
- uid: System.Web.SiteMapNode.ReadOnly*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ReadOnly
  nameWithType: SiteMapNode.ReadOnly
- uid: System.Web.SiteMapNode.ResourceKey*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ResourceKey
  nameWithType: SiteMapNode.ResourceKey
- uid: System.Web.SiteMapNode.Roles*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Roles
  nameWithType: SiteMapNode.Roles
- uid: System.Web.SiteMapNode.RootNode*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: RootNode
  nameWithType: SiteMapNode.RootNode
- uid: System.Web.SiteMapNode.System#ICloneable#Clone*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SiteMapNode.System.ICloneable.Clone
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.GetChildren
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetChildren
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.GetParent
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.GetParent
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.HasChildren
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.HasChildren
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Item
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Item
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Path
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Path
- uid: System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.IHierarchyData.Type
  nameWithType: SiteMapNode.System.Web.UI.IHierarchyData.Type
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Description
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Description
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Name
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Name
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.NavigateUrl
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.NavigateUrl
- uid: System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: System.Web.UI.INavigateUIData.Value
  nameWithType: SiteMapNode.System.Web.UI.INavigateUIData.Value
- uid: System.Web.SiteMapNode.Title*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Title
  nameWithType: SiteMapNode.Title
- uid: System.Web.SiteMapNode.ToString*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: ToString
  nameWithType: SiteMapNode.ToString
- uid: System.Web.SiteMapNode.Url*
  parent: System.Web.SiteMapNode
  isExternal: false
  name: Url
  nameWithType: SiteMapNode.Url
