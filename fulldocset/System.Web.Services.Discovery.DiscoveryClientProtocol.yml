### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol
  id: DiscoveryClientProtocol
  children:
  - System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor
  - System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation
  - System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)
  - System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)
  - System.Web.Services.Discovery.DiscoveryClientProtocol.Documents
  - System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)
  - System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)
  - System.Web.Services.Discovery.DiscoveryClientProtocol.Errors
  - System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals
  - System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)
  - System.Web.Services.Discovery.DiscoveryClientProtocol.References
  - System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll
  - System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel
  - System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)
  langs:
  - csharp
  name: DiscoveryClientProtocol
  nameWithType: DiscoveryClientProtocol
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol
  type: Class
  summary: "提供以编程方式调用 XML Web services 发现支持。"
  remarks: "XML Web 服务发现过程的查找，或发现、 一个或多个相关的文档，描述可用的 XML Web 服务。 它是通过 XML Web 服务发现 XML Web 服务客户端了解有关可用的 XML Web 服务，在给定的 URL 以及如何使用它们。 提供 XML Web 服务发现的工作原理从本地，你有已获取的 URL 发现文档，可能通过目录服务，如 http://uddi.microsoft.com，但是，您没有 XML Web 服务有关的详细信息。 可以通过 XML Web 服务发现，发现中列出了 XML Web 服务有关的详细信息<xref:System.Web.Services.Discovery.DiscoveryDocument>在特定的 URL。</xref:System.Web.Services.Discovery.DiscoveryDocument>       XML Web 服务客户端通过提供的 URL 来启动发现 XML Web 服务<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>或<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 通常，此 URL 是指发现文档，它又引用文档，用于描述一个或多个 XML Web 服务，添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 此时，仅该文档下载和验证以指向 XML Web 服务的有效信息。 但是，在此阶段未验证该文档中包含的引用。 而是将它们添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 若要验证这些引用是否有效，请调用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>或<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法，将它添加到有效的引用的文档<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 最后，如果客户端想要保存到磁盘中，调用的发现结果<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A>       如果不需要以编程方式访问 XML Web 服务发现，[!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]随 Web 服务发现工具 (Disco.exe) 提供用于发现在命令提示符内的 XML Web 服务。 有关更多详细信息，请参阅[Web 服务发现工具 (Disco.exe)](http://msdn.microsoft.com/en-us/acd88078-c581-42bc-94ca-6633e2851979)。"
  example:
  - "The following code example is a Web Form demonstrating how to use the DiscoveryClientProtocol class together with the other classes in the <xref:System.Web.Services.Discovery> namespace to programmatically invoke XML Web services discovery. The code example demonstrates using the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>, <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>, <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>, <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>, <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>, <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> methods.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DiscoveryClientProtocol#1](~/add/codesnippet/visualbasic/t-system.web.services.di_6_1.aspx)]\n [!code-cs[DiscoveryClientProtocol#1](~/add/codesnippet/csharp/t-system.web.services.di_6_1.aspx)]"
  syntax:
    content: 'public class DiscoveryClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: DiscoveryClientProtocol()
  nameWithType: DiscoveryClientProtocol.DiscoveryClientProtocol()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Discovery.DiscoveryClientProtocol&quot;></xref>类。"
  syntax:
    content: public DiscoveryClientProtocol ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation
  id: AdditionalInformation
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: AdditionalInformation
  nameWithType: DiscoveryClientProtocol.AdditionalInformation
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "获取信息以及在发现文档中找到的引用。"
  remarks: "AdditionalInformation 属性主要包含 SOAP 绑定，由表示<xref:System.Web.Services.Discovery.SoapBinding>发现文档中定义的类。</xref:System.Web.Services.Discovery.SoapBinding>"
  example:
  - >-
    [!code-cs[DiscoveryClientProtocol_AdditionalInformation#1](~/add/codesnippet/csharp/p-system.web.services.di_6_1.cs)]
     [!code-vb[DiscoveryClientProtocol_AdditionalInformation#1](~/add/codesnippet/visualbasic/p-system.web.services.di_6_1.vb)]
     [!code-cpp[DiscoveryClientProtocol_AdditionalInformation#1](~/add/codesnippet/cpp/p-system.web.services.di_6_1.cpp)]
  syntax:
    content: public System.Collections.IList AdditionalInformation { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>包含其他信息在发现文档中找到。</xref:System.Collections.IList>"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)
  id: Discover(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: Discover(String)
  nameWithType: DiscoveryClientProtocol.Discover(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "发现提供的 URL，以确定其是否发现文档。"
  remarks: "发现方法需要提供的 URL 是发现文档。 如果 URL 指代的服务说明或 XML 架构是引发异常。 若要了解 XML 架构或服务说明调用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>       如果提供的 URL 指向有效的发现文档，所提供的 URL 处发现文档添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 此外，发现文档中的引用将添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合，但不是验证是否指向有效的发现文档。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 验证引用，指向有效的发现文档，以调用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>或<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents in the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> property together with the references found in each document during XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the results from a Discover invocation followed by a call to <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>.  \n  \n [!code-cs[DiscoveryClientProtocol.Discover#1](~/add/codesnippet/csharp/m-system.web.services.di_13_1.aspx)]\n [!code-vb[DiscoveryClientProtocol.Discover#1](~/add/codesnippet/visualbasic/m-system.web.services.di_13_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryDocument Discover (string url);
    parameters:
    - id: url
      type: System.String
      description: "发现 XML Web 服务的起始位置的 URL。"
    return:
      type: System.Web.Services.Discovery.DiscoveryDocument
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>包含结果的 XML Web 服务发现提供的 URL 处。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "访问提供的 URL 返回<xref:System.Net.HttpStatusCode>.</xref:System.Net.HttpStatusCode>以外的 HTTP 状态代码"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> url </code>参数是有效的 URL，但不指向有效的发现文档。"
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)
  id: DiscoverAny(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: DiscoverAny(String)
  nameWithType: DiscoveryClientProtocol.DiscoverAny(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "发现提供的 URL，以确定它是发现文档、 服务说明或 XML 架构定义 (XSD) 架构。"
  remarks: "DiscoverAny 方法发现提供的 URL 是发现文档、 服务说明或 XSD 架构。 如果它已知的 URL 仅指发现文档中，<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>可能调用方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>       如果提供的 URL 指向有效的发现文档、 XSD 架构或服务说明，将提供的 URL 处发现文档添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 当所提供的 URL 引用 XSD 架构或服务说明<xref:System.Web.Services.Discovery.DiscoveryDocument>被在内存中创建并添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> </xref:System.Web.Services.Discovery.DiscoveryDocument> 此外，发现文档中的引用将添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合，但不是验证是否指向有效的发现文档。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 若要验证是否引用指向有效的发现文档，请调用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>或<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents in the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> property together with the references found in each document during an XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the results from a DiscoverAny invocation followed by a call to <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>.  \n  \n [!code-vb[DiscoveryClientProtocol.DiscoverAny#1](~/add/codesnippet/visualbasic/1093a1a7-9b3e-4a42-afa9-_1.aspx)]\n [!code-cs[DiscoveryClientProtocol.DiscoverAny#1](~/add/codesnippet/csharp/1093a1a7-9b3e-4a42-afa9-_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryDocument DiscoverAny (string url);
    parameters:
    - id: url
      type: System.String
      description: "发现 XML Web 服务的起始位置的 URL。"
    return:
      type: System.Web.Services.Discovery.DiscoveryDocument
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>包含结果的 XML Web 服务发现提供的 URL 处。 如果<code> url </code>参数指的服务说明或 XSD 架构， <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>在内存中创建它。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "访问提供的 URL 返回<xref:System.Net.HttpStatusCode>.</xref:System.Net.HttpStatusCode>以外的 HTTP 状态代码"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> url </code>参数是有效的 URL，但不指向有效的发现文档、 服务说明或 XSD 架构。"
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents
  id: Documents
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: Documents
  nameWithType: DiscoveryClientProtocol.Documents
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "获取发现文档的集合。"
  remarks: "在调用期间填充文档集合<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>，<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 在调用期间<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法，如果提供的 URL 是一个有效的发现文档，该文档添加到文档集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 在调用期间<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法，有效的发现文档引用中<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>集合添加到文档集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents in the Documents property discovered during XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the results from a <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> invocation followed by a call to <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DiscoveryClientProtocol.Documents#1](~/add/codesnippet/csharp/p-system.web.services.di_10_1.aspx)]\n [!code-vb[DiscoveryClientProtocol.Documents#1](~/add/codesnippet/visualbasic/p-system.web.services.di_10_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryClientDocumentCollection Documents { get; }
    return:
      type: System.Web.Services.Discovery.DiscoveryClientDocumentCollection
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryClientDocumentCollection&quot;> </xref>表示发现找到的文档的集合。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)
  id: Download(System.String@)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: Download(String)
  nameWithType: DiscoveryClientProtocol.Download(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "将下载到提供的 URL 处的发现文档<xref:System.IO.Stream>对象。</xref:System.IO.Stream>"
  remarks: ''
  example:
  - >-
    [!code-vb[DiscoveryClientProtocol_Download#2](~/add/codesnippet/visualbasic/m-system.web.services.di_6_1.vb)]
     [!code-cpp[DiscoveryClientProtocol_Download#2](~/add/codesnippet/cpp/m-system.web.services.di_6_1.cpp)]
     [!code-cs[DiscoveryClientProtocol_Download#2](~/add/codesnippet/csharp/m-system.web.services.di_6_1.cs)]
  syntax:
    content: public System.IO.Stream Download (ref string url);
    parameters:
    - id: url
      type: System.String
      description: "要下载的发现文档的 URL。"
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>包含提供的 URL 处的文档。</xref:System.IO.Stream>"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.Download*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "从提供的 URL 下载返回<xref:System.Net.HttpStatusCode>.</xref:System.Net.HttpStatusCode>以外的 HTTP 状态代码"
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)
  id: Download(System.String@,System.String@)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: Download(String,String)
  nameWithType: DiscoveryClientProtocol.Download(String,String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(String,String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "将下载到提供的 URL 处的发现文档<xref:System.IO.Stream>对象，并设置<code> contentType </code>发现文档的 MIME 编码参数。</xref:System.IO.Stream>"
  remarks: ''
  example:
  - >-
    [!code-cpp[DiscoveryClientProtocol_Download2#1](~/add/codesnippet/cpp/55b71abb-e5c9-4867-80d8-_1.cpp)]
     [!code-vb[DiscoveryClientProtocol_Download2#1](~/add/codesnippet/visualbasic/55b71abb-e5c9-4867-80d8-_1.vb)]
     [!code-cs[DiscoveryClientProtocol_Download2#1](~/add/codesnippet/csharp/55b71abb-e5c9-4867-80d8-_1.cs)]
  syntax:
    content: public System.IO.Stream Download (ref string url, ref string contentType);
    parameters:
    - id: url
      type: System.String
      description: "要下载的发现文档的 URL。"
    - id: contentType
      type: System.String
      description: "下载的发现文档的 MIME 编码。"
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>包含提供的 URL 处的文档。</xref:System.IO.Stream>"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.Download*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "从提供的 URL 下载返回<xref:System.Net.HttpStatusCode>.</xref:System.Net.HttpStatusCode>以外的 HTTP 状态代码"
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors
  id: Errors
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: Errors
  nameWithType: DiscoveryClientProtocol.Errors
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "获取从该类的方法的调用过程中发生的异常的集合。"
  remarks: "错误集合填充到的调用过程中发生的异常与<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>，和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> <xref:System.Web.Services.Discovery.DiscoveryExceptionDictionary>上调用这些方法清除。</xref:System.Web.Services.Discovery.DiscoveryExceptionDictionary>"
  example:
  - >-
    [!code-cpp[DiscoveryClientProtocol_Errors#1](~/add/codesnippet/cpp/p-system.web.services.di_16_1.cpp)]
     [!code-cs[DiscoveryClientProtocol_Errors#1](~/add/codesnippet/csharp/p-system.web.services.di_16_1.cs)]
     [!code-vb[DiscoveryClientProtocol_Errors#1](~/add/codesnippet/visualbasic/p-system.web.services.di_16_1.vb)]
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryExceptionDictionary Errors { get; }
    return:
      type: System.Web.Services.Discovery.DiscoveryExceptionDictionary
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryExceptionDictionary&quot;> </xref>的异常。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals
  id: LoadExternals
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: LoadExternals()
  nameWithType: DiscoveryClientProtocol.LoadExternals()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "指示<xref href=&quot;System.Web.Services.Discovery.DiscoveryClientProtocol&quot;></xref>要加载的任何外部引用对象。"
  syntax:
    content: public void LoadExternals ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)
  id: ReadAll(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: ReadAll(String)
  nameWithType: DiscoveryClientProtocol.ReadAll(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "在包含的已保存的发现文档填充的映射的文件中读取<> *1> 和<> *1> 属性，使用发现文档、 XML 架构定义 (XSD) 架构和文件中引用的服务说明。"
  remarks: "可以通过创建包含的已保存的发现文档的映射的文件<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A>方法或 Disco.exe。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A>       `topLevelFilename`参数必须包含完全限定的路径，如果文件不存在当前目录中。"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents and references found in an existing discovery map document using the ReadAll method.  \n  \n [!code-vb[DiscoveryClientProtocol.ReadAll#1](~/add/codesnippet/visualbasic/m-system.web.services.di_7_1.aspx)]\n [!code-cs[DiscoveryClientProtocol.ReadAll#1](~/add/codesnippet/csharp/m-system.web.services.di_7_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryClientResultCollection ReadAll (string topLevelFilename);
    parameters:
    - id: topLevelFilename
      type: System.String
      description: "名称的文件中读取，请包含的映射已保存的发现文档。"
    return:
      type: System.Web.Services.Discovery.DiscoveryClientResultCollection
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryClientResultCollection&quot;> </xref>包含在与的映射文件中找到的结果已保存的发现文档。 文件格式是<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile>类序列化为 XML; 但是，一个通常将创建仅使用该文件<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll*>方法或 Disco.exe。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll*> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile>"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.References
  id: References
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: References
  nameWithType: DiscoveryClientProtocol.References
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.References
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "已解析的发现文档中找到的引用集合。"
  remarks: "过程调用中填充引用集合<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>，<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>方法。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 在调用期间<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法，如果提供的 URL 是一个有效的发现文档，该文档添加到以及在发现文档中找到引用的引用集合。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 在调用过程中添加的引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法不一定是有效的发现文档。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 在调用期间<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>引用集合中的引用为有效的发现文档验证。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 如果它们有效，并且包含的引用，它们也添加到引用集合。"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the references in the References property discovered during an XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the references found in an invocation to <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DiscoveryClientProtocol.References#1](~/add/codesnippet/csharp/p-system.web.services.di_13_1.aspx)]\n [!code-vb[DiscoveryClientProtocol.References#1](~/add/codesnippet/visualbasic/p-system.web.services.di_13_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryClientReferenceCollection References { get; }
    return:
      type: System.Web.Services.Discovery.DiscoveryClientReferenceCollection
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryClientReferenceCollection&quot;> </xref>发现的引用。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.References*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll
  id: ResolveAll
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: ResolveAll()
  nameWithType: DiscoveryClientProtocol.ResolveAll()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "解析对发现文档、 XML 架构定义 (XSD) 架构和服务说明中的所有引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References*>属性，以及在引用的发现文档中找到的引用。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References*>"
  remarks: "ResolveAll 解析所有有效的引用，它将找到并将它们放入<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 这两个 ResolveAll 和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>下载和验证 XSD 架构和服务中的描述<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 但是，两个方法的处理发现文档的方式有所不同。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>解析在发现中的文档中的所有引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性; 如果发现文档包含对其他发现文档，引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>都解析仅对这些发现文档。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A></xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 在这些发现文档中找到的发现文档位于下一个未解决级别深层嵌套<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A>; 而 ResolveAll 解析其全部。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> ResolveAll 继续解析嵌套的发现文档中的引用，直到没有更多的引用。       通过 ResolveAll 完成验证过程中发生的错误将不会在匹配项，时引发，而是收集和添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A>"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents in the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> property together with the references found in each document during an XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the results from a <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> invocation followed by a call to ResolveAll.  \n  \n [!code-vb[DiscoveryClientProtocol.ResolveAll#1](~/add/codesnippet/visualbasic/m-system.web.services.di_11_1.aspx)]\n [!code-cs[DiscoveryClientProtocol.ResolveAll#1](~/add/codesnippet/csharp/m-system.web.services.di_11_1.aspx)]"
  syntax:
    content: public void ResolveAll ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel
  id: ResolveOneLevel
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: ResolveOneLevel()
  nameWithType: DiscoveryClientProtocol.ResolveOneLevel()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "解析对发现文档、 XML 架构定义 (XSD) 架构和服务说明中的所有引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References*>，以及这些发现文档中找到的引用。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References*>"
  remarks: "ResolveOneLevel 解析所有有效的引用，它将找到并将它们放入<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 同时<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和 ResolveOneLevel 下载和验证 XSD 架构和服务中的描述<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 但是，两个方法的处理发现文档的方式有所不同。 ResolveOneLevel 解析在发现中的文档中的所有引用<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 如果发现文档包含对其他发现文档引用，ResolveOneLevel 会解析仅对这些发现文档。 在这些发现文档中找到的发现文档位于下一个级别的深度就不解析由 ResolveOneLevel; 嵌套而<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>解决所有这些问题。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>继续解析嵌套的发现文档中的引用，直到没有更多的引用。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>       通过 ResolveOneLevel 完成验证过程中发生的错误将不会在匹配项，时引发，而是收集和添加到<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A>"
  example:
  - "The following code example is a Web Form that populates a <xref:System.Web.UI.WebControls.DataGrid> with the details about the documents in the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> property together with the references found in each document during an XML Web services discovery. The `PopulateGrid` method fills the <xref:System.Web.UI.WebControls.DataGrid> with the results from a <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> invocation followed by a call to ResolveOneLevel.  \n  \n [!code-cs[DiscoveryClientProtocol.ResolveOneLevel#1](~/add/codesnippet/csharp/m-system.web.services.di_20_1.aspx)]\n [!code-vb[DiscoveryClientProtocol.ResolveOneLevel#1](~/add/codesnippet/visualbasic/m-system.web.services.di_20_1.aspx)]"
  syntax:
    content: public void ResolveOneLevel ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)
  id: WriteAll(System.String,System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  langs:
  - csharp
  name: WriteAll(String,String)
  nameWithType: DiscoveryClientProtocol.WriteAll(String,String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(String,String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "将所有发现文档、 XML 架构定义 (XSD) 架构和服务说明中<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*>属性提供的目录并在该目录中创建的文件。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*>"
  remarks: "创建同名的文件`topLevelFilename`directory 参数所指定的目录中的参数包含一个已保存的发现文档、 XML 架构定义 (XSD) 架构和服务说明的映射。 可以使用读取此文件<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A>方法来填充<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A>和<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> </xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A> 文件的格式为 XML 包含序列化的版本的<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile>类。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile>       如果存在具有相同的名称的文件`topLevelFilename`中的参数`directory`WriteAll 方法参数，该文件将被覆盖。 `topLevelFilename`参数必须包含完全限定的路径，如果文件不存在当前目录中。"
  example:
  - "The following code example is a Web Form that writes the results of a Web Services discovery to disk by invoking the WriteAll method after calls to <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>.  \n  \n [!code-cs[DiscoveryClientProtocol.WriteAll#1](~/add/codesnippet/csharp/42b0044c-59b8-4c53-bdfd-_1.aspx)]\n [!code-vb[DiscoveryClientProtocol.WriteAll#1](~/add/codesnippet/visualbasic/42b0044c-59b8-4c53-bdfd-_1.aspx)]"
  syntax:
    content: public System.Web.Services.Discovery.DiscoveryClientResultCollection WriteAll (string directory, string topLevelFilename);
    parameters:
    - id: directory
      type: System.String
      description: "要在其中保存所有文档中当前目录<xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*>属性。</xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*>"
    - id: topLevelFilename
      type: System.String
      description: "要创建或覆盖包含的保存的所有文档的映射的文件的名称。"
    return:
      type: System.Web.Services.Discovery.DiscoveryClientResultCollection
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryClientResultCollection&quot;> </xref>包含结果的所有已保存文件。"
  overload: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.HttpWebClientProtocol
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: DiscoveryClientProtocol()
  nameWithType: DiscoveryClientProtocol.DiscoveryClientProtocol()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientProtocol()
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: AdditionalInformation
  nameWithType: DiscoveryClientProtocol.AdditionalInformation
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Discover(String)
  nameWithType: DiscoveryClientProtocol.Discover(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(String)
- uid: System.Web.Services.Discovery.DiscoveryDocument
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryDocument
  nameWithType: DiscoveryDocument
  fullName: System.Web.Services.Discovery.DiscoveryDocument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: DiscoverAny(String)
  nameWithType: DiscoveryClientProtocol.DiscoverAny(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(String)
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Documents
  nameWithType: DiscoveryClientProtocol.Documents
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents
- uid: System.Web.Services.Discovery.DiscoveryClientDocumentCollection
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryClientDocumentCollection
  nameWithType: DiscoveryClientDocumentCollection
  fullName: System.Web.Services.Discovery.DiscoveryClientDocumentCollection
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Download(String)
  nameWithType: DiscoveryClientProtocol.Download(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Download(String,String)
  nameWithType: DiscoveryClientProtocol.Download(String,String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Download(String,String)
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Errors
  nameWithType: DiscoveryClientProtocol.Errors
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors
- uid: System.Web.Services.Discovery.DiscoveryExceptionDictionary
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryExceptionDictionary
  nameWithType: DiscoveryExceptionDictionary
  fullName: System.Web.Services.Discovery.DiscoveryExceptionDictionary
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: LoadExternals()
  nameWithType: DiscoveryClientProtocol.LoadExternals()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals()
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ReadAll(String)
  nameWithType: DiscoveryClientProtocol.ReadAll(String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(String)
- uid: System.Web.Services.Discovery.DiscoveryClientResultCollection
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryClientResultCollection
  nameWithType: DiscoveryClientResultCollection
  fullName: System.Web.Services.Discovery.DiscoveryClientResultCollection
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.References
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: References
  nameWithType: DiscoveryClientProtocol.References
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.References
- uid: System.Web.Services.Discovery.DiscoveryClientReferenceCollection
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryClientReferenceCollection
  nameWithType: DiscoveryClientReferenceCollection
  fullName: System.Web.Services.Discovery.DiscoveryClientReferenceCollection
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ResolveAll()
  nameWithType: DiscoveryClientProtocol.ResolveAll()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll()
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ResolveOneLevel()
  nameWithType: DiscoveryClientProtocol.ResolveOneLevel()
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel()
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: WriteAll(String,String)
  nameWithType: DiscoveryClientProtocol.WriteAll(String,String)
  fullName: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(String,String)
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: DiscoveryClientProtocol
  nameWithType: DiscoveryClientProtocol.DiscoveryClientProtocol
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: AdditionalInformation
  nameWithType: DiscoveryClientProtocol.AdditionalInformation
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Discover*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Discover
  nameWithType: DiscoveryClientProtocol.Discover
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: DiscoverAny
  nameWithType: DiscoveryClientProtocol.DiscoverAny
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Documents*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Documents
  nameWithType: DiscoveryClientProtocol.Documents
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Download*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Download
  nameWithType: DiscoveryClientProtocol.Download
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.Errors*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: Errors
  nameWithType: DiscoveryClientProtocol.Errors
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: LoadExternals
  nameWithType: DiscoveryClientProtocol.LoadExternals
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ReadAll
  nameWithType: DiscoveryClientProtocol.ReadAll
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.References*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: References
  nameWithType: DiscoveryClientProtocol.References
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ResolveAll
  nameWithType: DiscoveryClientProtocol.ResolveAll
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: ResolveOneLevel
  nameWithType: DiscoveryClientProtocol.ResolveOneLevel
- uid: System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll*
  parent: System.Web.Services.Discovery.DiscoveryClientProtocol
  isExternal: false
  name: WriteAll
  nameWithType: DiscoveryClientProtocol.WriteAll
