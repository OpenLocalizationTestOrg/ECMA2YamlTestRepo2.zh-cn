### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Network
  id: Network
  children:
  - Microsoft.VisualBasic.Devices.Network.#ctor
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.IsAvailable
  - Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  langs:
  - csharp
  name: Network
  nameWithType: Network
  fullName: Microsoft.VisualBasic.Devices.Network
  type: Class
  summary: "提供属性、 事件和在计算机连接的网络进行交互的方法。"
  remarks: "下表列出了所涉及的任务的示例`My.Computer.Network`对象。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|  |请检查连接状态 |[如何︰ 检查连接状态](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to http://www.cohowinery.com/uploads.  \n  \n [!code-vb[VbVbalrMyNetwork#6](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._22_1.vb)]"
  syntax:
    content: public class Network
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Network()
  nameWithType: Network.Network()
  fullName: Microsoft.VisualBasic.Devices.Network.Network()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.Devices.Network&quot;></xref>类。"
  syntax:
    content: public Network ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Network.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  id: DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String)
  nameWithType: Network.DownloadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果目标文件已存在，`DownloadFile`方法将不会覆盖现有文件。 你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件，提供用户凭据，或指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/f1ccbf1b-2381-4658-8df7-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/f1ccbf1b-2381-4658-8df7-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName);
    parameters:
    - id: address
      type: System.String
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  id: DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String)
  nameWithType: Network.DownloadFile(Uri,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果目标文件已存在，`DownloadFile`方法将不会覆盖现有文件。 你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件，提供用户凭据，或指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._82_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._82_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName);
    parameters:
    - id: address
      type: System.Uri
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  id: DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String)
  nameWithType: Network.DownloadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果目标文件已存在，`DownloadFile`方法将不会覆盖现有文件。 你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件或指定一个特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/9d6caabe-e6c4-42e3-85a9-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/9d6caabe-e6c4-42e3-85a9-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.String
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  id: DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String)
  nameWithType: Network.DownloadFile(Uri,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果目标文件已存在，`DownloadFile`方法将不会覆盖现有文件。 你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件或指定一个特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/085dedee-b3d4-4610-bf4e-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/085dedee-b3d4-4610-bf4e-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.Uri
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/7f63c943-2e81-43cf-8bbb-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/7f63c943-2e81-43cf-8bbb-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>or <xref:System.Uri>.</xref:System.Uri> 若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 文件下载的文件的名称和路径。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>.</xref:System.Net.ICredentials> 若要提供的凭据。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/f6f86817-a01c-4747-bacc-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/f6f86817-a01c-4747-bacc-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.String
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "<xref:System.Int32>.</xref:System.Int32> 超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/fa4d33a3-46bb-42b7-9980-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/fa4d33a3-46bb-42b7-9980-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "若要提供的凭据。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定行为，当用户单击**取消**或**否**的结果显示在对话框中`showUI`设置为<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/6c0b06cd-04ce-4a71-bd2c-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/6c0b06cd-04ce-4a71-bd2c-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/e05b4e5f-fc7b-4386-90b2-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/e05b4e5f-fc7b-4386-90b2-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.String
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定行为，当用户单击**取消**或**否**的结果显示在对话框中`ShowUI`设置为<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "下载指定的远程文件并将其保存在指定的位置。"
  remarks: "如果`showUI`设置为`True`，对话框中将显示操作的进度显示; 对话框中包含**取消**可以用于取消该操作的按钮。 对话框不是模式对话框，并因此不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定`connectionTimeout`，将取消该操作，并引发异常。       `DownloadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;>`DownloadFile`方法不会发送可选的 HTTP 标头。 如果可选的用户代理标头缺失，某些服务器可能返回 500 （内部服务器错误）。 若要发送可选标头，你必须构造请求使用<xref:System.Net.WebClient>类。</xref:System.Net.WebClient>      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。      |||  |-|-|  |到 |请参阅 |  |下载的文件 |[如何︰ 下载的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/d9e4433f-9b36-4b25-afa9-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/d9e4433f-9b36-4b25-afa9-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: "若要下载，包括文件名称和主机地址文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "文件下载的文件的名称和路径。"
    - id: userName
      type: System.String
      description: "进行身份验证的用户名。 默认值为空字符串，&quot;&quot;。"
    - id: password
      type: System.String
      description: "进行身份验证的密码。 默认值为空字符串，&quot;&quot;。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "超时间隔，以毫秒为单位。 默认值为 100 秒。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定行为，当用户单击**取消**或**否**的结果显示在对话框中`ShowUI`设置为<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>带尾部反斜杠结尾。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>和目标文件已存在。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  id: IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Microsoft.VisualBasic.Devices.Network.IsAvailable
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指示是否将计算机连接到网络。"
  remarks: "`IsAvailable`始终返回`False`时从调用`Click Once`应用程序或如果用户没有<xref:System.Net.NetworkInformation.NetworkInformationPermission>.</xref:System.Net.NetworkInformation.NetworkInformationPermission>       下表列出了所涉及的任务的示例`My.Computer.Network.IsAvailable`属性。      |||  |-|-|  |到 |请参阅 |  |检查计算机是否连接到网络 |[如何︰ 检查连接状态](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example checks the property's status and reports it.  \n  \n [!code-vb[VbVbalrMyNetwork#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果计算机连接到网络;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "当网络可用性更改时发生。"
  remarks: "应用程序引发的`NetworkAvailabilityChanged`事件每次更改网络的可用性。 你可以使用<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>属性`e`参数，以获取网络连接的新状态。</xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 若要获取的网络连接的当前状态，请使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>       在 Windows 窗体应用程序中，在与其他用户界面事件的应用程序的主线程上引发此事件。 这允许直接访问应用程序的用户界面的事件处理程序。 但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件无法处理直到另一个事件处理程序完成或调<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>       不能使用`Handles`语句来处理`NetworkAvailabilityChanged`事件; 必须使用`AddHandler`语句。       在 Windows 窗体应用程序，`MyApplication`对象将公开`NetworkAvailabilityChanged`提供相同的功能，为此事件，但你的事件可以处理其与`Handles`语句。      1> [!NOTE]&1;> 许多网络中心可提供网络连接，即使中心已断开的大型网络。 因此，对于有线连接，此事件指示计算机和中心之间的连接中的更改。      1> [!NOTE] 1>`NetworkAvailabilityChanged`由在 Windows 95 和 Windows 98 运行的应用程序或非管理员 Windows 2000 运行的应用程序，则不会引发事件。 如果你的应用程序可能在这些平台上运行，使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>"
  example:
  - "This example uses the `My.Computer.Network.NetworkAvailabilityChanged` event to update the user interface of a form or control.  \n  \n This code should to be in a form or control that has a <xref:System.Windows.Forms.Label> named `Label1`.  \n  \n [!code-vb[VbVbalrMyApplication#50](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#50)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  id: Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定的服务器地址执行 ping 操作。"
  remarks: "`Ping`方法不是于防故障的方法，以确定远程计算机的可用性︰ 目标计算机上的 ping 端口可能已关闭，或者可能被防火墙或路由器阻止 ping 请求。       地址传递给`Ping`方法必须是可解析的 DNS，并且不能在前面通过&quot;http://&quot;。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._175_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._175_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "URL、 计算机名称或 IP 数服务器执行 ping 操作。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果该操作成功，则否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "网络连接不可用。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL 无效。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  id: Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定的服务器地址执行 ping 操作。"
  remarks: "`Ping`方法不是于防故障的方法，以确定远程计算机的可用性︰ 目标计算机上的 ping 端口可能已关闭，或者可能被防火墙或路由器阻止 ping 请求。       地址传递给`Ping`方法必须是可解析的 DNS，并且不能在前面通过&quot;http://&quot;。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._188_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._188_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "要成功进行 ping 操作的服务器的 URI。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果该操作成功，则否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "网络连接不可用。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL 无效。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  id: Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String,Int32)
  nameWithType: Network.Ping(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定的服务器地址执行 ping 操作。"
  remarks: "`Ping`方法不是于防故障的方法，以确定远程计算机的可用性︰ 目标计算机上的 ping 端口可能已关闭，或者可能被防火墙或路由器阻止 ping 请求。       地址传递给`Ping`方法必须是可解析的 DNS，并且不能在前面通过&quot;http://&quot;。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._52_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._52_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "URL、 计算机名称或 IP 数服务器执行 ping 操作。"
    - id: timeout
      type: System.Int32
      description: "以毫秒为单位用于联系目标时间阈值。 默认值为 500。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果该操作成功，则否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "网络连接不可用。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL 无效。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  id: Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri,Int32)
  nameWithType: Network.Ping(Uri,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定的服务器地址执行 ping 操作。"
  remarks: "`Ping`方法不是于防故障的方法，以确定远程计算机的可用性︰ 目标计算机上的 ping 端口可能已关闭，或者可能被防火墙或路由器阻止 ping 请求。       地址传递给`Ping`方法必须是可解析的 DNS，并且不能在前面通过&quot;http://&quot;。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._58_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._58_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address, int timeout);
    parameters:
    - id: address
      type: System.Uri
      description: "要成功进行 ping 操作的服务器的 URI。"
    - id: timeout
      type: System.Int32
      description: "以毫秒为单位用于联系目标时间阈值。 默认值为 500。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果该操作成功，则否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "网络连接不可用。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL 无效。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  id: UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String)
  nameWithType: Network.UploadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法以提供用户凭据或指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._92_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._92_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.String
      description: "URL、 IP 地址或目标服务器的 URI。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "源文件路径不是有效的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  id: UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri)
  nameWithType: Network.UploadFile(String,Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法以提供用户凭据或指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._95_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._95_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "源文件路径不是有效的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  id: UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String)
  nameWithType: Network.UploadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法来指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/6b9346bd-59ce-49fb-bbe5-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/6b9346bd-59ce-49fb-bbe5-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.String
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  id: UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String)
  nameWithType: Network.UploadFile(String,Uri,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "你可以使用其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法来指定特定的超时值。</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/85c93b22-8832-465c-bc80-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/85c93b22-8832-465c-bc80-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "在默认的超时 （100 秒） 内，服务器未响应。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/6315816e-6384-43bb-9cc9-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/6315816e-6384-43bb-9cc9-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "身份验证的凭据。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/2326c347-44e4-4a02-8d87-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/2326c347-44e4-4a02-8d87-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.String
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/676d4550-c166-4d1c-9652-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/676d4550-c166-4d1c-9652-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "身份验证的凭据。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "当用户单击时要采取的操作**取消**。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/1d95509f-09cc-470c-a3ef-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/1d95509f-09cc-470c-a3ef-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要显示的操作; 进度否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/096bb453-b6ad-4bb4-84ca-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/096bb453-b6ad-4bb4-84ca-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.String
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: showUI
      type: System.Boolean
      description: "是否显示操作进度。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "当用户单击时要采取的操作**取消**。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "将指定的文件发送到指定的主机地址。"
  remarks: "如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 对话框中不是模式，因为它不会阻止其他程序中窗口的用户输入。       如果服务器未响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。       `My.Computer.Network.UploadFile`当你的应用程序中启用网络跟踪将输出跟踪信息。 有关详细信息，请参阅[启用网络跟踪](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> FTP 协议发送信息，包括纯文本密码，并且不能用于传输敏感信息。       下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。      |||  |-|-|  |到 |请参阅 |  |上载文件 |[如何︰ 将文件上载](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/f6ee17c1-4bbc-483b-bfa5-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/f6ee17c1-4bbc-483b-bfa5-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "路径和要上载文件的名称。"
    - id: address
      type: System.Uri
      description: "URL、 IP 地址或目标服务器的 URI。"
    - id: userName
      type: System.String
      description: '进行身份验证的用户名。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: password
      type: System.String
      description: '进行身份验证的密码。 默认值为空字符串︰ `&quot;&quot;`。'
    - id: showUI
      type: System.Boolean
      description: "是否显示操作进度。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: connectionTimeout
      type: System.Int32
      description: "以毫秒为单位的超时间隔。 默认值为 100 秒。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "当用户单击时要采取的操作**取消**。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>小于或等于零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> 不包括文件名称。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户缺少必要的权限来执行网络操作。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "服务器不响应中指定<code> connectionTimeout </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "目标 web 服务器会拒绝请求。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network()
  nameWithType: Network.Network()
  fullName: Microsoft.VisualBasic.Devices.Network.Network()
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String)
  nameWithType: Network.DownloadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String)
  nameWithType: Network.DownloadFile(Uri,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String)
  nameWithType: Network.DownloadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String)
  nameWithType: Network.DownloadFile(Uri,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Microsoft.VisualBasic.Devices.Network.IsAvailable
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String,Int32)
  nameWithType: Network.Ping(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri,Int32)
  nameWithType: Network.Ping(Uri,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String)
  nameWithType: Network.UploadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri)
  nameWithType: Network.UploadFile(String,Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String)
  nameWithType: Network.UploadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String)
  nameWithType: Network.UploadFile(String,Uri,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.#ctor*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network
  nameWithType: Network.Network
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile
  nameWithType: Network.DownloadFile
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
- uid: Microsoft.VisualBasic.Devices.Network.Ping*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping
  nameWithType: Network.Ping
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile
  nameWithType: Network.UploadFile
