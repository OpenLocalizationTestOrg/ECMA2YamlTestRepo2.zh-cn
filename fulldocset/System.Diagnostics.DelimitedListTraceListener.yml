### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DelimitedListTraceListener
  id: DelimitedListTraceListener
  children:
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.DelimitedListTraceListener.Delimiter
  - System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  langs:
  - csharp
  name: DelimitedListTraceListener
  nameWithType: DelimitedListTraceListener
  fullName: System.Diagnostics.DelimitedListTraceListener
  type: Class
  summary: "将跟踪或调试输出到文本编写器，如流编写器，或流，如文件流的定向。"
  remarks: "跟踪输出，则使用通过指定的分隔符以分隔的文本格式<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性。</xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> 分隔符用于终止输出的行中的每个字段。 例如，若要显示跟踪输出在 Microsoft Excel 电子表格中，你可能指定逗号 （&quot;，&quot;） 作为分隔符并创建一个以逗号分隔值 (CSV) 文件。      1> [!IMPORTANT]&1;><xref:System.IDisposable>接口。</xref:System.IDisposable> 完成后使用类型的操作后，你应释放类型直接或间接。 若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try`/ `catch`块。</xref:System.IDisposable.Dispose%2A> 若要间接释放类型，使用一种语言构造如`using`（在 C# 中) 或`Using`（在 Visual Basic 中)。 有关详细信息，请参阅中的&quot;使用实现 IDisposable 的对象&quot;部分<xref:System.IDisposable>接口主题。</xref:System.IDisposable>       你可以启用或禁用 DelimitedListTraceListener 通过应用程序配置文件，然后使用应用程序中的配置的 DelimitedListTraceListener。 或者，你可以在代码中创建 DelimitedListTraceListener。      1> [!NOTE]&1;> DelimitedListTraceListener 分隔通过使用以单词开头的名称的方法，将发出的文本`Trace`，如<xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName>或<xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>.</xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName> </xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> 跟踪数据发出的使用<xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName>和<xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName>方法不会被分隔。</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName>       若要配置 DelimitedListTraceListener，编辑你的应用程序的名称对应的配置文件。 在此文件中，你可以添加侦听器、 侦听器设置的属性或删除侦听器。 应按照下面的示例所示格式设置的配置文件︰ ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;,&quot;              initializeData=&quot;delimitedOutput.csv&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```       >  [!NOTE]&1;> 如果尝试写入到正在使用的文件或不可用，文件名自动的前缀的 guid。      1> [!NOTE]&1;> 侦听器旨在由方法的使用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪信息。</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> 侦听器方法，除了构造函数，不应直接从应用程序代码调用。"
  syntax:
    content: 'public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(Stream)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>写入指定的输出流的类。"
  remarks: "此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 (&quot;&quot;)。</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>接收输出。</xref:System.IO.Stream>"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(TextWriter)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>将写入指定的文本编写器的类。"
  remarks: "此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 (&quot;&quot;)。</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>接收输出。</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>写入指定的文件的类。"
  remarks: "此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 (&quot;&quot;)。</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "要接收输出的文件的名称。"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(Stream,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>写入指定的输出流，并具有指定的名称的类。"
  remarks: "此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性的值`name`参数，或为空字符串 (&quot;&quot;) 如果`name`参数是`null`。</xref:System.Diagnostics.TraceListener.Name%2A>  <xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</xref:System.Diagnostics.TraceListener.Name%2A> 例如，下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例的属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称&quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>接收输出。</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "跟踪侦听器的新实例的名称。"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(TextWriter,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>写入指定的文本编写器，并具有指定的名称的类。"
  remarks: "此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性的值`name`参数，或为空字符串 (&quot;&quot;) 如果`name`参数是`null`。</xref:System.Diagnostics.TraceListener.Name%2A> <xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</xref:System.Diagnostics.TraceListener.Name%2A> 如下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例的属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称&quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>接收输出。</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "跟踪侦听器的新实例的名称。"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(String,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;></xref>写入指定的文件，并具有指定的名称的类。"
  remarks: "此构造函数初始化的新实例<xref:System.IO.StreamWriter>类指定的文件，指定路径上使用<xref:System.Text.Encoding.UTF8%2A>编码。</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> 如果该文件存在，则会附加到。 如果文件不存在，则创建一个新文件。      1> [!NOTE]&1;> 以减少可能出现异常，可能导致无效输出所有字符均都替换&quot;？&quot;字符。       <xref:System.Diagnostics.TraceListener.Name%2A>属性设置为的值`name`参数，或为空字符串 (&quot;&quot;) 如果`name`参数是`null`。</xref:System.Diagnostics.TraceListener.Name%2A> <xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</xref:System.Diagnostics.TraceListener.Name%2A> 例如，下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例的属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称&quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "要接收输出的文件的名称。"
    - id: name
      type: System.String
      description: "跟踪侦听器的新实例的名称。"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置的分隔列表的分隔符。"
  remarks: "默认分隔符是&quot;;&quot;（分号）。 下面的配置文件示例演示的分隔符属性使用设置`delimiter`配置文件中的属性︰```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;:&quot;              initializeData=&quot;delimitedOutput.txt&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>      ```"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "有关分隔的列表分隔符。"
  overload: System.Diagnostics.DelimitedListTraceListener.Delimiter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "分隔符设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "分隔符设置为空字符串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "返回分隔的跟踪侦听器支持的自定义配置文件属性。"
  remarks: "自定义特性是不从可以用来设置类的属性的基类继承的属性。 自定义属性<xref:System.Diagnostics.DelimitedListTraceListener>用于设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性。</xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> </xref:System.Diagnostics.DelimitedListTraceListener> 下面的配置文件示例演示了利用`delimiter`要设置属性<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性︰ ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;:&quot;              initializeData=&quot;delimitedOutput.txt&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ``` </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "一个字符串数组，包含单个值&quot;分隔符&quot;。"
  overload: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "写入跟踪信息、 数据对象和事件信息写入输出文件或流。"
  remarks: "值`source`， `eventType`，和`id`参数都被编写为一个标头。 数据对象转换为字符串使用`ToString`对象的方法。 `eventCache`数据写入其内容取决于值页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      1> [!IMPORTANT]&1;><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> 方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类将跟踪数据写入。</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。"
    - id: source
      type: System.String
      description: "用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "之一<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>指定引发跟踪的事件的类型的值。"
    - id: id
      type: System.Int32
      description: "事件的数值标识符。"
    - id: data
      type: System.Object
      description: "用于写入输出文件或流的数据对象。"
  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "写入跟踪信息、 数据对象和事件信息写入输出文件或流的数组。"
  remarks: "值`source`， `eventType`，和`id`参数都被编写为一个标头。 数据对象将转换为字符串使用`ToString`每个对象的方法。 `eventCache`数据写入其内容取决于值页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      1> [!IMPORTANT]&1;><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> 方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类将跟踪数据写入。</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。"
    - id: source
      type: System.String
      description: "用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "之一<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>指定引发跟踪的事件的类型的值。"
    - id: id
      type: System.Int32
      description: "事件的数值标识符。"
    - id: data
      type: System.Object[]
      description: "要写入到输出文件或流的数据对象的数组。"
  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "写入跟踪信息、 消息和事件信息写入输出文件或流。"
  remarks: "值`source`， `eventType`，和`id`参数都被编写为标头后, 跟`message`数据。 `eventCache`数据写入其内容取决于值页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      1> [!IMPORTANT]&1;><xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> 方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类将跟踪数据写入。</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。"
    - id: source
      type: System.String
      description: "用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "之一<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>指定引发跟踪的事件的类型的值。"
    - id: id
      type: System.Int32
      description: "事件的数值标识符。"
    - id: message
      type: System.String
      description: "要写入的输出文件或流的跟踪消息。"
  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "写入跟踪信息、 格式化的对象和事件信息写入输出文件或流的数组。"
  remarks: "The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。"
    - id: source
      type: System.String
      description: "用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "之一<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>指定引发跟踪的事件的类型的值。"
    - id: id
      type: System.Int32
      description: "事件的数值标识符。"
    - id: format
      type: System.String
      description: "包含零个或多个格式项中的对象对应一个格式字符串`args`数组。"
    - id: args
      type: System.Object[]
      description: "包含零个或多个要格式化的对象的数组。"
  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(Stream)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(TextWriter)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(Stream,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(TextWriter,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(String,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData
  nameWithType: DelimitedListTraceListener.TraceData
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: DelimitedListTraceListener.TraceEvent
