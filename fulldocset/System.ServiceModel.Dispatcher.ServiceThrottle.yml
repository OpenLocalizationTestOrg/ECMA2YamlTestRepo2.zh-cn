### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  id: ServiceThrottle
  children:
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
  type: Class
  summary: "控制服务以优化可用性和性能的吞吐量。"
  remarks: "使用 ServiceThrottle 优化服务的性能特征。 最简单的方法为某个服务是使用配置 ServiceThrottle <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>，尤其是从应用程序配置文件。</xref:System.ServiceModel.Description.ServiceThrottlingBehavior>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A>属性指定的最大活动处理中的所有调度程序对象的消息数<xref:System.ServiceModel.ServiceHost>对象。</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A>属性指定的最大数<xref:System.ServiceModel.InstanceContext>服务中的对象。</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A>属性指定的最大会话数<xref:System.ServiceModel.ServiceHost>可以接受。</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A>      1> [!NOTE]&1;> 则写入一个跟踪第一次调用， <xref:System.ServiceModel.InstanceContext>，或在被插入等待队列上排队会话。</xref:System.ServiceModel.InstanceContext> 第一个跟踪记录为警告。"
  example:
  - "The following code example shows the typical use of the ServiceThrottle by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class ServiceThrottle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  id: MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "获取或设置最大活动处理中的所有调度程序对象的消息数<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref>。"
  remarks: "MaxConcurrentCalls 属性指定的最大活动处理中的所有调度程序对象的消息数<xref:System.ServiceModel.ServiceHost>对象。</xref:System.ServiceModel.ServiceHost> 每个通道都可以有一个挂起消息不会影响直到 MaxConcurrentCalls 的值[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]开始对其进行处理。      1> [!NOTE]&1;> 此属性的值超出限制一次，则写入一个跟踪。"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentCalls { get; set; }
    return:
      type: System.Int32
      description: "在服务中的活动消息的上限。 默认值为 16 * 的计算机中的处理器数目。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  id: MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "获取或设置一次可执行的服务对象的最大数目。"
  remarks: "MaxConcurrentInstances 属性指定的最大数目<xref:System.ServiceModel.InstanceContext>服务中的对象。</xref:System.ServiceModel.InstanceContext> 务必要记住的 MaxConcurrentInstances 属性之间的关系和<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>属性。</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>是<xref:System.ServiceModel.InstanceContextMode>生成的值为总会话数。</xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>是<xref:System.ServiceModel.InstanceContextMode>，生成的值是并发调用数。</xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果消息到达时的最大数<xref:System.ServiceModel.InstanceContext>对象已经存在，直到保存该消息<xref:System.ServiceModel.InstanceContext>对象关闭。</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>      1> [!NOTE]&1;> 此属性的值超出限制一次，则写入一个跟踪。 第一个跟踪记录为警告。"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentInstances { get; set; }
    return:
      type: System.Int32
      description: "最大数<xref:System.ServiceModel.InstanceContext>服务一次中的对象。</xref:System.ServiceModel.InstanceContext> 默认值是最大并发调用 + 最大并发会话。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  id: MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "获取或设置一个值，指定最大会话数<xref href=&quot;System.ServiceModel.ServiceHost&quot;></xref>对象可以接受一次。"
  remarks: "MaxConcurrentSessions 属性指定的最大通道数<xref:System.ServiceModel.ServiceHost>可以接受。</xref:System.ServiceModel.ServiceHost> 每个侦听器对象都可以有一个挂起通道不会影响 MaxConcurrentSessions 之前的值[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]接受该通道并开始处理其中的消息。 此属性是最有用中进行的方案使用的会话。      1> [!NOTE]&1;> 此属性的值超出限制一次，则写入一个跟踪。 第一个跟踪记录为警告。       有关会话的详细信息，请参阅[使用会话](~/add/includes/ajax-current-ext-md.md)。       通常情况下，使用设置此属性<xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName>属性。</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentSessions { get; set; }
    return:
      type: System.Int32
      description: "最大服务主机可接受的会话数。 默认值为 100 * 的计算机中的处理器数目。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
