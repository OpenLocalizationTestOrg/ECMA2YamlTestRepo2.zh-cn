### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.IFormatter
  id: IFormatter
  children:
  - System.Runtime.Serialization.IFormatter.Binder
  - System.Runtime.Serialization.IFormatter.Context
  - System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)
  - System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)
  - System.Runtime.Serialization.IFormatter.SurrogateSelector
  langs:
  - csharp
  name: IFormatter
  nameWithType: IFormatter
  fullName: System.Runtime.Serialization.IFormatter
  type: Interface
  summary: "提供格式设置的序列化对象功能。"
  remarks: "标识为中的格式化程序的任何类必须实现此接口<xref:System.Runtime.Serialization>体系结构。</xref:System.Runtime.Serialization>       对象控制它们自己的序列化可以做到这一点实现<xref:System.Runtime.Serialization.ISerializable>接口。</xref:System.Runtime.Serialization.ISerializable> 按对象要序列化的顺序，你必须将标记为可序列化该对象。 你可以将可序列化特性应用于一个类来执行此操作。 如果关系图中的任何对象不是可序列化的无法序列化。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IFormatter
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IFormatter.Binder
  id: Binder
  parent: System.Runtime.Serialization.IFormatter
  langs:
  - csharp
  name: Binder
  nameWithType: IFormatter.Binder
  fullName: System.Runtime.Serialization.IFormatter.Binder
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取或设置<xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;></xref>在反序列化过程中执行类型查找。"
  remarks: "在尝试从编码流上的信息的类型解析，格式化程序调用<xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A>的时间为<xref:System.Runtime.Serialization.SerializationBinder>。</xref:System.Runtime.Serialization.SerializationBinder>方法</xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A> 此方法会解析到这些参数<xref:System.Type>对象。</xref:System.Type> 联编程序可以查找<xref:System.Type>在位于不同的程序集中，比它在序列化时的反序列化时。</xref:System.Type>       设置此属性在序列化过程中已不起作用。"
  syntax:
    content: public System.Runtime.Serialization.SerializationBinder Binder { get; set; }
    return:
      type: System.Runtime.Serialization.SerializationBinder
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref>在反序列化过程中执行类型查找。"
  overload: System.Runtime.Serialization.IFormatter.Binder*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IFormatter.Context
  id: Context
  parent: System.Runtime.Serialization.IFormatter
  langs:
  - csharp
  name: Context
  nameWithType: IFormatter.Context
  fullName: System.Runtime.Serialization.IFormatter.Context
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取或设置<xref:System.Runtime.Serialization.StreamingContext>用于序列化和反序列化。</xref:System.Runtime.Serialization.StreamingContext>"
  remarks: "此属性的值传递到实现<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Runtime.Serialization.ISerializationSurrogate>.</xref:System.Runtime.Serialization.ISerializationSurrogate></xref:System.Runtime.Serialization.ISerializable>任何对象 <xref:System.Runtime.Serialization.StreamingContext>指示 （在期间序列化） 目标或 （反序列化） 期间的数据源。</xref:System.Runtime.Serialization.StreamingContext> 一个对象，实现<xref:System.Runtime.Serialization.ISerializable>可以更改它的方式传输具体取决于上下文的值的数据。</xref:System.Runtime.Serialization.ISerializable>"
  syntax:
    content: public System.Runtime.Serialization.StreamingContext Context { get; set; }
    return:
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>用于序列化和反序列化。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.Serialization.IFormatter.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: System.Runtime.Serialization.IFormatter
  langs:
  - csharp
  name: Deserialize(Stream)
  nameWithType: IFormatter.Deserialize(Stream)
  fullName: System.Runtime.Serialization.IFormatter.Deserialize(Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "反序列化上提供的流的数据并将重组的对象的图。"
  remarks: "反序列化方法从流中读取 graph 信息和重新构造的原始关系图的克隆。 保留的关系图的拓扑。       反序列化过程分配适当类型的空对象，并重新填充以传输的数据从其字段`serializationStream`流。 请务必注意，没有构造函数是曾在对象上调用反序列化期间。"
  syntax:
    content: public object Deserialize (System.IO.Stream serializationStream);
    parameters:
    - id: serializationStream
      type: System.IO.Stream
      description: "包含要反序列化的数据的流。"
    return:
      type: System.Object
      description: "反序列化的关系图的顶级对象。"
  overload: System.Runtime.Serialization.IFormatter.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)
  id: Serialize(System.IO.Stream,System.Object)
  parent: System.Runtime.Serialization.IFormatter
  langs:
  - csharp
  name: Serialize(Stream,Object)
  nameWithType: IFormatter.Serialize(Stream,Object)
  fullName: System.Runtime.Serialization.IFormatter.Serialize(Stream,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "序列化对象或与所提供的流到给定的根对象图。"
  remarks: "Serialize 方法自动序列化所提供的对象和所有对象都连接到它，提供的流。       默认情况下，序列化过程中收集所有其字段 （公共和私有） 的值记录对象的状态。 这些字段将保存到流以及如由其类型的程序集限定的名称的对象有关的信息。"
  syntax:
    content: public void Serialize (System.IO.Stream serializationStream, object graph);
    parameters:
    - id: serializationStream
      type: System.IO.Stream
      description: "其中格式化程序放入序列化的数据的流。 此流可以引用各种后备存储 （如文件、 网络、 内存和等等）。"
    - id: graph
      type: System.Object
      description: "对象或要序列化的对象图的根。 将自动序列化此根对象的所有子对象。"
  overload: System.Runtime.Serialization.IFormatter.Serialize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IFormatter.SurrogateSelector
  id: SurrogateSelector
  parent: System.Runtime.Serialization.IFormatter
  langs:
  - csharp
  name: SurrogateSelector
  nameWithType: IFormatter.SurrogateSelector
  fullName: System.Runtime.Serialization.IFormatter.SurrogateSelector
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取或设置<xref href=&quot;System.Runtime.Serialization.SurrogateSelector&quot;></xref>当前格式化程序使用。"
  remarks: "A<xref:System.Runtime.Serialization.ISerializationSurrogate>允许用户指定的对象最佳适用于处理特定对象或对象的类的序列化。</xref:System.Runtime.Serialization.ISerializationSurrogate> 它看作的实现<xref:System.Runtime.Serialization.ISerializable>但提供由不同对象。</xref:System.Runtime.Serialization.ISerializable>"
  syntax:
    content: public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "<xref href=&quot;System.Runtime.Serialization.SurrogateSelector&quot;> </xref>格式化程序所使用。"
  overload: System.Runtime.Serialization.IFormatter.SurrogateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.IFormatter.Binder
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Binder
  nameWithType: IFormatter.Binder
  fullName: System.Runtime.Serialization.IFormatter.Binder
- uid: System.Runtime.Serialization.SerializationBinder
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
- uid: System.Runtime.Serialization.IFormatter.Context
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Context
  nameWithType: IFormatter.Context
  fullName: System.Runtime.Serialization.IFormatter.Context
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Deserialize(Stream)
  nameWithType: IFormatter.Deserialize(Stream)
  fullName: System.Runtime.Serialization.IFormatter.Deserialize(Stream)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Serialize(Stream,Object)
  nameWithType: IFormatter.Serialize(Stream,Object)
  fullName: System.Runtime.Serialization.IFormatter.Serialize(Stream,Object)
- uid: System.Runtime.Serialization.IFormatter.SurrogateSelector
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: SurrogateSelector
  nameWithType: IFormatter.SurrogateSelector
  fullName: System.Runtime.Serialization.IFormatter.SurrogateSelector
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.IFormatter.Binder*
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Binder
  nameWithType: IFormatter.Binder
- uid: System.Runtime.Serialization.IFormatter.Context*
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Context
  nameWithType: IFormatter.Context
- uid: System.Runtime.Serialization.IFormatter.Deserialize*
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Deserialize
  nameWithType: IFormatter.Deserialize
- uid: System.Runtime.Serialization.IFormatter.Serialize*
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: Serialize
  nameWithType: IFormatter.Serialize
- uid: System.Runtime.Serialization.IFormatter.SurrogateSelector*
  parent: System.Runtime.Serialization.IFormatter
  isExternal: false
  name: SurrogateSelector
  nameWithType: IFormatter.SurrogateSelector
