### YamlMime:ManagedReference
items:
- uid: System.Windows.EventRoute
  id: EventRoute
  children:
  - System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  - System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  - System.Windows.EventRoute.PeekBranchNode
  - System.Windows.EventRoute.PeekBranchSource
  - System.Windows.EventRoute.PopBranchNode
  - System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  langs:
  - csharp
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
  type: Class
  summary: "表示要跟路由事件的路由的容器。"
  remarks: "此类对应于一个有效<xref:System.Windows.RoutedEvent>，并包含目标对象和处理程序的列表对该事件的事件路由到引用的排序的列表。</xref:System.Windows.RoutedEvent> EventRoute 支持将新条目添加到列表，还允许列表中的处理程序调用。       用于添加处理程序的最正常操作[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]事件不需要使用此类 (例如，使用<xref:System.Windows.EventManager>方法来添加类处理或查询现有的事件的处理程序)。</xref:System.Windows.EventManager> 当元素具有特定知识有关子元素或使其实际将元素添加到或从默认计算的事件路由中移除元素的父元素时，此类是主要用于使用。"
  syntax:
    content: public sealed class EventRoute
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: EventRoute(RoutedEvent)
  nameWithType: EventRoute.EventRoute(RoutedEvent)
  fullName: System.Windows.EventRoute.EventRoute(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的实例<xref href=&quot;System.Windows.EventRoute&quot;></xref>类。"
  syntax:
    content: public EventRoute (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "为要与此事件路由关联的非 NULL 事件标识符。"
  overload: System.Windows.EventRoute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  id: Add(System.Object,System.Delegate,System.Boolean)
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: Add(Object,Delegate,Boolean)
  nameWithType: EventRoute.Add(Object,Delegate,Boolean)
  fullName: System.Windows.EventRoute.Add(Object,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "将指定的处理程序为指定目标添加到路由。"
  remarks: "它不是错误两次添加的处理程序的特定目标实例。 在这种情况下，将两次调用处理程序。"
  syntax:
    content: public void Add (object target, Delegate handler, bool handledEventsToo);
    parameters:
    - id: target
      type: System.Object
      description: "指定其中的处理程序添加到路由的目标对象。"
    - id: handler
      type: System.Delegate
      description: "指定要添加到路由处理程序。"
    - id: handledEventsToo
      type: System.Boolean
      description: "指示侦听器检测到已处理的事件。"
  overload: System.Windows.EventRoute.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PeekBranchNode
  id: PeekBranchNode
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PeekBranchNode()
  nameWithType: EventRoute.PeekBranchNode()
  fullName: System.Windows.EventRoute.PeekBranchNode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "在这两个逻辑树分叉事件路由堆栈上返回的最顶层的元素。"
  syntax:
    content: public object PeekBranchNode ();
    parameters: []
    return:
      type: System.Object
      description: "对两个逻辑树和的不同的事件路由堆栈的最顶层元素。"
  overload: System.Windows.EventRoute.PeekBranchNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PeekBranchSource
  id: PeekBranchSource
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PeekBranchSource()
  nameWithType: EventRoute.PeekBranchSource()
  fullName: System.Windows.EventRoute.PeekBranchSource()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "在这两个逻辑树分叉事件路由堆栈上返回的最顶层的元素的源。"
  syntax:
    content: public object PeekBranchSource ();
    parameters: []
    return:
      type: System.Object
      description: "用于在两个逻辑树和的不同的事件路由堆栈上的最顶层的元素的源。"
  overload: System.Windows.EventRoute.PeekBranchSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PopBranchNode
  id: PopBranchNode
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PopBranchNode()
  nameWithType: EventRoute.PopBranchNode()
  fullName: System.Windows.EventRoute.PopBranchNode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "在这两个逻辑树分叉事件路由堆栈上返回的最顶层节点。"
  syntax:
    content: public object PopBranchNode ();
    parameters: []
    return:
      type: System.Object
      description: "在这两个逻辑树分叉事件路由堆栈上的最顶层节点。"
  overload: System.Windows.EventRoute.PopBranchNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  id: PushBranchNode(System.Object,System.Object)
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PushBranchNode(Object,Object)
  nameWithType: EventRoute.PushBranchNode(Object,Object)
  fullName: System.Windows.EventRoute.PushBranchNode(Object,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "将最顶层节点添加到两个逻辑树和的不同的事件路由堆栈。"
  syntax:
    content: public void PushBranchNode (object node, object source);
    parameters:
    - id: node
      type: System.Object
      description: "对两个逻辑树和的不同的事件路由堆栈的最顶层元素。"
    - id: source
      type: System.Object
      description: "用于在两个逻辑树和的不同的事件路由堆栈上的最顶层的元素的源。"
  overload: System.Windows.EventRoute.PushBranchNode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.EventRoute
  isExternal: false
  name: EventRoute(RoutedEvent)
  nameWithType: EventRoute.EventRoute(RoutedEvent)
  fullName: System.Windows.EventRoute.EventRoute(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  parent: System.Windows.EventRoute
  isExternal: false
  name: Add(Object,Delegate,Boolean)
  nameWithType: EventRoute.Add(Object,Delegate,Boolean)
  fullName: System.Windows.EventRoute.Add(Object,Delegate,Boolean)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventRoute.PeekBranchNode
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchNode()
  nameWithType: EventRoute.PeekBranchNode()
  fullName: System.Windows.EventRoute.PeekBranchNode()
- uid: System.Windows.EventRoute.PeekBranchSource
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchSource()
  nameWithType: EventRoute.PeekBranchSource()
  fullName: System.Windows.EventRoute.PeekBranchSource()
- uid: System.Windows.EventRoute.PopBranchNode
  parent: System.Windows.EventRoute
  isExternal: false
  name: PopBranchNode()
  nameWithType: EventRoute.PopBranchNode()
  fullName: System.Windows.EventRoute.PopBranchNode()
- uid: System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  parent: System.Windows.EventRoute
  isExternal: false
  name: PushBranchNode(Object,Object)
  nameWithType: EventRoute.PushBranchNode(Object,Object)
  fullName: System.Windows.EventRoute.PushBranchNode(Object,Object)
- uid: System.Windows.EventRoute.#ctor*
  parent: System.Windows.EventRoute
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute.EventRoute
- uid: System.Windows.EventRoute.Add*
  parent: System.Windows.EventRoute
  isExternal: false
  name: Add
  nameWithType: EventRoute.Add
- uid: System.Windows.EventRoute.PeekBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchNode
  nameWithType: EventRoute.PeekBranchNode
- uid: System.Windows.EventRoute.PeekBranchSource*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchSource
  nameWithType: EventRoute.PeekBranchSource
- uid: System.Windows.EventRoute.PopBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PopBranchNode
  nameWithType: EventRoute.PopBranchNode
- uid: System.Windows.EventRoute.PushBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PushBranchNode
  nameWithType: EventRoute.PushBranchNode
