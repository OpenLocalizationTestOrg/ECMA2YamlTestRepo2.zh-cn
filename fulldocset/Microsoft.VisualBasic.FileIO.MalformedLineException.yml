### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  id: MalformedLineException
  children:
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  - Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  langs:
  - csharp
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
  type: Class
  summary: "时，将引发的异常<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*>方法无法分析行使用指定的格式。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*>"
  remarks: "检查以确保`TextFieldType`和`Delimiter`参数定义是正确的。       如果<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>方法无法分析行使用指定的格式，则会引发 MalformedLineException 异常。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> 该异常包含格式不正确的行的行号。"
  syntax:
    content: 'public class MalformedLineException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException()
  nameWithType: MalformedLineException.MalformedLineException()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>类。"
  remarks: "异常表示<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>方法无法分析行使用指定的格式。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>       下表显示<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException>实例的初始属性的值      |||  |-|-|  |属性 |值 |  |<xref:System.Exception.InnerException%2A>|空引用 (`Nothing`在 Visual Basic 中)。 |  |<xref:System.Exception.Message%2A>|本地化的错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String)
  nameWithType: MalformedLineException.MalformedLineException(String)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>与指定的错误消息的类。"
  remarks: "内容`message`参数旨在为人所理解。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。       <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>继承<xref:System.Exception>类。</xref:System.Exception></xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 此构造函数设置的属性<xref:System.Exception>对象下表中所示。</xref:System.Exception>      |||  |-|-|  |属性 |值 |  |<xref:System.Exception.InnerException%2A>|空引用 (`Nothing`在 Visual Basic 中) |  |<xref:System.Exception.Message%2A>|`message`字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message);
    parameters:
    - id: message
      type: System.String
      description: "描述错误的消息。"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>用序列化数据的类。"
  remarks: "在反序列化，以便重建通过流传输的异常对象过程中调用此构造函数。"
  syntax:
    content: protected MalformedLineException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>保存关于所引发异常的序列化的对象数据的对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>包含有关源或目标的上下文信息的结构。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Exception)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>使用指定的错误消息和对导致此异常的内部异常的引用的类。"
  remarks: "内容`message`参数旨在为人所理解。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。       前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回的相同值，如果传递到构造函数中，则为空引用<xref:System.Exception.InnerException%2A>属性不会提供给构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表显示<xref:System.ApplicationException>.</xref:System.ApplicationException>实例的初始属性的值      |||  |-|-|  |属性 |值 |  |<xref:System.Exception.InnerException%2A>|`innerException`引用。 |  |<xref:System.Exception.Message%2A>|`message`字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "A<xref:System.String>对错误进行描述。</xref:System.String>"
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception>导致当前异常的对象。</xref:System.Exception> 如果<xref:System.Exception.InnerException*>参数不是 null 引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，处理内部异常的 catch 块中引发当前异常。</xref:System.Exception.InnerException*>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  id: '#ctor(System.String,System.Int64)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Int64)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>使用指定的错误消息和行号的类。"
  remarks: "内容`message`参数旨在为人所理解。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。 `lineNumber`参数初始化<xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>属性。</xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>       <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>继承自<xref:System.Exception>.</xref:System.Exception></xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 此构造函数设置的属性<xref:System.Exception>对象下表中所示。</xref:System.Exception>      |||  |-|-|  |属性 |值 |  |<xref:System.Exception.InnerException%2A>|空引用 (`Nothing`在 Visual Basic 中) |  |<xref:System.Exception.Message%2A>|`message`字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, long lineNumber);
    parameters:
    - id: message
      type: System.String
      description: "异常消息。"
    - id: lineNumber
      type: System.Int64
      description: "格式不正确的行的行号。"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  id: '#ctor(System.String,System.Int64,System.Exception)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Int64,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64,Exception)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;></xref>用指定的错误消息、 行号和对导致此异常的内部异常的引用。"
  remarks: "内容`message`参数旨在为人所理解。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。 `lineNumber`参数初始化<xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>属性。</xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>       前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回的相同值，如果传递到构造函数中，则为空引用<xref:System.Exception.InnerException%2A>属性不会提供给构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表显示<xref:System.ApplicationException>.</xref:System.ApplicationException>实例的初始属性的值      |||  |-|-|  |属性 |值 |  |<xref:System.Exception.InnerException%2A>|`innerException`引用。 |  |<xref:System.Exception.Message%2A>|`message`字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, long lineNumber, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "异常消息。"
    - id: lineNumber
      type: System.Int64
      description: "格式不正确的行的行号。"
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception>导致当前异常。</xref:System.Exception> 如果<xref:System.Exception.InnerException*>参数不是 null 引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，处理内部异常的 catch 块中引发当前异常。</xref:System.Exception.InnerException*>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "集<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>包含有关异常的信息的对象。"
  remarks: "此方法会设置<xref:System.Runtime.Serialization.SerializationInfo>用针对于序列化的所有异常对象数据的对象。</xref:System.Runtime.Serialization.SerializationInfo> 在反序列化期间重建异常从<xref:System.Runtime.Serialization.SerializationInfo>通过流传输。</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>保存关于所引发异常的序列化的对象数据的对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>包含有关源或目标的上下文信息的结构。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  id: LineNumber
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "获取格式不正确的行的行号。"
  remarks: "如果<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>方法无法分析使用指定的格式，行<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>引发异常。</xref:Microsoft.VisualBasic.FileIO.MalformedLineException> </xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> 该异常包含格式不正确的行的行号。"
  syntax:
    content: public long LineNumber { get; set; }
    return:
      type: System.Int64
      description: "格式不正确的行的行号。"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  id: ToString
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: ToString()
  nameWithType: MalformedLineException.ToString()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "创建并返回当前异常的字符串表示。"
  remarks: "ToString 返回当前异常，但应为人所理解的表示形式。 当该异常包含区分区域性的数据，ToString 返回的字符串表示形式时需要考虑当前系统区域性。 虽然没有返回字符串的确切要求的格式，它应尝试反映为从用户的角度对象的值。       ToString 的默认实现获取引发当前异常、 消息、 内部异常，调用的结果调用 ToString 的结果的类名称<xref:System.Environment.StackTrace%2A>，以及如果任何这些成员为空引用的格式不正确的行的行号 (`Nothing`在 Visual Basic 中)，其值不包括在返回的字符串。</xref:System.Environment.StackTrace%2A>       如果没有任何错误消息，或如果它是空字符串 (&quot;&quot;)，则不返回任何错误消息。 只有当它们不是 null 引用时，才会返回内部异常和堆栈跟踪的名称 (`Nothing`在 Visual Basic 中)。       此方法将替代<xref:System.Exception.ToString%2A?displayProperty=fullName>.</xref:System.Exception.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "当前异常的字符串表示形式。"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException()
  nameWithType: MalformedLineException.MalformedLineException()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException()
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String)
  nameWithType: MalformedLineException.MalformedLineException(String)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Exception)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Int64)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Int64,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64,Exception)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: ToString()
  nameWithType: MalformedLineException.ToString()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString()
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException.MalformedLineException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: GetObjectData
  nameWithType: MalformedLineException.GetObjectData
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: ToString
  nameWithType: MalformedLineException.ToString
