### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "指定定义对等 PeerName 对象的值。 对等机名称通常是用于标识对等资源的字符串。"
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "初始化类型的新对象<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>与提供的完全限定的对等名称<xref:System.String>值。</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "包含对等机名称可将编码为<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>实例。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>对象序列化所需的数据<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "此构造函数是必需的反序列化此类型。"
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "对承载要反序列化此实例所需的数据的对象的引用。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "提供了一种用于反序列化数据的上下文。 也称为序列化的数据源。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或多个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "初始化的新实例<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>类。"
  remarks: "此构造函数返回类型的对象<xref:System.Net.PeerToPeer.PeerName>，其中包含对等方的完全限定的名称。</xref:System.Net.PeerToPeer.PeerName> 它还指定是否是保护对等机名称或不被保护。       此实例使用适用于当前用户和指定默认对等标识<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>，除了对等名称来创建具有指定的分类器和类型的类型。</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>包含对等机名称可将编码为<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>指定要创建的对等名称的类型的枚举值。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>包括一个或多个非法字符。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或多个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-使用作为的基础的默认标识<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>无法检索。      - <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>无法创建。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "返回一个字符串，指定使用的颁发机构<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
  remarks: "只有所有者或对等主机，可以注册一个安全的对等名称。 对等名称被视为保护如果它支持自签名证书。       对等名称区分大小写，对等机名称的格式为︰*颁发*。 例如，&quot;0.MyPeerName&quot;是格式正确的对等名称。"
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "字符串包含指定的身份验证部分<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。 有关安全的对等名称，此属性包含&40; 个字符的十六进制字符串形式的公钥。 对于不安全的对等名称，此属性设置为零 (0)。"
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "返回一个字符串，包含有关对等的分类器<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "字符串包含用于标识的对等名称的分类器部分<xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;></xref>或 PNRP 解析<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>。       除非显式指定，所有属性的默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>为引用类型和零 (0) 的属性的类型<xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "创建指定的新实例<xref:System.Net.PeerToPeer.PeerName.PeerHostName*>具有指定的对等主机名称的对象。</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "对等主机是&quot;种子节点&quot;负责启动对等网络会话，邀请对等方参与此类型的网络连接是最适合于如聊天组或游戏会话的通信的应用程序。       此方法可以用于创建<xref:System.Net.PeerToPeer.PeerName>对象基于<xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>属性。</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> 此对等名称不是节点的与调用的标识关联的。"
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "包含 DNS 限定的主机名的字符串。"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>对象，表示指定的对等主机名。"
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效的对等主机名称字符串。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>无法创建从提供<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "创建一个新<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>通过替换<xref:System.Net.PeerToPeer.PeerName.Classifier*>上提供定义的字段<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>与指定的分类器字符串值的对象。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>追加到现有<xref:System.Net.PeerToPeer.PeerName.Authority%2A>的<xref:System.Net.PeerToPeer.PeerName>。</xref:System.Net.PeerToPeer.PeerName>部分</xref:System.Net.PeerToPeer.PeerName.Authority%2A></xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 此字符串长度不超过 149 个字符，包括`null`终止符。 指定`null`要返回的标识的对等名称。"
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>在其上设置新的分类器字符串值的对象。"
    - id: classifier
      type: System.String
      description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>设置对返回<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "新<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>包含更新的分类器的对象。"
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效的对等名称分类器。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或多个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>无法创建从提供<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "执行当前的区分大小写比较<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>和指定的对等名称。"
  remarks: "这两个对等名称被视为相等它们包含中的相同字符其<xref:System.Net.PeerToPeer.PeerName.Authority%2A>和<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>组件。</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       对字符串进行比较之前不执行任何规范化。  时或在构造的对等名称对象之前，所有规范化应已都完成。"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "要与此比较的对等名称<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>标识相同的资源与当前的对等名称对象; 否则此方法返回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。       此方法也返回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>如果<code> other </code>设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "确定是否此内容<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>是否等于另一个对象的内容。"
  remarks: "此方法继承的默认签名和从<xref:System.Object>.</xref:System.Object>行为"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要与当前比较<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>和比较的对象包含相同的信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "重写<xref:System.Object.GetHashCode*>方法。</xref:System.Object.GetHashCode*>"
  remarks: "两个对象被视为相等，如果此方法返回的这两个相同的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前<xref:System.Object>.</xref:System.Object>哈希代码"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "序列化所需的数据，并用其填充序列化信息对象<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "派生的类型必须调用基类型<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>方法。</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "包含与关联的序列化的数据<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "包含与关联的序列化流的目标<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "获取一个布尔值，指定这是否是安全的对等名称。"
  remarks: "对等名称被视为保护如果它支持自签名证书。       只有所有者可以向 PNRP 注册安全的对等名称。"
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，此对等名称使用私钥进行保护密钥 / 公共密钥对。 其名称包含该对等机的用户证书的公钥的安全哈希算法 (SHA) 哈希。 否则为如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，对等机名称具有任何关联的标识。       除非显式指定，所有属性的默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>为引用类型和零 (0) 的属性的类型<xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "获取对等主机的名称。 这是 DNS 编码版本<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>这等同于 PeerHostName 在于它们是两个标识符。  两者之间的差异是可视表示形式。"
  remarks: "对等主机是&quot;种子节点&quot;负责启动对等网络会话，邀请对等方参与此类型的网络连接是最适合于如聊天组或游戏会话的通信的应用程序。       PeerHostName 属性指定对等方创建的对等网络会话中，以及认为该会话的主机的名称。  主机的对等网络会话可能会收集到多个<xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud>的对等节点 此外，同时可能由多个对等主机承载对等方。"
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>是对等主机的名称的值。</xref:System.String> 除非显式指定，所有属性的默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>对于引用类型。"
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "实现<xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref>接口，并返回序列化所需的数据<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>实例。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "包含与关联的序列化的数据<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "包含与关联的序列化流的目标<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "返回当前的字符串表示<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>对象。"
  remarks: "此方法继承的默认签名和从<xref:System.Object>.</xref:System.Object>行为"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: '一个字符串，表示当前<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>，并指定以下格式︰*颁发*。 例如，&quot;0.MyInternetPeer&quot;。'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
