### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  id: DbSkipExpression
  children:
  - System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  - System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  - System.Data.Common.CommandTrees.DbSkipExpression.Count
  - System.Data.Common.CommandTrees.DbSkipExpression.Input
  - System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  langs:
  - csharp
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
  type: Class
  summary: "跳过指定的数目的输入集内的元素。 DbSkipExpression 只能后已排序的输入的集合所指定的排序键。"
  remarks: "DbSkipExpression 要求其输入的集合进行了排序。 排序顺序表示为<xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>属性。</xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>是一份<xref:System.Data.Common.CommandTrees.DbSortClause>对象。</xref:System.Data.Common.CommandTrees.DbSortClause></xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>"
  syntax:
    content: 'public sealed class DbSkipExpression : System.Data.Common.CommandTrees.DbExpression'
  inheritance:
  - System.Object
  - System.Data.Common.CommandTrees.DbExpression
  implements: []
  inheritedMembers:
  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)
  - System.Data.Common.CommandTrees.DbExpression.GetHashCode
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)
  - System.Data.Common.CommandTrees.DbExpression.ResultType
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "实现不生成结果值的表达式的访问者模式。"
  syntax:
    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor
      description: "实例<xref href=&quot;System.Data.Common.CommandTrees.DbExpressionVisitor&quot;> </xref>。"
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visitor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  syntax:
    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1
      description: "要添加。"
    return:
      type: TResultType
      description: "要添加。"
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count
  id: Count
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Count
  nameWithType: DbSkipExpression.Count
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "获取或设置一个表达式，指定要在输入集合中跳过的元素数。"
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpression Count { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "指定要在输入集合中跳过的元素数的表达式。"
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Count*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "表达式是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "表达式不是关联的命令目录树<xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref>; 表达式不是<xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;></xref>或<xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref>;      或表达式的结果类型不等同于或不能提升为 64 位整数类型。"
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input
  id: Input
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Input
  nameWithType: DbSkipExpression.Input
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "获取<xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;></xref>用于指定输入的集。"
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "<xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref>用于指定输入的集。"
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Input*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  id: SortOrder
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "获取<xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;></xref>定义排序顺序的列表。"
  remarks: "<xref:System.Data.Common.CommandTrees.DbSkipExpression>要求其输入的集合进行了已排序。</xref:System.Data.Common.CommandTrees.DbSkipExpression> 排序顺序表示为 SortOrder 属性。 SortOrder 是一份<xref:System.Data.Common.CommandTrees.DbSortClause>对象。</xref:System.Data.Common.CommandTrees.DbSortClause>"
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause> SortOrder { get; }
    return:
      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref>定义排序顺序的列表。"
  overload: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: System.Data.Common.CommandTrees.DbExpression
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept(DbExpressionVisitor)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor
  nameWithType: DbExpressionVisitor
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
- uid: TResultType
  isExternal: true
  name: TResultType
  nameWithType: TResultType
  fullName: TResultType
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor<TResultType>
  nameWithType: DbExpressionVisitor<TResultType>
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Count
  nameWithType: DbSkipExpression.Count
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Input
  nameWithType: DbSkipExpression.Input
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<DbSortClause>
  nameWithType: IList<DbSortClause>
  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Common.CommandTrees.DbSortClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbSortClause
    name: DbSortClause
    nameWithType: DbSortClause
    fullName: DbSortClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept
  nameWithType: DbSkipExpression.Accept
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept<TResultType>
  nameWithType: DbSkipExpression.Accept<TResultType>
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Count
  nameWithType: DbSkipExpression.Count
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Input
  nameWithType: DbSkipExpression.Input
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
