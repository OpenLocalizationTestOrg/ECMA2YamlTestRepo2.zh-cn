### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataSourceView
  id: DataSourceView
  children:
  - System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  langs:
  - csharp
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
  type: Class
  summary: "用作所有数据源视图类，该类定义的数据源控件的功能的基类。"
  remarks: "ASP.NET 支持数据绑定体系结构，使 Web 服务器控件，用于绑定到数据以一致的方式。 Web 服务器控件绑定到数据的数据绑定控件，并促进绑定称为数据源控件的类称为。 数据源控件可以表示任何数据源︰ 关系数据库、 文件、 流、 业务对象等。 数据源控件以数据绑定控件，而不考虑源或基础数据的格式一致的方式显示数据。       提供的数据源控件使用 ASP.NET，包括<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.AccessDataSource>，和<xref:System.Web.UI.WebControls.XmlDataSource>，才能执行大多数 Web 开发任务。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用基本<xref:System.Web.UI.DataSourceControl>和 DataSourceView 类当你想要实现您自己的自定义数据源控件。</xref:System.Web.UI.DataSourceControl>       你可以将数据源控件的视为的组合<xref:System.Web.UI.IDataSource>对象和其关联的数据的列表，调用数据源视图。</xref:System.Web.UI.IDataSource> 由 DataSourceView 对象表示的数据的每个列表。 DataSourceView 类是所有数据源视图或与数据源控件相关联的数据的列表的基类。 数据源视图定义的数据源控件的功能。 由于基础数据存储包含一个或多个列表的数据，数据源控件始终是与一个或多个已命名的数据源视图相关联的。 数据源控件使用<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法来枚举数据源当前与数据源控件相关联的视图和<xref:System.Web.UI.DataSourceControl.GetView%2A>方法来按名称检索特定数据源视图实例。</xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceControl.GetViewNames%2A>       所有 DataSourceView 对象都支持从基础数据源使用的数据检索<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 所有视图可能还都支持一组基本的操作，其中包括操作，例如<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>， <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>，和<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 数据绑定控件可以发现通过检索关联的数据源的数据源控件的功能查看使用<xref:System.Web.UI.DataSourceControl.GetView%2A>和<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法，并通过在设计时或运行的时查询视图。</xref:System.Web.UI.DataSourceControl.GetViewNames%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A>"
  example:
  - "The following code example demonstrates how to extend the DataSourceView class to create a strongly typed view class for a data source control. The `CsVDataSourceView` class defines the capabilities of the `CsvDataSource` data source control and provides an implementation for data-bound controls to use data stored in comma-separated value (.csv) files. For more information on the `CsvDataSource` data source control, see the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public abstract class DataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  id: '#ctor(System.Web.UI.IDataSource,System.String)'
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>类。"
  syntax:
    content: protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.IDataSource
      description: "数据源控件<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>与相关联。"
    - id: viewName
      type: System.String
      description: "名称<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>对象。"
  overload: System.Web.UI.DataSourceView.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>viewName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持<xref:System.Web.UI.DataSourceView.ExecuteDelete*>操作。</xref:System.Web.UI.DataSourceView.ExecuteDelete*>"
  remarks: "当前，最好执行某项操作是否也 CanDelete 属性反映不仅的数据源控件，一项功能。 例如，即使数据源视图支持<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>在常规操作，如果未设置必需的属性或某些其他数据，CanDelete 属性返回`false`，因为删除操作会失败。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>"
  example:
  - "The following code example demonstrates how to override the CanDelete property and the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/p-system.web.ui.datasour_3_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_3_1.vb)]"
  syntax:
    content: public virtual bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基类实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  id: CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否可以执行指定的命令。"
  syntax:
    content: public virtual bool CanExecute (string commandName);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以执行此命令;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持<xref:System.Web.UI.DataSourceView.ExecuteInsert*>操作。</xref:System.Web.UI.DataSourceView.ExecuteInsert*>"
  remarks: "当前，最好执行某项操作是否也 CanInsert 属性反映不仅的数据源控件，一项功能。 例如，即使数据源控件支持<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>操作，如果必需的插入命令或未设置其他一些数据，CanInsert 属性返回`false`，因为插入操作会失败。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>"
  example:
  - "The following code example demonstrates how to override the CanInsert property and the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/p-system.web.ui.datasour_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_2_1.vb)]"
  syntax:
    content: public virtual bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基类实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持通过检索到的数据进行分页<xref:System.Web.UI.DataSourceView.ExecuteSelect*>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect*>"
  remarks: "数据绑定控件可以通过添加请求分页<xref:System.Web.UI.DataSourceCapabilities>字段<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 如果数据绑定控件请求进行分页，但 CanPage 属性返回`false`，数据源视图将引发异常。"
  syntax:
    content: public virtual bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基类实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持检索数据行，而不是数据的总行数。"
  remarks: "数据绑定控件可以通过添加请求的总行数<xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName>字段<xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName>对象传递给<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> </xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> 如果数据绑定控件请求的总行数，但 CanRetrieveTotalRowCount 属性返回`false`，数据源视图将引发异常。"
  syntax:
    content: public virtual bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基类实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持基础数据源的排序的视图。"
  remarks: "数据绑定控件可以请求通过添加排序<xref:System.Web.UI.DataSourceCapabilities>字段<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 如果数据绑定控件请求进行排序，但 CanSort 属性返回`false`，数据源视图将引发异常。"
  example:
  - "The following code example demonstrates how to override the CanSort property in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联与当前对象<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>对象支持<xref:System.Web.UI.DataSourceView.ExecuteUpdate*>操作。</xref:System.Web.UI.DataSourceView.ExecuteUpdate*>"
  remarks: "当前，最好执行某项操作是否也 CanUpdate 属性反映不仅的数据源控件，一项功能。 例如，即使数据绑定控件支持<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>操作，如果未设置必需的更新命令或某些其他数据，CanUpdate 属性返回`false`，因为更新操作会失败。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>"
  example:
  - "The following code example demonstrates how to override the CanUpdate property and the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/p-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: public virtual bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认实现返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  id: DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "数据源视图已更改时发生。"
  remarks: "对数据源视图的更改可能是由于其属性，或由于数据源视图中执行的数据操作的数据中的更改的值中的更改。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler DataSourceViewChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行异步删除操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "Delete 方法是为所有数据源视图对象的异步数据删除接口。 删除方法调用<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法使用任何`keys`和`oldValues`提供参数值。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> `callback`参数是一个委托，数据绑定控件将传递给数据源视图，用于通知数据绑定控件时<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>操作已完成。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 该方法使用的参数<xref:System.Web.UI.DataSourceViewOperationCallback>委托返回受影响的记录和任何数目<xref:System.Exception>由引发的异常<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的由要删除的对象或行键<xref:System.Web.UI.DataSourceView.ExecuteDelete*>操作。</xref:System.Web.UI.DataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其原始值的名称/值对。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>用于异步操作完成时通知的数据绑定控件的委托。"
  overload: System.Web.UI.DataSourceView.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Events
  id: Events
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取数据源视图的事件处理程序委托的列表。"
  remarks: "此属性是类型<xref:System.ComponentModel.EventHandlerList>，它使用线性搜索算法的委托列表中查找条目。</xref:System.ComponentModel.EventHandlerList> 使用大量的项时，线性搜索算法是低效。 因此，当你有大型列表，查找具有此属性的项将很慢。"
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "事件处理程序委托的列表。"
  overload: System.Web.UI.DataSourceView.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行指定的命令。"
  syntax:
    content: protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名称。"
    - id: keys
      type: System.Collections.IDictionary
      description: "一个字典的对象键或行键，以对其执行操作。"
    - id: values
      type: System.Collections.IDictionary
      description: "表示数据元素和它们的值的名称/值对的字典。"
    return:
      type: System.Int32
      description: "受操作影响的项的数目。"
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行指定的命令。"
  remarks: "此方法不返回值。"
  syntax:
    content: public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名称。"
    - id: keys
      type: System.Collections.IDictionary
      description: "一个字典的对象键或行键，以对其执行操作。"
    - id: values
      type: System.Collections.IDictionary
      description: "表示数据元素和它们的值的名称/值对的字典。"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> object."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行删除操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "数据绑定控件可以确定是否 ExecuteDelete 操作支持的数据源控件通过检索<xref:System.Web.UI.DataSourceView>对象使用<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>方法，并检查<xref:System.Web.UI.DataSourceView.CanDelete%2A>属性。</xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceView>       `keys`参数表示要删除的数据的对象或行键。 数据源用于表示关系数据，如<xref:System.Web.UI.WebControls.SqlDataSource>控件，`keys`参数是数据库主键的集合。</xref:System.Web.UI.WebControls.SqlDataSource> 在其他情况下，`keys`参数是名称/值对的集合，用于筛选数据的列表。 将删除匹配的名称/值对任何数据。      1> [!NOTE]&1;><xref:System.Web.UI.DataSourceView>类的默认实现是引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果扩展<xref:System.Web.UI.DataSourceView>类，请替代 ExecuteDelete 方法，如果你的类支持从基础数据存储中的删除。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property and the ExecuteDelete method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/84991e4a-bbbd-47a3-bfea-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/84991e4a-bbbd-47a3-bfea-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>个 ExecuteDelete 操作要删除的对象或行键。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其原始值的名称/值对。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "从基础数据存储中删除的项的数目。"
  overload: System.Web.UI.DataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持 ExecuteDelete 操作<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行插入操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "数据绑定控件可以确定是否 ExecuteInsert 操作支持的数据源控件通过检索<xref:System.Web.UI.DataSourceView>对象使用<xref:System.Web.UI.DataSourceControl.GetView%2A>方法，并检查<xref:System.Web.UI.DataSourceView.CanInsert%2A>属性。</xref:System.Web.UI.DataSourceView.CanInsert%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceView>       `values`参数是一组名称/值对，表示的数据列或字段和要插入的相应值。      1> [!NOTE]&1;><xref:System.Web.UI.DataSourceView>类的默认实现是引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果扩展<xref:System.Web.UI.DataSourceView>类，请替代 ExecuteInsert 方法，如果你的类支持插入到基础数据存储。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property and the ExecuteInsert method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/m-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: protected virtual int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的插入操作过程中使用的名称/值对。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "插入到基础数据存储的项的数目。"
  overload: System.Web.UI.DataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持 ExecuteInsert 操作<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "从基础数据存储中获取数据的列表。"
  remarks: "ExecuteSelect 方法被调用以从基础数据存储区检索数据并将其作为返回<xref:System.Collections.IEnumerable>对象。</xref:System.Collections.IEnumerable> 即使不支持插入和排序等其他操作，则所有数据源控件都支持从其基础数据存储中，检索数据。 因为数据绑定控件可在任何时候结果的请求数据的列表<xref:System.Web.UI.IDataSource.DataSourceChanged>事件或<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法调用中，必须根据需要执行数据检索。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  example:
  - "The following code example demonstrates how to override the ExecuteSelect method in a class that extends the <xref:System.Web.UI.DataSourceView> class. The `CsvDataSourceView` opens a comma-separated value (.csv) file, parses it line by line, and creates a <xref:System.Data.DataTable> object and a <xref:System.Data.DataView> object to hold the data in memory. Finally, a sort expression is applied if one is supplied by the <xref:System.Web.UI.DataSourceSelectArguments> object, and the <xref:System.Data.DataView> object is returned as an <xref:System.Collections.IEnumerable> instance. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/csharp/9907e30e-e760-42a4-aba2-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/visualbasic/9907e30e-e760-42a4-aba2-_1.vb)]"
  syntax:
    content: protected abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用于请求对数据执行基本的数据检索操作。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>从基础数据存储的数据的列表。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.DataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行更新操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "数据绑定控件可以确定是否 ExecuteUpdate 操作支持的数据源控件使用<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>方法来检索<xref:System.Web.UI.DataSourceView>对象并检查的值<xref:System.Web.UI.DataSourceView.CanUpdate%2A>属性。</xref:System.Web.UI.DataSourceView.CanUpdate%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>       `keys`参数表示要更新的数据的对象或行键。 数据源用于表示关系数据，如<xref:System.Web.UI.WebControls.SqlDataSource>控件，`keys`参数是数据库主键的集合。</xref:System.Web.UI.WebControls.SqlDataSource> 在其他情况下，`keys`参数是名称/值对的集合，用于筛选数据的列表。 在中找到的值更新匹配的名称/值对任何数据`values`参数，它是一组名称/值对，表示现有字段或列的新值。      1> [!NOTE]&1;><xref:System.Web.UI.DataSourceView>类的默认实现是引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果扩展<xref:System.Web.UI.DataSourceView>类，请替代 ExecuteUpdate 方法，如果你的类支持基础数据存储中更新数据。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property and the ExecuteUpdate method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/41646def-d513-4cd2-ab48-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/41646def-d513-4cd2-ab48-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的对象或行键，若要更新的更新操作。</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其新值的名称/值对。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其原始值的名称/值对。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "已更新基础数据存储中的项的数目。"
  overload: System.Web.UI.DataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持 ExecuteUpdate 操作<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行异步插入操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "Insert 方法是为所有数据源视图对象的异步数据插入接口。 Insert 方法调用<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法使用任何`values`提供。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> `callback`参数是一个委托，数据绑定控件将传递给数据源视图，用于通知数据绑定控件时<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>操作已完成。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 该方法使用的参数<xref:System.Web.UI.DataSourceViewOperationCallback>委托返回受影响的记录和任何数目<xref:System.Exception>由引发的异常<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法调用。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的插入操作过程中使用的名称/值对。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>用于异步操作完成时通知的数据绑定控件的委托。"
  overload: System.Web.UI.DataSourceView.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Name
  id: Name
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取数据源视图的名称。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "名称<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>，如果有的话。 默认值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  overload: System.Web.UI.DataSourceView.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  id: OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;></xref>事件。"
  remarks: "基础数据源已更改且该控件应重新绑定，并执行任何必要的工作，OnDataSourceViewChanged 方法将通知数据绑定控件。 通常情况下，OnDataSourceViewChanged 方法称为数据源视图的属性已更改时。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnDataSourceViewChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnDataSourceViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "由调用<> *1> 方法来比较为请求的功能<> *1> 针对视图支持的那些操作。"
  remarks: "数据源视图使用 RaiseUnsupportedCapabilityError 方法检查每个请求的数据绑定控件，由表示功能<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%2A>方法，并将进行比较的功能，它支持的数据源视图。</xref:System.Web.UI.DataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "之一<xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;></xref>与视图支持的功能进行比较的值。"
  overload: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "数据源视图不支持指定的数据源功能。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  id: Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "从基础数据存储区以异步方式获取数据的列表。"
  remarks: "选择的方法是为所有数据源视图对象的异步数据检索接口。 选择方法调用<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法，并传递任何<xref:System.Web.UI.DataSourceSelectArguments>提供。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> `callback`参数是一个委托，数据绑定控件将传递给数据源视图，用于通知数据绑定控件时<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>操作已完成。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 返回的数据<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>调用返回的参数中<xref:System.Web.UI.DataSourceViewSelectCallback>委派。</xref:System.Web.UI.DataSourceViewSelectCallback> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用于请求对数据执行基本的数据检索操作。"
    - id: callback
      type: System.Web.UI.DataSourceViewSelectCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;> </xref>用于异步操作完成时通知的数据绑定控件的委托。"
  overload: System.Web.UI.DataSourceView.Select*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行异步更新操作列表上的数据， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>对象所表示。"
  remarks: "更新方法是为所有数据源视图对象的异步数据修改接口。 更新方法调用<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法使用任何`keys`， `values`，和`oldValues`提供参数值。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> `callback`参数是一个委托，数据绑定控件将传递给数据源视图，用于通知数据绑定控件时<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>操作已完成。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 该方法使用的参数<xref:System.Web.UI.DataSourceViewOperationCallback>委托返回受影响的记录和任何数目<xref:System.Exception>由引发的异常<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>调用。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的对象或行键，若要更新的更新操作。</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其新值的名称/值对。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示数据元素和其原始值的名称/值对。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>用于异步操作完成时通知的数据绑定控件的委托。"
  overload: System.Web.UI.DataSourceView.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataSourceView.CanDelete
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
- uid: System.Web.UI.DataSourceView.CanInsert
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.DataSourceViewOperationCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewOperationCallback
  nameWithType: DataSourceViewOperationCallback
  fullName: System.Web.UI.DataSourceViewOperationCallback
- uid: System.Web.UI.DataSourceView.Events
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Name
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
- uid: System.Web.UI.DataSourceViewSelectCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewSelectCallback
  nameWithType: DataSourceViewSelectCallback
  fullName: System.Web.UI.DataSourceViewSelectCallback
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.#ctor*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView.DataSourceView
- uid: System.Web.UI.DataSourceView.CanDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
- uid: System.Web.UI.DataSourceView.CanExecute*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute
  nameWithType: DataSourceView.CanExecute
- uid: System.Web.UI.DataSourceView.CanInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.Delete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete
  nameWithType: DataSourceView.Delete
- uid: System.Web.UI.DataSourceView.Events*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
- uid: System.Web.UI.DataSourceView.ExecuteCommand*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand
  nameWithType: DataSourceView.ExecuteCommand
- uid: System.Web.UI.DataSourceView.ExecuteDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: DataSourceView.ExecuteDelete
- uid: System.Web.UI.DataSourceView.ExecuteInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: DataSourceView.ExecuteInsert
- uid: System.Web.UI.DataSourceView.ExecuteSelect*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: DataSourceView.ExecuteSelect
- uid: System.Web.UI.DataSourceView.ExecuteUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: DataSourceView.ExecuteUpdate
- uid: System.Web.UI.DataSourceView.Insert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert
  nameWithType: DataSourceView.Insert
- uid: System.Web.UI.DataSourceView.Name*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DataSourceView.OnDataSourceViewChanged
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.DataSourceView.Select*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select
  nameWithType: DataSourceView.Select
- uid: System.Web.UI.DataSourceView.Update*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update
  nameWithType: DataSourceView.Update
