### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "表示的访问控制和审核文件或目录的安全性。"
  remarks: "FileSystemSecurity 类是类的基类<xref:System.Security.AccessControl.FileSecurity>和<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  这些类表示所有的系统文件或目录的访问权限，并定义如何审核访问尝试。       FileSystemSecurity 类表示为一组规则的访问和审核权限。 每个规则都由<xref:System.Security.AccessControl.FileSystemAccessRule>对象，而每个审核规则由<xref:System.Security.AccessControl.FileSystemAuditRule>对象。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity 类是基础的 Microsoft Windows 文件安全系统的抽象。 在此系统中，每个文件或目录具有自定义访问控制列表 (DACL)，它控制对文件或目录的访问和系统访问控制列表 (SACL)，指定进行审核的访问控制尝试。  <xref:System.Security.AccessControl.FileSystemAccessRule>和<xref:System.Security.AccessControl.FileSystemAuditRule>类是抽象的访问控制项 (Ace)，包括 Dacl 和 Sacl。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity 类隐藏的许多详细信息的 Dacl 和 Sacl;无需担心 ACE 排序或 null DACL。       若要保存到文件的新的或更改的访问控制列表 (ACL) 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取枚举<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>类用于表示的访问权限。"
  remarks: "派生自的类<xref:System.Security.AccessControl.FileSystemSecurity>类重写 AccessRightType 属性，并返回它们用于表示的访问权限的类型。</xref:System.Security.AccessControl.FileSystemSecurity> 当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要用于每个安全对象的正确的枚举类型。"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>对象，表示<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>枚举。</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>表示新的访问控制规则指定的用户，使用指定的访问权限、 访问控制和标志的类。"
  remarks: "创建访问控制规则的建议的方法是使用<xref:System.Security.AccessControl.FileSystemAccessRule>类</xref:System.Security.AccessControl.FileSystemAccessRule>的构造函数       AccessRuleFactory 方法的返回类型是基类， <xref:System.Security.AccessControl.AccessRule>，但返回的值可以安全地强制转换为派生的类。</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>表示用户帐户的对象。"
    - id: accessMask
      type: System.Int32
      description: "一个整数，指定访问类型。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果继承的访问规则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何传播到子对象的访问掩码的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定如何传播到子对象的访问控制项 (Ace) 的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>指定是允许还是拒绝访问的值。"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "一个新<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>表示指定的用户，使用指定的访问权限、 访问控制和标志的新访问控制规则的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> accessMask </code>参数为零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>参数既不属于类型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>，也不的类型，如<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以转换为类型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取枚举<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>类用于表示访问规则。"
  remarks: "派生自的类<xref:System.Security.AccessControl.FileSystemSecurity>类重写 AccessRuleType 属性，并返回它们用于表示访问规则的类型。</xref:System.Security.AccessControl.FileSystemSecurity> 当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要使用每个安全对象的正确的访问规则类型。"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>对象，表示<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>类</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "将指定的访问控制列表 (ACL) 权限添加到当前文件或目录。"
  remarks: "AddAccessRule 方法中包含的规则列表中添加新规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity>       如果对于指定的规则已存在的访问控制列表 (ACL)，AddAccessRule 方法仍将添加该规则，有一个例外︰<xref:System.Security.AccessControl.FileSystemAccessRule>对象创建使用<xref:System.Security.AccessControl.AccessControlType>枚举值会取代创建使用的对象<xref:System.Security.AccessControl.AccessControlType>枚举值。</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       若要保存到文件的新的或更改 ACL 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       当你添加没有设置访问规则<xref:System.Security.AccessControl.FileSystemRights>标志，<xref:System.Security.AccessControl.FileSystemRights>标志将自动添加到你的规则。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果你删除规则更高版本而无需指定<xref:System.Security.AccessControl.FileSystemRights>标志，该标志将自动删除。</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>对象，表示要添加到文件或目录的访问控制列表 (ACL) 权限。"
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "将指定的审核规则添加到当前文件或目录。"
  remarks: "AddAuditRule 方法中包含的规则列表中添加新的审核规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity>       如果审核规则已存在指定的规则，AddAuditRule 方法仍将添加该规则。"
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>表示要添加到文件或目录的审核规则的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类，表示指定的用户的指定的审核规则。"
  remarks: "创建审核规则的建议的方法是使用<xref:System.Security.AccessControl.FileSystemAuditRule>类</xref:System.Security.AccessControl.FileSystemAuditRule>的构造函数       AuditRuleFactory 方法的返回类型是基类， <xref:System.Security.AccessControl.AuditRule>，但返回的值可以安全地强制转换为派生的类。</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>表示用户帐户的对象。"
    - id: accessMask
      type: System.Int32
      description: "一个整数，指定访问类型。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果继承的访问规则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何传播到子对象的访问掩码的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定如何传播到子对象的访问控制项 (Ace) 的值。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定的审核执行类型的值。"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "一个新<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>对象，表示指定的用户指定的审核规则。"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> accessMask </code>属性为零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>属性的类型既不是<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>，也不的类型，如<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以转换为类型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取的类型<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>类用于表示审核规则。"
  remarks: "派生自的类<xref:System.Security.AccessControl.FileSystemSecurity>类重写 AuditRuleType 属性，并返回它们用于表示审核权限的类型。</xref:System.Security.AccessControl.FileSystemSecurity> 当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要用于每个安全对象的正确的审核规则类型。"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>对象，表示<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>类</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除所有匹配允许或拒绝访问控制列表 (ACL) 权限从当前文件或目录。"
  remarks: "RemoveAccessRule 方法移除所有匹配<xref:System.Security.AccessControl.AccessControlType>访问规则或所有匹配<xref:System.Security.AccessControl.AccessControlType>从当前访问规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，你可以使用此方法删除所有<xref:System.Security.AccessControl.AccessControlType>通过访问用户的规则<xref:System.Security.AccessControl.FileSystemAccessRule>对象创建使用<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.FileSystemRights>值和用户帐户。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  RemoveAccessRule 方法执行此操作时，删除任何指定的拒绝规则<xref:System.Security.AccessControl.FileSystemRights>值或<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       若要保存到文件的新的或更改的访问控制列表 (ACL) 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       当你添加没有设置访问规则<xref:System.Security.AccessControl.FileSystemRights>标志，<xref:System.Security.AccessControl.FileSystemRights>标志将自动添加到你的规则。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果你删除规则更高版本而无需指定<xref:System.Security.AccessControl.FileSystemRights>标志，该标志将自动删除。</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>对象，表示要移除的文件或目录的访问控制列表 (ACL) 权限。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已删除的访问规则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "从当前文件或目录中移除指定的用户的所有访问控制列表 (ACL) 权限。"
  remarks: "RemoveAccessRuleAll 方法中删除指定的用户的所有访问控制列表 (ACL) 权限。  该方法将忽略中的所有值<xref:System.Security.AccessControl.FileSystemAccessRule>对象除外的用户帐户。</xref:System.Security.AccessControl.FileSystemAccessRule>       若要保存到文件的新的或更改 ACL 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       当你添加没有设置访问规则<xref:System.Security.AccessControl.FileSystemRights>标志，<xref:System.Security.AccessControl.FileSystemRights>标志将自动添加到你的规则。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果你删除规则更高版本而无需指定<xref:System.Security.AccessControl.FileSystemRights>标志，该标志将自动删除。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>应从文件或目录中删除指定其访问控制列表 (ACL) 权限的用户的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "删除单个匹配允许或拒绝从当前文件或目录的访问控制列表 (ACL) 权限。"
  remarks: "RemoveAccessRuleSpecific 方法中移除指定<xref:System.Security.AccessControl.AccessControlType>访问规则或指定的匹配<xref:System.Security.AccessControl.AccessControlType>从当前的访问规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，你可以使用此方法删除指定<xref:System.Security.AccessControl.AccessControlType>通过将传递用户的访问规则<xref:System.Security.AccessControl.FileSystemAccessRule>对象创建使用<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.FileSystemRights>值和用户帐户。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  执行此操作时，RemoveAccessRuleSpecific 方法中删除指定的拒绝规则<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights>  它不会删除任何指定的拒绝规则<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights>       若要保存到文件的新的或更改的访问控制列表 (ACL) 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       当你添加没有设置访问规则<xref:System.Security.AccessControl.FileSystemRights>标志，<xref:System.Security.AccessControl.FileSystemRights>标志将自动添加到你的规则。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果你删除规则更高版本而无需指定<xref:System.Security.AccessControl.FileSystemRights>标志，该标志将自动删除。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>应从文件或目录中删除指定其访问控制列表 (ACL) 权限的用户的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除所有匹配允许或拒绝从当前文件或目录的审核规则。"
  remarks: "RemoveAuditRule 方法移除所有匹配<xref:System.Security.AccessControl.AccessControlType>审核规则或所有匹配<xref:System.Security.AccessControl.AccessControlType>审核从当前规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，你可以使用此方法删除所有<xref:System.Security.AccessControl.AccessControlType>审核规则的用户通过将传递<xref:System.Security.AccessControl.FileSystemAuditRule>对象创建使用<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.AuditFlags>值和用户帐户。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  RemoveAuditRule 方法执行此操作时，删除任何指定的拒绝规则<xref:System.Security.AccessControl.AuditFlags>值或<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>表示要从文件或目录中删除的审核规则的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已删除的审核规则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "从当前文件或目录中删除指定的用户的所有审核规则。"
  remarks: "RemoveAuditRuleAll 方法中删除指定的用户的所有审核规则。  它会忽略中的所有值<xref:System.Security.AccessControl.FileSystemAuditRule>对象除外的用户帐户。</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>指定应从文件或目录中删除其审核规则的用户的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除单个匹配允许或拒绝从当前文件或目录的审核规则。"
  remarks: "RemoveAuditRuleSpecific 方法中删除指定的匹配<xref:System.Security.AccessControl.AccessControlType>审核规则或指定的匹配<xref:System.Security.AccessControl.AccessControlType>从当前的审核规则<xref:System.Security.AccessControl.FileSystemSecurity>对象。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，你可以使用此方法删除指定<xref:System.Security.AccessControl.AccessControlType>通过将传递用户的审核规则<xref:System.Security.AccessControl.FileSystemAuditRule>对象创建使用<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.AuditFlags>值和用户帐户。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  执行此操作时，RemoveAuditRuleSpecific 方法中删除指定的拒绝规则<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>  它不会删除任何指定的拒绝规则<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>表示要从文件或目录中删除的审核规则的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "将指定的访问控制列表 (ACL) 权限添加到当前文件或目录，并删除所有匹配的 ACL 权限。"
  remarks: "ResetAccessRule 方法将添加指定的访问控制列表 (ACL) 规则或覆盖匹配任何相同 ACL 规则`rule`参数。  例如，如果`rule`参数指定<xref:System.Security.AccessControl.FileSystemRights>值和 ResetAccessRule 方法查找指定的相同 ACL 规则<xref:System.Security.AccessControl.FileSystemRights>值，则相同的规则将被覆盖。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果 ResetAccessRule 方法找到相同的 ACL 规则，它指定<xref:System.Security.AccessControl.FileSystemRights>值，则相同的规则也将被覆盖。</xref:System.Security.AccessControl.FileSystemRights>       若要保存到文件的新的或更改 ACL 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>对象，表示要添加到文件或目录的访问控制列表 (ACL) 权限。"
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "设置当前文件或目录的指定的访问控制列表 (ACL) 权限。"
  remarks: "SetAccessRule 方法将添加指定的访问控制列表 (ACL) 规则或覆盖匹配任何相同 ACL 规则<xref:System.Security.AccessControl.FileSystemRights>值`rule`参数。</xref:System.Security.AccessControl.FileSystemRights>  例如，如果`rule`参数指定<xref:System.Security.AccessControl.FileSystemRights>值和 SetAccessRule 方法查找指定的相同 ACL 规则<xref:System.Security.AccessControl.FileSystemRights>值，则相同的规则将被覆盖。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果 SetAccessRule 方法找到相同的 ACL 规则，它指定<xref:System.Security.AccessControl.FileSystemRights>值，相同的规则不会被覆盖。</xref:System.Security.AccessControl.FileSystemRights>       若要保存到文件的新的或更改 ACL 信息，请使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要保存新的或更改到目录的 ACL 信息，请使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要从文件检索 ACL 信息，请使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要从目录中检索 ACL 信息，请使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>对象，表示要设置文件或目录的访问控制列表 (ACL) 权限。"
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "设置当前文件或目录的指定的审核规则。"
  remarks: "SetAuditRule 方法将添加指定的审核规则或覆盖匹配任何相同的审核规则<xref:System.Security.AccessControl.FileSystemRights>值`rule`参数。</xref:System.Security.AccessControl.FileSystemRights>  例如，如果`rule`参数指定<xref:System.Security.AccessControl.FileSystemRights>值和 SetAuditRule 方法查找指定的相同的审核规则<xref:System.Security.AccessControl.FileSystemRights>值，则相同的规则将被覆盖。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果 SetAuditRule 方法找到的相同的审核规则，它指定<xref:System.Security.AccessControl.FileSystemRights>值，相同的规则不会被覆盖。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>表示要为文件或目录设置的审核规则的对象。"
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
