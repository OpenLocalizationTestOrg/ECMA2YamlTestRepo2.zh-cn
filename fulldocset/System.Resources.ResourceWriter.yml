### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceWriter
  id: ResourceWriter
  children:
  - System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.ResourceWriter.#ctor(System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.ResourceWriter.AddResource(System.String,System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  - System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  - System.Resources.ResourceWriter.Close
  - System.Resources.ResourceWriter.Dispose
  - System.Resources.ResourceWriter.Generate
  - System.Resources.ResourceWriter.TypeNameConverter
  langs:
  - csharp
  name: ResourceWriter
  nameWithType: ResourceWriter
  fullName: System.Resources.ResourceWriter
  type: Class
  summary: "将资源写入到输出文件或输出流的系统默认格式。 此类不能被继承。"
  remarks: "ResourceWriter 提供的默认实现<xref:System.Resources.IResourceWriter>接口。</xref:System.Resources.IResourceWriter> 它使您以编程方式创建二进制资源 (.resources) 文件。       资源指定为使用的名称和值对<xref:System.Resources.ResourceWriter.AddResource%2A>方法。</xref:System.Resources.ResourceWriter.AddResource%2A> 资源名称是用于查找、 时，区分大小写，但若要更轻松地支持创作工具，并帮助消除 bug，ResourceWriter 将不允许具有仅因大小写的名称的.resources 文件。 ResourceWriter 类可用于创建字符串、 对象和二进制资源。 二进制资源可以写入资源文件作为字节数组或流。      1> [!IMPORTANT]&1;> 此类型实现<xref:System.IDisposable>接口。</xref:System.IDisposable> 完成后使用类型的操作后，你应释放类型直接或间接。 若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</xref:System.IDisposable.Dispose%2A> 若要间接释放类型，使用一种语言构造如`using`（在 C# 中) 或`Using`（在 Visual Basic 中)。 有关详细信息，请参阅中的&quot;使用实现 IDisposable 的对象&quot;部分<xref:System.IDisposable>接口主题。</xref:System.IDisposable>       若要创建资源文件，使用唯一的文件名，调用创建 ResourceWriter<xref:System.Resources.ResourceWriter.AddResource%2A>至少一次，调用<xref:System.Resources.ResourceWriter.Generate%2A>以将资源文件写入到磁盘，然后调用<xref:System.Resources.ResourceWriter.Close%2A>关闭此文件。</xref:System.Resources.ResourceWriter.Close%2A> </xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.AddResource%2A> 调用<xref:System.Resources.ResourceWriter.Close%2A>将隐式调用，<xref:System.Resources.ResourceWriter.Generate%2A>如果不显式调用<xref:System.Resources.ResourceWriter.Generate%2A>.</xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.Close%2A>       资源将不一定能写入添加顺序相同。       若要从 ResourceWriter 类创建的二进制.resources 文件中检索资源，可以使用<xref:System.Resources.ResourceManager>类，该类可用于检索命名的资源，或<xref:System.Resources.ResourceReader>类，这样就可以枚举文件中的所有资源。</xref:System.Resources.ResourceReader> </xref:System.Resources.ResourceManager>"
  example:
  - "The following example writes several strings into the myResources.resources file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/t-system.resources.resou_1_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/t-system.resources.resou_1_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/t-system.resources.resou_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ResourceWriter : System.Resources.IResourceWriter
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceWriter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>将资源写入到提供的流的类。"
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that writes to a specified stream. The code adds resources to the writer and writes the resources to the stream.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_11_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_11_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_11_1.vb)]"
  syntax:
    content: public ResourceWriter (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "输出流中。"
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> stream </code>参数不是可写。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>将资源写入到指定的文件的类。"
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that will write to a specified file. The code adds resources to the writer and writes the resources to the file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/m-system.resources.resou_14_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_14_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/m-system.resources.resou_14_1.cs)]"
  syntax:
    content: public ResourceWriter (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "输出文件的名称。"
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "添加命名的资源指定为字节数组的要写入的资源的列表。"
  remarks: "资源不写入直到<xref:System.Resources.ResourceWriter.Generate%2A>称为。</xref:System.Resources.ResourceWriter.Generate%2A>       你可以检索 AddResource 方法通过调用写入的资源<xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been read as an array of bytes to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/csharp/m-system.resources.resou_9_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/visualbasic/m-system.resources.resou_9_1.vb)]"
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.Byte[]
      description: "为一个 8 位无符号的整数数组的资源的值。"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此<xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭其哈希表并且不可用。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  id: AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将添加到资源列表，要写入流的形式指定的已命名的资源。"
  remarks: "你可以指定任何支持的流<xref:System.IO.Stream.Length%2A?displayProperty=fullName>属性`value`。</xref:System.IO.Stream.Length%2A?displayProperty=fullName>       你可以检索 AddResource 方法通过调用写入的资源<xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/visualbasic/m-system.resources.resou_10_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/csharp/m-system.resources.resou_10_1.cs)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value);
    parameters:
    - id: name
      type: System.String
      description: "要添加的资源名称。"
    - id: value
      type: System.IO.Stream
      description: "要添加的资源的值。 资源必须支持&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;属性。"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此<xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>。       -或-流不支持&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;属性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将添加指定为到要写入的资源的列表对象的已命名的资源。"
  remarks: "`value`必须是可序列化。       资源不写入直到<xref:System.Resources.ResourceWriter.Generate%2A>调用方法。</xref:System.Resources.ResourceWriter.Generate%2A>       你可以检索 AddResource 方法通过调用写入的资源<xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add object data to a binary resources file.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#1](~/add/codesnippet/csharp/m-system.resources.resou_13_1.cs)]  \n  \n `DonorColumns` is a custom class whose fields contain the names of columns to be displayed in the user interface. Note that the class is marked with the <xref:System.SerializableAttribute> attribute. Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time."
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.Object
      description: "资源的值。"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此<xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭其哈希表并且不可用。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将字符串资源添加到的资源要写入的列表。"
  remarks: "资源不写入直到<xref:System.Resources.ResourceWriter.Generate%2A>称为。</xref:System.Resources.ResourceWriter.Generate%2A>       你可以检索 AddResource 方法通过调用写入的资源<xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add string resources to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_4_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_4_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_4_1.vb)]"
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.String
      description: "资源的值。"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此 ResourceWriter。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭其哈希表并且不可用。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  id: AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将添加到资源列表，要写入流的形式指定的已命名的资源，并指定是否应后关闭流<xref:System.Resources.ResourceWriter.Generate*>调用方法。</xref:System.Resources.ResourceWriter.Generate*>"
  remarks: "你可以指定任何支持的流<xref:System.IO.Stream.Length%2A?displayProperty=fullName>属性`value`。</xref:System.IO.Stream.Length%2A?displayProperty=fullName>       你可以检索 AddResource 方法通过调用写入的资源<xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/csharp/7232e6d2-2ac8-47d7-a388-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/visualbasic/7232e6d2-2ac8-47d7-a388-_1.vb)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);
    parameters:
    - id: name
      type: System.String
      description: "要添加的资源名称。"
    - id: value
      type: System.IO.Stream
      description: "要添加的资源的值。 资源必须支持&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;属性。"
    - id: closeAfterWrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要关闭后的流<xref:System.Resources.ResourceWriter.Generate*>方法是调用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Resources.ResourceWriter.Generate*>"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此<xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>。       -或-流不支持&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;属性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  id: AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将数据单元作为资源添加到要写入的资源的列表。"
  remarks: "AddResourceData 方法用于将资源添加的二进制形式 (也就是说，作为字节数组) 到要写入的资源的列表。 必须指定资源，资源和的二进制表示形式的数据本身中包含的数据的类型名称的名称。 添加需要每个资源后，使用<xref:System.Resources.ResourceWriter.Generate%2A>中指定的方法，若要写入的资源文件的资源的列表或流的<xref:System.Resources.ResourceWriter.%23ctor%2A>构造函数。</xref:System.Resources.ResourceWriter.%23ctor%2A> </xref:System.Resources.ResourceWriter.Generate%2A>       `typeName`是一个字符串，表示资源的数据类型。 它可以是任何以下值:-的字符串表示形式`ResourceTypeCode`指示该资源的数据类型的枚举成员。 `ResourceTypeCode`是可供用于指示特殊的二进制格式用于存储 19 常见数据类型之一的私有枚举。 其中包括.NET Framework 基元数据类型 (<xref:System.Boolean>， <xref:System.Byte>， <xref:System.Char>， <xref:System.Decimal>， <xref:System.Double>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.Single>， <xref:System.SByte>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>)，以及<xref:System.String>， <xref:System.DateTime>，和<xref:System.TimeSpan>。</xref:System.TimeSpan> </xref:System.DateTime> </xref:System.String> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.SByte> </xref:System.Single> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.Double> </xref:System.Decimal> </xref:System.Char> </xref:System.Byte> </xref:System.Boolean> 此外，`ResourceTypeCode`枚举包括下表中显示的值。          |`ResourceTypeCode`值 |说明 |      |------------------------------|-----------------|      |`ResourceTypeCode.ByteArray`|数据为字节数组。 |      |`ResourceTypeCode.Null`|数据为空引用。 |      |`ResourceTypeCode.Stream`|数据存储在流中。 |     -一个字符串，包含其二进制数据分配到的类型的完全限定的名称`serializedData`自变量 (例如， `System.String`)。 此外，对于不是.NET Framework 类库的一部分的类型，该字符串包括名称、 版本、 区域性和公钥的包含类型的程序集。 例如，以下字符串指示序列化的数据表示的实例`Person`键入`Extensions`命名空间，在名为具有没有公用密钥和任何指定的区域性的实用工具程序集的版本 1.0 中找到。           `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`针对读取资源数据使用 AddResourceData 方法编写的并行方法是<xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>.</xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResourceData method to write two integer values to a .resources file, and then uses a <xref:System.Resources.ResourceReader> object to retrieve them.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/csharp/4bc2b306-6493-47e4-9e15-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/visualbasic/4bc2b306-6493-47e4-9e15-_1.vb)]"
  syntax:
    content: public void AddResourceData (string name, string typeName, byte[] serializedData);
    parameters:
    - id: name
      type: System.String
      description: "用于标识包含添加的数据的资源的名称。"
    - id: typeName
      type: System.String
      description: "添加的数据类型名称。 有关详细信息，请参阅备注部分。"
    - id: serializedData
      type: System.Byte[]
      description: "包含的二进制表示形式添加数据的字节数组。"
  overload: System.Resources.ResourceWriter.AddResourceData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>, <code>typeName</code>, or <code>serializedData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>（或仅大小写不同的名称） 已添加到此<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>对象。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当前<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>对象未初始化。 可能的原因在于<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>对象已关闭。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Close
  id: Close
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将资源保存到输出流，然后关闭它。"
  remarks: "<xref:System.Resources.ResourceWriter.Generate%2A>隐式由调用关闭，如果需要。</xref:System.Resources.ResourceWriter.Generate%2A>"
  example:
  - "The following example uses the Close method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_6_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_6_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_6_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResourceWriter.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "发生了 I/O 错误。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "在序列化的对象期间出错。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "允许用户关闭资源文件或流，显式释放资源。"
  remarks: "此方法的实现是<xref:System.Resources.ResourceWriter.Close%2A>.</xref:System.Resources.ResourceWriter.Close%2A>相同"
  example:
  - "The following code example uses the Dispose method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer and make the writer's resources available for other processes.  \n  \n [!code-cs[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/csharp/m-system.resources.resou_0_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/cpp/m-system.resources.resou_0_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_0_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceWriter.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "发生了 I/O 错误。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "在序列化的对象期间出错。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Generate
  id: Generate
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "将所有资源都保存到输出流中的系统默认格式。"
  remarks: "隐式调用生成方法<xref:System.Resources.ResourceWriter.Close%2A>如果它不由你的应用程序代码调用的方法。</xref:System.Resources.ResourceWriter.Close%2A>       生成一次，只能调用后对所有调用<xref:System.Resources.ResourceWriter.AddResource%2A>和<xref:System.Resources.ResourceWriter.AddResourceData%2A>进行了。</xref:System.Resources.ResourceWriter.AddResourceData%2A> </xref:System.Resources.ResourceWriter.AddResource%2A> 如果编写资源时发生异常，将关闭输出流，以防止编写无效的信息。       生成不会关闭在正常情况下的输出流。 除非您与.resources 文件合并额外的数据，或需要访问流之后，你应调用<xref:System.Resources.ResourceWriter.Close%2A>在调用生成或只需调用<xref:System.Resources.ResourceWriter.Close%2A>.</xref:System.Resources.ResourceWriter.Close%2A>之后</xref:System.Resources.ResourceWriter.Close%2A>"
  example:
  - "The following code example uses the Generate method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream  \n  \n [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_12_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/csharp/m-system.resources.resou_12_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/cpp/m-system.resources.resou_12_1.cpp)]"
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.ResourceWriter.Generate*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "发生 I/O 错误。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "在序列化的对象期间出错。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "这<xref href=&quot;System.Resources.ResourceWriter&quot;></xref>已关闭其哈希表并且不可用。"
  platform:
  - net462
- uid: System.Resources.ResourceWriter.TypeNameConverter
  id: TypeNameConverter
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "获取或设置一个委托，可使资源程序集能够编写面向之前的.NET Framework 版本[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]通过使用限定的程序集名称。"
  remarks: '[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]和 MSBuild 设置此属性，如果面向的.NET framework 的早期版本。'
  syntax:
    content: public Func<Type,string> TypeNameConverter { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "封装由委托类型。"
  overload: System.Resources.ResourceWriter.TypeNameConverter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
- uid: System.Resources.ResourceWriter.Close
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
- uid: System.Resources.ResourceWriter.Dispose
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
- uid: System.Resources.ResourceWriter.Generate
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
- uid: System.Resources.ResourceWriter.TypeNameConverter
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Resources.ResourceWriter.#ctor*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter
  nameWithType: ResourceWriter.ResourceWriter
- uid: System.Resources.ResourceWriter.AddResource*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: ResourceWriter.AddResource
- uid: System.Resources.ResourceWriter.AddResourceData*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData
  nameWithType: ResourceWriter.AddResourceData
- uid: System.Resources.ResourceWriter.Close*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close
  nameWithType: ResourceWriter.Close
- uid: System.Resources.ResourceWriter.Dispose*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose
  nameWithType: ResourceWriter.Dispose
- uid: System.Resources.ResourceWriter.Generate*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate
  nameWithType: ResourceWriter.Generate
- uid: System.Resources.ResourceWriter.TypeNameConverter*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
