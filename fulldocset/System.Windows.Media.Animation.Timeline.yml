### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Timeline
  id: Timeline
  children:
  - System.Windows.Media.Animation.Timeline.#ctor
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AllocateClock
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.Clone
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  langs:
  - csharp
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
  type: Class
  summary: "定义时间的段。"
  remarks: "时间线表示时间的段。  它提供了属性，您可以指定开始时间，它将重复的多少次时间内该段，以及更多时间的前进速度该片段的长度。       从时间线类继承的类提供附加功能，例如动画和媒体的播放。 以下是一些可用的专用时间线的不同类型的示例。      -**动画**:<xref:System.Windows.Media.Animation.AnimationTimeline>是一种生成输出值的时间线。</xref:System.Windows.Media.Animation.AnimationTimeline> 当你将与属性关联动画时，动画将更新属性的值，它播放时，从而&quot;进行动画处理&quot;。 动画的简介，请参阅[动画概述](~/add/includes/ajax-current-ext-md.md)。 有关应用动画的不同方法的信息，请参阅[属性动画技术概述](~/add/includes/ajax-current-ext-md.md)。      - **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>是一种控制播放的媒体文件的时间线。</xref:System.Windows.Media.MediaTimeline>      - **ParallelTimelines**: A<xref:System.Windows.Media.Animation.ParallelTimeline>是一种分组其他时间线的时间线。</xref:System.Windows.Media.Animation.ParallelTimeline>      -**情节提要**: A<xref:System.Windows.Media.Animation.Storyboard>是一种特殊的<xref:System.Windows.Media.Animation.ParallelTimeline>提供对象和属性目标的时间线，它包含的信息。</xref:System.Windows.Media.Animation.ParallelTimeline> </xref:System.Windows.Media.Animation.Storyboard> 有关详细信息<xref:System.Windows.Media.Animation.Storyboard>对象，请参阅[情节提要概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Media.Animation.Storyboard>       有关使用时间线详细信息，请参阅[动画概述](../Topic/Animation%20Overview.md)。 时间线的时间的计时功能的介绍，请参阅[计时行为概述](~/add/includes/ajax-current-ext-md.md)。      ## 数据绑定和最动画时间线时间线属性可以是数据绑定，或进行动画处理;但是，由于计时系统的方法，不执行操作的绑定或动画时间线行为类似于其他数据的数据绑定，或进行动画处理的对象。 若要了解其行为，它有助于了解一下激活时间线的含义。       时间线应用时，将制作时间线及其子时间线的副本。 这些副本已冻结 （使其只读的） 和<xref:System.Windows.Media.Animation.Clock>从中创建对象。</xref:System.Windows.Media.Animation.Clock> 它是这些时钟将执行对目标的属性进行动画处理的实际工作。 如果时间线为数据绑定或进行动画处理，其当前值的快照已创建其时钟时。 即使原始时间线可能继续更改，其时钟却没有。       时间线以反映数据绑定或动画更改，必须重新生成其时钟。 时钟不会重新生成为你自动。 以下是应用时间线更改几种方法:-如果时间线或属于<xref:System.Windows.Media.Animation.Storyboard>，你可以通过重新应用其情节提要使用反映更改<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</xref:System.Windows.Media.Animation.Storyboard.Begin%2A> </xref:System.Windows.Media.Animation.BeginStoryboard> </xref:System.Windows.Media.Animation.Storyboard> 这具有还会重新启动动画的副作用。 在代码中，你可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法向前移动情节提要重新为其以前的位置。</xref:System.Windows.Media.Animation.Storyboard.Seek%2A>      -如果将动画应用到属性使用直接<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，调用<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>再次方法并将其传递已修改的动画。</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> </xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>      -如果你正在直接在时钟级别，创建和应用一组新的时钟和用它们来替换以前的生成时钟集。       有关数据的一个示例绑定动画，请参阅[密钥样条动画示例](http://go.microsoft.com/fwlink/?LinkID=160011)。      ## 使用时间线的事件处理程序时，将仅在计时器的时间线的时钟与之关联或 (对于<xref:System.Windows.Media.Animation.AnimationClock>对象) 是与属性相关联。</xref:System.Windows.Media.Animation.AnimationClock> 此原因 （和其他内容），不建议，使用时间线作为一个计时器。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public abstract class Timeline : System.Windows.Media.Animation.Animatable
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>类。"
  syntax:
    content: protected Timeline ();
    parameters: []
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  id: '#ctor(System.Nullable{System.TimeSpan})'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>指定<xref:System.Windows.Media.Animation.Timeline.BeginTime*>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*>类"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在此时间<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>应开始。 请参阅<xref:System.Windows.Media.Animation.Timeline.BeginTime*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>使用指定的类<> *1> 和<> *1>。"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在此时间<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>应开始。 请参阅<xref:System.Windows.Media.Animation.Timeline.BeginTime*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "为其此时间线播放，不计数重复的时间长度。 请参阅<xref:System.Windows.Media.Animation.Timeline.Duration*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>使用指定的类<> *1>， <> </> *1>，和<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在此时间<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>应开始。 请参阅<xref:System.Windows.Media.Animation.Timeline.BeginTime*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "为其此时间线播放，不计数重复的时间长度。 请参阅<xref:System.Windows.Media.Animation.Timeline.Duration*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "此时间线，作为迭代的重复行为<> *1> 或重复<> *1>。 请参阅<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>属性以获取详细信息。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  id: AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置一个值，指定的时间线的百分比<xref:System.Windows.Media.Animation.Timeline.Duration*>所用的时间消逝从零加速到其最大速率。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  remarks: "AccelerationRatio 属性用于创建动画启动缓慢，然后随着时间的推移加快。 AccelerationRatio 属性可用于创建渐入效果或者使看上去更自然的移动。 使用 AccelerationRatio 和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性在一起以创建开始缓慢、 动画，提高速度，然后在完成之前再次变慢。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_AccelerationRatio&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>"
  syntax:
    content: public double AccelerationRatio { get; set; }
    return:
      type: System.Double
      description: "一个介于 0 和 1，（含)，之间的值，指定的时间线的百分比<> *1> 所用的时间消逝从零加速到其最大速率。如果时间线的<> *1> 也设置属性，AccelerationRatio 总数和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>必须小于或等于 1。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*> 默认值为 0"
  overload: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "AccelerationRatio 是小于 0 或大于 1。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AccelerationRatio 总数和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>超过 1。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  id: AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  id: AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Creates a <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> for this <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>."
  remarks: "调用此方法<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法，不应直接由你的代码调用。</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>"
  syntax:
    content: protected virtual System.Windows.Media.Animation.Clock AllocateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "此时钟<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.AllocateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  id: AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置一个值，该值指示是否在它完成向前迭代后，时间线在播放按相反的顺序。"
  remarks: "如果 AutoReverse 属性设置为`true`，时间线播放指定的时间长度的两倍的其<xref:System.Windows.Media.Animation.Timeline.Duration%2A>属性。</xref:System.Windows.Media.Animation.Timeline.Duration%2A>      ### AutoReverse 和时间线的 AutoReverse 属性设置为时重复`true`及其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>属性使其重复播放，每个向前迭代后跟一个向后迭代。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 这样一次重复。 例如，时间线以及 AutoReverse 值`true`与迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>的 2 将向前播放一次，然后向后，再次，然后转发，然后再次向后。</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>      <a name=&quot;dependencyPropertyInfo_AutoReverse&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>"
  syntax:
    content: public bool AutoReverse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在每次迭代; 结束时按相反时间线播放否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.AutoReverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  id: AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.AutoReverse*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.AutoReverse*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AutoReverseProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  id: BeginTime
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置此时间<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>应开始。"
  remarks: "The BeginTime property is useful for creating timelines that play in a sequence: by increasing the BeginTime of successive timelines that share the same parent, you can stagger their play times.  \n  \n## Negative Values  \n A negative BeginTime value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past. For example, a <xref:System.Windows.Media.Animation.Timeline> with a BeginTime of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.  \n  \n## BeginTime and SpeedRatio  \n The time described by the BeginTime property is measured in the timeline's parent's time. For example, a timeline with a BeginTime of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.  \n  \n A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its BeginTime. For example, a timeline with a BeginTime of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.  \n  \n<a name=\"dependencyPropertyInfo_BeginTime\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  \n|Metadata properties set to `true`|None|  \n  \n<a name=\"xamlAttributeUsage_BeginTime\"></a>   \n## XAML Attribute Usage  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-]*days*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlValues_BeginTime\"></a>   \n## XAML Values  \n Items in square brackets (`[` and `]`) are optional.  \n  \n *days*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value greater than or equal to 0 that describes the number of days spanned by this begin time.  \n  \n *hours*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 23 that represents the number of hours spanned by this begin time.  \n  \n *minutes*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of minutes spanned by this begin time.  \n  \n *seconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of seconds spanned by this begin time.  \n  \n *fractionalSeconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value consisting of 1 to 7 digits that represents fractional seconds.  \n  \n For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page."
  example:
  - "A timeline's BeginTime property determines the beginning of a timeline's active period. If the timeline has a parent timeline, the BeginTime property determines how long it takes the timeline to start after its parent starts. If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the BeginTime property determines how long the timeline takes to start playing after it is triggered.  \n  \n The following example shows several different timelines with different BeginTime settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]"
  syntax:
    content: public Nullable<TimeSpan> BeginTime { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "在此时间<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>应开始，相对于其父级的 BeginTime。 如果此时间线为根时间线，则时间没有相对于其交互开始时间 （从该处触发时间线的时刻）。 此值可能为正数、 负数或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>值的表示时间线永远不会起到。 默认值为零。"
  overload: System.Windows.Media.Animation.Timeline.BeginTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  id: BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.BeginTime*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BeginTimeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Clone
  id: Clone
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，从而深度复制此对象的值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>       在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性是<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.Timeline.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>对象，从而深度复制此对象的当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>       不复制资源引用、 数据绑定和动画，而其当前值。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: '当此时间线完全播放完毕时发生︰ 它不再将进入活动期。'
  remarks: "如果此时间线的时间线树根时间线，它已完成播放后到达其有效期 （其中包括重复） 结尾，并且所有子项具有都达到其活动周期的结尾。 如果此时间线为子时间线，它被视为完全完成播放时其所属达到的时间线树的根时间线活动期和所有子时间线的末尾具有播放完毕的信息。       停止时间线不会触发其已完成的事件，但正在到其填充期间跳过它。       <xref:System.Object>参数的<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。</xref:System.Windows.Media.Animation.Clock>  有关详细信息，请参阅[计时事件概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control. One storyboard shrinks the image control until it disappears. After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.  \n  \n [!code-xml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  id: CreateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建一个新的控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>含有子级，与此创建时钟树<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作为根。"
  remarks: '尽管这<xref:System.Windows.Media.Animation.Timeline>可能是一个或多个的子<xref:System.Windows.Media.Animation.TimelineGroup>对象，此信息将被忽略︰ 此方法将当前<xref:System.Windows.Media.Animation.Timeline>作为根<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.TimelineGroup> </xref:System.Windows.Media.Animation.Timeline>'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "一个新从此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>构造从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>是<xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>包含子时间线，树<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>对象创建从此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>创建从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作为根。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  id: CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> ，并指定是否新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>是控制的。 如果此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>含有子级，与此创建时钟树<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作为根。"
  remarks: '尽管这<xref:System.Windows.Media.Animation.Timeline>可能是一个或多个的子<xref:System.Windows.Media.Animation.TimelineGroup>对象，此信息将被忽略︰ 此方法将当前<xref:System.Windows.Media.Animation.Timeline>作为根<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.TimelineGroup> </xref:System.Windows.Media.Animation.Timeline>'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);
    parameters:
    - id: hasControllableRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果根<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>返回应返回<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>从其<xref:System.Windows.Media.Animation.Clock.Controller*>属性以便<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>树可以以交互方式受控; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Media.Animation.Clock.Controller*>"
    return:
      type: System.Windows.Media.Animation.Clock
      description: "一个新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>构造从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>是<xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>包含子时间线，树<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>对象创建从此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>创建从此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作为根。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "在这段时间的速率前进时间线的时钟更改时发生。"
  remarks: "在以下情况下更改时间线的时钟的当前全局速度:-时钟由于其时间线的更改方向<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>      -时钟而加速或由于其时间线的减速<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性设置。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> </xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      -时钟连接而暂停或恢复。      -时钟变为非活动状态，或重新激活。      -<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>的时钟的父更改之一。</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>       CurrentGlobalSpeedInvalidated 事件可用于跟踪在时间线的时钟变为暂停; 时在事件处理程序，使用你的情节提要<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>方法或检查时钟<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>属性来确定是否已暂停其时钟，则将此与以前缓存的值，以确定它是否更改比较。</xref:System.Windows.Media.Animation.Clock.IsPaused%2A> </xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>       <xref:System.Object>参数的<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。</xref:System.Windows.Media.Animation.Clock>  有关详细信息，请参阅[计时事件概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to register for the CurrentGlobalSpeedInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "发生时<xref:System.Windows.Media.Animation.Clock.CurrentState*>属性的时间线的<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>更新。</xref:System.Windows.Media.Animation.Clock.CurrentState*>"
  remarks: "使用 CurrentStateInvalidated 事件时想要被通知时时间线的<xref:System.Windows.Media.Animation.Clock>启动、 停止或填充。</xref:System.Windows.Media.Animation.Clock>       暂停<xref:System.Windows.Media.Animation.Clock>不会更改其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.Clock> 若要要得到通知时钟变为暂停时，使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>       虽然此事件发生时<xref:System.Windows.Media.Animation.ClockState>变为无效，并不一定意味着<xref:System.Windows.Media.Animation.ClockState>更改︰<xref:System.Windows.Media.Animation.Clock>用于从切换<xref:System.Windows.Media.Animation.ClockState>到<xref:System.Windows.Media.Animation.ClockState>和再转回<xref:System.Windows.Media.Animation.ClockState>在同一个计时周期将导致此事件激发，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>属性不会实际更改。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>       <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是<xref:System.Windows.Media.Animation.Clock>创建为此时间线。</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。</xref:System.Windows.Media.Animation.Clock>  有关详细信息，请参阅[计时事件概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "发生时<xref:System.Windows.Media.Animation.Clock.CurrentTime*>属性的时间线的<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>更新。</xref:System.Windows.Media.Animation.Clock.CurrentTime*>"
  remarks: "使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>时你想要的事件时收到通知<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>时间线的<xref:System.Windows.Media.Animation.Clock>更新。</xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> </xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>       <xref:System.Object>参数的<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。</xref:System.Windows.Media.Animation.Clock>  有关详细信息，请参阅[计时事件概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to register for the CurrentTimeInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  id: DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置一个值，指定的时间线的百分比<xref:System.Windows.Media.Animation.Timeline.Duration*>减速的时间消逝从其最大速率到零所。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  remarks: "DecelerationRatio 属性用于创建该在停止前减速的动画。 DecelerationRatio 属性可用于创建渐入效果或者使看上去更自然的移动。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和 DecelerationRatio 属性在一起以创建开始缓慢、 动画，提高速度，然后在完成之前再次变慢。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_DecelerationRatio&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>"
  syntax:
    content: public double DecelerationRatio { get; set; }
    return:
      type: System.Double
      description: "一个介于 0 和 1，（含)，之间的值，指定的时间线的百分比<> *1> 减速到所占用的时间消逝从其最大速率零。如果时间线的<> *1> 也设置属性，DecelerationRatio 总数和<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>必须小于或等于 1。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*> 默认值为 0"
  overload: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DecelerationRatio 是小于 0 或大于 1。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "总和<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>且 DecelerationRatio 超过 1。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  id: DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  id: DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>附加属性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Duration
  id: Duration
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置用于此时间线播放，不计数重复的时间长度。"
  remarks: "A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.  \n  \n## Default Duration Behavior  \n The behavior of a Duration structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:  \n  \n|||  \n|-|-|  \n|**Timeline**|**Behavior**|  \n|<xref:System.Windows.Media.Animation.Timeline>|Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)|  \n|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|Expands to fit child timelines|  \n|\\<*Type*>Animation (Known as a \"From/To/By\" or \"basic\" animations)|1 second|  \n|\\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)|Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values|  \n  \n<a name=\"dependencyPropertyInfo_Duration\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  \n|Metadata properties set to `true`|None|"
  example:
  - "<xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects. The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines. For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.  \n  \n> [!NOTE]\n>  Note: code has been omitted from the following examples, which are provided for illustrative purposed only.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n    <DoubleAnimation Duration=\"0:0:2\" …/>  \n    <DoubleAnimation Duration=\"0:0:4\" BeginTime=\"0:0:2\" …/>  \n  </Storyboard>   \n...  \n```  \n  \n Examples of \\<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no Duration is specified for these types of animations, they will run for one second.  \n  \n [xaml]  \n  \n```  \n...  \n  <!-- With no Duration specified, this animation will run for   \n       one second -->  \n  <DoubleAnimation .../>  \n...  \n```  \n  \n Examples of \\<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no Duration is specified for these types of animations they will run until all key frames are finished.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n  \n    <!-- This key frame animation will end at 4.5 seconds  \n         Because that is when its last KeyFrame KeyTime ends. -->  \n    <DoubleAnimationUsingKeyFrames ...>  \n      <LinearDoubleKeyFrame ... KeyTime=\"0:0:3\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:3.5\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4.5\" />  \n    </DoubleAnimationUsingKeyFrames>  \n  </Storyboard>   \n...  \n```"
  syntax:
    content: public System.Windows.Duration Duration { get; set; }
    return:
      type: System.Windows.Duration
      description: 'The timeline''s simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <xref:System.Windows.Duration.Automatic*>.'
  overload: System.Windows.Media.Animation.Timeline.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  id: DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.Duration*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DurationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  id: FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置一个值，指定如何<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>它到达其有效期末尾后的行为。"
  remarks: "将动画 FillBehavior 属性设置为<xref:System.Windows.Media.Animation.FillBehavior>如果想要保留其值，它到达其有效期末尾后的动画。</xref:System.Windows.Media.Animation.FillBehavior> 已达到其有效期末尾的动画具有 FillBehavior 设置为<xref:System.Windows.Media.Animation.FillBehavior>被认为是在其填充期间。</xref:System.Windows.Media.Animation.FillBehavior> 如果你不想保留其值，它到达其有效期末尾后的动画，其 FillBehavior 将属性设置为<xref:System.Windows.Media.Animation.FillBehavior>.</xref:System.Windows.Media.Animation.FillBehavior>       因为动画在其填充期间继续重写其目标属性的值，尝试设置通过其他方式的目标属性的值可能会不产生任何影响。 有关演示如何设置属性值进行动画处理后的示例，请参阅[如何︰ 设置属性后进行动画处理其与情节提要](~/add/includes/ajax-current-ext-md.md)。       播放和填充其父时间线停止; 时，子时间线将停止如果你想子时间线，以填充，，请确保其父时间线具有<xref:System.Windows.Media.Animation.FillBehavior>.</xref:System.Windows.Media.Animation.FillBehavior> FillBehavior      <a name=&quot;dependencyPropertyInfo_FillBehavior&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.FillBehavior
      description: "一个值，指定时间线后它到达其有效期末尾但其父级仍处于其有效期的行为或填充期。 默认值是<xref href=&quot;System.Windows.Media.Animation.FillBehavior&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.FillBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  id: FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.FillBehavior*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.FillBehavior*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FillBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>不可修改，或确定是否可使其成为不可修改。"
  remarks: "请勿调用此方法，直接 （但调用基实现中）。 通过<xref:System.Windows.Freezable.Freeze%2A>.</xref:System.Windows.Freezable.Freeze%2A>内部调用此方法"
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要检查此实例是否可以冻结;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>冻结此实例。"
    return:
      type: System.Boolean
      description: "如果<code> isChecking </code>为 true，此方法返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例可以成为只读的或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果它不能成为只读的。       如果<code> isChecking </code>为 false，此方法将返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例现在为只读的或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果无法成为只读的并且具有已开始更改此对象冻结的状态的副作用。"
  overload: System.Windows.Media.Animation.Timeline.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使此实例的指定克隆<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>对象。"
  remarks: "在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。 请注意，如果这些属性包含资源引用或数据绑定<xref:System.Windows.Freezable.GetAsFrozen%2A>将失败时尝试冻结该对象，并将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Freezable.GetAsFrozen%2A>       调用此方法<xref:System.Windows.Freezable.GetAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</xref:System.Windows.Freezable.GetAsFrozen%2A> 若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接调用此方法。</xref:System.Windows.Freezable.GetAsFrozen%2A>       有关详细信息，请参阅<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>要克隆的实例。"
  overload: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使此实例的指定的冻结的复本<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "调用此方法<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接调用此方法。</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>       有关详细信息，请参阅<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>要复制和冻结。"
  overload: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  id: GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取指定的所需的帧速率<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "此方法提供读取访问权限<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加属性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 有关详细信息，请参阅<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>页。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>"
  syntax:
    content: public static Nullable<int> GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "要从中检索所需的帧速率时间线。"
    return:
      type: System.Nullable{System.Int32}
      description: "此时间线的所需的帧速率。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  id: GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "返回的这一次迭代长度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "时，仅应调用此方法的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>属性设置为<xref:System.Windows.Duration.Automatic%2A>。</xref:System.Windows.Duration.Automatic%2A> </xref:System.Windows.Media.Animation.Timeline.Duration%2A> 如果<xref:System.Windows.Media.Animation.Timeline.Duration%2A>是<xref:System.Windows.Duration.Automatic%2A>，自然持续时间将由<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>该特定类的实现</xref:System.Windows.Duration.Automatic%2A></xref:System.Windows.Media.Animation.Timeline.Duration%2A>       如果 GetNaturalDuration 返回<xref:System.Windows.Duration.Automatic%2A>时，即自然持续时间为的未知，这意味着<xref:System.Windows.Duration.Forever%2A>.</xref:System.Windows.Duration.Forever%2A>自然持续时间</xref:System.Windows.Duration.Automatic%2A> 此类是用于流式处理媒体这种情况。       请注意，传递此时间线创建以外的时钟的此方法是可行的但将提供不可靠的结果。"
  syntax:
    content: protected System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>创建此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
    return:
      type: System.Windows.Duration
      description: "这一次迭代的长度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，或<xref:System.Windows.Duration.Automatic*>如果自然持续时间未知。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  id: GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "返回的这一次迭代长度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 此方法提供<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>的实现"
  remarks: "此方法提供的实现<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>且不应在代码中直接调用。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> 使用<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>相反。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>"
  syntax:
    content: protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>创建此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
    return:
      type: System.Windows.Duration
      description: "这一次迭代的长度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，或<xref:System.Windows.Duration.Automatic*>如果自然持续时间未知。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Name
  id: Name
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置此名称<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "此时间线的名称。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  id: NameProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.Name*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.Name*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty NameProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "为此时间线创建时钟或删除了某个及其父时间线时发生。"
  remarks: "通过应用引发此事件<xref:System.Windows.Media.Animation.RemoveStoryboard>操作到使用情节提要的情节提要<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法，或 （当直接处理时钟） 调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName>方法。</xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName> </xref:System.Windows.Media.Animation.Storyboard.Remove%2A> </xref:System.Windows.Media.Animation.RemoveStoryboard>       虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。</xref:System.Windows.Media.Animation.Clock>  有关详细信息，请参阅[计时事件概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  id: RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置此时间线的重复行为。"
  remarks: "如果迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>指定的时间线<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为`true`，一次重复组成一个向前迭代和向后的一次迭代。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> </xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 时间线<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为 true 迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>的 2 将播放向前，然后向后，再次，然后转发，然后再次向后。</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> </xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>       而不是指定的时间线播放的次数，还可以指定时间线要播放的时间的总的长度。 若要重复，此<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>值应大于时间线的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A></xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>时间线 例如，时间线与<xref:System.Windows.Media.Animation.Timeline.Duration%2A>的 2 秒和<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>的 4 秒，将播放一两次。</xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> </xref:System.Windows.Media.Animation.Timeline.Duration%2A> 如果<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>小于时间线的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>，时间线的活动期被中止。</xref:System.Windows.Media.Animation.Timeline.Duration%2A> </xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>       有关重复时间线详细信息，请参阅[动画概述](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;dependencyPropertyInfo_RepeatBehavior&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "迭代<> *1>，它指定的时间线应播放的次数<xref:System.TimeSpan>值，该值指定的总长度此时间线的活动期或特殊值<> *1>，它指定时间线应无限期地重复。</xref:System.TimeSpan> 默认值是<xref href=&quot;System.Windows.Media.Animation.RepeatBehavior&quot;></xref>与<xref:System.Windows.Media.Animation.RepeatBehavior.Count*>的`1`，指示时间线播放一次。</xref:System.Windows.Media.Animation.RepeatBehavior.Count*>"
  overload: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  id: RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  id: SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "设置指定的所需的帧速率<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "此方法会设置<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加属性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 有关详细信息，请参阅<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>页。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>"
  syntax:
    content: public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable<int> desiredFrameRate);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>到`desiredFrameRate`分配。"
    - id: desiredFrameRate
      type: System.Nullable{System.Int32}
      description: "此时间线应生成每秒的帧的最大数目或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果系统应控制的帧的数目。"
  overload: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置的速率，相对于其父级中，在此的时间的推移<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "时间线的 SpeedRatio 设置没有影响其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 该时间是相对于时间线的父级或如果时间线为根时间线，从该处开始时间线的时钟时间。</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       如果<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>指定，此 SpeedRatio 通过时间线的自然长度是平均的比率。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> </xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_SpeedRatio&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>"
  example:
  - "A timeline's SpeedRatio property controls its rate of progress, relative to its parent. If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed. The following example shows several timelines with different SpeedRatio settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "有限值大于 0 的描述用于此时间线，相对于其父级的速度时间前进速率或如果这是根时间线，默认时间线速度。 默认值为 1。"
  overload: System.Windows.Media.Animation.Timeline.SpeedRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "SpeedRatio 小于 0 或不是有限值。"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  id: SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>依赖项属性。</xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SpeedRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Animation.Timeline.#ctor
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
- uid: System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
- uid: System.Windows.Media.Animation.Timeline.Clone
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
- uid: System.Windows.Media.Animation.Timeline.Completed
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
- uid: System.Windows.Media.Animation.Timeline.Duration
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
- uid: System.Windows.Media.Animation.FillBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: FillBehavior
  nameWithType: FillBehavior
  fullName: System.Windows.Media.Animation.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
- uid: System.Windows.Media.Animation.Timeline.Name
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
- uid: System.Windows.Media.Animation.Timeline.#ctor*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline
  nameWithType: Timeline.Timeline
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
- uid: System.Windows.Media.Animation.Timeline.AllocateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock
  nameWithType: Timeline.AllocateClock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
- uid: System.Windows.Media.Animation.Timeline.BeginTime*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.Clone*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone
  nameWithType: Timeline.Clone
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue
  nameWithType: Timeline.CloneCurrentValue
- uid: System.Windows.Media.Animation.Timeline.CreateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock
  nameWithType: Timeline.CreateClock
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.Duration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.FillBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FreezeCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore
  nameWithType: Timeline.FreezeCore
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: Timeline.GetAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: Timeline.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate
  nameWithType: Timeline.GetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration
  nameWithType: Timeline.GetNaturalDuration
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore
  nameWithType: Timeline.GetNaturalDurationCore
- uid: System.Windows.Media.Animation.Timeline.Name*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate
  nameWithType: Timeline.SetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
