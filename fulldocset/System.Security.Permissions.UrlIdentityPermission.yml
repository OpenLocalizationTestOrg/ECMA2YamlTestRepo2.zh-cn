### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermission
  id: UrlIdentityPermission
  children:
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.UrlIdentityPermission.Copy
  - System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.ToXml
  - System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.Url
  langs:
  - csharp
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission
  fullName: System.Security.Permissions.UrlIdentityPermission
  type: Class
  summary: "定义标识权限的代码所源自的 URL。 此类不能被继承。"
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  remarks: "创建完全受限制 (`None`) 或`Unrestricted`权限。      1> [!NOTE] 1> 在.NET Framework 1.0 和 1.1 版中，标识权限不能具有<xref:System.Security.Permissions.PermissionState>权限状态值。</xref:System.Security.Permissions.PermissionState> 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着，在 2.0 及更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</xref:System.Security.Permissions.IUnrestrictedPermission> 也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。       在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 从.NET Framework 2.0 版开始，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。"
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/cpp/d852dbe8-5170-4e24-980e-_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/csharp/d852dbe8-5170-4e24-980e-_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/visualbasic/d852dbe8-5170-4e24-980e-_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "之一<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>参数不是有效的值的<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>类来表示所描述的 URL 标识<code> site </code>。"
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.  The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.  A demand on the permission causes <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> to be called by the security infrastructure. The demand will fail because of the argument exception, resulting in a <xref:System.Security.SecurityException> being thrown. In this case, the original <xref:System.ArgumentException> exception will not be seen."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/cpp/m-system.security.permis_0_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/csharp/m-system.security.permis_0_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/visualbasic/m-system.security.permis_0_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "一个 URL 或通配符表达式。"
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>site</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "长度<code> site </code>参数为零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "URL、 目录或的站点部分<code> site </code>参数无效。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回当前权限的相同副本。"
  remarks: "与原始权限情况下，一份权限表示对资源的相同的访问权限。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "当前权限的副本。"
  overload: System.Security.Permissions.UrlIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "重新构造具有指定状态的 XML 编码的权限。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "编码用于重新构造权限的 XML。"
  overload: System.Security.Permissions.UrlIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>参数不是有效的权限元素。       -或- <code> esd </code>参数的版本号无效。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回是当前权限和指定的权限的交集的权限。"
  remarks: "以下两个权限的交集是介绍访问它们都共同点描述的 Url 的权限。 仅通过两个原始权限的请求将通过该交集。 例如，表示对 http://www.fourthcoffee.com/process/grind.htm 访问的权限和表示对 http://www.fourthcoffee.com/ 访问权限的权限的交集*是表示对 http://www.fourthcoffee.com/process/grind.htm 访问权限的权限。      <xref:System.Security.Permissions.UrlIdentityPermission>支持 set 操作 (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>，Intersect 和<xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) 仅当当前权限与指定的权限的对象相等或权限之一时使用通配符运算符 (&quot;*&quot;)。</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要与当前权限相交的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示当前权限和指定的权限的交集的一个新权限。 此新权限为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集为空。"
  overload: System.Security.Permissions.UrlIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。       -或者-Url 属性不是有效的 URL。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "确定当前权限是否为指定权限的子集。"
  remarks: "如果当前权限标识到完全包含在指定权限的 URL 的访问，则当前的权限是指定权限的子集。 例如，表示对 http://www.fourthcoffee.com/process/grind.htm 访问权限的权限是表示对 http://www.fourthcoffee.com/ 的访问权限的子集*。如果此方法返回`true`，当前的权限表示对受保护资源的访问权限不超过指定的权限。      <xref:System.Security.Permissions.UrlIdentityPermission>支持 set 操作 (IsSubsetOf， <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>，和<xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) 仅当当前权限等同于指定的权限或权限之一时使用通配符运算符 (&quot;*&quot;)。</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "将要测试子集关系的权限。 此权限必须是与当前权限属于同一类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限是指定权限; 的子集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。       -或者-Url 属性不是有效的 URL。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建权限及其当前状态的 XML 编码。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "权限，包括任何状态信息的 XML 编码。"
  overload: System.Security.Permissions.UrlIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建兼具当前权限和指定的权限的权限。"
  remarks: "对联合方法的结果是调用的表示对由当前的权限，表示 URL 的访问，以及所表示的指定权限的 URL 访问的权限。       <xref:System.Security.Permissions.UrlIdentityPermission>类支持的集运算<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>， <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>，和联合) 仅当当前权限是否等于指定的权限，或当权限之一使用通配符运算符 (&quot;*&quot;) 和其中一个是另一个的子集。</xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要与当前权限合并的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示同时兼具当前权限和指定的权限的新权限。"
  overload: System.Security.Permissions.UrlIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。       -或-<xref:System.Security.Permissions.UrlIdentityPermission.Url*>属性不是有效的 URL。</xref:System.Security.Permissions.UrlIdentityPermission.Url*>       -或-这两个权限不相等且是其中一个不是另一个的子集。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置表示 Internet 代码的标识的 URL。"
  remarks: "都视为完整的 URL，包括协议 (HTTP、 HTTPS、 FTP) 和该文件，例如︰ http://www.fourthcoffee.com/process/grind.htm/。       Url 可以匹配严格或使用通配符在最后一个位置，例如︰ http://www.fourthcoffee.com/process/ *。"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "表示 Internet 代码的标识的 URL。"
  overload: System.Security.Permissions.UrlIdentityPermission.Url*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "无法检索 URL，因为它的标识不明确。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission.UrlIdentityPermission
- uid: System.Security.Permissions.UrlIdentityPermission.Copy*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: UrlIdentityPermission.Copy
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: UrlIdentityPermission.FromXml
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: UrlIdentityPermission.Intersect
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UrlIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: UrlIdentityPermission.ToXml
- uid: System.Security.Permissions.UrlIdentityPermission.Union*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union
  nameWithType: UrlIdentityPermission.Union
- uid: System.Security.Permissions.UrlIdentityPermission.Url*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
