### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymReader
  id: SymReader
  children:
  - System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  - System.Diagnostics.SymbolStore.SymReader.Dispose
  - System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymReader.Finalize
  - System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymReader.GetDocuments
  - System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  - System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  - System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  langs:
  - csharp
  name: SymReader
  nameWithType: SymReader
  fullName: System.Diagnostics.SymbolStore.SymReader
  type: Class
  summary: "提供对文档、 方法和符号存储区内的变量的访问。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymReaderBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolReader
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymReaderBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)'
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);
    parameters:
    - id: pReader
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*
      description: "要添加。"
  overload: System.Diagnostics.SymbolStore.SymReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "释放当前实例所使用的资源<xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;></xref>类。"
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "由调用<> *1> 和<> *1> 方法来释放使用的当前实例的托管和非托管资源<xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;></xref>类。"
  remarks: "此方法称为仅由公共<xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>和<xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A>方法; 这些方法不直接调用此方法。</xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "释放非托管的资源并执行其他清理操作之前<xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;></xref>通过垃圾回收回收。"
  remarks: "此方法将替代<xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> 应用程序代码不应调用此方法。对象的`Finalize`方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A>方法。</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymReader ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取指定的文档和 （可选） 的语言、 语言提供商和类型的 URL 的文档。"
  remarks: "`language`， `languageVendor`，和`documentType`当前忽略参数。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "标识文档的 URL。"
    - id: language
      type: System.Guid
      description: "文档语言。 你可以指定此参数为<xref:System.Guid>。</xref:System.Guid> 若要指示任何语言。"
    - id: languageVendor
      type: System.Guid
      description: "文档语言的供应商标识。 你可以指定此参数为<xref:System.Guid>以指示任何语言提供商。</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "文档的类型。 你可以指定此参数为<xref:System.Guid>以指示任何文档类型。</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "使用指定的 URL 文档如果在符号存储区中, 找到或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果文档不存在。"
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  id: GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取在符号存储区中定义的所有文档的数组。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "在符号存储区中定义的所有文档的数组。"
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来满足该请求。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  id: GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情况下。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取符号读取器方法对象在给定方法的标识符。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "方法的元数据标记。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "指定的方法标识符符号读取器方法对象。"
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取符号读取器方法对象在给定的标识符的方法和及其编辑和连续版本。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "方法的元数据标记。"
    - id: version
      type: System.Int32
      description: "编辑并继续的方法的版本。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "指定的方法标识符和版本号符号读取器方法对象。"
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取符号读取器方法对象包含文档中的指定的位置。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "方法所在的文档。"
    - id: line
      type: System.Int32
      description: "文档内行的位置。 行带有编号，从 1 开始。"
    - id: column
      type: System.Int32
      description: "在文档中的列的位置。 列进行编号，从 1 开始。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "在文档中的指定位置的符号读取器方法对象。"
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情况下。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  syntax:
    content: public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "未使用此参数。"
    - id: name
      type: System.String
      description: "未使用此参数。"
    return:
      type: System.Byte[]
      description: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情况下。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "未使用此参数。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情况下。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  id: ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "用增量符号存储区替换现有的符号存储区。"
  remarks: "ReplaceSymbolStore 非常类似于<xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>方法，但给定的增量充当更新而不是完全替换。</xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>       只有一个参数，`fileName`或`stream`，需要指定。 如果`fileName`符号存储区更新使用在该文件中的符号的指定。 如果`stream` <xref:System.Runtime.InteropServices.ComTypes.IStream>。</xref:System.Runtime.InteropServices.ComTypes.IStream>数据更新符号存储区的指定"
  syntax:
    content: public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "包含符号存储区，该文件的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果使用内存中存储。"
    - id: stream
      type: System.IntPtr
      description: "指向符号存储区的输入流的指针或<xref:System.IntPtr>如果使用磁盘上存储。</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  id: UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "使用增量符号存储区更新现有的符号存储区。"
  remarks: "此方法用于在编辑并继续的方案中作为一种方法更新符号存储区增量与原始的 PE 文件匹配。       只有一个参数，`fileName`或`stream`，需要指定。 如果`fileName`符号存储区更新使用在该文件中的符号的指定。 如果`stream` <xref:System.Runtime.InteropServices.ComTypes.IStream>。</xref:System.Runtime.InteropServices.ComTypes.IStream>数据更新符号存储区的指定"
  syntax:
    content: public virtual void UpdateSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "包含符号存储区，该文件的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果使用内存中存储。"
    - id: stream
      type: System.IntPtr
      description: "指向符号存储区的输入流的指针或<xref:System.IntPtr>如果使用磁盘上存储。</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  id: UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取的元数据令牌指定为该模块的用户入口点方法如果有的话。"
  remarks: "返回的值通常是主要方法。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "模块的用户入口的方法的元数据标记点。"
  overload: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "找不到入口点。"
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymReaderBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymReaderBase
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace
    name: ISymbolNamespace
    nameWithType: ISymbolNamespace
    fullName: ISymbolNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader
  nameWithType: SymReader.SymReader
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose
  nameWithType: SymReader.Dispose
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize
  nameWithType: SymReader.Finalize
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument
  nameWithType: SymReader.GetDocument
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments
  nameWithType: SymReader.GetDocuments
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables
  nameWithType: SymReader.GetGlobalVariables
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod
  nameWithType: SymReader.GetMethod
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition
  nameWithType: SymReader.GetMethodFromDocumentPosition
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces
  nameWithType: SymReader.GetNamespaces
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute
  nameWithType: SymReader.GetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables
  nameWithType: SymReader.GetVariables
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore
  nameWithType: SymReader.ReplaceSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore
  nameWithType: SymReader.UpdateSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
