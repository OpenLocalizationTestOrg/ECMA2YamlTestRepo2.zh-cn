### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "指定控件的默认属性， <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;> </xref>对象绑定，以在运行时。 此类不能被继承。"
  remarks: "在定义时<xref:System.Web.UI.WebControls.ControlParameter>对象，你通常将绑定控件的属性到参数通过设置同时<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>和<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>属性。</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> </xref:System.Web.UI.WebControls.ControlParameter> 如果<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>未设置属性，则使用默认属性。</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> ControlValuePropertyAttribute 特性应用于控件以指定其默认属性，<xref:System.Web.UI.WebControls.ControlParameter>对象绑定，以在运行时。</xref:System.Web.UI.WebControls.ControlParameter>       有关使用属性的详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。       ControlValuePropertyAttribute 类的实例的初始属性值的列表，请参阅<xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>构造函数。</xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref>类使用指定的属性名称。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.ControlValuePropertyAttribute>类使用指定的属性名称。</xref:System.Web.UI.ControlValuePropertyAttribute> 下表显示<xref:System.Web.UI.ControlValuePropertyAttribute>类</xref:System.Web.UI.ControlValuePropertyAttribute>实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|值`name`参数。 |</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "控件的默认属性。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref>类使用的指定的属性名称和默认值。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.ControlValuePropertyAttribute>类使用的指定的属性名称和默认值。</xref:System.Web.UI.ControlValuePropertyAttribute> 下表显示<xref:System.Web.UI.ControlValuePropertyAttribute>类</xref:System.Web.UI.ControlValuePropertyAttribute>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|值`name`参数。 |  |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|值`defaultValue`参数。 |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "控件的默认属性。"
    - id: defaultValue
      type: System.Object
      description: "默认属性的默认值。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref>类使用的指定的属性名称和默认值。 默认值也被转换为指定的数据类型。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.ControlValuePropertyAttribute>类使用的指定的属性名称和默认值。</xref:System.Web.UI.ControlValuePropertyAttribute> 此外将此版本的构造函数尝试将默认值转换为指定的数据类型`type`参数。 如果无法转换的默认值，<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>未设置属性。</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> 下表显示<xref:System.Web.UI.ControlValuePropertyAttribute>类</xref:System.Web.UI.ControlValuePropertyAttribute>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|值`name`参数。 |  |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|值`defaultValue`参数，如果值可以转换为指定的数据类型`type`参数。 |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "控件的默认属性。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>默认值所转换到。</xref:System.Type>"
    - id: defaultValue
      type: System.String
      description: "默认属性的默认值。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取控件的默认属性的默认值。"
  remarks: "指定的属性<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>未设置属性，可使用 DefaultValue 属性以确定该属性的默认值。</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "控件的默认属性的默认值。"
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否的当前实例<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref>对象是否等于指定的对象。"
  remarks: "Equals 方法用于确定是否的当前实例<xref:System.Web.UI.ControlValuePropertyAttribute>对象是否等于指定的对象。</xref:System.Web.UI.ControlValuePropertyAttribute> 对于相等的对象，必须满足以下条件︰ 1。  中包含的对象`obj`参数必须是<xref:System.Web.UI.ControlValuePropertyAttribute>对象。</xref:System.Web.UI.ControlValuePropertyAttribute>      2.  <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>和<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>这两个对象的属性必须相等。</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>与此实例进行比较。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象包含在<code> obj </code>参数是否等于当前实例的<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取控件的默认属性。"
  remarks: "当<xref:System.Web.UI.WebControls.ControlParameter>对象未定义其<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>属性设置，使用 Name 属性来确定绑定到的默认属性<xref:System.Web.UI.WebControls.ControlParameter>在运行时对象。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter>"
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "控件的默认属性。"
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
