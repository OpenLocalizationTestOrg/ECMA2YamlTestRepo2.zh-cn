### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocumentType
  id: XmlDocumentType
  children:
  - System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  - System.Xml.XmlDocumentType.Entities
  - System.Xml.XmlDocumentType.InternalSubset
  - System.Xml.XmlDocumentType.IsReadOnly
  - System.Xml.XmlDocumentType.LocalName
  - System.Xml.XmlDocumentType.Name
  - System.Xml.XmlDocumentType.NodeType
  - System.Xml.XmlDocumentType.Notations
  - System.Xml.XmlDocumentType.PublicId
  - System.Xml.XmlDocumentType.SystemId
  - System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlDocumentType
  nameWithType: XmlDocumentType
  fullName: System.Xml.XmlDocumentType
  type: Class
  summary: "表示文档类型声明。"
  remarks: "XmlDocumentType 类可以用于返回有关文档类型声明的信息。 使用<xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>方法以创建 XmlDocumentType 对象。</xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlDocumentType : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "初始化的新实例<xref href=&quot;System.Xml.XmlDocumentType&quot;></xref>类。"
  remarks: "不要实例化<xref:System.Xml.XmlDocumentType>直接; 相反，使用成员，如<xref:System.Xml.XmlDocument.DocumentType%2A>获取一个。</xref:System.Xml.XmlDocument.DocumentType%2A> </xref:System.Xml.XmlDocumentType>"
  syntax:
    content: protected XmlDocumentType (string name, string publicId, string systemId, string internalSubset, System.Xml.XmlDocument doc);
    parameters:
    - id: name
      type: System.String
      description: "限定的名称;请参阅<xref:System.Xml.XmlDocumentType.Name*>属性。</xref:System.Xml.XmlDocumentType.Name*>"
    - id: publicId
      type: System.String
      description: "公共标识符;请参阅<xref:System.Xml.XmlDocumentType.PublicId*>属性。</xref:System.Xml.XmlDocumentType.PublicId*>"
    - id: systemId
      type: System.String
      description: "系统标识符中;请参阅<xref:System.Xml.XmlDocumentType.SystemId*>属性。</xref:System.Xml.XmlDocumentType.SystemId*>"
    - id: internalSubset
      type: System.String
      description: "DTD 内部子集;请参阅<xref:System.Xml.XmlDocumentType.InternalSubset*>属性。</xref:System.Xml.XmlDocumentType.InternalSubset*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "父文档中。"
  overload: System.Xml.XmlDocumentType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "创建此节点的副本。"
  remarks: "此方法可作为节点的复制构造函数。 克隆的节点具有没有父级 (<xref:System.Xml.XmlNode.ParentNode%2A>返回`null`)。</xref:System.Xml.XmlNode.ParentNode%2A>       若要查看此方法与其他节点类型的行为方式，请参阅<xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>。</xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>递归地克隆指定节点; 下的子树<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>克隆节点本身。 对于文档类型节点，克隆的节点始终包含的子树，而不考虑参数的设置。"
    return:
      type: System.Xml.XmlNode
      description: "克隆的节点。"
  overload: System.Xml.XmlDocumentType.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Entities
  id: Entities
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取的集合<xref href=&quot;System.Xml.XmlEntity&quot;></xref>在文档类型声明中声明的节点。"
  remarks: "在其中返回的实体的顺序不基于这些项在文档中可能出现的顺序。 顺序也并非一定要相同相似的文档之间或不同的实现或类的版本之间。"
  example:
  - "The following example displays information about the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_1_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_1_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_1_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmldocument_1_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Entities { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "<xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref>包含<xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;></xref>节点。 返回<xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;></xref>是只读的。"
  overload: System.Xml.XmlDocumentType.Entities*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.InternalSubset
  id: InternalSubset
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取上 DOCTYPE 声明的文档类型定义 (DTD) 的内部子集的值。"
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_3_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_3_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_3_1.vb)]"
  syntax:
    content: public string InternalSubset { get; }
    return:
      type: System.String
      description: "在 DOCTYPE DTD 内部子集。 如果没有任何 DTD 内部子集，则返回 String.Empty。"
  overload: System.Xml.XmlDocumentType.InternalSubset*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取一个值，该值指示节点是否只读的。"
  remarks: "只读节点是一个无法更改其属性、 属性或子级。 但是，你可以从树中删除只读节点，并将它的其他位置。       你可以删除`XmlDocumentType`从文档并将其重新插入文档，只要文档没有元素节点。 一旦文档有一个根元素，其`XmlDocumentType`不能更改。       此属性是 Microsoft 扩展到文档对象模型 (DOM)。"
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_12_1.cpp)]\n [!code-vb[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_12_1.vb)]\n [!code-cs[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_12_1.cs)]"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该节点是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       DocumentType 节点是只读的因为此属性始终返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.XmlDocumentType.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.LocalName
  id: LocalName
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取节点的本地名称。"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "对于 DocumentType 节点，此属性返回文档类型的名称。"
  overload: System.Xml.XmlDocumentType.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Name
  id: Name
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取节点的限定的名称。"
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_5_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_5_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_5_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "对于 DocumentType 节点，此属性返回文档类型的名称。"
  overload: System.Xml.XmlDocumentType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.NodeType
  id: NodeType
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取当前节点的类型。"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "对于 DocumentType 节点，此值是 XmlNodeType.DocumentType。"
  overload: System.Xml.XmlDocumentType.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Notations
  id: Notations
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取的集合<xref href=&quot;System.Xml.XmlNotation&quot;></xref>文档中存在的节点类型声明。"
  remarks: "表示法的返回顺序不基于这些项在文档中可能出现的顺序。 顺序也并非一定要相同相似的文档之间或不同的实现或类的版本之间。"
  example:
  - "The following example displays information about the notations declared in the XML document.  \n  \n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_0_1.cs)]\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_0_1.cpp)]\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_0_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmldocument_0_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Notations { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "<xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref>包含<xref uid=&quot;langword_csharp_XmlNotation&quot; name=&quot;XmlNotation&quot; href=&quot;&quot;></xref>节点。 返回<xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;></xref>是只读的。"
  overload: System.Xml.XmlDocumentType.Notations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.PublicId
  id: PublicId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取上 DOCTYPE 声明的公共标识符的值。"
  syntax:
    content: public string PublicId { get; }
    return:
      type: System.String
      description: "DOCTYPE 上的公共标识符。 如果没有任何公共标识符<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>返回。"
  overload: System.Xml.XmlDocumentType.PublicId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.SystemId
  id: SystemId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "获取上 DOCTYPE 声明的系统标识符的值。"
  syntax:
    content: public string SystemId { get; }
    return:
      type: System.String
      description: "DOCTYPE 上的系统标识符。 如果没有任何系统标识符， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>返回。"
  overload: System.Xml.XmlDocumentType.SystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "将节点的所有子级都保存到指定的<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 有关<xref uid=&quot;langword_csharp_XmlDocumentType&quot; name=&quot;XmlDocumentType&quot; href=&quot;&quot;></xref>节点，此方法不起作用。"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref>到想要保存。"
  overload: System.Xml.XmlDocumentType.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "将节点保存到指定<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref>到想要保存。"
  overload: System.Xml.XmlDocumentType.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDocumentType.Entities
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
- uid: System.Xml.XmlNamedNodeMap
  parent: System.Xml
  isExternal: false
  name: XmlNamedNodeMap
  nameWithType: XmlNamedNodeMap
  fullName: System.Xml.XmlNamedNodeMap
- uid: System.Xml.XmlDocumentType.InternalSubset
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocumentType.Notations
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
- uid: System.Xml.XmlDocumentType.#ctor*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType
  nameWithType: XmlDocumentType.XmlDocumentType
- uid: System.Xml.XmlDocumentType.CloneNode*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode
  nameWithType: XmlDocumentType.CloneNode
- uid: System.Xml.XmlDocumentType.Entities*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
- uid: System.Xml.XmlDocumentType.InternalSubset*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
- uid: System.Xml.XmlDocumentType.Notations*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDocumentType.WriteContentTo
- uid: System.Xml.XmlDocumentType.WriteTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo
  nameWithType: XmlDocumentType.WriteTo
