### YamlMime:ManagedReference
items:
- uid: System.Resources.Tools.StronglyTypedResourceBuilder
  id: StronglyTypedResourceBuilder
  children:
  - System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  - System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  - System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  - System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  - System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)
  langs:
  - csharp
  name: StronglyTypedResourceBuilder
  nameWithType: StronglyTypedResourceBuilder
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder
  type: Class
  summary: "为强类型资源提供支持。 此类不能被继承。"
  remarks: "通常情况下，资源将代码从应用程序中的内容。 创建和使用这些资源可以更轻松地开发可本地化的应用程序。 在.NET Framework 中，会占用的资源通常通过使用<xref:System.Resources.ResourceManager>类，该类包含在运行时提供对区域性特定资源的访问的方法。</xref:System.Resources.ResourceManager> 有关创建和使用资源的详细信息，请参阅[桌面应用中的资源](~/add/includes/ajax-current-ext-md.md)。       强类型的资源支持是通过创建包含一组的静态的的类，只读封装对资源的访问一个编译时功能 (`get`) 属性。 这提供了一种替代方式来使用资源而不是调用<xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>和<xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName>方法。</xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName> </xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>       由 StronglyTypedResourceBuilder 类提供强类型的资源支持的基本功能 (以及`/str`中的命令行选项[Resgen.exe （资源文件生成器）](~/add/includes/ajax-current-ext-md.md))。 输出<xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A>方法是一个类，包含强类型的属性中输入参数引用的资源相匹配。</xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> 此类提供对可用资源的处理的文件中的只读访问。"
  example:
  - "The following example generates a class named `DemoResources` that is written in C# or Visual Basic (depending on the example's source code). This class is in the `DemoApp` namespace and has properties that return the bitmap of a logo and the name of an application. The example calls a `CreateResourceFile` method to create the necessary .resw file and requires that a bitmap file named Logo.bmp be found in the example's current directory. The code example uses the following resource file, named demo.resx:  \n  \n [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/add/codesnippet/visualbasic/t-system.resources.tools_1.vb)]\n [!code-cs[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/add/codesnippet/csharp/t-system.resources.tools_1.cs)]  \n  \n Your application code can then use the class as follows:  \n  \n [!code-cs[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/add/codesnippet/csharp/t-system.resources.tools_2.cs)]\n [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/add/codesnippet/visualbasic/t-system.resources.tools_2.vb)]"
  syntax:
    content: public static class StronglyTypedResourceBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  id: Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  langs:
  - csharp
  name: Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.Resources.Tools
  summary: "生成一个类文件，其中包含指定集合中引用的资源相匹配的强类型的属性。"
  remarks: "使用 Create 方法来生成一个类，提供强类型的只读包装，访问资源中包含的`resourceList`参数。       <xref:System.Resources.Tools.StronglyTypedResourceBuilder>类将忽略任何资源名称开头的字符&quot;$&quot;或&quot;>>&quot;。</xref:System.Resources.Tools.StronglyTypedResourceBuilder> 资源名称&quot;区域性&quot;和&quot;ResourceManager&quot;是无效的标识符。"
  syntax:
    content: public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);
    parameters:
    - id: resourceList
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>集合，其中每个字典条目键值对都是资源名称和资源的值。</xref:System.Collections.IDictionary>"
    - id: baseName
      type: System.String
      description: "要生成的类的名称。"
    - id: generatedCodeNamespace
      type: System.String
      description: "要生成的类的命名空间。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref>提供将在其中生成类使用的语言的类。"
    - id: internalClass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要生成内部类;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>生成公共类。"
    - id: unmatchable
      type: System.String[]
      description: "包含每个资源名称不能为其生成属性的数组。 通常，无法生成一个属性，因为资源名称不是有效的标识符。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>容器。"
  overload: System.Resources.Tools.StronglyTypedResourceBuilder.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>resourceList</code>, <code>basename</code>, or <code>codeProvider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "资源节点名称不匹配中的其键<code> resourceList </code>。"
  platform:
  - net462
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  id: Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  langs:
  - csharp
  name: Create(String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(String,String,String,CodeDomProvider,Boolean,String[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.Resources.Tools
  summary: "生成一个类文件，其中包含指定的.resx 文件中的资源相匹配的强类型的属性。"
  remarks: "使用 Create 方法来生成一个类，提供强类型的只读访问的资源中包含的`resxFile`参数。       <xref:System.Resources.Tools.StronglyTypedResourceBuilder>类将忽略任何资源名称开头的字符&quot;$&quot;或&quot;>>&quot;。</xref:System.Resources.Tools.StronglyTypedResourceBuilder> 资源名称&quot;区域性&quot;和&quot;ResourceManager&quot;是无效的标识符。"
  syntax:
    content: public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);
    parameters:
    - id: resxFile
      type: System.String
      description: "使用作为输入的.resx 文件的名称。"
    - id: baseName
      type: System.String
      description: "要生成的类的名称。"
    - id: generatedCodeNamespace
      type: System.String
      description: "要生成的类的命名空间。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref>提供将在其中生成类使用的语言的类。"
    - id: internalClass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要生成内部类;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>生成公共类。"
    - id: unmatchable
      type: System.String[]
      description: "A<xref:System.String>数组，其中包含每个资源名称不能为其生成属性。</xref:System.String> 通常，无法生成一个属性，因为资源名称不是有效的标识符。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>容器。"
  overload: System.Resources.Tools.StronglyTypedResourceBuilder.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>basename</code>or <code>codeProvider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  id: Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  langs:
  - csharp
  name: Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.Resources.Tools
  summary: "生成一个类文件，其中包含指定集合中引用的资源相匹配的强类型的属性。"
  remarks: "此重载使你能够使用`resourcesNamespace`参数来指定生成的资源的命名空间。 在这种情况下，生成的代码显示如下︰```   System.Resources.ResourceManager rm = new System.Resources.ResourceManager(&quot;<resourceNamespace>.<baseName>&quot;,typeof(baseName).Assembly);   ```在大多数情况下，不需要在应用程序代码中调用此方法。       <xref:System.Resources.Tools.StronglyTypedResourceBuilder>类将忽略任何资源名称开头的字符&quot;$&quot;或&quot;>>&quot;。</xref:System.Resources.Tools.StronglyTypedResourceBuilder> 资源名称&quot;区域性&quot;和&quot;ResourceManager&quot;是无效的标识符。"
  syntax:
    content: public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);
    parameters:
    - id: resourceList
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>集合，其中每个字典条目键值对都是资源名称和资源的值。</xref:System.Collections.IDictionary>"
    - id: baseName
      type: System.String
      description: "要生成的类的名称。"
    - id: generatedCodeNamespace
      type: System.String
      description: "要生成的类的命名空间。"
    - id: resourcesNamespace
      type: System.String
      description: "要生成的资源命名空间。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref>提供将在其中生成类使用的语言的对象。"
    - id: internalClass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要生成内部类;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>生成公共类。"
    - id: unmatchable
      type: System.String[]
      description: "A<xref:System.String>数组，其中包含每个资源名称不能为其生成属性。</xref:System.String> 通常，无法生成一个属性，因为资源名称不是有效的标识符。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>容器。"
  overload: System.Resources.Tools.StronglyTypedResourceBuilder.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>resourceList</code>, <code>basename</code>, or <code>codeProvider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "资源节点名称不匹配中的其键<code> resourceList </code>。"
  platform:
  - net462
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  id: Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  langs:
  - csharp
  name: Create(String,String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(String,String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(String,String,String,String,CodeDomProvider,Boolean,String[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.Resources.Tools
  summary: "生成一个类文件，其中包含指定的.resx 文件中的资源相匹配的强类型的属性。"
  remarks: "使用 Create 方法来生成一个类，提供强类型的只读访问的资源中包含的`resxFile`参数。       <xref:System.Resources.Tools.StronglyTypedResourceBuilder>类将忽略任何资源名称开头的字符&quot;$&quot;或&quot;>>&quot;。</xref:System.Resources.Tools.StronglyTypedResourceBuilder> 资源名称&quot;区域性&quot;和&quot;ResourceManager&quot;是无效的标识符。"
  syntax:
    content: public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);
    parameters:
    - id: resxFile
      type: System.String
      description: "使用作为输入的.resx 文件的名称。"
    - id: baseName
      type: System.String
      description: "要生成的类的名称。"
    - id: generatedCodeNamespace
      type: System.String
      description: "要生成的类的命名空间。"
    - id: resourcesNamespace
      type: System.String
      description: "要生成的资源命名空间。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref>提供将在其中生成类使用的语言的类。"
    - id: internalClass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要生成内部类;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>生成公共类。"
    - id: unmatchable
      type: System.String[]
      description: "A<xref:System.String>数组，其中包含每个资源名称不能为其生成属性。</xref:System.String> 通常，无法生成一个属性，因为资源名称不是有效的标识符。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>容器。"
  overload: System.Resources.Tools.StronglyTypedResourceBuilder.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>basename </code>or <code>codeProvider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)
  id: VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  langs:
  - csharp
  name: VerifyResourceName(String,CodeDomProvider)
  nameWithType: StronglyTypedResourceBuilder.VerifyResourceName(String,CodeDomProvider)
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(String,CodeDomProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Resources.Tools
  summary: "生成基于指定的输入的字符串和代码提供程序的有效的资源字符串。"
  remarks: "If the `key` parameter is a valid string of characters, that string is returned. If the `key` parameter is an invalid string or a string that contains invalid characters, the VerifyResourceName method attempts to generate a valid string based on the `key` and `provider` parameters. If a valid string can be generated, that string is returned; otherwise, `null` is returned.  \n  \n If the `key` parameter is an empty string (\"\"), a string that consists of a single underscore character (_) is returned. If the `key` parameter is not an empty string, the VerifyResourceName method compares each character in the string to a set of invalid tokens based on the language specified by the `provider` parameter. Any invalid character in the string is replaced with an underscore character. The characters that will be replaced with an underscore are as follows:  \n  \n ' ' (space), U+00A0 (non-breaking space), '.' (period), ',' (comma), ';' (semicolon), '&#124;', '~', '@', '#', '%', '^', '&', '*', '+', '-', '/', '\\\\', '\\<', '>', '?', '[', ']', '(', ')', '{', '}', '\"' (quote), ''' (apostrophe), ':', and '!'.  \n  \n> [!NOTE]\n>  Strongly typed resources do not allow the use of language keywords (such as `if`, `for`, and so on) as resource key names. However, the <xref:System.CodeDom> design pattern allows the use of language keywords by prefixing the keyword with the underscore character. The VerifyResourceName method calls the <xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> method to enforce this design. For example, if you use a resource name that is the same as a language keyword, such as `for`, the name appears as `_for` in the generated strongly typed resource class."
  syntax:
    content: public static string VerifyResourceName (string key, System.CodeDom.Compiler.CodeDomProvider provider);
    parameters:
    - id: key
      type: System.String
      description: "要验证，并如有必要，将转换为有效的资源名称的字符串。"
    - id: provider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref>对象，它指定要使用的目标语言。"
    return:
      type: System.String
      description: "有效的资源名称派生自<code> key </code>参数。 任何无效的标记替换为下划线 (_) 字符，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果派生的字符串仍包含无效字符根据所指定的语言<code> provider </code>参数。"
  overload: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(IDictionary,String,String,CodeDomProvider,Boolean,String[])
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: Create(String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(String,String,String,CodeDomProvider,Boolean,String[])
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(IDictionary,String,String,String,CodeDomProvider,Boolean,String[])
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: Create(String,String,String,String,CodeDomProvider,Boolean,String[])
  nameWithType: StronglyTypedResourceBuilder.Create(String,String,String,String,CodeDomProvider,Boolean,String[])
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.Create(String,String,String,String,CodeDomProvider,Boolean,String[])
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: VerifyResourceName(String,CodeDomProvider)
  nameWithType: StronglyTypedResourceBuilder.VerifyResourceName(String,CodeDomProvider)
  fullName: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(String,CodeDomProvider)
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.Create*
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: Create
  nameWithType: StronglyTypedResourceBuilder.Create
- uid: System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName*
  parent: System.Resources.Tools.StronglyTypedResourceBuilder
  isExternal: false
  name: VerifyResourceName
  nameWithType: StronglyTypedResourceBuilder.VerifyResourceName
