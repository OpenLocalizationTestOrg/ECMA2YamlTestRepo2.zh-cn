### YamlMime:ManagedReference
items:
- uid: System.Security.PolicyLevelType
  id: PolicyLevelType
  children:
  - System.Security.PolicyLevelType.AppDomain
  - System.Security.PolicyLevelType.Enterprise
  - System.Security.PolicyLevelType.Machine
  - System.Security.PolicyLevelType.User
  langs:
  - csharp
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
  type: Enum
  summary: "指定的托管的代码的策略级别的类型。"
  remarks: "安全策略的最高级别是企业范围。 连续较低级别的层次结构表示更多的策略限制，但永远不会授予比允许的更高级别的权限。 按顺序的策略级别如下所示。       1. 企业 2。 计算机 3。 用户为 4。 应用程序域"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum PolicyLevelType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.PolicyLevelType.AppDomain
  id: AppDomain
  parent: System.Security.PolicyLevelType
  langs:
  - csharp
  name: AppDomain
  nameWithType: PolicyLevelType.AppDomain
  fullName: System.Security.PolicyLevelType.AppDomain
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "应用程序中的所有托管代码的安全策略。"
  syntax:
    content: AppDomain
    return:
      type: System.Security.PolicyLevelType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.PolicyLevelType.Enterprise
  id: Enterprise
  parent: System.Security.PolicyLevelType
  langs:
  - csharp
  name: Enterprise
  nameWithType: PolicyLevelType.Enterprise
  fullName: System.Security.PolicyLevelType.Enterprise
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "在企业中的所有托管代码的安全策略。"
  syntax:
    content: Enterprise
    return:
      type: System.Security.PolicyLevelType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.PolicyLevelType.Machine
  id: Machine
  parent: System.Security.PolicyLevelType
  langs:
  - csharp
  name: Machine
  nameWithType: PolicyLevelType.Machine
  fullName: System.Security.PolicyLevelType.Machine
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "在计算机运行的所有托管代码的安全策略。"
  syntax:
    content: Machine
    return:
      type: System.Security.PolicyLevelType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.PolicyLevelType.User
  id: User
  parent: System.Security.PolicyLevelType
  langs:
  - csharp
  name: User
  nameWithType: PolicyLevelType.User
  fullName: System.Security.PolicyLevelType.User
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "用户运行的所有托管代码的安全策略。"
  syntax:
    content: User
    return:
      type: System.Security.PolicyLevelType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.PolicyLevelType.AppDomain
  parent: System.Security.PolicyLevelType
  isExternal: false
  name: AppDomain
  nameWithType: PolicyLevelType.AppDomain
  fullName: System.Security.PolicyLevelType.AppDomain
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.PolicyLevelType.Enterprise
  parent: System.Security.PolicyLevelType
  isExternal: false
  name: Enterprise
  nameWithType: PolicyLevelType.Enterprise
  fullName: System.Security.PolicyLevelType.Enterprise
- uid: System.Security.PolicyLevelType.Machine
  parent: System.Security.PolicyLevelType
  isExternal: false
  name: Machine
  nameWithType: PolicyLevelType.Machine
  fullName: System.Security.PolicyLevelType.Machine
- uid: System.Security.PolicyLevelType.User
  parent: System.Security.PolicyLevelType
  isExternal: false
  name: User
  nameWithType: PolicyLevelType.User
  fullName: System.Security.PolicyLevelType.User
