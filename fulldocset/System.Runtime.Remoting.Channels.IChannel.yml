### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IChannel
  id: IChannel
  children:
  - System.Runtime.Remoting.Channels.IChannel.ChannelName
  - System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: IChannel
  nameWithType: IChannel
  fullName: System.Runtime.Remoting.Channels.IChannel
  type: Interface
  summary: "程序跨越远程处理边界的消息中提供的管道。"
  remarks: "远程处理边界可以是<xref:System.Runtime.Remoting.Contexts.Context>s， <xref:System.AppDomain>s、 进程或计算机。</xref:System.AppDomain> </xref:System.Runtime.Remoting.Contexts.Context> 只能通过使用通道，应用程序可以跨这些边界。 这些交叉可以是入站和出站。 通道可以侦听终结点上的入站消息，将发送给出站消息，还是两者都的终结点。 这提供了在运行时中插入范围广泛的协议，一个扩展点，即使运行时可能不是在另一端的通道。       运行时对象可用于表示宽丰富的语义和实体集。 通道提供要将消息转换与特定协议的扩展点。 如果有在两个通道端的运行时，两个端点，若要连接的边界任何一侧的客户端和服务器接收器链之间创建虚拟通道。       通道的客户端部分是位于客户端上下文接收器链的结尾。 通道的服务器部分位于服务器上下文接收器链的起点。 消息传递到客户端通道使用<xref:System.Runtime.Remoting.Messaging.IMessageSink>接口、 传输通道，也然后接收服务器通道。</xref:System.Runtime.Remoting.Messaging.IMessageSink> 服务器通道将消息传送至第一个服务器上下文接收器。       通道必须公开 IChannel 接口，提供信息性的属性，如<xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A>和<xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A>属性。</xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> </xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> 可以使用注册通道<xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>方法。</xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IChannel
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "获取通道的名称。"
  remarks: ''
  example:
  - >-
    [!code-cpp[HttpServerChannel_Server_Client#2](~/add/codesnippet/cpp/p-system.runtime.remotin_0_1.cpp)]
     [!code-cs[HttpServerChannel_Server_Client#2](~/add/codesnippet/csharp/p-system.runtime.remotin_0_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#2](~/add/codesnippet/visualbasic/p-system.runtime.remotin_0_1.vb)]
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "通道的名称。"
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "获取通道的优先级。"
  remarks: "较高的数字指定更高的优先级，以使具有优先级 50 的通道的优先级高于通道使用优先级为 25。 跨应用程序域的信道的优先级为 100。       可以连接到指定的 URL，也可以从一种<xref:System.Runtime.Remoting.ObjRef>。</xref:System.Runtime.Remoting.ObjRef>的特定通道数据条目的远程对象的第一个机会优先级较高的客户端通道。       对于服务器信道，优先级指示将在其中其通道数据显示中的顺序<xref:System.Runtime.Remoting.ObjRef>，这反过来会影响客户端将尝试连接到服务器对象的顺序。</xref:System.Runtime.Remoting.ObjRef> 如果服务器正在侦听具有优先级 50 一个 HTTP 通道以及具有优先级为 25 的 TCP 通道，并且客户端已注册了 HTTP 和 TCP 通道，则客户端将使用 HTTP 通道与服务器通信。"
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/p-system.runtime.remotin_5_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/p-system.runtime.remotin_5_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/p-system.runtime.remotin_5_1.cpp)]
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "一个整数，指示通道的优先级。"
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "返回对象 URI 作为输出参数，并作为返回值的当前通道的 URI。"
  remarks: ''
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/m-system.runtime.remotin_15_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/m-system.runtime.remotin_15_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/m-system.runtime.remotin_15_1.cpp)]
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "对象的 URL。"
    - id: objectURI
      type: System.String
      description: "此方法返回时，包含<xref:System.String>，用于保存对象 URI。</xref:System.String> 此参数传递时未经初始化。"
    return:
      type: System.String
      description: "当前通道的 URI 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果 URI 不属于此通道。"
  overload: System.Runtime.Remoting.Channels.IChannel.Parse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.IChannel.Parse*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse
  nameWithType: IChannel.Parse
