### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IProcessInitializer
  id: IProcessInitializer
  children:
  - System.EnterpriseServices.IProcessInitializer.Shutdown
  - System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  langs:
  - csharp
  name: IProcessInitializer
  nameWithType: IProcessInitializer
  fullName: System.EnterpriseServices.IProcessInitializer
  type: Interface
  summary: "支持的 COM 组件启动或关闭时可以调用的方法。"
  remarks: "如果你想要时服务器进程 (Dllhost.exe) 启动或关闭，分别运行初始化或关闭代码，请在服务组件中实现 IProcessInitializer 接口方法。       COM + 提供`Startup`和`Shutdown`Dllhost.exe 开始和结束时的事件。 此功能允许任何安装在 COM + 服务器应用程序 （称为服务器组件以后） 来运行自定义初始化和清理代码的 COM + 组件。 将创建和存储的持续时间内的进程，并在启动和关闭过程中调用接口方法上实现 IProcessInitializer 接口的每个组件的实例。 在上实现时<xref:System.EnterpriseServices.ServicedComponent>，该组件，注册期间`InitializesServerApplication`中的参数`COMAdminCatalogObject`内组件集合设置为`true`。</xref:System.EnterpriseServices.ServicedComponent>       使用`Startup`和`Shutdown`事件，你可以初始化资源、 创建连接、 初始化共享数据，并运行清理代码。 但是，你不能访问不特定于 COM +，因为尚未创建的服务器组件实例的状态。 此外中的代码`Startup`和`Shutdown`事件应尽可能快地返回，因为系统等待 90 秒仅针对 Dllhost.exe 若要准备接受激活，则在系统启动过程。 如果 Dllhost.exe 不发出信号，就可以在 90 秒内，系统会结束该进程;因此，所有的初始化处理需要在此时限内完成。 参与初始化每个服务器组件必须支持 IProcessInitializer 接口。 在 DllHost.exe 启动 COM + 创建请求此服务，调用的所有服务器组件`QueryInterface`IProcessInitializer 接口，并调用<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>函数。</xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> 同样，当 DllHost.exe 进程关闭的情况下，它将调用<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>函数对以前存储的接口指针。</xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IProcessInitializer
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  id: Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "执行关闭操作。 当 Dllhost.exe 关闭时调用。"
  remarks: "Failfast 或其他灾难性关闭事件过程中没有调用关闭。"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.EnterpriseServices.IProcessInitializer.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  id: Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "执行在启动时初始化。 启动 Dllhost.exe 时调用。"
  remarks: "所引用的对象`punkProcessControl`实现<xref:System.EnterpriseServices.IProcessInitControl>接口。</xref:System.EnterpriseServices.IProcessInitControl> <xref:System.EnterpriseServices.IProcessInitControl>支持单个方法<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A></xref:System.EnterpriseServices.IProcessInitControl>       中启动的初始化代码可以调用<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>，且超时的值将设置为等于在组件超时的启动之前剩余的秒数。</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>"
  syntax:
    content: public void Startup (object punkProcessControl);
    parameters:
    - id: punkProcessControl
      type: System.Object
      description: "在 Microsoft Windows XP 中，指向的指针<xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;></xref>启动的 COM 组件的接口。 在 Microsoft Windows 2000 中，此自变量始终是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.IProcessInitializer.Startup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown
  nameWithType: IProcessInitializer.Shutdown
- uid: System.EnterpriseServices.IProcessInitializer.Startup*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup
  nameWithType: IProcessInitializer.Startup
