### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Form
  id: Form
  children:
  - System.Windows.Forms.Form.#ctor
  - System.Windows.Forms.Form.AcceptButton
  - System.Windows.Forms.Form.Activate
  - System.Windows.Forms.Form.Activated
  - System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.ActiveForm
  - System.Windows.Forms.Form.ActiveMdiChild
  - System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  - System.Windows.Forms.Form.AllowTransparency
  - System.Windows.Forms.Form.ApplyAutoScaling
  - System.Windows.Forms.Form.AutoScale
  - System.Windows.Forms.Form.AutoScaleBaseSize
  - System.Windows.Forms.Form.AutoScroll
  - System.Windows.Forms.Form.AutoSize
  - System.Windows.Forms.Form.AutoSizeChanged
  - System.Windows.Forms.Form.AutoSizeMode
  - System.Windows.Forms.Form.AutoValidate
  - System.Windows.Forms.Form.AutoValidateChanged
  - System.Windows.Forms.Form.BackColor
  - System.Windows.Forms.Form.CancelButton
  - System.Windows.Forms.Form.CenterToParent
  - System.Windows.Forms.Form.CenterToScreen
  - System.Windows.Forms.Form.ClientSize
  - System.Windows.Forms.Form.Close
  - System.Windows.Forms.Form.Closed
  - System.Windows.Forms.Form.Closing
  - System.Windows.Forms.Form.ControlBox
  - System.Windows.Forms.Form.CreateControlsInstance
  - System.Windows.Forms.Form.CreateHandle
  - System.Windows.Forms.Form.CreateParams
  - System.Windows.Forms.Form.Deactivate
  - System.Windows.Forms.Form.DefaultImeMode
  - System.Windows.Forms.Form.DefaultSize
  - System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Form.DesktopBounds
  - System.Windows.Forms.Form.DesktopLocation
  - System.Windows.Forms.Form.DialogResult
  - System.Windows.Forms.Form.Dispose(System.Boolean)
  - System.Windows.Forms.Form.FormBorderStyle
  - System.Windows.Forms.Form.FormClosed
  - System.Windows.Forms.Form.FormClosing
  - System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  - System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.HelpButton
  - System.Windows.Forms.Form.HelpButtonClicked
  - System.Windows.Forms.Form.Icon
  - System.Windows.Forms.Form.InputLanguageChanged
  - System.Windows.Forms.Form.InputLanguageChanging
  - System.Windows.Forms.Form.IsMdiChild
  - System.Windows.Forms.Form.IsMdiContainer
  - System.Windows.Forms.Form.IsRestrictedWindow
  - System.Windows.Forms.Form.KeyPreview
  - System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  - System.Windows.Forms.Form.Load
  - System.Windows.Forms.Form.Location
  - System.Windows.Forms.Form.MainMenuStrip
  - System.Windows.Forms.Form.Margin
  - System.Windows.Forms.Form.MarginChanged
  - System.Windows.Forms.Form.MaximizeBox
  - System.Windows.Forms.Form.MaximizedBounds
  - System.Windows.Forms.Form.MaximizedBoundsChanged
  - System.Windows.Forms.Form.MaximumSize
  - System.Windows.Forms.Form.MaximumSizeChanged
  - System.Windows.Forms.Form.MdiChildActivate
  - System.Windows.Forms.Form.MdiChildren
  - System.Windows.Forms.Form.MdiParent
  - System.Windows.Forms.Form.Menu
  - System.Windows.Forms.Form.MenuComplete
  - System.Windows.Forms.Form.MenuStart
  - System.Windows.Forms.Form.MergedMenu
  - System.Windows.Forms.Form.MinimizeBox
  - System.Windows.Forms.Form.MinimumSize
  - System.Windows.Forms.Form.MinimumSizeChanged
  - System.Windows.Forms.Form.Modal
  - System.Windows.Forms.Form.OnActivated(System.EventArgs)
  - System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnClosed(System.EventArgs)
  - System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Form.OnCreateControl
  - System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  - System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnEnter(System.EventArgs)
  - System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  - System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  - System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  - System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  - System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Form.OnLoad(System.EventArgs)
  - System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  - System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  - System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  - System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Form.OnResize(System.EventArgs)
  - System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  - System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  - System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnShown(System.EventArgs)
  - System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Form.Opacity
  - System.Windows.Forms.Form.OwnedForms
  - System.Windows.Forms.Form.Owner
  - System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  - System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.ResizeBegin
  - System.Windows.Forms.Form.ResizeEnd
  - System.Windows.Forms.Form.RestoreBounds
  - System.Windows.Forms.Form.RightToLeftLayout
  - System.Windows.Forms.Form.RightToLeftLayoutChanged
  - System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.Form.ShowDialog
  - System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.Form.ShowIcon
  - System.Windows.Forms.Form.ShowInTaskbar
  - System.Windows.Forms.Form.Shown
  - System.Windows.Forms.Form.ShowWithoutActivation
  - System.Windows.Forms.Form.Size
  - System.Windows.Forms.Form.SizeGripStyle
  - System.Windows.Forms.Form.StartPosition
  - System.Windows.Forms.Form.TabIndex
  - System.Windows.Forms.Form.TabIndexChanged
  - System.Windows.Forms.Form.TabStop
  - System.Windows.Forms.Form.TabStopChanged
  - System.Windows.Forms.Form.Text
  - System.Windows.Forms.Form.TopLevel
  - System.Windows.Forms.Form.TopMost
  - System.Windows.Forms.Form.ToString
  - System.Windows.Forms.Form.TransparencyKey
  - System.Windows.Forms.Form.UpdateDefaultButton
  - System.Windows.Forms.Form.ValidateChildren
  - System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  - System.Windows.Forms.Form.WindowState
  - System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
  type: Class
  summary: "表示组成应用程序的用户界面的窗口或对话框框。"
  remarks: "表单是在你的应用程序中显示任何窗口的表示形式。 窗体类可以用于创建标准、 工具中无边框和浮动窗口。 窗体类还可用于创建模式窗口，如对话框。 一种特殊的窗体中，多文档界面 (MDI) 窗体中，可以包含其他调用 MDI 子窗体的窗体。 通过设置创建的 MDI 窗体<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性`true`。</xref:System.Windows.Forms.Form.IsMdiContainer%2A> 通过设置来创建 MDI 子窗体<xref:System.Windows.Forms.Form.MdiParent%2A>到 MDI 父窗体将包含的子窗体的属性。</xref:System.Windows.Forms.Form.MdiParent%2A>       使用窗体类中可用的属性，可以确定要创建的窗口或对话框中的外观、 大小、 颜色和窗口管理功能。 <xref:System.Windows.Forms.Control.Text%2A>属性允许您指定的标题栏中的窗口的标题</xref:System.Windows.Forms.Control.Text%2A> <xref:System.Windows.Forms.Form.Size%2A>和<xref:System.Windows.Forms.Form.DesktopLocation%2A>属性允许你定义的大小和窗口的位置，显示时会被。</xref:System.Windows.Forms.Form.DesktopLocation%2A> </xref:System.Windows.Forms.Form.Size%2A> 你可以使用<xref:System.Windows.Forms.Control.ForeColor%2A>颜色属性可以更改的默认前景色的所有控件置于窗体。</xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>属性允许您控制窗体可以最小化、 最大化时，或在运行时调整大小时是否。</xref:System.Windows.Forms.Form.MaximizeBox%2A> </xref:System.Windows.Forms.Form.MinimizeBox%2A> </xref:System.Windows.Forms.Form.FormBorderStyle%2A>       除了属性外，你可以使用类的方法来操作窗体。 例如，你可以使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法来显示某个窗体作为模式对话框。</xref:System.Windows.Forms.Form.ShowDialog%2A> 你可以使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>方法在桌面上定位窗体。</xref:System.Windows.Forms.Form.SetDesktopLocation%2A>       Form 类的事件可用于响应窗体上执行的操作。 你可以使用<xref:System.Windows.Forms.Form.Activated>事件以执行操作，例如更新时激活该窗体的窗体控件中显示的数据。</xref:System.Windows.Forms.Form.Activated>       你可以使用窗体作为起始类在你的应用程序通过将调用的方法`Main`类中。 在`Main`方法添加代码以创建并显示窗体。 你还需要添加`STAThread`属性设为`Main`按顺序运行的表单的方法。 当启动窗体关闭时，应用程序也将关闭。       如果你设置<xref:System.Windows.Forms.Control.Enabled%2A>属性`false`窗体可见之前 (例如，设置<xref:System.Windows.Forms.Control.Enabled%2A>中为 false[!INCLUDE[TLA#tla_visualstu](~/add/includes/tlasharptla-visualstu-md.md)]设计器)，则最小化，使最大化，关闭和的系统按钮，保持启用状态。</xref:System.Windows.Forms.Control.Enabled%2A> </xref:System.Windows.Forms.Control.Enabled%2A> 如果你设置<xref:System.Windows.Forms.Control.Enabled%2A>到`false`窗体可见 （例如，在负载事件发生时） 后，会禁用该按钮。</xref:System.Windows.Forms.Control.Enabled%2A>"
  example:
  - "The following code example creates a new instance of a Form and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_4_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_4_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Form")]

      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.InitializationEvent("Load")]

      [System.ComponentModel.ToolboxItem(false)]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Form : System.Windows.Forms.ContainerControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ScrollableControl
  - System.Windows.Forms.ContainerControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.ContainerControl.ActiveControl
  - System.Windows.Forms.ContainerControl.AutoScaleDimensions
  - System.Windows.Forms.ContainerControl.AutoScaleFactor
  - System.Windows.Forms.ContainerControl.AutoScaleMode
  - System.Windows.Forms.ContainerControl.BindingContext
  - System.Windows.Forms.ContainerControl.CanEnableIme
  - System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions
  - System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)
  - System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ContainerControl.ParentForm
  - System.Windows.Forms.ContainerControl.PerformAutoScale
  - System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)
  - System.Windows.Forms.ContainerControl.Validate
  - System.Windows.Forms.ContainerControl.Validate(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BackgroundImage
  - System.Windows.Forms.Control.BackgroundImageChanged
  - System.Windows.Forms.Control.BackgroundImageLayout
  - System.Windows.Forms.Control.BackgroundImageLayoutChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.Click
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColor
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseClick
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.Padding
  - System.Windows.Forms.Control.PaddingChanged
  - System.Windows.Forms.Control.Paint
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ScrollableControl.AutoScrollMargin
  - System.Windows.Forms.ScrollableControl.AutoScrollMinSize
  - System.Windows.Forms.ScrollableControl.AutoScrollPosition
  - System.Windows.Forms.ScrollableControl.DisplayRectangle
  - System.Windows.Forms.ScrollableControl.DockPadding
  - System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)
  - System.Windows.Forms.ScrollableControl.HorizontalScroll
  - System.Windows.Forms.ScrollableControl.HScroll
  - System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)
  - System.Windows.Forms.ScrollableControl.Scroll
  - System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)
  - System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling
  - System.Windows.Forms.ScrollableControl.ScrollStateFullDrag
  - System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible
  - System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled
  - System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible
  - System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)
  - System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)
  - System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)
  - System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)
  - System.Windows.Forms.ScrollableControl.VerticalScroll
  - System.Windows.Forms.ScrollableControl.VScroll
  platform:
  - net462
- uid: System.Windows.Forms.Form.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Form()
  nameWithType: Form.Form()
  fullName: System.Windows.Forms.Form.Form()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.Form&quot;></xref>类。"
  remarks: "窗体的默认大小为 300 像素高度和宽度的 300 像素。"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_12_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_12_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_12_1.vb)]"
  syntax:
    content: public Form ();
    parameters: []
  overload: System.Windows.Forms.Form.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AcceptButton
  id: AcceptButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AcceptButton
  nameWithType: Form.AcceptButton
  fullName: System.Windows.Forms.Form.AcceptButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当用户按下 ENTER 键时所单击的窗体上的按钮。"
  remarks: "此属性可指定用户在你的应用程序中按 ENTER 键时要发生的默认操作。 必须是分配给此属性的按钮<xref:System.Windows.Forms.IButtonControl>当前窗体上或位于当前窗体上的容器。</xref:System.Windows.Forms.IButtonControl>       此属性可用于允许用户能够快速导航是允许他们只需按 ENTER 键，而不是手动单击用鼠标接受按钮完成时的一种简单形式。       如果窗体上的当前所选的控件截获 ENTER 键，并处理它，可能未激活接受按钮。 例如，多行文本框控件允许选择要在控件中插入新行字符时按 ENTER 键。"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, AcceptButton, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_47_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_47_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_47_1.vb)]"
  syntax:
    content: public System.Windows.Forms.IButtonControl AcceptButton { get; set; }
    return:
      type: System.Windows.Forms.IButtonControl
      description: "<xref href=&quot;System.Windows.Forms.IButtonControl&quot;> </xref>它表示要用作窗体的接受按钮的按钮。"
  overload: System.Windows.Forms.Form.AcceptButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Activate
  id: Activate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Activate()
  nameWithType: Form.Activate()
  fullName: System.Windows.Forms.Form.Activate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "激活窗体并给予它焦点。"
  remarks: "激活窗体将它置于顶层如果这是活动的应用程序，或如果这不是活动的应用程序，它会闪烁窗口标题。 该窗体必须可见才能产生任何影响此方法。 若要确定活动窗体应用程序中的，使用<xref:System.Windows.Forms.Form.ActiveForm%2A>属性或<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>如果窗体中的多文档界面 (MDI) 应用程序的属性。</xref:System.Windows.Forms.Form.ActiveMdiChild%2A> </xref:System.Windows.Forms.Form.ActiveForm%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and Activate members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/m-system.windows.forms.f_5_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_5_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/m-system.windows.forms.f_5_1.cpp)]"
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.Windows.Forms.Form.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Activated
  id: Activated
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Activated
  nameWithType: Form.Activated
  fullName: System.Windows.Forms.Form.Activated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在代码或由用户激活该窗体时发生。"
  remarks: "> [!NOTE]1> 当应用程序处于活动状态，并且具有多个窗体，活动窗体是具有输入焦点的窗体。 不可见的窗体不能为活动窗体。 激活可见的窗体的最简单方法是单击它或使用相应的键盘组合。       若要在运行时使用代码激活窗体，调用<xref:System.Windows.Forms.Form.Activate%2A>方法。</xref:System.Windows.Forms.Form.Activate%2A> 例如，更新基于未激活窗体时对窗体的数据所做的更改窗体的内容的任务，你可以使用此事件。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, Activated, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_18_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_18_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_18_1.cpp)]"
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  id: ActivateMdiChild(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActivateMdiChild(Form)
  nameWithType: Form.ActivateMdiChild(Form)
  fullName: System.Windows.Forms.Form.ActivateMdiChild(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "激活窗体的 MDI 子级。"
  remarks: "如果`form`参数已是活动的 MDI 子窗体，则 ActivateMdiChild 方法只返回。 如果`form`不`null`，则设置为活动的 MDI 子窗体。       是否`form`参数是`null`或不是，ActivateMdiChild 引发<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</xref:System.Windows.Forms.Form.MdiChildActivate>"
  syntax:
    content: protected void ActivateMdiChild (System.Windows.Forms.Form form);
    parameters:
    - id: form
      type: System.Windows.Forms.Form
      description: "要激活的子窗体。"
  overload: System.Windows.Forms.Form.ActivateMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActiveForm
  id: ActiveForm
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActiveForm
  nameWithType: Form.ActiveForm
  fullName: System.Windows.Forms.Form.ActiveForm
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取此应用程序的当前活动窗体。"
  remarks: "此方法可用于获取对当前活动窗体在窗体或其控件上执行操作的引用。       如果你的应用程序的多文档界面 (MDI) 应用程序，请使用<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>属性来获取当前处于活动状态的 MDI 子窗体。</xref:System.Windows.Forms.Form.ActiveMdiChild%2A>"
  example:
  - "The following code example gets the active form and disables all the controls on the form. The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.  \n  \n [!code-cpp[Classic Form.ActiveForm Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_9_1.cpp)]\n [!code-vb[Classic Form.ActiveForm Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_9_1.vb)]\n [!code-cs[Classic Form.ActiveForm Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_9_1.cs)]"
  syntax:
    content: public static System.Windows.Forms.Form ActiveForm { get; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> ，它表示当前活动窗体，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果没有活动窗体。"
  overload: System.Windows.Forms.Form.ActiveForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActiveMdiChild
  id: ActiveMdiChild
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
  fullName: System.Windows.Forms.Form.ActiveMdiChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取当前处于活动状态多文档界面 (MDI) 子窗口。"
  remarks: "此方法可用于确定是否有任何 MDI 子窗体在 MDI 应用程序中打开。 此方法还可用于执行操作的 MDI 子窗口上，从其 MDI 父窗体或显示在你的应用程序的另一种形式。       如果当前活动窗体不是 MDI 子窗体，则可以使用<xref:System.Windows.Forms.Form.ActiveForm%2A>属性来获取对它的引用</xref:System.Windows.Forms.Form.ActiveForm%2A>"
  example:
  - "The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties. This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.  \n  \n [!code-cs[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_38_1.cs)]\n [!code-vb[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_38_1.vb)]\n [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_38_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Form ActiveMdiChild { get; }
    return:
      type: System.Windows.Forms.Form
      description: "返回<xref href=&quot;System.Windows.Forms.Form&quot;> </xref> ，表示当前处于活动状态的 MDI 子窗口，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果目前没有子窗口。"
  overload: System.Windows.Forms.Form.ActiveMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  id: AddOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AddOwnedForm(Form)
  nameWithType: Form.AddOwnedForm(Form)
  fullName: System.Windows.Forms.Form.AddOwnedForm(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向此窗体添加附属窗体。"
  remarks: "分配给所有者窗体的窗体将保持被拥有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>调用方法。</xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 你还可以通过设置拥有的另一个窗体<xref:System.Windows.Forms.Form.Owner%2A>属性对其所有者窗体的引用。</xref:System.Windows.Forms.Form.Owner%2A>       当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。 例如，考虑名为窗体`Form2`归名为窗体`Form1`。 如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。 附属窗体还永远不会显示在其所有者的窗体后面。 可以拥有的窗体以 windows 使用如查找和替换 windows，不应在选择所有者窗体时显示在所有者窗体。      1> [!NOTE]&1;> 如果窗体是多文档界面 (MDI) 父窗体，此属性返回当前打开任何 MDI 子窗体除了显示的所有窗体。 若要获取在 MDI 父窗体中打开的 MDI 子窗体，请使用<xref:System.Windows.Forms.Form.MdiChildren%2A>属性。</xref:System.Windows.Forms.Form.MdiChildren%2A>"
  example:
  - "The following code example demonstrates how to use the AddOwnedForm method to display a form as an owned form of another form. Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it. The example requires that the code in the example is called from another event or method of a form.  \n  \n [!code-cs[Form.AddOwnedForm#1](~/add/codesnippet/csharp/m-system.windows.forms.f_3_1.cs)]\n [!code-cpp[Form.AddOwnedForm#1](~/add/codesnippet/cpp/m-system.windows.forms.f_3_1.cpp)]\n [!code-vb[Form.AddOwnedForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_3_1.vb)]"
  syntax:
    content: public void AddOwnedForm (System.Windows.Forms.Form ownedForm);
    parameters:
    - id: ownedForm
      type: System.Windows.Forms.Form
      description: "<xref href=&quot;System.Windows.Forms.Form&quot;> </xref>将拥有此窗体。"
  overload: System.Windows.Forms.Form.AddOwnedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  id: AdjustFormScrollbars(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AdjustFormScrollbars(Boolean)
  nameWithType: Form.AdjustFormScrollbars(Boolean)
  fullName: System.Windows.Forms.Form.AdjustFormScrollbars(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "调整根据当前控件位置的容器和当前所选控件的滚动条。"
  syntax:
    content: protected override void AdjustFormScrollbars (bool displayScrollbars);
    parameters:
    - id: displayScrollbars
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要显示滚动条中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.AdjustFormScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AllowTransparency
  id: AllowTransparency
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
  fullName: System.Windows.Forms.Form.AllowTransparency
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示能否调整窗体的不透明度。"
  remarks: "此属性自动设置为`true`如果`Opacity`更改。 当使用设置窗体的不透明度`Opacity`属性，该窗体将窗体上的对象进行分层。 如果 AllowTransparency 属性设置为`false`窗体不会在分层的模式下，这将提高窗体显示性能。"
  syntax:
    content: public bool AllowTransparency { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以更改窗体的不透明度;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.AllowTransparency*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ApplyAutoScaling
  id: ApplyAutoScaling
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ApplyAutoScaling()
  nameWithType: Form.ApplyAutoScaling()
  fullName: System.Windows.Forms.Form.ApplyAutoScaling()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "调整窗体的当前值根据<xref:System.Windows.Forms.Form.AutoScaleBaseSize*>属性和当前字体的大小。</xref:System.Windows.Forms.Form.AutoScaleBaseSize*>"
  remarks: "此方法可确定使用的值的窗体大小<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性和<xref:System.Windows.Forms.Form.Size%2A>返回值<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> </xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>"
  syntax:
    content: protected void ApplyAutoScaling ();
    parameters: []
  overload: System.Windows.Forms.Form.ApplyAutoScaling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScale
  id: AutoScale
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScale
  nameWithType: Form.AutoScale
  fullName: System.Windows.Forms.Form.AutoScale
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否调整其大小以适合该窗体上使用的字体的高度和缩放其控件。"
  remarks: "> [!IMPORTANT]1> 自动缩放已过时，已被保留用于向后兼容。 未过时的替代项为<xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>。</xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName> 有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/add/includes/ajax-current-ext-md.md)。       可以使用此属性以允许你的窗体，并为自动调整其控件基于的字体中的更改。 这可在应用程序字体其中可能会增加或减少基于由 Windows 为使用指定的语言。       以获取要使用比例的窗体将自动的大小<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性。</xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 如果你想要确定大小窗体将自动调整为根据特定的字体，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>"
  syntax:
    content: public bool AutoScale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体将自动缩放本身及其控件根据分配给窗体; 的当前字体，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.AutoScale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScaleBaseSize
  id: AutoScaleBaseSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
  fullName: System.Windows.Forms.Form.AutoScaleBaseSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置用于自动缩放窗体的基大小。"
  remarks: "> [!IMPORTANT]1> 此成员已保留用于向后兼容。 有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/add/includes/ajax-current-ext-md.md)。       在窗体显示时间使用 AutoScaleBaseSize 属性的值来计算窗体的缩放因子。 自动缩放基大小用于由窗体作为基准比较到系统的字体大小来确定多少使用自动缩放时缩放窗体。 如果你想要确定大小窗体将自动调整为根据特定的字体，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>      1> [!NOTE]&1;> 最初创建窗体时使用此属性的值。 一旦设置该属性，它不能更改。"
  syntax:
    content: public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> ，表示此窗体用于自动缩放的基大小。"
  overload: System.Windows.Forms.Form.AutoScaleBaseSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScroll
  id: AutoScroll
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScroll
  nameWithType: Form.AutoScroll
  fullName: System.Windows.Forms.Form.AutoScroll
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否启用自动滚动。"
  remarks: "如果此属性设置为`true`，如果任何控件位于窗体的客户端区域外窗体上显示滚动条。 此外，当自动滚动时，窗体的工作区自动滚动，以使具有输入焦点的控件可见。       此属性可用于防止用户会失去其视频分辨率设置被设置为较低的分辨率时查看控件的能力。"
  example:
  - "The following code example demonstrates how to use the AutoScroll property to enable the display of controls that are outsize the client area of a form. The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form. The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form. The AutoScroll property is set to true to display scroll bars on the form to enable the user to scroll to the control. This example requires that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-vb[Form.AutoScroll#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_28_1.vb)]\n [!code-cpp[Form.AutoScroll#1](~/add/codesnippet/cpp/p-system.windows.forms.f_28_1.cpp)]\n [!code-cs[Form.AutoScroll#1](~/add/codesnippet/csharp/p-system.windows.forms.f_28_1.cs)]"
  syntax:
    content: public override bool AutoScroll { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要启用自动滚动窗体中。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.AutoScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSize
  nameWithType: Form.AutoSize
  fullName: System.Windows.Forms.Form.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "调整大小根据<xref:System.Windows.Forms.Form.AutoSizeMode*>.</xref:System.Windows.Forms.Form.AutoSizeMode*>的设置在窗体"
  remarks: "使用 AutoSize 强制窗体调整大小以适应其内容。       窗体不会自动调整大小，在 Visual Studio 窗体设计器中，而不考虑自动调整大小的值和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>属性。</xref:System.Windows.Forms.Form.AutoSizeMode%2A> 窗体正确调整自身大小在运行时根据这两个属性的值。 与之相反，自定义<xref:System.Windows.Forms.UserControl>自动调整自身大小在设计时和运行时。</xref:System.Windows.Forms.UserControl>       当使用 AutoSize，<xref:System.Windows.Forms.Control.MinimumSize%2A>和<xref:System.Windows.Forms.Control.MaximumSize%2A>遵循属性，但的当前值<xref:System.Windows.Forms.Control.Size%2A>属性将被忽略。</xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.MaximumSize%2A> </xref:System.Windows.Forms.Control.MinimumSize%2A> 使用 AutoSize 和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>还会呈现<xref:System.Windows.Forms.Form.AutoScroll%2A>多余的因为没有无法收缩要隐藏视图从其所含的控件的窗体的属性。</xref:System.Windows.Forms.Form.AutoScroll%2A> </xref:System.Windows.Forms.Form.AutoSizeMode%2A>       请参阅<xref:System.Windows.Forms.AutoSizeMode>有关窗体时自动调整大小的行为的枚举`true`。</xref:System.Windows.Forms.AutoSizeMode>"
  example:
  - "The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \n  \n [!code-vb[Form.AutoSize#1](~/add/codesnippet/visualbasic/AutoSizeProjectVB/Form1.vb#1)]\n [!code-cs[Form.AutoSize#1](~/add/codesnippet/csharp/AutoSizeProject/Form1.cs#1)]"
  syntax:
    content: public override bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体将自动调整大小;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果必须手动调整。"
  overload: System.Windows.Forms.Form.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: Form.AutoSizeChanged
  fullName: System.Windows.Forms.Form.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时<xref:System.Windows.Forms.Form.AutoSize*>属性更改。</xref:System.Windows.Forms.Form.AutoSize*>"
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSizeMode
  id: AutoSizeMode
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
  fullName: System.Windows.Forms.Form.AutoSizeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体自动调整自身大小的模式。"
  remarks: "AutoSizeMode 属性设置为新值会导致要再次布局的窗体。       窗体不会自动调整大小，在 Visual Studio 窗体设计器中，而不考虑的值<xref:System.Windows.Forms.Form.AutoSize%2A>和 AutoSizeMode 属性。</xref:System.Windows.Forms.Form.AutoSize%2A> 窗体正确调整自身大小在运行时根据这两个属性的值。 与之相反，自定义<xref:System.Windows.Forms.UserControl>自动调整自身大小在设计时和运行时。</xref:System.Windows.Forms.UserControl>"
  example:
  - "The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \n  \n [!code-vb[Form.AutoSize#1](~/add/codesnippet/visualbasic/AutoSizeProjectVB/Form1.vb#1)]\n [!code-cs[Form.AutoSize#1](~/add/codesnippet/csharp/AutoSizeProject/Form1.cs#1)]"
  syntax:
    content: public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }
    return:
      type: System.Windows.Forms.AutoSizeMode
      description: "<xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref>枚举值。 默认值是<xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref>。"
  overload: System.Windows.Forms.Form.AutoSizeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "值不是有效<xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoValidate
  id: AutoValidate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoValidate
  nameWithType: Form.AutoValidate
  fullName: System.Windows.Forms.Form.AutoValidate
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示当焦点更改时是否自动验证此容器中的控件。"
  syntax:
    content: public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }
    return:
      type: System.Windows.Forms.AutoValidate
      description: "<xref href=&quot;System.Windows.Forms.AutoValidate&quot;> </xref>枚举值，该值指示是否焦点更改隐式验证所含的控件。 默认值为继承。"
  overload: System.Windows.Forms.Form.AutoValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoValidateChanged
  id: AutoValidateChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoValidateChanged
  nameWithType: Form.AutoValidateChanged
  fullName: System.Windows.Forms.Form.AutoValidateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时<xref:System.Windows.Forms.Form.AutoValidate*>属性更改。</xref:System.Windows.Forms.Form.AutoValidate*>"
  syntax:
    content: public event EventHandler AutoValidateChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.BackColor
  id: BackColor
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: BackColor
  nameWithType: Form.BackColor
  fullName: System.Windows.Forms.Form.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置控件的背景色。"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> ，表示控件的背景色。 默认值是值<xref:System.Windows.Forms.Control.DefaultBackColor*>属性。</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.Form.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CancelButton
  id: CancelButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CancelButton
  nameWithType: Form.CancelButton
  fullName: System.Windows.Forms.Form.CancelButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当用户按下 ESC 键时所单击的按钮控件。"
  remarks: "窗体取消按钮是每当用户按下 ESC 键时单击该按钮控件。 必须是分配给此属性的按钮<xref:System.Windows.Forms.IButtonControl>当前窗体上或位于当前窗体上的容器。</xref:System.Windows.Forms.IButtonControl>       此属性，可指定用户在你的应用程序中按 ESC 键时要发生的默认操作。 此属性可用于允许用户能够快速导航是允许他们只需按 ESC 键关闭窗口而不提交更改而不是手动单击取消按钮，用鼠标的一种简单形式。       如果窗体上的另一个控件截获 ESC 键，则取消按钮可能无法工作。 例如，如果你有<xref:System.Windows.Forms.ComboBox>打开窗体上，将关闭 ESC<xref:System.Windows.Forms.ComboBox>而不是关闭窗体。</xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.ComboBox>       <xref:System.Windows.Forms.IButtonControl>对象分配给 CancelButton 必须在表单上可见，否则是按 ESC 键将产生任何影响。</xref:System.Windows.Forms.IButtonControl>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, CancelButton, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_17_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_17_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_17_1.vb)]"
  syntax:
    content: public System.Windows.Forms.IButtonControl CancelButton { get; set; }
    return:
      type: System.Windows.Forms.IButtonControl
      description: "<xref href=&quot;System.Windows.Forms.IButtonControl&quot;> </xref>它表示窗体的取消按钮。"
  overload: System.Windows.Forms.Form.CancelButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CenterToParent
  id: CenterToParent
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CenterToParent()
  nameWithType: Form.CenterToParent()
  fullName: System.Windows.Forms.Form.CenterToParent()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "中心父窗体的窗体边界中的位置。"
  remarks: "请勿在代码中直接调用 CenterToParent 方法。 与此相反，设置<xref:System.Windows.Forms.Form.StartPosition%2A>到<xref:System.Windows.Forms.FormStartPosition>。</xref:System.Windows.Forms.FormStartPosition>属性</xref:System.Windows.Forms.Form.StartPosition%2A>       如果窗体或对话框为顶级，CenterToParent 中心相对于屏幕或桌面上窗体。"
  syntax:
    content: protected void CenterToParent ();
    parameters: []
  overload: System.Windows.Forms.Form.CenterToParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CenterToScreen
  id: CenterToScreen
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CenterToScreen()
  nameWithType: Form.CenterToScreen()
  fullName: System.Windows.Forms.Form.CenterToScreen()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "中心当前屏幕上的表单。"
  remarks: "请勿在代码中直接调用此。 与此相反，设置<xref:System.Windows.Forms.Form.StartPosition%2A>到<xref:System.Windows.Forms.FormStartPosition>。</xref:System.Windows.Forms.FormStartPosition>属性</xref:System.Windows.Forms.Form.StartPosition%2A>       CenterToScreen 方法使用下面的优先级列表以确定用于中心窗体的屏幕︰ 1。  <xref:System.Windows.Forms.Form.Owner%2A>窗体的属性。</xref:System.Windows.Forms.Form.Owner%2A>      2.  窗体 HWND 所有者。      3.  屏幕当前具有鼠标光标。"
  syntax:
    content: protected void CenterToScreen ();
    parameters: []
  overload: System.Windows.Forms.Form.CenterToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ClientSize
  id: ClientSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ClientSize
  nameWithType: Form.ClientSize
  fullName: System.Windows.Forms.Form.ClientSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的工作区的大小。"
  remarks: "窗体的工作区的大小是不包括边框和标题栏的窗体的大小。 窗体的工作区是可在其中放置控件在窗体区域。 可以使用此属性来获取正确的尺寸时执行图形操作或大小和位置表单上的控件时。 若要获取整个窗体的大小，请使用<xref:System.Windows.Forms.Form.Size%2A>属性或使用单独的属性<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>。</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Form.Size%2A>      1> [!NOTE]&1;> 你当前无法绑定到使用应用程序设置此属性。 应用程序设置的详细信息，请参阅[应用程序设置概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form. The event handler uses the ClientSize property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.  \n  \n [!code-cs[Classic Form.ClientSize Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_48_1.cs)]\n [!code-cpp[Classic Form.ClientSize Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_48_1.cpp)]\n [!code-vb[Classic Form.ClientSize Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_48_1.vb)]"
  syntax:
    content: public System.Drawing.Size ClientSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>表示窗体的工作区的大小。"
  overload: System.Windows.Forms.Form.ClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Close
  id: Close
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Close()
  nameWithType: Form.Close()
  fullName: System.Windows.Forms.Form.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭窗体。"
  remarks: "关闭窗体时，在该对象内创建的所有资源都关闭和释放该窗体。 你可以通过处理来防止在运行时关闭窗体<xref:System.Windows.Forms.Form.Closing>事件，并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>作为参数传递给事件处理程序。</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.Closing> 如果你在关闭窗体是你的应用程序启动窗体，你的应用程序结束。       以下两种情况时窗体不会被释放上`Close`是否当 （1） 它是一个多文档界面 (MDI) 应用程序的一部分和窗体不可见，则和 （2） 你具有显示窗体使用了<xref:System.Windows.Forms.Form.ShowDialog%2A>。</xref:System.Windows.Forms.Form.ShowDialog%2A> 在这些情况下，你将需要调用<xref:System.Windows.Forms.Form.Dispose%2A>手动来标记的所有垃圾回收的窗体的控件。</xref:System.Windows.Forms.Form.Dispose%2A>      1> [!NOTE]&1;> 时关闭的方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> 若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>方法。</xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>      1> [!CAUTION] 1> 之前[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]2.0，<xref:System.Windows.Forms.Form.Closed?displayProperty=fullName>和<xref:System.Windows.Forms.Form.Closing?displayProperty=fullName>事件不是时引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>调用方法以退出应用程序。</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> 如果你有在上述任一事件，必须执行的验证代码，则应为单独之前调用每个打开的窗体调用 Close 方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</xref:System.Windows.Forms.Application.Exit%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Forms.Form.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "创建一个句柄时，已关闭窗体。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "不能调用此方法从<xref href=&quot;System.Windows.Forms.Form.Activated&quot;></xref>事件时<xref:System.Windows.Forms.Form.WindowState*>设置为<xref href=&quot;System.Windows.Forms.FormWindowState&quot;> </xref>。</xref:System.Windows.Forms.Form.WindowState*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.Closed
  id: Closed
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Closed
  nameWithType: Form.Closed
  fullName: System.Windows.Forms.Form.Closed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭窗体时发生。"
  remarks: "> [!CAUTION]1> Closed 的事件是.NET Framework 2.0; 版中过时使用<xref:System.Windows.Forms.Form.FormClosed>事件相反。</xref:System.Windows.Forms.Form.FormClosed>       由用户或通过关闭窗体后，将发生此事件<xref:System.Windows.Forms.Form.Close%2A>形式的方法。</xref:System.Windows.Forms.Form.Close%2A> 若要阻止关闭窗体，处理<xref:System.Windows.Forms.Form.Closing>事件并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.Closing>       若要执行任务，如释放资源由窗体和保存在窗体中输入信息或更新其父窗体，你可以使用此事件。      1> [!CAUTION]&1;> 关闭和<xref:System.Windows.Forms.Form.Closing?displayProperty=fullName>事件不是时引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>调用方法以退出应用程序。</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> 如果你有在上述任一事件，必须执行的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>       如果窗体是 MDI 父窗体，<xref:System.Windows.Forms.Form.Closing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.Closing>引发事件。</xref:System.Windows.Forms.Form.Closing> </xref:System.Windows.Forms.Form.Closing> 此外，所有 MDI 子窗体的已关闭的事件将引发 Closed 的事件 MDI 父窗体之前引发。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, Closed, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_6_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_6_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_6_1.cpp)]"
  syntax:
    content: public event EventHandler Closed;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Closing
  id: Closing
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Closing
  nameWithType: Form.Closing
  fullName: System.Windows.Forms.Form.Closing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭窗体时发生。"
  remarks: "> [!CAUTION]1> 结束事件是.NET Framework 2.0; 版中过时使用<xref:System.Windows.Forms.Form.FormClosing>事件相反。</xref:System.Windows.Forms.Form.FormClosing>       正在关闭窗体后，将发生结束事件。 关闭窗体时，释放所有资源，在该对象内创建和释放该窗体。 如果您取消此事件，该窗体保持打开状态。 若要取消窗体的关闭，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</xref:System.Windows.Forms.Form.DialogResult%2A> 你可以重写的值分配给<xref:System.Windows.Forms.Form.DialogResult%2A>属性，当用户单击**关闭**通过设置按钮<xref:System.Windows.Forms.Form.DialogResult%2A>窗体的结束事件的事件处理中的属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.DialogResult%2A>      1> [!NOTE]&1;> 时<xref:System.Windows.Forms.Form.Close%2A>方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Close%2A> 若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>方法。</xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>      1> [!CAUTION]&1;><xref:System.Windows.Forms.Form.Closed?displayProperty=fullName>标记和结束事件时不引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>调用方法以退出应用程序。</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> 如果你有在上述任一事件，必须执行的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>       如果窗体是 MDI 父窗体，引发 MDI 父窗体的结束事件之前，会引发所有 MDI 子窗体的结束事件。 此外，<xref:System.Windows.Forms.Form.Closed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.Closed>引发 MDI 父窗体的事件。</xref:System.Windows.Forms.Form.Closed> </xref:System.Windows.Forms.Form.Closed> 取消 MDI 子窗体的 Closing 事件不会阻止引发 MDI 父窗体的 Closing 事件。 但是，取消该事件将设置为`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>，作为参数传递到父窗体。</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 若要强制所有 MDI 父和子窗体关闭，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`false`在 MDI 父窗体。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example uses Closing to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \n  \n [!code-cs[Form.Closing#1](~/add/codesnippet/csharp/e-system.windows.forms.f_10_1.cs)]\n [!code-vb[Form.Closing#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_10_1.vb)]\n [!code-cpp[Form.Closing#1](~/add/codesnippet/cpp/e-system.windows.forms.f_10_1.cpp)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler Closing;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ControlBox
  id: ControlBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ControlBox
  nameWithType: Form.ControlBox
  fullName: System.Windows.Forms.Form.ControlBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体的标题栏中是否显示控件框。"
  remarks: "如果 ControlBox 属性设置为`true`中的标题栏的左上角显示控件框。 控件框是用户可以单击来访问系统菜单。       如果 ControlBox 设置为`false`，并且还设置<xref:System.Windows.Forms.Form.Location%2A>属性，<xref:System.Windows.Forms.Form.Size%2A>窗体的属性不会更新以反映该窗体的非工作区已被隐藏。</xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Form.Location%2A> 若要解决此问题，请将代码改变放<xref:System.Windows.Forms.Form.Location%2A>属性<xref:System.Windows.Forms.Control.HandleCreated>事件。</xref:System.Windows.Forms.Control.HandleCreated> </xref:System.Windows.Forms.Form.Location%2A>      1> [!NOTE]&1;> 当设置为`false`，ControlBox 属性在创建时最大化显示多文档界面 (MDI) 子窗体上无效。"
  example:
  - "The following code example uses the ControlBox, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box. The form created in this example could be used to create a splash screen for an application. The example requires that the example's method is defined in a form class and called when the form is being initialized.  \n  \n [!code-cs[Classic Form.ControlBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_6_1.cs)]\n [!code-cpp[Classic Form.ControlBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_6_1.cpp)]\n [!code-vb[Classic Form.ControlBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_6_1.vb)]"
  syntax:
    content: public bool ControlBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体中的窗体，则左上角显示控件框否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ControlBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateControlsInstance
  id: CreateControlsInstance
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateControlsInstance()
  nameWithType: Form.CreateControlsInstance()
  fullName: System.Windows.Forms.Form.CreateControlsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建控件的控件集合的新实例。"
  syntax:
    content: protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "新实例<xref:System.Windows.Forms.Control.ControlCollection>分配给该控件。</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Form.CreateControlsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: Form.CreateHandle()
  fullName: System.Windows.Forms.Form.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建窗体的句柄。 如果派生的类重写此函数，它必须调用基实现。"
  syntax:
    content: protected override void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Form.CreateHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此句柄<xref href=&quot;System.Windows.Forms.Form&quot;></xref>已创建。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateParams
  nameWithType: Form.CreateParams
  fullName: System.Windows.Forms.Form.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "创建控件句柄时，请获取需要的创建参数。"
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> ，其中包含需要的创建参数时创建该控件的句柄。"
  overload: System.Windows.Forms.Form.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Deactivate
  id: Deactivate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Deactivate
  nameWithType: Form.Deactivate
  fullName: System.Windows.Forms.Form.Deactivate
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗体失去焦点并且不再是活动窗体时发生。"
  remarks: "此事件可用于执行任务，例如已停用窗体中的数据更新应用程序中的另一个窗口。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Deactivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the Deactivate event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#393](~/add/codesnippet/csharp/e-system.windows.forms.f_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#393](~/add/codesnippet/visualbasic/e-system.windows.forms.f_5_1.vb)]"
  syntax:
    content: public event EventHandler Deactivate;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefaultImeMode
  id: DefaultImeMode
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
  fullName: System.Windows.Forms.Form.DefaultImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取控件支持的默认输入法编辑器 (IME) 模式。"
  remarks: "输入的法编辑器 (IME) 是一个程序，允许用户通过使用标准键盘输入复杂字符和符号，如日语汉字字符。       在中实现<xref:System.Windows.Forms.Form>类，此属性始终返回<xref:System.Windows.Forms.ImeMode?displayProperty=fullName>值。</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> </xref:System.Windows.Forms.Form> 此属性的值分配给<xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "之一<xref href=&quot;System.Windows.Forms.ImeMode&quot;></xref>值。"
  overload: System.Windows.Forms.Form.DefaultImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefaultSize
  nameWithType: Form.DefaultSize
  fullName: System.Windows.Forms.Form.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取控件的默认大小。"
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "默认值<xref href=&quot;System.Drawing.Size&quot;></xref>的控件。"
  overload: System.Windows.Forms.Form.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  id: DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefWndProc(Message)
  nameWithType: Form.DefWndProc(Message)
  fullName: System.Windows.Forms.Form.DefWndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向默认窗口过程发送指定的消息。"
  syntax:
    content: protected override void DefWndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>到进程。"
  overload: System.Windows.Forms.Form.DefWndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DesktopBounds
  id: DesktopBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
  fullName: System.Windows.Forms.Form.DesktopBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置 Windows 桌面上的大小和窗体位置。"
  remarks: "桌面坐标相对于屏幕，其中不包括任务栏的工作区域。 桌面坐标系统是基于像素的。 如果你的应用程序正在运行的多个监视器系统上，在窗体坐标是合并后的桌面的坐标。       此属性可用于调整大小和在 Windows 桌面上的位置相对于其他窗体或应用程序的窗体。"
  example:
  - "The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop. This example requires that the method is defined within a form class.  \n  \n [!code-cpp[Classic Form.DesktopBounds Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_4_1.cpp)]\n [!code-cs[Classic Form.DesktopBounds Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_4_1.cs)]\n [!code-vb[Classic Form.DesktopBounds Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle DesktopBounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>表示使用桌面坐标的 Windows 桌面上窗体的边界。"
  overload: System.Windows.Forms.Form.DesktopBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DesktopLocation
  id: DesktopLocation
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
  fullName: System.Windows.Forms.Form.DesktopLocation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置在 Windows 桌面上窗体的位置。"
  remarks: "桌面坐标相对于屏幕，其中不包括任务栏的工作区域。 桌面坐标系统是基于像素。 如果你的应用程序正在运行的多监视器系统上，在窗体的坐标为合并后的桌面的坐标。       此属性可用于在 Windows 桌面上的位置相对于其他窗体和应用程序窗体。       如果调用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>之前调用的方法<xref:System.Windows.Forms.Form.Show%2A>方法，你的窗体将定位在其默认位置中，该域由操作系统。</xref:System.Windows.Forms.Form.Show%2A> </xref:System.Windows.Forms.Form.SetDesktopLocation%2A> 有关窗口定位的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的&quot;窗口功能&quot;文档&quot;窗口大小和位置&quot;部分。       如果调用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>之后调用<xref:System.Windows.Forms.Form.Show%2A>，你的窗体将位于你指定的位置。</xref:System.Windows.Forms.Form.Show%2A> </xref:System.Windows.Forms.Form.SetDesktopLocation%2A>"
  example:
  - "The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop. This example requires that method has been defined within a form class.  \n  \n [!code-vb[Classic Form.DesktopLocation Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_14_1.vb)]\n [!code-cpp[Classic Form.DesktopLocation Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_14_1.cpp)]\n [!code-cs[Classic Form.DesktopLocation Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_14_1.cs)]"
  syntax:
    content: public System.Drawing.Point DesktopLocation { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> ，表示桌面上窗体的位置。"
  overload: System.Windows.Forms.Form.DesktopLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DialogResult
  id: DialogResult
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DialogResult
  nameWithType: Form.DialogResult
  fullName: System.Windows.Forms.Form.DialogResult
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的对话框结果。"
  remarks: "窗体的对话框结果是它显示为模式对话框时，从窗体返回的值。 如果该窗体显示为对话框中，设置此属性的值<xref:System.Windows.Forms.DialogResult>枚举设置窗体的对话框结果的值，隐藏模式对话框，并将控制权返回给调用窗体。</xref:System.Windows.Forms.DialogResult> 此属性通常由设置<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上的控件。</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> 当用户单击<xref:System.Windows.Forms.Button>控制分配给值<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>分配给窗体的 DialogResult 属性。</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.Button>       当窗体显示为模式对话框中时，单击**关闭**按钮 （带有中窗体的右上角的 X 按钮） 将导致要隐藏的窗体和 DialogResult 属性设置为`DialogResult.Cancel`。 <xref:System.Windows.Forms.Form.Close%2A>方法时不会自动调用用户单击**关闭**的对话框中的按钮或设置 DialogResult 属性的值。</xref:System.Windows.Forms.Form.Close%2A> 相反，窗体区域不可用，可以再次显示而无需创建对话框中的新实例。 由于此行为，必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</xref:System.Windows.Forms.Control.Dispose%2A>       此属性可用于确定如何将对话框中关闭以便正确处理在对话框中执行的操作。      1> [!NOTE]&1;> 可以重写的值分配给 DialogResult 属性，当用户单击**关闭**DialogResult 属性设置中的事件处理程序按钮<xref:System.Windows.Forms.Form.Closing>窗体的事件。</xref:System.Windows.Forms.Form.Closing>      1> [!NOTE]&1;> 如果<xref:System.Windows.Forms.Form>显示为无模式窗口，DialogResult 属性返回的值可能不返回值分配给窗体，因为关闭窗体时自动释放窗体的资源。</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the DialogResult property of the form.  \n  \n [!code-cs[Classic Form.DialogResult Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_35_1.cs)]\n [!code-cpp[Classic Form.DialogResult Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_35_1.cpp)]\n [!code-vb[Classic Form.DialogResult Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_35_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult DialogResult { get; set; }
    return:
      type: System.Windows.Forms.DialogResult
      description: "A <xref href=&quot;System.Windows.Forms.DialogResult&quot;> </xref> ，它表示窗体用作对话框中时的结果。"
  overload: System.Windows.Forms.Form.DialogResult*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "超出了有效的值的范围是指定的值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Form.Dispose(Boolean)
  fullName: System.Windows.Forms.Form.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "使用的资源 （内存除外） 释放<xref href=&quot;System.Windows.Forms.Form&quot;> </xref>。"
  remarks: "此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数是`true`，此方法释放由任何托管对象持有的全部资源此<xref:System.Windows.Forms.Form>引用。</xref:System.Windows.Forms.Form> 此方法调用`Dispose`每个引用对象的方法。       如果使用显示窗体将自动调用 dispose<xref:System.Windows.Forms.Form.Show%2A>方法。</xref:System.Windows.Forms.Form.Show%2A> 如果另一种方法，如<xref:System.Windows.Forms.Form.ShowDialog%2A>使用时，或根本永远不会显示窗体，必须在你的应用程序自行调用 Dispose。</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Windows.Forms.Form.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormBorderStyle
  id: FormBorderStyle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
  fullName: System.Windows.Forms.Form.FormBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的边框样式。"
  remarks: "窗体的边框样式确定的外边缘的窗体的显示方式。 除了更改窗体的边框显示，某些边框样式阻止窗体的大小。 例如，`FormBorderStyle.FixedDialog`边框样式更改为的对话框中的窗体的边框，并阻止窗体在正调整大小。 大小或窗体的标题栏区域的可用性，还会影响的边框样式。      1> [!NOTE]&1;> 与<xref:System.Windows.Forms.FormBorderStyle>样式，就是无法调整大小窗口下面某些最小值，即使已设置<xref:System.Windows.Forms.Form.ControlBox%2A>到`false`并分配到<xref:System.Windows.Forms.Form.Text%2A>。</xref:System.Windows.Forms.Form.Text%2A>一个零长度字符串</xref:System.Windows.Forms.Form.ControlBox%2A></xref:System.Windows.Forms.FormBorderStyle> 请解决这考虑通过使用<xref:System.Windows.Forms.FormBorderStyle>改为样式。</xref:System.Windows.Forms.FormBorderStyle>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the FormBorderStyle, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_41_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_41_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_41_1.vb)]"
  syntax:
    content: public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }
    return:
      type: System.Windows.Forms.FormBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.FormBorderStyle&quot;> </xref>该对象表示要显示窗体的边框样式。 默认值是<xref uid=&quot;langword_csharp_FormBorderStyle.Sizable&quot; name=&quot;FormBorderStyle.Sizable&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.FormBorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "超出了有效的值的范围是指定的值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormClosed
  id: FormClosed
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormClosed
  nameWithType: Form.FormClosed
  fullName: System.Windows.Forms.Form.FormClosed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭窗体后发生。"
  remarks: "FormClosed 事件发生后由用户<xref:System.Windows.Forms.Form.Close%2A><xref:System.Windows.Forms.Application.Exit%2A>方法的<xref:System.Windows.Forms.Application>类</xref:System.Windows.Forms.Application></xref:System.Windows.Forms.Application.Exit%2A>或</xref:System.Windows.Forms.Form.Close%2A>已关闭窗体 若要阻止关闭窗体，处理<xref:System.Windows.Forms.Form.FormClosing>事件并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.FormClosing>       若要执行任务，如释放资源由窗体和保存在窗体中输入信息或更新其父窗体，你可以使用此事件。       如果窗体是多文档界面 (MDI) 父窗体，<xref:System.Windows.Forms.Form.FormClosing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.FormClosing>引发事件。</xref:System.Windows.Forms.Form.FormClosing> </xref:System.Windows.Forms.Form.FormClosing> 同样，所有 MDI 子窗体的 FormClosed 事件将引发 MDI 父窗体的 FormClosed 事件之前引发。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the FormClosed event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#395](~/add/codesnippet/csharp/e-system.windows.forms.f_13_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#395](~/add/codesnippet/visualbasic/e-system.windows.forms.f_13_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.FormClosedEventHandler FormClosed;
    return:
      type: System.Windows.Forms.FormClosedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormClosing
  id: FormClosing
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormClosing
  nameWithType: Form.FormClosing
  fullName: System.Windows.Forms.Form.FormClosing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭窗体前发生。"
  remarks: "正在关闭窗体后，将发生 FormClosing 事件。 关闭窗体时，它将被释放，释放与表单关联的所有资源。 如果您取消此事件，该窗体保持打开状态。 若要取消窗体的关闭，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.FormClosingEventArgs>传递给事件处理程序`true`。</xref:System.Windows.Forms.FormClosingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</xref:System.Windows.Forms.Form.DialogResult%2A> 你可以重写的值分配给<xref:System.Windows.Forms.Form.DialogResult%2A>属性，当用户单击**关闭**通过设置按钮<xref:System.Windows.Forms.Form.DialogResult%2A>窗体的 FormClosing 事件的事件处理中的属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.DialogResult%2A>      1> [!NOTE]&1;> 时<xref:System.Windows.Forms.Form.Close%2A>方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Close%2A> 若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A>方法。</xref:System.Windows.Forms.Control.Hide%2A>       如果窗体，多文档界面 (MDI) 父窗体之前引发 MDI 父窗体的 FormClosing 事件引发的所有 MDI 子窗体的 FormClosing 事件。 同样，<xref:System.Windows.Forms.Form.FormClosed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.FormClosed>引发 MDI 父窗体的事件。</xref:System.Windows.Forms.Form.FormClosed> </xref:System.Windows.Forms.Form.FormClosed> 取消 MDI 子窗体 FormClosing 事件不会阻止引发 MDI 父窗体的 FormClosing 事件。 但是，取消该事件将设置为`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.FormClosingEventArgs>作为参数传递到父窗体的类。</xref:System.Windows.Forms.FormClosingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 若要强制所有 MDI 父和子窗体关闭，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`false`在 MDI 父窗体。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosing event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the FormClosing event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#394](~/add/codesnippet/csharp/e-system.windows.forms.f_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#394](~/add/codesnippet/visualbasic/e-system.windows.forms.f_7_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.FormClosingEventHandler FormClosing;
    return:
      type: System.Windows.Forms.FormClosingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  id: GetAutoScaleSize(System.Drawing.Font)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: GetAutoScaleSize(Font)
  nameWithType: Form.GetAutoScaleSize(Font)
  fullName: System.Windows.Forms.Form.GetAutoScaleSize(Font)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取时根据自动缩放窗体指定的字体的大小。"
  remarks: "> [!IMPORTANT]1> GetAutoScaleSize 方法是过时在.net Framework 2.0 版。 此成员已保留用于向后兼容。 有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/add/includes/ajax-current-ext-md.md)。       此方法可用于确定窗体将字体应用于窗体之前将自动缩放到特定字体的大小。 如果你想要确定大小的形式是自动缩放到基于当前分配给窗体的字体，请使用<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性。</xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>"
  syntax:
    content: public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);
    parameters:
    - id: font
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;> </xref>表示确定窗体的自动缩放基大小的字体。"
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>表示窗体的自动缩放大小。"
  overload: System.Windows.Forms.Form.GetAutoScaleSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索缩放控件时的边界。"
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指定为其检索在显示器边界的区域。"
    - id: factor
      type: System.Drawing.SizeF
      description: "高度和宽度的控件的边界。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "值之一<xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> ，指定要定义其大小和位置时使用的控件边界。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>表示在其中缩放控件的边界。"
  overload: System.Windows.Forms.Form.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.HelpButton
  id: HelpButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: HelpButton
  nameWithType: Form.HelpButton
  fullName: System.Windows.Forms.Form.HelpButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否应在窗体的标题框中显示帮助按钮。"
  remarks: "当此属性设置为`true`，问号的小按钮将出现在左侧的标题栏中**关闭**按钮。 此按钮可用于显示有关你的应用程序的帮助。 你可以创建的事件处理程序<xref:System.Windows.Forms.Control.HelpRequested>事件<xref:System.Windows.Forms.Control>类来单击的窗体帮助按钮时，向用户显示帮助信息。</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.HelpRequested>      1> [!IMPORTANT]&1;> 帮助按钮属性的值将忽略如果**最大化**或**最小化**显示按钮。"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the HelpButton property to display a Help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_57_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_57_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_57_1.vb)]"
  syntax:
    content: public bool HelpButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在窗体的标题栏; 中显示帮助按钮否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.HelpButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.HelpButtonClicked
  id: HelpButtonClicked
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: HelpButtonClicked
  nameWithType: Form.HelpButtonClicked
  fullName: System.Windows.Forms.Form.HelpButtonClicked
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时**帮助**单击按钮。"
  remarks: "HelpButtonClicked 事件发生时**帮助**单击窗体的标题栏中的按钮。 **帮助**显示按钮时<xref:System.Windows.Forms.Form.HelpButton%2A>属性设置为`true`。</xref:System.Windows.Forms.Form.HelpButton%2A> 可以取消 HelpButtonClicked。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HelpButtonClicked event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the HelpButtonClicked event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#388](~/add/codesnippet/csharp/e-system.windows.forms.f_19_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#388](~/add/codesnippet/visualbasic/e-system.windows.forms.f_19_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler HelpButtonClicked;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Icon
  id: Icon
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Icon
  nameWithType: Form.Icon
  fullName: System.Windows.Forms.Form.Icon
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的图标。"
  remarks: "窗体的图标指定表示任务栏，以及此图标显示为在窗体控件框中的窗体中的图片。       此属性将产生任何影响，如果<xref:System.Windows.Forms.Form.FormBorderStyle%2A>设置为<xref:System.Windows.Forms.FormBorderStyle>。</xref:System.Windows.Forms.FormBorderStyle> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> 在这种情况下，窗体将不会显示一个图标。"
  syntax:
    content: public System.Drawing.Icon Icon { get; set; }
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref> ，它表示窗体的图标。"
  overload: System.Windows.Forms.Form.Icon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.InputLanguageChanged
  id: InputLanguageChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: InputLanguageChanged
  nameWithType: Form.InputLanguageChanged
  fullName: System.Windows.Forms.Form.InputLanguageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "更改窗体的输入的语言后发生。"
  remarks: "此事件可用于对表单的外观和基于窗体的输入语言所做的更改的文本进行更改。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the InputLanguageChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#400](~/add/codesnippet/csharp/e-system.windows.forms.f_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#400](~/add/codesnippet/visualbasic/e-system.windows.forms.f_2_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;
    return:
      type: System.Windows.Forms.InputLanguageChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.InputLanguageChanging
  id: InputLanguageChanging
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: InputLanguageChanging
  nameWithType: Form.InputLanguageChanging
  fullName: System.Windows.Forms.Form.InputLanguageChanging
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当用户尝试更改窗体的输入的语言时发生。"
  remarks: "窗体进行的输入语言更改之前，将发生此事件。 你可以通过设置取消语言更改<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.InputLanguageChangingEventArgs>传递给事件处理程序`false`。</xref:System.Windows.Forms.InputLanguageChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 如果取消了该事件，不会更改输入的语言。 你可以使用此事件以确定请求的输入的语言更改是否适合你的应用程序。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanging event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the InputLanguageChanging event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#401](~/add/codesnippet/csharp/e-system.windows.forms.f_4_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#401](~/add/codesnippet/visualbasic/e-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;
    return:
      type: System.Windows.Forms.InputLanguageChangingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsMdiChild
  id: IsMdiChild
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
  fullName: System.Windows.Forms.Form.IsMdiChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示窗体是否为多文档界面 (MDI) 子窗体。"
  remarks: "在运行时，MDI 子窗体将显示在一个 MDI 父窗体工作区。 可以最大化、 最小化，和 MDI 父窗体中移动的 MDI 子窗体。 若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将到 MDI 父窗体<xref:System.Windows.Forms.Form.MdiParent%2A>子窗体的属性。</xref:System.Windows.Forms.Form.MdiParent%2A> </xref:System.Windows.Forms.Form> 你可以使用<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性来确定窗体是 MDI 父窗体。</xref:System.Windows.Forms.Form.IsMdiContainer%2A>       IsMdiChild 属性可用于确定返回由方法或属性的窗体是 MDI 子窗体或在你的应用程序，如对话框中的标准窗体。      1> [!NOTE]&1;> 所有 MDI 子窗体具有可调整大小的边框、 一个控件菜单框中和最小化和**最大化**按钮，而不考虑的设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.ControlBox%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>属性。</xref:System.Windows.Forms.Form.MaximizeBox%2A> </xref:System.Windows.Forms.Form.MinimizeBox%2A> </xref:System.Windows.Forms.Form.ControlBox%2A> </xref:System.Windows.Forms.Form.FormBorderStyle%2A>"
  syntax:
    content: public bool IsMdiChild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体是 MDI 子窗体;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.IsMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsMdiContainer
  id: IsMdiContainer
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
  fullName: System.Windows.Forms.Form.IsMdiContainer
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否为多文档界面 (MDI) 子窗体的容器。"
  remarks: "此属性更改为一个 MDI 父窗体的显示和行为的窗体。 当此属性设置为`true`，窗体显示具有凸起边框的凹陷工作区。 分配给父窗体的所有 MDI 子窗体将都显示在其工作区内。       当关闭 MDI 父窗体时，<xref:System.Windows.Forms.Form.Closing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.Closing>引发事件。</xref:System.Windows.Forms.Form.Closing> </xref:System.Windows.Forms.Form.Closing> 此外，<xref:System.Windows.Forms.Form.Closed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.Closed>引发 MDI 父窗体的事件。</xref:System.Windows.Forms.Form.Closed> </xref:System.Windows.Forms.Form.Closed>      1> [!NOTE]&1;> 如果有两个<xref:System.Windows.Forms.MenuStrip>将 IsMdiContainer 设置为的 MDI 子窗体上的控件`true`父窗体将只有其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.MenuStrip> 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>其他子的内容合并<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.ToolStripManager.Merge%2A>"
  example:
  - "The following code example demonstrates using the IsMdiContainer property as well as changing the `BackColor` property of an MDI Form. To run this example, paste the following code in a new form.  \n  \n [!code-cs[System.Windows.Forms.MdiClientExample#1](~/add/codesnippet/csharp/p-system.windows.forms.f_49_1.cs)]\n [!code-vb[System.Windows.Forms.MdiClientExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_49_1.vb)]"
  syntax:
    content: public bool IsMdiContainer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体是 MDI 子窗体; 的容器否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.IsMdiContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsRestrictedWindow
  id: IsRestrictedWindow
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
  fullName: System.Windows.Forms.Form.IsRestrictedWindow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示窗体是否可以使用所有窗口和不受限制的用户输入的事件。"
  remarks: "IsRestrictedWindow 属性确定是否<xref:System.Security.Permissions.UIPermissionWindow>授予权限。</xref:System.Security.Permissions.UIPermissionWindow> 此属性设置在窗体的构造函数中的运行时，窗体的生存期内缓存。 在部分信任环境中运行的 Windows 窗体应用程序不能避开此检查，因为公共语言运行时可确保，在部分信任情况下始终调用父构造函数。"
  syntax:
    content: public bool IsRestrictedWindow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体有限制;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.IsRestrictedWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.KeyPreview
  id: KeyPreview
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: KeyPreview
  nameWithType: Form.KeyPreview
  fullName: System.Windows.Forms.Form.KeyPreview
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否将接收此键事件之前的事件传递到具有焦点的控件。"
  remarks: "当此属性设置为`true`，窗体将接收所有<xref:System.Windows.Forms.Control.KeyPress>， <xref:System.Windows.Forms.Control.KeyDown>，和<xref:System.Windows.Forms.Control.KeyUp>事件。</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress> 窗体的事件处理程序已完成处理击键后，键击然后指派给具有焦点的控件。 例如，如果 KeyPreview 属性设置为`true`和当前选择的控件是<xref:System.Windows.Forms.TextBox>之后由窗体的事件处理程序处理击键,<xref:System.Windows.Forms.TextBox>控件将接收已按下的键。</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.TextBox> 若要仅在窗体级别处理键盘事件而不允许控件接收到键盘事件，<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>中窗体的属性<xref:System.Windows.Forms.Control.KeyPress>事件处理程序`true`。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>       此属性可用于处理大多数击键中你的应用程序并可以处理键击或调用来处理击键的相应控件。 例如，当应用程序使用功能键，你可能想要处理窗体级别，而不是为每个控件都可能会收到击键事件编写代码。      1> [!NOTE]&1;> 如果窗体不具有任何可见或启用的控件，它会自动获得所有键盘事件。      1> [!NOTE]&1;> 可能对窗体上的控件进行编程，从而取消它接收任何击键。 由于控件永远不会将这些击键发送到窗体，该窗体将不会看到它们 KeyPreview 的设置无关。"
  example:
  - "The following code example demonstrates setting a form's KeyPreview property to true and handling the key events at the form level. To run the example, paste the following code in a blank form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/csharp/p-system.windows.forms.f_31_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/cpp/p-system.windows.forms.f_31_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/visualbasic/p-system.windows.forms.f_31_1.vb)]"
  syntax:
    content: public bool KeyPreview { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体将接收所有键事件，则<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果窗体上的当前选定的控件接收键事件。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.KeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  id: LayoutMdi(System.Windows.Forms.MdiLayout)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: LayoutMdi(MdiLayout)
  nameWithType: Form.LayoutMdi(MdiLayout)
  fullName: System.Windows.Forms.Form.LayoutMdi(MdiLayout)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "排列多文档界面 (MDI) 子窗体在 MDI 父窗体内。"
  remarks: "此方法可用于在 MDI 父窗体，以便更轻松导航和操作的 MDI 子窗体中排列 MDI 子窗体。 MDI 子窗体可以平铺水平和垂直，级联，或者显示为在 MDI 父窗体内的图标。"
  example:
  - "The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form. Each event handler makes calls to the LayoutMdi method to arrange any child forms that are currently open in the application.  \n  \n [!code-cs[Classic Form.LayoutMdi Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_10_1.cs)]\n [!code-cpp[Classic Form.LayoutMdi Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_10_1.cpp)]\n [!code-vb[Classic Form.LayoutMdi Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_10_1.vb)]"
  syntax:
    content: public void LayoutMdi (System.Windows.Forms.MdiLayout value);
    parameters:
    - id: value
      type: System.Windows.Forms.MdiLayout
      description: "之一<xref href=&quot;System.Windows.Forms.MdiLayout&quot;></xref>定义 MDI 子窗体的布局的值。"
  overload: System.Windows.Forms.Form.LayoutMdi*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Load
  id: Load
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Load
  nameWithType: Form.Load
  fullName: System.Windows.Forms.Form.Load
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "第一次显示一个窗体前发生。"
  remarks: "此事件可用于执行任务，例如分配由窗体的资源。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, Load, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_9_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_9_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_9_1.cpp)]"
  syntax:
    content: public event EventHandler Load;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Location
  id: Location
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Location
  nameWithType: Form.Location
  fullName: System.Windows.Forms.Form.Location
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置<xref href=&quot;System.Drawing.Point&quot;></xref>表示的左上角<xref href=&quot;System.Windows.Forms.Form&quot;></xref>以屏幕坐标。"
  remarks: "<xref:System.Drawing.Point>是一种结构，这意味着它是值类型。</xref:System.Drawing.Point> 如果访问中的属性<xref:System.Drawing.Point>，返回的属性的副本。</xref:System.Drawing.Point> 因此，更改<xref:System.Drawing.Point.X%2A>或<xref:System.Drawing.Point.Y%2A>属性<xref:System.Drawing.Point>从返回<xref:System.Windows.Forms.Control.Location%2A>属性将不会影响<xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Right%2A>， <xref:System.Windows.Forms.Control.Top%2A>，或<xref:System.Windows.Forms.Control.Bottom%2A>属性值的<xref:System.Windows.Forms.Form>。</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> 若要调整这些属性，分别设置每个属性值，或设置具有新<xref:System.Drawing.Point>。</xref:System.Drawing.Point>的位置属性       位置属性获取或设置<xref:System.Windows.Forms.Control.Location%2A>属性<xref:System.Windows.Forms.Control>基类，并设置<xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A>属性`true`。</xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref>表示的左上角<xref href=&quot;System.Windows.Forms.Form&quot;></xref>以屏幕坐标。"
  overload: System.Windows.Forms.Form.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MainMenuStrip
  id: MainMenuStrip
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
  fullName: System.Windows.Forms.Form.MainMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的主菜单容器。"
  remarks: "除了设置 MainMenuStrip 属性，你必须<xref:System.Windows.Forms.Control.ControlCollection.Add%2A><xref:System.Windows.Forms.MenuStrip>控制转移到<xref:System.Windows.Forms.Control.Controls%2A>窗体的集合。</xref:System.Windows.Forms.Control.Controls%2A> </xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.Control.ControlCollection.Add%2A>       <xref:System.Windows.Forms.MenuStrip>类取代<xref:System.Windows.Forms.MainMenu>在以前版本的.NET Framework 的类。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuStrip>"
  syntax:
    content: public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.MenuStrip
      description: "A <xref href=&quot;System.Windows.Forms.MenuStrip&quot;> </xref> ，它表示窗体菜单结构的容器。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.MainMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Margin
  id: Margin
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Margin
  nameWithType: Form.Margin
  fullName: System.Windows.Forms.Form.Margin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置控件之间的空间。"
  syntax:
    content: public System.Windows.Forms.Padding Margin { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "一个值，表示控件之间的空间。"
  overload: System.Windows.Forms.Form.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MarginChanged
  id: MarginChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MarginChanged
  nameWithType: Form.MarginChanged
  fullName: System.Windows.Forms.Form.MarginChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时<xref:System.Windows.Forms.Form.Margin*>属性更改。</xref:System.Windows.Forms.Form.Margin*>"
  syntax:
    content: public event EventHandler MarginChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizeBox
  id: MaximizeBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
  fullName: System.Windows.Forms.Form.MaximizeBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否**最大化**按钮显示窗体的标题栏中。"
  remarks: "A**最大化**按钮使用户得以扩大到全屏幕大小的窗口。 若要显示**最大化**按钮，你还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性`FormBorderStyle.FixedSingle`， `FormBorderStyle.Sizable`， `FormBorderStyle.Fixed3D`，或`FormBorderStyle.FixedDialog`。</xref:System.Windows.Forms.Form.FormBorderStyle%2A>       A**最大化**按钮自动变成一个还原按钮最大化窗口时。 最小化或还原窗口将自动更改还原按钮返回到**最大化**按钮。      1> [!NOTE]&1;> 最大程度地窗体，在运行时生成<xref:System.Windows.Forms.Control.Resize>事件。</xref:System.Windows.Forms.Control.Resize> <xref:System.Windows.Forms.Form.WindowState%2A>属性反映窗口的当前状态。</xref:System.Windows.Forms.Form.WindowState%2A> 如果你设置<xref:System.Windows.Forms.Form.WindowState%2A>属性`FormWindowState.Maximized`，窗体最大化独立于任何设置实际上适用于 MaximizeBox 和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</xref:System.Windows.Forms.Form.FormBorderStyle%2A> </xref:System.Windows.Forms.Form.WindowState%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, MaximizeBox, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_40_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_40_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_40_1.vb)]"
  syntax:
    content: public bool MaximizeBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要显示**最大化**按钮窗体; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.MaximizeBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizedBounds
  id: MaximizedBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
  fullName: System.Windows.Forms.Form.MaximizedBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取和设置窗体大小，它最大化时。"
  syntax:
    content: protected System.Drawing.Rectangle MaximizedBounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>该对象表示该窗体的边界时最大化。"
  overload: System.Windows.Forms.Form.MaximizedBounds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值<> *1> 属性大于窗体的高度。      -的值<> *1> 属性大于窗体宽度。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizedBoundsChanged
  id: MaximizedBoundsChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizedBoundsChanged
  nameWithType: Form.MaximizedBoundsChanged
  fullName: System.Windows.Forms.Form.MaximizedBoundsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时的值<xref:System.Windows.Forms.Form.MaximizedBounds*>属性已更改。</xref:System.Windows.Forms.Form.MaximizedBounds*>"
  remarks: "有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximizedBoundsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MaximizedBoundsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#389](~/add/codesnippet/csharp/e-system.windows.forms.f_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#389](~/add/codesnippet/visualbasic/e-system.windows.forms.f_15_1.vb)]"
  syntax:
    content: public event EventHandler MaximizedBoundsChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximumSize
  id: MaximumSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximumSize
  nameWithType: Form.MaximumSize
  fullName: System.Windows.Forms.Form.MaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取窗体可调整到的最大大小。"
  remarks: "此属性可限制为指定的最大大小的窗体的大小。 你可以使用此功能，同时显示多个窗口时以确保单个窗口不会导致其他窗口来隐藏。 如果此属性设置为<xref:System.Drawing.Size>是 0 高度和宽度，窗体中的为 0 的对象将具有由 Windows 设置的限制之外没有最大大小。</xref:System.Drawing.Size>"
  example:
  - "The following code example demonstrates setting the MaximumSize property.  \n  \n [!code-cs[System.Windows.Forms.FormExample#3](~/add/codesnippet/csharp/p-system.windows.forms.f_42_1.cs)]\n [!code-vb[System.Windows.Forms.FormExample#3](~/add/codesnippet/visualbasic/p-system.windows.forms.f_42_1.vb)]\n [!code-cpp[System.Windows.Forms.FormExample#3](~/add/codesnippet/cpp/p-system.windows.forms.f_42_1.cpp)]"
  syntax:
    content: public override System.Drawing.Size MaximumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>表示窗体的最大大小。"
  overload: System.Windows.Forms.Form.MaximumSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "高度或宽度内的值<xref href=&quot;System.Drawing.Size&quot;></xref>对象是否小于零。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximumSizeChanged
  id: MaximumSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximumSizeChanged
  nameWithType: Form.MaximumSizeChanged
  fullName: System.Windows.Forms.Form.MaximumSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时的值<xref:System.Windows.Forms.Form.MaximumSize*>属性已更改。</xref:System.Windows.Forms.Form.MaximumSize*>"
  remarks: "有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MaximumSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#390](~/add/codesnippet/csharp/e-system.windows.forms.f_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#390](~/add/codesnippet/visualbasic/e-system.windows.forms.f_0_1.vb)]"
  syntax:
    content: public event EventHandler MaximumSizeChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiChildActivate
  id: MdiChildActivate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiChildActivate
  nameWithType: Form.MdiChildActivate
  fullName: System.Windows.Forms.Form.MdiChildActivate
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "激活或关闭 MDI 应用程序中的多文档界面 (MDI) 子窗体时发生。"
  remarks: "你可以使用此事件来执行任务，如更新 MDI 子窗体的内容和更改的菜单选项 MDI 父窗体中提供基于状态的已激活 MDI 子窗体。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MdiChildActivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MdiChildActivate event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#397](~/add/codesnippet/csharp/e-system.windows.forms.f_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#397](~/add/codesnippet/visualbasic/e-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public event EventHandler MdiChildActivate;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiChildren
  id: MdiChildren
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiChildren
  nameWithType: Form.MdiChildren
  fullName: System.Windows.Forms.Form.MdiChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取表示此窗体的多文档界面 (MDI) 子窗体作为父级的窗体的数组。"
  remarks: "此属性，可获取对所有 MDI 子窗体在 MDI 父窗体中当前打开的引用。 若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将到 MDI 父窗体<xref:System.Windows.Forms.Form.MdiParent%2A>子窗体的属性。</xref:System.Windows.Forms.Form.MdiParent%2A> </xref:System.Windows.Forms.Form>       此属性可用于循环访问所有 MDI 子窗体来执行操作，例如将数据保存到数据库，MDI 父窗体关闭时或更新基于你的应用程序中执行的操作将子窗体上的字段。"
  example:
  - "The following code example demonstrates how to use the MdiChildren property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.  \n  \n [!code-cpp[Form.MDIChildren#1](~/add/codesnippet/cpp/p-system.windows.forms.f_8_1.cpp)]\n [!code-cs[Form.MDIChildren#1](~/add/codesnippet/csharp/p-system.windows.forms.f_8_1.cs)]\n [!code-vb[Form.MDIChildren#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form[] MdiChildren { get; }
    return:
      type: System.Windows.Forms.Form[]
      description: "数组<xref href=&quot;System.Windows.Forms.Form&quot;></xref>对象，其中每个标识此窗体的 MDI 子窗体之一。"
  overload: System.Windows.Forms.Form.MdiChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiParent
  id: MdiParent
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiParent
  nameWithType: Form.MdiParent
  fullName: System.Windows.Forms.Form.MdiParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置此窗体的当前多文档界面 (MDI) 父窗体。"
  remarks: "若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将子窗体的 MdiParent 属性到 MDI 父窗体。</xref:System.Windows.Forms.Form> 若要获取所有子窗体都需要的全局信息或调用执行所有子窗体的操作的方法，可以使用此属性从 MDI 子窗体。      1> [!NOTE]&1;> 如果有两个<xref:System.Windows.Forms.MenuStrip>上设置的 MDI 子窗体的控件<xref:System.Windows.Forms.Form.IsMdiContainer%2A>到`true`父窗体将只有其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.Form.IsMdiContainer%2A> </xref:System.Windows.Forms.MenuStrip> 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>其他子的内容合并<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.ToolStripManager.Merge%2A>"
  example:
  - "The following code example demonstrates how to create child forms in an MDI application. The example code creates a form with unique text to identify the child form. The example uses the MdiParent property to specify that a form is a child form. This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.  \n  \n [!code-cpp[Form.MDIParent#1](~/add/codesnippet/cpp/p-system.windows.forms.f_32_1.cpp)]\n [!code-cs[Form.MDIParent#1](~/add/codesnippet/csharp/p-system.windows.forms.f_32_1.cs)]\n [!code-vb[Form.MDIParent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_32_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form MdiParent { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> ，表示 MDI 父窗体。"
  overload: System.Windows.Forms.Form.MdiParent*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Windows.Forms.Form&quot;> </xref>分配给此属性未标记为的 MDI 容器。       -或- <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>分配给此属性是子级和的 MDI 容器窗体。       -或- <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>分配给此属性位于另一个线程。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.Menu
  id: Menu
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Menu
  nameWithType: Form.Menu
  fullName: System.Windows.Forms.Form.Menu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>窗体中显示。"
  remarks: "可以使用此属性在运行时的整个菜单集合间进行切换。 例如，你可以定义一个<xref:System.Windows.Forms.MainMenu>时多文档界面 (MDI) 窗体具有没有活动的 MDI 子窗体和另一个要显示<xref:System.Windows.Forms.MainMenu>显示子窗口时显示。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MainMenu> 你还可以使用不同<xref:System.Windows.Forms.MainMenu>要求显示不同的菜单集的应用程序中存在特定条件时。</xref:System.Windows.Forms.MainMenu>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_13_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_13_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_13_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.MainMenu Menu { get; set; }
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> ，表示要在窗体中显示的菜单。"
  overload: System.Windows.Forms.Form.Menu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MenuComplete
  id: MenuComplete
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MenuComplete
  nameWithType: Form.MenuComplete
  fullName: System.Windows.Forms.Form.MenuComplete
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗体菜单失去焦点时发生。"
  remarks: "当你单击菜单中的任何菜单项中正在执行的命令该结果和该菜单失去焦点时，引发此事件。 你可以使用此事件来执行任务，如更新<xref:System.Windows.Forms.StatusBar>控制或启用和禁用<xref:System.Windows.Forms.ToolBar>.</xref:System.Windows.Forms.ToolBar>上的按钮</xref:System.Windows.Forms.StatusBar>的文本       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuComplete event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MenuComplete event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#398](~/add/codesnippet/csharp/e-system.windows.forms.f_14_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#398](~/add/codesnippet/visualbasic/e-system.windows.forms.f_14_1.vb)]"
  syntax:
    content: public event EventHandler MenuComplete;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MenuStart
  id: MenuStart
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MenuStart
  nameWithType: Form.MenuStart
  fullName: System.Windows.Forms.Form.MenuStart
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当窗体菜单接收焦点时发生。"
  remarks: "用户单击菜单中的任何菜单项时，引发此事件。 此事件可用于执行任务，例如启用和禁用菜单在访问时不应由用户访问窗体上的控件。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuStart event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MenuStart event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#399](~/add/codesnippet/csharp/e-system.windows.forms.f_20_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#399](~/add/codesnippet/visualbasic/e-system.windows.forms.f_20_1.vb)]"
  syntax:
    content: public event EventHandler MenuStart;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MergedMenu
  id: MergedMenu
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MergedMenu
  nameWithType: Form.MergedMenu
  fullName: System.Windows.Forms.Form.MergedMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取窗体的合并的菜单。"
  remarks: "在窗体合并了其父窗体的菜单的其菜单多文档界面 (MDI) 子窗体时，主要使用此属性。 此属性可用于获取 MDI 应用程序以进行更改或元素添加到菜单结构中的当前菜单结构。 若要获取的未合并<xref:System.Windows.Forms.MainMenu>分配给窗体，使用<xref:System.Windows.Forms.Form.Menu%2A>属性。</xref:System.Windows.Forms.Form.Menu%2A> </xref:System.Windows.Forms.MainMenu>"
  syntax:
    content: public System.Windows.Forms.MainMenu MergedMenu { get; }
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> ，表示窗体的合并的菜单。"
  overload: System.Windows.Forms.Form.MergedMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimizeBox
  id: MinimizeBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
  fullName: System.Windows.Forms.Form.MinimizeBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否**最小化**按钮显示窗体的标题栏中。"
  remarks: "A**最小化**按钮使用户得以最小化窗口图标。 若要显示**最小化**按钮，你还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性`FormBorderStyle.FixedSingle`， `FormBorderStyle.Sizable`， `FormBorderStyle.Fixed3D`，或`FormBorderStyle.FixedDialog`。</xref:System.Windows.Forms.Form.FormBorderStyle%2A>      1> [!NOTE]&1;> 最小化窗体，在运行时生成<xref:System.Windows.Forms.Control.Resize>事件。</xref:System.Windows.Forms.Control.Resize> <xref:System.Windows.Forms.Form.WindowState%2A>属性反映窗口的当前状态。</xref:System.Windows.Forms.Form.WindowState%2A> 如果你设置<xref:System.Windows.Forms.Form.WindowState%2A>属性`FormWindowState.Minimized`，窗体将独立于任何设置实际上适用于 MinimizeBox 最小化和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</xref:System.Windows.Forms.Form.FormBorderStyle%2A> </xref:System.Windows.Forms.Form.WindowState%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, MinimizeBox, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_27_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_27_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_27_1.vb)]"
  syntax:
    content: public bool MinimizeBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要显示**最小化**按钮窗体; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.MinimizeBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimumSize
  id: MinimumSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimumSize
  nameWithType: Form.MinimumSize
  fullName: System.Windows.Forms.Form.MinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体可调整到的最小大小。"
  remarks: "此属性可限制为指定的最小大小的窗体的大小。 此功能可用于防止用户将窗口调整为不合需要的大小。 如果此属性设置为<xref:System.Drawing.Size>是 0 高度和宽度，窗体中的为 0 的对象将具有由 Windows 设置的限制之外没有最小大小。</xref:System.Drawing.Size>"
  syntax:
    content: public override System.Drawing.Size MinimumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> ，它表示窗体的最小大小。"
  overload: System.Windows.Forms.Form.MinimumSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "高度或宽度内的值<xref href=&quot;System.Drawing.Size&quot;></xref>对象是否小于零。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimumSizeChanged
  id: MinimumSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimumSizeChanged
  nameWithType: Form.MinimumSizeChanged
  fullName: System.Windows.Forms.Form.MinimumSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时的值<xref:System.Windows.Forms.Form.MinimumSize*>属性已更改。</xref:System.Windows.Forms.Form.MinimumSize*>"
  remarks: "有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MinimumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MinimumSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#391](~/add/codesnippet/csharp/e-system.windows.forms.f_17_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#391](~/add/codesnippet/visualbasic/e-system.windows.forms.f_17_1.vb)]"
  syntax:
    content: public event EventHandler MinimumSizeChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Modal
  id: Modal
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Modal
  nameWithType: Form.Modal
  fullName: System.Windows.Forms.Form.Modal
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示是否有模式地显示此窗体。"
  remarks: "有模式地显示窗体时，不需要输入 （键盘或鼠标单击） 能对模式的窗体上的对象进行除外。 该程序必须隐藏或关闭模式中的窗体 （通常对某些用户执行任何操作的响应） 到另一种形式的输入之前进行。 有模式地显示的窗体通常用作应用程序中的对话框。       此属性可用于确定你获取从方法或属性的窗体是否已有模式地显示。       若要显示窗体以模式方式使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法。</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  example:
  - "The following code example uses the Modal property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.  \n  \n [!code-cpp[Form.Modal#1](~/add/codesnippet/cpp/p-system.windows.forms.f_20_1.cpp)]\n [!code-cs[Form.Modal#1](~/add/codesnippet/csharp/p-system.windows.forms.f_20_1.cs)]\n [!code-vb[Form.Modal#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_20_1.vb)]"
  syntax:
    content: public bool Modal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体进行模式; 显示否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.Modal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)
  id: OnActivated(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnActivated(EventArgs)
  nameWithType: Form.OnActivated(EventArgs)
  fullName: System.Windows.Forms.Form.OnActivated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Activated&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnActivated 方法还允许派生的类对事件进行处理而不必附加委托。 重写此方法是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  id: OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnBackgroundImageChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  id: OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.BackgroundImageLayoutChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnBackgroundImageLayoutChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnBackgroundImageLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)
  id: OnClosed(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnClosed(EventArgs)
  nameWithType: Form.OnClosed(EventArgs)
  fullName: System.Windows.Forms.Form.OnClosed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Closed&quot;></xref>事件。"
  remarks: "> [!CAUTION]1> OnClosed 方法已过时.NET framework 版本 2.0;使用<xref:System.Windows.Forms.Form.OnFormClosed%2A>方法相反。</xref:System.Windows.Forms.Form.OnFormClosed%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Windows.Forms.Form.OnFormClosed%2A>方法还允许派生的类对事件进行处理而不必附加委托。</xref:System.Windows.Forms.Form.OnFormClosed%2A> 重写此方法是处理派生类中的事件的首选的技术。      1> [!CAUTION]&1;> OnClosed 和<xref:System.Windows.Forms.Form.OnClosing%2A>方法不调用时<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>调用方法以退出应用程序。</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.OnClosing%2A> 如果你有必须执行这些方法之一的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to override the OnClosed method in a class derived from <xref:System.Windows.Forms.Form> .  \n  \n [!code-cs[System.Drawing.PointsAndSizes#6](~/add/codesnippet/csharp/m-system.windows.forms.f_4_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#6](~/add/codesnippet/cpp/m-system.windows.forms.f_4_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#6](~/add/codesnippet/visualbasic/m-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: protected virtual void OnClosed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  id: OnClosing(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnClosing(CancelEventArgs)
  nameWithType: Form.OnClosing(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnClosing(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Closing&quot;></xref>事件。"
  remarks: "> [!CAUTION]1> OnClosing 方法已过时.NET framework 版本 2.0;使用<xref:System.Windows.Forms.Form.OnFormClosing%2A>方法相反。</xref:System.Windows.Forms.Form.OnFormClosing%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnClosing 方法还允许派生的类对事件进行处理而不必附加委托。 重写此方法是处理派生类中的事件的首选的技术。      1> [!CAUTION]&1;><xref:System.Windows.Forms.Form.OnClosed%2A>和时，不会调用 OnClosing 方法<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>调用方法以退出应用程序。</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.OnClosed%2A> 如果你有必须执行这些方法之一的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \n  \n [!code-cs[Form.Closing#1](~/add/codesnippet/csharp/m-system.windows.forms.f_8_1.cs)]\n [!code-vb[Form.Closing#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_8_1.vb)]\n [!code-cpp[Form.Closing#1](~/add/codesnippet/cpp/m-system.windows.forms.f_8_1.cpp)]"
  syntax:
    content: protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>包含事件数据。</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Form.OnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnCreateControl
  id: OnCreateControl
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnCreateControl()
  nameWithType: Form.OnCreateControl()
  fullName: System.Windows.Forms.Form.OnCreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref uid=&quot;langword_csharp_CreateControl&quot; name=&quot;CreateControl&quot; href=&quot;&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected override void OnCreateControl ();
    parameters: []
  overload: System.Windows.Forms.Form.OnCreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  id: OnDeactivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnDeactivate(EventArgs)
  nameWithType: Form.OnDeactivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnDeactivate(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Deactivate&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnDeactivate 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnDeactivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnDeactivate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  id: OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnEnabledChanged(EventArgs)
  nameWithType: Form.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)
  id: OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnEnter(EventArgs)
  nameWithType: Form.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.Enter&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnEnter 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: Form.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  id: OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFormClosed(FormClosedEventArgs)
  nameWithType: Form.OnFormClosed(FormClosedEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosed(FormClosedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.FormClosed&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Form.OnFormClosing%2A>方法可以删除从<xref:System.Windows.Forms.Application.OpenForms%2A>的关联<xref:System.Windows.Forms.Application>。</xref:System.Windows.Forms.Application>集合</xref:System.Windows.Forms.Application.OpenForms%2A>的当前窗体</xref:System.Windows.Forms.Form.OnFormClosing%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnFormClosed 方法还允许派生的类对事件进行处理而不必附加委托。 重写此方法是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.FormClosedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.FormClosedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.Form.OnFormClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  id: OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFormClosing(FormClosingEventArgs)
  nameWithType: Form.OnFormClosing(FormClosingEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosing(FormClosingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.FormClosing&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnFormClosing 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.FormClosingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.FormClosingEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.Form.OnFormClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: Form.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;></xref>事件。"
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Form.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;></xref>事件。"
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  id: OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHelpButtonClicked(CancelEventArgs)
  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnHelpButtonClicked(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.HelpButtonClicked&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnHelpButtonClicked 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>包含事件数据。</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Form.OnHelpButtonClicked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  id: OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)
  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.InputLanguageChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnInputLanguageChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InputLanguageChangedEventArgs
      description: "<xref href=&quot;System.Windows.Forms.InputLanguageChangedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.Form.OnInputLanguageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  id: OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)
  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.InputLanguageChanging&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnInputLanguageChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InputLanguageChangingEventArgs
      description: "<xref href=&quot;System.Windows.Forms.InputLanguageChangingEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.Form.OnInputLanguageChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  id: OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnLayout(LayoutEventArgs)
  nameWithType: Form.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Form.OnLayout(LayoutEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.Layout&quot;></xref>事件。"
  syntax:
    content: protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);
    parameters:
    - id: levent
      type: System.Windows.Forms.LayoutEventArgs
      description: "事件数据。"
  overload: System.Windows.Forms.Form.OnLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: Form.OnLoad(EventArgs)
  fullName: System.Windows.Forms.Form.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Load&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnLoad 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  id: OnMaximizedBoundsChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMaximizedBoundsChanged(EventArgs)
  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximizedBoundsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MaximizedBoundsChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMaximizedBoundsChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMaximizedBoundsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMaximizedBoundsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  id: OnMaximumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMaximumSizeChanged(EventArgs)
  nameWithType: Form.OnMaximumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximumSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MaximumSizeChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMaximumSizeChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMaximumSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMaximumSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  id: OnMdiChildActivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMdiChildActivate(EventArgs)
  nameWithType: Form.OnMdiChildActivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnMdiChildActivate(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MdiChildActivate&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMdiChildActivate 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMdiChildActivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMdiChildActivate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  id: OnMenuComplete(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMenuComplete(EventArgs)
  nameWithType: Form.OnMenuComplete(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuComplete(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MenuComplete&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMenuComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMenuComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMenuComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  id: OnMenuStart(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMenuStart(EventArgs)
  nameWithType: Form.OnMenuStart(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuStart(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MenuStart&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMenuStart 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMenuStart (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMenuStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  id: OnMinimumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMinimumSizeChanged(EventArgs)
  nameWithType: Form.OnMinimumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMinimumSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.MinimumSizeChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnMinimumSizeChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnMinimumSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMinimumSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  id: OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnPaint(PaintEventArgs)
  nameWithType: Form.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Form.OnPaint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.Paint&quot;></xref>事件。"
  syntax:
    content: protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.Form.OnPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: Form.OnResize(EventArgs)
  fullName: System.Windows.Forms.Form.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.Resize&quot;></xref>事件。"
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  id: OnResizeBegin(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResizeBegin(EventArgs)
  nameWithType: Form.OnResizeBegin(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeBegin(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.ResizeBegin&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Form.ResizeBegin>将仅引发事件，如果窗体的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>属性设置为`true`。</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Form.ResizeBegin>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnResizeBegin 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnResizeBegin (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResizeBegin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  id: OnResizeEnd(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResizeEnd(EventArgs)
  nameWithType: Form.OnResizeEnd(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeEnd(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.ResizeEnd&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Form.ResizeEnd>将仅引发事件，如果窗体的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>属性设置为`true`。</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Form.ResizeEnd>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnResizeEnd 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnResizeEnd (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResizeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  id: OnRightToLeftLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnRightToLeftLayoutChanged(EventArgs)
  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.RightToLeftLayoutChanged&quot;></xref>事件。"
  remarks: "如果正在释放资源的当前窗体或其父级之一，OnRightToLeftLayoutChanged 方法将返回而不执行任何操作。 如果<xref:System.Windows.Forms.Control.RightToLeft%2A>窗体的属性具有的值<xref:System.Windows.Forms.RightToLeft>，然后将通过对的调用中重新创建窗体及其子控件的句柄<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</xref:System.Windows.Forms.Control.RecreateHandle%2A> </xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnRightToLeftLayoutChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRightToLeftLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)
  id: OnShown(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnShown(EventArgs)
  nameWithType: Form.OnShown(EventArgs)
  fullName: System.Windows.Forms.Form.OnShown(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Form.Shown&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Form.Shown>事件发生时首次显示窗体。</xref:System.Windows.Forms.Form.Shown>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnShown 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnShown (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnShown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  id: OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnStyleChanged(EventArgs)
  nameWithType: Form.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.StyleChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: Form.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  id: OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnVisibleChanged(EventArgs)
  nameWithType: Form.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。       OnVisibleChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Opacity
  id: Opacity
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Opacity
  nameWithType: Form.Opacity
  fullName: System.Windows.Forms.Form.Opacity
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体的不透明度级别。"
  remarks: "不透明度属性使你能够指定为窗体及其控件的透明度级别。 当此属性设置为小于 100%(1.00) 的值时，整个窗体中，包括边框、 进行更加透明。 此属性设置为值为 0%(0.00) 使窗体完全不可见。 你可以使用此属性，以提供不同级别的透明度或提供如窗体逐渐加入或退出视图的效果。 例如，可以通过设置为值为 0%(0.00) 的不透明度属性并逐渐增加的值，直至其达到 100%(1.00)，一个窗体逐渐到视图。       不透明度不同于由提供的透明度<xref:System.Windows.Forms.Form.TransparencyKey%2A>、 这只是使窗体和其控件完全透明如果它们是中指定的值与相同的颜色<xref:System.Windows.Forms.Form.TransparencyKey%2A>属性。</xref:System.Windows.Forms.Form.TransparencyKey%2A> </xref:System.Windows.Forms.Form.TransparencyKey%2A>       此属性不是支持时<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>       不透明度属性取决于分层的 Windows API 引入了在 Windows 2000 中使用。 有关详细信息，请参阅&quot;分层 Windows:: 新方式对使用透明度和透明度效果在 Windows 应用程序&quot;中的平台 SDK 文档[http://msdn.microsoft.com](http://msdn.microsoft.com/)。"
  example:
  - "The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The code example creates a new form that is positioned in the center of the screen with an Opacity property set to change the opacity level of the form. The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form. This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-cpp[Form.Opacity#1](~/add/codesnippet/cpp/p-system.windows.forms.f_21_1.cpp)]\n [!code-cs[Form.Opacity#1](~/add/codesnippet/csharp/p-system.windows.forms.f_21_1.cs)]\n [!code-vb[Form.Opacity#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_21_1.vb)]"
  syntax:
    content: public double Opacity { get; set; }
    return:
      type: System.Double
      description: "窗体的不透明度级别。 默认值为 1.00。"
  overload: System.Windows.Forms.Form.Opacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OwnedForms
  id: OwnedForms
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OwnedForms
  nameWithType: Form.OwnedForms
  fullName: System.Windows.Forms.Form.OwnedForms
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个数组<xref href=&quot;System.Windows.Forms.Form&quot;></xref>表示此窗体拥有的所有窗体的对象。"
  remarks: "此属性返回一个数组，包含此窗体拥有的所有窗体。 若要使窗体拥有的另一种形式，调用<xref:System.Windows.Forms.Form.AddOwnedForm%2A>方法。</xref:System.Windows.Forms.Form.AddOwnedForm%2A> 分配给所有者窗体的窗体将保持拥有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>调用方法。</xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 你还可以通过设置拥有的另一个窗体<xref:System.Windows.Forms.Form.Owner%2A>属性对其所有者窗体的引用。</xref:System.Windows.Forms.Form.Owner%2A>       当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。 例如，考虑名为窗体`Form2`归名为窗体`Form1`。 如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。 附属窗体还永远不会显示在其所有者的窗体后面。 可以拥有的窗体以 windows 使用如查找和替换 windows，不应在选择所有者窗体时显示在所有者窗体。      1> [!NOTE]&1;> 如果窗体是多文档界面 (MDI) 父窗体，该属性将返回所有当前打开任何 MDI 子窗体除了显示的窗体。 若要获取在 MDI 父窗体中打开的 MDI 子窗体，请使用<xref:System.Windows.Forms.Form.MdiChildren%2A>属性。</xref:System.Windows.Forms.Form.MdiChildren%2A>"
  example:
  - "The following code example demonstrates how to use the OwnedForms property to modify all forms owned by the owner form. The first method in the example adds forms to the array of owned forms associated with the owned form. The second method loops through all owned forms and changes the caption. This example requires that both methods are called by an event or other method of a form.  \n  \n [!code-vb[Form.OwnedForms#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_33_1.vb)]\n [!code-cs[Form.OwnedForms#1](~/add/codesnippet/csharp/p-system.windows.forms.f_33_1.cs)]\n [!code-cpp[Form.OwnedForms#1](~/add/codesnippet/cpp/p-system.windows.forms.f_33_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Form[] OwnedForms { get; }
    return:
      type: System.Windows.Forms.Form[]
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>数组，表示此窗体的附属窗体。"
  overload: System.Windows.Forms.Form.OwnedForms*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Owner
  id: Owner
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Owner
  nameWithType: Form.Owner
  fullName: System.Windows.Forms.Form.Owner
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置拥有此窗体的窗体。"
  remarks: "若要使窗体拥有的另一种形式，将其所有者属性分配到将成为所有者的窗体的引用。       当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。 例如，考虑名为窗体`Form2`归名为窗体`Form1`。 如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。附属窗体还永远不会显示在其所有者的窗体后面。 你可以拥有的窗体以 windows 使用如查找和替换 windows，选中所有者窗体时应不会消失。 若要确定属于父窗体的窗体，请使用<xref:System.Windows.Forms.Form.OwnedForms%2A>属性。</xref:System.Windows.Forms.Form.OwnedForms%2A>"
  syntax:
    content: public System.Windows.Forms.Form Owner { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> ，表示此窗体的所有者的窗体。"
  overload: System.Windows.Forms.Form.Owner*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "顶级窗口不能有一个所有者。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Form.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Form.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "处理命令键。"
  remarks: "ProcessCmdKey 方法重写基<xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName>实现以提供的主菜单命令键和 MDI 快捷键的其他处理。</xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName>       有关捕获击键的信息，请参阅&quot;如何使用 Visual C# 陷阱控件中的键击&quot;和&quot;如何通过使用 Visual Basic.NET 陷阱.NET 控件中的键击&quot;http://support.microsoft.com 在 Microsoft 知识库。"
  syntax:
    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>，按引用传递，表示要处理的 Win32 消息。"
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "之一<xref href=&quot;System.Windows.Forms.Keys&quot;></xref>这些值表示要处理的键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果处理并使用击键，由控件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以允许进一步处理。"
  overload: System.Windows.Forms.Form.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  id: ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessDialogChar(Char)
  nameWithType: Form.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Form.ProcessDialogChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "处理对话框字符。"
  syntax:
    content: protected override bool ProcessDialogChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "要处理的字符。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已由控件; 处理否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ProcessDialogChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: Form.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Form.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "处理对话框键。"
  remarks: "ProcessDialogKey 方法重写基<xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName>实现以提供的对话框中的返回和转义键的其他处理。</xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> 该方法对包括的 ALT 或控件的修饰符的击键执行不会进行处理。"
  syntax:
    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "之一<xref href=&quot;System.Windows.Forms.Keys&quot;></xref>这些值表示要处理的键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果处理并使用击键，由控件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以允许进一步处理。"
  overload: System.Windows.Forms.Form.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  id: ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessKeyPreview(Message)
  nameWithType: Form.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Form.ProcessKeyPreview(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "预览键盘消息。"
  syntax:
    content: protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>，按引用传递，表示要处理的窗口消息。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果消息已由控件; 处理否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ProcessKeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  id: ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessMnemonic(Char)
  nameWithType: Form.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Form.ProcessMnemonic(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "处理助记键字符。"
  syntax:
    content: protected override bool ProcessMnemonic (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "要处理的字符。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已由控件; 处理作为助记键否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ProcessMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  id: ProcessTabKey(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessTabKey(Boolean)
  nameWithType: Form.ProcessTabKey(Boolean)
  fullName: System.Windows.Forms.Form.ProcessTabKey(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "选择下一个可用控件并使其成为活动控件。"
  syntax:
    content: protected override bool ProcessTabKey (bool forward);
    parameters:
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前循环 ContainerControl; 中的控件否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件被选定;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ProcessTabKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  id: RemoveOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RemoveOwnedForm(Form)
  nameWithType: Form.RemoveOwnedForm(Form)
  fullName: System.Windows.Forms.Form.RemoveOwnedForm(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "此窗体移除附属窗体。"
  remarks: "调用 RemoveOwnedForm 方法将一直拥有分配给所有者窗体的窗体。 除了附属窗体移除附属窗体的列表，此方法还将所有者窗体设置为`null`。"
  syntax:
    content: public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);
    parameters:
    - id: ownedForm
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>表示要从列表中删除的窗体拥有此窗体的窗体。"
  overload: System.Windows.Forms.Form.RemoveOwnedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ResizeBegin
  id: ResizeBegin
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ResizeBegin
  nameWithType: Form.ResizeBegin
  fullName: System.Windows.Forms.Form.ResizeBegin
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当窗体进入大小调整模式时发生。"
  remarks: "当用户开始调整窗体中，大小通常，通过单击和拖动其中一个边框或位于在窗体右下角的大小调整手柄引发 ResizeBegin 事件。 此操作将窗体进入大小调整模式循环，直到大小调整操作完成。 通常情况下，调整大小操作期间发生以下一组事件︰ 1。  窗体进入大小调整模式，将发生了单个 ResizeBegin 事件。      2.  零个或多个对<xref:System.Windows.Forms.Control.Resize>和<xref:System.Windows.Forms.Control.SizeChanged>事件发生为窗体的<xref:System.Windows.Forms.Form.Size%2A>被修改。</xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Windows.Forms.Control.Resize>      3.  单个<xref:System.Windows.Forms.Form.ResizeEnd>事件发生窗体退出大小调整模式。</xref:System.Windows.Forms.Form.ResizeEnd>      1> [!NOTE]&1;> 只通过单击而无需拖动边框或大小调整手柄将生成 ResizeBegin 和<xref:System.Windows.Forms.Form.ResizeEnd>事件而无需任何中间<xref:System.Windows.Forms.Control.Resize>和<xref:System.Windows.Forms.Control.SizeChanged>事件对。</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Windows.Forms.Control.Resize> </xref:System.Windows.Forms.Form.ResizeEnd>       ResizeBegin 和<xref:System.Windows.Forms.Form.ResizeEnd>当用户将窗体中的，通常通过单击并拖动标题栏上，也会引发的事件对</xref:System.Windows.Forms.Form.ResizeEnd> 这些事件不由生成的窗体中，编程操作例如通过更改<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>属性。</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Form.Size%2A>       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeBegin event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the ResizeBegin event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#404](~/add/codesnippet/csharp/e-system.windows.forms.f_3_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#404](~/add/codesnippet/visualbasic/e-system.windows.forms.f_3_1.vb)]"
  syntax:
    content: public event EventHandler ResizeBegin;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ResizeEnd
  id: ResizeEnd
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ResizeEnd
  nameWithType: Form.ResizeEnd
  fullName: System.Windows.Forms.Form.ResizeEnd
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗体退出大小调整模式时发生。"
  remarks: "当用户完成调整大小操作窗体中，通常通过拖动其中一个边框或大小调整手柄的右下角的窗体中，然后将其释放时，将引发 ResizeEnd 事件。 有关大小调整操作的详细信息，请参阅<xref:System.Windows.Forms.Form.ResizeBegin>事件。</xref:System.Windows.Forms.Form.ResizeBegin>       之后用户移动窗体中，通常通过单击和拖动在标题栏上，也会生成 ResizeEnd 事件。 此事件不由生成的窗体中，编程操作例如通过更改<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>属性。</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Form.Size%2A>       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeEnd event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the ResizeEnd event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#405](~/add/codesnippet/csharp/e-system.windows.forms.f_16_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#405](~/add/codesnippet/visualbasic/e-system.windows.forms.f_16_1.vb)]"
  syntax:
    content: public event EventHandler ResizeEnd;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RestoreBounds
  id: RestoreBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
  fullName: System.Windows.Forms.Form.RestoreBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取在其正常窗口状态的位置和窗体大小。"
  remarks: "通常情况下，你可以使用 RestoreBounds 属性跟踪用户的窗口大小，并在其正常窗口状态放置窗体的首选项。 应跟踪这两个值的<xref:System.Windows.Forms.Form.WindowState%2A>和 RestoreBounds 属性跟踪用户的窗口首选项时。</xref:System.Windows.Forms.Form.WindowState%2A>      1> [!NOTE]&1;> RestoreBounds 属性的值是仅当<xref:System.Windows.Forms.Form.WindowState%2A><xref:System.Windows.Forms.Form>类是否不等于<xref:System.Windows.Forms.FormWindowState>.</xref:System.Windows.Forms.FormWindowState></xref:System.Windows.Forms.Form>属性</xref:System.Windows.Forms.Form.WindowState%2A>"
  syntax:
    content: public System.Drawing.Rectangle RestoreBounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ，其中包含的位置和大小的窗体中正常窗口状态。"
  overload: System.Windows.Forms.Form.RestoreBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RightToLeftLayout
  id: RightToLeftLayout
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
  fullName: System.Windows.Forms.Form.RightToLeftLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否打开从右向左的镜像放置。"
  remarks: "RightToLeftLayout 属性是主要用于为全球受众开发全球通用的窗体。 许多窗体经过专门设计，因此，以从左到右的方式在窗体上的控件进行布局。 这些窗体将遵循此编写指导的语言与兼容。 但是，当向右到左语言的用户显示相同的窗体时，通常最好是反向窗体上控件的顺序。 如果这两个 RightToLeftLayout 和<xref:System.Windows.Forms.Control.RightToLeft%2A>属性`true`，镜像将打开窗体，并且控件放置和文本流将为从右到左。</xref:System.Windows.Forms.Control.RightToLeft%2A>       与不同<xref:System.Windows.Forms.Control.RightToLeft%2A>，RightToLeftLayout 不会继承。</xref:System.Windows.Forms.Control.RightToLeft%2A> 如果您希望其生效子控件，你必须将它设置每个要镜像的子控件。       当 RightToLeftLayout 设置为不支持所有者描述`Yes`。 仍将发生所有者 draw 事件，但未定义这些事件中编写任何代码的行为。 此外， <xref:System.Windows.Forms.Control.BackgroundImage%2A>， <xref:System.Windows.Forms.Form.Opacity%2A>， <xref:System.Windows.Forms.Form.TransparencyKey%2A>，并且不支持绘制事件。</xref:System.Windows.Forms.Form.TransparencyKey%2A> </xref:System.Windows.Forms.Form.Opacity%2A> </xref:System.Windows.Forms.Control.BackgroundImage%2A>       RightToLeftLayout 和<xref:System.Windows.Forms.Control.RightToLeft%2A>属性会导致以下 Win32 API 窗口样式设置:-当<xref:System.Windows.Forms.Control.RightToLeft%2A>设置为`Yes`和 RightToLeftLayout 设置为`true`，Windows 窗体设置`WS_EX_LAYOUTRTL`窗口样式，并移除`WS_EX_RIGHT`和`WS_EX_RTLREADING`样式。</xref:System.Windows.Forms.Control.RightToLeft%2A> </xref:System.Windows.Forms.Control.RightToLeft%2A>      -如果<xref:System.Windows.Forms.Control.RightToLeft%2A>设置为`Yes`但 RightToLeftLayout 设置为`No`，Windows 窗体设置`WS_EX_RIGHT`和`WS_EX_RTLREADING`窗口样式。</xref:System.Windows.Forms.Control.RightToLeft%2A>       更改此属性的值引发<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>       有关的全球化问题的详细信息，请参阅[开发全球通用应用程序的最佳实践](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool RightToLeftLayout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果从右到左的镜像放置处于打开状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>对于标准子控件放置。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.RightToLeftLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged
  id: RightToLeftLayoutChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RightToLeftLayoutChanged
  nameWithType: Form.RightToLeftLayoutChanged
  fullName: System.Windows.Forms.Form.RightToLeftLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "值之后发生<xref:System.Windows.Forms.Form.RightToLeftLayout*>属性更改。</xref:System.Windows.Forms.Form.RightToLeftLayout*>"
  remarks: "<xref:System.Windows.Forms.Control.RightToLeft%2A>和<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>开发全球通用应用程序通常使用属性。</xref:System.Windows.Forms.Form.RightToLeftLayout%2A> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RightToLeftLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the RightToLeftLayoutChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#402](~/add/codesnippet/csharp/e-system.windows.forms.f_21_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#402](~/add/codesnippet/visualbasic/e-system.windows.forms.f_21_1.vb)]"
  syntax:
    content: public event EventHandler RightToLeftLayoutChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Form.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "缩放位置、 大小、 填充和边距的控件。"
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "所依据的高度和宽度的控件缩放因子。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref>值，该值指定要定义其大小和位置时使用的控件的边界。"
  overload: System.Windows.Forms.Form.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  id: ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ScaleCore(Single,Single)
  nameWithType: Form.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Form.ScaleCore(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "执行窗体缩放。"
  syntax:
    content: protected override void ScaleCore (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "水平缩放窗体的百分比"
    - id: y
      type: System.Single
      description: "垂直缩放窗体的百分比"
  overload: System.Windows.Forms.Form.ScaleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  id: Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Select(Boolean,Boolean)
  nameWithType: Form.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Form.Select(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "选择此窗体，并根据需要选择一个或下一个控件。"
  syntax:
    content: protected override void Select (bool directed, bool forward);
    parameters:
    - id: directed
      type: System.Boolean
      description: "如果更改设置为 true，活动控件"
    - id: forward
      type: System.Boolean
      description: "如果指示为 true，则此参数控制在其中移动焦点的方向。 如果这是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，然后下一个控件被选定; 否则上, 一个控件被选定。"
  overload: System.Windows.Forms.Form.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "执行设置此控件的指定的边界的工作。"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Left*>的控件属性值。</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Top*>的控件属性值。</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Width*>的控件属性值。</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Height*>的控件属性值。</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "按位组合<xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref>值。"
  overload: System.Windows.Forms.Form.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  id: SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Form.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetClientSizeCore(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "设置窗体的工作区大小。 这将调整要将工作区大小所请求的大小的窗体的边界。"
  syntax:
    content: protected override void SetClientSizeCore (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "请求的客户端区域的宽度。"
    - id: y
      type: System.Int32
      description: "请求的客户端区域的高度。"
  overload: System.Windows.Forms.Form.SetClientSizeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetDesktopBounds(Int32,Int32,Int32,Int32)
  nameWithType: Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "以桌面坐标设置窗体的边界。"
  remarks: "桌面坐标相对于屏幕，其中不包括任务栏的工作区域。 你可以使用此方法在桌面上设置的位置和大小的窗体。 因为桌面坐标基于窗体的工作区域，可以使用此方法以确保你的窗体是完全在桌面上可见。"
  example:
  - "The following code example demonstrates using the SetDesktopBounds method. To run this example, paste the following code in a form that contains a button named `Button2`. Ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.FormExample#2](~/add/codesnippet/csharp/aeb52b4e-75f0-4c8f-b371-_1.cs)]\n [!code-vb[System.Windows.Forms.FormExample#2](~/add/codesnippet/visualbasic/aeb52b4e-75f0-4c8f-b371-_1.vb)]\n [!code-cpp[System.Windows.Forms.FormExample#2](~/add/codesnippet/cpp/aeb52b4e-75f0-4c8f-b371-_1.cpp)]"
  syntax:
    content: public void SetDesktopBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "窗体的位置的 x 坐标。"
    - id: y
      type: System.Int32
      description: "窗体的位置的 y 坐标。"
    - id: width
      type: System.Int32
      description: "窗体宽度。"
    - id: height
      type: System.Int32
      description: "窗体的高度。"
  overload: System.Windows.Forms.Form.SetDesktopBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  id: SetDesktopLocation(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetDesktopLocation(Int32,Int32)
  nameWithType: Form.SetDesktopLocation(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopLocation(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "以桌面坐标设置窗体的位置。"
  remarks: "桌面坐标相对于屏幕，其中不包括任务栏的工作区域。 此方法可用于在桌面上定位你的窗体。 因为桌面坐标基于窗体的工作区域，可以使用此方法以确保你的窗体是完全在桌面上可见。 此方法应主要用于顶级窗体;使用<xref:System.Windows.Forms.Form.LayoutMdi%2A>方法定位多文档界面 (MDI) 子窗体。</xref:System.Windows.Forms.Form.LayoutMdi%2A>"
  example:
  - "The following code example demonstrates how to use the SetDesktopLocation, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/m-system.windows.forms.f_9_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_9_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/m-system.windows.forms.f_9_1.cpp)]"
  syntax:
    content: public void SetDesktopLocation (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "窗体的位置的 x 坐标。"
    - id: y
      type: System.Int32
      description: "窗体的位置的 y 坐标。"
  overload: System.Windows.Forms.Form.SetDesktopLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  id: SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetVisibleCore(Boolean)
  nameWithType: Form.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Form.SetVisibleCore(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将控件设置为指定的可见状态。"
  syntax:
    content: protected override void SetVisibleCore (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使控件可见;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.SetVisibleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  id: Show(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Show(IWin32Window)
  nameWithType: Form.Show(IWin32Window)
  fullName: System.Windows.Forms.Form.Show(IWin32Window)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向用户显示具有指定所有者的窗体。"
  remarks: "此方法可用于显示的非模式窗体。 当你使用此方法，<xref:System.Windows.Forms.Form.Owner%2A>窗体的属性设置为`owner`。</xref:System.Windows.Forms.Form.Owner%2A> 非模式窗体可以使用<xref:System.Windows.Forms.Form.Owner%2A>属性以获取有关所属的窗体的信息。</xref:System.Windows.Forms.Form.Owner%2A>  调用此方法等同于设置<xref:System.Windows.Forms.Form.Owner%2A>非模式的属性，然后再调用<xref:System.Windows.Forms.Control.Show>方法。</xref:System.Windows.Forms.Control.Show> </xref:System.Windows.Forms.Form.Owner%2A>       显示窗体等效于设置<xref:System.Windows.Forms.Control.Visible%2A>属性`true`。</xref:System.Windows.Forms.Control.Visible%2A> Show 方法调用后，<xref:System.Windows.Forms.Control.Visible%2A>属性返回的值`true`直到<xref:System.Windows.Forms.Control.Hide%2A>调用方法。</xref:System.Windows.Forms.Control.Hide%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  syntax:
    content: public void Show (System.Windows.Forms.IWin32Window owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.IWin32Window
      description: "实现任何对象<xref href=&quot;System.Windows.Forms.IWin32Window&quot;></xref>和表示将拥有此窗体的顶级窗口。"
  overload: System.Windows.Forms.Form.Show*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "正在显示的窗体已经可见。       -窗体中指定<code> owner </code>参数是正在显示的窗体相同。       -或者-正在显示的窗体处于禁用状态。       -或者-正在显示的窗体不是顶级窗口。       -或者-窗体显示为对话框中已有模式窗体。       -或-当前进程不在用户交互模式下运行 (有关详细信息，请参阅<xref:System.Windows.Forms.SystemInformation.UserInteractive*>)。</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowDialog
  id: ShowDialog
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowDialog()
  nameWithType: Form.ShowDialog()
  fullName: System.Windows.Forms.Form.ShowDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗体显示为模式对话框。"
  remarks: "此方法可用于在你的应用程序中显示模式对话框。 当调用此方法时，后面的代码后关闭该对话框不执行之前。 对话框中可以分配的值之一<xref:System.Windows.Forms.DialogResult>枚举通过将其分配给<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上或通过设置<xref:System.Windows.Forms.Form.DialogResult%2A>的窗体代码中的属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.DialogResult> 此方法然后返回此值。 此返回值可用于确定如何处理发生在对话框中的操作。 例如，如果对话框已关闭并返回`DialogResult.Cancel`值通过这种方法，你可以阻止从执行到 ShowDialog 调用后面的代码。       当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</xref:System.Windows.Forms.Form.DialogResult%2A> 与非模式窗体，不同<xref:System.Windows.Forms.Form.Close%2A>方法不在用户单击对话框中的关闭窗体按钮或设置的值时由.NET Framework 调用<xref:System.Windows.Forms.Form.DialogResult%2A>属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.Close%2A> 改为窗体将隐藏，并且可以再次显示而无需创建对话框中的新实例。 因为窗体显示为对话框中隐藏而不是关闭，你必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</xref:System.Windows.Forms.Control.Dispose%2A>       此版本的 ShowDialog 方法未指定为其所有者的窗体或控件。 当调用此版本时，当前处于活动状态窗口进行对话框框的所有者。 如果你想要指定特定的所有者，则使用此方法的其他版本。"
  example:
  - "The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box. The example uses the version of ShowDialog that specifies an owner for the dialog box.  \n  \n [!code-cs[Classic Form.ShowDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_13_1.cs)]\n [!code-cpp[Classic Form.ShowDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_13_1.cpp)]\n [!code-vb[Classic Form.ShowDialog Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_13_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog ();
    parameters: []
    return:
      type: System.Windows.Forms.DialogResult
      description: "之一<xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref>值。"
  overload: System.Windows.Forms.Form.ShowDialog*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "正在显示的窗体已经可见。       -或者-正在显示的窗体处于禁用状态。       -或者-正在显示的窗体不是顶级窗口。       -或者-窗体显示为对话框中已有模式窗体。       -或-当前进程不在用户交互模式下运行 (有关详细信息，请参阅<xref:System.Windows.Forms.SystemInformation.UserInteractive*>)。</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  id: ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowDialog(IWin32Window)
  nameWithType: Form.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.Form.ShowDialog(IWin32Window)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗体显示为模式对话框与指定所有者。"
  remarks: "此方法可用于在你的应用程序中显示模式对话框。 当调用此方法时，后面的代码后关闭该对话框不执行之前。 对话框中可以分配的值之一<xref:System.Windows.Forms.DialogResult>通过将其分配给<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上或通过设置<xref:System.Windows.Forms.Form.DialogResult%2A>的窗体代码中的属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.DialogResult> 此方法然后返回此值。 此返回值可用于确定如何处理发生在对话框中的操作。 例如，如果对话框已关闭并返回`DialogResult.Cancel`值通过这种方法，你可以阻止之后对调用代码<xref:System.Windows.Forms.Form.ShowDialog%2A>执行。</xref:System.Windows.Forms.Form.ShowDialog%2A>       当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</xref:System.Windows.Forms.Form.DialogResult%2A> 与无模式的窗体，不同<xref:System.Windows.Forms.Form.Close%2A>方法不在用户单击对话框中的关闭窗体按钮或设置的值时由.NET Framework 调用<xref:System.Windows.Forms.Form.DialogResult%2A>属性。</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.Close%2A> 改为窗体将隐藏，并且可以再次显示而无需创建对话框中的新实例。 因为窗体显示为对话框中隐藏而不是关闭，你必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</xref:System.Windows.Forms.Control.Dispose%2A>       此版本的<xref:System.Windows.Forms.Form.ShowDialog%2A>方法允许你指定将拥有显示的对话框中的特定形式。</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  example:
  - "The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.  \n  \n [!code-cs[Classic Form.ShowDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_11_1.cs)]\n [!code-cpp[Classic Form.ShowDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_11_1.cpp)]\n [!code-vb[Classic Form.ShowDialog Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.IWin32Window
      description: "实现任何对象<xref href=&quot;System.Windows.Forms.IWin32Window&quot;> </xref> ，表示将拥有模式对话框的顶级窗口。"
    return:
      type: System.Windows.Forms.DialogResult
      description: "之一<xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref>值。"
  overload: System.Windows.Forms.Form.ShowDialog*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在指定的窗体<code> owner </code>参数是正在显示的窗体相同。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "正在显示的窗体已经可见。       -或者-正在显示的窗体处于禁用状态。       -或者-正在显示的窗体不是顶级窗口。       -或者-窗体显示为对话框中已有模式窗体。       -或-当前进程不在用户交互模式下运行 (有关详细信息，请参阅<xref:System.Windows.Forms.SystemInformation.UserInteractive*>)。</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowIcon
  id: ShowIcon
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowIcon
  nameWithType: Form.ShowIcon
  fullName: System.Windows.Forms.Form.ShowIcon
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否在窗体的标题栏中显示一个图标。"
  remarks: "ShowIcon 属性包含<xref:System.Boolean>值，该值指示是否在窗体的<xref:System.Windows.Forms.Form.Icon%2A>窗体的标题栏中显示。</xref:System.Windows.Forms.Form.Icon%2A> </xref:System.Boolean> 如果<xref:System.Windows.Forms.Form.ControlBox%2A>属性是`false`，图标和控件框将被抑制。</xref:System.Windows.Forms.Form.ControlBox%2A>       如果 ShowIcon`false`的通用图标时显示主窗体，将显示在应用程序的任务栏按钮。       此属性不起如果<xref:System.Windows.Forms.Form.FormBorderStyle%2A>设置为<xref:System.Windows.Forms.FormBorderStyle>。</xref:System.Windows.Forms.FormBorderStyle> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> 在这种情况下，窗体不显示一个图标。"
  syntax:
    content: public bool ShowIcon { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗体的标题栏; 中显示图标否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ShowIcon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowInTaskbar
  id: ShowInTaskbar
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
  fullName: System.Windows.Forms.Form.ShowInTaskbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否在 Windows 任务栏中显示窗体。"
  remarks: "如果窗体有父级在另一个窗体，该父窗体不会显示 Windows 任务栏中。       此属性可用于防止用户选择通过 Windows 任务栏窗体。 例如，如果你的应用程序中显示的查找和替换工具窗口，你可能想要防止该窗口因为你将需要应用程序的主窗口和查找和替换工具窗口显示，以便适当地处理搜索通过 Windows 任务栏被选中。       你将通常想要使用此属性时创建的窗体具有<xref:System.Windows.Forms.FormBorderStyle>样式。</xref:System.Windows.Forms.FormBorderStyle> 设置<xref:System.Windows.Forms.FormBorderStyle>样式不单独保证不将在任务栏中出现一个窗口。</xref:System.Windows.Forms.FormBorderStyle>"
  example:
  - "The following code example demonstrates how to use the ShowInTaskbar property to make a dialog box that is not displayed in the Windows taskbar.  \n  \n [!code-cpp[Form.ShowInTaskbar#1](~/add/codesnippet/cpp/p-system.windows.forms.f_7_1.cpp)]\n [!code-cs[Form.ShowInTaskbar#1](~/add/codesnippet/csharp/p-system.windows.forms.f_7_1.cs)]\n [!code-vb[Form.ShowInTaskbar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_7_1.vb)]"
  syntax:
    content: public bool ShowInTaskbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要在运行时; 在 Windows 任务栏中显示窗体否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ShowInTaskbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Shown
  id: Shown
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Shown
  nameWithType: Form.Shown
  fullName: System.Windows.Forms.Form.Shown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "第一次显示窗体时发生。"
  remarks: "如图所示事件是只出现第一次显示窗体;随后将降至最低、 最大化、 还原、 隐藏、 显示，或使失效并重新绘制不会引发此事件。 窗体的事件的顺序的详细信息，请参阅[Windows 窗体中的事件顺序的](~/add/includes/ajax-current-ext-md.md)。       有关处理事件的详细信息，请参阅[处理和引发事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Shown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the Shown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#403](~/add/codesnippet/csharp/e-system.windows.forms.f_12_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#403](~/add/codesnippet/visualbasic/e-system.windows.forms.f_12_1.vb)]"
  syntax:
    content: public event EventHandler Shown;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowWithoutActivation
  id: ShowWithoutActivation
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
  fullName: System.Windows.Forms.Form.ShowWithoutActivation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值会在显示时，是否将激活窗口。"
  remarks: "如果你想要显示在顶级窗口，但不希望采用输入的焦点离开当前窗口中断用户的工作，请使用此属性。 这可以是信息性的弹出窗口或浮动窗口，如绘制应用程序中的工具调色板。       由于此属性是只读的可以通过在你自己的窗体中重写 ShowWithoutActivation 和编程返回它只更改其值`true`。       如果您非激活的窗口需要使用 UI 控件，则应考虑使用的<xref:System.Windows.Forms.ToolStrip>控件，如<xref:System.Windows.Forms.ToolStripDropDown>.</xref:System.Windows.Forms.ToolStripDropDown> </xref:System.Windows.Forms.ToolStrip> 这些控件无窗口，并且不会导致窗口在激活时选择它们。"
  syntax:
    content: protected virtual bool ShowWithoutActivation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果在显示; 时，不将激活窗口否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ShowWithoutActivation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Size
  id: Size
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Size
  nameWithType: Form.Size
  fullName: System.Windows.Forms.Form.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗体大小。"
  remarks: "此属性可以在同一时间而不是设置中设置高度和宽度 （以像素为单位） 的窗体<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>属性单独。</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> 如果你想要设置的大小和窗体的位置，则可以使用<xref:System.Windows.Forms.Form.DesktopBounds%2A>属性来调整大小和找到的表单基于桌面坐标或使用<xref:System.Windows.Forms.Control.Bounds%2A>属性<xref:System.Windows.Forms.Control>类来设置的大小和窗体位置基于屏幕坐标。</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.Bounds%2A> </xref:System.Windows.Forms.Form.DesktopBounds%2A>      1> [!NOTE]&1;> 此属性的最大值受到窗体在其运行的屏幕的分辨率。 值不能通过每个屏幕维度 （水平 + 12 和垂直 + 12） 大于 12 的像素为单位。      1> [!NOTE]&1;> 上 Pocket PC 设备，你可以通过设置创建一个可调整大小窗口<xref:System.Windows.Forms.Form.FormBorderStyle%2A>到`None`和删除任何<xref:System.Windows.Forms.MainMenu>控件。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> 您可以在永远不会被调整 SmartPhone 设备上<xref:System.Windows.Forms.Form>-它始终将填充整个屏幕。</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form. The example code also sets the Size property to provide a larger sized form than the default size of the form. This example requires that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-cpp[Form.Opacity#1](~/add/codesnippet/cpp/p-system.windows.forms.f_39_1.cpp)]\n [!code-cs[Form.Opacity#1](~/add/codesnippet/csharp/p-system.windows.forms.f_39_1.cs)]\n [!code-vb[Form.Opacity#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_39_1.vb)]"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>表示窗体的大小。"
  overload: System.Windows.Forms.Form.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SizeGripStyle
  id: SizeGripStyle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
  fullName: System.Windows.Forms.Form.SizeGripStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置在窗体右下角显示大小调整手柄的样式。"
  remarks: "此属性使您能够确定当窗体上显示大小调整手柄。 你可以设置此属性，以显示大小调整手柄或者使它自动显示于的设置基于<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</xref:System.Windows.Forms.Form.FormBorderStyle%2A>"
  example:
  - "The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.  \n  \n [!code-cpp[Form.SizeGripStyle#1](~/add/codesnippet/cpp/p-system.windows.forms.f_11_1.cpp)]\n [!code-cs[Form.SizeGripStyle#1](~/add/codesnippet/csharp/p-system.windows.forms.f_11_1.cs)]\n [!code-vb[Form.SizeGripStyle#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }
    return:
      type: System.Windows.Forms.SizeGripStyle
      description: "A <xref href=&quot;System.Windows.Forms.SizeGripStyle&quot;> </xref>表示显示的大小调整手柄的样式。 默认值为<xref href=&quot;System.Windows.Forms.SizeGripStyle&quot;></xref>"
  overload: System.Windows.Forms.Form.SizeGripStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "超出了有效的值的范围是指定的值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.StartPosition
  id: StartPosition
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: StartPosition
  nameWithType: Form.StartPosition
  fullName: System.Windows.Forms.Form.StartPosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置在运行时窗体的起始位置。"
  remarks: "此属性使您可以在运行时显示时设置窗体的起始位置。 可以通过将设置手动指定窗体的位置<xref:System.Windows.Forms.Form.Location%2A>属性或使用 Windows 所指定的默认位置。</xref:System.Windows.Forms.Form.Location%2A> 您可以定位要在屏幕的中心或如多文档界面 (MDI) 子窗体的窗体其父窗体的中心中显示的窗体。       显示窗体之前，应设置此属性。  你可以设置此属性，然后才能调用<xref:System.Windows.Forms.Form.Show%2A>或<xref:System.Windows.Forms.Form.ShowDialog%2A>方法或在窗体的构造函数中。</xref:System.Windows.Forms.Form.ShowDialog%2A> </xref:System.Windows.Forms.Form.Show%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and StartPosition properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-vb[Classic Form.StartPosition Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_1_1.vb)]\n [!code-cpp[Classic Form.StartPosition Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_1_1.cpp)]\n [!code-cs[Classic Form.StartPosition Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_1_1.cs)]"
  syntax:
    content: public System.Windows.Forms.FormStartPosition StartPosition { get; set; }
    return:
      type: System.Windows.Forms.FormStartPosition
      description: "A <xref href=&quot;System.Windows.Forms.FormStartPosition&quot;> </xref> ，表示窗体的起始位置。"
  overload: System.Windows.Forms.Form.StartPosition*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "超出了有效的值的范围是指定的值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabIndex
  nameWithType: Form.TabIndex
  fullName: System.Windows.Forms.Form.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置控件在其容器内的 tab 键顺序。"
  remarks: "窗体不包括的 tab 键顺序。 设置 TabIndex 属性没有任何影响。"
  syntax:
    content: public int TabIndex { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含控件的 tab 键顺序包含其容器内的控件集内的索引。</xref:System.Int32>"
  overload: System.Windows.Forms.Form.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabIndexChanged
  id: TabIndexChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabIndexChanged
  nameWithType: Form.TabIndexChanged
  fullName: System.Windows.Forms.Form.TabIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时的值<xref:System.Windows.Forms.Form.TabIndex*>属性更改。</xref:System.Windows.Forms.Form.TabIndex*>"
  syntax:
    content: public event EventHandler TabIndexChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabStop
  id: TabStop
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabStop
  nameWithType: Form.TabStop
  fullName: System.Windows.Forms.Form.TabStop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示用户是否可以使用 TAB 键此控件提供焦点。"
  syntax:
    content: public bool TabStop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户可以使用 TAB 键为的控件提供焦点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.TabStop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabStopChanged
  id: TabStopChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabStopChanged
  nameWithType: Form.TabStopChanged
  fullName: System.Windows.Forms.Form.TabStopChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时<xref:System.Windows.Forms.Form.TabStop*>属性更改。</xref:System.Windows.Forms.Form.TabStop*>"
  syntax:
    content: public event EventHandler TabStopChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Text
  id: Text
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Text
  nameWithType: Form.Text
  fullName: System.Windows.Forms.Form.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置与此控件关联的文本。"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "与此控件关联的文本。"
  overload: System.Windows.Forms.Form.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TopLevel
  id: TopLevel
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TopLevel
  nameWithType: Form.TopLevel
  fullName: System.Windows.Forms.Form.TopLevel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否将窗体显示为顶层窗口。"
  remarks: "顶级窗体是一个窗口，其没有父窗体中，或其父窗体是在桌面窗口。 顶级窗口通常作为主窗体应用程序中使用。"
  example:
  - "The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and TopLevel properties are changed to make the form non-top-level form with a tool window border.  \n  \n [!code-cpp[Form.Modal#1](~/add/codesnippet/cpp/p-system.windows.forms.f_34_1.cpp)]\n [!code-cs[Form.Modal#1](~/add/codesnippet/csharp/p-system.windows.forms.f_34_1.cs)]\n [!code-vb[Form.Modal#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_34_1.vb)]"
  syntax:
    content: public bool TopLevel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>将窗体显示为顶级窗口;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.TopLevel*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "多文档界面 (MDI) 父窗体必须是顶级窗口。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.TopMost
  id: TopMost
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TopMost
  nameWithType: Form.TopMost
  fullName: System.Windows.Forms.Form.TopMost
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否应显示为最顶层窗体。"
  remarks: "最顶层窗体是重叠所有其他 （非顶层） 形式，即使它并不是活动或前台形式。 最顶层窗体始终显示在桌面上的 windows 的 z 顺序最高数据点。 此属性可用于创建始终应用程序，如查找和替换工具窗口中显示的窗体。"
  example:
  - "The following code example demonstrates how to create a topmost form. The example creates two forms, one that is maximized and one that will be displayed as a topmost form. The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form. The second form, named `topMostForm`, sets the TopMost property to `true` to display the form as a topmost form. When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form. The example requires that the method defined in the example is called from another form.  \n  \n [!code-cs[Form.TopMost#1](~/add/codesnippet/csharp/p-system.windows.forms.f_15_1.cs)]\n [!code-cpp[Form.TopMost#1](~/add/codesnippet/cpp/p-system.windows.forms.f_15_1.cpp)]\n [!code-vb[Form.TopMost#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_15_1.vb)]"
  syntax:
    content: public bool TopMost { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>将窗体显示为最顶层窗体;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.TopMost*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ToString
  id: ToString
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ToString()
  nameWithType: Form.ToString()
  fullName: System.Windows.Forms.Form.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个字符串，表示窗体的当前实例。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'A string consisting of the fully qualified name of the form object''s class, with the <xref:System.Windows.Forms.Form.Text*> property of the form appended to the end. For example, if the form is derived from the class `MyForm` in the `MyNamespace` namespace, and the <xref:System.Windows.Forms.Form.Text*> property is set to `Hello, World`, this method will return `MyNamespace.MyForm, Text: Hello, World`.'
  overload: System.Windows.Forms.Form.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TransparencyKey
  id: TransparencyKey
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
  fullName: System.Windows.Forms.Form.TransparencyKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置将表示窗体透明区域的颜色。"
  remarks: "当分配 TransparencyKey 属性<xref:System.Drawing.Color>，具有相同的窗体区域<xref:System.Windows.Forms.Control.BackColor%2A>将以透明方式显示。</xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Drawing.Color> 鼠标的任何操作，例如单击鼠标，在窗体透明区域执行将传输到下的透明区域的窗口。 例如，如果窗体的客户端区域进行透明，则该区域上单击鼠标将发送到低于其任何窗口的单击事件通知。 如果窗体上任何控件相同的颜色分配给 TransparencyKey 属性，它们还将显示以透明方式。 例如，如果你有<xref:System.Windows.Forms.Button>其 TransparencyKey 属性设置为窗体上的控件`SystemColors.Control`，控件将以透明方式显示，除非<xref:System.Windows.Forms.Control.BackColor%2A>属性<xref:System.Windows.Forms.Button>控件更改为另一种颜色。</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button>       此属性不是支持时<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>"
  example:
  - "The following code example creates a window that has a transparent client region regardless of background color of the form. This example requires that the example method is defined within a form class.  \n  \n [!code-cpp[Classic Form.TransparencyKey Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_51_1.cpp)]\n [!code-vb[Classic Form.TransparencyKey Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_51_1.vb)]\n [!code-cs[Classic Form.TransparencyKey Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_51_1.cs)]"
  syntax:
    content: public System.Drawing.Color TransparencyKey { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> ，表示要在窗体上透明显示的颜色。"
  overload: System.Windows.Forms.Form.TransparencyKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.UpdateDefaultButton
  id: UpdateDefaultButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: UpdateDefaultButton()
  nameWithType: Form.UpdateDefaultButton()
  fullName: System.Windows.Forms.Form.UpdateDefaultButton()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "更新哪个按钮为默认按钮。"
  remarks: "UpdateDefaultButton 方法确定窗体上的按钮引发其 Click 事件，当用户按 ENTER，根据以下优先级︰ 1。  如果<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>属性实现<xref:System.Windows.Forms.IButtonControl>接口，控制为默认按钮。</xref:System.Windows.Forms.IButtonControl> </xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>      2.  <xref:System.Windows.Forms.Form.AcceptButton%2A>属性为默认按钮。</xref:System.Windows.Forms.Form.AcceptButton%2A>"
  syntax:
    content: protected override void UpdateDefaultButton ();
    parameters: []
  overload: System.Windows.Forms.Form.UpdateDefaultButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ValidateChildren
  id: ValidateChildren
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ValidateChildren()
  nameWithType: Form.ValidateChildren()
  fullName: System.Windows.Forms.Form.ValidateChildren()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "使所有子控件内支持验证其数据进行验证的控件。"
  syntax:
    content: public override bool ValidateChildren ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则验证所有子级否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果从调用<xref href=&quot;System.Windows.Forms.Control.Validating&quot;></xref>或<xref href=&quot;System.Windows.Forms.Control.Validated&quot;></xref>事件处理程序，此方法将始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ValidateChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  id: ValidateChildren(System.Windows.Forms.ValidationConstraints)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ValidateChildren(ValidationConstraints)
  nameWithType: Form.ValidateChildren(ValidationConstraints)
  fullName: System.Windows.Forms.Form.ValidateChildren(ValidationConstraints)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "使所有子控件内支持验证其数据进行验证的控件。"
  syntax:
    content: public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);
    parameters:
    - id: validationConstraints
      type: System.Windows.Forms.ValidationConstraints
      description: "限制对哪些控件可以其<xref href=&quot;System.Windows.Forms.Control.Validating&quot;></xref>引发事件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则验证所有子级否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果从调用<xref href=&quot;System.Windows.Forms.Control.Validating&quot;></xref>或<xref href=&quot;System.Windows.Forms.Control.Validated&quot;></xref>事件处理程序，此方法将始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.ValidateChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.WindowState
  id: WindowState
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: WindowState
  nameWithType: Form.WindowState
  fullName: System.Windows.Forms.Form.WindowState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示窗体是否为最小化、 最大化还是正常。"
  remarks: "表单显示之前，始终将 WindowState 属性设置为`FormWindowState.Normal`，不管其初始设置。 这反映在<xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Top%2A>，和<xref:System.Windows.Forms.Control.Width%2A>属性设置。</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Windows.Forms.Control.Height%2A> 如果窗体隐藏后已被证实，这些属性将反映以前的状态，直到显示窗体时试，而不考虑对 WindowState 属性所做任何更改。"
  example:
  - "The following code example demonstrates how to set the WindowStateto maximized. The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.  \n  \n```c#  \nprivate void Form1_Shown(object sender, EventArgs e)  \n        {  \n            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  \n        }  \n```  \n  \n```vb  \nPrivate  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  \n            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  \nEnd Sub  \n```"
  syntax:
    content: public System.Windows.Forms.FormWindowState WindowState { get; set; }
    return:
      type: System.Windows.Forms.FormWindowState
      description: "A <xref href=&quot;System.Windows.Forms.FormWindowState&quot;> </xref> ，表示窗体是最小化、 最大化还是正常。 默认值是<xref uid=&quot;langword_csharp_FormWindowState.Normal&quot; name=&quot;FormWindowState.Normal&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Form.WindowState*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "超出了有效的值的范围是指定的值。"
  platform:
  - net462
- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: Form.WndProc(Message)
  fullName: System.Windows.Forms.Form.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "处理 Windows 消息。"
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>到进程。"
  overload: System.Windows.Forms.Form.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ContainerControl
  isExternal: false
  name: System.Windows.Forms.ContainerControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.Form.#ctor
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Form()
  nameWithType: Form.Form()
  fullName: System.Windows.Forms.Form.Form()
- uid: System.Windows.Forms.Form.AcceptButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AcceptButton
  nameWithType: Form.AcceptButton
  fullName: System.Windows.Forms.Form.AcceptButton
- uid: System.Windows.Forms.IButtonControl
  parent: System.Windows.Forms
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Windows.Forms.IButtonControl
- uid: System.Windows.Forms.Form.Activate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activate()
  nameWithType: Form.Activate()
  fullName: System.Windows.Forms.Form.Activate()
- uid: System.Windows.Forms.Form.Activated
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activated
  nameWithType: Form.Activated
  fullName: System.Windows.Forms.Form.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActivateMdiChild(Form)
  nameWithType: Form.ActivateMdiChild(Form)
  fullName: System.Windows.Forms.Form.ActivateMdiChild(Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.Form.ActiveForm
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveForm
  nameWithType: Form.ActiveForm
  fullName: System.Windows.Forms.Form.ActiveForm
- uid: System.Windows.Forms.Form.ActiveMdiChild
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
  fullName: System.Windows.Forms.Form.ActiveMdiChild
- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AddOwnedForm(Form)
  nameWithType: Form.AddOwnedForm(Form)
  fullName: System.Windows.Forms.Form.AddOwnedForm(Form)
- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AdjustFormScrollbars(Boolean)
  nameWithType: Form.AdjustFormScrollbars(Boolean)
  fullName: System.Windows.Forms.Form.AdjustFormScrollbars(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Form.AllowTransparency
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
  fullName: System.Windows.Forms.Form.AllowTransparency
- uid: System.Windows.Forms.Form.ApplyAutoScaling
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ApplyAutoScaling()
  nameWithType: Form.ApplyAutoScaling()
  fullName: System.Windows.Forms.Form.ApplyAutoScaling()
- uid: System.Windows.Forms.Form.AutoScale
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScale
  nameWithType: Form.AutoScale
  fullName: System.Windows.Forms.Form.AutoScale
- uid: System.Windows.Forms.Form.AutoScaleBaseSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
  fullName: System.Windows.Forms.Form.AutoScaleBaseSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.Form.AutoScroll
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScroll
  nameWithType: Form.AutoScroll
  fullName: System.Windows.Forms.Form.AutoScroll
- uid: System.Windows.Forms.Form.AutoSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSize
  nameWithType: Form.AutoSize
  fullName: System.Windows.Forms.Form.AutoSize
- uid: System.Windows.Forms.Form.AutoSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeChanged
  nameWithType: Form.AutoSizeChanged
  fullName: System.Windows.Forms.Form.AutoSizeChanged
- uid: System.Windows.Forms.Form.AutoSizeMode
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
  fullName: System.Windows.Forms.Form.AutoSizeMode
- uid: System.Windows.Forms.AutoSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: AutoSizeMode
  nameWithType: AutoSizeMode
  fullName: System.Windows.Forms.AutoSizeMode
- uid: System.Windows.Forms.Form.AutoValidate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidate
  nameWithType: Form.AutoValidate
  fullName: System.Windows.Forms.Form.AutoValidate
- uid: System.Windows.Forms.AutoValidate
  parent: System.Windows.Forms
  isExternal: false
  name: AutoValidate
  nameWithType: AutoValidate
  fullName: System.Windows.Forms.AutoValidate
- uid: System.Windows.Forms.Form.AutoValidateChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidateChanged
  nameWithType: Form.AutoValidateChanged
  fullName: System.Windows.Forms.Form.AutoValidateChanged
- uid: System.Windows.Forms.Form.BackColor
  parent: System.Windows.Forms.Form
  isExternal: false
  name: BackColor
  nameWithType: Form.BackColor
  fullName: System.Windows.Forms.Form.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.Form.CancelButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CancelButton
  nameWithType: Form.CancelButton
  fullName: System.Windows.Forms.Form.CancelButton
- uid: System.Windows.Forms.Form.CenterToParent
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToParent()
  nameWithType: Form.CenterToParent()
  fullName: System.Windows.Forms.Form.CenterToParent()
- uid: System.Windows.Forms.Form.CenterToScreen
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToScreen()
  nameWithType: Form.CenterToScreen()
  fullName: System.Windows.Forms.Form.CenterToScreen()
- uid: System.Windows.Forms.Form.ClientSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ClientSize
  nameWithType: Form.ClientSize
  fullName: System.Windows.Forms.Form.ClientSize
- uid: System.Windows.Forms.Form.Close
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Close()
  nameWithType: Form.Close()
  fullName: System.Windows.Forms.Form.Close()
- uid: System.Windows.Forms.Form.Closed
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Closed
  nameWithType: Form.Closed
  fullName: System.Windows.Forms.Form.Closed
- uid: System.Windows.Forms.Form.Closing
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Closing
  nameWithType: Form.Closing
  fullName: System.Windows.Forms.Form.Closing
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.Form.ControlBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ControlBox
  nameWithType: Form.ControlBox
  fullName: System.Windows.Forms.Form.ControlBox
- uid: System.Windows.Forms.Form.CreateControlsInstance
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateControlsInstance()
  nameWithType: Form.CreateControlsInstance()
  fullName: System.Windows.Forms.Form.CreateControlsInstance()
- uid: System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
- uid: System.Windows.Forms.Form.CreateHandle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateHandle()
  nameWithType: Form.CreateHandle()
  fullName: System.Windows.Forms.Form.CreateHandle()
- uid: System.Windows.Forms.Form.CreateParams
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateParams
  nameWithType: Form.CreateParams
  fullName: System.Windows.Forms.Form.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.Form.Deactivate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Deactivate
  nameWithType: Form.Deactivate
  fullName: System.Windows.Forms.Form.Deactivate
- uid: System.Windows.Forms.Form.DefaultImeMode
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
  fullName: System.Windows.Forms.Form.DefaultImeMode
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.Form.DefaultSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultSize
  nameWithType: Form.DefaultSize
  fullName: System.Windows.Forms.Form.DefaultSize
- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefWndProc(Message)
  nameWithType: Form.DefWndProc(Message)
  fullName: System.Windows.Forms.Form.DefWndProc(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Form.DesktopBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
  fullName: System.Windows.Forms.Form.DesktopBounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Form.DesktopLocation
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
  fullName: System.Windows.Forms.Form.DesktopLocation
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Form.DialogResult
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DialogResult
  nameWithType: Form.DialogResult
  fullName: System.Windows.Forms.Form.DialogResult
- uid: System.Windows.Forms.DialogResult
  parent: System.Windows.Forms
  isExternal: false
  name: DialogResult
  nameWithType: DialogResult
  fullName: System.Windows.Forms.DialogResult
- uid: System.Windows.Forms.Form.Dispose(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Form.Dispose(Boolean)
  fullName: System.Windows.Forms.Form.Dispose(Boolean)
- uid: System.Windows.Forms.Form.FormBorderStyle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
  fullName: System.Windows.Forms.Form.FormBorderStyle
- uid: System.Windows.Forms.FormBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: FormBorderStyle
  nameWithType: FormBorderStyle
  fullName: System.Windows.Forms.FormBorderStyle
- uid: System.Windows.Forms.Form.FormClosed
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormClosed
  nameWithType: Form.FormClosed
  fullName: System.Windows.Forms.Form.FormClosed
- uid: System.Windows.Forms.FormClosedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosedEventHandler
  nameWithType: FormClosedEventHandler
  fullName: System.Windows.Forms.FormClosedEventHandler
- uid: System.Windows.Forms.Form.FormClosing
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormClosing
  nameWithType: Form.FormClosing
  fullName: System.Windows.Forms.Form.FormClosing
- uid: System.Windows.Forms.FormClosingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosingEventHandler
  nameWithType: FormClosingEventHandler
  fullName: System.Windows.Forms.FormClosingEventHandler
- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetAutoScaleSize(Font)
  nameWithType: Form.GetAutoScaleSize(Font)
  fullName: System.Windows.Forms.Form.GetAutoScaleSize(Font)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.Form.HelpButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButton
  nameWithType: Form.HelpButton
  fullName: System.Windows.Forms.Form.HelpButton
- uid: System.Windows.Forms.Form.HelpButtonClicked
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButtonClicked
  nameWithType: Form.HelpButtonClicked
  fullName: System.Windows.Forms.Form.HelpButtonClicked
- uid: System.Windows.Forms.Form.Icon
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Icon
  nameWithType: Form.Icon
  fullName: System.Windows.Forms.Form.Icon
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Windows.Forms.Form.InputLanguageChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: InputLanguageChanged
  nameWithType: Form.InputLanguageChanged
  fullName: System.Windows.Forms.Form.InputLanguageChanged
- uid: System.Windows.Forms.InputLanguageChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangedEventHandler
  nameWithType: InputLanguageChangedEventHandler
  fullName: System.Windows.Forms.InputLanguageChangedEventHandler
- uid: System.Windows.Forms.Form.InputLanguageChanging
  parent: System.Windows.Forms.Form
  isExternal: false
  name: InputLanguageChanging
  nameWithType: Form.InputLanguageChanging
  fullName: System.Windows.Forms.Form.InputLanguageChanging
- uid: System.Windows.Forms.InputLanguageChangingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangingEventHandler
  nameWithType: InputLanguageChangingEventHandler
  fullName: System.Windows.Forms.InputLanguageChangingEventHandler
- uid: System.Windows.Forms.Form.IsMdiChild
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
  fullName: System.Windows.Forms.Form.IsMdiChild
- uid: System.Windows.Forms.Form.IsMdiContainer
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
  fullName: System.Windows.Forms.Form.IsMdiContainer
- uid: System.Windows.Forms.Form.IsRestrictedWindow
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
  fullName: System.Windows.Forms.Form.IsRestrictedWindow
- uid: System.Windows.Forms.Form.KeyPreview
  parent: System.Windows.Forms.Form
  isExternal: false
  name: KeyPreview
  nameWithType: Form.KeyPreview
  fullName: System.Windows.Forms.Form.KeyPreview
- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: LayoutMdi(MdiLayout)
  nameWithType: Form.LayoutMdi(MdiLayout)
  fullName: System.Windows.Forms.Form.LayoutMdi(MdiLayout)
- uid: System.Windows.Forms.MdiLayout
  parent: System.Windows.Forms
  isExternal: false
  name: MdiLayout
  nameWithType: MdiLayout
  fullName: System.Windows.Forms.MdiLayout
- uid: System.Windows.Forms.Form.Load
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Load
  nameWithType: Form.Load
  fullName: System.Windows.Forms.Form.Load
- uid: System.Windows.Forms.Form.Location
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Location
  nameWithType: Form.Location
  fullName: System.Windows.Forms.Form.Location
- uid: System.Windows.Forms.Form.MainMenuStrip
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
  fullName: System.Windows.Forms.Form.MainMenuStrip
- uid: System.Windows.Forms.MenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: MenuStrip
  nameWithType: MenuStrip
  fullName: System.Windows.Forms.MenuStrip
- uid: System.Windows.Forms.Form.Margin
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Margin
  nameWithType: Form.Margin
  fullName: System.Windows.Forms.Form.Margin
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.Form.MarginChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MarginChanged
  nameWithType: Form.MarginChanged
  fullName: System.Windows.Forms.Form.MarginChanged
- uid: System.Windows.Forms.Form.MaximizeBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
  fullName: System.Windows.Forms.Form.MaximizeBox
- uid: System.Windows.Forms.Form.MaximizedBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
  fullName: System.Windows.Forms.Form.MaximizedBounds
- uid: System.Windows.Forms.Form.MaximizedBoundsChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBoundsChanged
  nameWithType: Form.MaximizedBoundsChanged
  fullName: System.Windows.Forms.Form.MaximizedBoundsChanged
- uid: System.Windows.Forms.Form.MaximumSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSize
  nameWithType: Form.MaximumSize
  fullName: System.Windows.Forms.Form.MaximumSize
- uid: System.Windows.Forms.Form.MaximumSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSizeChanged
  nameWithType: Form.MaximumSizeChanged
  fullName: System.Windows.Forms.Form.MaximumSizeChanged
- uid: System.Windows.Forms.Form.MdiChildActivate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildActivate
  nameWithType: Form.MdiChildActivate
  fullName: System.Windows.Forms.Form.MdiChildActivate
- uid: System.Windows.Forms.Form.MdiChildren
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildren
  nameWithType: Form.MdiChildren
  fullName: System.Windows.Forms.Form.MdiChildren
- uid: System.Windows.Forms.Form[]
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form[]
  spec.csharp:
  - uid: System.Windows.Forms.Form
    name: Form
    nameWithType: Form
    fullName: Form[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Form.MdiParent
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiParent
  nameWithType: Form.MdiParent
  fullName: System.Windows.Forms.Form.MdiParent
- uid: System.Windows.Forms.Form.Menu
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Menu
  nameWithType: Form.Menu
  fullName: System.Windows.Forms.Form.Menu
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.Form.MenuComplete
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MenuComplete
  nameWithType: Form.MenuComplete
  fullName: System.Windows.Forms.Form.MenuComplete
- uid: System.Windows.Forms.Form.MenuStart
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MenuStart
  nameWithType: Form.MenuStart
  fullName: System.Windows.Forms.Form.MenuStart
- uid: System.Windows.Forms.Form.MergedMenu
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MergedMenu
  nameWithType: Form.MergedMenu
  fullName: System.Windows.Forms.Form.MergedMenu
- uid: System.Windows.Forms.Form.MinimizeBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
  fullName: System.Windows.Forms.Form.MinimizeBox
- uid: System.Windows.Forms.Form.MinimumSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSize
  nameWithType: Form.MinimumSize
  fullName: System.Windows.Forms.Form.MinimumSize
- uid: System.Windows.Forms.Form.MinimumSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSizeChanged
  nameWithType: Form.MinimumSizeChanged
  fullName: System.Windows.Forms.Form.MinimumSizeChanged
- uid: System.Windows.Forms.Form.Modal
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Modal
  nameWithType: Form.Modal
  fullName: System.Windows.Forms.Form.Modal
- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnActivated(EventArgs)
  nameWithType: Form.OnActivated(EventArgs)
  fullName: System.Windows.Forms.Form.OnActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosed(EventArgs)
  nameWithType: Form.OnClosed(EventArgs)
  fullName: System.Windows.Forms.Form.OnClosed(EventArgs)
- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosing(CancelEventArgs)
  nameWithType: Form.OnClosing(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnClosing(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.Form.OnCreateControl
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnCreateControl()
  nameWithType: Form.OnCreateControl()
  fullName: System.Windows.Forms.Form.OnCreateControl()
- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnDeactivate(EventArgs)
  nameWithType: Form.OnDeactivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnDeactivate(EventArgs)
- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnabledChanged(EventArgs)
  nameWithType: Form.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnter(EventArgs)
  nameWithType: Form.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnter(EventArgs)
- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: Form.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosed(FormClosedEventArgs)
  nameWithType: Form.OnFormClosed(FormClosedEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosed(FormClosedEventArgs)
- uid: System.Windows.Forms.FormClosedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosedEventArgs
  nameWithType: FormClosedEventArgs
  fullName: System.Windows.Forms.FormClosedEventArgs
- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosing(FormClosingEventArgs)
  nameWithType: Form.OnFormClosing(FormClosingEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosing(FormClosingEventArgs)
- uid: System.Windows.Forms.FormClosingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosingEventArgs
  nameWithType: FormClosingEventArgs
  fullName: System.Windows.Forms.FormClosingEventArgs
- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: Form.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Form.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHelpButtonClicked(CancelEventArgs)
  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnHelpButtonClicked(CancelEventArgs)
- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)
  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
- uid: System.Windows.Forms.InputLanguageChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangedEventArgs
  nameWithType: InputLanguageChangedEventArgs
  fullName: System.Windows.Forms.InputLanguageChangedEventArgs
- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)
  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
- uid: System.Windows.Forms.InputLanguageChangingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangingEventArgs
  nameWithType: InputLanguageChangingEventArgs
  fullName: System.Windows.Forms.InputLanguageChangingEventArgs
- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLayout(LayoutEventArgs)
  nameWithType: Form.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Form.OnLayout(LayoutEventArgs)
- uid: System.Windows.Forms.LayoutEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventArgs
  nameWithType: LayoutEventArgs
  fullName: System.Windows.Forms.LayoutEventArgs
- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Form.OnLoad(EventArgs)
  fullName: System.Windows.Forms.Form.OnLoad(EventArgs)
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximizedBoundsChanged(EventArgs)
  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximizedBoundsChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximumSizeChanged(EventArgs)
  nameWithType: Form.OnMaximumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximumSizeChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMdiChildActivate(EventArgs)
  nameWithType: Form.OnMdiChildActivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnMdiChildActivate(EventArgs)
- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuComplete(EventArgs)
  nameWithType: Form.OnMenuComplete(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuComplete(EventArgs)
- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuStart(EventArgs)
  nameWithType: Form.OnMenuStart(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuStart(EventArgs)
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMinimumSizeChanged(EventArgs)
  nameWithType: Form.OnMinimumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMinimumSizeChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnPaint(PaintEventArgs)
  nameWithType: Form.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Form.OnPaint(PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: Form.OnResize(EventArgs)
  fullName: System.Windows.Forms.Form.OnResize(EventArgs)
- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeBegin(EventArgs)
  nameWithType: Form.OnResizeBegin(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeBegin(EventArgs)
- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeEnd(EventArgs)
  nameWithType: Form.OnResizeEnd(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeEnd(EventArgs)
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnRightToLeftLayoutChanged(EventArgs)
  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnShown(EventArgs)
  nameWithType: Form.OnShown(EventArgs)
  fullName: System.Windows.Forms.Form.OnShown(EventArgs)
- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnStyleChanged(EventArgs)
  nameWithType: Form.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnStyleChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: Form.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnVisibleChanged(EventArgs)
  nameWithType: Form.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Form.Opacity
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Opacity
  nameWithType: Form.Opacity
  fullName: System.Windows.Forms.Form.Opacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.Form.OwnedForms
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OwnedForms
  nameWithType: Form.OwnedForms
  fullName: System.Windows.Forms.Form.OwnedForms
- uid: System.Windows.Forms.Form.Owner
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Owner
  nameWithType: Form.Owner
  fullName: System.Windows.Forms.Form.Owner
- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Form.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Form.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogChar(Char)
  nameWithType: Form.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Form.ProcessDialogChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: Form.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Form.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessKeyPreview(Message)
  nameWithType: Form.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Form.ProcessKeyPreview(Message)
- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessMnemonic(Char)
  nameWithType: Form.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Form.ProcessMnemonic(Char)
- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessTabKey(Boolean)
  nameWithType: Form.ProcessTabKey(Boolean)
  fullName: System.Windows.Forms.Form.ProcessTabKey(Boolean)
- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RemoveOwnedForm(Form)
  nameWithType: Form.RemoveOwnedForm(Form)
  fullName: System.Windows.Forms.Form.RemoveOwnedForm(Form)
- uid: System.Windows.Forms.Form.ResizeBegin
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ResizeBegin
  nameWithType: Form.ResizeBegin
  fullName: System.Windows.Forms.Form.ResizeBegin
- uid: System.Windows.Forms.Form.ResizeEnd
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ResizeEnd
  nameWithType: Form.ResizeEnd
  fullName: System.Windows.Forms.Form.ResizeEnd
- uid: System.Windows.Forms.Form.RestoreBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
  fullName: System.Windows.Forms.Form.RestoreBounds
- uid: System.Windows.Forms.Form.RightToLeftLayout
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
  fullName: System.Windows.Forms.Form.RightToLeftLayout
- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayoutChanged
  nameWithType: Form.RightToLeftLayoutChanged
  fullName: System.Windows.Forms.Form.RightToLeftLayoutChanged
- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Form.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleCore(Single,Single)
  nameWithType: Form.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Form.ScaleCore(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Select(Boolean,Boolean)
  nameWithType: Form.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Form.Select(Boolean,Boolean)
- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Form.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetClientSizeCore(Int32,Int32)
- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopBounds(Int32,Int32,Int32,Int32)
  nameWithType: Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopLocation(Int32,Int32)
  nameWithType: Form.SetDesktopLocation(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopLocation(Int32,Int32)
- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetVisibleCore(Boolean)
  nameWithType: Form.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Form.SetVisibleCore(Boolean)
- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Show(IWin32Window)
  nameWithType: Form.Show(IWin32Window)
  fullName: System.Windows.Forms.Form.Show(IWin32Window)
- uid: System.Windows.Forms.IWin32Window
  parent: System.Windows.Forms
  isExternal: false
  name: IWin32Window
  nameWithType: IWin32Window
  fullName: System.Windows.Forms.IWin32Window
- uid: System.Windows.Forms.Form.ShowDialog
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog()
  nameWithType: Form.ShowDialog()
  fullName: System.Windows.Forms.Form.ShowDialog()
- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog(IWin32Window)
  nameWithType: Form.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.Form.ShowDialog(IWin32Window)
- uid: System.Windows.Forms.Form.ShowIcon
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowIcon
  nameWithType: Form.ShowIcon
  fullName: System.Windows.Forms.Form.ShowIcon
- uid: System.Windows.Forms.Form.ShowInTaskbar
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
  fullName: System.Windows.Forms.Form.ShowInTaskbar
- uid: System.Windows.Forms.Form.Shown
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Shown
  nameWithType: Form.Shown
  fullName: System.Windows.Forms.Form.Shown
- uid: System.Windows.Forms.Form.ShowWithoutActivation
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
  fullName: System.Windows.Forms.Form.ShowWithoutActivation
- uid: System.Windows.Forms.Form.Size
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Size
  nameWithType: Form.Size
  fullName: System.Windows.Forms.Form.Size
- uid: System.Windows.Forms.Form.SizeGripStyle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
  fullName: System.Windows.Forms.Form.SizeGripStyle
- uid: System.Windows.Forms.SizeGripStyle
  parent: System.Windows.Forms
  isExternal: false
  name: SizeGripStyle
  nameWithType: SizeGripStyle
  fullName: System.Windows.Forms.SizeGripStyle
- uid: System.Windows.Forms.Form.StartPosition
  parent: System.Windows.Forms.Form
  isExternal: false
  name: StartPosition
  nameWithType: Form.StartPosition
  fullName: System.Windows.Forms.Form.StartPosition
- uid: System.Windows.Forms.FormStartPosition
  parent: System.Windows.Forms
  isExternal: false
  name: FormStartPosition
  nameWithType: FormStartPosition
  fullName: System.Windows.Forms.FormStartPosition
- uid: System.Windows.Forms.Form.TabIndex
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndex
  nameWithType: Form.TabIndex
  fullName: System.Windows.Forms.Form.TabIndex
- uid: System.Windows.Forms.Form.TabIndexChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndexChanged
  nameWithType: Form.TabIndexChanged
  fullName: System.Windows.Forms.Form.TabIndexChanged
- uid: System.Windows.Forms.Form.TabStop
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStop
  nameWithType: Form.TabStop
  fullName: System.Windows.Forms.Form.TabStop
- uid: System.Windows.Forms.Form.TabStopChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStopChanged
  nameWithType: Form.TabStopChanged
  fullName: System.Windows.Forms.Form.TabStopChanged
- uid: System.Windows.Forms.Form.Text
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Text
  nameWithType: Form.Text
  fullName: System.Windows.Forms.Form.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Form.TopLevel
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopLevel
  nameWithType: Form.TopLevel
  fullName: System.Windows.Forms.Form.TopLevel
- uid: System.Windows.Forms.Form.TopMost
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopMost
  nameWithType: Form.TopMost
  fullName: System.Windows.Forms.Form.TopMost
- uid: System.Windows.Forms.Form.ToString
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ToString()
  nameWithType: Form.ToString()
  fullName: System.Windows.Forms.Form.ToString()
- uid: System.Windows.Forms.Form.TransparencyKey
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
  fullName: System.Windows.Forms.Form.TransparencyKey
- uid: System.Windows.Forms.Form.UpdateDefaultButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: UpdateDefaultButton()
  nameWithType: Form.UpdateDefaultButton()
  fullName: System.Windows.Forms.Form.UpdateDefaultButton()
- uid: System.Windows.Forms.Form.ValidateChildren
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren()
  nameWithType: Form.ValidateChildren()
  fullName: System.Windows.Forms.Form.ValidateChildren()
- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren(ValidationConstraints)
  nameWithType: Form.ValidateChildren(ValidationConstraints)
  fullName: System.Windows.Forms.Form.ValidateChildren(ValidationConstraints)
- uid: System.Windows.Forms.ValidationConstraints
  parent: System.Windows.Forms
  isExternal: false
  name: ValidationConstraints
  nameWithType: ValidationConstraints
  fullName: System.Windows.Forms.ValidationConstraints
- uid: System.Windows.Forms.Form.WindowState
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WindowState
  nameWithType: Form.WindowState
  fullName: System.Windows.Forms.Form.WindowState
- uid: System.Windows.Forms.FormWindowState
  parent: System.Windows.Forms
  isExternal: false
  name: FormWindowState
  nameWithType: FormWindowState
  fullName: System.Windows.Forms.FormWindowState
- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WndProc(Message)
  nameWithType: Form.WndProc(Message)
  fullName: System.Windows.Forms.Form.WndProc(Message)
- uid: System.Windows.Forms.Form.#ctor*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Form
  nameWithType: Form.Form
- uid: System.Windows.Forms.Form.AcceptButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AcceptButton
  nameWithType: Form.AcceptButton
- uid: System.Windows.Forms.Form.Activate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activate
  nameWithType: Form.Activate
- uid: System.Windows.Forms.Form.ActivateMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActivateMdiChild
  nameWithType: Form.ActivateMdiChild
- uid: System.Windows.Forms.Form.ActiveForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveForm
  nameWithType: Form.ActiveForm
- uid: System.Windows.Forms.Form.ActiveMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
- uid: System.Windows.Forms.Form.AddOwnedForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AddOwnedForm
  nameWithType: Form.AddOwnedForm
- uid: System.Windows.Forms.Form.AdjustFormScrollbars*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AdjustFormScrollbars
  nameWithType: Form.AdjustFormScrollbars
- uid: System.Windows.Forms.Form.AllowTransparency*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
- uid: System.Windows.Forms.Form.ApplyAutoScaling*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ApplyAutoScaling
  nameWithType: Form.ApplyAutoScaling
- uid: System.Windows.Forms.Form.AutoScale*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScale
  nameWithType: Form.AutoScale
- uid: System.Windows.Forms.Form.AutoScaleBaseSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
- uid: System.Windows.Forms.Form.AutoScroll*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScroll
  nameWithType: Form.AutoScroll
- uid: System.Windows.Forms.Form.AutoSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSize
  nameWithType: Form.AutoSize
- uid: System.Windows.Forms.Form.AutoSizeMode*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
- uid: System.Windows.Forms.Form.AutoValidate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidate
  nameWithType: Form.AutoValidate
- uid: System.Windows.Forms.Form.BackColor*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: BackColor
  nameWithType: Form.BackColor
- uid: System.Windows.Forms.Form.CancelButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CancelButton
  nameWithType: Form.CancelButton
- uid: System.Windows.Forms.Form.CenterToParent*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToParent
  nameWithType: Form.CenterToParent
- uid: System.Windows.Forms.Form.CenterToScreen*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToScreen
  nameWithType: Form.CenterToScreen
- uid: System.Windows.Forms.Form.ClientSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ClientSize
  nameWithType: Form.ClientSize
- uid: System.Windows.Forms.Form.Close*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Close
  nameWithType: Form.Close
- uid: System.Windows.Forms.Form.ControlBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ControlBox
  nameWithType: Form.ControlBox
- uid: System.Windows.Forms.Form.CreateControlsInstance*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateControlsInstance
  nameWithType: Form.CreateControlsInstance
- uid: System.Windows.Forms.Form.CreateHandle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateHandle
  nameWithType: Form.CreateHandle
- uid: System.Windows.Forms.Form.CreateParams*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateParams
  nameWithType: Form.CreateParams
- uid: System.Windows.Forms.Form.DefaultImeMode*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
- uid: System.Windows.Forms.Form.DefaultSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultSize
  nameWithType: Form.DefaultSize
- uid: System.Windows.Forms.Form.DefWndProc*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefWndProc
  nameWithType: Form.DefWndProc
- uid: System.Windows.Forms.Form.DesktopBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
- uid: System.Windows.Forms.Form.DesktopLocation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
- uid: System.Windows.Forms.Form.DialogResult*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DialogResult
  nameWithType: Form.DialogResult
- uid: System.Windows.Forms.Form.Dispose*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Dispose
  nameWithType: Form.Dispose
- uid: System.Windows.Forms.Form.FormBorderStyle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
- uid: System.Windows.Forms.Form.GetAutoScaleSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetAutoScaleSize
  nameWithType: Form.GetAutoScaleSize
- uid: System.Windows.Forms.Form.GetScaledBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetScaledBounds
  nameWithType: Form.GetScaledBounds
- uid: System.Windows.Forms.Form.HelpButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButton
  nameWithType: Form.HelpButton
- uid: System.Windows.Forms.Form.Icon*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Icon
  nameWithType: Form.Icon
- uid: System.Windows.Forms.Form.IsMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
- uid: System.Windows.Forms.Form.IsMdiContainer*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
- uid: System.Windows.Forms.Form.IsRestrictedWindow*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
- uid: System.Windows.Forms.Form.KeyPreview*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: KeyPreview
  nameWithType: Form.KeyPreview
- uid: System.Windows.Forms.Form.LayoutMdi*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: LayoutMdi
  nameWithType: Form.LayoutMdi
- uid: System.Windows.Forms.Form.Location*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Location
  nameWithType: Form.Location
- uid: System.Windows.Forms.Form.MainMenuStrip*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
- uid: System.Windows.Forms.Form.Margin*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Margin
  nameWithType: Form.Margin
- uid: System.Windows.Forms.Form.MaximizeBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
- uid: System.Windows.Forms.Form.MaximizedBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
- uid: System.Windows.Forms.Form.MaximumSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSize
  nameWithType: Form.MaximumSize
- uid: System.Windows.Forms.Form.MdiChildren*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildren
  nameWithType: Form.MdiChildren
- uid: System.Windows.Forms.Form.MdiParent*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiParent
  nameWithType: Form.MdiParent
- uid: System.Windows.Forms.Form.Menu*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Menu
  nameWithType: Form.Menu
- uid: System.Windows.Forms.Form.MergedMenu*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MergedMenu
  nameWithType: Form.MergedMenu
- uid: System.Windows.Forms.Form.MinimizeBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
- uid: System.Windows.Forms.Form.MinimumSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSize
  nameWithType: Form.MinimumSize
- uid: System.Windows.Forms.Form.Modal*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Modal
  nameWithType: Form.Modal
- uid: System.Windows.Forms.Form.OnActivated*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnActivated
  nameWithType: Form.OnActivated
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageChanged
  nameWithType: Form.OnBackgroundImageChanged
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageLayoutChanged
  nameWithType: Form.OnBackgroundImageLayoutChanged
- uid: System.Windows.Forms.Form.OnClosed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosed
  nameWithType: Form.OnClosed
- uid: System.Windows.Forms.Form.OnClosing*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosing
  nameWithType: Form.OnClosing
- uid: System.Windows.Forms.Form.OnCreateControl*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnCreateControl
  nameWithType: Form.OnCreateControl
- uid: System.Windows.Forms.Form.OnDeactivate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnDeactivate
  nameWithType: Form.OnDeactivate
- uid: System.Windows.Forms.Form.OnEnabledChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnabledChanged
  nameWithType: Form.OnEnabledChanged
- uid: System.Windows.Forms.Form.OnEnter*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnter
  nameWithType: Form.OnEnter
- uid: System.Windows.Forms.Form.OnFontChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFontChanged
  nameWithType: Form.OnFontChanged
- uid: System.Windows.Forms.Form.OnFormClosed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosed
  nameWithType: Form.OnFormClosed
- uid: System.Windows.Forms.Form.OnFormClosing*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosing
  nameWithType: Form.OnFormClosing
- uid: System.Windows.Forms.Form.OnHandleCreated*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleCreated
  nameWithType: Form.OnHandleCreated
- uid: System.Windows.Forms.Form.OnHandleDestroyed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: Form.OnHandleDestroyed
- uid: System.Windows.Forms.Form.OnHelpButtonClicked*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHelpButtonClicked
  nameWithType: Form.OnHelpButtonClicked
- uid: System.Windows.Forms.Form.OnInputLanguageChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanged
  nameWithType: Form.OnInputLanguageChanged
- uid: System.Windows.Forms.Form.OnInputLanguageChanging*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanging
  nameWithType: Form.OnInputLanguageChanging
- uid: System.Windows.Forms.Form.OnLayout*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLayout
  nameWithType: Form.OnLayout
- uid: System.Windows.Forms.Form.OnLoad*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLoad
  nameWithType: Form.OnLoad
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximizedBoundsChanged
  nameWithType: Form.OnMaximizedBoundsChanged
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximumSizeChanged
  nameWithType: Form.OnMaximumSizeChanged
- uid: System.Windows.Forms.Form.OnMdiChildActivate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMdiChildActivate
  nameWithType: Form.OnMdiChildActivate
- uid: System.Windows.Forms.Form.OnMenuComplete*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuComplete
  nameWithType: Form.OnMenuComplete
- uid: System.Windows.Forms.Form.OnMenuStart*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuStart
  nameWithType: Form.OnMenuStart
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMinimumSizeChanged
  nameWithType: Form.OnMinimumSizeChanged
- uid: System.Windows.Forms.Form.OnPaint*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnPaint
  nameWithType: Form.OnPaint
- uid: System.Windows.Forms.Form.OnResize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResize
  nameWithType: Form.OnResize
- uid: System.Windows.Forms.Form.OnResizeBegin*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeBegin
  nameWithType: Form.OnResizeBegin
- uid: System.Windows.Forms.Form.OnResizeEnd*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeEnd
  nameWithType: Form.OnResizeEnd
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnRightToLeftLayoutChanged
  nameWithType: Form.OnRightToLeftLayoutChanged
- uid: System.Windows.Forms.Form.OnShown*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnShown
  nameWithType: Form.OnShown
- uid: System.Windows.Forms.Form.OnStyleChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnStyleChanged
  nameWithType: Form.OnStyleChanged
- uid: System.Windows.Forms.Form.OnTextChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnTextChanged
  nameWithType: Form.OnTextChanged
- uid: System.Windows.Forms.Form.OnVisibleChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnVisibleChanged
  nameWithType: Form.OnVisibleChanged
- uid: System.Windows.Forms.Form.Opacity*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Opacity
  nameWithType: Form.Opacity
- uid: System.Windows.Forms.Form.OwnedForms*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OwnedForms
  nameWithType: Form.OwnedForms
- uid: System.Windows.Forms.Form.Owner*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Owner
  nameWithType: Form.Owner
- uid: System.Windows.Forms.Form.ProcessCmdKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Form.ProcessCmdKey
- uid: System.Windows.Forms.Form.ProcessDialogChar*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogChar
  nameWithType: Form.ProcessDialogChar
- uid: System.Windows.Forms.Form.ProcessDialogKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogKey
  nameWithType: Form.ProcessDialogKey
- uid: System.Windows.Forms.Form.ProcessKeyPreview*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessKeyPreview
  nameWithType: Form.ProcessKeyPreview
- uid: System.Windows.Forms.Form.ProcessMnemonic*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessMnemonic
  nameWithType: Form.ProcessMnemonic
- uid: System.Windows.Forms.Form.ProcessTabKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessTabKey
  nameWithType: Form.ProcessTabKey
- uid: System.Windows.Forms.Form.RemoveOwnedForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RemoveOwnedForm
  nameWithType: Form.RemoveOwnedForm
- uid: System.Windows.Forms.Form.RestoreBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
- uid: System.Windows.Forms.Form.RightToLeftLayout*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
- uid: System.Windows.Forms.Form.ScaleControl*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleControl
  nameWithType: Form.ScaleControl
- uid: System.Windows.Forms.Form.ScaleCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleCore
  nameWithType: Form.ScaleCore
- uid: System.Windows.Forms.Form.Select*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Select
  nameWithType: Form.Select
- uid: System.Windows.Forms.Form.SetBoundsCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetBoundsCore
  nameWithType: Form.SetBoundsCore
- uid: System.Windows.Forms.Form.SetClientSizeCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetClientSizeCore
  nameWithType: Form.SetClientSizeCore
- uid: System.Windows.Forms.Form.SetDesktopBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopBounds
  nameWithType: Form.SetDesktopBounds
- uid: System.Windows.Forms.Form.SetDesktopLocation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopLocation
  nameWithType: Form.SetDesktopLocation
- uid: System.Windows.Forms.Form.SetVisibleCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetVisibleCore
  nameWithType: Form.SetVisibleCore
- uid: System.Windows.Forms.Form.Show*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Show
  nameWithType: Form.Show
- uid: System.Windows.Forms.Form.ShowDialog*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog
  nameWithType: Form.ShowDialog
- uid: System.Windows.Forms.Form.ShowIcon*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowIcon
  nameWithType: Form.ShowIcon
- uid: System.Windows.Forms.Form.ShowInTaskbar*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
- uid: System.Windows.Forms.Form.ShowWithoutActivation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
- uid: System.Windows.Forms.Form.Size*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Size
  nameWithType: Form.Size
- uid: System.Windows.Forms.Form.SizeGripStyle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
- uid: System.Windows.Forms.Form.StartPosition*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: StartPosition
  nameWithType: Form.StartPosition
- uid: System.Windows.Forms.Form.TabIndex*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndex
  nameWithType: Form.TabIndex
- uid: System.Windows.Forms.Form.TabStop*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStop
  nameWithType: Form.TabStop
- uid: System.Windows.Forms.Form.Text*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Text
  nameWithType: Form.Text
- uid: System.Windows.Forms.Form.TopLevel*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopLevel
  nameWithType: Form.TopLevel
- uid: System.Windows.Forms.Form.TopMost*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopMost
  nameWithType: Form.TopMost
- uid: System.Windows.Forms.Form.ToString*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ToString
  nameWithType: Form.ToString
- uid: System.Windows.Forms.Form.TransparencyKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
- uid: System.Windows.Forms.Form.UpdateDefaultButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: UpdateDefaultButton
  nameWithType: Form.UpdateDefaultButton
- uid: System.Windows.Forms.Form.ValidateChildren*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren
  nameWithType: Form.ValidateChildren
- uid: System.Windows.Forms.Form.WindowState*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WindowState
  nameWithType: Form.WindowState
- uid: System.Windows.Forms.Form.WndProc*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WndProc
  nameWithType: Form.WndProc
