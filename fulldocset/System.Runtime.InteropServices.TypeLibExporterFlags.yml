### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  id: TypeLibExporterFlags
  children:
  - System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  - System.Runtime.InteropServices.TypeLibExporterFlags.None
  - System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  - System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  langs:
  - csharp
  name: TypeLibExporterFlags
  nameWithType: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
  type: Enum
  summary: "指示应如何生成类型库。"
  remarks: "用于<xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.</xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum TypeLibExporterFlags
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  id: CallerResolvedReferences
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: CallerResolvedReferences
  nameWithType: TypeLibExporterFlags.CallerResolvedReferences
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "允许调用方显式不参考注册表的情况下解析类型库引用。"
  syntax:
    content: CallerResolvedReferences
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  id: ExportAs32Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: ExportAs32Bit
  nameWithType: TypeLibExporterFlags.ExportAs32Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "在编译时在 64 位计算机上，指定类型库导出程序 (Tlbexp.exe) 生成一个 32 位类型库。 相应地转换所有数据类型。"
  syntax:
    content: ExportAs32Bit
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  id: ExportAs64Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: ExportAs64Bit
  nameWithType: TypeLibExporterFlags.ExportAs64Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "在编译的 32 位计算机上时，指定类型库导出程序 (Tlbexp.exe) 生成一个 64 位类型库。 相应地转换所有数据类型。"
  syntax:
    content: ExportAs64Bit
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.None
  id: None
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: None
  nameWithType: TypeLibExporterFlags.None
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "不指定任何标志。 这是默认值。"
  syntax:
    content: None
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  id: OldNames
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: OldNames
  nameWithType: TypeLibExporterFlags.OldNames
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "当导出类型库，则.NET Framework 解析键入名称冲突的修饰的命名空间; 具有名称的类型例如， <xref uid=&quot;langword_csharp_System.Windows.Forms.HorizontalAlignment&quot; name=&quot;System.Windows.Forms.HorizontalAlignment&quot; href=&quot;&quot;> </xref>导出为<xref uid=&quot;langword_csharp_System_Windows_Forms_HorizontalAlignment&quot; name=&quot;System_Windows_Forms_HorizontalAlignment&quot; href=&quot;&quot;> </xref>。 如果没有与不是从 COM 可见类型的名称发生冲突，.NET Framework 导出未修饰的名。 设置 OldNames 标志或使用<xref uid=&quot;langword_csharp_/oldnames&quot; name=&quot;/oldnames&quot; href=&quot;&quot;></xref>类型库导出程序 (Tlbexp.exe) 中的选项来强制要导出的修饰的名称的.NET Framework。 请注意，导出的修饰的名称已在.NET Framework 2.0 版之前的版本的默认行为。"
  syntax:
    content: OldNames
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  id: OnlyReferenceRegistered
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  langs:
  - csharp
  name: OnlyReferenceRegistered
  nameWithType: TypeLibExporterFlags.OnlyReferenceRegistered
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "导出对从 COM 作为导入的类型的引用<xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;></xref>如果类型不具有已注册的类型库。 如果希望类型库导出程序查找依赖类型注册表中而不是输入程序集位于同一目录中，请设置此标志。"
  syntax:
    content: OnlyReferenceRegistered
    return:
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: CallerResolvedReferences
  nameWithType: TypeLibExporterFlags.CallerResolvedReferences
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibExporterFlags
  nameWithType: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: ExportAs32Bit
  nameWithType: TypeLibExporterFlags.ExportAs32Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: ExportAs64Bit
  nameWithType: TypeLibExporterFlags.ExportAs64Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.None
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: None
  nameWithType: TypeLibExporterFlags.None
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.None
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: OldNames
  nameWithType: TypeLibExporterFlags.OldNames
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  isExternal: false
  name: OnlyReferenceRegistered
  nameWithType: TypeLibExporterFlags.OnlyReferenceRegistered
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
