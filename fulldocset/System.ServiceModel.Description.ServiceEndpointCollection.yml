### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  id: ServiceEndpointCollection
  children:
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  - System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  langs:
  - csharp
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
  type: Class
  summary: "包含服务的终结点的集合。"
  remarks: "元数据 API 使用的服务终结点的此集合来管理与多个终结点的服务。 ServiceEndpointCollection 返回，例如，通过<xref:System.ServiceModel.Description.ServiceDescription.Endpoints%2A>属性和<xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A>方法从 WSDL 端口类型创建服务终结点时。</xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> </xref:System.ServiceModel.Description.ServiceDescription.Endpoints%2A>       集合提供一种功能<xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>终结点的一个特定的类型，具有特定名称或地址，或到<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>满足指定的协定类型或名称条件的服务终结点。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>"
  example:
  - "The following example illustrates the use of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> and <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods to enumerate <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy various search criteria.  \n  \n [!code-cs[ServiceEndpointCollection#1](~/add/codesnippet/csharp/t-system.servicemodel.de_17_1.cs)]\n [!code-cs[ServiceEndpointCollection#1](~/add/codesnippet/csharp/t-system.servicemodel.de_17_1.cs)]"
  syntax:
    content: 'public class ServiceEndpointCollection : System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>'
  inheritance:
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  id: Find(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Type)
  nameWithType: ServiceEndpointCollection.Find(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回第一个服务终结点找到一个满足指定的协定类型从服务终结点的集合。"
  remarks: "此查找重载是特定于[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]编程模型。 它会查看<xref:System.ServiceModel.Description.ContractDescription.ContractType%2A>每个终结点的属性。</xref:System.ServiceModel.Description.ContractDescription.ContractType%2A> <xref:System.ServiceModel.Description.ContractDescription.ContractType%2A>可能`null`如果<xref:System.ServiceModel.Description.ContractDescription>不从创建[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]编程模型 (类型带有 * 协定属性)。</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.ContractDescription.ContractType%2A>       有多个服务终结点可能无法满足的条件。 该方法返回的第一个满足集合中。 如果你需要查找所有<xref:System.ServiceModel.Description.ServiceEndpoint>对象满足指定的条件后，使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "<xref:System.Type>服务终结点的协定。</xref:System.Type>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "第一个<xref:System.ServiceModel.Description.ServiceEndpoint>的指定的协定类型或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到任何。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  id: Find(System.Uri)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Uri)
  nameWithType: ServiceEndpointCollection.Find(Uri)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回具有指定的地址的服务终结点的服务终结点集合中。"
  remarks: "有多个服务终结点可能无法满足的条件。 该方法返回的第一个满足集合中。 如果你需要查找所有<xref:System.ServiceModel.Description.ServiceEndpoint>对象满足指定的条件后，使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>服务终结点。</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "第一个<xref:System.ServiceModel.Description.ServiceEndpoint>的指定的地址或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到任何。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  id: Find(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回具有指定命名空间和协定名称的服务终结点的服务终结点集合中。"
  remarks: "有多个服务终结点可能无法满足的条件。 该方法返回的第一个满足集合中。 如果你需要查找所有<xref:System.ServiceModel.Description.ServiceEndpoint>对象满足指定的条件后，使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>服务的协定。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "第一个<xref:System.ServiceModel.Description.ServiceEndpoint>具有指定的命名空间和协定名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到任何。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  id: Find(System.Type,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Type,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回服务终结点的指定的协定类型条件且带有指定的绑定命名和命名空间的服务终结点集合中。"
  remarks: "有多个服务终结点可能无法满足的条件。 该方法返回的第一个满足集合中。 如果你需要查找所有<xref:System.ServiceModel.Description.ServiceEndpoint>对象满足指定的条件后，使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType, System.Xml.XmlQualifiedName bindingName);
    parameters:
    - id: contractType
      type: System.Type
      description: "<xref:System.Type>服务终结点的协定。</xref:System.Type>"
    - id: bindingName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>服务的绑定。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "第一个<xref:System.ServiceModel.Description.ServiceEndpoint>指定的协定类型和绑定名称和命名空间或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到任何。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code>or <code>bindingName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(XmlQualifiedName,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回具有指定的协定名称和命名空间和绑定名称和命名空间的第一个服务终结点的服务终结点集合中。"
  remarks: "有多个服务终结点可能无法满足的条件。 该方法返回的第一个满足集合中。 如果你需要查找所有<xref:System.ServiceModel.Description.ServiceEndpoint>对象满足指定的条件后，使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName, System.Xml.XmlQualifiedName bindingName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>服务的协定。</xref:System.Xml.XmlQualifiedName>"
    - id: bindingName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>服务的绑定。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "第一个<xref:System.ServiceModel.Description.ServiceEndpoint>与指定的绑定和协定名称和命名空间。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>or <code>bindingName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  id: FindAll(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: FindAll(Type)
  nameWithType: ServiceEndpointCollection.FindAll(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回为指定类型的服务的所有服务终结点的集合。"
  remarks: "如果仅需要查找第一个<xref:System.ServiceModel.Description.ServiceEndpoint>一个满足指定的条件，请使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> FindAll (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "<xref:System.Type>服务终结点的协定。</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "&lt;Xref:System.Collections.ObjectModel.Collection%601&gt;类型的<xref:System.ServiceModel.Description.ServiceEndpoint>如果找不到包含指定的类型的空集合的服务终结点。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  id: FindAll(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: FindAll(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.FindAll(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回满足指定的服务名称的所有服务终结点的集合。"
  remarks: "如果仅需要查找第一个<xref:System.ServiceModel.Description.ServiceEndpoint>一个满足指定的条件，请使用之一<xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>方法相反。</xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> </xref:System.ServiceModel.Description.ServiceEndpoint>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> FindAll (System.Xml.XmlQualifiedName contractName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>服务。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "&lt;Xref:System.Collections.ObjectModel.Collection%601&gt;类型的<xref:System.ServiceModel.Description.ServiceEndpoint>如果找不到包含带有指定的协定名称和命名空间的空集合的服务终结点。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  id: InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: InsertItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "将一项插入集合中指定索引处。"
  remarks: "此方法重写虚拟<xref:System.Collections.ObjectModel.Collection%601.InsertItem%28System.Int32%2C%600%29>方法在基类中定义，并用于进行输入验证，以确保`null`值不会插入到集合。</xref:System.Collections.ObjectModel.Collection%601.InsertItem%28System.Int32%2C%600%29> 它不是由用户调用。"
  syntax:
    content: protected override void InsertItem (int index, System.ServiceModel.Description.ServiceEndpoint item);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引，应在其位置插入项。"
    - id: item
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>要位于指定位置插入项`index`。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零。       -或-<code>index</code>大于集合中包含的项的数目。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  id: SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: SetItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "替换集合中指定索引处的元素。"
  remarks: "此方法重写虚拟<xref:System.Collections.ObjectModel.Collection%601.SetItem%28System.Int32%2C%600%29>方法在基类中定义，并用于进行输入验证，以确保`null`值不会插入到集合。</xref:System.Collections.ObjectModel.Collection%601.SetItem%28System.Int32%2C%600%29> 它不是由用户调用。"
  syntax:
    content: protected override void SetItem (int index, System.ServiceModel.Description.ServiceEndpoint item);
    parameters:
    - id: index
      type: System.Int32
      description: "要替换的元素的从零开始的索引。"
    - id: item
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "新值<xref:System.ServiceModel.Description.ServiceEndpoint>处指定项`index`。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.ServiceEndpointCollection.SetItem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零。       -或-<code>index</code>大于集合中包含的项的数目。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Type)
  nameWithType: ServiceEndpointCollection.Find(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Uri)
  nameWithType: ServiceEndpointCollection.Find(Uri)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Type,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type,XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(XmlQualifiedName,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll(Type)
  nameWithType: ServiceEndpointCollection.FindAll(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(Type)
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.FindAll(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: InsertItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: SetItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find
  nameWithType: ServiceEndpointCollection.Find
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll
  nameWithType: ServiceEndpointCollection.FindAll
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: InsertItem
  nameWithType: ServiceEndpointCollection.InsertItem
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: SetItem
  nameWithType: ServiceEndpointCollection.SetItem
