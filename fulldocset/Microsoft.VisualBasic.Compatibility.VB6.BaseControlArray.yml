### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  id: BaseControlArray
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  langs:
  - csharp
  name: BaseControlArray
  nameWithType: BaseControlArray
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  type: Class
  summary: "实现从 Visual Basic 6.0 升级应用程序中的控件数组共同的基本功能。"
  remarks: "你通常不继承从`BaseControlArray`。 若要创建你自己的控件数组，从一个中的控件数组类继承`Microsoft.VisualBasic.Compatibility.VB6`命名空间。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: >-
      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseControlArray()
  nameWithType: BaseControlArray.BaseControlArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>类。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected BaseControlArray ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseControlArray(IContainer)
  nameWithType: BaseControlArray.BaseControlArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray(IContainer)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>类，可以选择指定一个容器。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected BaseControlArray (System.ComponentModel.IContainer Container);
    parameters:
    - id: Container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>将托管控件数组的位置。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  id: BaseCanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseCanExtend(Object)
  nameWithType: BaseControlArray.BaseCanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "获取一个值，该值指示控件是否是控件数组的一个成员。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但改为调用由派生类。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected bool BaseCanExtend (object target);
    parameters:
    - id: target
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件是控件数组中; 的成员否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  id: BaseGetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseGetIndex(Object)
  nameWithType: BaseControlArray.BaseGetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中获取控件的索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但改为调用由派生类。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected short BaseGetIndex (object ctl);
    parameters:
    - id: ctl
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>为想要检索其索引。"
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>整数，表示控件数组中的控件索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  id: BaseGetItem(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseGetItem(Int16)
  nameWithType: BaseControlArray.BaseGetItem(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "获取控件数组中的指定索引的控制。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但改为调用由派生类。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected object BaseGetItem (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "一个整数，表示控件数组中的控件索引。"
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.Control&quot;></xref> at the specified <code>Index</code>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  id: BaseResetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseResetIndex(Object)
  nameWithType: BaseControlArray.BaseResetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "中不受支持<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>类。"
  remarks: "不支持此方法。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> -1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected void BaseResetIndex (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  id: BaseSetIndex(System.Object,System.Int16,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseSetIndex(Object,Int16,Boolean)
  nameWithType: BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中设置的控件的索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但改为调用由派生类。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);
    parameters:
    - id: ctl
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>想要设置索引为。"
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>整数，它表示控件的索引。"
    - id: fIsDynamic
      type: System.Boolean
      description: "可选。 A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>指定控件是否已在设计时创建 (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>) 或在运行时 (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>)。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  id: BaseShouldSerializeIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseShouldSerializeIndex(Object)
  nameWithType: BaseControlArray.BaseShouldSerializeIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "返回一个值，该值指示控件是否为控件数组的成员。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但改为调用由派生类。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected bool BaseShouldSerializeIndex (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件是控件数组中; 的成员否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  id: components
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: components
  nameWithType: BaseControlArray.components
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "将存储的容器的控件数组。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected System.ComponentModel.IContainer components;
    return:
      type: System.ComponentModel.IContainer
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  id: controlAddedAtDesignTime
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: controlAddedAtDesignTime
  nameWithType: BaseControlArray.controlAddedAtDesignTime
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "存储跟踪是否在设计时或在运行时创建的控件数组中的控件的值。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected System.Collections.Hashtable controlAddedAtDesignTime;
    return:
      type: System.Collections.Hashtable
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  id: controls
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: controls
  nameWithType: BaseControlArray.controls
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "存储表示控件数组中的控件的值。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected System.Collections.Hashtable controls;
    return:
      type: System.Collections.Hashtable
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  id: Count
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Count()
  nameWithType: BaseControlArray.Count()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中返回的控件的数量。"
  remarks: "你可以使用此属性在[为...下一条语句](~/add/includes/ajax-current-ext-md.md)控件数组中执行对控件的操作。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public short Count ();
    parameters: []
    return:
      type: System.Int16
      description: "包含控件的数目为短整型。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: BaseControlArray.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "释放由控件数组中控件使用的非托管的资源，还可以释放托管的资源。"
  remarks: "此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`释放参数设置为`false`。</xref:System.Object.Finalize%2A>       当处置参数是`true`，此方法释放由该控件引用任何托管对象持有的全部资源。 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  id: fIsEndInitCalled
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: fIsEndInitCalled
  nameWithType: BaseControlArray.fIsEndInitCalled
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "存储一个值，该值控制数组的容器的初始化代码是否已完成执行。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected bool fIsEndInitCalled;
    return:
      type: System.Boolean
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  id: GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: GetControlInstanceType()
  nameWithType: BaseControlArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中返回的控件的类型。"
  syntax:
    content: protected abstract Type GetControlInstanceType ();
    parameters: []
    return:
      type: System.Type
      description: "必须重写此方法。       <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;> </xref>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。 此类不通常用于创建类的实例，因为这<xref uid=&quot;langword_csharp_Protected&quot; name=&quot;Protected&quot; href=&quot;&quot;></xref>方法通常不直接调用，但改为调用由派生类。       <div class=&quot;alert NOTE&quot;>    函数和对象在<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6&quot;></xref>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。      </div>"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: BaseControlArray.GetEnumerator()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "返回到一个枚举器对象，它用于循环访问控件数组的引用。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A<xref:System.Collections.IEnumerator>对象。</xref:System.Collections.IEnumerator>"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  id: HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: HookUpControlEvents(Object)
  nameWithType: BaseControlArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中添加的控件的事件处理程序。"
  remarks: "必须重写此方法。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected abstract void HookUpControlEvents (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  id: indices
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: indices
  nameWithType: BaseControlArray.indices
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "将存储控件数组的索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: protected System.Collections.Hashtable indices;
    return:
      type: System.Collections.Hashtable
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  id: LBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: LBound()
  nameWithType: BaseControlArray.LBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "返回<xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref>包含的控件数组的最小可用下标。"
  remarks: "`LBound`函数用于处理<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>函数来确定控件数组的大小。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public short LBound ();
    parameters: []
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，它包含控件数组的下限。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  id: Load(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Load(Int16)
  nameWithType: BaseControlArray.Load(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件数组中创建一个新元素。"
  remarks: "此方法相当于 Visual Basic 6.0`Load`用于动态创建新的控制数组元素的函数。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public void Load (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>表示新的控件索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "开始初始化控件。"
  remarks: "设计环境通常使用此方法来启动窗体上使用或由另一个组件的组件的初始化。 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A>方法初始化已结束。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A> 使用`BeginInit`和<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A>方法阻止控件完全初始化之前使用。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A> 初始化发生在运行时。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控件的初始化已结束。"
  remarks: "设计环境通常使用此方法来完成的窗体上使用或由另一个组件的组件初始化。 `EndInit`方法初始化已结束。 使用<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit%2A>和`EndInit`方法阻止控件完全初始化之前使用。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit%2A> 初始化发生在运行时。      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  id: UBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: UBound()
  nameWithType: BaseControlArray.UBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "返回<xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，其中包含的控件数组的最大可用的下标。"
  remarks: "`UBound`函数用于处理<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>函数来确定控件数组的大小。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public short UBound ();
    parameters: []
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，它包含控件数组的上限。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  id: Unload(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Unload(Int16)
  nameWithType: BaseControlArray.Unload(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "从控件数组中移除控件。"
  remarks: "此方法相当于 Visual Basic 6.0`Unload`动态删除控制数组元素的函数。      1> [!NOTE]&1;> 由使用动态添加的控件<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法可以从控件数组中移除。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      1> [!NOTE] 1> 函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接的工具从到 Visual Basic 6.0 升级[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大多数情况下，这些函数和对象重复可在其他命名空间中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 仅当 Visual Basic 6.0 代码模型显著区别它们是所必需[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]实现。"
  syntax:
    content: public void Unload (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，表示要删除的控件索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray()
  nameWithType: BaseControlArray.BaseControlArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray(IContainer)
  nameWithType: BaseControlArray.BaseControlArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseCanExtend(Object)
  nameWithType: BaseControlArray.BaseCanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetIndex(Object)
  nameWithType: BaseControlArray.BaseGetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(Object)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetItem(Int16)
  nameWithType: BaseControlArray.BaseGetItem(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseResetIndex(Object)
  nameWithType: BaseControlArray.BaseResetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseSetIndex(Object,Int16,Boolean)
  nameWithType: BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseShouldSerializeIndex(Object)
  nameWithType: BaseControlArray.BaseShouldSerializeIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: components
  nameWithType: BaseControlArray.components
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: controlAddedAtDesignTime
  nameWithType: BaseControlArray.controlAddedAtDesignTime
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: controls
  nameWithType: BaseControlArray.controls
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Count()
  nameWithType: BaseControlArray.Count()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: BaseControlArray.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: fIsEndInitCalled
  nameWithType: BaseControlArray.fIsEndInitCalled
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetControlInstanceType()
  nameWithType: BaseControlArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetEnumerator()
  nameWithType: BaseControlArray.GetEnumerator()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: HookUpControlEvents(Object)
  nameWithType: BaseControlArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: indices
  nameWithType: BaseControlArray.indices
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: LBound()
  nameWithType: BaseControlArray.LBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Load(Int16)
  nameWithType: BaseControlArray.Load(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: UBound()
  nameWithType: BaseControlArray.UBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Unload(Int16)
  nameWithType: BaseControlArray.Unload(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray
  nameWithType: BaseControlArray.BaseControlArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseCanExtend
  nameWithType: BaseControlArray.BaseCanExtend
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetIndex
  nameWithType: BaseControlArray.BaseGetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetItem
  nameWithType: BaseControlArray.BaseGetItem
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseResetIndex
  nameWithType: BaseControlArray.BaseResetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseSetIndex
  nameWithType: BaseControlArray.BaseSetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseShouldSerializeIndex
  nameWithType: BaseControlArray.BaseShouldSerializeIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Count
  nameWithType: BaseControlArray.Count
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Dispose
  nameWithType: BaseControlArray.Dispose
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetControlInstanceType
  nameWithType: BaseControlArray.GetControlInstanceType
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetEnumerator
  nameWithType: BaseControlArray.GetEnumerator
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: HookUpControlEvents
  nameWithType: BaseControlArray.HookUpControlEvents
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: LBound
  nameWithType: BaseControlArray.LBound
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Load
  nameWithType: BaseControlArray.Load
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: UBound
  nameWithType: BaseControlArray.UBound
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Unload
  nameWithType: BaseControlArray.Unload
