### YamlMime:ManagedReference
items:
- uid: System.Data.Services.Client.DataServiceContext
  id: DataServiceContext
  children:
  - System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)
  - System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.ApplyingChanges
  - System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)
  - System.Data.Services.Client.DataServiceContext.BaseUri
  - System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation`1,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])
  - System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)
  - System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)
  - System.Data.Services.Client.DataServiceContext.Credentials
  - System.Data.Services.Client.DataServiceContext.DataNamespace
  - System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)
  - System.Data.Services.Client.DataServiceContext.Detach(System.Object)
  - System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)
  - System.Data.Services.Client.DataServiceContext.Entities
  - System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation`1)
  - System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)
  - System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])
  - System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)
  - System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.GetMetadataUri
  - System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)
  - System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)
  - System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)
  - System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)
  - System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties
  - System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException
  - System.Data.Services.Client.DataServiceContext.Links
  - System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)
  - System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)
  - System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)
  - System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation`1)
  - System.Data.Services.Client.DataServiceContext.MergeOption
  - System.Data.Services.Client.DataServiceContext.ReadingEntity
  - System.Data.Services.Client.DataServiceContext.ResolveName
  - System.Data.Services.Client.DataServiceContext.ResolveType
  - System.Data.Services.Client.DataServiceContext.SaveChanges
  - System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)
  - System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions
  - System.Data.Services.Client.DataServiceContext.SendingRequest
  - System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)
  - System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)
  - System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)
  - System.Data.Services.Client.DataServiceContext.Timeout
  - System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)
  - System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)
  - System.Data.Services.Client.DataServiceContext.TypeScheme
  - System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)
  - System.Data.Services.Client.DataServiceContext.UsePostTunneling
  - System.Data.Services.Client.DataServiceContext.WritingEntity
  langs:
  - csharp
  name: DataServiceContext
  nameWithType: DataServiceContext
  fullName: System.Data.Services.Client.DataServiceContext
  type: Class
  summary: "DataServiceContext 表示数据服务的运行时上下文。"
  remarks: '[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]是无状态的但 DataServiceContext 并不是。 为了支持更新管理之类的功能的交互之间将保持客户端的状态。 此类与<xref:System.Data.Services.Client.DataServiceQuery>到数据服务时，表示特定的 HTTP 请求的类是客户端库中的两个主要类。</xref:System.Data.Services.Client.DataServiceQuery>'
  example:
  - "The following example shows how to use the DataServiceContext generated by the Add Service Reference tool to implicitly execute a query against the Northwind data service that returns all customers. The URI of the requested `Customers` entity set is determined automatically by the context. The query is executed implicitly when the enumeration occurs. The Northwind data service is created when you complete the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] .  \n  \n [!code-vb[Astoria Northwind Client#GetAllCustomers](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#getallcustomers)]\n [!code-cs[Astoria Northwind Client#GetAllCustomers](~/add/codesnippet/csharp/northwindclientcs/source.cs#getallcustomers)]"
  syntax:
    content: public class DataServiceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: DataServiceContext(Uri)
  nameWithType: DataServiceContext.DataServiceContext(Uri)
  fullName: System.Data.Services.Client.DataServiceContext.DataServiceContext(Uri)
  type: Constructor
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "初始化的新实例<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>使用指定的类<code> serviceRoot </code>。"
  remarks: "客户端库要求`baseURI`以指向数据的根的服务，但它不会发出请求以对其进行验证。 如果`baseURI`不会确定根的服务，客户端库的行为是不确定。       带尾部反斜杠的 URI 相当于一个不带尾随字符。"
  syntax:
    content: public DataServiceContext (Uri serviceRoot);
    parameters:
    - id: serviceRoot
      type: System.Uri
      description: "标识数据服务的根的绝对 URI。"
  overload: System.Data.Services.Client.DataServiceContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "当<code> serviceRoot </code>为 null。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果<code> serviceRoot </code>不是一个绝对 URI-或-如果<code> serviceRoot </code>是不带查询或查询片段的格式正确的 URI。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)
  id: AddLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AddLink(Object,String,Object)
  nameWithType: DataServiceContext.AddLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddLink(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将指定的链接添加到的对象集<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>是否在跟踪。"
  remarks: "通知<xref:System.Data.Services.Client.DataServiceContext>相关的源和目标对象之间存在新链接，链接由指定的源属性。</xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceContext>将添加到新创建的链接，将发送到<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>的后续调用上的数据服务设置此链接</xref:System.Data.Services.Client.DataServiceContext>       链接是单向关系。 由于关联是双向的必须一对一关联中调用任一 AddLink 以创建反向链接，并且在多对一关联，您必须调用<xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>创建指向关联&quot;一&quot;端的引用。</xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>       目标对象的标识的类型必须是`sourceProperty`参数或类型的子类型。"
  example:
  - "The following example shows how to use the AddLink and <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> methods to create links that define relationships. In this example, the navigation properties on the `Order_Details` object are also explicitly set. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] .  \n  \n [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#addorderdetailtoorder)]\n [!code-cs[Astoria Northwind Client#AddOrderDetailToOrder](~/add/codesnippet/csharp/northwindclientcs/source.cs#addorderdetailtoorder)]"
  syntax:
    content: public void AddLink (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "新链接的的源对象。"
    - id: sourceProperty
      type: System.String
      description: "返回相关的对象的源对象上的导航属性的名称。"
    - id: target
      type: System.Object
      description: "通过新链接的源对象相关联的对象。"
  overload: System.Data.Services.Client.DataServiceContext.AddLink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code>, <code>sourceProperty</code>, or <code>target</code> are null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "如果链接已存在。       -or-       If either the <code>source</code> or <code>target</code> objects are in a <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或-如果<code> sourceProperty </code>不是一个集合。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)
  id: AddObject(System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AddObject(String,Object)
  nameWithType: DataServiceContext.AddObject(String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddObject(String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将指定的对象添加到的对象集的<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>是否在跟踪。"
  remarks: "该对象放入的跟踪集中<xref:System.Data.Services.Client.DataServiceContext>中<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceContext>将尝试插入到<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>下次调用的 HTTP POST 对象</xref:System.Data.Services.Client.DataServiceContext> 此方法不会添加到指定的实体访问<xref:System.Data.Services.Client.DataServiceContext>.</xref:System.Data.Services.Client.DataServiceContext>相关的对象 必须通过单独调用 AddObject 添加每个对象。       该方法不会验证与关联的数据服务中是否存在指定的实体集<xref:System.Data.Services.Client.DataServiceContext>需要添加的对象具有所需的属性或要添加到指定`entity set`。</xref:System.Data.Services.Client.DataServiceContext>"
  syntax:
    content: public void AddObject (string entitySetName, object entity);
    parameters:
    - id: entitySetName
      type: System.String
      description: "实体的名称设置为将其添加资源。"
    - id: entity
      type: System.Object
      description: "对象要跟踪通过<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  overload: System.Data.Services.Client.DataServiceContext.AddObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entitySetName</code> or <code>entity</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>entitySetName</code> is empty.       -或-当<code> entity </code>没有定义键属性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当已是由上下文跟踪实体。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  id: AddRelatedObject(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AddRelatedObject(Object,String,Object)
  nameWithType: DataServiceContext.AddRelatedObject(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddRelatedObject(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将相关的对象添加到上下文，并创建链接，以便定义单个请求中的两个对象之间的关系。"
  remarks: '你可以调用 AddRelatedObject 方法来添加相关的对象，而不是调用这三种方法: <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>、 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.</xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>'
  syntax:
    content: public void AddRelatedObject (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "正在跟踪上下文中的父对象。"
    - id: sourceProperty
      type: System.String
      description: "返回基于两个实体之间的关联的相关的对象的导航属性的名称。"
    - id: target
      type: System.Object
      description: "正在添加相关的对象。"
  overload: System.Data.Services.Client.DataServiceContext.AddRelatedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.ApplyingChanges
  id: ApplyingChanges
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: ApplyingChanges
  nameWithType: DataServiceContext.ApplyingChanges
  fullName: System.Data.Services.Client.DataServiceContext.ApplyingChanges
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>当前正在将更改应用于所跟踪对象。"
  syntax:
    content: public bool ApplyingChanges { get; }
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>时当前正在应用的更改; 否则返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Services.Client.DataServiceContext.ApplyingChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)
  id: AttachLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AttachLink(Object,String,Object)
  nameWithType: DataServiceContext.AttachLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AttachLink(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通知<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>若要开始跟踪指定的链接，以便定义实体对象之间的关系。"
  syntax:
    content: public void AttachLink (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "中的新链接的源对象。"
    - id: sourceProperty
      type: System.String
      description: "表示源和目标对象之间的链接的源对象上的属性名称。"
    - id: target
      type: System.Object
      description: "绑定到此调用中指定的源对象的链接中的目标对象。 标识源属性或子类型必须是类型的目标对象。"
  overload: System.Data.Services.Client.DataServiceContext.AttachLink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code>, <code>sourceProperty</code>, or <code>target</code> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当存在两个实体之间的链接。       -or-       When <code>source</code> or <code>target</code> is in an <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)
  id: AttachTo(System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AttachTo(String,Object)
  nameWithType: DataServiceContext.AttachTo(String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AttachTo(String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通知<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>开始跟踪指定的资源，并提供集中的位置指定的资源中的资源。"
  remarks: "如果实体为对象图的一部分，此操作不会遍历该图来添加相关的对象。 它是浅表操作。       该方法不会验证是否出现在<xref:System.Data.Services.Client.DataServiceContext>.</xref:System.Data.Services.Client.DataServiceContext>与关联的数据服务中的指定的实体集"
  syntax:
    content: public void AttachTo (string entitySetName, object entity);
    parameters:
    - id: entitySetName
      type: System.String
      description: "包含资源集的名称。"
    - id: entity
      type: System.Object
      description: "要跟踪通过资源<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。 将以未更改状态附加资源。"
  overload: System.Data.Services.Client.DataServiceContext.AttachTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> or <code>entitySetName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当<code> entitySetName </code>为空字符串。       -或-当<code> entity </code>没有定义键属性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当<code> entity </code>已由上下文跟踪。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)
  id: AttachTo(System.String,System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: AttachTo(String,Object,String)
  nameWithType: DataServiceContext.AttachTo(String,Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.AttachTo(String,Object,String)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通知<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>开始跟踪指定的资源，并提供集中的位置中指定的资源的资源。"
  remarks: "调用此方法通知<xref:System.Data.Services.Client.DataServiceContext>若要开始跟踪指定的实体和标识设置为该实体所属的实体。</xref:System.Data.Services.Client.DataServiceContext>       如果实体为对象图的一部分，此操作不会遍历该图来添加相关的对象。 该对象添加到<xref:System.Data.Services.Client.DataServiceContext>中未更改状态。</xref:System.Data.Services.Client.DataServiceContext> 该方法不会验证是否与<xref:System.Data.Services.Client.DataServiceContext>.</xref:System.Data.Services.Client.DataServiceContext>关联的数据服务中出现指定的实体集       如果使用带 etag 的重载，则指定的 etag 将与新附加的实体关联。 然后将 etag 发送到数据服务，与实体的所有后续更新或查询操作根据 HTTP 语义。 不建议手动生成 etag 值，但此重载用于启用实体可能已序列化和存储以及相关并发元数据重新附加。"
  syntax:
    content: public void AttachTo (string entitySetName, object entity, string etag);
    parameters:
    - id: entitySetName
      type: System.String
      description: "包含实体的名称的字符串值设置为连接到实体。"
    - id: entity
      type: System.Object
      description: "要添加的实体。"
    - id: etag
      type: System.String
      description: "一个表示的上次从数据服务检索到它的状态的实体的 etag 值。 此值视为不透明的字符串;通过客户端库情况下，对其不执行任何验证。"
  overload: System.Data.Services.Client.DataServiceContext.AttachTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entitySetName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当<code> entitySetName </code>为空字符串。       -或者-如果所提供的对象不具有键属性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当所提供的对象已跟踪上下文"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BaseUri
  id: BaseUri
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BaseUri
  nameWithType: DataServiceContext.BaseUri
  fullName: System.Data.Services.Client.DataServiceContext.BaseUri
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取标识目标数据服务的根的绝对 URI。"
  remarks: "提供带尾部反斜杠的 URI 相当于一个不带尾随字符。"
  syntax:
    content: public Uri BaseUri { get; }
    return:
      type: System.Uri
      description: "用于标识 T 数据服务的根的绝对 URI。"
  overload: System.Data.Services.Client.DataServiceContext.BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation`1,System.AsyncCallback,System.Object)
  id: BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation`1,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public IAsyncResult BeginExecute<T> (System.Data.Services.Client.DataServiceQueryContinuation<T> continuation, AsyncCallback callback, object state);
    parameters:
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation`1
      description: "要添加。"
    - id: callback
      type: System.AsyncCallback
      description: "要添加。"
    - id: state
      type: System.Object
      description: "要添加。"
    return:
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.BeginExecute<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)
  id: BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginExecute(Uri,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginExecute(Uri,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecute(Uri,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public IAsyncResult BeginExecute<TElement> (Uri requestUri, AsyncCallback callback, object state);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "要添加。"
    - id: callback
      type: System.AsyncCallback
      description: "要添加。"
    - id: state
      type: System.Object
      description: "要添加。"
    return:
      type: System.IAsyncResult
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.BeginExecute<TElement>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])
  id: BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
  nameWithType: DataServiceContext.BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以异步方式将一组查询以对数据服务批处理方式提交。"
  remarks: "返回<xref:System.IAsyncResult>对象用于确定异步操作何时已完成。</xref:System.IAsyncResult> 有关详细信息，请参阅[异步操作](~/add/includes/ajax-current-ext-md.md)。       查询指定为<xref:System.Data.Services.Client.DataServiceRequest%601>实例。</xref:System.Data.Services.Client.DataServiceRequest%601> 返回<xref:System.Data.Services.Client.DataServiceResponse>表示作为一个整体的批处理请求的响应。</xref:System.Data.Services.Client.DataServiceResponse> 单个查询响应表示为<xref:System.Data.Services.Client.DataServiceResponse>可以通过枚举来访问的对象<xref:System.Data.Services.Client.DataServiceResponse>实例。</xref:System.Data.Services.Client.DataServiceResponse> </xref:System.Data.Services.Client.DataServiceResponse>       此方法返回时，已从网络流读取所有批处理请求的 HTTP 响应，但尚未处理响应。 之前在枚举响应中指定的实体的标识解析或对象具体化操作。"
  syntax:
    content: public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, System.Data.Services.Client.DataServiceRequest[] queries);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "在收到批处理请求响应时调用的委托。"
    - id: state
      type: System.Object
      description: "用于将上下文数据传递给回调方法的用户定义的状态对象。"
    - id: queries
      type: System.Data.Services.Client.DataServiceRequest[]
      description: "查询请求要包含在批处理请求中的数组。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>用于跟踪异步操作的状态的对象。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)
  id: BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以异步方式以及指定的消息标头数据流的形式获取为指定的实体的二进制属性数据。"
  remarks: "<xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>方法以异步方式请求包含所请求的二进制属性的数据流`entity`。</xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>       在 AtomPub 协议中，`entity`为媒体链接入口，二进制属性为关联的媒体资源。       在中设置的标头不执行任何验证`args`。 因此，不要以更改方式来更改请求含义的 HTTP 标头。"
  syntax:
    content: public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要检索的二进制属性的实体。"
    - id: args
      type: System.Data.Services.Client.DataServiceRequestArgs
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceRequestArgs&quot;></xref>包含 HTTP 请求消息设置的类。"
    - id: callback
      type: System.AsyncCallback
      description: "当结果可供客户端使用时将调用的委托。"
    - id: state
      type: System.Object
      description: "用户定义的状态对象传递给回调。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>用于跟踪异步操作的状态的对象。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.BeginGetReadStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任何提供给方法的参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>不跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。       -or-       The <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或- <code> entity </code>不是媒体链接入口，并且没有二进制属性。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)
  id: BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginLoadProperty(Object,String,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "从数据服务异步加载指定属性的值。"
  remarks: "调用此方法时，将调用网络操作以检索属性的值。 指定的属性可以为任意一个的实体，包括表示关联或链接的属性上的属性。 如果属性是表示关联、 链接或延迟的属性，调用此方法提供延迟加载相关的资源的方式与客户端。 如果实体处于已修改状态，属性值加载相关的实体，并将它们及为未更改的任何链接标记。       如果已加载属性，则调用此方法将可让您刷新该属性的值。"
  syntax:
    content: public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体上的属性名称。"
    - id: callback
      type: System.AsyncCallback
      description: "收到对请求的响应时调用的委托。"
    - id: state
      type: System.Object
      description: "用于将上下文数据传递给回调方法的用户定义的状态对象。"
    return:
      type: System.IAsyncResult
      description: "<xref uid=&quot;langword_csharp_IAsyncResult&quot; name=&quot;IAsyncResult&quot; href=&quot;&quot;> </xref>表示异步操作的状态。"
  overload: System.Data.Services.Client.DataServiceContext.BeginLoadProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)
  id: BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通过使用提供的查询延续对象从数据服务中异步加载下一页相关实体。"
  remarks: "提供<xref:System.Data.Services.Client.DataServiceQueryContinuation%601>对象包含的 URI，在执行时会返回查询结果中的下一页数据。</xref:System.Data.Services.Client.DataServiceQueryContinuation%601>"
  syntax:
    content: public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体的属性的名称。"
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation
      description: "A &lt;xref:System.Data.Services.Client.DataServiceQueryContinuation%601&gt;对象，表示的下一页相关实体数据要从数据服务返回。"
    - id: callback
      type: System.AsyncCallback
      description: "当结果可供客户端使用时将调用的委托。"
    - id: state
      type: System.Object
      description: "用户定义的状态对象传递给回调。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，表示该操作的状态。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.BeginLoadProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)
  id: BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通过使用提供的下一链接 URI 从数据服务中异步加载相关实体页。"
  remarks: "当`entity`处于<xref:System.Data.Services.Client.EntityStates>或<xref:System.Data.Services.Client.EntityStates>状态时，在加载相关的实体<xref:System.Data.Services.Client.EntityStates>状态和实体之间的链接也在中创建<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>       当`entity`处于<xref:System.Data.Services.Client.EntityStates>状态时，在加载相关的实体<xref:System.Data.Services.Client.EntityStates>中创建状态和实体之间的链接<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>"
  syntax:
    content: public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体的属性的名称。"
    - id: nextLinkUri
      type: System.Uri
      description: "用于加载下一结果页的 URI。"
    - id: callback
      type: System.AsyncCallback
      description: "当结果可供客户端使用时将调用的委托。"
    - id: state
      type: System.Object
      description: "用户定义的状态对象传递给回调。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>用于跟踪异步操作的状态的对象。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.BeginLoadProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)
  id: BeginSaveChanges(System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginSaveChanges(AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginSaveChanges(AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以异步方式将提交到数据服务所收集的挂起的更改<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>由于已保存最近的时间更改。"
  remarks: "更改添加到<xref:System.Data.Services.Client.DataServiceContext>通过调用<xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>， <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>， <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>， <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>，或<xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>。</xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A> </xref:System.Data.Services.Client.DataServiceContext.Detach%2A> </xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A> </xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A> </xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A> </xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> </xref:System.Data.Services.Client.DataServiceContext>       更改发送到数据服务，作为与<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>方法时，每个 HTTP 请求一个更改操作。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>       如果在处理操作时发生错误，不由数据服务处理任何其他操作。 相反，会生成一个响应，告知客户端已执行的操作、 结果以及因错误而未尝试的操作。"
  syntax:
    content: public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "要完成该操作后调用的委托。"
    - id: state
      type: System.Object
      description: "用于将上下文数据传递给回调方法的用户定义的状态对象。"
    return:
      type: System.IAsyncResult
      description: "<xref uid=&quot;langword_csharp_IAsyncResult&quot; name=&quot;IAsyncResult&quot; href=&quot;&quot;> </xref>表示异步操作的状态。"
  overload: System.Data.Services.Client.DataServiceContext.BeginSaveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)
  id: BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以异步方式将提交到数据服务所收集的挂起的更改<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>由于已保存最近的时间更改。"
  remarks: "更改添加到<xref:System.Data.Services.Client.DataServiceContext>通过调用<xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>， <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>， <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>， <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>， <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>，或<xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>。</xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A> </xref:System.Data.Services.Client.DataServiceContext.Detach%2A> </xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A> </xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A> </xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A> </xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> </xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> </xref:System.Data.Services.Client.DataServiceContext>       如果<xref:System.Data.Services.Client.SaveChangesOptions>设置，所有挂起的更改都将包括在单个变更集中在批处理中，并提交到单个 HTTP 请求中的数据服务。</xref:System.Data.Services.Client.SaveChangesOptions> 这要求目标服务支持批处理。       如果<xref:System.Data.Services.Client.SaveChangesOptions>未设置:-更改发送到数据服务例如，在<xref:System.Data.Services.Client.DataServiceContext.SaveChanges>方法︰ 一个操作对应于一个 HTTP 请求。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges> </xref:System.Data.Services.Client.SaveChangesOptions>      -<xref:System.Data.Services.Client.OperationResponse.StatusCode%2A>始终为 200。</xref:System.Data.Services.Client.OperationResponse.StatusCode%2A>      -<xref:System.Data.Services.Client.OperationResponse.Headers%2A>属性返回一个空集合。</xref:System.Data.Services.Client.OperationResponse.Headers%2A>       如果<xref:System.Data.Services.Client.SaveChangesOptions>设置:-如果处理更改集中的操作发生错误，将不会尝试更改集中的后续操作; 但是，数据服务将继续处理下一次批处理中设置的更改。</xref:System.Data.Services.Client.SaveChangesOptions>      -此选项不能设置时<xref:System.Data.Services.Client.SaveChangesOptions>设置，因为启用批处理时，所有操作都将都放置在单个变更集中。</xref:System.Data.Services.Client.SaveChangesOptions>       如果<xref:System.Data.Services.Client.SaveChangesOptions>未设置:-如果在处理操作，无需额外时发生错误操作处理数据服务。</xref:System.Data.Services.Client.SaveChangesOptions>       为生成响应，告知客户端已执行的操作、 它们的结果，以及因错误而未尝试的操作。"
  syntax:
    content: public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
      description: "有关客户端可以如何保存挂起的更改集的选项。"
    - id: callback
      type: System.AsyncCallback
      description: "要完成该操作后调用的委托。"
    - id: state
      type: System.Object
      description: "用于将上下文数据传递给回调方法的用户定义的状态对象。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>表示异步操作的状态。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.BeginSaveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)
  id: CancelRequest(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: CancelRequest(IAsyncResult)
  nameWithType: DataServiceContext.CancelRequest(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.CancelRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "尝试取消该操作与所提供的<xref:System.IAsyncResult>对象。</xref:System.IAsyncResult>"
  remarks: "<xref:System.IAsyncResult>对象传递给`asyncResult`参数是以异步方式执行操作时返回的对象。</xref:System.IAsyncResult> 有关详细信息，请参阅[异步操作](~/add/includes/ajax-current-ext-md.md)。处理此请求时，直到<xref:System.Data.Services.Client.DataServiceContext>实例未处于可预测的状态。</xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceContext>可以安全地时要使用<xref:System.IAsyncResult.IsCompleted%2A>属性`asyncResult`返回的值`true`。</xref:System.IAsyncResult.IsCompleted%2A> </xref:System.Data.Services.Client.DataServiceContext>"
  syntax:
    content: public void CancelRequest (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>从要取消操作的对象。</xref:System.IAsyncResult>"
  overload: System.Data.Services.Client.DataServiceContext.CancelRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)
  id: CreateQuery``1(System.String)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: CreateQuery(String)
  nameWithType: DataServiceContext.CreateQuery(String)
  fullName: System.Data.Services.Client.DataServiceContext.CreateQuery(String)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public System.Data.Services.Client.DataServiceQuery<T> CreateQuery<T> (string entitySetName);
    parameters:
    - id: entitySetName
      type: System.String
      description: "要添加。"
    return:
      type: System.Data.Services.Client.DataServiceQuery{T}
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.CreateQuery<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Credentials
  id: Credentials
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Credentials
  nameWithType: DataServiceContext.Credentials
  fullName: System.Data.Services.Client.DataServiceContext.Credentials
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置通过使用创建的每个查询使用的身份验证信息<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>对象。"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "用于检索 Web 客户端身份验证的凭据的基本身份验证接口。"
  overload: System.Data.Services.Client.DataServiceContext.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.DataNamespace
  id: DataNamespace
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: DataNamespace
  nameWithType: DataServiceContext.DataNamespace
  fullName: System.Data.Services.Client.DataServiceContext.DataNamespace
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置，而非元数据项，Atom 负载数据项的 XML 命名空间。"
  remarks: "此属性的默认值是默认设置[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]命名空间︰ `http://schemas.microsoft.com/ado/2007/08/dataservices`。       此属性会影响用于从数据服务的分析内容的命名空间和用于生成发送到数据服务的内容的命名空间。"
  syntax:
    content: public string DataNamespace { get; set; }
    return:
      type: System.String
      description: "有关在 ATOM 负载数据项格式表示的 XML 命名空间的字符串。"
  overload: System.Data.Services.Client.DataServiceContext.DataNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  id: DeleteLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: DeleteLink(Object,String,Object)
  nameWithType: DataServiceContext.DeleteLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.DeleteLink(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "更改链接到的状态的跟踪的链接列表中删除<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  remarks: "跟踪的任何链接<xref:System.Data.Services.Client.DataServiceContext>，而不考虑其当前状态，均可分离。</xref:System.Data.Services.Client.DataServiceContext>"
  syntax:
    content: public void DeleteLink (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "中要标记为要删除的链接的源对象。"
    - id: sourceProperty
      type: System.String
      description: "用于访问目标对象的源对象上的导航属性的名称。"
    - id: target
      type: System.Object
      description: "绑定到源对象的链接中涉及的目标对象中。 标识源属性或子类型必须是类型的目标对象。"
  overload: System.Data.Services.Client.DataServiceContext.DeleteLink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code>, <code>sourceProperty</code>, or <code>target</code> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When <code>source</code> or <code>target</code> is in a <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或-当<code> sourceProperty </code>不是一个集合。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)
  id: DeleteObject(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: DeleteObject(Object)
  nameWithType: DataServiceContext.DeleteObject(Object)
  fullName: System.Data.Services.Client.DataServiceContext.DeleteObject(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "要在中删除的指定对象的状态更改<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  remarks: "与指定实体的所有链接也会都标记已删除。"
  syntax:
    content: public void DeleteObject (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "将更改为已删除状态被跟踪的实体。"
  overload: System.Data.Services.Client.DataServiceContext.DeleteObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当对象不由跟踪<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Detach(System.Object)
  id: Detach(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Detach(Object)
  nameWithType: DataServiceContext.Detach(Object)
  fullName: System.Data.Services.Client.DataServiceContext.Detach(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "从实体的列表中移除该实体， <xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>是否在跟踪。"
  remarks: "一旦对象分离时，无法再跟踪<xref:System.Data.Services.Client.DataServiceContext>。</xref:System.Data.Services.Client.DataServiceContext>       Detach 方法可以调用以进行分离任何对象，而不考虑其<xref:System.Data.Services.Client.EntityStates>.</xref:System.Data.Services.Client.EntityStates>       分离后指定的实体，此方法还将分离与实体相关的任何链接。"
  syntax:
    content: public bool Detach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "若要分离的被跟踪的实体<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的实体已分离; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Services.Client.DataServiceContext.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)
  id: DetachLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: DetachLink(Object,String,Object)
  nameWithType: DataServiceContext.DetachLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.DetachLink(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "从所跟踪的链接列表中移除指定的链接<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  remarks: "跟踪的任何链接<xref:System.Data.Services.Client.DataServiceContext>，而不考虑其当前状态，均可分离。</xref:System.Data.Services.Client.DataServiceContext>"
  syntax:
    content: public bool DetachLink (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "源对象参与标记为删除的链接。"
    - id: sourceProperty
      type: System.String
      description: "表示在源和目标之间的链接中的源的源对象上的属性名称。"
    - id: target
      type: System.Object
      description: "绑定到源对象的链接中涉及的目标对象中。 标识源属性或子类型必须是类型的目标对象。"
    return:
      type: System.Boolean
      description: "如果指定的实体已分离; 则返回 true否则为 false。"
  overload: System.Data.Services.Client.DataServiceContext.DetachLink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>sourceProperty</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当<code> sourceProperty </code>为空字符串。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)
  id: EndExecute``1(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: DataServiceContext.EndExecute(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public System.Collections.Generic.IEnumerable<TElement> EndExecute<TElement> (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "要添加。"
    return:
      type: System.Collections.Generic.IEnumerable{TElement}
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.EndExecute<TElement>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)
  id: EndExecuteBatch(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: EndExecuteBatch(IAsyncResult)
  nameWithType: DataServiceContext.EndExecuteBatch(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndExecuteBatch(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "调用以完成<xref:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch*>.</xref:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch*>"
  remarks: "将一组查询以对数据服务批处理方式提交。 单个查询响应表示为<xref:System.Data.Services.Client.DataServiceResponse>对象派生自<xref:System.Data.Services.Client.OperationResponse>可访问从<xref:System.Data.Services.Client.DataServiceResponse>实例。</xref:System.Data.Services.Client.DataServiceResponse> </xref:System.Data.Services.Client.OperationResponse> </xref:System.Data.Services.Client.DataServiceResponse>"
  syntax:
    content: public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>表示异步操作的状态。</xref:System.IAsyncResult>"
    return:
      type: System.Data.Services.Client.DataServiceResponse
      description: "<xref uid=&quot;langword_csharp_ DataServiceResult&quot; name=&quot; DataServiceResult&quot; href=&quot;&quot;> </xref>对象，指示批处理操作的结果。"
  overload: System.Data.Services.Client.DataServiceContext.EndExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)
  id: EndGetReadStream(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: EndGetReadStream(IAsyncResult)
  nameWithType: DataServiceContext.EndGetReadStream(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndGetReadStream(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "调用以完成异步操作，检索以流的形式的二进制属性。"
  remarks: "调用 EndGetReadStream 方法以接收从结果<xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>方法。</xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>       EndGetReadStream 方法不会完成之前收到来自响应<xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>方法。</xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>"
  syntax:
    content: public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "从结果<xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream*>包含二进制数据流的操作。</xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream*>"
    return:
      type: System.Data.Services.Client.DataServiceStreamResponse
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>其中包含响应流及其元数据。"
  overload: System.Data.Services.Client.DataServiceContext.EndGetReadStream*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)
  id: EndLoadProperty(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: EndLoadProperty(IAsyncResult)
  nameWithType: DataServiceContext.EndLoadProperty(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndLoadProperty(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "调用以完成<xref:System.Data.Services.Client.DataServiceContext.BeginLoadProperty*>操作。</xref:System.Data.Services.Client.DataServiceContext.BeginLoadProperty*>"
  remarks: "如果发生错误的请求期间或在处理来自数据服务的响应时，将引发异常。"
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>表示异步操作的状态。</xref:System.IAsyncResult>"
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: "对加载操作的响应。"
  overload: System.Data.Services.Client.DataServiceContext.EndLoadProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)
  id: EndSaveChanges(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: EndSaveChanges(IAsyncResult)
  nameWithType: DataServiceContext.EndSaveChanges(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndSaveChanges(IAsyncResult)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "调用以完成<xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges*>操作。</xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges*>"
  remarks: "<xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A>应检查以查看批处理操作的结果。</xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A> 可以返回的操作对象上检索单个操作结果<xref:System.Data.Services.Client.DataServiceResponse>枚举器。</xref:System.Data.Services.Client.DataServiceResponse>"
  syntax:
    content: public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>表示异步操作的状态。</xref:System.IAsyncResult>"
    return:
      type: System.Data.Services.Client.DataServiceResponse
      description: "A <xref href=&quot;System.Data.Services.Client.DataServiceResponse&quot;> </xref>对象，指示批处理操作的结果。"
  overload: System.Data.Services.Client.DataServiceContext.EndSaveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Entities
  id: Entities
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Entities
  nameWithType: DataServiceContext.Entities
  fullName: System.Data.Services.Client.DataServiceContext.Entities
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取当前跟踪的所有资源的列表<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  remarks: "如果未不跟踪任何资源，则返回具有零个元素的列表。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Services.Client.EntityDescriptor> Entities { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Client.EntityDescriptor}
      description: "一份<xref href=&quot;System.Data.Services.Client.EntityDescriptor&quot;></xref>表示当前跟踪的所有资源的对象<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  overload: System.Data.Services.Client.DataServiceContext.Entities*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation`1)
  id: Execute``1(System.Data.Services.Client.DataServiceQueryContinuation`1)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Execute(DataServiceQueryContinuation<T>)
  nameWithType: DataServiceContext.Execute(DataServiceQueryContinuation<T>)
  fullName: System.Data.Services.Client.DataServiceContext.Execute(DataServiceQueryContinuation<T>)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse<T> Execute<T> (System.Data.Services.Client.DataServiceQueryContinuation<T> continuation);
    parameters:
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation`1
      description: "要添加。"
    return:
      type: System.Data.Services.Client.QueryOperationResponse`1
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.Execute<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)
  id: Execute``1(System.Uri)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Execute(Uri)
  nameWithType: DataServiceContext.Execute(Uri)
  fullName: System.Data.Services.Client.DataServiceContext.Execute(Uri)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public System.Collections.Generic.IEnumerable<TElement> Execute<TElement> (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "要添加。"
    return:
      type: System.Collections.Generic.IEnumerable{TElement}
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.Execute<TElement>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])
  id: ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: ExecuteBatch(DataServiceRequest[])
  nameWithType: DataServiceContext.ExecuteBatch(DataServiceRequest[])
  fullName: System.Data.Services.Client.DataServiceContext.ExecuteBatch(DataServiceRequest[])
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将一组查询以对数据服务批处理方式提交。"
  remarks: "查询指定为<xref:System.Data.Services.Client.DataServiceRequest%601>实例。</xref:System.Data.Services.Client.DataServiceRequest%601> 返回<xref:System.Data.Services.Client.DataServiceResponse>表示作为一个整体的批处理请求的响应。</xref:System.Data.Services.Client.DataServiceResponse> 单个查询响应表示为单个<xref:System.Data.Services.Client.OperationResponse>可以通过枚举来访问的对象<xref:System.Data.Services.Client.DataServiceResponse>实例。</xref:System.Data.Services.Client.DataServiceResponse> </xref:System.Data.Services.Client.OperationResponse>       当此方法返回的整个 HTTP 响应的批处理请求具有已从网络流读取，但尚未处理响应。 之前在枚举响应中指定的实体的标识解析或对象具体化操作。"
  example:
  - "The following example shows how to call the <xref:Microsoft.SqlServer.ReportingServices.ReportingService.ExecuteBatch%2A> method to execute an array of <xref:System.Data.Services.Client.DataServiceRequest%601> objects that contains queries that return both `Customers` and `Products` objects from the Northwind data service. The collection of <xref:System.Data.Services.Client.QueryOperationResponse%601> objects in the returned <xref:System.Data.Services.Client.DataServiceResponse> is enumerated, and the collection of objects that is contained in each <xref:System.Data.Services.Client.QueryOperationResponse%601> is also enumerated. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] .  \n  \n [!code-vb[Astoria Northwind Client#BatchQuery](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#batchquery)]\n [!code-cs[Astoria Northwind Client#BatchQuery](~/add/codesnippet/csharp/northwindclientcs/source.cs#batchquery)]"
  syntax:
    content: public System.Data.Services.Client.DataServiceResponse ExecuteBatch (System.Data.Services.Client.DataServiceRequest[] queries);
    parameters:
    - id: queries
      type: System.Data.Services.Client.DataServiceRequest[]
      description: "数组 [T:System.Data.Services.Client.DataServiceRequest\\&lt;xref:System.Data.Services.Client.DataServiceRequest%5B%5D&gt;构成查询的对象。"
    return:
      type: System.Data.Services.Client.DataServiceResponse
      description: "对批处理操作的响应。"
  overload: System.Data.Services.Client.DataServiceContext.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)
  id: GetEntityDescriptor(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetEntityDescriptor(Object)
  nameWithType: DataServiceContext.GetEntityDescriptor(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取<xref href=&quot;System.Data.Services.Client.EntityDescriptor&quot;></xref>提供的实体对象。"
  syntax:
    content: public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "为其返回实体描述符的对象。"
    return:
      type: System.Data.Services.Client.EntityDescriptor
      description: "<xref href=&quot;System.Data.Services.Client.EntityDescriptor&quot;> </xref>实例<code> entity </code>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.Services.Client.EntityDescriptor&quot;></xref>不存在的对象。"
  overload: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)
  id: GetLinkDescriptor(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetLinkDescriptor(Object,String,Object)
  nameWithType: DataServiceContext.GetLinkDescriptor(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取<xref href=&quot;System.Data.Services.Client.LinkDescriptor&quot;></xref>特定的链接，以便定义两个实体之间的关系。"
  syntax:
    content: public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "链接中的源对象"
    - id: sourceProperty
      type: System.String
      description: "上的导航属性的名称`source`返回相关的对象的对象。"
    - id: target
      type: System.Object
      description: "相关的实体。"
    return:
      type: System.Data.Services.Client.LinkDescriptor
      description: "<xref href=&quot;System.Data.Services.Client.LinkDescriptor&quot;> </xref>实例对于指定的关系，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.Services.Client.LinkDescriptor&quot;></xref>不存在关系。"
  overload: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetMetadataUri
  id: GetMetadataUri
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetMetadataUri()
  nameWithType: DataServiceContext.GetMetadataUri()
  fullName: System.Data.Services.Client.DataServiceContext.GetMetadataUri()
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取.edmx 元数据的位置的 URI。"
  remarks: "返回传递到具有单个路径段的构造函数的 URI (`/$metadata`) 追加。 调用此方法可能会生成网络操作，以便动态发现元数据 URI。"
  syntax:
    content: public Uri GetMetadataUri ();
    parameters: []
    return:
      type: System.Uri
      description: "一个 URI，标识中.edmx 格式，由传递给构造函数的基 URI 标识的数据服务元数据说明的位置。"
  overload: System.Data.Services.Client.DataServiceContext.GetMetadataUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)
  id: GetReadStream(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetReadStream(Object)
  nameWithType: DataServiceContext.GetReadStream(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以数据流的形式获取指定的实体二进制属性数据。"
  remarks: "GetReadStream 方法以同步方式请求包含所请求的二进制属性的数据流`entity`。       在 AtomPub 协议中，`entity`为媒体链接入口，二进制属性为关联的媒体资源。"
  syntax:
    content: public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要检索的二进制属性的实体。"
    return:
      type: System.Data.Services.Client.DataServiceStreamResponse
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>表示响应。"
  overload: System.Data.Services.Client.DataServiceContext.GetReadStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>不跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。       -or-       The <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或- <code> entity </code>不是媒体链接入口，并且没有二进制属性。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)
  id: GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetReadStream(Object,DataServiceRequestArgs)
  nameWithType: DataServiceContext.GetReadStream(Object,DataServiceRequestArgs)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object,DataServiceRequestArgs)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取与指定的消息标头一起数据流形式指定的实体二进制属性数据。"
  remarks: "GetReadStream 方法以同步方式请求包含所请求的二进制属性的数据流`entity`。       在 AtomPub 协议中，`entity`为媒体链接入口，二进制属性为关联的媒体资源。       在中设置的标头不执行任何验证`args`。 因此，不要以更改方式来更改请求含义的 HTTP 标头。"
  syntax:
    content: public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要检索的二进制属性的实体。"
    - id: args
      type: System.Data.Services.Client.DataServiceRequestArgs
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceRequestArgs&quot;></xref>包含 HTTP 请求消息设置的类。"
    return:
      type: System.Data.Services.Client.DataServiceStreamResponse
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>表示响应。"
  overload: System.Data.Services.Client.DataServiceContext.GetReadStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>args</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>不跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。       -or-       The <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或- <code> entity </code>不是媒体链接入口，并且没有二进制属性。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)
  id: GetReadStream(System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetReadStream(Object,String)
  nameWithType: DataServiceContext.GetReadStream(Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object,String)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取作为数据流中，指定 Accept 消息标头与指定的实体二进制属性数据。"
  remarks: "`acceptContentType`参数应为有效接受 HTTP 标头值。       GetReadStream 方法以同步方式请求包含所请求的二进制属性的数据流`entity`。       在 AtomPub 协议中，`entity`为媒体链接入口，二进制属性为关联的媒体资源。       在中设置的标头不执行任何验证`acceptContentType`。 因此，不要以更改此更改请求含义的方式的 HTTP 标头。"
  syntax:
    content: public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要检索的二进制属性的实体。"
    - id: acceptContentType
      type: System.String
      description: "从指定 Accept 标头中的数据服务请求的数据内容类型。"
    return:
      type: System.Data.Services.Client.DataServiceStreamResponse
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>表示响应。"
  overload: System.Data.Services.Client.DataServiceContext.GetReadStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>acceptContentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>不跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。       -or-       The <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或- <code> entity </code>不是媒体链接入口，并且没有二进制属性。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)
  id: GetReadStreamUri(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: GetReadStreamUri(Object)
  nameWithType: DataServiceContext.GetReadStreamUri(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStreamUri(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取用于返回数据流形式的二进制属性数据的 URI。"
  remarks: "当指定`entity`是媒体链接入口，GetReadStreamUri 方法返回一个 URI，用于访问媒体资源内容。       此 URI 是仅用于在 GET 请求来读取媒体资源内容。 它可能不响应 POST、 PUT 或 DELETE 请求。"
  syntax:
    content: public Uri GetReadStreamUri (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要检索的二进制属性的实体。"
    return:
      type: System.Uri
      description: "读取二进制数据流的 URI。"
  overload: System.Data.Services.Client.DataServiceContext.GetReadStreamUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "如果指定的实体是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>不跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties
  id: IgnoreMissingProperties
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: IgnoreMissingProperties
  nameWithType: DataServiceContext.IgnoreMissingProperties
  fullName: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置是否从类型读取的属性必须映射到客户端类型上的属性。"
  remarks: "如果`true`，具体化将成功，即使从类型的属性不能映射到客户端类型的属性。 如果`false`，属性不匹配而引发对象具体化过程中的出现异常。"
  syntax:
    content: public bool IgnoreMissingProperties { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否必须从类型读取的属性映射到客户端类型上的属性。"
  overload: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException
  id: IgnoreResourceNotFoundException
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: IgnoreResourceNotFoundException
  nameWithType: DataServiceContext.IgnoreResourceNotFoundException
  fullName: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置是否由数据服务返回 404 错误 （找不到资源） 时，将引发异常。"
  syntax:
    content: public bool IgnoreResourceNotFoundException { get; set; }
    return:
      type: System.Boolean
      description: '当设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，客户端库会返回空集而不是引发<xref href=&quot;System.Data.Services.Client.DataServiceQueryException&quot;></xref>当数据服务返回 HTTP 404︰ 找不到资源错误。'
  overload: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Links
  id: Links
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Links
  nameWithType: DataServiceContext.Links
  fullName: System.Data.Services.Client.DataServiceContext.Links
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取所有关联的集合或链接当前跟踪<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>对象。"
  remarks: "如果当前未不跟踪任何链接，则返回具有 0 个元素的列表。 集合是只读的。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Services.Client.LinkDescriptor> Links { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Client.LinkDescriptor}
      description: "集合<xref href=&quot;System.Data.Services.Client.LinkDescriptor&quot;></xref>表示所有关联或链接当前由当前跟踪的跟踪的对象<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>对象。"
  overload: System.Data.Services.Client.DataServiceContext.Links*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)
  id: LoadProperty(System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: LoadProperty(Object,String)
  nameWithType: DataServiceContext.LoadProperty(Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "加载延迟从数据服务的指定属性的内容。"
  remarks: "调用此方法时，将调用网络操作以提取属性值。 指定的属性可以为任意一个的实体，包括表示关联或链接的属性上的属性。       如果属性是表示关联、 链接或延迟的属性，调用此方法为客户端提供延迟加载相关的资源的方式。       如果实体处于 unchanged 或 modified 状态时，属性值加载相关的实体，并将其与未更改链接不变，如果已加载属性标记，调用此方法可让您刷新该属性的值。"
  example:
  - "The following example shows how to explicitly load the `Customers` object that is related to each returned `Orders` instance. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] .  \n  \n [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#loadrelatedordercustomer)]\n [!code-cs[Astoria Northwind Client#LoadRelatedOrderCustomer](~/add/codesnippet/csharp/northwindclientcs/source.cs#loadrelatedordercustomer)]"
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体的属性的名称。"
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: "对加载操作的响应。"
  overload: System.Data.Services.Client.DataServiceContext.LoadProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)
  id: LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: LoadProperty(Object,String,DataServiceQueryContinuation)
  nameWithType: DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通过使用所提供的查询延续对象从数据服务加载下一页相关实体。"
  remarks: "当`entity`处于<xref:System.Data.Services.Client.EntityStates>或<xref:System.Data.Services.Client.EntityStates>状态时，将相关的实体作为对象中进行加载<xref:System.Data.Services.Client.EntityStates>状态，并且链接也在<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>       当`entity`处于<xref:System.Data.Services.Client.EntityStates>状态时，将相关的实体作为对象中进行加载<xref:System.Data.Services.Client.EntityStates>状态，并且链接也处于<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>"
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体的属性的名称。"
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation
      description: "A &lt;xref:System.Data.Services.Client.DataServiceQueryContinuation%601&gt;表示的下一页相关实体，从数据服务加载的对象。"
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: "包含下一页相关的实体数据的响应。"
  overload: System.Data.Services.Client.DataServiceContext.LoadProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)
  id: LoadProperty(System.Object,System.String,System.Uri)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: LoadProperty(Object,String,Uri)
  nameWithType: DataServiceContext.LoadProperty(Object,String,Uri)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,Uri)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通过使用提供的下一链接 URI 加载相关实体页。"
  remarks: "当`entity`处于<xref:System.Data.Services.Client.EntityStates>或<xref:System.Data.Services.Client.EntityStates>状态时，在加载相关的实体<xref:System.Data.Services.Client.EntityStates>状态和实体之间的链接也在中创建<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>       当`entity`处于<xref:System.Data.Services.Client.EntityStates>状态时，在加载相关的实体<xref:System.Data.Services.Client.EntityStates>中创建状态和实体之间的链接<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates> </xref:System.Data.Services.Client.EntityStates>"
  example:
  - "This example returns related `Orders` entities with each `Customers` entity and uses a `do…while` loop to load `Customers` entities pages and a nested `while` loop to load pages of related `Orders` entities from the data service. The LoadProperty method is used to load pages of related `Orders` entities.  \n  \n [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#getcustomerspagednested)]\n [!code-cs[Astoria Northwind Client#GetCustomersPagedNested](~/add/codesnippet/csharp/northwindclientcs/source.cs#getcustomerspagednested)]"
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);
    parameters:
    - id: entity
      type: System.Object
      description: "包含要加载的属性的实体。"
    - id: propertyName
      type: System.String
      description: "要加载的指定实体的属性的名称。"
    - id: nextLinkUri
      type: System.Uri
      description: "用于加载下一结果页的 URI。"
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: "实例&lt;xref:System.Data.Services.Client.QueryOperationResponse%601&gt; ，其中包含请求的结果。"
  overload: System.Data.Services.Client.DataServiceContext.LoadProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When <code>entity</code> is in a <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation`1)
  id: LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation`1)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: LoadProperty(Object,String,DataServiceQueryContinuation<T>)
  nameWithType: DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation<T>)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation<T>)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: public System.Data.Services.Client.QueryOperationResponse<T> LoadProperty<T> (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation<T> continuation);
    parameters:
    - id: entity
      type: System.Object
      description: "要添加。"
    - id: propertyName
      type: System.String
      description: "要添加。"
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation`1
      description: "要添加。"
    return:
      type: System.Data.Services.Client.QueryOperationResponse`1
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.LoadProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.MergeOption
  id: MergeOption
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: MergeOption
  nameWithType: DataServiceContext.MergeOption
  fullName: System.Data.Services.Client.DataServiceContext.MergeOption
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置从数据服务中接收实体的同步选项。"
  remarks: "在具体化对象之前，客户端的反序列化组件读取此值。 将此属性设置为适当的具体化选项之前对数据服务执行任何查询或更新。 默认值为<xref:System.Data.Services.Client.MergeOption>。</xref:System.Data.Services.Client.MergeOption>"
  syntax:
    content: public System.Data.Services.Client.MergeOption MergeOption { get; set; }
    return:
      type: System.Data.Services.Client.MergeOption
      description: "成员之一<xref href=&quot;System.Data.Services.Client.MergeOption&quot;></xref>枚举。"
  overload: System.Data.Services.Client.DataServiceContext.MergeOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.ReadingEntity
  id: ReadingEntity
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: ReadingEntity
  nameWithType: DataServiceContext.ReadingEntity
  fullName: System.Data.Services.Client.DataServiceContext.ReadingEntity
  type: Event
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "在实体数据完全读入实体对象后发生。"
  remarks: "在实体数据完全读入目标对象以及所有嵌套实体后，将发生 ReadingEntity 事件。 如果跟踪而不是任何其他<xref:System.Data.Services.Client.MergeOption>，该对象之前发生该事件时附加。</xref:System.Data.Services.Client.MergeOption>"
  syntax:
    content: public event EventHandler<System.Data.Services.Client.ReadingWritingEntityEventArgs> ReadingEntity;
    return:
      type: System.EventHandler{System.Data.Services.Client.ReadingWritingEntityEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.ResolveName
  id: ResolveName
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: ResolveName
  nameWithType: DataServiceContext.ResolveName
  fullName: System.Data.Services.Client.DataServiceContext.ResolveName
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置函数，以便重写到数据服务发送实体时，客户端库所用的默认类型解析策略。"
  remarks: "允许重写客户端库所用的默认类型解析。 将此属性设置为一个委托，用于解析为命名空间限定的类型名称的客户端应用中的类型的函数。 这使客户端执行从服务器和客户端上的类型响应中提供的类型名称之间的自定义映射。      1> [!NOTE]&1;> 这种方法实现重写到指定类型的目标表示形式，如 Atom 或 JSON，序列化的实体名称。"
  syntax:
    content: public Func<Type,string> ResolveName { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "返回一个字符串，其中包含名称<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;> </xref>。"
  overload: System.Data.Services.Client.DataServiceContext.ResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.ResolveType
  id: ResolveType
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: ResolveType
  nameWithType: DataServiceContext.ResolveType
  fullName: System.Data.Services.Client.DataServiceContext.ResolveType
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置用于重写使用的默认类型解析选项由客户端库从数据服务中接收实体时的函数。"
  remarks: "允许重写客户端库所用的默认类型解析策略。 将此属性设置为标识解析的命名空间限定的类型名称为客户端应用程序中的类型的函数委托。 这使客户端进行服务器和客户端上的类型从响应中提供的类型名称之间的自定义映射。       重写类型解析还允许插入类型名称和类型之间的自定义映射策略。 它不会影响如何响应具体化为标识的类型。"
  syntax:
    content: public Func<string,Type> ResolveType { get; set; }
    return:
      type: System.Func{System.String,System.Type}
      description: "一个函数委托，标识用于重写使用的默认类型解析选项由客户端库的重写函数。"
  overload: System.Data.Services.Client.DataServiceContext.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SaveChanges
  id: SaveChanges
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SaveChanges()
  nameWithType: DataServiceContext.SaveChanges()
  fullName: System.Data.Services.Client.DataServiceContext.SaveChanges()
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将所做的更改保存<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>跟踪到存储。"
  syntax:
    content: public System.Data.Services.Client.DataServiceResponse SaveChanges ();
    parameters: []
    return:
      type: System.Data.Services.Client.DataServiceResponse
      description: "A <xref href=&quot;System.Data.Services.Client.DataServiceResponse&quot;> </xref> ，包含状态、 标头，以及与<xref:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks*>.</xref:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks*>的调用导致的错误"
  overload: System.Data.Services.Client.DataServiceContext.SaveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)
  id: SaveChanges(System.Data.Services.Client.SaveChangesOptions)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SaveChanges(SaveChangesOptions)
  nameWithType: DataServiceContext.SaveChanges(SaveChangesOptions)
  fullName: System.Data.Services.Client.DataServiceContext.SaveChanges(SaveChangesOptions)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将所做的更改保存<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>跟踪到存储。"
  remarks: "操作会发送到以下顺序 1 中的数据服务。  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>2。</xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>3。</xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>4。</xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>5。</xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>和<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A></xref:System.Data.Services.Client.DataServiceContext.AddLink%2A></xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>"
  syntax:
    content: public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
      description: "成员<xref href=&quot;System.Data.Services.Client.MergeOption&quot;></xref>枚举，用于指定具体化选项。"
    return:
      type: System.Data.Services.Client.DataServiceResponse
      description: "A <xref href=&quot;System.Data.Services.Client.DataServiceResponse&quot;> </xref> ，包含状态、 标头，以及与<xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>.</xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>的调用导致的错误"
  overload: System.Data.Services.Client.DataServiceContext.SaveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions
  id: SaveChangesDefaultOptions
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SaveChangesDefaultOptions
  nameWithType: DataServiceContext.SaveChangesDefaultOptions
  fullName: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置<xref href=&quot;System.Data.Services.Client.SaveChangesOptions&quot;></xref>使用的值<xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>方法。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>"
  remarks: "此属性提供，如合并和替换语义的选项可将设置为一次<xref:System.Data.Services.Client.DataServiceContext>并根据需要通过调用之一，然后重写<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>重载。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> </xref:System.Data.Services.Client.DataServiceContext>"
  syntax:
    content: public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }
    return:
      type: System.Data.Services.Client.SaveChangesOptions
      description: "保存的当前选项更改操作。"
  overload: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SendingRequest
  id: SendingRequest
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SendingRequest
  nameWithType: DataServiceContext.SendingRequest
  fullName: System.Data.Services.Client.DataServiceContext.SendingRequest
  type: Event
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "当新时发生<xref:System.Net.HttpWebRequest>已创建。</xref:System.Net.HttpWebRequest>"
  remarks: "SendingRequest 事件前所需的属性值设置的对象上发生。 保证"
  syntax:
    content: public event EventHandler<System.Data.Services.Client.SendingRequestEventArgs> SendingRequest;
    return:
      type: System.EventHandler{System.Data.Services.Client.SendingRequestEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)
  id: SetLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SetLink(Object,String,Object)
  nameWithType: DataServiceContext.SetLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.SetLink(Object,String,Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "通知<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>指定的对象之间存在新链接，链接由指定的属性表示<code> sourceProperty </code>参数。"
  remarks: "在中创建新的链接<xref:System.Data.Services.Client.EntityStates>状态。</xref:System.Data.Services.Client.EntityStates> <xref:System.Data.Services.Client.DataServiceContext>添加的一套新创建的链接到<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>的后续调用上的数据服务发送到此新链接</xref:System.Data.Services.Client.DataServiceContext>       如果目标参数为 null，应移除或删除由 sourceProperty 表示的链接 (该链接转为<xref:System.Data.Services.Client.EntityStates>状态)。</xref:System.Data.Services.Client.EntityStates>       链接是单向关系。 如果后向指针存在，该值指示两个方法关联，此方法应该重新调用以通知<xref:System.Data.Services.Client.DataServiceContext>第二个链接，此方法仅支持添加链接到多重性与关系 = 的 1 （源属性是一个对象引用）。</xref:System.Data.Services.Client.DataServiceContext> 例如，如果一个类`Person`与另一个相关`Person`通过`Friend`属性，此调用无法用于相关`Person`到`Person`。 此方法将引发异常，如果`sourceProperty`表示具有多基数关系。"
  example:
  - "The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> and SetLink methods to create links that define relationships. In this example, the navigation properties on the `Order_Details` object are also explicitly set.  \n  \n [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#addorderdetailtoorder)]\n [!code-cs[Astoria Northwind Client#AddOrderDetailToOrder](~/add/codesnippet/csharp/northwindclientcs/source.cs#addorderdetailtoorder)]"
  syntax:
    content: public void SetLink (object source, string sourceProperty, object target);
    parameters:
    - id: source
      type: System.Object
      description: "新链接的的源对象。"
    - id: sourceProperty
      type: System.String
      description: "标识新链接的目标对象的源对象上的属性。"
    - id: target
      type: System.Object
      description: "若要通过调用此方法初始化的新链接中涉及的子对象中。 目标对象必须是标识的类型的子类型`sourceProperty`参数。 如果`target`设置为 null，则调用表示删除链接操作。"
  overload: System.Data.Services.Client.DataServiceContext.SetLink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code>, <code>sourceProperty</code> or <code>target</code> are null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当指定的链接已存在。       -or-       When the objects supplied as <code>source</code> or <code>target</code> are in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> or <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state.       -或-当<code> sourceProperty </code>不是一个导航属性，定义对单个相关对象的引用。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)
  id: SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
  nameWithType: DataServiceContext.SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
  fullName: System.Data.Services.Client.DataServiceContext.SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将新的数据流设置为具有指定的设置请求消息中的实体的二进制属性。"
  remarks: "SetSaveStream 方法设置是与相关联的媒体资源的二进制流`entity`，这种行为称为媒体链接入口。       调用 SetSaveStream 方法将实体标记为媒体链接入口。 实体状态也设置为<xref:System.Data.Services.Client.EntityStates>下一次，以便将流发送到数据服务<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>调用方法。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> </xref:System.Data.Services.Client.EntityStates>       SetSaveStream 方法读取<xref:System.IO.Stream>通过到末尾。</xref:System.IO.Stream> <xref:System.IO.Stream.Seek%2A>操作未尝试的时间为<xref:System.IO.Stream>。</xref:System.IO.Stream> </xref:System.IO.Stream.Seek%2A>       当`closeStream`是`true`、<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>方法返回之前关闭流。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 即使在出错时，不读取流时，流已关闭。       当`entity`具有<xref:System.Data.Services.Client.MediaEntryAttribute>应用时，媒体资源不能为数据流。</xref:System.Data.Services.Client.MediaEntryAttribute> 您尝试设置数据流之前删除此特性`entity`。       在中设置的标头不执行任何验证`args`。 因此，不要以更改方式来更改请求含义的 HTTP 标头。"
  syntax:
    content: public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要为其分配数据流的二进制属性的实体。"
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>从中进行读取的二进制数据。</xref:System.IO.Stream>"
    - id: closeStream
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值确定是否数据流已关闭时<xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>方法完成。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges*> </xref:System.Boolean>"
    - id: args
      type: System.Data.Services.Client.DataServiceRequestArgs
      description: "实例<xref href=&quot;System.Data.Services.Client.DataServiceRequestArgs&quot;></xref>包含 HTTP 请求消息设置的类。"
  overload: System.Data.Services.Client.DataServiceContext.SetSaveStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任何提供给方法的参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>未被跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>实例。       -or-       The <code>entity</code> has the <xref href=&quot;System.Data.Services.Client.MediaEntryAttribute&quot;></xref> applied."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)
  id: SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: SetSaveStream(Object,Stream,Boolean,String,String)
  nameWithType: DataServiceContext.SetSaveStream(Object,Stream,Boolean,String,String)
  fullName: System.Data.Services.Client.DataServiceContext.SetSaveStream(Object,Stream,Boolean,String,String)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "将新的数据流设置为实体的二进制属性。 指定的 Content-type 和 Slug 标头包含在请求消息。"
  remarks: "SetSaveStream 方法设置是与相关联的媒体资源的二进制流`entity`，这种行为称为媒体链接入口。       调用 SetSaveStream 方法将实体标记为媒体链接入口。 实体状态也设置为<xref:System.Data.Services.Client.EntityStates>下一次，以便将流发送到数据服务<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>调用方法。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> </xref:System.Data.Services.Client.EntityStates>       SetSaveStream 方法读取<xref:System.IO.Stream>通过到末尾。</xref:System.IO.Stream> <xref:System.IO.Stream.Seek%2A>操作未尝试的时间为<xref:System.IO.Stream>。</xref:System.IO.Stream> </xref:System.IO.Stream.Seek%2A>       当`closeStream`是`true`、<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>方法返回之前关闭流。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 即使在出错时，不读取流时，流已关闭。       当`entity`具有<xref:System.Data.Services.Client.MediaEntryAttribute>应用时，媒体资源不能为数据流。</xref:System.Data.Services.Client.MediaEntryAttribute> 您尝试设置数据流之前删除此特性`entity`。       在中设置的标头不执行任何验证`contentType`和`slug`。 因此，不要更改这些 HTTP 标头中更改请求含义的方式。"
  syntax:
    content: public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);
    parameters:
    - id: entity
      type: System.Object
      description: "具有要为其分配数据流的二进制属性的实体。"
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>从中进行读取的二进制数据。</xref:System.IO.Stream>"
    - id: closeStream
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值确定是否数据流已关闭时<xref:System.Data.Services.Client.DataServiceContext.SaveChanges*>方法完成。</xref:System.Data.Services.Client.DataServiceContext.SaveChanges*> </xref:System.Boolean>"
    - id: contentType
      type: System.String
      description: "请求消息的 Content-type 标头值。"
    - id: slug
      type: System.String
      description: "请求消息的 Slug 标头值。"
  overload: System.Data.Services.Client.DataServiceContext.SetSaveStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任何提供给方法的参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> entity </code>未被跟踪此<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>实例。       -或- <xref uid=&quot;langword_csharp_entity&quot; name=&quot;entity&quot; href=&quot;&quot;> </xref>具有<xref href=&quot;System.Data.Services.Client.MediaEntryAttribute&quot;></xref>应用。"
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.Timeout
  id: Timeout
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: Timeout
  nameWithType: DataServiceContext.Timeout
  fullName: System.Data.Services.Client.DataServiceContext.Timeout
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置用于对数据服务的基础 HTTP 请求的超时选项。"
  remarks: "此值传递给<xref:System.Net.HttpWebRequest.Timeout>基础属性<xref:System.Net.HttpWebRequest>对象。</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.Timeout> 执行针对目标数据服务的任何查询或更新操作可能会影响请求之前，必须设置值。 值可能更改之间对数据服务的请求和新值拾取下一步的数据服务请求。"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "一个整数，指示的服务请求超时前的时间间隔。"
  overload: System.Data.Services.Client.DataServiceContext.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)
  id: TryGetEntity``1(System.Uri,``0@)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: TryGetEntity(Uri,TEntity)
  nameWithType: DataServiceContext.TryGetEntity(Uri,TEntity)
  fullName: System.Data.Services.Client.DataServiceContext.TryGetEntity(Uri,TEntity)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  syntax:
    content: 'public bool TryGetEntity<TEntity> (Uri identity, out TEntity entity) where TEntity : class;'
    parameters:
    - id: identity
      type: System.Uri
      description: "要添加。"
    - id: entity
      type: TEntity
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.Services.Client.DataServiceContext.TryGetEntity<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)
  id: TryGetUri(System.Object,System.Uri@)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: TryGetUri(Object,Uri)
  nameWithType: DataServiceContext.TryGetUri(Object,Uri)
  fullName: System.Data.Services.Client.DataServiceContext.TryGetUri(Object,Uri)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "如果可用，则检索与指定的实体关联的规范 URI。"
  remarks: "中的对象<xref:System.Data.Services.Client.EntityStates>状态还没有一个 URI。</xref:System.Data.Services.Client.EntityStates>"
  syntax:
    content: public bool TryGetUri (object entity, out Uri identity);
    parameters:
    - id: entity
      type: System.Object
      description: "通过标识的实体`identity`。"
    - id: identity
      type: System.Uri
      description: "实体的 URI。"
    return:
      type: System.Boolean
      description: "如果在输出参数中返回规范 URI，则返回 true。 如果指定的实体不跟踪通过<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>或已添加状态，没有 URI 是可用，则返回 false。"
  overload: System.Data.Services.Client.DataServiceContext.TryGetUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.TypeScheme
  id: TypeScheme
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: TypeScheme
  nameWithType: DataServiceContext.TypeScheme
  fullName: System.Data.Services.Client.DataServiceContext.TypeScheme
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置用于指示类型方案所用的服务的 URI。"
  remarks: "在 ATOM 负载中，返回值将用来标识的实体类型的类别元素的方案属性。 默认值为 `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`。"
  syntax:
    content: public Uri TypeScheme { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>对象，其中包含类型方案。</xref:System.Uri>"
  overload: System.Data.Services.Client.DataServiceContext.TypeScheme*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)
  id: UpdateObject(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: UpdateObject(Object)
  nameWithType: DataServiceContext.UpdateObject(Object)
  fullName: System.Data.Services.Client.DataServiceContext.UpdateObject(Object)
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "中的指定对象的状态更改<xref href=&quot;System.Data.Services.Client.DataServiceContext&quot;></xref>到<xref href=&quot;System.Data.Services.Client.EntityStates&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example retrieves and modifies an existing object and then calls the UpdateObject method on the <xref:System.Data.Services.Client.DataServiceContext> to mark the item in the context as updated. An HTTP MERGE message is sent to the data service when <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> is called. This example uses the <xref:System.Data.Services.Client.DataServiceContext> generated by the Add Service Reference tool based on the Northwind data service, which is created when you complete the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] .  \n  \n [!code-vb[Astoria Northwind Client#ModifyCustomer](~/add/codesnippet/visualbasic/northwindclientvb/source.vb#modifycustomer)]\n [!code-cs[Astoria Northwind Client#ModifyCustomer](~/add/codesnippet/csharp/northwindclientcs/source.cs#modifycustomer)]"
  syntax:
    content: public void UpdateObject (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要分配到的被跟踪的实体<xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref>状态。"
  overload: System.Data.Services.Client.DataServiceContext.UpdateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>entity</code> is in the <xref href=&quot;System.Data.Services.Client.EntityStates&quot;></xref> state."
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.UsePostTunneling
  id: UsePostTunneling
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: UsePostTunneling
  nameWithType: DataServiceContext.UsePostTunneling
  fullName: System.Data.Services.Client.DataServiceContext.UsePostTunneling
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取或设置一个布尔值，该值指示是否使用 post 隧道。"
  remarks: "此控件是否创建的属性，更新和删除请求发送到数据服务将使用 post 隧道的协议的功能，或不。 当设置为 true，会使用隧道。 当使用时设置为 false，标准 HTTP 方法。       此属性的默认值为 false。"
  syntax:
    content: public bool UsePostTunneling { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否使用 post 隧道。"
  overload: System.Data.Services.Client.DataServiceContext.UsePostTunneling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceContext.WritingEntity
  id: WritingEntity
  parent: System.Data.Services.Client.DataServiceContext
  langs:
  - csharp
  name: WritingEntity
  nameWithType: DataServiceContext.WritingEntity
  fullName: System.Data.Services.Client.DataServiceContext.WritingEntity
  type: Event
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "实体已完全序列化为 XML 请求消息中后发生。"
  remarks: "处理 WritingEntity 事件可以发送之前更改请求中的 XML。       当您调用 WritingEntity 事件可能会发生在另一个线程<xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29>而不包括<xref:System.Data.Services.Client.SaveChangesOptions>从提供<xref:System.Data.Services.Client.SaveChangesOptions>值。</xref:System.Data.Services.Client.SaveChangesOptions> </xref:System.Data.Services.Client.SaveChangesOptions> </xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29>"
  syntax:
    content: public event EventHandler<System.Data.Services.Client.ReadingWritingEntityEventArgs> WritingEntity;
    return:
      type: System.EventHandler{System.Data.Services.Client.ReadingWritingEntityEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DataServiceContext(Uri)
  nameWithType: DataServiceContext.DataServiceContext(Uri)
  fullName: System.Data.Services.Client.DataServiceContext.DataServiceContext(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddLink(Object,String,Object)
  nameWithType: DataServiceContext.AddLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddLink(Object,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddObject(String,Object)
  nameWithType: DataServiceContext.AddObject(String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddObject(String,Object)
- uid: System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddRelatedObject(Object,String,Object)
  nameWithType: DataServiceContext.AddRelatedObject(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AddRelatedObject(Object,String,Object)
- uid: System.Data.Services.Client.DataServiceContext.ApplyingChanges
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ApplyingChanges
  nameWithType: DataServiceContext.ApplyingChanges
  fullName: System.Data.Services.Client.DataServiceContext.ApplyingChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AttachLink(Object,String,Object)
  nameWithType: DataServiceContext.AttachLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AttachLink(Object,String,Object)
- uid: System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AttachTo(String,Object)
  nameWithType: DataServiceContext.AttachTo(String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.AttachTo(String,Object)
- uid: System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AttachTo(String,Object,String)
  nameWithType: DataServiceContext.AttachTo(String,Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.AttachTo(String,Object,String)
- uid: System.Data.Services.Client.DataServiceContext.BaseUri
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BaseUri
  nameWithType: DataServiceContext.BaseUri
  fullName: System.Data.Services.Client.DataServiceContext.BaseUri
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation`1,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecute(DataServiceQueryContinuation<T>,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.Services.Client.DataServiceQueryContinuation`1
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceQueryContinuation<T>
  nameWithType: DataServiceQueryContinuation<T>
  fullName: System.Data.Services.Client.DataServiceQueryContinuation<T>
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecute(Uri,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginExecute(Uri,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecute(Uri,AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
  nameWithType: DataServiceContext.BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
  fullName: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(AsyncCallback,Object,DataServiceRequest[])
- uid: System.Data.Services.Client.DataServiceRequest[]
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceRequest
  nameWithType: DataServiceRequest
  fullName: System.Data.Services.Client.DataServiceRequest[]
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    nameWithType: DataServiceRequest
    fullName: DataServiceRequest[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginGetReadStream(Object,DataServiceRequestArgs,AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceRequestArgs
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceRequestArgs
  nameWithType: DataServiceRequestArgs
  fullName: System.Data.Services.Client.DataServiceRequestArgs
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginLoadProperty(Object,String,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,DataServiceQueryContinuation,AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceQueryContinuation
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceQueryContinuation
  nameWithType: DataServiceQueryContinuation
  fullName: System.Data.Services.Client.DataServiceQueryContinuation
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginLoadProperty(Object,String,Uri,AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginSaveChanges(AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginSaveChanges(AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(AsyncCallback,Object)
- uid: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
  nameWithType: DataServiceContext.BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
  fullName: System.Data.Services.Client.DataServiceContext.BeginSaveChanges(SaveChangesOptions,AsyncCallback,Object)
- uid: System.Data.Services.Client.SaveChangesOptions
  parent: System.Data.Services.Client
  isExternal: false
  name: SaveChangesOptions
  nameWithType: SaveChangesOptions
  fullName: System.Data.Services.Client.SaveChangesOptions
- uid: System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: CancelRequest(IAsyncResult)
  nameWithType: DataServiceContext.CancelRequest(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.CancelRequest(IAsyncResult)
- uid: System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: CreateQuery(String)
  nameWithType: DataServiceContext.CreateQuery(String)
  fullName: System.Data.Services.Client.DataServiceContext.CreateQuery(String)
- uid: System.Data.Services.Client.DataServiceQuery{T}
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceQuery<T>
  nameWithType: DataServiceQuery<T>
  fullName: System.Data.Services.Client.DataServiceQuery<T>
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceQuery`1
    name: DataServiceQuery
    nameWithType: DataServiceQuery
    fullName: DataServiceQuery<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.Credentials
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Credentials
  nameWithType: DataServiceContext.Credentials
  fullName: System.Data.Services.Client.DataServiceContext.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Data.Services.Client.DataServiceContext.DataNamespace
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DataNamespace
  nameWithType: DataServiceContext.DataNamespace
  fullName: System.Data.Services.Client.DataServiceContext.DataNamespace
- uid: System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DeleteLink(Object,String,Object)
  nameWithType: DataServiceContext.DeleteLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.DeleteLink(Object,String,Object)
- uid: System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DeleteObject(Object)
  nameWithType: DataServiceContext.DeleteObject(Object)
  fullName: System.Data.Services.Client.DataServiceContext.DeleteObject(Object)
- uid: System.Data.Services.Client.DataServiceContext.Detach(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Detach(Object)
  nameWithType: DataServiceContext.Detach(Object)
  fullName: System.Data.Services.Client.DataServiceContext.Detach(Object)
- uid: System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DetachLink(Object,String,Object)
  nameWithType: DataServiceContext.DetachLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.DetachLink(Object,String,Object)
- uid: System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: DataServiceContext.EndExecute(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndExecute(IAsyncResult)
- uid: System.Collections.Generic.IEnumerable{TElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<TElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndExecuteBatch(IAsyncResult)
  nameWithType: DataServiceContext.EndExecuteBatch(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndExecuteBatch(IAsyncResult)
- uid: System.Data.Services.Client.DataServiceResponse
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceResponse
  nameWithType: DataServiceResponse
  fullName: System.Data.Services.Client.DataServiceResponse
- uid: System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndGetReadStream(IAsyncResult)
  nameWithType: DataServiceContext.EndGetReadStream(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndGetReadStream(IAsyncResult)
- uid: System.Data.Services.Client.DataServiceStreamResponse
  parent: System.Data.Services.Client
  isExternal: false
  name: DataServiceStreamResponse
  nameWithType: DataServiceStreamResponse
  fullName: System.Data.Services.Client.DataServiceStreamResponse
- uid: System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndLoadProperty(IAsyncResult)
  nameWithType: DataServiceContext.EndLoadProperty(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndLoadProperty(IAsyncResult)
- uid: System.Data.Services.Client.QueryOperationResponse
  parent: System.Data.Services.Client
  isExternal: false
  name: QueryOperationResponse
  nameWithType: QueryOperationResponse
  fullName: System.Data.Services.Client.QueryOperationResponse
- uid: System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndSaveChanges(IAsyncResult)
  nameWithType: DataServiceContext.EndSaveChanges(IAsyncResult)
  fullName: System.Data.Services.Client.DataServiceContext.EndSaveChanges(IAsyncResult)
- uid: System.Data.Services.Client.DataServiceContext.Entities
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Entities
  nameWithType: DataServiceContext.Entities
  fullName: System.Data.Services.Client.DataServiceContext.Entities
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Client.EntityDescriptor}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EntityDescriptor>
  nameWithType: ReadOnlyCollection<EntityDescriptor>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Services.Client.EntityDescriptor>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Services.Client.EntityDescriptor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.EntityDescriptor
    name: EntityDescriptor
    nameWithType: EntityDescriptor
    fullName: EntityDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation`1)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Execute(DataServiceQueryContinuation<T>)
  nameWithType: DataServiceContext.Execute(DataServiceQueryContinuation<T>)
  fullName: System.Data.Services.Client.DataServiceContext.Execute(DataServiceQueryContinuation<T>)
- uid: System.Data.Services.Client.QueryOperationResponse`1
  parent: System.Data.Services.Client
  isExternal: false
  name: QueryOperationResponse<T>
  nameWithType: QueryOperationResponse<T>
  fullName: System.Data.Services.Client.QueryOperationResponse<T>
- uid: System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Execute(Uri)
  nameWithType: DataServiceContext.Execute(Uri)
  fullName: System.Data.Services.Client.DataServiceContext.Execute(Uri)
- uid: System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ExecuteBatch(DataServiceRequest[])
  nameWithType: DataServiceContext.ExecuteBatch(DataServiceRequest[])
  fullName: System.Data.Services.Client.DataServiceContext.ExecuteBatch(DataServiceRequest[])
- uid: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetEntityDescriptor(Object)
  nameWithType: DataServiceContext.GetEntityDescriptor(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(Object)
- uid: System.Data.Services.Client.EntityDescriptor
  parent: System.Data.Services.Client
  isExternal: false
  name: EntityDescriptor
  nameWithType: EntityDescriptor
  fullName: System.Data.Services.Client.EntityDescriptor
- uid: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetLinkDescriptor(Object,String,Object)
  nameWithType: DataServiceContext.GetLinkDescriptor(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(Object,String,Object)
- uid: System.Data.Services.Client.LinkDescriptor
  parent: System.Data.Services.Client
  isExternal: false
  name: LinkDescriptor
  nameWithType: LinkDescriptor
  fullName: System.Data.Services.Client.LinkDescriptor
- uid: System.Data.Services.Client.DataServiceContext.GetMetadataUri
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetMetadataUri()
  nameWithType: DataServiceContext.GetMetadataUri()
  fullName: System.Data.Services.Client.DataServiceContext.GetMetadataUri()
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStream(Object)
  nameWithType: DataServiceContext.GetReadStream(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object)
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStream(Object,DataServiceRequestArgs)
  nameWithType: DataServiceContext.GetReadStream(Object,DataServiceRequestArgs)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object,DataServiceRequestArgs)
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStream(Object,String)
  nameWithType: DataServiceContext.GetReadStream(Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStream(Object,String)
- uid: System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStreamUri(Object)
  nameWithType: DataServiceContext.GetReadStreamUri(Object)
  fullName: System.Data.Services.Client.DataServiceContext.GetReadStreamUri(Object)
- uid: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: IgnoreMissingProperties
  nameWithType: DataServiceContext.IgnoreMissingProperties
  fullName: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties
- uid: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: IgnoreResourceNotFoundException
  nameWithType: DataServiceContext.IgnoreResourceNotFoundException
  fullName: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException
- uid: System.Data.Services.Client.DataServiceContext.Links
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Links
  nameWithType: DataServiceContext.Links
  fullName: System.Data.Services.Client.DataServiceContext.Links
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Client.LinkDescriptor}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<LinkDescriptor>
  nameWithType: ReadOnlyCollection<LinkDescriptor>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Services.Client.LinkDescriptor>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Services.Client.LinkDescriptor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.LinkDescriptor
    name: LinkDescriptor
    nameWithType: LinkDescriptor
    fullName: LinkDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty(Object,String)
  nameWithType: DataServiceContext.LoadProperty(Object,String)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String)
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty(Object,String,DataServiceQueryContinuation)
  nameWithType: DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation)
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty(Object,String,Uri)
  nameWithType: DataServiceContext.LoadProperty(Object,String,Uri)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,Uri)
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation`1)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty(Object,String,DataServiceQueryContinuation<T>)
  nameWithType: DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation<T>)
  fullName: System.Data.Services.Client.DataServiceContext.LoadProperty(Object,String,DataServiceQueryContinuation<T>)
- uid: System.Data.Services.Client.DataServiceContext.MergeOption
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: MergeOption
  nameWithType: DataServiceContext.MergeOption
  fullName: System.Data.Services.Client.DataServiceContext.MergeOption
- uid: System.Data.Services.Client.MergeOption
  parent: System.Data.Services.Client
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Services.Client.MergeOption
- uid: System.Data.Services.Client.DataServiceContext.ReadingEntity
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ReadingEntity
  nameWithType: DataServiceContext.ReadingEntity
  fullName: System.Data.Services.Client.DataServiceContext.ReadingEntity
- uid: System.EventHandler{System.Data.Services.Client.ReadingWritingEntityEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ReadingWritingEntityEventArgs>
  nameWithType: EventHandler<ReadingWritingEntityEventArgs>
  fullName: System.EventHandler<System.Data.Services.Client.ReadingWritingEntityEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Data.Services.Client.ReadingWritingEntityEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.ReadingWritingEntityEventArgs
    name: ReadingWritingEntityEventArgs
    nameWithType: ReadingWritingEntityEventArgs
    fullName: ReadingWritingEntityEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.ResolveName
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ResolveName
  nameWithType: DataServiceContext.ResolveName
  fullName: System.Data.Services.Client.DataServiceContext.ResolveName
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.ResolveType
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ResolveType
  nameWithType: DataServiceContext.ResolveType
  fullName: System.Data.Services.Client.DataServiceContext.ResolveType
- uid: System.Func{System.String,System.Type}
  parent: System
  isExternal: true
  name: Func<String,Type>
  nameWithType: Func<String,Type>
  fullName: System.Func<System.String,System.Type>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.String,System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.SaveChanges
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DataServiceContext.SaveChanges()
  fullName: System.Data.Services.Client.DataServiceContext.SaveChanges()
- uid: System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SaveChanges(SaveChangesOptions)
  nameWithType: DataServiceContext.SaveChanges(SaveChangesOptions)
  fullName: System.Data.Services.Client.DataServiceContext.SaveChanges(SaveChangesOptions)
- uid: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SaveChangesDefaultOptions
  nameWithType: DataServiceContext.SaveChangesDefaultOptions
  fullName: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions
- uid: System.Data.Services.Client.DataServiceContext.SendingRequest
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SendingRequest
  nameWithType: DataServiceContext.SendingRequest
  fullName: System.Data.Services.Client.DataServiceContext.SendingRequest
- uid: System.EventHandler{System.Data.Services.Client.SendingRequestEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SendingRequestEventArgs>
  nameWithType: EventHandler<SendingRequestEventArgs>
  fullName: System.EventHandler<System.Data.Services.Client.SendingRequestEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Data.Services.Client.SendingRequestEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.SendingRequestEventArgs
    name: SendingRequestEventArgs
    nameWithType: SendingRequestEventArgs
    fullName: SendingRequestEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SetLink(Object,String,Object)
  nameWithType: DataServiceContext.SetLink(Object,String,Object)
  fullName: System.Data.Services.Client.DataServiceContext.SetLink(Object,String,Object)
- uid: System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
  nameWithType: DataServiceContext.SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
  fullName: System.Data.Services.Client.DataServiceContext.SetSaveStream(Object,Stream,Boolean,DataServiceRequestArgs)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SetSaveStream(Object,Stream,Boolean,String,String)
  nameWithType: DataServiceContext.SetSaveStream(Object,Stream,Boolean,String,String)
  fullName: System.Data.Services.Client.DataServiceContext.SetSaveStream(Object,Stream,Boolean,String,String)
- uid: System.Data.Services.Client.DataServiceContext.Timeout
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Timeout
  nameWithType: DataServiceContext.Timeout
  fullName: System.Data.Services.Client.DataServiceContext.Timeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TryGetEntity(Uri,TEntity)
  nameWithType: DataServiceContext.TryGetEntity(Uri,TEntity)
  fullName: System.Data.Services.Client.DataServiceContext.TryGetEntity(Uri,TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TryGetUri(Object,Uri)
  nameWithType: DataServiceContext.TryGetUri(Object,Uri)
  fullName: System.Data.Services.Client.DataServiceContext.TryGetUri(Object,Uri)
- uid: System.Data.Services.Client.DataServiceContext.TypeScheme
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TypeScheme
  nameWithType: DataServiceContext.TypeScheme
  fullName: System.Data.Services.Client.DataServiceContext.TypeScheme
- uid: System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: UpdateObject(Object)
  nameWithType: DataServiceContext.UpdateObject(Object)
  fullName: System.Data.Services.Client.DataServiceContext.UpdateObject(Object)
- uid: System.Data.Services.Client.DataServiceContext.UsePostTunneling
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: UsePostTunneling
  nameWithType: DataServiceContext.UsePostTunneling
  fullName: System.Data.Services.Client.DataServiceContext.UsePostTunneling
- uid: System.Data.Services.Client.DataServiceContext.WritingEntity
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: WritingEntity
  nameWithType: DataServiceContext.WritingEntity
  fullName: System.Data.Services.Client.DataServiceContext.WritingEntity
- uid: System.Data.Services.Client.DataServiceContext.#ctor*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DataServiceContext
  nameWithType: DataServiceContext.DataServiceContext
- uid: System.Data.Services.Client.DataServiceContext.AddLink*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddLink
  nameWithType: DataServiceContext.AddLink
- uid: System.Data.Services.Client.DataServiceContext.AddObject*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddObject
  nameWithType: DataServiceContext.AddObject
- uid: System.Data.Services.Client.DataServiceContext.AddRelatedObject*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AddRelatedObject
  nameWithType: DataServiceContext.AddRelatedObject
- uid: System.Data.Services.Client.DataServiceContext.ApplyingChanges*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ApplyingChanges
  nameWithType: DataServiceContext.ApplyingChanges
- uid: System.Data.Services.Client.DataServiceContext.AttachLink*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AttachLink
  nameWithType: DataServiceContext.AttachLink
- uid: System.Data.Services.Client.DataServiceContext.AttachTo*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: AttachTo
  nameWithType: DataServiceContext.AttachTo
- uid: System.Data.Services.Client.DataServiceContext.BaseUri*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BaseUri
  nameWithType: DataServiceContext.BaseUri
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute<T>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecute<T>
  nameWithType: DataServiceContext.BeginExecute<T>
- uid: System.Data.Services.Client.DataServiceContext.BeginExecute<TElement>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecute<TElement>
  nameWithType: DataServiceContext.BeginExecute<TElement>
- uid: System.Data.Services.Client.DataServiceContext.BeginExecuteBatch*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginExecuteBatch
  nameWithType: DataServiceContext.BeginExecuteBatch
- uid: System.Data.Services.Client.DataServiceContext.BeginGetReadStream*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginGetReadStream
  nameWithType: DataServiceContext.BeginGetReadStream
- uid: System.Data.Services.Client.DataServiceContext.BeginLoadProperty*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginLoadProperty
  nameWithType: DataServiceContext.BeginLoadProperty
- uid: System.Data.Services.Client.DataServiceContext.BeginSaveChanges*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: BeginSaveChanges
  nameWithType: DataServiceContext.BeginSaveChanges
- uid: System.Data.Services.Client.DataServiceContext.CancelRequest*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: CancelRequest
  nameWithType: DataServiceContext.CancelRequest
- uid: System.Data.Services.Client.DataServiceContext.CreateQuery<T>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: CreateQuery<T>
  nameWithType: DataServiceContext.CreateQuery<T>
- uid: System.Data.Services.Client.DataServiceContext.Credentials*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Credentials
  nameWithType: DataServiceContext.Credentials
- uid: System.Data.Services.Client.DataServiceContext.DataNamespace*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DataNamespace
  nameWithType: DataServiceContext.DataNamespace
- uid: System.Data.Services.Client.DataServiceContext.DeleteLink*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DeleteLink
  nameWithType: DataServiceContext.DeleteLink
- uid: System.Data.Services.Client.DataServiceContext.DeleteObject*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DeleteObject
  nameWithType: DataServiceContext.DeleteObject
- uid: System.Data.Services.Client.DataServiceContext.Detach*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Detach
  nameWithType: DataServiceContext.Detach
- uid: System.Data.Services.Client.DataServiceContext.DetachLink*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: DetachLink
  nameWithType: DataServiceContext.DetachLink
- uid: System.Data.Services.Client.DataServiceContext.EndExecute<TElement>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndExecute<TElement>
  nameWithType: DataServiceContext.EndExecute<TElement>
- uid: System.Data.Services.Client.DataServiceContext.EndExecuteBatch*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndExecuteBatch
  nameWithType: DataServiceContext.EndExecuteBatch
- uid: System.Data.Services.Client.DataServiceContext.EndGetReadStream*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndGetReadStream
  nameWithType: DataServiceContext.EndGetReadStream
- uid: System.Data.Services.Client.DataServiceContext.EndLoadProperty*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndLoadProperty
  nameWithType: DataServiceContext.EndLoadProperty
- uid: System.Data.Services.Client.DataServiceContext.EndSaveChanges*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: EndSaveChanges
  nameWithType: DataServiceContext.EndSaveChanges
- uid: System.Data.Services.Client.DataServiceContext.Entities*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Entities
  nameWithType: DataServiceContext.Entities
- uid: System.Data.Services.Client.DataServiceContext.Execute<T>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Execute<T>
  nameWithType: DataServiceContext.Execute<T>
- uid: System.Data.Services.Client.DataServiceContext.Execute<TElement>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Execute<TElement>
  nameWithType: DataServiceContext.Execute<TElement>
- uid: System.Data.Services.Client.DataServiceContext.ExecuteBatch*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ExecuteBatch
  nameWithType: DataServiceContext.ExecuteBatch
- uid: System.Data.Services.Client.DataServiceContext.GetEntityDescriptor*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetEntityDescriptor
  nameWithType: DataServiceContext.GetEntityDescriptor
- uid: System.Data.Services.Client.DataServiceContext.GetLinkDescriptor*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetLinkDescriptor
  nameWithType: DataServiceContext.GetLinkDescriptor
- uid: System.Data.Services.Client.DataServiceContext.GetMetadataUri*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetMetadataUri
  nameWithType: DataServiceContext.GetMetadataUri
- uid: System.Data.Services.Client.DataServiceContext.GetReadStream*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStream
  nameWithType: DataServiceContext.GetReadStream
- uid: System.Data.Services.Client.DataServiceContext.GetReadStreamUri*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: GetReadStreamUri
  nameWithType: DataServiceContext.GetReadStreamUri
- uid: System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: IgnoreMissingProperties
  nameWithType: DataServiceContext.IgnoreMissingProperties
- uid: System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: IgnoreResourceNotFoundException
  nameWithType: DataServiceContext.IgnoreResourceNotFoundException
- uid: System.Data.Services.Client.DataServiceContext.Links*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Links
  nameWithType: DataServiceContext.Links
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty
  nameWithType: DataServiceContext.LoadProperty
- uid: System.Data.Services.Client.DataServiceContext.LoadProperty<T>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: LoadProperty<T>
  nameWithType: DataServiceContext.LoadProperty<T>
- uid: System.Data.Services.Client.DataServiceContext.MergeOption*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: MergeOption
  nameWithType: DataServiceContext.MergeOption
- uid: System.Data.Services.Client.DataServiceContext.ResolveName*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ResolveName
  nameWithType: DataServiceContext.ResolveName
- uid: System.Data.Services.Client.DataServiceContext.ResolveType*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: ResolveType
  nameWithType: DataServiceContext.ResolveType
- uid: System.Data.Services.Client.DataServiceContext.SaveChanges*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SaveChanges
  nameWithType: DataServiceContext.SaveChanges
- uid: System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SaveChangesDefaultOptions
  nameWithType: DataServiceContext.SaveChangesDefaultOptions
- uid: System.Data.Services.Client.DataServiceContext.SetLink*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SetLink
  nameWithType: DataServiceContext.SetLink
- uid: System.Data.Services.Client.DataServiceContext.SetSaveStream*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: SetSaveStream
  nameWithType: DataServiceContext.SetSaveStream
- uid: System.Data.Services.Client.DataServiceContext.Timeout*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: Timeout
  nameWithType: DataServiceContext.Timeout
- uid: System.Data.Services.Client.DataServiceContext.TryGetEntity<TEntity>*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TryGetEntity<TEntity>
  nameWithType: DataServiceContext.TryGetEntity<TEntity>
- uid: System.Data.Services.Client.DataServiceContext.TryGetUri*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TryGetUri
  nameWithType: DataServiceContext.TryGetUri
- uid: System.Data.Services.Client.DataServiceContext.TypeScheme*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: TypeScheme
  nameWithType: DataServiceContext.TypeScheme
- uid: System.Data.Services.Client.DataServiceContext.UpdateObject*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: UpdateObject
  nameWithType: DataServiceContext.UpdateObject
- uid: System.Data.Services.Client.DataServiceContext.UsePostTunneling*
  parent: System.Data.Services.Client.DataServiceContext
  isExternal: false
  name: UsePostTunneling
  nameWithType: DataServiceContext.UsePostTunneling
