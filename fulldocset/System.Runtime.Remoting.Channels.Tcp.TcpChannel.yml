### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  id: TcpChannel
  children:
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  langs:
  - csharp
  name: TcpChannel
  nameWithType: TcpChannel
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  type: Class
  summary: "提供使用 TCP 协议传输消息的通道实现。"
  remarks: "信道跨越远程处理边界 （例如，在应用程序域的计算机） 之间传输消息。 TcpChannel 类是一个方便的类组合<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>类和<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>类</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel></xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>的功能       .NET Framework 远程处理基础结构使用的通道用于传输远程调用。 当客户端进行到的远程对象调用时，则会将调用序列化到一条消息是由客户端通道发送和接收的服务器信道。 然后，它是反序列化和处理。 任何返回的值是由服务器通道传输和接收的客户端通道。       若要执行的消息的其他处理，可以指定的实现<xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>和<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>通过由 TcpChannel 处理的所有消息被都传递。</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> </xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>       对象有关联的配置属性，可以在设置 TcpChannel 运行时在配置文件 (通过调用静态<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>方法) 或以编程方式 (通过将传递<xref:System.Collections.IDictionary>集合到<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A>构造函数)。</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> 有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。      1> [!NOTE] 1> 如果服务器计算机正在运行 Windows 95/98/我，不能指定服务器 TcpChannel 尽可能安全。"
  example:
  - "The following code example shows how to use a TcpChannel to set up a remoting server and its client. The example contains three parts, a server, a client, and a remote object used by the server and the client.  \n  \n The following code example shows a server:  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/add/codesnippet/csharp/t-system.runtime.remotin_20_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/add/codesnippet/cpp/t-system.runtime.remotin_20_1.cpp)]  \n  \n The following code example shows a client for this server:  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/add/codesnippet/csharp/t-system.runtime.remotin_20_2.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/add/codesnippet/cpp/t-system.runtime.remotin_20_2.cpp)]  \n  \n The following code example shows the remote object used by the server and the client:  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_20_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_20_3.cs)]"
  syntax:
    content: 'public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel()
  nameWithType: TcpChannel.TcpChannel()
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;></xref>类，激活仅客户端通道和不服务器信道。"
  remarks: "默认构造函数初始化为其默认值的所有字段。 如果使用默认构造函数，则通道仅用作客户端通道，并不在任何端口上侦听。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/add/codesnippet/csharp/m-system.runtime.remotin_33_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/add/codesnippet/cpp/m-system.runtime.remotin_33_1.cpp)]"
  syntax:
    content: public TcpChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel(Int32)
  nameWithType: TcpChannel.TcpChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;></xref>类在指定端口上侦听的服务器信道。"
  remarks: "若要请求远程处理系统，选择代表你的开放端口，指定端口 0 （零）。 这将创建<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>要在动态分配的端口上侦听请求实例</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 这通常是在客户端若要确保<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>侦听回调方法。</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>       如果为 0 传递给构造函数<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>实例化以使用可用端口。</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>"
  example:
  - "The following code example demonstrates using this method. To request that an available port be dynamically assigned, set the `port` parameter to zero.  \n  \n [!code-cpp[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/cpp/m-system.runtime.remotin_94_1.cpp)]\n [!code-cs[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/csharp/m-system.runtime.remotin_94_1.cs)]\n [!code-vb[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_94_1.vb)]"
  syntax:
    content: public TcpChannel (int port);
    parameters:
    - id: port
      type: System.Int32
      description: "服务器通道侦听的端口。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;></xref>与指定的配置属性和接收器的类。"
  remarks: "有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。      1> [!NOTE] 1> 如果服务器计算机正在运行 Windows 95/98/Me，则服务器<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>不能指定为安全。</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>       信道接收器提供插件的点，它允许访问基础消息流经通道，以及传输机制用于将消息发送到的远程对象的流。 信道接收器也要负责客户端和服务器之间的消息传输。 信道接收器链中链接在一起，所有信道消息流过此接收器链之前最终序列化和传输消息。 如果不需要接收器功能，设置`clientSinkProvider`和`serverSinkProvider`参数`null`。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/add/codesnippet/csharp/a59b945a-521d-44ce-a81e-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/add/codesnippet/cpp/a59b945a-521d-44ce-a81e-_1.cpp)]"
  syntax:
    content: public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>集合，它指定要使用由客户端和服务器通道的配置属性的值。</xref:System.Collections.IDictionary>"
    - id: clientSinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;> </xref>要由客户端通道实现。"
    - id: serverSinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>要由服务器通道实现。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "提供的通道属性未正确设置格式。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "获取通道特定的数据。"
  remarks: "尽管实例的形式返回<xref:System.Object?displayProperty=fullName>，此属性的值可以强制转换为的实例<xref:System.Runtime.Remoting.Channels.ChannelDataStore>描述的通道<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel>对象侦听。</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> </xref:System.Runtime.Remoting.Channels.ChannelDataStore> </xref:System.Object?displayProperty=fullName>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/add/codesnippet/csharp/p-system.runtime.remotin_2_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/add/codesnippet/cpp/p-system.runtime.remotin_2_1.cpp)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref>实例，其中包含通道特定的数据。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "获取当前通道的名称。"
  remarks: "每个已注册的通道具有一个唯一名称。 该名称用于检索特定通道时调用<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> 若要将 ChannelName 属性设置，将值赋给&quot;名称&quot;索引属性传递到字典中的<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29>构造函数。</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/add/codesnippet/csharp/p-system.runtime.remotin_65_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/add/codesnippet/cpp/p-system.runtime.remotin_65_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含的通道的名称。</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "获取当前通道的优先级。"
  remarks: ''
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/add/codesnippet/csharp/p-system.runtime.remotin_50_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/add/codesnippet/cpp/p-system.runtime.remotin_50_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "一个整数，表示指定给通道的优先级。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: CreateMessageSink(String,Object,String)
  nameWithType: TcpChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(String,Object,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "返回将消息传送到指定的 URL 或通道数据对象的通道消息接收器。"
  remarks: "CreateMessageSink 方法返回的通道消息接收器将消息传送到指定的 URL 或通道数据对象。 如果`uri`参数是`null`，`remoteChannelData`用作接收器的目标。 请`url`或`remoteChannelData`参数可以是`null`，但不是两者。       信道接收器提供插件的点，它允许访问基础消息流经通道，以及传输机制用于将消息发送到的远程对象的流。 信道接收器链中的链接在一起`ChannelSinkProviders`之前，所有信道消息流经此接收器链最终序列化和传输消息。"
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/add/codesnippet/csharp/73bdeed3-70ff-41b4-8d48-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/add/codesnippet/cpp/73bdeed3-70ff-41b4-8d48-_1.cpp)]"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "新的接收器应将消息传递到的 URL。 Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: remoteChannelData
      type: System.Object
      description: "远程主机的新接收器应将消息传递到通道数据对象。 Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: objectURI
      type: System.String
      description: "此方法返回时，包含新的通道消息接收器将消息传送到指定的 URL 或通道数据对象的 URI。 此参数传递时未经初始化。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "通道消息接收器将消息传送到指定的 URL 或通道数据对象。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: TcpChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "返回所有 Url 的对象使用指定的 URI、 承载在当前数组<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref>。"
  remarks: "将使用此方法的<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>"
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/csharp/m-system.runtime.remotin_3_1.cs)]\n [!code-vb[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_3_1.vb)]\n [!code-cpp[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/cpp/m-system.runtime.remotin_3_1.cpp)]"
  syntax:
    content: public string[] GetUrlsForUri (string objectURI);
    parameters:
    - id: objectURI
      type: System.String
      description: "为其 Url 所需的对象的 URI。"
    return:
      type: System.String[]
      description: "用指定的 URI，对当前托管对象的 Url 的数组<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref>。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "获取或设置一个布尔值，该值指示当前的通道是否安全。"
  remarks: "因为它是不足以设置<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>负责确保安全性参数，此属性需要未显式设置"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示当前实例是否安全。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: TcpChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "从指定的 URL 中提取的通道 URI 和远程的已知对象 URI。"
  remarks: "对象的 URI 是唯一标识特定对象实例的值。"
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/add/codesnippet/csharp/2b3d57e7-01ce-48be-88d4-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/add/codesnippet/cpp/2b3d57e7-01ce-48be-88d4-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "要从中提取远程的已知对象的 URI 的 URL。"
    - id: objectURI
      type: System.String
      description: "此方法返回时，包含<xref:System.String>保存远程的已知对象的 URI。</xref:System.String> 此参数传递时未经初始化。"
    return:
      type: System.String
      description: "当前通道的 URI。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: TcpChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "指示当前通道开始侦听请求。"
  remarks: "不需要调用此方法以开始侦听新初始化的通道。       使用此方法重新启动后的通道上侦听<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>调用方法。</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>       如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。       `data`参数可以用于将特定的初始化状态传递到通道。 如果不希望将特定状态传递到通道，设置`data`到`null`。"
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "可选的初始化信息。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: TcpChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "指示当前通道停止侦听请求。"
  remarks: "使用此方法以停止侦听通道上。 若要重新开始侦听，使用<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>方法。</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>       如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。       `data`参数可以用于将特定的初始化状态传递到通道。 如果不希望将特定状态传递到通道，设置`data`到`null`。"
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "通道的可选状态信息。"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel()
  nameWithType: TcpChannel.TcpChannel()
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel()
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel(Int32)
  nameWithType: TcpChannel.TcpChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: CreateMessageSink(String,Object,String)
  nameWithType: TcpChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(String,Object,String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: TcpChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: TcpChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: TcpChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: TcpChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel
  nameWithType: TcpChannel.TcpChannel
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: TcpChannel.CreateMessageSink
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: TcpChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: Parse
  nameWithType: TcpChannel.Parse
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StartListening
  nameWithType: TcpChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StopListening
  nameWithType: TcpChannel.StopListening
