### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "控制 HTTP Internet 资源的访问权。"
  remarks: "WebPermission 提供一组方法和属性来控制对 Internet 资源的访问。 你可以使用 WebPermission 以提供对你的资源，根据受限制或不受限制访问<xref:System.Security.Permissions.PermissionState>WebPermission 创建时设置。</xref:System.Security.Permissions.PermissionState>       创建 WebPermission 实例通过调用其构造函数，使用以下参数集之一:-没有参数。 默认值<xref:System.Security.Permissions.PermissionState>为<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> 指定<xref:System.Security.Permissions.PermissionState>以允许在目标类中，使用任何 URI 或<xref:System.Security.Permissions.PermissionState>以允许仅对使用指定的 Uri 访问<xref:System.Net.WebPermission.AddPermission%2A>方法。</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A<xref:System.Net.NetworkAccess>值和 URI 字符串。</xref:System.Net.NetworkAccess> 指定的 URI 已授予的权限<xref:System.Net.NetworkAccess>值。</xref:System.Net.NetworkAccess>      -A<xref:System.Net.NetworkAccess>说明符和 URI 正则表达式。</xref:System.Net.NetworkAccess>       <xref:System.Net.WebPermission.ConnectList%2A>和<xref:System.Net.WebPermission.AcceptList%2A>保存已向其授予访问权限的 Uri。</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> 若要将 URI 添加到其中任何一个列表中，使用<xref:System.Net.WebPermission.AddPermission%2A>。</xref:System.Net.WebPermission.AddPermission%2A> 如果你通过<xref:System.Net.NetworkAccess>作为<xref:System.Net.NetworkAccess>参数，URI 将添加到<xref:System.Net.WebPermission.AcceptList%2A>。</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission 将允许连接到你的目标类与 Uri 匹配<xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      1> [!CAUTION]&1;> 要拒绝对 Internet 资源的访问，你必须拒绝访问对该资源的所有可能路径。 这要求<xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>与状态参数设置为<xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A></xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>调用 更好的方法是允许访问特定资源的权限。 有关此主题的详细信息，请参阅[NIB︰ 使用 Deny 方法](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)主题。      1> [!NOTE]&1;> 需要拒绝使用仅规范的资源路径的访问。 没有无需使用的路径的所有语法变体。      1> [!NOTE]&1;> 从中提取出来用户名称和默认端口信息<xref:System.Uri>之前与提供给正则表达式参数的比较结果<xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>构造函数。</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> 如果正则表达式包含用户信息或默认端口号，则所有传入<xref:System.Uri>s 将无法与正则表达式匹配。</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "创建的新实例<xref href=&quot;System.Net.WebPermission&quot;></xref>类。"
  remarks: "创建<xref:System.Net.WebPermission>类</xref:System.Net.WebPermission>的新实例 此构造函数创建空的权限，不会授予任何权限。"
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "创建的新实例<xref href=&quot;System.Net.WebPermission&quot;></xref>通过所有的类要求或所有请求都失败。"
  remarks: "值`state`参数可以是<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>或<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>分别生成完全受限制或完全无限制地访问所有安全变量。</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> 如果指定<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>，然后您可以授予对单个 Uri 使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>访问</xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "初始化的新实例<xref href=&quot;System.Net.WebPermission&quot;></xref>类替换为指定的 URI 的指定的访问权限。"
  remarks: "此构造函数初始化<xref:System.Net.WebPermission>并授予其目标权限，或者允许远程主机连接或接受使用所描述的 URI 的远程主机连接`uriString`参数。</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "NetworkAccess 值，该值指示哪种访问权限授予指定的 URI。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>指示应用程序可以接受来自 Internet 上本地资源的连接。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>指示允许此应用程序连接到特定的 Internet 资源。"
    - id: uriString
      type: System.String
      description: "URI 字符串的访问权限授予的权限。"
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "初始化的新实例<xref href=&quot;System.Net.WebPermission&quot;></xref>与指定的 URI 正则表达式的指定的访问权限的类。"
  remarks: "此构造函数初始化<xref:System.Net.WebPermission>并授予其目标权限，或者允许远程主机连接或接受使用所描述的 URI 的远程主机连接`uriRegex`参数。</xref:System.Net.WebPermission>      1> [!NOTE]&1;> 建议你创建`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>， <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>，和<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>标志。</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      1> [!NOTE]&1;> 候选 URI 字符串已针对相关的正则表达式的列表 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 两种方式。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，根据相应的列表中; 检查候选 URI 字符串然后，如果没有匹配项，则候选 URI 字符串转换为<xref:System.Uri>和相应的列表进行比照。</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>值，该值指示哪种访问权限授予指定的 URI。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>指示应用程序可以接受来自 Internet 上本地资源的连接。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>指示允许此应用程序连接到特定的 Internet 资源。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "正则表达式，描述为被授予访问权限的 URI。"
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "此属性返回的单个枚举接受权限持有此<xref href=&quot;System.Net.WebPermission&quot;> </xref>。 可能对象包含在返回的枚举类型<xref:System.String>和&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;。</xref:System.String>"
  remarks: "此属性获取受此支持<xref:System.Net.WebPermission>。</xref:System.Net.WebPermission>允许的本地资源的列表 已应用的类<xref:System.Net.WebPermission>仅有权接收到此列表中找到的本地资源的传入连接。</xref:System.Net.WebPermission>      1> [!NOTE]&1;> 可以将 Uri 添加到使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>此列表      1> [!NOTE]&1;> 候选 URI 字符串已针对相关的正则表达式的列表 (AcceptList 或<xref:System.Net.WebPermission.ConnectList%2A>) 两种方式。</xref:System.Net.WebPermission.ConnectList%2A> 首先，根据相应的列表中; 检查候选 URI 字符串然后，如果没有匹配项，则候选 URI 字符串转换为<xref:System.Uri>和相应的列表进行比照。</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>接口包含接受的权限。</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "添加对当前的指定的访问权限与指定的 URI 字符串<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果已指定<xref:System.Security.Permissions.PermissionState>作为<xref:System.Security.Permissions.PermissionState>，AddPermission 用于允许使用`uriString`目标类中</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 方式`uriString`可以使用目标类指定通过`access`。 指定<xref:System.Net.NetworkAccess>作为要添加指定的 URI 的访问参数`uriString`到 URI 列表的参数接受字符串，或指定<xref:System.Net.NetworkAccess>参数来将 URI 添加到的 URI 的列表为访问连接字符串。</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      1> [!NOTE]&1;> 上调用 AddPermission<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>将不起作用，因为所有 Uri 都授予的权限。</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      1> [!NOTE]&1;> 候选 URI 字符串已针对相关的正则表达式的列表 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 两种方式。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，根据相应的列表中; 检查候选 URI 字符串然后，如果没有匹配项，则候选 URI 字符串转换为<xref:System.Uri>和相应的列表进行比照。</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> ，它指定到 URI 授予的访问权限。"
    - id: uriString
      type: System.String
      description: "一个字符串，描述的访问权限授予的权限的 URI。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "添加对当前的指定的访问权限指定的 URI <xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果已指定<xref:System.Security.Permissions.PermissionState>作为<xref:System.Security.Permissions.PermissionState>，使用<xref:System.Net.WebPermission.AddPermission%2A>以允许使用`uriRegex`目标类中</xref:System.Net.WebPermission.AddPermission%2A></xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 指定<xref:System.Net.NetworkAccess>作为`access`参数将添加指定的 URI`uriRegex`到 URI 列表的参数接受字符串，或指定<xref:System.Net.NetworkAccess>参数来将 URI 添加到的 URI 的列表为访问连接字符串。</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      1> [!NOTE]&1;> 调用<xref:System.Net.WebPermission.AddPermission%2A>上<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>实例将产生任何影响，如权限授予所有 Uri。</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      1> [!NOTE]&1;> 建议你创建`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>， <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>，和<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>标志。</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      1> [!NOTE]&1;> 候选 URI 字符串已针对相关的正则表达式的列表 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 两种方式。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，根据相应的列表中; 检查候选 URI 字符串然后，如果没有匹配项，则候选 URI 字符串转换为<xref:System.Uri>和相应的列表进行比照。</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "指定到 URI 授予的访问权限 NetworkAccess。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "正则表达式描述的 Uri 的访问权限授予的权限集。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "此属性返回的单个枚举连接权限持有此<xref href=&quot;System.Net.WebPermission&quot;> </xref>。 可能对象包含在返回的枚举类型<xref:System.String>和&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;。</xref:System.String>"
  remarks: "此属性获取所允许的此<xref:System.Net.WebPermission>。</xref:System.Net.WebPermission>的远程资源的列表 已应用的类<xref:System.Net.WebPermission>仅有权连接与此列表中找到的资源。</xref:System.Net.WebPermission>      1> [!NOTE]&1;> 可以将 Uri 添加到使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>此列表      1> [!NOTE]&1;> 候选 URI 字符串已针对相关的正则表达式的列表 (<xref:System.Net.WebPermission.AcceptList%2A>或 ConnectList) 两种方式。</xref:System.Net.WebPermission.AcceptList%2A> 首先，根据相应的列表中; 检查候选 URI 字符串然后，如果没有匹配项，则候选 URI 字符串转换为<xref:System.Uri>和相应的列表进行比照。</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>包含的接口的连接权限。</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "创建一份<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "<xref:System.Security.IPermission>返回的相同资源的访问权限与原始<xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>此方法表示</xref:System.Security.IPermission> 此方法将替代<xref:System.Security.CodeAccessPermission.Copy%2A>和实现是为了支持<xref:System.Security.IPermission>接口。</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "新实例<xref href=&quot;System.Net.WebPermission&quot;></xref>类具有与原始相同的值。"
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "重新构造<xref href=&quot;System.Net.WebPermission&quot;></xref>从 XML 编码。"
  remarks: "FromXml 方法重新构造<xref:System.Net.WebPermission>从 XML 编码，由定义<xref:System.Security.SecurityElement>类。</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       使用<xref:System.Net.WebPermission.ToXml%2A>方法进行 XML 编码<xref:System.Net.WebPermission>，包括状态信息。</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "要从中重新构造 XML 编码<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code>参数是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>不是此类型的权限元素。"
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返回两个逻辑交集<xref href=&quot;System.Net.WebPermission&quot;></xref>实例。"
  remarks: "相交返回<xref:System.Net.WebPermission>包含中共这些权限`target`和当前实例。</xref:System.Net.WebPermission>       此方法将替代<xref:System.Security.CodeAccessPermission.Intersect%2A>和实现是为了支持<xref:System.Security.IPermission>接口。</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>与当前实例进行比较。"
    return:
      type: System.Security.IPermission
      description: "一个新<xref href=&quot;System.Net.WebPermission&quot;> </xref> ，表示当前实例的交集和<code> target </code>参数。 如果交集为空，该方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或类型<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "确定是否当前<xref href=&quot;System.Net.WebPermission&quot;></xref>是指定的对象的子集。"
  remarks: "如果当前<xref:System.Net.WebPermission>指定一组完全包含的关联资源`target`参数，则当前<xref:System.Net.WebPermission>是的子集`target`。</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> 此方法重写 IsSubsetOf 和实现是为了支持<xref:System.Security.IPermission>接口。</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>要与当前<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前实例是的子集<code> target </code>参数; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果目标是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，该方法返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>对不是不受限制的空的当前权限和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>否则为。"
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目标参数不是实例的<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "当前实例包含一个正则表达式编码权限并不是正好有相同的权限在目标实例中找到。"
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "检查的总体权限状态<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果<xref:System.Net.WebPermission>是<xref:System.Security.Permissions.PermissionState>，则目标类可以使用所有的 Uri。</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> 否则，为你想要使用的目标类的任何 URI，必须授予特定权限。      1> [!NOTE]&1;> 使用<xref:System.Net.WebPermission.AddPermission%2A>添加一个 URI，并指定其权限。</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "创建的 XML 编码<xref href=&quot;System.Net.WebPermission&quot;></xref>及其当前状态。"
  remarks: "使用<xref:System.Net.WebPermission.FromXml%2A>要还原状态信息从一种<xref:System.Security.SecurityElement>。</xref:System.Security.SecurityElement>方法</xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> ，其中包含的 XML 编码表示形式<xref href=&quot;System.Net.WebPermission&quot;> </xref>，包括状态信息。"
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返回两个实例之间的逻辑联合<xref href=&quot;System.Net.WebPermission&quot;></xref>类。"
  remarks: "返回联合<xref:System.Net.WebPermission>包含中的所有权限`target`和当前实例。</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>要与当前组合<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> ，表示同时兼具当前实例与<code> target </code>参数。 If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. 如果目标是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，该方法返回的当前副本<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目标不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或类型的<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
