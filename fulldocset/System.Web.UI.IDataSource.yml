### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "表示数据绑定控件将绑定到的抽象数据源。"
  remarks: "ASP.NET 支持控件数据绑定体系结构，使 Web 服务器控件，用于绑定到数据以一致的方式。 Web 服务器控件绑定到数据的数据绑定控件，并促进绑定称为数据源控件的类称为。 数据源控件可以表示任何数据源︰ 关系数据库、 文件、 流、 业务对象等。 数据源控件以数据绑定控件，而不考虑源或基础数据的格式一致的方式显示数据。       当你想要实现您自己自定义的 ASP.NET 数据源控件实现 IDataSource 接口。       任何类都实现 IDataSource 接口是一个数据源控件。 IDataSource 接口作为所有 ASP.NET 数据源的基础控件，并具有其两个方法定义的基本数据绑定体系结构概念之一︰<xref:System.Web.UI.IDataSource.GetView%2A>方法和<xref:System.Web.UI.IDataSource.GetViewNames%2A>方法。</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> 此概念是所有数据源控件都支持对其数据的一个或多个命名的视图。 数据源视图对象是类似于<xref:System.Data.DataView>中的抽象<xref:System.Data>命名空间︰ 数据可绑定的自定义视图的数据的排序、 筛选和该视图定义其他数据操作。</xref:System.Data> </xref:System.Data.DataView> 就其核心而言，数据源控件不执行任何操作超过检索数据的视图。       数据源控件可以具有一个或多个关联的数据源视图对象。 某些数据源控件，包括表示关系数据库，如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.AccessDataSource>，只支持一个视图。</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 其他数据源控件，其中包括分层数据源控件，例如<xref:System.Web.UI.WebControls.SiteMapDataSource>，支持多个视图。</xref:System.Web.UI.WebControls.SiteMapDataSource> 数据源视图定义数据源以及它支持的操作的功能。       总之，数据源控件实现 IDataSource 接口，支持的数据，它们表示，而且始终支持从它们表示的数据源检索数据的一个或多个命名的视图。 数据源控件始终根据需要检索数据，例如，当`DataBind`调用数据绑定控件上。"
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "数据源控件更改以某种方式影响数据绑定控件时发生。"
  remarks: "将引发 DataSourceChanged 事件时的数据绑定控件或基础数据的属性已更改以某种方式影响的数据绑定控件和其数据之间的数据绑定。 例如，将引发事件，如果文件 name 属性，如<xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>属性，更改对基于文件的数据源控件。</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取与数据源控件关联的已命名的数据源视图。"
  remarks: "数据源控件类可以支持其基础数据的一个或多个视图。 这些视图表示的实例的<xref:System.Web.UI.DataSourceView>类。</xref:System.Web.UI.DataSourceView> 数据源视图定义的数据源控件，功能，并执行从基础数据存储区检索数据和执行操作，例如排序、 插入、 删除和更新所需的所有工作。       数据源实现的<xref:System.Web.UI.IDataSource>接口实现 GetView 方法返回与类相关联的强类型化的视图对象</xref:System.Web.UI.IDataSource>的控件类"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "要检索的视图名称。"
    return:
      type: System.Web.UI.DataSourceView
      description: "返回命名<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>与关联<xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>。"
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取的名称，表示与关联的视图对象的列表集合<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>接口。"
  remarks: "数据源控件类可以支持其基础数据的一个或多个命名的视图。 GetViewNames 方法返回当前与数据源控件实例关联的视图名称的集合。 调用方可以循环访问集合的视图名称并检索各个<xref:System.Web.UI.DataSourceView>对象与<xref:System.Web.UI.IDataSource.GetView%2A>方法。</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       数据源控件实现<xref:System.Web.UI.IDataSource>GetViewNames 方法返回表示所有数据源的名称的集合，查看当前数据源控件类。 与关联的对象的接口实现</xref:System.Web.UI.IDataSource>的类"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，它包含与关联的视图名称<xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
