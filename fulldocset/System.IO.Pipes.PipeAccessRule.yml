### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeAccessRule
  id: PipeAccessRule
  children:
  - System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeAccessRule.PipeAccessRights
  langs:
  - csharp
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
  type: Class
  summary: "表示定义管道的访问规则的访问控制项 (ACE) 的抽象。"
  remarks: "访问控制规则定义确定哪些操作是允许还是不允许在运行 Microsoft Windows 的计算机上的用户帐户权限。       PipeAccessRule 类表示基础访问控制项 (ACE)，指定的用户帐户，要提供 （读取、 写入和等等） 的访问的类型的抽象，以及是否允许或拒绝该权限。  此类还可以指定如何将访问规则传播到子对象。       PipeAccessRule 类用于创建新的访问规则。  您可以保留规则使用<xref:System.IO.Pipes.PipeSecurity>类。</xref:System.IO.Pipes.PipeSecurity>"
  syntax:
    content: 'public sealed class PipeAccessRule : System.Security.AccessControl.AccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)'
  parent: System.IO.Pipes.PipeAccessRule
  langs:
  - csharp
  name: PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
  nameWithType: PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新实例<xref href=&quot;System.IO.Pipes.PipeAccessRule&quot;></xref>使用指定的标识、 管道访问权限和访问控制类型的类。"
  remarks: "使用此构造函数创建访问控制规则，您可以保留使用<xref:System.IO.Pipes.PipeSecurity>类。</xref:System.IO.Pipes.PipeSecurity> 访问控制规则定义确定哪些操作是允许还是不允许在运行 Microsoft Windows 的计算机上的用户帐户权限。"
  syntax:
    content: public PipeAccessRule (System.Security.Principal.IdentityReference identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封装到用户帐户的引用的对象。"
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "之一<xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.IO.Pipes.PipeAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)'
  parent: System.IO.Pipes.PipeAccessRule
  langs:
  - csharp
  name: PipeAccessRule(String,PipeAccessRights,AccessControlType)
  nameWithType: PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新实例<xref href=&quot;System.IO.Pipes.PipeAccessRule&quot;></xref>使用指定的标识、 管道访问权限和访问控制类型的类。"
  remarks: "使用此构造函数创建访问控制规则，您可以保留使用<xref:System.IO.Pipes.PipeSecurity>类。</xref:System.IO.Pipes.PipeSecurity> 访问控制规则定义确定哪些操作是允许还是不允许在运行 Microsoft Windows 的计算机上的用户帐户权限。"
  syntax:
    content: public PipeAccessRule (string identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "用户帐户的名称。"
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "之一<xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.IO.Pipes.PipeAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeAccessRule.PipeAccessRights
  id: PipeAccessRights
  parent: System.IO.Pipes.PipeAccessRule
  langs:
  - csharp
  name: PipeAccessRights
  nameWithType: PipeAccessRule.PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRights
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "获取<xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;></xref>关联与当前的标志<xref href=&quot;System.IO.Pipes.PipeAccessRule&quot;></xref>对象。"
  syntax:
    content: public System.IO.Pipes.PipeAccessRights PipeAccessRights { get; }
    return:
      type: System.IO.Pipes.PipeAccessRights
      description: "按位组合<xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;></xref>值。"
  overload: System.IO.Pipes.PipeAccessRule.PipeAccessRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeAccessRule
  isExternal: false
  name: PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
  nameWithType: PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeAccessRule
  isExternal: false
  name: PipeAccessRule(String,PipeAccessRights,AccessControlType)
  nameWithType: PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeAccessRule.PipeAccessRights
  parent: System.IO.Pipes.PipeAccessRule
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRule.PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRights
- uid: System.IO.Pipes.PipeAccessRule.#ctor*
  parent: System.IO.Pipes.PipeAccessRule
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule.PipeAccessRule
- uid: System.IO.Pipes.PipeAccessRule.PipeAccessRights*
  parent: System.IO.Pipes.PipeAccessRule
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRule.PipeAccessRights
