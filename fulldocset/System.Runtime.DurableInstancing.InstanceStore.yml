### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstanceStore
  id: InstanceStore
  children:
  - System.Runtime.DurableInstancing.InstanceStore.#ctor
  - System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  - System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  - System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  - System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  langs:
  - csharp
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
  type: Class
  summary: "表示实例存储区。"
  remarks: "永久性提供程序提供对实例存储区通过 InstanceStore 类的具体实现访问。       永久性提供程序在传递给 TryCommand，即使该命令已执行完的句柄上调用 InstanceHandle.Free。 但是，持久性提供程序不得保留强引用 InstanceHandle or InstanceOwner 对象，因为这可以阻止 InstanceStore 进行垃圾回收。      1> [!WARNING]&1;> 持久性工作流的工作流定义不能更改。 如果工作流定义后会将其保存更改，工作流运行时将崩溃时重新加载工作流。"
  syntax:
    content: public abstract class InstanceStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  id: '#ctor'
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
  type: Constructor
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "初始化的实例<xref href=&quot;System.Runtime.DurableInstancing.InstanceStore&quot;></xref>类。"
  syntax:
    content: protected InstanceStore ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "异步执行永久性命令，如<xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;></xref>和<xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>。"
  remarks: "主机可调用 BeginExecute 方法来异步执行永久性命令对实例句柄。 主机通过调用获取实例句柄<xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>方法。</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 实例句柄可以绑定到表示的上下文和主题的命令，如实例、 实例所有者或实例锁的实体。  只能有一个命令可能对实例句柄发出一次。"
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要执行该命令。"
    - id: timeout
      type: System.TimeSpan
      description: "命令执行超时值。"
    - id: callback
      type: System.AsyncCallback
      description: "接收异步操作完成通知的异步回调委托。"
    - id: state
      type: System.Object
      description: "状态信息。"
    return:
      type: System.IAsyncResult
      description: "异步操作的状态。"
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "永久性提供程序实现此方法，这可确定是否可以执行特定的永久性命令。 如果可以执行命令，以异步方式执行的命令。"
  remarks: "如果可以执行命令，永久性提供程序会对 InstancePersistenceContext 以提供该命令的结果调用相关方法。      1> [!WARNING]&1;> 即使此方法声明为`virtual`而非`abstract`，没有实现。 必须重写此方法，以便提供功能。"
  syntax:
    content: protected virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "实例上下文中。"
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要执行的永久性命令。"
    - id: timeout
      type: System.TimeSpan
      description: "命令执行超时值。"
    - id: callback
      type: System.AsyncCallback
      description: "接收异步操作完成通知的异步回调委托。"
    - id: state
      type: System.Object
      description: "状态信息。"
    return:
      type: System.IAsyncResult
      description: "异步操作的状态。"
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "开始一个异步操作以侦听特定实例句柄的实例存储区所引发任何事件。"
  syntax:
    content: public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
    - id: timeout
      type: System.TimeSpan
      description: "操作超时之前经过的时间。"
    - id: callback
      type: System.AsyncCallback
      description: "异步操作完成后调用的方法。"
    - id: state
      type: System.Object
      description: "包含与异步操作关联的状态信息的对象。"
    return:
      type: System.IAsyncResult
      description: "返回一个<xref:System.IAsyncResult>对象...</xref:System.IAsyncResult>"
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  id: CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "创建实例句柄。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  id: CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "创建实例句柄。  如果 defaultinstanceowner，作为新句柄的实例所有者自动被绑定值。  作为参数传递的实例标识符是作为新句柄的实例自动被绑定。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "一个实例标识符。 不得是 Guid.Empty。"
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "创建实例句柄。 如果作为参数传递的实例所有者不为 null，作为新句柄的实例所有者自动被绑定值。  （否则，任何实例所有者不绑定，即使设置了 DefaultInstanceOwner。）"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "实例所有者。"
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。 Null 值表示，新的句柄不应该将自动绑定到实例所有者。"
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "创建实例句柄。 如果作为参数传递的实例所有者不为 null，作为新句柄的实例所有者自动被绑定值。  （否则，任何实例所有者不绑定，即使设置了 DefaultInstanceOwner。）作为参数传递的实例标识符是作为新句柄的实例自动被绑定。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "一个 InstanceOwner 对象，表示一个实例所有者。 传递 null 作为此参数以指示，新的句柄不应该将自动绑定到实例所有者的值。"
    - id: instanceId
      type: System.Guid
      description: "一个实例标识符。 不得是 Guid.Empty。"
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  id: DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "获取或设置默认实例的所有者。"
  remarks: "有些主机会推理要使用通过读取此属性的实例所有者。 WorkflowApplication 可以使用此属性。 WorkflowServiceHost 不使用此属性。       DefaultInstanceOwner 属性必须设置为空时不再需要。 InstanceStore 对象可能不是垃圾回收如果 DefaultInstanceOwner 不为 null。      1> [!WARNING]&1;> 即使此方法声明为`virtual`而非`abstract`，没有实现。 必须重写此方法，以便提供功能。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "默认实例的所有者。"
  overload: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "结束异步操作。"
  remarks: "如果在事务下调用 BeginExecute，则此状态可以包含未提交的数据。 一旦将成功提交事务，InstanceView 对象可被视为中的数据提交。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "操作的结果。"
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "该命令成功完成后表示实例的已知的状态的 InstanceView 对象。"
  overload: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  id: EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "结束异步操作。"
  remarks: >-
    > [!WARNING]

    >  Even though this method is declared as `virtual` rather than `abstract`, there is no implementation. This method must be overridden in order to provide functionality.
  syntax:
    content: protected virtual bool EndTryCommand (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "操作的结果。"
    return:
      type: System.Boolean
      description: "永久性提供程序实现应返回 false，如果它不支持传递到 BeginTryCommand 方法的命令。 否则为，它应返回 true 或引发异常。"
  overload: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  id: EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "结束由启动异步操作<xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>方法。</xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>"
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> EndWaitForEvents (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "一个移交到客户端由的 Begin 方法的 IAsyncResult 对象。"
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "返回的列表<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;></xref>对象..."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: '异步执行永久性命令。 永久性命令的示例包括︰ <xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;> </xref>和<xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>。'
  remarks: "主机可调用 Execute 方法来执行永久性命令对实例句柄，它可以通过调用通过获取主机<xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>方法。</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 实例句柄可以绑定到表示的上下文和主题的命令，如实例、 实例所有者或实例锁的实体。  只能有一个命令可能对实例句柄发出一次。      1> [!WARNING]&1;> 如果执行此方法时使用<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>，它将创建<xref:System.Runtime.DurableInstancing.InstanceOwner>并将其绑定到的实例。</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> 这意味着没有其他进程将能够访问该工作流;如果在进程结束，则无法恢复工作流，或将其执行。 如果再次，执行此类工作流<xref:System.Runtime.DurableInstancing.InstanceLockedException>将引发。</xref:System.Runtime.DurableInstancing.InstanceLockedException>   >> 如果<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>是未使用，实例存储将创建一个临时<xref:System.Runtime.DurableInstancing.InstanceOwner>，将在过程结束时删除。</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> 但是，如果在进程结束工作流的最后一个暂留点之前，此将引发异常，除非在中指定的时间段**HostLockRenewalPeriod**参数已过期。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要执行该命令。"
    - id: timeout
      type: System.TimeSpan
      description: "操作的超时值。"
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "该命令成功完成后表示实例的已知的状态的 InstanceView 对象。  如果在事务下调用了 Execute，则此状态可以包含未提交的数据。 一旦将成功提交事务，InstanceView 对象可被视为在数据提交"
  overload: System.Runtime.DurableInstancing.InstanceStore.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  id: GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "获取所有已终止的事件绑定到<xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;></xref>对象。"
  syntax:
    content: protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "<xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;> </xref>表示一个实例所有者的对象。"
    return:
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
      description: "返回的数组<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;></xref>对象..."
  overload: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  id: GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "获取绑定到有效实例句柄或没有进行垃圾回收的每个 InstanceOwner 对象。"
  remarks: "返回 InstanceOwner 对象的数组。"
  syntax:
    content: protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner[]
      description: "实例所有者。"
  overload: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  id: OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "释放实例句柄时调用。"
  syntax:
    content: protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "已释放实例句柄。"
    - id: userContext
      type: System.Object
      description: "如果未重写 OnNewInstanceHandle 返回从 OnNewInstanceHandle，则为 null 的永久性提供程序的用户上下文信息。"
  overload: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  id: OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "创建新的实例句柄时调用。"
  syntax:
    content: protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "实例句柄。"
    return:
      type: System.Object
      description: "一个对象。  使用此句柄执行命令和释放句柄时，此用户上下文对象将可供永久性提供程序。"
  overload: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "重置已终止的事件，并从由实例所有者维护的发送信号的事件列表中移除的事件。"
  syntax:
    content: protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "以前终止的永久性事件和要重置。"
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "与永久性事件关联的实例所有者。"
  overload: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "实例存储区时，将调用此方法用信号通知事件。 为此永久性事件订阅工作流宿主接收它，并采取适当的措施。"
  syntax:
    content: protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "要对其发出信号的永久性事件。"
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "实例所有者。"
  overload: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "永久性提供程序实现此方法，这可确定是否可执行特定的永久性命令，并且如果可以执行此命令将以异步方式执行它。"
  remarks: "如果可以执行命令，永久性提供程序上调用相关方法<xref:System.Runtime.DurableInstancing.InstancePersistenceContext>以提供该命令的结果。</xref:System.Runtime.DurableInstancing.InstancePersistenceContext>"
  syntax:
    content: protected virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "实例上下文中。"
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要执行该命令。"
    - id: timeout
      type: System.TimeSpan
      description: "此操作的超时值。"
    return:
      type: System.Boolean
      description: "持久性提供程序实现应返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果它不支持命令传递作为参数; 否则，它应返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>或引发异常。"
  overload: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  id: WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "工作流主机通常会调用此方法来等待事件接收信号。"
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "绑定到此事件实例句柄。"
    - id: timeout
      type: System.TimeSpan
      description: "在等待操作超时之前经过多长时间。"
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "一份<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;></xref>对象。"
  overload: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceOwner
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
- uid: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
  parent: System.Collections.Generic
  isExternal: true
  name: List<InstancePersistenceEvent>
  nameWithType: List<InstancePersistenceEvent>
  fullName: System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
- uid: System.Runtime.DurableInstancing.InstanceOwner[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstanceOwner
    name: InstanceOwner
    nameWithType: InstanceOwner
    fullName: InstanceOwner[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore.InstanceStore
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute
  nameWithType: InstanceStore.BeginExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand
  nameWithType: InstanceStore.BeginTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents
  nameWithType: InstanceStore.BeginWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle
  nameWithType: InstanceStore.CreateInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute
  nameWithType: InstanceStore.EndExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand
  nameWithType: InstanceStore.EndTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents
  nameWithType: InstanceStore.EndWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute
  nameWithType: InstanceStore.Execute
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents
  nameWithType: InstanceStore.GetEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners
  nameWithType: InstanceStore.GetInstanceOwners
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle
  nameWithType: InstanceStore.OnFreeInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle
  nameWithType: InstanceStore.OnNewInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent
  nameWithType: InstanceStore.ResetEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent
  nameWithType: InstanceStore.SignalEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand
  nameWithType: InstanceStore.TryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents
  nameWithType: InstanceStore.WaitForEvents
