### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinder
  id: DataBinder
  children:
  - System.Web.UI.DataBinder.#ctor
  - System.Web.UI.DataBinder.EnableCaching
  - System.Web.UI.DataBinder.Eval(System.Object,System.String)
  - System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetDataItem(System.Object)
  - System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.IsBindableType(System.Type)
  langs:
  - csharp
  name: DataBinder
  nameWithType: DataBinder
  fullName: System.Web.UI.DataBinder
  type: Class
  summary: "快速应用程序开发 (RAD) 设计器以生成和分析数据绑定表达式语法提供支持。 此类不能被继承。"
  remarks: "你可以使用重载的静态<xref:System.Web.UI.DataBinder.Eval%2A>ASP.NET 网页中的数据绑定语法中此类的方法。</xref:System.Web.UI.DataBinder.Eval%2A> 这提供了语法更容易使用的工作量要比标准数据绑定。 但是，因为`DataBinder.Eval`提供自动类型转换，它可以在导致性能降低。       有关 ASP.NET 数据绑定、 表达式和语法的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)和[数据绑定表达式概述](~/add/includes/ajax-current-ext-md.md)。       从.NET Framework 4.5 开始，你可以使用模型绑定来简化的一些任务你具有的用于执行在早期版本中的数据绑定。 在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following example uses the static <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> method to populate the fields of a <xref:System.Web.UI.WebControls.Repeater> control using an <xref:System.Collections.ArrayList> of `Product` objects. The <xref:System.Web.UI.DataBinder.Eval%2A> method could be applied with the same syntax, but it would not perform as quickly.  \n  \n This example uses a custom `Product` class which exposes a string `Model` property and a numeric `UnitPrice` property.  \n  \n [!code-vb[System.Web.UI.DataBinder#1](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_1.aspx)]\n [!code-cs[System.Web.UI.DataBinder#1](~/add/codesnippet/csharp/t-system.web.ui.databinder_1.aspx)]  \n  \n The following code is the custom `Product` class. This code should be included in a separate class file in the App_Code directory, such as Product.cs or Product.vb.  \n  \n [!code-cs[System.Web.UI.DataBinder#2](~/add/codesnippet/csharp/t-system.web.ui.databinder_2.cs)]\n [!code-vb[System.Web.UI.DataBinder#2](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_2.vb)]"
  syntax:
    content: public sealed class DataBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.DataBinder&quot;></xref>类。"
  syntax:
    content: public DataBinder ();
    parameters: []
  overload: System.Web.UI.DataBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否在运行时启用数据缓存。"
  syntax:
    content: public static bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果为启用了缓存<xref href=&quot;System.Web.UI.DataBinder&quot;></xref>类; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在运行时计算数据绑定表达式。"
  remarks: "值`expression`参数的计算结果必须为公共属性。       快速应用程序开发 (RAD) 如 Visual Studio 的设计器中创建数据绑定时，会自动调用此方法。 你还可用于它以声明方式简化强制转换为文本字符串。 若要执行此操作，请使用`<%#  %>`表达式语法，如标准 ASP.NET 数据绑定中使用。       数据绑定到模板列表中的控件时，此方法是特别有用。      1> [!NOTE]&1;> 由于此方法中执行后期绑定评估，使用反射在运行时，它会导致性能显著降低与标准 ASP.NET 数据绑定语法相比。       列表的任何 Web 控件，如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`应`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果你正在绑定页上，针对`container`应`Page`。       从.NET Framework 4.5 开始，你可以使用模型绑定来简化的一些任务你具有的用于执行在早期版本中的数据绑定。 在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_3_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_3_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_3_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_3_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_4.aspx)]"
  syntax:
    content: public static object Eval (object container, string expression);
    parameters:
    - id: container
      type: System.Object
      description: "对其计算该表达式中的对象引用。 这必须是有效的对象标识符中页面的指定语言。"
    - id: expression
      type: System.String
      description: "从的导航路径`container`到要放置在绑定的控件属性的公共属性值的对象。 这必须是用句点分隔，例如属性或字段名称的字符串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    return:
      type: System.Object
      description: "<xref:System.Object>实例通过数据绑定表达式的计算得出。</xref:System.Object>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或修整后为空字符串。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  id: Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在运行时计算数据绑定表达式和格式字符串形式的结果。"
  remarks: "值`expression`计算结果必须为公共属性。       有关.NET Framework 中的格式字符串的详细信息，请参阅[格式化类型](~/add/includes/ajax-current-ext-md.md)。       快速应用程序开发 (RAD) 如 Visual Studio 的设计器中创建数据绑定时，会自动调用此方法。 你可以还使用它以声明方式将转换<xref:System.Object>所产生的数据绑定表达式与一种<xref:System.String>。</xref:System.String> </xref:System.Object>  若要以声明方式使用该方法，使用`<%#   %>`表达式语法，如标准 ASP.NET 数据绑定中使用。       数据绑定到模板列表中的控件时，此方法是特别有用。      1> [!NOTE]&1;> 由于此方法中执行后期绑定评估，使用反射在运行时，它会导致性能显著降低与标准 ASP.NET 数据绑定语法相比。 请慎用此方法，尤其是在字符串格式设置不需要时。       列表的任何 Web 控件，如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`应`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果你正在绑定页上，针对`container`应`Page`。       从.NET Framework 4.5 开始，你可以使用模型绑定来简化的一些任务你具有的用于执行在早期版本中的数据绑定。 在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_2_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_2_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_2_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_2_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_4.aspx)]"
  syntax:
    content: public static string Eval (object container, string expression, string format);
    parameters:
    - id: container
      type: System.Object
      description: "对其计算该表达式中的对象引用。 这必须是有效的对象标识符中页面的指定语言。"
    - id: expression
      type: System.String
      description: "从的导航路径`container`到要放置在绑定的控件属性的公共属性值的对象。 这必须是用句点分隔，例如属性或字段名称的字符串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    - id: format
      type: System.String
      description: ".NET Framework 格式字符串 (如使用的那些&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;)，用于将转换<xref:System.Object>实例返回的数据绑定表达式<xref:System.String>对象。</xref:System.String> </xref:System.Object>"
    return:
      type: System.String
      description: "A<xref:System.String>结果从数据绑定表达式求值并将其转换为字符串类型的对象。</xref:System.String>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  id: GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索对象的声明的数据的项。"
  remarks: "此方法调用<xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>方法，忽略其`foundDataItem`参数返回结果时。</xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>       在两种方式之一中标识对象的数据项。 如果容器对象实现<xref:System.Web.UI.IDataItemContainer>接口，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>属性标识的数据项，并返回其值。</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 否则，该方法会尝试以解决并返回名为&quot;DataItem&quot;的容器属性。"
  syntax:
    content: public static object GetDataItem (object container);
    parameters:
    - id: container
      type: System.Object
      description: "对其计算该表达式中的对象引用。 这必须是有效的对象标识符中页面的指定语言。"
    return:
      type: System.Object
      description: "一个表示容器的声明的数据项的对象。 返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何数据项或容器的计算结果为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  id: GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索对象的声明的数据项，指示成功或失败。"
  remarks: "对象的数据项标识两种方法。 如果容器对象实现<xref:System.Web.UI.IDataItemContainer>接口，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>属性标识的数据项，并返回。</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 否则，该方法会尝试以解决并返回名为&quot;DataItem&quot;的容器属性。"
  syntax:
    content: public static object GetDataItem (object container, out bool foundDataItem);
    parameters:
    - id: container
      type: System.Object
      description: "对其计算该表达式中的对象引用。 这必须是有效的对象标识符中页面的指定语言。"
    - id: foundDataItem
      type: System.Boolean
      description: "一个布尔值，该值指示是否已成功解决并返回数据项目。 此参数传递时未经初始化。"
    return:
      type: System.Object
      description: "一个表示容器的声明的数据项的对象。 返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何数据项或容器的计算结果为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索指定的容器和导航路径的属性的值。"
  remarks: "值`expr`计算结果必须为公共属性。       列表的任何 Web 控件，如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`应`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果你正在绑定页上，针对`container`应`Page`。"
  syntax:
    content: public static object GetIndexedPropertyValue (object container, string expr);
    parameters:
    - id: container
      type: System.Object
      description: "对象引用依据`expr`计算。 这必须是有效的对象标识符中页的指定语言。"
    - id: expr
      type: System.String
      description: "从的导航路径`container`到要放置在绑定的控件属性的公共属性值的对象。 这必须是用句点分隔，例如属性或字段名称的字符串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    return:
      type: System.Object
      description: "一个对象，数据绑定表达式的计算得到的结果。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>expr</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>expr</code> is not a valid indexed expression.  \n  \n \\- or -  \n  \n <code>expr</code> does not allow indexed access."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索指定的容器中，指定的属性的值，然后设置结果的格式。"
  remarks: "GetIndexedPropertyValue 方法调用<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法，然后使用<xref:System.String.Format%2A?displayProperty=fullName>方法以设置中指定结果的格式`format`参数。</xref:System.String.Format%2A?displayProperty=fullName> </xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> .NET Framework 格式字符串 (如使用的那些<xref:System.String.Format%2A?displayProperty=fullName>) 将转换<xref:System.Object>实例返回的数据绑定表达式<xref:System.String>对象。</xref:System.String> </xref:System.Object> </xref:System.String.Format%2A?displayProperty=fullName>       对于引发的异常<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法将应用到 GetIndexedPropertyValue 方法也。</xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>"
  example:
  - "The following code example demonstrates how to use the GetIndexedPropertyValue method declaratively to bind to an indexed value.  \n  \n [!code-vb[Classic DataBinder.Eval Example#2](~/add/codesnippet/visualbasic/38557d34-9d41-4e37-9929-_1.aspx)]\n [!code-cs[Classic DataBinder.Eval Example#2](~/add/codesnippet/csharp/38557d34-9d41-4e37-9929-_1.aspx)]"
  syntax:
    content: public static string GetIndexedPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "对其计算该表达式中的对象引用。 这必须是有效的对象标识符中页的指定语言。"
    - id: propName
      type: System.String
      description: "包含要检索的值的属性的名称。"
    - id: format
      type: System.String
      description: "一个字符串，指定要在其中显示结果的格式。"
    return:
      type: System.String
      description: "指定的格式中的指定属性的值<code> format </code>。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索指定对象的指定属性的值。"
  remarks: "GetPropertyValue 方法用于检索对象中的属性的值。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static object GetPropertyValue (object container, string propName);
    parameters:
    - id: container
      type: System.Object
      description: "包含属性的对象。"
    - id: propName
      type: System.String
      description: "包含要检索的值的属性的名称。"
    return:
      type: System.Object
      description: "指定属性的值。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -<code>propName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;)。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "中的对象<code> container </code>没有指定的属性<code> propName </code>。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  id: GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索指定的对象的指定属性的值，然后设置结果的格式。"
  remarks: "此版本的 GetPropertyValue 方法用于检索和设置的对象中的属性值的格式。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static string GetPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "包含属性的对象。"
    - id: propName
      type: System.String
      description: "包含要检索的值的属性的名称。"
    - id: format
      type: System.String
      description: "一个字符串，指定要在其中显示结果的格式。"
    return:
      type: System.String
      description: "指定的格式中的指定属性的值<code> format </code>。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>propName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "中的对象<code> container </code>没有指定的属性<code> propName </code>。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否可以绑定指定的数据类型。"
  syntax:
    content: public static bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>表示测试的数据类型</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>对于类型，可以进行自动数据绑定控件; 中否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.IsBindableType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.DataBinder.#ctor
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
- uid: System.Web.UI.DataBinder.EnableCaching
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinder.#ctor*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder
  nameWithType: DataBinder.DataBinder
- uid: System.Web.UI.DataBinder.EnableCaching*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
- uid: System.Web.UI.DataBinder.Eval*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval
  nameWithType: DataBinder.Eval
- uid: System.Web.UI.DataBinder.GetDataItem*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem
  nameWithType: DataBinder.GetDataItem
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue
  nameWithType: DataBinder.GetIndexedPropertyValue
- uid: System.Web.UI.DataBinder.GetPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue
  nameWithType: DataBinder.GetPropertyValue
- uid: System.Web.UI.DataBinder.IsBindableType*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType
  nameWithType: DataBinder.IsBindableType
