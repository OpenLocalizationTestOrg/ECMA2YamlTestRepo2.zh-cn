### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditor
  id: ExpressionEditor
  children:
  - System.Web.UI.Design.ExpressionEditor.#ctor
  - System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
  type: Class
  summary: "定义一组用于在设计时和可供在表达式编辑器对话框中使用的表达式编辑器表可视化设计主机所关联的控件属性表达式进行求值的属性和方法。 此类为抽象类。"
  remarks: "可视化设计器主机，如[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]、 使用到存在新的自定义表达式编辑器工作表可对用户来说，ExpressionEditor 类，然后评估设计时呈现的所选的表达式。       当您浏览<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>设计时属性网格中的控件的属性，可视化设计器显示一个对话框，设置控件属性的表达式。</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 你可以选择基于表达式前缀的列表的表达式类型。 当从列表中选择表达式前缀时，可视化设计器将使用关联的 ExpressionEditor 和<xref:System.Web.UI.Design.ExpressionEditorSheet>对象，若要设置，评估和将基于该类型的表达式的语法的表达式字符串转换。</xref:System.Web.UI.Design.ExpressionEditorSheet> 可视化设计器设置关联的控件属性的表达式，，然后使用该计算的表达式的结果来指定控件在设计图面呈现的属性值。       静态<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法获取与特定表达式前缀或表达式生成器相关联的表达式编辑器。</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>ExpressionEditor 对象的属性返回的已配置的表达式的前缀。</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>方法计算输入的表达式字符串。</xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法返回<xref:System.Web.UI.Design.ExpressionEditorSheet>用于提示的表达式对话框中的自定义表达式属性的实现。</xref:System.Web.UI.Design.ExpressionEditorSheet> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>       通常情况下，若要在设计时支持新的表达式类型，你定义唯一的表达式前缀，并提供自定义<xref:System.Web.Compilation.ExpressionBuilder>和 ExpressionEditor 实现。</xref:System.Web.Compilation.ExpressionBuilder> 或者，您可以提供自定义<xref:System.Web.UI.Design.ExpressionEditorSheet>定义用于窗体中表达式对话框中的表达式的属性的实现。</xref:System.Web.UI.Design.ExpressionEditorSheet>       表达式前缀标识的自定义表达式类型，并将表达式与表达式生成器和表达式编辑器相关联。 当一页中分析的自定义表达式时，表达式前缀用于创建实例的关联<xref:System.Web.Compilation.ExpressionBuilder>和 ExpressionEditor 类。</xref:System.Web.Compilation.ExpressionBuilder> 若要将表达式前缀与表达式生成器和表达式编辑器相关联，将应用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>特性以自定义<xref:System.Web.Compilation.ExpressionBuilder>类并配置中的表达式生成器表达式前缀`expressionBuilders`Web 配置文件中的元素。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute> 前缀不是要求，但强烈建议。"
  example:
  - "The following code example demonstrates how to derive from the ExpressionEditor class to define a custom expression editor.  \n  \n [!code-cs[CustomExpressionEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.e_0_1.cs)]"
  syntax:
    content: public abstract class ExpressionEditor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>类。"
  remarks: "因为<xref:System.Web.UI.Design.ExpressionEditor>类为抽象类，你无法创建的实例<xref:System.Web.UI.Design.ExpressionEditor>类直接使用 ExpressionEditor 构造函数。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor>"
  syntax:
    content: protected ExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.ExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "计算表达式字符串，并提供的控件属性的设计时值。"
  remarks: "可视化设计器宿主使用 EvaluateExpression 方法计算表达式，并为关联的控件提供设计时值。       可视化设计器使用<xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName>方法，以便在设计时，分析表达式字符串，然后调用具有已分析的表达式数据的 EvaluateExpression 方法。</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> 可视化设计器使用该计算的表达式的结果来指定控件在设计图面呈现的属性值。"
  syntax:
    content: public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "要计算的表达式字符串。 表达式不包含表达式前缀。"
    - id: parseTimeData
      type: System.Object
      description: "包含用于评估的其他分析信息的对象`expression`。 这通常是由提供表达式生成器。"
    - id: propertyType
      type: System.Type
      description: "向其的控件属性的类型`expression`绑定。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序实现提供的设计器宿主，用于获取附加的设计时服务。"
    return:
      type: System.Object
      description: "如果表达式计算成功，则计算的表达式字符串所引用的对象否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "获取标识由表达式编辑器实现支持的表达式字符串的表达式前缀。"
  remarks: "表达式前缀标识的自定义表达式类型，并将表达式与表达式生成器和表达式编辑器相关联。 当一页中分析的自定义表达式时，表达式前缀用于创建实例的关联<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>类。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder> 若要将表达式前缀与表达式生成器和表达式编辑器相关联，将应用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>特性以自定义<xref:System.Web.Compilation.ExpressionBuilder>类并配置中的表达式生成器表达式前缀`expressionBuilders`Web 配置文件中的元素。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       通常情况下，派生的类不会覆盖 ExpressionPrefix 属性。 基<xref:System.Web.UI.Design.ExpressionEditor>类设置基于 ExpressionPrefix 值<xref:System.Web.Compilation.ExpressionPrefixAttribute>关联的属性<xref:System.Web.Compilation.ExpressionBuilder>对象。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.UI.Design.ExpressionEditor>"
  syntax:
    content: public string ExpressionPrefix { get; }
    return:
      type: System.String
      description: "一个字符串，表示前缀为派生自的类支持的表达式<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>; 否则为空字符串 (&quot;&quot;)，如果表达式编辑器不具有关联的表达式前缀。"
  overload: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  id: GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "返回<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>与指定的表达式前缀相关联的实现。"
  remarks: "使用静态<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法重载，可查找<xref:System.Web.UI.Design.ExpressionEditor>与特定表达式前缀或表达式生成器类型相关联的对象。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>       对于每个自定义表达式类型，表达式前缀标识关联的表达式生成器和表达式编辑器。 当一页中分析的自定义表达式时，表达式前缀用于创建实例的关联<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>类。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder>       若要将表达式前缀与表达式生成器和表达式编辑器相关联，将应用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>特性以自定义<xref:System.Web.Compilation.ExpressionBuilder>类并配置中的表达式生成器表达式前缀`expressionBuilders`Web 配置文件中的元素。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       若要查找表达式前缀，关联的表达式编辑器<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法枚举可用<xref:System.Web.Compilation.ExpressionBuilder>实现匹配的前缀。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.Compilation.ExpressionBuilder>实现可以用来配置`expressionBuilders`Web 配置文件节。</xref:System.Web.Compilation.ExpressionBuilder> 如果可用<xref:System.Web.Compilation.ExpressionBuilder>实现定义的表达式前缀，<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法返回在指定的类型<xref:System.Web.Compilation.ExpressionEditorAttribute>属性<xref:System.Web.Compilation.ExpressionBuilder>元数据。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionEditorAttribute> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "用于查找关联的表达式编辑器表达式前缀。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序实现提供的设计器宿主，用于获取附加的设计时服务。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>与相关联实现<code> expressionPrefix </code>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<code> expressionPrefix </code>未定义或不与关联<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  id: GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "返回<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>与指定的表达式生成器类型相关联的实现。"
  remarks: "使用静态<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>重载查找<xref:System.Web.UI.Design.ExpressionEditor>与特定表达式前缀或表达式生成器类型相关联的对象。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>       对于每个自定义表达式类型，表达式前缀标识关联的表达式生成器和表达式编辑器。 当一页中分析的自定义表达式时，表达式前缀用于创建实例的关联<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>类。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder>       若要将表达式前缀与表达式生成器和表达式编辑器相关联，将应用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>特性以自定义<xref:System.Web.Compilation.ExpressionBuilder>类并配置中的表达式生成器表达式前缀`expressionBuilders`Web 配置文件中的元素。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法枚举可用<xref:System.Web.Compilation.ExpressionBuilder>实现以定位`expressionBuilderType`。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.Compilation.ExpressionBuilder>实现可以用来配置`expressionBuilders`Web 配置文件节。</xref:System.Web.Compilation.ExpressionBuilder> 如果`expressionBuilderType`可用集中找到<xref:System.Web.Compilation.ExpressionBuilder>实现中，<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法返回在指定的类型<xref:System.Web.Compilation.ExpressionEditorAttribute>属性<xref:System.Web.Compilation.ExpressionBuilder>元数据。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionEditorAttribute> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);
    parameters:
    - id: expressionBuilderType
      type: System.Type
      description: "派生的表达式生成器类，用于查找关联的表达式编辑器的类型。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序实现提供的设计器宿主，用于获取附加的设计时服务。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>与相关联实现<code> expressionBuilderType </code>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<code> expressionBuilderType </code>找不到或具有没有关联<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expressionBuilderType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>serviceProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "返回与当前表达式编辑器相关联的表达式编辑器表。"
  remarks: "GetExpressionEditorSheet 方法返回<xref:System.Web.UI.Design.ExpressionEditorSheet>实现，用于定义合并以形成的自定义表达式的字符串。</xref:System.Web.UI.Design.ExpressionEditorSheet> 可视化设计器使用的表达式编辑器表为提示输入一个或多个合并的自定义表达式的字符串。 基类方法返回使用单个输入的字符串以形成的表达式的默认表达式编辑器表。 表达式编辑器表定义属性网格的表达式。 因此，表达式编辑器公开的属性变为可以为对话框框中的表达式定义的属性。       类派生自<xref:System.Web.UI.Design.ExpressionEditor>类 （可选） 可以重写的 GetExpressionEditorSheet 方法以提供自定义表达式编辑器表。</xref:System.Web.UI.Design.ExpressionEditor> 自定义表达式编辑器表可以允许多个属性，组合在一起构成表达式字符串的设计时输入。       例如，<xref:System.Web.UI.Design.ResourceExpressionEditor>类派生自<xref:System.Web.UI.Design.ExpressionEditor>类并提供了评估和在设计时将资源字符串引用的控件属性与相关联的实现。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ResourceExpressionEditor> <xref:System.Web.Compilation.ResourceExpressionBuilder>类是与表达式前缀关联`Resources`和<xref:System.Web.UI.Design.ResourceExpressionEditor>实现。</xref:System.Web.UI.Design.ResourceExpressionEditor> </xref:System.Web.Compilation.ResourceExpressionBuilder> <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>方法返回<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>，后者定义了窗体资源引用表达式的各个属性。</xref:System.Web.UI.Design.ResourceExpressionEditorSheet> </xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "设置控件属性，用于初始化表达式编辑器表的表达式字符串。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序实现提供的设计器宿主，用于获取附加的设计时服务。"
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref> ，它定义的自定义表达式属性。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditor.#ctor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor
  nameWithType: ExpressionEditor.GetExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: ExpressionEditor.GetExpressionEditorSheet
