### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceView
  id: LinqDataSourceView
  children:
  - System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  - System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  - System.Web.UI.WebControls.LinqDataSourceView.CanPage
  - System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.LinqDataSourceView.CanSort
  - System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  - System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  - System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  - System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  - System.Web.UI.WebControls.LinqDataSourceView.ContextType
  - System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  - System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  - System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceView.Deleted
  - System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Deleting
  - System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  - System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  - System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  - System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  - System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Inserted
  - System.Web.UI.WebControls.LinqDataSourceView.Inserting
  - System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.LinqDataSourceView.Selected
  - System.Web.UI.WebControls.LinqDataSourceView.Selecting
  - System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  - System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.LinqDataSourceView.TableName
  - System.Web.UI.WebControls.LinqDataSourceView.Updated
  - System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Updating
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  langs:
  - csharp
  name: LinqDataSourceView
  nameWithType: LinqDataSourceView
  fullName: System.Web.UI.WebControls.LinqDataSourceView
  type: Class
  summary: "支持<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件并提供用于数据绑定控件可以执行 LINQ 数据操作的接口。"
  remarks: "LinqDataSourceView 类主要用于数据绑定控件，而不是页的代码中的可编程对象使用。 页开发人员通常使用<xref:System.Web.UI.WebControls.LinqDataSource>控件与数据进行交互。</xref:System.Web.UI.WebControls.LinqDataSource>       ASP.NET 数据源控件包含一个或多个数据的列表，表示由数据源视图对象。 LinqDataSourceView 类扩展<xref:System.Web.UI.DataSourceView>类。</xref:System.Web.UI.DataSourceView> 它定义的功能<xref:System.Web.UI.WebControls.LinqDataSource>控件与其关联，且它实现的数据源控件的基本数据功能。</xref:System.Web.UI.WebControls.LinqDataSource> LinqDataSourceView 类实现<xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceView.Insert%2A>，和<xref:System.Web.UI.WebControls.LinqDataSourceView.Delete%2A>操作。</xref:System.Web.UI.WebControls.LinqDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> 它还实现排序、 筛选和管理保留在视图状态的设置。       尽管 LinqDataSourceView 对象不直接公开到页开发人员，许多其属性和方法可以访问通过<xref:System.Web.UI.WebControls.LinqDataSource>控件。</xref:System.Web.UI.WebControls.LinqDataSource> LinqDataSourceView 控件实现以下数据检索方法和事件，并将它们公开到页开发人员和其他调用方通过关联<xref:System.Web.UI.WebControls.LinqDataSource>控件:-<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource>      -<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Selecting>      -<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Selected>      -<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法。</xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>      -<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Updating>      -<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Updated>      -<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法。</xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>      -<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Inserting>      -<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Inserted>      -<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法。</xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>      -<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>      -<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleted>       您可以通过在检索数据进行排序<xref:System.Web.UI.WebControls.LinqDataSource>控件通过添加`OrderBy`子句。</xref:System.Web.UI.WebControls.LinqDataSource> 你可以通过设置提供 LinqDataSourceView 实例的排序表达式<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>方法。</xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 语法<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性是相同的语法<xref:System.Data.DataView.Sort%2A?displayProperty=fullName>属性。</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       LinqDataSourceView 控件实现<xref:System.Web.UI.IStateManager>接口并使用视图状态在页请求之间跟踪其状态。</xref:System.Web.UI.IStateManager> 实现<xref:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState%2A>属性和<xref:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState%2A>方法用于启用控件的视图状态跟踪。</xref:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState%2A> 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: 'public class LinqDataSourceView : System.Web.UI.WebControls.ContextDataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  - System.Web.UI.WebControls.QueryableDataSourceView
  - System.Web.UI.WebControls.ContextDataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.WebControls.ContextDataSourceView.Context
  - System.Web.UI.WebControls.ContextDataSourceView.DisposeContext
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySet
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySetName
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySetType
  - System.Web.UI.WebControls.ContextDataSourceView.EntityType
  - System.Web.UI.WebControls.ContextDataSourceView.EntityTypeName
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextCreated
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextCreating
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextDisposing
  - System.Web.UI.WebControls.ContextDataSourceView.GetDataObjectType(System.Type)
  - System.Web.UI.WebControls.ContextDataSourceView.GetEntitySetType
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateWhereClause
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoPage
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoSort
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildDeleteObject(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildInsertObject(System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildQuery(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildUpdateObjects(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.ClearOriginalValues
  - System.Web.UI.WebControls.QueryableDataSourceView.CreateQueryContext(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.EventSelected
  - System.Web.UI.WebControls.QueryableDataSourceView.EventSelecting
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecutePaging(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQuery(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQueryExpressions(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSorting(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.GetOriginalValues(System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.GroupBy
  - System.Web.UI.WebControls.QueryableDataSourceView.GroupByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.InsertParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryableDataSourceView.OnQueryCreated(System.Web.UI.WebControls.QueryCreatedEventArgs)
  - System.Web.UI.WebControls.QueryableDataSourceView.OnQueryParametersChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderBy
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsBy
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated
  - System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged
  - System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.SelectNew
  - System.Web.UI.WebControls.QueryableDataSourceView.SelectNewParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList,System.Func{System.ComponentModel.PropertyDescriptor,System.Boolean})
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.Where
  - System.Web.UI.WebControls.QueryableDataSourceView.WhereParameters
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: LinqDataSourceView(LinqDataSource,String,HttpContext)
  nameWithType: LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>类，设置指定<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件作为当前视图的所有者。"
  remarks: "将调用 LinqDataSourceView 构造函数<xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A>方法以返回具有指定的数据源视图的新实例`name`参数。</xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A> 只有一个<xref:System.Web.UI.WebControls.LinqDataSourceView>对象与之关联<xref:System.Web.UI.WebControls.LinqDataSource>控件一次。</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSourceView> 名称<xref:System.Web.UI.WebControls.LinqDataSourceView>对象始终是`DefaultView`，尽管此命名限制强加<xref:System.Web.UI.WebControls.LinqDataSource>控制，不通过<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSourceView> 您可以重写<xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A?displayProperty=fullName>方法以支持使用不同的命名约定的视图。</xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A?displayProperty=fullName>       <xref:System.Web.HttpContext>通过传递的实例`context`参数由来访问参数集合的数据源视图。</xref:System.Web.HttpContext>"
  syntax:
    content: public LinqDataSourceView (System.Web.UI.WebControls.LinqDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.LinqDataSource
      description: "数据源控件<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与之关联。"
    - id: name
      type: System.String
      description: "在拥有该数据源控件的范围内查看数据源的唯一名称。"
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;></xref>实例。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持删除操作。"
  remarks: "CanDelete 属性返回`true`如果<xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> 但是，删除操作仍失败如果关联的数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持插入操作。"
  remarks: "CanInsert 属性返回`true`如果<xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> 但是，插入操作仍失败如果关联的数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持对检索到的数据进行分页。"
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSourceView>对象始终支持分页，即使数据呈现控件不使用分页。</xref:System.Web.UI.WebControls.LinqDataSourceView> 当<xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>属性设置为`false`，您还可以手动页中的数据<xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>事件。</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持检索数据行，除了检索数据的总行数。"
  remarks: "数据绑定控件使用可分页来确定如何呈现分页控件的行的总数。 例如，此值用于确定多少数字页导航按钮在呈现<xref:System.Web.UI.WebControls.GridView>控制寻呼机。</xref:System.Web.UI.WebControls.GridView> 如果<xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>属性设置为`false`，你必须手动设置的总行数<xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>事件。</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持对检索数据的排序的视图。"
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSourceView>对象始终支持排序，即使数据呈现控件不使用排序。</xref:System.Web.UI.WebControls.LinqDataSourceView> 当<xref:System.Web.UI.WebControls.LinqDataSourceView.AutoSort%2A>属性设置为`false`，你可以手动对中的数据进行排序<xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>事件。</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoSort%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件支持更新操作。"
  remarks: "CanUpdate 属性返回的值<xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> 但是，更新操作仍失败如果关联的数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextCreated
  nameWithType: LinqDataSourceView.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "已创建上下文类型对象的实例后发生。"
  remarks: "如果你想要验证的数据上下文对象，或如果你想要处理上下文创建期间引发的异常处理此事件。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextCreating
  nameWithType: LinqDataSourceView.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "创建上下文类型对象的实例之前发生。"
  remarks: "如果你想要手动构造数据上下文对象，则处理此事件。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: LinqDataSourceView.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "在释放上下文类型对象之前发生。"
  remarks: "处理此事件来访问释放之前, 的上下文或执行清理该对象被销毁之前即特定于该对象。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取数据上下文类的类型。"
  syntax:
    content: public override Type ContextType { get; }
    return:
      type: System.Type
      description: "类型中指定的数据上下文类的<xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*>属性。</xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置包含的字段或属性中指定的数据上下文类的名称<xref:System.Web.UI.WebControls.LinqDataSourceView.TableName*>属性。</xref:System.Web.UI.WebControls.LinqDataSourceView.TableName*>"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 ContextTypeName 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=fullName>对象。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=fullName>       必须指定此属性，除非期间提供的查询数据<xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>事件，或除非过程中手动创建上下文<xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating> </xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>"
  syntax:
    content: public override string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "数据上下文类的名称。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  id: CreateContext(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CreateContext(Type)
  nameWithType: LinqDataSourceView.CreateContext(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "创建数据上下文类型的实例。"
  syntax:
    content: protected virtual object CreateContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "要创建的数据上下文的类型。"
    return:
      type: System.Object
      description: "数据上下文类型的实例。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  id: CreateContext(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CreateContext(DataSourceOperation)
  nameWithType: LinqDataSourceView.CreateContext(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(DataSourceOperation)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "创建使用指定的数据源操作的数据上下文类型的实例。"
  syntax:
    content: protected override System.Web.UI.WebControls.ContextDataSourceContextData CreateContext (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "要使用的数据源操作。"
    return:
      type: System.Web.UI.WebControls.ContextDataSourceContextData
      description: "数据上下文的实例。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: LinqDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "删除操作已完成时发生。"
  remarks: "处理此事件来捕获执行删除操作期间引发的异常或删除操作完成之后检查输出参数的值。 你可以检索来自的输出参数<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  id: DeleteDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DeleteDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "从表中删除数据对象。"
  syntax:
    content: protected virtual void DeleteDataObject (object dataContext, object table, object oldDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "要删除的对象的数据上下文。"
    - id: table
      type: System.Object
      description: "包含要删除的对象的表。"
    - id: oldDataObject
      type: System.Object
      description: "要删除的对象。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  id: DeleteObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DeleteObject(Object)
  nameWithType: LinqDataSourceView.DeleteObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "从表中删除数据对象。"
  syntax:
    content: protected override int DeleteObject (object oldEntity);
    parameters:
    - id: oldEntity
      type: System.Object
      description: "要删除的数据对象。"
    return:
      type: System.Int32
      description: "已删除的数据对象的数目。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: LinqDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "在删除操作之前发生。"
  remarks: "处理删除事件，以验证要删除、 更改的值早删除操作，也可以取消删除操作的对象。       有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  id: DisposeContext(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DisposeContext(Object)
  nameWithType: LinqDataSourceView.DisposeContext(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "释放的数据上下文。"
  syntax:
    content: protected override void DisposeContext (object dataContext);
    parameters:
    - id: dataContext
      type: System.Object
      description: "若要释放的数据上下文。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示数据源视图是否支持删除行。"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 EnableDelete 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据源视图，支持删除行;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示数据源视图是否支持添加新行。"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 EnableInsert 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果视图支持插入行;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  id: EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否跟踪对数据上下文对象的更改。"
  remarks: "有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=fullName>"
  syntax:
    content: public bool EnableObjectTracking { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据上下文对象跟踪的更改;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示数据源视图是否支持更新的行。"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 EnableUpdate 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果视图支持更新的行;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "使用指定的密钥和旧值执行删除操作。"
  remarks: "有关如何删除数据通过<xref:System.Web.UI.WebControls.LinqDataSource>控件，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29>方法的<xref:System.Web.UI.WebControls.LinqDataSource>类。</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> </xref:System.Web.UI.WebControls.LinqDataSource>"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "要删除的记录行键值。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "计算以检测数据冲突行值。"
    return:
      type: System.Int32
      description: "对象或从基础数据源已删除的行数。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: LinqDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "使用指定集合中的值执行插入操作。"
  remarks: "有关如何插入数据通过<xref:System.Web.UI.WebControls.LinqDataSource>控件，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29>方法的<xref:System.Web.UI.WebControls.LinqDataSource>类。</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> </xref:System.Web.UI.WebControls.LinqDataSource>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "要插入到数据源的行值。"
    return:
      type: System.Int32
      description: "对象或插入到数据源的行数。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "执行数据检索操作。"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "一个对象，用于请求对数据执行基本的数据检索操作。"
    return:
      type: System.Collections.IEnumerable
      description: "数据对象或行的列表。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "执行更新操作。"
  remarks: "有关如何更新数据通过<xref:System.Web.UI.WebControls.LinqDataSource>控件，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29>方法的<xref:System.Web.UI.WebControls.LinqDataSource>类。</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> </xref:System.Web.UI.WebControls.LinqDataSource>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "要更新的记录行键值。"
    - id: values
      type: System.Collections.IDictionary
      description: "要在数据源中更新的行值。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "行值，其计算结果以便检测到数据冲突。"
    return:
      type: System.Int32
      description: "已更新数据源中的行数。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  id: GetSource(System.Web.UI.WebControls.QueryContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: GetSource(QueryContext)
  nameWithType: LinqDataSourceView.GetSource(QueryContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetSource(QueryContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "返回要应用到查询的数据源。"
  syntax:
    content: protected override object GetSource (System.Web.UI.WebControls.QueryContext context);
    parameters:
    - id: context
      type: System.Web.UI.WebControls.QueryContext
      description: "要应用到查询的数据上下文。"
    return:
      type: System.Object
      description: "要应用到查询的数据源。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.GetSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  id: GetTableMemberInfo(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: GetTableMemberInfo(Type)
  nameWithType: LinqDataSourceView.GetTableMemberInfo(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "检索有关的数据集合的元数据。"
  syntax:
    content: protected virtual System.Reflection.MemberInfo GetTableMemberInfo (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "一个表示数据上下文类的对象。"
    return:
      type: System.Reflection.MemberInfo
      description: "包含的对象类型的数据集合的元数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  id: HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  nameWithType: LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "处理数据操作失败，正在创建数据对象时发生的任何异常。"
  syntax:
    content: protected override void HandleValidationErrors (System.Collections.Generic.IDictionary<string,Exception> errors, System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: errors
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "发生的系统生成的、 特定于字段的异常。"
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "数据操作引发异常的异常。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  id: InsertDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: InsertDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.InsertDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "表中插入数据对象。"
  syntax:
    content: protected virtual void InsertDataObject (object dataContext, object table, object newDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "对象的数据上下文。"
    - id: table
      type: System.Object
      description: "向其插入数据的表。"
    - id: newDataObject
      type: System.Object
      description: "要插入的对象。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: LinqDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "当插入操作已完成时发生。"
  remarks: "处理此事件来捕获在插入操作期间引发的异常，也可在插入操作完成后检查的值。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: LinqDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "在插入操作之前发生。"
  remarks: "处理插入事件，以验证要插入、 更改之前的插入操作的值也可以取消插入操作的对象。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  id: InsertObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: InsertObject(Object)
  nameWithType: LinqDataSourceView.InsertObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "将数据对象插入<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;></xref>对象。"
  syntax:
    content: protected override int InsertObject (object newEntity);
    parameters:
    - id: newEntity
      type: System.Object
      description: "要插入的数据对象。"
    return:
      type: System.Int32
      description: "插入到数据源视图的对象数。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.InsertObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextCreated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextCreated&quot;></xref>事件"
  syntax:
    content: protected virtual void OnContextCreated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  id: OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextCreating(LinqDataSourceContextEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextCreating&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnContextCreating (System.Web.UI.WebControls.LinqDataSourceContextEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  id: OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextDisposing(LinqDataSourceDisposeEventArgs)
  nameWithType: LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnContextDisposing (System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnDeleted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Deleted&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnDeleting(LinqDataSourceDeleteEventArgs)
  nameWithType: LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Deleting&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  id: OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnException(DynamicValidatorEventArgs)
  nameWithType: LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.DynamicData.IDynamicDataSource.Exception&quot;></xref>数据操作失败时的事件。"
  remarks: "动态数据框架使用 OnException 事件处理程序来更新数据时处理验证异常或将其插入数据。"
  syntax:
    content: protected virtual void OnException (System.Web.DynamicData.DynamicValidatorEventArgs e);
    parameters:
    - id: e
      type: System.Web.DynamicData.DynamicValidatorEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnInserted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Inserted&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件已完成插入操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  id: OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnInserting(LinqDataSourceInsertEventArgs)
  nameWithType: LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Inserting&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnSelected(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Selected&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件已完成数据检索操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelected 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnSelecting(LinqDataSourceSelectEventArgs)
  nameWithType: LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Selecting&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件将执行数据检索操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelecting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnUpdated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Updated&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件已完成更新操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnUpdating(LinqDataSourceUpdateEventArgs)
  nameWithType: LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Updating&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;></xref>控件将执行更新操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdating 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  id: ResetDataObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ResetDataObject(Object,Object)
  nameWithType: LinqDataSourceView.ResetDataObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "重置包含到其原始状态的数据的对象。"
  syntax:
    content: protected virtual void ResetDataObject (object table, object dataObject);
    parameters:
    - id: table
      type: System.Object
      description: "包含数据的表。"
    - id: dataObject
      type: System.Object
      description: "包含数据的原始状态的实体。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "从数据源检索数据。"
  remarks: "选择方法调用<xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29>方法，并传递`selectArgs`参数。</xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "一个对象，用于请求对数据执行基本的数据检索操作。"
    return:
      type: System.Collections.IEnumerable
      description: "数据行的列表。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: LinqDataSourceView.Selected
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "当数据检索操作已完成时发生。"
  remarks: "处理此事件来捕获中选择操作期间引发了异常，也可在完成操作后检查的值。 你可以检索从值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: LinqDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "数据检索操作前发生。"
  remarks: "处理选择事件以更改在数据检索操作过程中使用的值。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  id: StoreOriginalValues(System.Collections.IList)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: StoreOriginalValues(IList)
  nameWithType: LinqDataSourceView.StoreOriginalValues(IList)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(IList)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "将存储中的原始值<xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;></xref>中控件的视图状态的操作。"
  syntax:
    content: protected override void StoreOriginalValues (System.Collections.IList results);
    parameters:
    - id: results
      type: System.Collections.IList
      description: "结果<xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;></xref>操作。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示将视图状态中存储来自选择操作的原始值时删除或已启用更新操作。"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 StoreOriginalValuesInViewState 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>"
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果原始值保存在视图状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName
  id: TableName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: TableName
  nameWithType: LinqDataSourceView.TableName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.TableName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置属性或包含数据收集的数据上下文类的字段的名称。"
  remarks: "当你将设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性<xref:System.Web.UI.WebControls.LinqDataSource>控制，值也设置为的 TableName 属性<xref:System.Web.UI.WebControls.LinqDataSourceView>控件。</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>"
  syntax:
    content: public string TableName { get; set; }
    return:
      type: System.String
      description: "表示数据集合的属性名称。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.TableName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: LinqDataSourceView.Updated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "更新操作已完成时发生。"
  remarks: "处理更新事件以更新操作完成之后检查输出参数的值也可捕获更新操作期间引发的异常。 输出参数均可用从<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  id: UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: UpdateDataObject(Object,Object,Object,Object)
  nameWithType: LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "更新数据对象。"
  syntax:
    content: protected virtual void UpdateDataObject (object dataContext, object table, object oldDataObject, object newDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "要更新的数据上下文类。"
    - id: table
      type: System.Object
      description: "包含要更新的对象的数据集合。"
    - id: oldDataObject
      type: System.Object
      description: "要更新的对象。"
    - id: newDataObject
      type: System.Object
      description: "更新后的对象。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  id: UpdateObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: UpdateObject(Object,Object)
  nameWithType: LinqDataSourceView.UpdateObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "更新数据对象。"
  syntax:
    content: protected override int UpdateObject (object oldEntity, object newEntity);
    parameters:
    - id: oldEntity
      type: System.Object
      description: "要更新的对象。"
    - id: newEntity
      type: System.Object
      description: "要使用更新的新对象。"
    return:
      type: System.Int32
      description: "0 （零），如果更新是否成功，则为-1 如果更新失败。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: LinqDataSourceView.Updating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "在更新操作之前发生。"
  remarks: "处理更新事件以验证要更新、 更改的值早更新操作，也可以取消更新操作的对象。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=fullName>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  id: ValidateContextType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateContextType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateContextType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(Type,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "检查是否数据上下文类派生自<xref href=&quot;System.Data.Linq.DataContext&quot;> </xref>。"
  remarks: "中指定的类<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性必须派生自<xref:System.Data.Linq.DataContext>顺序来启用自动插入、 更新和删除操作的类。</xref:System.Data.Linq.DataContext> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>"
  syntax:
    content: protected virtual void ValidateContextType (Type contextType, bool selecting);
    parameters:
    - id: contextType
      type: System.Type
      description: "要验证的数据上下文类的类型。"
    - id: selecting
      type: System.Boolean
      description: "指定选择操作启动时是否已调用方法。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "正在执行插入、 更新或删除操作，并且数据上下文类不是派生自<xref href=&quot;System.Data.Linq.DataContext&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateDeleteSupported(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "验证存在条件执行删除操作。"
  remarks: "无法删除数据时<xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>属性包含的值以外`null`。</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateDeleteSupported (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "要删除的数据记录的键值的字典。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "一个字典，其中包含要删除的行值。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *1> 或<> *1> 属性包含的值。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  id: ValidateEditSupported
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateEditSupported()
  nameWithType: LinqDataSourceView.ValidateEditSupported()
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "验证存在条件执行编辑操作。"
  syntax:
    content: protected virtual void ValidateEditSupported ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "验证失败或已取消。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  id: ValidateInsertSupported(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateInsertSupported(IDictionary)
  nameWithType: LinqDataSourceView.ValidateInsertSupported(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "验证存在条件执行插入操作。"
  remarks: "无法插入数据时<xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>属性包含的值以外`null`。</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateInsertSupported (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "一个字典，其中包含要插入的行值。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *1> 或<> *1> 属性包含的值或<code> values </code>参数不包含任何项。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  id: ValidateTableType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateTableType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateTableType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(Type,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "检查是否表示数据表的类的类型为泛型类型。"
  syntax:
    content: protected virtual void ValidateTableType (Type tableType, bool selecting);
    parameters:
    - id: tableType
      type: System.Type
      description: "要验证的表类型。"
    - id: selecting
      type: System.Boolean
      description: "指定选择操作启动时是否已调用方法。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "表的类型不是泛型的。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "验证存在条件执行更新操作。"
  remarks: "无法更新数据时<xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>属性包含的值以外`null`。</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateUpdateSupported (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "要更新的数据记录的键值的字典。"
    - id: values
      type: System.Collections.IDictionary
      description: "一个字典，其中包含用于更新操作的新行值。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "一个字典，其中包含更新操作的旧行值。"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支持更新操作。"
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ContextDataSourceView
  isExternal: false
  name: System.Web.UI.WebControls.ContextDataSourceView
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: LinqDataSourceView(LinqDataSource,String,HttpContext)
  nameWithType: LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.LinqDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSource
  nameWithType: LinqDataSource
  fullName: System.Web.UI.WebControls.LinqDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanPage
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanSort
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextCreated
  nameWithType: LinqDataSourceView.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceStatusEventArgs>
  nameWithType: EventHandler<LinqDataSourceStatusEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
    name: LinqDataSourceStatusEventArgs
    nameWithType: LinqDataSourceStatusEventArgs
    fullName: LinqDataSourceStatusEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextCreating
  nameWithType: LinqDataSourceView.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceContextEventArgs>
  nameWithType: EventHandler<LinqDataSourceContextEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
    name: LinqDataSourceContextEventArgs
    nameWithType: LinqDataSourceContextEventArgs
    fullName: LinqDataSourceContextEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextDisposing
  nameWithType: LinqDataSourceView.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDisposeEventArgs>
  nameWithType: EventHandler<LinqDataSourceDisposeEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
    name: LinqDataSourceDisposeEventArgs
    nameWithType: LinqDataSourceDisposeEventArgs
    fullName: LinqDataSourceDisposeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext(Type)
  nameWithType: LinqDataSourceView.CreateContext(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext(DataSourceOperation)
  nameWithType: LinqDataSourceView.CreateContext(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(DataSourceOperation)
- uid: System.Web.UI.WebControls.ContextDataSourceContextData
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContextDataSourceContextData
  nameWithType: ContextDataSourceContextData
  fullName: System.Web.UI.WebControls.ContextDataSourceContextData
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: LinqDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleted
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteObject(Object)
  nameWithType: LinqDataSourceView.DeleteObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: LinqDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDeleteEventArgs>
  nameWithType: EventHandler<LinqDataSourceDeleteEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
    name: LinqDataSourceDeleteEventArgs
    nameWithType: LinqDataSourceDeleteEventArgs
    fullName: LinqDataSourceDeleteEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DisposeContext(Object)
  nameWithType: LinqDataSourceView.DisposeContext(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: LinqDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetSource(QueryContext)
  nameWithType: LinqDataSourceView.GetSource(QueryContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetSource(QueryContext)
- uid: System.Web.UI.WebControls.QueryContext
  parent: System.Web.UI.WebControls
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: System.Web.UI.WebControls.QueryContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetTableMemberInfo(Type)
  nameWithType: LinqDataSourceView.GetTableMemberInfo(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(Type)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  nameWithType: LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Exception>
  nameWithType: IDictionary<String,Exception>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.InsertDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: LinqDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserted
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: LinqDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceInsertEventArgs>
  nameWithType: EventHandler<LinqDataSourceInsertEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
    name: LinqDataSourceInsertEventArgs
    nameWithType: LinqDataSourceInsertEventArgs
    fullName: LinqDataSourceInsertEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertObject(Object)
  nameWithType: LinqDataSourceView.InsertObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreating(LinqDataSourceContextEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextDisposing(LinqDataSourceDisposeEventArgs)
  nameWithType: LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceDisposeEventArgs
  nameWithType: LinqDataSourceDisposeEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleting(LinqDataSourceDeleteEventArgs)
  nameWithType: LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnException(DynamicValidatorEventArgs)
  nameWithType: LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnException(DynamicValidatorEventArgs)
- uid: System.Web.DynamicData.DynamicValidatorEventArgs
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicValidatorEventArgs
  nameWithType: DynamicValidatorEventArgs
  fullName: System.Web.DynamicData.DynamicValidatorEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserting(LinqDataSourceInsertEventArgs)
  nameWithType: LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelected(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelecting(LinqDataSourceSelectEventArgs)
  nameWithType: LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceSelectEventArgs
  nameWithType: LinqDataSourceSelectEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdating(LinqDataSourceUpdateEventArgs)
  nameWithType: LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceUpdateEventArgs
  nameWithType: LinqDataSourceUpdateEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ResetDataObject(Object,Object)
  nameWithType: LinqDataSourceView.ResetDataObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selected
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Selected
  nameWithType: LinqDataSourceView.Selected
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selected
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: LinqDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceSelectEventArgs>
  nameWithType: EventHandler<LinqDataSourceSelectEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
    name: LinqDataSourceSelectEventArgs
    nameWithType: LinqDataSourceSelectEventArgs
    fullName: LinqDataSourceSelectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValues(IList)
  nameWithType: LinqDataSourceView.StoreOriginalValues(IList)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: TableName
  nameWithType: LinqDataSourceView.TableName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.TableName
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Updated
  nameWithType: LinqDataSourceView.Updated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updated
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateDataObject(Object,Object,Object,Object)
  nameWithType: LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateObject(Object,Object)
  nameWithType: LinqDataSourceView.UpdateObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Updating
  nameWithType: LinqDataSourceView.Updating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceUpdateEventArgs>
  nameWithType: EventHandler<LinqDataSourceUpdateEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
    name: LinqDataSourceUpdateEventArgs
    nameWithType: LinqDataSourceUpdateEventArgs
    fullName: LinqDataSourceUpdateEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateContextType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateContextType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(Type,Boolean)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateDeleteSupported(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateEditSupported()
  nameWithType: LinqDataSourceView.ValidateEditSupported()
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported()
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateInsertSupported(IDictionary)
  nameWithType: LinqDataSourceView.ValidateInsertSupported(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateTableType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateTableType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(Type,Boolean)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: LinqDataSourceView
  nameWithType: LinqDataSourceView.LinqDataSourceView
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext
  nameWithType: LinqDataSourceView.CreateContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteDataObject
  nameWithType: LinqDataSourceView.DeleteDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteObject
  nameWithType: LinqDataSourceView.DeleteObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DisposeContext
  nameWithType: LinqDataSourceView.DisposeContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: LinqDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: LinqDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: LinqDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: LinqDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetSource
  nameWithType: LinqDataSourceView.GetSource
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetTableMemberInfo
  nameWithType: LinqDataSourceView.GetTableMemberInfo
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: HandleValidationErrors
  nameWithType: LinqDataSourceView.HandleValidationErrors
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertDataObject
  nameWithType: LinqDataSourceView.InsertDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertObject
  nameWithType: LinqDataSourceView.InsertObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreated
  nameWithType: LinqDataSourceView.OnContextCreated
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreating
  nameWithType: LinqDataSourceView.OnContextCreating
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextDisposing
  nameWithType: LinqDataSourceView.OnContextDisposing
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: LinqDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: LinqDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnException
  nameWithType: LinqDataSourceView.OnException
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: LinqDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: LinqDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: LinqDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: LinqDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: LinqDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: LinqDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ResetDataObject
  nameWithType: LinqDataSourceView.ResetDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Select
  nameWithType: LinqDataSourceView.Select
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValues
  nameWithType: LinqDataSourceView.StoreOriginalValues
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: TableName
  nameWithType: LinqDataSourceView.TableName
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateDataObject
  nameWithType: LinqDataSourceView.UpdateDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateObject
  nameWithType: LinqDataSourceView.UpdateObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateContextType
  nameWithType: LinqDataSourceView.ValidateContextType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateDeleteSupported
  nameWithType: LinqDataSourceView.ValidateDeleteSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateEditSupported
  nameWithType: LinqDataSourceView.ValidateEditSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateInsertSupported
  nameWithType: LinqDataSourceView.ValidateInsertSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateTableType
  nameWithType: LinqDataSourceView.ValidateTableType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateUpdateSupported
  nameWithType: LinqDataSourceView.ValidateUpdateSupported
