### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsBase
  id: SettingsBase
  children:
  - System.Configuration.SettingsBase.#ctor
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Item(System.String)
  - System.Configuration.SettingsBase.Properties
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Save
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  langs:
  - csharp
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
  type: Class
  summary: "提供用于支持用户属性设置的基类。"
  remarks: "ASP.NET Web 窗体和 Windows 窗体这两个使用相同的配置设置基础结构来支持用户设置。 在 ASP.NET 中的用户设置通常称为 ASP.NET 配置文件。 设置基础结构包括 SettingsBase 基本类、<xref:System.Configuration.SettingsProperty>类、<xref:System.Configuration.SettingsPropertyValue>类、<xref:System.Configuration.SettingsContext>类、<xref:System.Configuration.SettingsProvider>类和<xref:System.Configuration.SettingAttribute>类。</xref:System.Configuration.SettingAttribute> </xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsContext> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>       设置基类提供仅用于定义和保留设置属性的公共基础结构。 根据这些基类的类派生的方式和其运行时环境，设置 API 可以提供不同的功能级别。 例如，ASP.NET 配置文件使用设置基类提供每个用户设置保存并加载根据请求语义。"
  syntax:
    content: public abstract class SettingsBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>类。"
  syntax:
    content: protected SettingsBase ();
    parameters: []
  overload: System.Configuration.SettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Context
  id: Context
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取关联的设置上下文。"
  remarks: "A<xref:System.Configuration.SettingsContext>应用程序用于提供提供程序可用于将保存设置的上下文信息。</xref:System.Configuration.SettingsContext>       每个设置类派生自<xref:System.Configuration.SettingsBase>具有与其关联的上下文</xref:System.Configuration.SettingsBase> 上下文传递给标识有关的其他信息的设置信息的设置提供程序。 上下文因此充当提示来帮助确定如何保留关联的设置值的设置提供程序。"
  syntax:
    content: public virtual System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>与设置实例关联。"
  overload: System.Configuration.SettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  id: Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化使用的内部属性<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>对象。"
  syntax:
    content: public void Initialize (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties, System.Configuration.SettingsProviderCollection providers);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "设置与属性相关的设置上下文。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "可从设置属性<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>实例。"
    - id: providers
      type: System.Configuration.SettingsProviderCollection
      description: "在加载和保存属性值时应使用初始化提供程序。"
  overload: System.Configuration.SettingsBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否同步对对象的访问 （线程安全）。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果访问<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>同步; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SettingsBase.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取或设置指定的设置属性的值。"
  remarks: "Item 属性，也称为的索引器，定期使用派生自<xref:System.Configuration.SettingsBase>.</xref:System.Configuration.SettingsBase>设置类中 Item 属性将绑定到相应的设置属性的类的公共属性。       第一次访问属性时，<xref:System.Configuration.SettingsBase>实例将会找到共享同一提供程序中作为请求的属性的所有其他属性。</xref:System.Configuration.SettingsBase> <xref:System.Configuration.SettingsBase>实例然后将调用提供程序，将其传递的一套<xref:System.Configuration.SettingsProperty>表示提供程序应检索的数据的对象。</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsBase>       请注意，将获取并设置属性数据以线程安全的方式，如果索引器<xref:System.Configuration.SettingsBase.IsSynchronized%2A>是`true`。</xref:System.Configuration.SettingsBase.IsSynchronized%2A> A<xref:System.Configuration.SettingsBase>实例默认情况下的不是线程安全。</xref:System.Configuration.SettingsBase> 但是，你可以调用<xref:System.Configuration.SettingsBase.Synchronized%2A>，并传入<xref:System.Configuration.SettingsBase>实例，使<xref:System.Configuration.SettingsBase>索引器运行以线程安全的方式。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase.Synchronized%2A>"
  syntax:
    content: public virtual object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>包含要访问的属性的名称。</xref:System.String>"
    return:
      type: System.Object
      description: "如果找到，命名的设置属性的值。"
  overload: System.Configuration.SettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "没有与当前对象，关联的属性或找不到指定的属性。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "尝试设置只读属性。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "提供的值与设置属性不兼容的类型是设置操作期间。"
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Properties
  id: Properties
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取设置属性的集合。"
  remarks: "`get`的 Properties 属性访问器返回的集合<xref:System.Configuration.SettingsProperty>与所管理的属性关联的实例<xref:System.Configuration.SettingsBase>实例。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsProperty>       <xref:System.Configuration.SettingsBase>类本身可以识别的设置，例如其名称、 属性类型、 设置提供程序、 默认值和只读状态和序列化首选项的某些特征。</xref:System.Configuration.SettingsBase> 这些特征镜像为<xref:System.Configuration.SettingsProperty>类</xref:System.Configuration.SettingsProperty>中的属性 所有其他特性的<xref:System.Configuration.SettingsProperty>类仅被传递到其关联的设置提供程序中作为一种<xref:System.Configuration.SettingsAttributeDictionary>。</xref:System.Configuration.SettingsAttributeDictionary> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>集合包含所有<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>对象。"
  overload: System.Configuration.SettingsBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取属性值设置的集合。"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "集合<xref href=&quot;System.Configuration.SettingsPropertyValue&quot;></xref>对象表示由管理的属性的实际数据值<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>实例。"
  overload: System.Configuration.SettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Providers
  id: Providers
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取设置提供程序的集合。"
  syntax:
    content: public virtual System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref>包含<xref href=&quot;System.Configuration.SettingsProvider&quot;></xref>对象。"
  overload: System.Configuration.SettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Save
  id: Save
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "存储设置属性的当前值。"
  remarks: "<xref:System.Configuration.SettingsBase>实例分组基于提供程序与每个属性关联的属性。</xref:System.Configuration.SettingsBase> 每个提供程序，然后在序列中调用且传递的提供程序应保存的属性集。"
  syntax:
    content: public virtual void Save ();
    parameters: []
  overload: System.Configuration.SettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  id: Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "提供<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>类，它是同步 （线程安全）。"
  remarks: "索引器将 get 和 set 属性数据以线程安全的方式，如果<xref:System.Configuration.SettingsBase.IsSynchronized%2A>属性设置为`true`。</xref:System.Configuration.SettingsBase.IsSynchronized%2A>  A<xref:System.Configuration.SettingsBase>实例默认情况下的不是线程安全。</xref:System.Configuration.SettingsBase>  但是，你可以调用传入的已同步<xref:System.Configuration.SettingsBase>实例，使<xref:System.Configuration.SettingsBase>索引器运行以线程安全的方式。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase>"
  syntax:
    content: public static System.Configuration.SettingsBase Synchronized (System.Configuration.SettingsBase settingsBase);
    parameters:
    - id: settingsBase
      type: System.Configuration.SettingsBase
      description: "用于支持用户属性设置的类。"
    return:
      type: System.Configuration.SettingsBase
      description: "A <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref>同步的类。"
  overload: System.Configuration.SettingsBase.Synchronized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.SettingsBase.#ctor
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
- uid: System.Configuration.SettingsBase.Context
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.SettingsBase.IsSynchronized
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsBase.Item(System.String)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsBase.Properties
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsBase.Providers
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
- uid: System.Configuration.SettingsBase
  parent: System.Configuration
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
- uid: System.Configuration.SettingsBase.#ctor*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase.SettingsBase
- uid: System.Configuration.SettingsBase.Context*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
- uid: System.Configuration.SettingsBase.Initialize*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize
  nameWithType: SettingsBase.Initialize
- uid: System.Configuration.SettingsBase.IsSynchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
- uid: System.Configuration.SettingsBase.Item*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item
  nameWithType: SettingsBase.Item
- uid: System.Configuration.SettingsBase.Properties*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
- uid: System.Configuration.SettingsBase.Providers*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save
  nameWithType: SettingsBase.Save
- uid: System.Configuration.SettingsBase.Synchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized
  nameWithType: SettingsBase.Synchronized
