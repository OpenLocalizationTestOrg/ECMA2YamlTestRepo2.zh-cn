### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffect
  id: BitmapEffect
  children:
  - System.Windows.Media.Effects.BitmapEffect.#ctor
  - System.Windows.Media.Effects.BitmapEffect.Clone
  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
  type: Class
  summary: "**注意︰ 此 API 现已过时。** 未过时的替代方法是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。       定义位图效果。 派生的类定义可应用于的效果<xref href=&quot;System.Windows.Media.Visual&quot;></xref>对象，如<xref href=&quot;System.Windows.Controls.Button&quot;></xref>或<xref href=&quot;System.Windows.Controls.Image&quot;> </xref>。"
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]位图效果都是呈现的软件。 应用效果任何对象也将在软件中呈现。 不应将位图效果应用于大型视觉对象或动画，，因为这样做会降低性能。      1> [!CAUTION]&1;> 位图效果不支持部分信任的执行。 应用程序必须具有完全信任权限以使用位图效果。       应用效果之前，缩放转换将应用到视觉对象。 发生非统一的缩放转换时效果将使用较大的缩放值。       更新的可视化树<xref:System.Windows.Media.VisualBrush>BitmapEffect 画笔的父链中是否将不会传播。</xref:System.Windows.Media.VisualBrush> 可以在所带来的影响的父对象上强制场景的更新来解决此限制。 你可以调用<xref:System.Windows.UIElement.InvalidateVisual%2A>或包含一个动画，若要强制场景更新。</xref:System.Windows.UIElement.InvalidateVisual%2A>       自定义效果继承此类，以创建非托管的效果的托管的接口。 有关详细信息，请参阅[非托管 BitmapEffect](https://msdn.microsoft.com/library/ms735092.aspx) API。"
  syntax:
    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;></xref>类。"
  syntax:
    content: protected BitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;></xref>对象，从而深度复制此对象的当前值。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  id: CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "创建的句柄[IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16)用于初始化自定义效果的对象。"
  remarks: "通过处理与自定义效果 framework 交互[IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16)对象。 使用自定义效果通过初始化的外部效果<xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>方法。</xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>"
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the CreateBitmapEffectOuter method to retrieve a wrapper effect object.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "句柄[IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16)对象。"
  overload: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "当在派生类中重写，创建非托管的效果的克隆。"
  remarks: ''
  example:
  - "The following example demonstrates an override of the CreateUnmanagedEffect method.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "非托管的效果克隆句柄。"
  overload: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "返回<xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref>中时得到时该效果将应用到指定<xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>。"
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);
    parameters:
    - id: input
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "要应用到这些效果的输入。"
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "<xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref>效果应用到的输入。"
  overload: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "初始化[IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx)句柄通过<xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>与给定[IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx)。</xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>"
  remarks: ''
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the InitializeBitmapEffect method to initialize the wrapper object with the custom effect.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);
    parameters:
    - id: outerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "初始化外部 IMILBitmapEffect 包装器。"
    - id: innerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "内部 IMILBitmapEffectPrimitive。"
  overload: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "将指定的属性设置为给定的值。"
  remarks: "此方法旨在作为<xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>一个帮助器方法 当你重写<xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>，SetValue 用于更新非托管的属性值。</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>"
  syntax:
    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);
    parameters:
    - id: effect
      type: System.Runtime.InteropServices.SafeHandle
      description: "包含要更改的属性的效果句柄。"
    - id: propertyName
      type: System.String
      description: "要更改的属性名称。"
    - id: value
      type: System.Object
      description: "要用于设置属性的值。"
  overload: System.Windows.Media.Effects.BitmapEffect.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "当在派生类中重写，更新所带来的影响的非托管属性的属性状态。"
  remarks: "当设置此方法的重写中的非托管的属性，使用的帮助器方法<xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>"
  syntax:
    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "包含要更新的属性的效果句柄。"
  overload: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BitmapEffect.Clone
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter
  nameWithType: BitmapEffect.CreateBitmapEffectOuter
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput
  nameWithType: BitmapEffect.GetOutput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect
  nameWithType: BitmapEffect.InitializeBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue
  nameWithType: BitmapEffect.SetValue
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState
