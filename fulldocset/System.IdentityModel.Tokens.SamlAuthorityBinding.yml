### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding
  id: SamlAuthorityBinding
  children:
  - System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor
  - System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)
  - System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind
  - System.IdentityModel.Tokens.SamlAuthorityBinding.Binding
  - System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly
  - System.IdentityModel.Tokens.SamlAuthorityBinding.Location
  - System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly
  - System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlAuthorityBinding
  nameWithType: SamlAuthorityBinding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding
  type: Class
  summary: "指定如何检索有关主题的其他信息<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌。"
  remarks: "使用 SamlAuthorityBinding 类可指定如何检索有关已验证主题中的其他信息<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.SamlSecurityToken> <xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌使用指定其声明 SAML 断言，可以指定何时对主题进行身份验证。</xref:System.IdentityModel.Tokens.SamlSecurityToken> SAML 断言中的声明由 SAML 语句表示。 SAML 规范定义了一组 SAML 语句类型和其中一个是一种<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>。</xref:System.IdentityModel.Tokens.SamlAuthenticationStatement> <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>断言在特定时间以特定方式进行身份验证语句的主题。</xref:System.IdentityModel.Tokens.SamlAuthenticationStatement> <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>还具有可选的 SamlAuthorityBinding，它指定如何检索经过身份验证的使用者有关的其他信息。</xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>       使用<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.Location%2A>， <xref:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind%2A>，和<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding%2A>属性，以检索已验证主题的附加信息。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding%2A> </xref:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind%2A> </xref:System.IdentityModel.Tokens.SamlAuthorityBinding.Location%2A>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public class SamlAuthorityBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: SamlAuthorityBinding()
  nameWithType: SamlAuthorityBinding.SamlAuthorityBinding()
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.SamlAuthorityBinding()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlAuthorityBinding&quot;></xref>类。"
  syntax:
    content: public SamlAuthorityBinding ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)
  id: '#ctor(System.Xml.XmlQualifiedName,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: SamlAuthorityBinding(XmlQualifiedName,String,String)
  nameWithType: SamlAuthorityBinding.SamlAuthorityBinding(XmlQualifiedName,String,String)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.SamlAuthorityBinding(XmlQualifiedName,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlAuthorityBinding&quot;></xref>类使用指定的查询类型、 协议绑定和 SAML 授权机构位置。"
  syntax:
    content: public SamlAuthorityBinding (System.Xml.XmlQualifiedName authorityKind, string binding, string location);
    parameters:
    - id: authorityKind
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示具有主题附加信息的 SAML 授权机构响应的查询的类型。</xref:System.Xml.XmlQualifiedName>"
    - id: binding
      type: System.String
      description: "一个 URI 引用，标识与具有主题附加信息的 SAML 授权机构通信时使用的 SAML 协议绑定。"
    - id: location
      type: System.String
      description: "一个 URI 引用，描述如何找到并与具有主题附加信息的 SAML 授权机构进行通信。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind
  id: AuthorityKind
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: AuthorityKind
  nameWithType: SamlAuthorityBinding.AuthorityKind
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置具有主题附加信息的 SAML 授权机构响应的查询的类型。"
  remarks: "AuthorityKind 属性对应于`AuthorityKind`属性`<AuthorityBinding>`元素，如 OASIS SAML 规范中的断言和协议定义。"
  syntax:
    content: public System.Xml.XmlQualifiedName AuthorityKind { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示具有主题附加信息的 SAML 授权机构响应的查询的类型。</xref:System.Xml.XmlQualifiedName>"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AuthorityKind 属性设置和<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "AuthorityKind 属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding
  id: Binding
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: Binding
  nameWithType: SamlAuthorityBinding.Binding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置与具有主题附加信息的附加信息的 SAML 授权机构通信时使用的 SAML 协议绑定。"
  remarks: "绑定属性对应于`Binding`属性`<AuthorityBinding>`OASIS SAML 规范中的断言和协议定义的元素。"
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "一个 URI 引用，标识与具有主题附加信息的附加信息的 SAML 授权机构通信时使用的 SAML 协议绑定。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "绑定属性设置和<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "绑定属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlAuthorityBinding.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示此实例的属性是否只读的。"
  remarks: "若要使此实例的<xref:System.IdentityModel.Tokens.SamlAuthorityBinding>类只读的调用<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly%2A>方法。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SamlAuthorityBinding>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例的属性是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Location
  id: Location
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: Location
  nameWithType: SamlAuthorityBinding.Location
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.Location
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置如何找到并与具有主题附加信息的附加信息的 SAML 授权机构进行通信。"
  remarks: "位置属性对应于`Location`属性`<AuthorityBinding>`OASIS SAML 规范中的断言和协议定义的元素。"
  syntax:
    content: public string Location { get; set; }
    return:
      type: System.String
      description: "一个 URI 引用，描述如何找到并与具有主题附加信息的 SAML 授权机构进行通信。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.Location*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "设置位置属性和<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "位置属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlAuthorityBinding.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将此实例设置为只读的。"
  remarks: "当调用 MakeReadOnly 方法时，<xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly%2A>属性设置为`true`。</xref:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly%2A>"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAuthorityBinding.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "读取<xref uid=&quot;langword_csharp_&lt;AuthorityBinding&gt;&quot; name=&quot;&lt;AuthorityBinding&gt;&quot; href=&quot;&quot;></xref>从指定的 XML 读取器的元素。"
  syntax:
    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A<xref:System.Xml.XmlDictionaryReader>读取<xref uid=&quot;langword_csharp_&lt;AuthorityBinding&gt;&quot; name=&quot;&lt;AuthorityBinding&gt;&quot; href=&quot;&quot;></xref>元素。</xref:System.Xml.XmlDictionaryReader>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> ，它能够读取 SAML 规范中定义的 XML 元素中 SAML 断言。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>读取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>的数字签名的子句。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，确定创建了数字签名的安全令牌。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlSerializer</code> is<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<xref uid=&quot;langword_csharp_&lt;AuthorityBinding&gt;&quot; name=&quot;&lt;AuthorityBinding&gt;&quot; href=&quot;&quot;> </xref>元素不具有之一<xref uid=&quot;langword_csharp_AuthorityKind&quot; name=&quot;AuthorityKind&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref>，或<xref uid=&quot;langword_csharp_Binding&quot; name=&quot;Binding&quot; href=&quot;&quot;></xref>属性。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAuthorityBinding.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入<xref uid=&quot;langword_csharp_&lt;AuthorityBinding&gt;&quot; name=&quot;&lt;AuthorityBinding&gt;&quot; href=&quot;&quot;></xref>元素插入指定的 XML 序列化程序。"
  syntax:
    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A<xref:System.Xml.XmlDictionaryWriter>编写<xref uid=&quot;langword_csharp_&lt;AuthorityBinding&gt;&quot; name=&quot;&lt;AuthorityBinding&gt;&quot; href=&quot;&quot;></xref>元素。</xref:System.Xml.XmlDictionaryWriter>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> ，它能够写入 SAML 规范中定义的 SAML 断言中的 XML 元素。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> ，它能够写入<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句。"
  overload: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlSerializer</code> is<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: SamlAuthorityBinding()
  nameWithType: SamlAuthorityBinding.SamlAuthorityBinding()
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.SamlAuthorityBinding()
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: SamlAuthorityBinding(XmlQualifiedName,String,String)
  nameWithType: SamlAuthorityBinding.SamlAuthorityBinding(XmlQualifiedName,String,String)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.SamlAuthorityBinding(XmlQualifiedName,String,String)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: AuthorityKind
  nameWithType: SamlAuthorityBinding.AuthorityKind
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: Binding
  nameWithType: SamlAuthorityBinding.Binding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAuthorityBinding.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Location
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: Location
  nameWithType: SamlAuthorityBinding.Location
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.Location
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlAuthorityBinding.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAuthorityBinding.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAuthorityBinding.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: SamlAuthorityBinding
  nameWithType: SamlAuthorityBinding.SamlAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: AuthorityKind
  nameWithType: SamlAuthorityBinding.AuthorityKind
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Binding*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: Binding
  nameWithType: SamlAuthorityBinding.Binding
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAuthorityBinding.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.Location*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: Location
  nameWithType: SamlAuthorityBinding.Location
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlAuthorityBinding.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: ReadXml
  nameWithType: SamlAuthorityBinding.ReadXml
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml*
  parent: System.IdentityModel.Tokens.SamlAuthorityBinding
  isExternal: false
  name: WriteXml
  nameWithType: SamlAuthorityBinding.WriteXml
