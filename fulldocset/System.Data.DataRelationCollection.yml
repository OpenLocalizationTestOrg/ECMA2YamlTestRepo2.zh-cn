### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelationCollection
  id: DataRelationCollection
  children:
  - System.Data.DataRelationCollection.#ctor
  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Clear
  - System.Data.DataRelationCollection.CollectionChanged
  - System.Data.DataRelationCollection.Contains(System.String)
  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  - System.Data.DataRelationCollection.GetDataSet
  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  - System.Data.DataRelationCollection.IndexOf(System.String)
  - System.Data.DataRelationCollection.Item(System.Int32)
  - System.Data.DataRelationCollection.Item(System.String)
  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Remove(System.String)
  - System.Data.DataRelationCollection.RemoveAt(System.Int32)
  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  langs:
  - csharp
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
  type: Class
  summary: "表示的集合<xref href=&quot;System.Data.DataRelation&quot;></xref>对象的<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  remarks: "DataRelationCollection 对象启用之间相关的父/子导航<xref:System.Data.DataTable>对象。</xref:System.Data.DataTable>       通过定义为下列任一工具的属性创建 DataRelationCollection 对象<xref:System.Data.DataSet>或<xref:System.Data.DataTable>，而不是直接使用的构造函数。</xref:System.Data.DataTable> </xref:System.Data.DataSet> (使用<xref:System.Data.DataSet.Relations%2A>属性<xref:System.Data.DataSet>，或<xref:System.Data.DataTable.ParentRelations%2A>属性<xref:System.Data.DataTable>。)</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>     若要访问的集合，使用<xref:System.Data.DataSet.Relations%2A>属性<xref:System.Data.DataSet>对象。</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       只要集合存在可以管理使用方法类似于包含的对象<xref:System.Data.DataRelationCollection.Add%2A>， <xref:System.Data.DataRelationCollection.Clear%2A>，和<xref:System.Data.DataRelationCollection.Remove%2A>。</xref:System.Data.DataRelationCollection.Remove%2A> </xref:System.Data.DataRelationCollection.Clear%2A> </xref:System.Data.DataRelationCollection.Add%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRelationCollection.#ctor
  id: '#ctor'
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.DataRelationCollection&quot;></xref>类。"
  syntax:
    content: protected DataRelationCollection ();
    parameters: []
  overload: System.Data.DataRelationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  id: Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a <xref href=&quot;System.Data.DataRelation&quot;></xref> to the <xref href=&quot;System.Data.DataRelationCollection&quot;></xref>."
  remarks: "如果关系已成功添加到该集合，<xref:System.Data.DataRelationCollection.CollectionChanged>事件发生。</xref:System.Data.DataRelationCollection.CollectionChanged>       当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public void Add (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>要添加到集合。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code>参数为 null 值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "关系都已属于该集合，或属于另一个集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中已存在具有指定名称的关系。 （比较不区分大小写。）"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "创建以来，该关系已进入无效状态。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>使用指定的父和子列，并将其添加到集合。"
  remarks: "当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "关系的父列。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "关系的子列。"
    return:
      type: System.Data.DataRelation
      description: "创建的关系。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>的指定的父和子列，并将其添加到集合。"
  remarks: "当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "关系的父列。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "关系的子列。"
    return:
      type: System.Data.DataRelation
      description: "创建的关系。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code>自变量为 null 值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "关系都已属于该集合，或属于另一个集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中已存在具有相同名称的关系。 （比较不区分大小写。）"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "创建以来，该关系已进入无效状态。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>具有指定的名称和父和子列，并将其添加到集合。"
  remarks: "当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: name
      type: System.String
      description: "该关系的名称。"
    - id: parentColumn
      type: System.Data.DataColumn
      description: "关系的父列。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "关系的子列。"
    return:
      type: System.Data.DataRelation
      description: "创建的关系。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>具有指定的名称和数组的父和子列，并将其添加到集合。"
  remarks: "如果关系已成功添加到该集合，<xref:System.Data.DataRelationCollection.CollectionChanged>事件发生。</xref:System.Data.DataRelationCollection.CollectionChanged>       当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  example:
  - >-
    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]
     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: name
      type: System.String
      description: "名称<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;></xref>创建。"
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "父数组<xref href=&quot;System.Data.DataColumn&quot;></xref>对象。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "子数组<xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;></xref>对象。"
    return:
      type: System.Data.DataRelation
      description: "创建<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "关系名称为 null 值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "关系都已属于该集合，或属于另一个集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中已存在具有相同名称的关系。 （比较不区分大小写。）"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "创建以来，该关系已进入无效状态。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>具有指定名称、 父级和子级列，具有可选约束的值根据<code> createConstraints </code>参数，并将其添加到集合。"
  remarks: "当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation> 若要防止此情况，可以设置`createConstraints`为 false。"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "该关系的名称。"
    - id: parentColumn
      type: System.Data.DataColumn
      description: "关系的父列。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "关系的子列。"
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建约束;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 (默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)。"
    return:
      type: System.Data.DataRelation
      description: "创建的关系。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建<xref href=&quot;System.Data.DataRelation&quot;></xref>与指定的名称、 父级和子级列和值，该值指定是否创建一个约束，约束的数组并将其添加到集合。"
  remarks: "当<xref:System.Data.DataRelation>对象添加到集合，<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>对象创建默认情况下，如果不存在。</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "名称<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;></xref>创建。"
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "父数组<xref href=&quot;System.Data.DataColumn&quot;></xref>对象。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "子数组<xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;></xref>对象。"
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>创建约束;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Data.DataRelation
      description: "创建的关系。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "关系名称为 null 值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "关系都已属于该集合，或属于另一个集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中已存在具有相同名称的关系。 （比较不区分大小写。）"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "创建以来，该关系已进入无效状态。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  id: AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "对表执行验证。"
  syntax:
    content: protected virtual void AddCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "要检查的关系。"
  overload: System.Data.DataRelationCollection.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "该关系为 null。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "关系都已属于该集合，或属于另一个集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中已存在具有相同名称的关系。 （比较不区分大小写。）"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  id: AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "将指定的元素复制<xref href=&quot;System.Data.DataRelation&quot;></xref>到集合末尾的数组。"
  remarks: "如果<xref:System.Data.DataSet.BeginInit%2A>已调用`AddRange`不将任何对象添加到集合中，直到<xref:System.Data.DataSet.EndInit%2A>称为。</xref:System.Data.DataSet.EndInit%2A> </xref:System.Data.DataSet.BeginInit%2A> 时，`EndInit`是调用，该集合将使用最新的调用中指定的项方式进行填充`AddRange`。 如果`AddRange`多次调用中`BeginInit`  /  `EndInit`仅对最新的调用中指定这些项排序`AddRange`添加。"
  example:
  - >-
    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]
     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]
  syntax:
    content: public virtual void AddRange (System.Data.DataRelation[] relations);
    parameters:
    - id: relations
      type: System.Data.DataRelation[]
      description: "数组<xref href=&quot;System.Data.DataRelation&quot;></xref>要添加到集合的对象。"
  overload: System.Data.DataRelationCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  id: CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "验证是否指定<xref href=&quot;System.Data.DataRelation&quot;></xref>可以从集合中移除。"
  syntax:
    content: public virtual bool CanRemove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "要对其执行检查的关系。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataRelation&quot;></xref>可删除; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataRelationCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Clear
  id: Clear
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "清除集合的所有关系。"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Data.DataRelationCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "当集合更改时发生。"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "验证是否<xref href=&quot;System.Data.DataRelation&quot;></xref>与特定的名称 （不区分大小写） 存在于集合中。"
  syntax:
    content: public virtual bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "要查找的关系的名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果存在具有指定名称的关系;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataRelationCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  id: CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "将集合复制<xref href=&quot;System.Data.DataRelation&quot;></xref>对象指定索引处开始。"
  syntax:
    content: public void CopyTo (System.Data.DataRelation[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRelation[]
      description: "数组<xref href=&quot;System.Data.DataRelation&quot;></xref>对象复制到的集合。"
    - id: index
      type: System.Int32
      description: "要从开始的索引。"
  overload: System.Data.DataRelationCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.GetDataSet
  id: GetDataSet
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "此方法支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: protected abstract System.Data.DataSet GetDataSet ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "引用数据集。"
  overload: System.Data.DataRelationCollection.GetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  id: IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取指定的索引<xref href=&quot;System.Data.DataRelation&quot;></xref>对象。"
  syntax:
    content: public virtual int IndexOf (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "要搜索的关系。"
    return:
      type: System.Int32
      description: "该关系，则为-1 如果集合中找不到该关系基于 0 的索引。"
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取的索引<xref href=&quot;System.Data.DataRelation&quot;></xref>由名称指定。"
  syntax:
    content: public virtual int IndexOf (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "要查找的关系的名称。"
    return:
      type: System.Int32
      description: "包含指定的名称，则为-1 如果集合中不存在关系的关系的从零开始的索引。"
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取<xref href=&quot;System.Data.DataRelation&quot;></xref>的指定索引处的对象。"
  syntax:
    content: public abstract System.Data.DataRelation this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "要查找的从零开始索引。"
    return:
      type: System.Data.DataRelation
      description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref>，如果值为 null 或指定<xref href=&quot;System.Data.DataRelation&quot;></xref>不存在。"
  overload: System.Data.DataRelationCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "索引值大于集合中的项的数目。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取<xref href=&quot;System.Data.DataRelation&quot;></xref>由名称指定的对象。"
  syntax:
    content: public abstract System.Data.DataRelation this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "要查找的关系的名称。"
    return:
      type: System.Data.DataRelation
      description: "命名<xref href=&quot;System.Data.DataRelation&quot;> </xref>，如果值为 null 或指定<xref href=&quot;System.Data.DataRelation&quot;></xref>不存在。"
  overload: System.Data.DataRelationCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "引发<xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;></xref>事件。"
  remarks: '引发事件时，将调用事件处理程序，通过委托。 有关概述，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。'
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Data.DataRelationCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "引发<xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;></xref>事件。"
  remarks: '引发事件时，将调用事件处理程序，通过委托。 有关概述，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。'
  syntax:
    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Data.DataRelationCollection.OnCollectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  id: Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "从集合中移除指定的关系。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>如果删除操作成功，激发事件。</xref:System.Data.DataRelationCollection.CollectionChanged> 请注意，删除关系时，不会删除任何关联的约束对象。"
  syntax:
    content: public void Remove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "要移除的关系。"
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "关系为 null 值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "该关系不属于集合。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "从集合中移除具有指定名称的关系。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>如果删除操作成功，激发事件。</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "要删除的关系的名称。"
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "集合没有具有指定名称的关系。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "从集合中移除指定索引处的关系。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>如果删除操作成功，激发事件。</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要删除的关系的索引。"
  overload: System.Data.DataRelationCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "集合不具有指定索引处的关系。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  id: RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "对指定将执行验证<xref href=&quot;System.Data.DataRelation&quot;></xref>对象。"
  syntax:
    content: protected virtual void RemoveCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>要验证对象。"
  overload: System.Data.DataRelationCollection.RemoveCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "集合不具有指定索引处的关系。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的关系不属于此集合中，或属于另一个集合。"
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRelationCollection.#ctor
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
- uid: System.Data.DataRelation[]
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation[]
  spec.csharp:
  - uid: System.Data.DataRelation
    name: DataRelation
    nameWithType: DataRelation
    fullName: DataRelation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
- uid: System.Data.DataRelationCollection.Clear
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
- uid: System.Data.DataRelationCollection.CollectionChanged
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataRelationCollection.Contains(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRelationCollection.GetDataSet
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
- uid: System.Data.DataRelationCollection.Item(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
- uid: System.Data.DataRelationCollection.Remove(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
- uid: System.Data.DataRelationCollection.#ctor*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection.DataRelationCollection
- uid: System.Data.DataRelationCollection.Add*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add
  nameWithType: DataRelationCollection.Add
- uid: System.Data.DataRelationCollection.AddCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore
  nameWithType: DataRelationCollection.AddCore
- uid: System.Data.DataRelationCollection.AddRange*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange
  nameWithType: DataRelationCollection.AddRange
- uid: System.Data.DataRelationCollection.CanRemove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataRelationCollection.CanRemove
- uid: System.Data.DataRelationCollection.Clear*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear
  nameWithType: DataRelationCollection.Clear
- uid: System.Data.DataRelationCollection.Contains*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains
  nameWithType: DataRelationCollection.Contains
- uid: System.Data.DataRelationCollection.CopyTo*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRelationCollection.CopyTo
- uid: System.Data.DataRelationCollection.GetDataSet*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet
  nameWithType: DataRelationCollection.GetDataSet
- uid: System.Data.DataRelationCollection.IndexOf*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRelationCollection.IndexOf
- uid: System.Data.DataRelationCollection.Item*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item
  nameWithType: DataRelationCollection.Item
- uid: System.Data.DataRelationCollection.OnCollectionChanged*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataRelationCollection.OnCollectionChanged
- uid: System.Data.DataRelationCollection.OnCollectionChanging*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging
  nameWithType: DataRelationCollection.OnCollectionChanging
- uid: System.Data.DataRelationCollection.Remove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove
  nameWithType: DataRelationCollection.Remove
- uid: System.Data.DataRelationCollection.RemoveAt*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRelationCollection.RemoveAt
- uid: System.Data.DataRelationCollection.RemoveCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore
  nameWithType: DataRelationCollection.RemoveCore
