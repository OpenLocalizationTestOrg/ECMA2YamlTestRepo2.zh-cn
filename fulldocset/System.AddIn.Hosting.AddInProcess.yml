### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInProcess
  id: AddInProcess
  children:
  - System.AddIn.Hosting.AddInProcess.#ctor
  - System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  - System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  - System.AddIn.Hosting.AddInProcess.KeepAlive
  - System.AddIn.Hosting.AddInProcess.Platform
  - System.AddIn.Hosting.AddInProcess.ProcessId
  - System.AddIn.Hosting.AddInProcess.Shutdown
  - System.AddIn.Hosting.AddInProcess.ShuttingDown
  - System.AddIn.Hosting.AddInProcess.Start
  - System.AddIn.Hosting.AddInProcess.StartupTimeout
  langs:
  - csharp
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
  type: Class
  summary: "从主机应用程序中运行外接程序扩展的过程中提供外部进程。"
  remarks: "若要激活外接程序在外部进程，请将 AddInProcess 对象传递给相应<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName>方法重载。</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName>       从随 Windows 目录下.NET Framework 一起安装的两个文件之一获取外接程序运行的可执行文件。 默认情况下，使用与主机应用程序每字位数相匹配的可执行文件。 如果主机是 64 位进程，则会运行 AddInProcess.exe;否则，运行 AddInProcess32.exe。 若要指定选择可执行文件的方式，使用<xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>构造函数来创建 AddInProcess 对象。</xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>"
  example:
  - "The following example activates an add-in in an external process.  \n  \n [!code-vb[AddInP3Host#10](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#10)]\n [!code-cs[AddInP3Host#10](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#10)]"
  syntax:
    content: public sealed class AddInProcess
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  id: '#ctor'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess()
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "初始化的新实例<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>类。"
  remarks: "此构造函数具有相同的效果与使用<xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>具有构造函数<xref:System.AddIn.Hosting.Platform?displayProperty=fullName>标志，以指定外接程序运行的进程将具有与主机进程相同-每字位数。</xref:System.AddIn.Hosting.Platform?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>"
  syntax:
    content: public AddInProcess ();
    parameters: []
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  id: '#ctor(System.AddIn.Hosting.Platform)'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess(Platform)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "初始化的新实例<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>类，指定在其中外接程序运行的进程每字位数。"
  remarks: "下表显示如何`platform`影响在不同操作系统上的进程每字位数: | |32 位操作系统 |&64; 位操作系统 |  |-|------------------------------|------------------------------|  |主机 |&32; 位 |与主机进程相同 |  |AnyCPU |&32; 位 |&64; 位 |  |X86 |&32; 位 |&32; 位 |  |X64 |引发异常 |&64; 位 |"
  syntax:
    content: public AddInProcess (System.AddIn.Hosting.Platform platform);
    parameters:
    - id: platform
      type: System.AddIn.Hosting.Platform
      description: "一个值，指定的外接程序运行的进程每字位数。"
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "找不到可执行文件 （AddInProcess.exe 或 AddInProcess32.exe） 的路径的注册表项。       -或者-未提供可执行文件。"
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  id: IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取一个值，该值指示是否当前<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>对象表示主机应用程序进程。"
  remarks: "如果此属性的值是`true`外, 接程序是过程与主机应用程序。 在这种情况下，使用<xref:System.AddIn.Hosting.AddInProcess.Start%2A>或<xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A>方法将引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> </xref:System.AddIn.Hosting.AddInProcess.Start%2A>      1> [!NOTE]&1;><xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName>属性返回<xref:System.AddIn.Hosting.AddInProcess>表示主机应用程序进程，如果外接程序正在运行进程内的对象。</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName>"
  example:
  - "The following example activates an add-in in an external process and uses the IsCurrentProcess property to determine whether the add-in is in the same process as the host application process.  \n  \n [!code-vb[AddInP3Host#10](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#10)]\n [!code-cs[AddInP3Host#10](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#10)]"
  syntax:
    content: public bool IsCurrentProcess { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>对象都对应于当前进程; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  id: KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: System.AddIn.Hosting.AddInProcess.KeepAlive
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取或设置一个值，该值指示是否使该外部进程保持活动状态。"
  remarks: "将此属性设置为`false`后关闭的最后一个外接程序在过程主动地关闭该外部进程。"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该外部进程应保持活动状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Hosting.AddInProcess.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Platform
  id: Platform
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: System.AddIn.Hosting.AddInProcess.Platform
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取在其中运行的进程外外接程序的进程每字位数。"
  remarks: "时，将设置每字位数<xref:System.AddIn.Hosting.AddInProcess>对象会初始化，并不能更改。</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public System.AddIn.Hosting.Platform Platform { get; }
    return:
      type: System.AddIn.Hosting.Platform
      description: "每字位数的外接程序运行的进程。"
  overload: System.AddIn.Hosting.AddInProcess.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  id: ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: System.AddIn.Hosting.AddInProcess.ProcessId
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取该外部进程的进程 ID。"
  remarks: "使用此属性进行调试。"
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: "进程 ID 或如果该外部进程尚未启动的-1。"
  overload: System.AddIn.Hosting.AddInProcess.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: System.AddIn.Hosting.AddInProcess.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "强制关闭该外部进程。"
  syntax:
    content: public bool Shutdown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该外部进程已运行，并且关闭成功的情况下;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>与存在处于不活动状态如果关联进程<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref>。"
  overload: System.AddIn.Hosting.AddInProcess.Shutdown*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "外接程序是过程与主机应用程序。 启动和停止该过程仅允许使用外部进程，不适用于主机进程。"
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  id: ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: System.AddIn.Hosting.AddInProcess.ShuttingDown
  type: Event
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "通过所表示的进程时发生<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>对象即将关闭。"
  syntax:
    content: public event EventHandler<System.ComponentModel.CancelEventArgs> ShuttingDown;
    return:
      type: System.EventHandler{System.ComponentModel.CancelEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Start
  id: Start
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: System.AddIn.Hosting.AddInProcess.Start()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "启动外部进程。"
  syntax:
    content: public bool Start ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功启动进程;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果该进程已运行。"
  overload: System.AddIn.Hosting.AddInProcess.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "外接程序是过程与主机应用程序。 启动和停止该过程仅允许使用外部进程，不适用于主机进程。"
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  id: StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: System.AddIn.Hosting.AddInProcess.StartupTimeout
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取或设置要启动的进程的允许的秒数。"
  remarks: "默认值为 10 秒。 此属性通常在调试期间，用于增加的进程外外接程序运行的进程的启动时间。"
  syntax:
    content: public TimeSpan StartupTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "若要允许进程启动的秒数。"
  overload: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该进程已运行。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "所赋的值小于 0 （零）。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess()
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess(Platform)
- uid: System.AddIn.Hosting.Platform
  parent: System.AddIn.Hosting
  isExternal: false
  name: Platform
  nameWithType: Platform
  fullName: System.AddIn.Hosting.Platform
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: System.AddIn.Hosting.AddInProcess.KeepAlive
- uid: System.AddIn.Hosting.AddInProcess.Platform
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: System.AddIn.Hosting.AddInProcess.Platform
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: System.AddIn.Hosting.AddInProcess.ProcessId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: System.AddIn.Hosting.AddInProcess.Shutdown()
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: System.AddIn.Hosting.AddInProcess.ShuttingDown
- uid: System.EventHandler{System.ComponentModel.CancelEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CancelEventArgs>
  nameWithType: EventHandler<CancelEventArgs>
  fullName: System.EventHandler<System.ComponentModel.CancelEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.CancelEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    nameWithType: CancelEventArgs
    fullName: CancelEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInProcess.Start
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: System.AddIn.Hosting.AddInProcess.Start()
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: System.AddIn.Hosting.AddInProcess.StartupTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AddIn.Hosting.AddInProcess.#ctor*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess.AddInProcess
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
- uid: System.AddIn.Hosting.AddInProcess.Platform*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
- uid: System.AddIn.Hosting.AddInProcess.ProcessId*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
- uid: System.AddIn.Hosting.AddInProcess.Shutdown*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown
  nameWithType: AddInProcess.Shutdown
- uid: System.AddIn.Hosting.AddInProcess.Start*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start
  nameWithType: AddInProcess.Start
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
