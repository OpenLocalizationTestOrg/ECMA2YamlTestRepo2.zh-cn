### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "表示使用 ASP.NET 动态数据功能的数据绑定控件中显示的数据字段。"
  remarks: "本主题中:-[简介](#introduction)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 DynamicField 类使用的数据绑定控件，如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控件，以显示一个字段值，在自定义页中使用 ASP.NET 动态数据功能。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             DynamicField 类提供类似于<xref:System.Web.UI.WebControls.BoundField>类</xref:System.Web.UI.WebControls.BoundField>的功能 但是，由于 DynamicField 对象使用动态数据应用程序中，你可以充分利用以下动态数据功能:-自动呈现字段的相应控件通过使用字段模板，基于数据类型。 可以为整个应用程序全局修改的字段模板。      -提供基于数据库架构的内置数据验证。 你还可以通过自定义数据模型添加验证类型。      -自定义数据呈现单个字段通过使用数据模型中的属性或使用<xref:System.Web.DynamicData.DynamicField.UIHint%2A>属性。</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       DynamicField 对象使用的呈现每个字段`DynamicControl`控件。 若要指定要显示 DynamicField 对象中显示的数据字段，设置<xref:System.Web.DynamicData.DynamicField.DataField%2A>对字段名称的属性。</xref:System.Web.DynamicData.DynamicField.DataField%2A> 你可以通过设置自定义格式设置字符串应用于该字段值<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>属性。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 默认情况下的格式设置字符串被应用于字段值中，仅当数据绑定控件处于只读模式。 若要将格式设置字符串应用于值显示数据绑定控件处于编辑模式时，将设置<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 如果字段值是`null`，你可以通过设置显示的自定义标题<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>属性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> DynamicField 对象可以还自动将转换为空字符串 (&quot;&quot;) 通过设置字段值为 null 值<xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>属性`true`。</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新实例<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.DynamicData.DynamicField>类</xref:System.Web.DynamicData.DynamicField>的新实例 此构造函数通常用时将字段添加到的动态创建的数据绑定控件。       动态地添加<xref:System.Web.DynamicData.DynamicField>对象转换为数据绑定控件，创建一个新<xref:System.Web.DynamicData.DynamicField>对象、 设置其属性，并将其添加到数据绑定控件的字段集合。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> 例如，如果你使用<xref:System.Web.UI.WebControls.GridView>控件中，添加<xref:System.Web.DynamicData.DynamicField>对象传递给<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 动态，你可以将字段添加到的数据绑定控件中，尽管强烈建议该字段是静态声明，然后显示或隐藏，根据需要。 静态声明所有你字段会减小父数据绑定控件的视图状态的大小。"
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，该值指示是否带格式的字符串指定通过<xref:System.Web.DynamicData.DynamicField.DataFormatString*>数据字段处于编辑模式时，将属性应用于字段值。</xref:System.Web.DynamicData.DynamicField.DataFormatString*>"
  remarks: "数据绑定控件 (如<xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.GridView>) 具有不同的显示模式，允许用户读取、 编辑或插入记录。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 默认情况下，通过将指定的格式设置字符串<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>仅在数据绑定控件是否处于只读模式时，将属性应用于字段值。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 若要应用到数据绑定控件处于编辑模式时显示的值的格式设置字符串，请将 ApplyFormatInEditMode 属性设置为`true`。      1> [!NOTE]&1;> A<xref:System.Web.DynamicData.DynamicField>对象不会自动删除格式设置的数据源中更新字段时。</xref:System.Web.DynamicData.DynamicField> 如果您不希望的格式存储的值的一部分，你将需要删除格式设置以编程方式。"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>适用处于编辑模式格式设置; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>对象此<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象与之关联。"
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "元列中。"
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "提供一种机制来修改<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>对象由<xref:System.Web.DynamicData.DynamicField.InitializeCell*>方法。</xref:System.Web.DynamicData.DynamicField.InitializeCell*>"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "要修改的控件。"
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，该值指示是否将空字符串值 (&quot;&quot;) 在数据源中更新数据字段时自动转换为 null 值。"
  remarks: "有时用户可能为字段值更新或插入记录时输入空字符串。 ConvertEmptyStringToNull 属性用于指定是否为空字符串值自动转换为 null 时数据源中更新数据字段。       默认情况下，<xref:System.Web.DynamicData.DynamicField>对象可显示 null 值为空字符串。</xref:System.Web.DynamicData.DynamicField> 若要显示不同的值，设置<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>属性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.Parameter>的数据源对象控制父控件的<xref:System.Web.DynamicData.DynamicField>绑定对象还具有一个名为<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>属性</xref:System.Web.DynamicData.DynamicField></xref:System.Web.UI.WebControls.Parameter> 此属性执行相同的功能。 请确保这两个属性正确设置。"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将空字符串值自动转换为 null 值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "将当前的属性复制<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>到指定的对象<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>对象。"
  remarks: "CopyProperties 方法是一个帮助器方法。 它由<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>方法复制当前的属性<xref:System.Web.DynamicData.DynamicField>对象传递给<xref:System.Web.DynamicData.DynamicField>中传递的对象`newField`参数。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>以复制当前属性<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>到。"
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "提供用于派生自的类的机制<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>重写如何<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>创建对象。"
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "一个新的动态控件。"
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "创建并返回的新实例<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>类。"
  remarks: "CreateField 方法是一个帮助器方法。 它由<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>方法来创建一个空<xref:System.Web.DynamicData.DynamicField>对象。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新实例<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>类。"
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置要绑定的数据字段的名称<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
  remarks: "DataField 属性用于指定要绑定到的数据字段<xref:System.Web.DynamicData.DynamicField>对象。</xref:System.Web.DynamicData.DynamicField> 数据字段可以是列名称的或为外键列，关系名称。       默认情况下，指定的数据字段显示通过<xref:System.Web.DynamicData.DynamicField>对象使用与字段数据类型相关联的字段模板。</xref:System.Web.DynamicData.DynamicField> 你可以更改通过设置呈现数据字段的字段模板<xref:System.Web.DynamicData.DynamicField.UIHint%2A>属性。</xref:System.Web.DynamicData.DynamicField.UIHint%2A> 你还可以设置显示的文本格式通过设置<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>属性。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 如果字段值是`null`，空字符串 (&quot;&quot;) 默认情况下为该值显示。 若要指定备用的标题，请设置<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>属性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>       **请注意**你想要全局更改显示和数据字段的行为，则你必须应用到你的数据模型，而不是将此值设置的特定实例中的特性<xref:System.Web.DynamicData.DynamicField>对象。</xref:System.Web.DynamicData.DynamicField> 有关详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>调用方法来引发 DataField 属性设置时的状态更改事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       属性是数据字段的值存储在视图状态。"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "数据的名称字段<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象绑定到。"
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置指定数据字段的值的显示格式的字符串。"
  remarks: "使用数据属性来指定中显示的值的自定义显示格式<xref:System.Web.DynamicData.DynamicField>对象。</xref:System.Web.DynamicData.DynamicField> 如果未设置数据属性，而无需任何特殊格式设置显示的字段值。       默认情况下，格式设置字符串应用于该字段值仅当包含数据绑定控件时，才<xref:System.Web.DynamicData.DynamicField>对象处于只读模式。</xref:System.Web.DynamicData.DynamicField> 若要应用于处于编辑模式下时该字段值的格式设置字符串，设置<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>       你指定使用数据属性的显示格式是类的特定于此实例<xref:System.Web.DynamicData.DynamicField>类。</xref:System.Web.DynamicData.DynamicField> 你还可以更改数据字段的显示格式跨整个应用程序通过应用<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>到数据模型，并设置<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>名为构造函数中的参数。</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 有关详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "一个格式设置字符串，指定数据字段的值的显示格式。 默认值为空字符串 (&quot;&quot;)，表示尚无特殊格式设置应用到的值。"
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "从当前表单元格提取数据字段的值并将值添加到指定的字典。"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "将保存的单元格值字典。"
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "包含文本或控件的单元格<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "指定行状态的枚举值之一。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括在只读字段的值`dictionary`; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "检索指定的属性值。"
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "要获取的属性的键。"
    return:
      type: System.String
      description: "属性的值。"
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置包含的数据绑定控件的标头中显示的文本<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
  remarks: "使用 HeaderText 属性用来标识的数据绑定控件中的字段的友好名称。 HeaderText 属性的最常见的应用程序是提供有意义的列名中的数据字段<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DetailsView>控件。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       默认情况下，HeaderText 属性使用通过设置数据字段的显示名称<xref:System.ComponentModel.DisplayNameAttribute>属性。</xref:System.ComponentModel.DisplayNameAttribute> 如果未设置的显示名称，HeaderText 属性使用的值<xref:System.Web.DynamicData.DynamicField.DataField%2A>属性。</xref:System.Web.DynamicData.DynamicField.DataField%2A>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "包含的数据绑定控件的标头中显示的文本<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>对象位于未绑定到实现一个数据源控件的数据绑定控件<xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;></xref>接口。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，该值指示数据字段值是否经过 HTML 编码之前它们将显示在<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
  remarks: "HtmlEncode 属性用于指定字段值是否经过 HTML 编码，为其各自的字符串表示形式之间实现才会显示它们。      1> [!NOTE]&1;> HTML 编码的字段值有助于防止跨站点脚本攻击，恶意内容显示。 只要有可能，应启用此属性。 有关详细信息，请参阅[脚本利用概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字段值进行 HTML 编码才会显示它们;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "到指定的单元格控件或将文本添加。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "包含文本或控件的对象<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "指定的函数的枚举值之一`cell`对象。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "指定行状态的枚举值之一。"
    - id: rowIndex
      type: System.Int32
      description: "行的索引，`cell`对象包含在。"
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置字段值时为数据字段显示的标题<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  remarks: "有时字段值存储为 null 的数据源中。 你可以指定要用于通过设置 NullDisplayText 属性具有 null 值的数据字段显示的自定义标题。 如果未设置此属性，null 字段值显示为空字符串 (&quot;&quot;)。"
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "字段值时为数据字段显示的标题<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取动态字段的只读状态。"
  remarks: "如果 ReadOnly 属性为`true`、<xref:System.Web.DynamicData.DynamicField>控件加载只读的模板。</xref:System.Web.DynamicData.DynamicField> 此属性要求启用视图状态。"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "动态字段的只读状态。"
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "设置与关联的特性<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象。"
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "要设置的属性名称。"
    - id: value
      type: System.String
      description: "特性值。"
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置数据字段使用由数据源进行排序时将使用的排序表达式。"
  remarks: "尝试使用的值 SortExpression 属性<xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>与关联的列对象的属性<xref:System.Web.DynamicData.DynamicField>对象通过设置<xref:System.Web.DynamicData.DynamicField.DataField%2A>属性。</xref:System.Web.DynamicData.DynamicField.DataField%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>调用方法来引发 SortExpression 属性设置时的状态更改事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       属性是 sortexpression 结果的值存储在视图状态。"
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "当数据字段用于排序的数据源时使用的排序表达式。"
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>对象位于未绑定到实现一个数据源控件的数据绑定控件<xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;></xref>接口。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置要用于显示数据字段的字段模板。"
  remarks: "UIHint 属性用于指定要用于显示数据字段的 UI 的字段模板。 默认情况下的字段模板为用户控件，其名称中包含为后缀，以确定用于编辑操作和插入操作的字段模板。 后缀分别为 _edit 和 _insert。 当为 UIHint 属性设置值时，你将设置不带后缀的名称。 动态数据将标识数据字段的当前模式，并且呈现正确的字段模板。       如果未设置 UIHint 属性，默认情况下动态数据将导致基于字段类型的字段模板。 有关详细信息，请参阅[ASP.NET 动态数据基架](~/add/includes/ajax-current-ext-md.md)。       你指定使用 UIHint 属性的字段模板是类的特定于此实例<xref:System.Web.DynamicData.DynamicField>类。</xref:System.Web.DynamicData.DynamicField> 你还可以更改通过应用跨整个应用程序使用的数据字段的字段模板<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>与你的数据模型。</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 设置 UIHint 属性重写应用到数据模型的元数据。 有关元数据特性的详细信息，请参阅[ASP.NET 动态数据](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>调用方法来引发 UIHint 属性设置时的状态更改事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       属性是 UIHint 的值存储在视图状态。"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "要用于显示数据字段的字段模板的名称。"
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置一个值，指定该控件是否验证客户端输入。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件在验证客户端输入;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取<xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>对象此<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>对象与之关联。</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "此验证控件所属的验证组名称。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
