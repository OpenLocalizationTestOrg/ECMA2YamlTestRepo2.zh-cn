### YamlMime:ManagedReference
items:
- uid: System.Web.XmlSiteMapProvider
  id: XmlSiteMapProvider
  children:
  - System.Web.XmlSiteMapProvider.#ctor
  - System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)
  - System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)
  - System.Web.XmlSiteMapProvider.BuildSiteMap
  - System.Web.XmlSiteMapProvider.Clear
  - System.Web.XmlSiteMapProvider.CurrentNode
  - System.Web.XmlSiteMapProvider.Dispose
  - System.Web.XmlSiteMapProvider.Dispose(System.Boolean)
  - System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)
  - System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)
  - System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)
  - System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)
  - System.Web.XmlSiteMapProvider.GetRootNodeCore
  - System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)
  - System.Web.XmlSiteMapProvider.RemoveProvider(System.String)
  - System.Web.XmlSiteMapProvider.RootNode
  langs:
  - csharp
  name: XmlSiteMapProvider
  nameWithType: XmlSiteMapProvider
  fullName: System.Web.XmlSiteMapProvider
  type: Class
  summary: "XmlSiteMapProvider 类派生自<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>类，这是 ASP.NET 的默认 site 映射提供程序。 XmlSiteMapProvider 类从 XML 文件，而文件名称扩展.sitemap 生成站点映射树。"
  remarks: "XmlSiteMapProvider 类从遵循已知的架构的 XML 文件加载站点地图数据。 站点地图数据受`<siteMap>`标记，并用组成嵌套`<siteMapNode>`标记。 两个约束所规定的<xref:System.Web.SiteMapProvider>和 XmlSiteMapProvider 类结构的站点将数据映射:-只有一个根节点可以存在。</xref:System.Web.SiteMapProvider>      -为<xref:System.Web.SiteMapNode>指定 Url，Url 必须是唯一的提供程序作用域内的对象。</xref:System.Web.SiteMapNode> （对于不指定 Url 的节点，所有键必须都是唯一的。）     下面的代码示例演示可与 XmlSiteMapProvider 一起使用的 XML 文件的示例。      ```   <siteMap>     <siteMapNode title=&quot;RootNode&quot; description=&quot;This is the root node of the site map. There can be only one root node.&quot; url=&quot;Page1.aspx&quot; >       <siteMapNode title=&quot;ChildofRootNode&quot; description=&quot;Descriptions do not have to be unique.&quot; url=&quot;Page2.aspx&quot;>         <siteMapNode title=&quot;ChildOfChildNode&quot; description=&quot;SiteMapNode objects can be nested to any level.&quot; url=&quot;Page3.aspx&quot;/>       </siteMapNode>       <siteMapNode title=&quot;ChildofRootNode&quot; description=&quot;Descriptions do not have to be unique.&quot; url=&quot;Page4.aspx&quot;/>     </siteMapNode>   </siteMap>   ```XmlSiteMapProvider 是 ASP.NET 的默认提供程序和它从名为 Web.sitemap 位于 ASP.NET 应用程序的目录结构中的文件读取 XML 数据。 默认情况下，Web.sitemap 文件位于应用程序根目录中;但是，如果你想要更改名称或从其 XmlSiteMapProvider 加载数据的文件的位置，则可以重写默认配置在 Web.config 文件。 通过重写你的 Web.config 文件中的默认配置设置，您可以定制每个 ASP.NET 应用程序，根据需要 XmlSiteMapProvider 的行为。       下面的代码示例演示一个示例 Web.config 文件，仍使用 XmlSiteMapProvider，但使用不同的站点映射文件。 因为中的所有提供程序<xref:System.Web.SiteMapProviderCollection>对象必须具有唯一名称，在 Web.config 文件中指定的一个使用默认值之外的名称，但也将设置为默认的提供程序，以便它将使用而不是默认 ASP.NET 配置中指定 XmlSiteMapProvider。</xref:System.Web.SiteMapProviderCollection>      1> [!NOTE]&1;> 可以更改站点导航数据文件的名称，但不能更改其扩展名。 XmlSiteMapProvider 的文件的名称中带有文件名称扩展.sitemap，则只读取数据。      ```   <siteMap defaultProvider=&quot;MyXmlSiteMapProvider&quot; enabled=&quot;true&quot;>     <providers>       <add name=&quot;MyXmlSiteMapProvider&quot;         description=&quot;SiteMap provider that reads in .sitemap files.&quot;         type=&quot;System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;         siteMapFile=&quot;CustomWeb.sitemap&quot; />     </providers>   </siteMap>   ```"
  syntax:
    content: 'public class XmlSiteMapProvider : System.Web.StaticSiteMapProvider, IDisposable'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.SiteMapProvider
  - System.Web.StaticSiteMapProvider
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  - System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)
  - System.Web.SiteMapProvider.EnableLocalization
  - System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)
  - System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)
  - System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)
  - System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)
  - System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)
  - System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)
  - System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)
  - System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)
  - System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)
  - System.Web.SiteMapProvider.ParentProvider
  - System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)
  - System.Web.SiteMapProvider.ResourceKey
  - System.Web.SiteMapProvider.RootProvider
  - System.Web.SiteMapProvider.SecurityTrimmingEnabled
  - System.Web.SiteMapProvider.SiteMapResolve
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.#ctor
  id: '#ctor'
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: XmlSiteMapProvider()
  nameWithType: XmlSiteMapProvider.XmlSiteMapProvider()
  fullName: System.Web.XmlSiteMapProvider.XmlSiteMapProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建一个新的未命名，实例<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>类。"
  syntax:
    content: public XmlSiteMapProvider ();
    parameters: []
  overload: System.Web.XmlSiteMapProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)
  id: AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: AddNode(SiteMapNode,SiteMapNode)
  nameWithType: XmlSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将添加<xref href=&quot;System.Web.SiteMapNode&quot;></xref>到维护当前提供程序的集合的对象。"
  remarks: "`node`参数添加到内部集合，和它之间创建父/子关系和`parentNode`。       <xref:System.Web.XmlSiteMapProvider>类，派生自<xref:System.Web.StaticSiteMapProvider>类和默认站点映射提供程序对 ASP.NET、 使用<xref:System.Web.SiteMapNode.Url%2A>属性<xref:System.Web.SiteMapNode>对象作为其内部的集合，默认情况下中查找键。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.StaticSiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 如果<xref:System.Web.SiteMapNode.Url%2A>属性<xref:System.Web.SiteMapNode>设置，它必须是唯一的提供程序作用域内。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Url%2A> <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A>方法尝试检索其<xref:System.Web.SiteMapNode.Url%2A>.</xref:System.Web.SiteMapNode.Url%2A>所基于的节点</xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> 否则，你可以使用<xref:System.Web.SiteMapNode.Key%2A>属性，以及相应<xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A>方法，以检索节点。</xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A> </xref:System.Web.SiteMapNode.Key%2A>"
  syntax:
    content: protected override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);
    parameters:
    - id: node
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>将添加到提供程序。"
    - id: parentNode
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>在其下添加`node`。"
  overload: System.Web.XmlSiteMapProvider.AddNode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>or <code>parentNode</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当前<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>不提供程序关联<code> node </code>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A node with the same URL or key is already registered with the <xref href=\"System.Web.XmlSiteMapProvider\"></xref>. - or -  \n  \n A duplicate site map node has been encountered programmatically, such as when linking two site map providers.  \n  \n \\- or -  \n  \n <code>node</code> is the root node of the <xref href=\"System.Web.XmlSiteMapProvider\"></xref>."
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)
  id: AddProvider(System.String,System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: AddProvider(String,SiteMapNode)
  nameWithType: XmlSiteMapProvider.AddProvider(String,SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.AddProvider(String,SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "链接到当前的提供程序的子站点地图提供商提供。"
  remarks: "AddProvider 方法链接`providerName`到当前的提供程序为当前的提供程序的子项。 根节点`providerName`作为的子节点添加到当前的提供程序的层次结构`parentNode`。 因为父提供程序调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法`providerName`中, 所述的异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>可能引发方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> </xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>"
  syntax:
    content: protected virtual void AddProvider (string providerName, System.Web.SiteMapNode parentNode);
    parameters:
    - id: providerName
      type: System.String
      description: "其中一个的名称<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> <xref:System.Web.SiteMap.Providers*>.</xref:System.Web.SiteMap.Providers*>中当前已注册的对象"
    - id: parentNode
      type: System.Web.SiteMapNode
      description: "当前站点地图提供商提供的根节点和子提供程序的所有节点添加一个站点映射节点。"
  overload: System.Web.XmlSiteMapProvider.AddProvider*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Web.SiteMapNode.Provider*>属性<code> parentNode </code>不引用当前的提供程序。</xref:System.Web.SiteMapNode.Provider*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentNode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>providerName</code>无法解析。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "使用的站点映射文件<code> providerName </code>已在提供程序层次结构中使用。       -返回的根节点<code> providerName </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       -返回的根节点<code> providerName </code>具有的 URL 或已向父注册的密钥<xref href=&quot;System.Web.XmlSiteMapProvider&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.BuildSiteMap
  id: BuildSiteMap
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: BuildSiteMap()
  nameWithType: XmlSiteMapProvider.BuildSiteMap()
  fullName: System.Web.XmlSiteMapProvider.BuildSiteMap()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "从 XML 文件加载站点映射信息并生成它在内存中。"
  remarks: "BuildSiteMap 方法调用以加载和生成从持久性存储区站点图。       对于默认行为时启用了安全修整，请参阅&quot;备注&quot;中<xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>。</xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>       后<xref:System.Web.XmlSiteMapProvider>对象分析并加载站点地图数据，所有已加载<xref:System.Web.SiteMapNode>对象和<xref:System.Web.SiteMapNodeCollection>集合都变为只读的。</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> </xref:System.Web.XmlSiteMapProvider> 当<xref:System.Web.XmlSiteMapProvider>分析<xref:System.Web.SiteMapNode.Url%2A>属性从站点映射文件，它将转换相对于应用程序 Url，以及相对 Url，为应用程序绝对虚拟路径。</xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.XmlSiteMapProvider>       <xref:System.Web.XmlSiteMapProvider>.Sitemap 文件的文件更改通知订阅。</xref:System.Web.XmlSiteMapProvider> 如果对.sitemap 文件中，进行任何更改<xref:System.Web.XmlSiteMapProvider>都会重新加载，并重新生成站点地图结构。</xref:System.Web.XmlSiteMapProvider>"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Web.XmlSiteMapProvider> class and initialize it to build a site map from XML data.  \n  \n```c#  \n<%@ Page Language=\"c#\" %>  \n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">  \n <SCRIPT runat=\"server\">  \n private void Page_Load(object sender, System.EventArgs e)  \n {  \n     // Create an instance of the XmlSiteMapProvider class.  \n     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  \n     NameValueCollection providerAttributes = new NameValueCollection(1);  \n     providerAttributes.Add(\"siteMapFile\",\"test.sitemap\");  \n     // Initialize the provider with a provider name and file name.  \n     testXmlProvider.Initialize(\"testProvider\", providerAttributes);  \n  \n     // The BuildSiteMap method is implicitly called when the   \n     // RootNode propety is accessed.  \n  \n     // Prints \"/myvirtualdirectory/WebForm1.aspx\"  \n     Response.Write(testXmlProvider.RootNode.Url + \"<BR>\");  \n     // Prints \"/myvirtualdirectory/WebForm2.aspx\"  \n     Response.Write(testXmlProvider.CurrentNode.Url + \"<BR>\");  \n }  \n```  \n  \n The preceding code example uses an XML file that is located in the virtual root of the ASP.NET application. The file has the following format:  \n  \n```  \n<siteMap>  \n     <siteMapNode title=\"RootNode\" description=\"The root page.\" url=\"WebForm1.aspx\">  \n         <siteMapNode title=\"CurrentNode\" description=\"Some sub page.\" url=\"WebForm2.aspx\"/>  \n     </siteMapNode>  \n </siteMap>  \n```"
  syntax:
    content: public override System.Web.SiteMapNode BuildSiteMap ();
    parameters: []
    return:
      type: System.Web.SiteMapNode
      description: "返回的根<xref href=&quot;System.Web.SiteMapNode&quot;></xref>的站点地图导航结构。"
  overload: System.Web.XmlSiteMapProvider.BuildSiteMap*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.XmlSiteMapProvider\"></xref> was not initialized properly.  \n  \n \\- or -  \n  \n A <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref> is parsed for a <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> that is not unique.  \n  \n \\- or -  \n  \n The file specified by the <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref> does not have the file name extension .sitemap.  \n  \n \\- or -  \n  \n The file specified by the <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref> does not exist.  \n  \n \\- or -  \n  \n A provider configured in the <xref uid=\"langword_csharp_provider\" name=\"provider\" href=\"\"></xref> of a <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> returns a null root node."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref uid=&quot;langword_csharp_siteMapFile&quot; name=&quot;siteMapFile&quot; href=&quot;&quot;> </xref>指定但是该路径位于外部应用程序的当前目录结构。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "There is an error loading the configuration file.  \n  \n \\- or -  \n  \n The top element of the configuration file is not <xref uid=\"langword_csharp_named &lt;siteMap&gt;\" name=\"named &lt;siteMap&gt;\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n More than one top node exists in the configuration file.  \n  \n \\- or -  \n  \n A child of the <xref uid=\"langword_csharp_&lt;siteMap&gt;\" name=\"&lt;siteMap&gt;\" href=\"\"></xref> has a name other than <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An unexpected attribute is parsed for the <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n Sub-elements are nested beneath a <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> where the <xref uid=\"langword_csharp_provider\" name=\"provider\" href=\"\"></xref> is set.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_roles\" name=\"roles\" href=\"\"></xref> of the <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> contain characters that are not valid.  \n  \n \\- or -  \n  \n A <xref uid=\"langword_csharp_url\" name=\"url\" href=\"\"></xref> is parsed for a <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> that is not unique.  \n  \n \\- or -  \n  \n A <xref href=\"System.Web.SiteMapNode\"></xref> was encountered with a duplicate value for <xref:System.Web.SiteMapNode.Key*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.SiteMapNode.ResourceKey*> or <xref:System.Web.SiteMapNode.Title*> was specified on a <xref href=\"System.Web.SiteMapNode\"></xref> or a <xref uid=\"langword_csharp_custom\" name=\"custom\" href=\"\"></xref> attribute defined for the node contained an explicit resource expression.  \n  \n \\- or -  \n  \n An explicit resource expression was applied either to the <xref:System.Web.SiteMapNode.Title*> or <xref:System.Web.SiteMapNode.Description*> or to a <xref uid=\"langword_csharp_custom\" name=\"custom\" href=\"\"></xref> attribute of a <xref href=\"System.Web.SiteMapNode\"></xref> but the explicit information was not valid.  \n  \n \\- or -  \n  \n An error occurred while parsing the <xref:System.Web.SiteMapNode.Url*> of a <xref href=\"System.Web.SiteMapNode\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "在当前站点映射提供程序集合中找不到指定的提供者。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref uid=&quot;langword_csharp_&lt;siteMapNode&gt;&quot; name=&quot;&lt;siteMapNode&gt;&quot; href=&quot;&quot;> </xref>引用站点地图文件包含为空字符串<xref uid=&quot;langword_csharp_siteMapFile&quot; name=&quot;siteMapFile&quot; href=&quot;&quot;> </xref>。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref> of a <xref uid=\"langword_csharp_&lt;siteMapNode&gt;\" name=\"&lt;siteMapNode&gt;\" href=\"\"></xref> uses a physical path.  \n  \n \\- or -  \n  \n An error occurred while attempting to parse the virtual path to the file specified in the <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.Clear
  id: Clear
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: XmlSiteMapProvider.Clear()
  fullName: System.Web.XmlSiteMapProvider.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "在子与父站点映射节点和站点映射提供程序的集合中移除所有元素， <xref href=&quot;System.Web.XmlSiteMapProvider&quot;> </xref>对象内部跟踪其状态的一部分。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类重写继承的清除方法，以提供其他状态清理超出基本<xref:System.Web.StaticSiteMapProvider.Clear%2A?displayProperty=fullName>实现，包括清除其子提供程序跟踪和<xref:System.Web.XmlSiteMapProvider.RootNode%2A>跟踪机制的属性。</xref:System.Web.XmlSiteMapProvider.RootNode%2A> </xref:System.Web.StaticSiteMapProvider.Clear%2A?displayProperty=fullName> </xref:System.Web.XmlSiteMapProvider>"
  syntax:
    content: protected override void Clear ();
    parameters: []
  overload: System.Web.XmlSiteMapProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.CurrentNode
  id: CurrentNode
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: CurrentNode
  nameWithType: XmlSiteMapProvider.CurrentNode
  fullName: System.Web.XmlSiteMapProvider.CurrentNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象，表示当前请求的页。"
  syntax:
    content: public override System.Web.SiteMapNode CurrentNode { get; }
    return:
      type: System.Web.SiteMapNode
      description: "表示当前请求的页的站点映射对象。"
  overload: System.Web.XmlSiteMapProvider.CurrentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.Dispose
  id: Dispose
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: XmlSiteMapProvider.Dispose()
  fullName: System.Web.XmlSiteMapProvider.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "通知的 Web.sitemap 文件监视文件<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>对象不再需要要监视的文件。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类实现<xref:System.IDisposable.Dispose%2A>方法<xref:System.IDisposable>接口以从内存中卸载站点映射文件时释放其关联的文件监视器。</xref:System.IDisposable> </xref:System.IDisposable.Dispose%2A> </xref:System.Web.XmlSiteMapProvider> 此重载<xref:System.Web.XmlSiteMapProvider.Dispose%2A>方法调用的重载采用<xref:System.Boolean>参数并将值设置为`true`。</xref:System.Boolean> </xref:System.Web.XmlSiteMapProvider.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.XmlSiteMapProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XmlSiteMapProvider.Dispose(Boolean)
  fullName: System.Web.XmlSiteMapProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "通知的 Web.sitemap 文件监视文件<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>对象不再需要要监视的文件。 Dispose 方法采用布尔参数，该值指示是否由用户代码调用方法。"
  remarks: "Dispose 方法返回`true`如果的 Dispose 方法调用用户代码。 否则它将返回`false`，如果在运行时过程中的 Dispose 方法调用的终结器线程。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Web.XmlSiteMapProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)
  id: FindSiteMapNode(System.String)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: FindSiteMapNode(String)
  nameWithType: XmlSiteMapProvider.FindSiteMapNode(String)
  fullName: System.Web.XmlSiteMapProvider.FindSiteMapNode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索<xref href=&quot;System.Web.SiteMapNode&quot;></xref>对象，表示指定的 URL 处的页。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>对象重写<xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法，以确保如果基的类的实现不为指定的 URL 返回节点，任何链接的子提供程序中搜索的节点。</xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> </xref:System.Web.XmlSiteMapProvider>       `rawUrl`参数应为绝对虚拟路径或相对于应用程序路径，具体取决于如何在 XML 站点地图数据文件中指定。       <xref:System.Web.XmlSiteMapProvider>类和从它派生的类使用的 URL<xref:System.Web.SiteMapNode>作为类维护的各种集合中的键的对象。</xref:System.Web.SiteMapNode> </xref:System.Web.XmlSiteMapProvider> 因此，这些 Url 必须是唯一的站点图作用域内。 如果由立即进行站点地图数据中找不到 URL <xref:System.Web.XmlSiteMapProvider>，它对每个子提供程序链接到它通过调用 FindSiteMapNode`provider`其站点地图节点的属性。</xref:System.Web.XmlSiteMapProvider>       FindSiteMapNode 方法间接调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点图中的顶级节点。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> 因此，有关发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>调用 FindSiteMapNode 方法也会发生方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>"
  syntax:
    content: public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);
    parameters:
    - id: rawUrl
      type: System.String
      description: "标识为其检索页的 URL <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>表示标识的页的<code> rawURL </code>。"
  overload: System.Web.XmlSiteMapProvider.FindSiteMapNode*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "子提供程序链接到当前站点映射提供程序返回了不是有效的节点。"
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)
  id: FindSiteMapNodeFromKey(System.String)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: FindSiteMapNodeFromKey(String)
  nameWithType: XmlSiteMapProvider.FindSiteMapNodeFromKey(String)
  fullName: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索<xref href=&quot;System.Web.SiteMapNode&quot;></xref>根据指定的键的对象。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类重写<xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法，以确保任何链接的子提供程序，来搜索该节点，如果基类实现不返回的节点`key`。</xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> </xref:System.Web.XmlSiteMapProvider>       <xref:System.Web.XmlSiteMapProvider>对象，派生自<xref:System.Web.StaticSiteMapProvider>类和默认站点映射提供程序对 ASP.NET、 使用<xref:System.Web.SiteMapNode.Url%2A>属性<xref:System.Web.SiteMapNode>对象作为其内部的集合，默认情况下中查找键。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.StaticSiteMapProvider> </xref:System.Web.XmlSiteMapProvider> 如果<xref:System.Web.SiteMapNode.Url%2A>属性<xref:System.Web.SiteMapNode>设置，它必须是唯一的提供程序作用域内。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Url%2A> 如果没有<xref:System.Web.SiteMapNode.Url%2A>指定，则<xref:System.Web.XmlSiteMapProvider>自动生成<xref:System.Web.SiteMapNode.Key%2A>来跟踪节点。</xref:System.Web.SiteMapNode.Key%2A> </xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapNode.Url%2A>       FindSiteMapNodeFromKey 方法可能调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>上与当前的提供程序关联的任何子提供程序的方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> 因此中, 所述的异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>可能引发方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>"
  syntax:
    content: public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "要搜索的查找键<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。"
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>表示标识的页的<code> key </code>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果启用了安全修整和无法向当前用户显示节点或节点找不到<code> key </code>节点集合中。"
  overload: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "子提供程序链接到当前站点映射提供程序返回了不是有效的节点。"
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)
  id: GetChildNodes(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: GetChildNodes(SiteMapNode)
  nameWithType: XmlSiteMapProvider.GetChildNodes(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.GetChildNodes(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回子站点映射的节点。"
  syntax:
    content: public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);
    parameters:
    - id: node
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>对象来获取从子节点。"
    return:
      type: System.Web.SiteMapNodeCollection
      description: "站点地图节点的集合。"
  overload: System.Web.XmlSiteMapProvider.GetChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)
  id: GetParentNode(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: GetParentNode(SiteMapNode)
  nameWithType: XmlSiteMapProvider.GetParentNode(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.GetParentNode(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回站点图的父节点。"
  syntax:
    content: public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);
    parameters:
    - id: node
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>对象以获取从父节点。"
    return:
      type: System.Web.SiteMapNode
      description: "站点图父节点。"
  overload: System.Web.XmlSiteMapProvider.GetParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.GetRootNodeCore
  id: GetRootNodeCore
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: GetRootNodeCore()
  nameWithType: XmlSiteMapProvider.GetRootNodeCore()
  fullName: System.Web.XmlSiteMapProvider.GetRootNodeCore()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索当前站点地图数据结构的顶级节点。"
  remarks: "GetRootNodeCore 方法调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点图中的顶级节点。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> 因此，有关发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>调用 GetRootNodeCore 方法也会发生方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>"
  syntax:
    content: protected override System.Web.SiteMapNode GetRootNodeCore ();
    parameters: []
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> ，表示当前站点地图数据结构中的顶级节点。"
  overload: System.Web.XmlSiteMapProvider.GetRootNodeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: XmlSiteMapProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.XmlSiteMapProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>对象。 Initialize 方法不会实际生成站点图，它仅而准备的状态<xref href=&quot;System.Web.XmlSiteMapProvider&quot;></xref>若要这样做。"
  remarks: "<xref:System.Web.XmlSiteMapProvider>类重写继承的 Initialize 方法，以应用多个特性，如`siteMapFile`和`description`属性，为`attributes`集合。</xref:System.Web.XmlSiteMapProvider>"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Web.XmlSiteMapProvider> class and initialize it to build a site map from XML data.  \n  \n```c#  \n<%@ Page Language=\"c#\" %>  \n<SCRIPT runat=\"server\">  \n private void Page_Load(object sender, System.EventArgs e) {  \n     // Create an instance of the XmlSiteMapProvider class.  \n     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  \n     NameValueCollection providerAttributes = new NameValueCollection(1);  \n     providerAttributes.Add(\"siteMapFile\",\"test.sitemap\");  \n  \n     // Initialize the provider with a provider name and file name.  \n     testXmlProvider.Initialize(\"testProvider\", providerAttributes);  \n  \n     // Call the BuildSiteMap to load the site map information into memory.  \n     testXmlProvider.BuildSiteMap();  \n  \n     // Prints \"/myvirtualdirectory/WebForm1.aspx\"  \n     Response.Write(testXmlProvider.RootNode.Url + \"<BR>\");  \n  \n     // Prints \"/myvirtualdirectory/WebForm2.aspx\"  \n     Response.Write(testXmlProvider.CurrentNode.Url + \"<BR>\");  \n }  \n </SCRIPT>  \n```  \n  \n The preceding code example uses an XML file that is located in the virtual root of the ASP.NET application. The file has the following format:  \n  \n```  \n<siteMap>  \n  <siteMapNode title=\"RootNode\" description=\"The root page.\" url=\"WebForm1.aspx\">  \n    <siteMapNode title=\"CurrentNode\" description=\"Some sub page.\" url=\"WebForm2.aspx\"/>  \n  </siteMapNode>  \n</siteMap>  \n```"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);
    parameters:
    - id: name
      type: System.String
      description: "<xref href=&quot;System.Web.XmlSiteMapProvider&quot;> </xref>初始化。"
    - id: attributes
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>可以包含其他属性，以帮助初始化`name`。 从读取这些特性<xref href=&quot;System.Web.XmlSiteMapProvider&quot;> </xref> Web.config 文件中的配置。"
  overload: System.Web.XmlSiteMapProvider.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.XmlSiteMapProvider&quot;> </xref>不止一次初始化。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=\"System.Web.SiteMapNode\"></xref> used a physical path to reference a site map file.  \n  \n \\- or -  \n  \n An error occurred while attempting to parse the virtual path supplied for the <xref uid=\"langword_csharp_siteMapFile\" name=\"siteMapFile\" href=\"\"></xref> attribute."
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)
  id: RemoveNode(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: RemoveNode(SiteMapNode)
  nameWithType: XmlSiteMapProvider.RemoveNode(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.RemoveNode(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "中移除指定<xref href=&quot;System.Web.SiteMapNode&quot;></xref>跟踪提供程序的所有节点集合中的对象。"
  syntax:
    content: protected override void RemoveNode (System.Web.SiteMapNode node);
    parameters:
    - id: node
      type: System.Web.SiteMapNode
      description: "要删除的节点集合中的节点。"
  overload: System.Web.XmlSiteMapProvider.RemoveNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>node</code> is the root node of the site map provider that owns it.  \n  \n \\- or -  \n  \n <code>node</code> is not managed by the provider or by a provider in the chain of parent providers for this provider."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.RemoveProvider(System.String)
  id: RemoveProvider(System.String)
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: RemoveProvider(String)
  nameWithType: XmlSiteMapProvider.RemoveProvider(String)
  fullName: System.Web.XmlSiteMapProvider.RemoveProvider(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "从当前的提供程序的层次结构中删除链接的子站点地图提供商提供。"
  remarks: "RemoveProvider 方法可以删除`providerName`从当前的提供程序的层次结构，包括建立的任何父/子关系<xref:System.Web.XmlSiteMapProvider.AddProvider%2A>站点地图节点的当前提供程序和已删除的提供程序之间的方法。</xref:System.Web.XmlSiteMapProvider.AddProvider%2A>"
  syntax:
    content: protected virtual void RemoveProvider (string providerName);
    parameters:
    - id: providerName
      type: System.String
      description: "其中一个的名称<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> <xref:System.Web.SiteMap.Providers*>.</xref:System.Web.SiteMap.Providers*>中当前已注册的对象"
  overload: System.Web.XmlSiteMapProvider.RemoveProvider*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>providerName</code>无法解析。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>providerName</code>不是当前站点地图提供商提供的已注册的子提供程序。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.XmlSiteMapProvider.RootNode
  id: RootNode
  parent: System.Web.XmlSiteMapProvider
  langs:
  - csharp
  name: RootNode
  nameWithType: XmlSiteMapProvider.RootNode
  fullName: System.Web.XmlSiteMapProvider.RootNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取站点图的根节点。"
  remarks: "RootNode 属性调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点图中的顶级节点。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> 因此，有关发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>访问 RootNode 属性也会发生方法。</xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>       <xref:System.Web.SiteMapProvider>和<xref:System.Web.XmlSiteMapProvider>类允许只有一个根<xref:System.Web.SiteMapNode>站点地图中的对象。</xref:System.Web.SiteMapNode> </xref:System.Web.XmlSiteMapProvider> </xref:System.Web.SiteMapProvider> <xref:System.Web.XmlSiteMapProvider>类重写抽象<xref:System.Web.SiteMapProvider.RootNode%2A?displayProperty=fullName>属性并提供一个简单的实现，以跟踪根节点。</xref:System.Web.SiteMapProvider.RootNode%2A?displayProperty=fullName> </xref:System.Web.XmlSiteMapProvider>"
  syntax:
    content: public override System.Web.SiteMapNode RootNode { get; }
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>表示站点图的根节点; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>时，如果启用了安全修整并且根节点不是当前用户可访问。"
  overload: System.Web.XmlSiteMapProvider.RootNode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.StaticSiteMapProvider
  isExternal: false
  name: System.Web.StaticSiteMapProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.XmlSiteMapProvider.#ctor
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: XmlSiteMapProvider()
  nameWithType: XmlSiteMapProvider.XmlSiteMapProvider()
  fullName: System.Web.XmlSiteMapProvider.XmlSiteMapProvider()
- uid: System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: AddNode(SiteMapNode,SiteMapNode)
  nameWithType: XmlSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: AddProvider(String,SiteMapNode)
  nameWithType: XmlSiteMapProvider.AddProvider(String,SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.AddProvider(String,SiteMapNode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.XmlSiteMapProvider.BuildSiteMap
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: BuildSiteMap()
  nameWithType: XmlSiteMapProvider.BuildSiteMap()
  fullName: System.Web.XmlSiteMapProvider.BuildSiteMap()
- uid: System.Web.XmlSiteMapProvider.Clear
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Clear()
  nameWithType: XmlSiteMapProvider.Clear()
  fullName: System.Web.XmlSiteMapProvider.Clear()
- uid: System.Web.XmlSiteMapProvider.CurrentNode
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: CurrentNode
  nameWithType: XmlSiteMapProvider.CurrentNode
  fullName: System.Web.XmlSiteMapProvider.CurrentNode
- uid: System.Web.XmlSiteMapProvider.Dispose
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Dispose()
  nameWithType: XmlSiteMapProvider.Dispose()
  fullName: System.Web.XmlSiteMapProvider.Dispose()
- uid: System.Web.XmlSiteMapProvider.Dispose(System.Boolean)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XmlSiteMapProvider.Dispose(Boolean)
  fullName: System.Web.XmlSiteMapProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: FindSiteMapNode(String)
  nameWithType: XmlSiteMapProvider.FindSiteMapNode(String)
  fullName: System.Web.XmlSiteMapProvider.FindSiteMapNode(String)
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: FindSiteMapNodeFromKey(String)
  nameWithType: XmlSiteMapProvider.FindSiteMapNodeFromKey(String)
  fullName: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(String)
- uid: System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetChildNodes(SiteMapNode)
  nameWithType: XmlSiteMapProvider.GetChildNodes(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.GetChildNodes(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection
  parent: System.Web
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
- uid: System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetParentNode(SiteMapNode)
  nameWithType: XmlSiteMapProvider.GetParentNode(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.GetParentNode(SiteMapNode)
- uid: System.Web.XmlSiteMapProvider.GetRootNodeCore
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetRootNodeCore()
  nameWithType: XmlSiteMapProvider.GetRootNodeCore()
  fullName: System.Web.XmlSiteMapProvider.GetRootNodeCore()
- uid: System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: XmlSiteMapProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.XmlSiteMapProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RemoveNode(SiteMapNode)
  nameWithType: XmlSiteMapProvider.RemoveNode(SiteMapNode)
  fullName: System.Web.XmlSiteMapProvider.RemoveNode(SiteMapNode)
- uid: System.Web.XmlSiteMapProvider.RemoveProvider(System.String)
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RemoveProvider(String)
  nameWithType: XmlSiteMapProvider.RemoveProvider(String)
  fullName: System.Web.XmlSiteMapProvider.RemoveProvider(String)
- uid: System.Web.XmlSiteMapProvider.RootNode
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RootNode
  nameWithType: XmlSiteMapProvider.RootNode
  fullName: System.Web.XmlSiteMapProvider.RootNode
- uid: System.Web.XmlSiteMapProvider.#ctor*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: XmlSiteMapProvider
  nameWithType: XmlSiteMapProvider.XmlSiteMapProvider
- uid: System.Web.XmlSiteMapProvider.AddNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: AddNode
  nameWithType: XmlSiteMapProvider.AddNode
- uid: System.Web.XmlSiteMapProvider.AddProvider*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: AddProvider
  nameWithType: XmlSiteMapProvider.AddProvider
- uid: System.Web.XmlSiteMapProvider.BuildSiteMap*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: BuildSiteMap
  nameWithType: XmlSiteMapProvider.BuildSiteMap
- uid: System.Web.XmlSiteMapProvider.Clear*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Clear
  nameWithType: XmlSiteMapProvider.Clear
- uid: System.Web.XmlSiteMapProvider.CurrentNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: CurrentNode
  nameWithType: XmlSiteMapProvider.CurrentNode
- uid: System.Web.XmlSiteMapProvider.Dispose*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Dispose
  nameWithType: XmlSiteMapProvider.Dispose
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: FindSiteMapNode
  nameWithType: XmlSiteMapProvider.FindSiteMapNode
- uid: System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: FindSiteMapNodeFromKey
  nameWithType: XmlSiteMapProvider.FindSiteMapNodeFromKey
- uid: System.Web.XmlSiteMapProvider.GetChildNodes*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetChildNodes
  nameWithType: XmlSiteMapProvider.GetChildNodes
- uid: System.Web.XmlSiteMapProvider.GetParentNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetParentNode
  nameWithType: XmlSiteMapProvider.GetParentNode
- uid: System.Web.XmlSiteMapProvider.GetRootNodeCore*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: GetRootNodeCore
  nameWithType: XmlSiteMapProvider.GetRootNodeCore
- uid: System.Web.XmlSiteMapProvider.Initialize*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: Initialize
  nameWithType: XmlSiteMapProvider.Initialize
- uid: System.Web.XmlSiteMapProvider.RemoveNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RemoveNode
  nameWithType: XmlSiteMapProvider.RemoveNode
- uid: System.Web.XmlSiteMapProvider.RemoveProvider*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RemoveProvider
  nameWithType: XmlSiteMapProvider.RemoveProvider
- uid: System.Web.XmlSiteMapProvider.RootNode*
  parent: System.Web.XmlSiteMapProvider
  isExternal: false
  name: RootNode
  nameWithType: XmlSiteMapProvider.RootNode
