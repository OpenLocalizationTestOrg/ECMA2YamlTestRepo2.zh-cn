### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SurrogateSelector
  id: SurrogateSelector
  children:
  - System.Runtime.Serialization.SurrogateSelector.#ctor
  - System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  - System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  - System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  - System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  - System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: SurrogateSelector
  nameWithType: SurrogateSelector
  fullName: System.Runtime.Serialization.SurrogateSelector
  type: Class
  summary: "帮助格式化程序选择的要委托序列化或反序列化到的进程的序列化代理项。"
  remarks: "序列化代理项将为用户提供一个可以处理不同对象的序列化需求，并且可以转换的序列化的数据，如有必要的对象。"
  example:
  - "The following code example shows how to make a serialization surrogate class that knows how to properly serialize or deserialize a class that is not itself serializable. In addition, this example also shows how to recover from a <xref:System.Runtime.Serialization.SerializationException>.  \n  \n [!code-cs[SurrogateSelector#1](~/add/codesnippet/csharp/t-system.runtime.seriali_3_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISurrogateSelector
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: SurrogateSelector()
  nameWithType: SurrogateSelector.SurrogateSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.SurrogateSelector()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Serialization.SurrogateSelector&quot;></xref>类。"
  syntax:
    content: public SurrogateSelector ();
    parameters: []
  overload: System.Runtime.Serialization.SurrogateSelector.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  id: AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  nameWithType: SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  fullName: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将代理项添加到已检查代理项的列表。"
  remarks: ''
  example:
  - "The following code example demonstrates calling the AddSurrogate method. This code example is part of a larger example provided for the <xref:System.Runtime.Serialization.SurrogateSelector> class.  \n  \n [!code-cs[SurrogateSelector#2](~/add/codesnippet/csharp/28375673-3181-4490-9929-_1.cs)]"
  syntax:
    content: public virtual void AddSurrogate (Type type, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ISerializationSurrogate surrogate);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>该代理项是必需的。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "上下文特定的数据。"
    - id: surrogate
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "要调用此类型的代理项。"
  overload: System.Runtime.Serialization.SurrogateSelector.AddSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> or <code>surrogate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "一个代理项已存在此类型和上下文。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  id: ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: ChainSelector(ISurrogateSelector)
  nameWithType: SurrogateSelector.ChainSelector(ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.ChainSelector(ISurrogateSelector)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将指定的<xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;> </xref> ，可以处理特定对象类型到列表的代理项。"
  remarks: "添加到列表中的最后一个选择器将第一个进行检查。"
  syntax:
    content: public virtual void ChainSelector (System.Runtime.Serialization.ISurrogateSelector selector);
    parameters:
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "要添加的代理项选择器。"
  overload: System.Runtime.Serialization.SurrogateSelector.ChainSelector*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>selector</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "选择器已在选择器的列表中。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  id: GetNextSelector
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: GetNextSelector()
  nameWithType: SurrogateSelector.GetNextSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.GetNextSelector()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回的下一步的选择器上的选择器链。"
  syntax:
    content: public virtual System.Runtime.Serialization.ISurrogateSelector GetNextSelector ();
    parameters: []
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "下一步<xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;></xref>上的选择器链。"
  overload: System.Runtime.Serialization.SurrogateSelector.GetNextSelector*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  id: GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  nameWithType: SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回特定类型的代理项。"
  remarks: "如果当前的选择器无法提供一个代理项，它会在返回之前检查所有子对象`null`。"
  syntax:
    content: public virtual System.Runtime.Serialization.ISerializationSurrogate GetSurrogate (Type type, System.Runtime.Serialization.StreamingContext context, out System.Runtime.Serialization.ISurrogateSelector selector);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>为其请求该代理项。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "流上下文。"
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "要使用的代理项。"
    return:
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "特定类型的代理项。"
  overload: System.Runtime.Serialization.SurrogateSelector.GetSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  id: RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: RemoveSurrogate(Type,StreamingContext)
  nameWithType: SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  fullName: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "删除具有给定类型关联的代理项。"
  remarks: "此方法不会检查链接的代理项。"
  syntax:
    content: public virtual void RemoveSurrogate (Type type, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>为其移除该代理项。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>为当前的代理项。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: SurrogateSelector()
  nameWithType: SurrogateSelector.SurrogateSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.SurrogateSelector()
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  nameWithType: SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  fullName: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ISerializationSurrogate
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializationSurrogate
  nameWithType: ISerializationSurrogate
  fullName: System.Runtime.Serialization.ISerializationSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: ChainSelector(ISurrogateSelector)
  nameWithType: SurrogateSelector.ChainSelector(ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.ChainSelector(ISurrogateSelector)
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetNextSelector()
  nameWithType: SurrogateSelector.GetNextSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.GetNextSelector()
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  nameWithType: SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: RemoveSurrogate(Type,StreamingContext)
  nameWithType: SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  fullName: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: SurrogateSelector
  nameWithType: SurrogateSelector.SurrogateSelector
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: AddSurrogate
  nameWithType: SurrogateSelector.AddSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: ChainSelector
  nameWithType: SurrogateSelector.ChainSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetNextSelector
  nameWithType: SurrogateSelector.GetNextSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetSurrogate
  nameWithType: SurrogateSelector.GetSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: RemoveSurrogate
  nameWithType: SurrogateSelector.RemoveSurrogate
