### YamlMime:ManagedReference
items:
- uid: System.Xml.Resolvers.XmlPreloadedResolver
  id: XmlPreloadedResolver
  children:
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver
  fullName: System.Xml.Resolvers.XmlPreloadedResolver
  type: Class
  summary: "表示一个类，用于预先填充缓存的 Dtd 或 XML 流。"
  remarks: "不需要或不可能到网络的自动调用时，XmlPreloadedResolver 类型用作解析程序。 例如，此类型可以用于加载缓存的外部 Dtd。 或者，你可以使用 XmlPreloadedResolver 预加载的已知在 XHTML 1.0 中定义的 Dtd。 预加载的已知 Dtd 不启动任何网络连接，因为这些 Dtd 已嵌入到 System.Xml.Utils 集中。 目前，XmlPreloadedResolver 包括 XHTML 1.0 和 RSS 0.91 中定义的 Dtd。"
  syntax:
    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  id: '#ctor'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "初始化的新实例<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>类。"
  syntax:
    content: public XmlPreloadedResolver ();
    parameters: []
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "初始化的新实例<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>类具有指定预加载的已知的 Dtd。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "应预填充到缓存的已知 Dtd。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  id: '#ctor(System.Xml.XmlResolver)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "初始化的新实例<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>使用指定的回退解析程序的类。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>，或者你自己的冲突解决程序。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "初始化的新实例<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>类与指定的回退冲突解决程序并预加载的已知的 Dtd。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>，或者你自己的冲突解决程序。"
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "应预填充到缓存的已知 Dtd。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "初始化的新实例<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>使用指定的回退解析程序，预加载的已知 Dtd，类和 URI 的相等性比较器。"
  remarks: "如果你想要自定义 URI 比较，请使用此构造函数重载。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>，或者你自己的冲突解决程序。"
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "应预填充到缓存的已知 Dtd。"
    - id: uriComparer
      type: System.Collections.Generic.IEqualityComparer{System.Uri}
      description: "实现&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;比较 Uri 时要使用的泛型接口。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  id: Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将添加到的字节数组<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>存储并将其映射到的 URI。 如果存储已包含对同一 uri 的映射，会覆盖现有的映射。"
  syntax:
    content: public void Add (Uri uri, byte[] value);
    parameters:
    - id: uri
      type: System.Uri
      description: "将被添加到的数据的 URI <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>存储。"
    - id: value
      type: System.Byte[]
      description: "具有对应于提供的 URI 的数据的字节数组。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  id: Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将添加<xref:System.IO.Stream>到<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>存储并将其映射到的 URI。</xref:System.IO.Stream> 如果存储已包含对同一 uri 的映射，会覆盖现有的映射。"
  syntax:
    content: public void Add (Uri uri, System.IO.Stream value);
    parameters:
    - id: uri
      type: System.Uri
      description: "将被添加到的数据的 URI <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>存储。"
    - id: value
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>对应于提供的 URI 的数据。</xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  id: Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将添加到预加载数据的字符串<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>存储并将其映射到的 URI。 如果存储已包含对同一 uri 的映射，会覆盖现有的映射。"
  syntax:
    content: public void Add (Uri uri, string value);
    parameters:
    - id: uri
      type: System.Uri
      description: "将被添加到的数据的 URI <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>存储。"
    - id: value
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>对应于提供的 URI 的数据。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将添加到的字节数组<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>存储并将其映射到的 URI。 如果存储已包含对同一 uri 的映射，会覆盖现有的映射。"
  syntax:
    content: public void Add (Uri uri, byte[] value, int offset, int count);
    parameters:
    - id: uri
      type: System.Uri
      description: "将被添加到的数据的 URI <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>存储。"
    - id: value
      type: System.Byte[]
      description: "具有对应于提供的 URI 的数据的字节数组。"
    - id: offset
      type: System.Int32
      description: "中提供的字节数组数据开始位置的偏移量。"
    - id: count
      type: System.Int32
      description: "要从字节数组，从提供的偏移量开始读取的字节数。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>或<code>count</code>小于 0。       -的长度<code>value</code>减<code>offset</code>是小于<code>count.</code>"
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  id: Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "设置用于对基础<xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>进行身份验证的凭据"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "使用基础 web 请求进行身份验证的凭据。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将 URI 映射到包含实际资源的对象。"
  remarks: "<xref:System.Xml.Resolvers.XmlPreloadedResolver>将首先尝试查找预加载数据其存储区中的资源。</xref:System.Xml.Resolvers.XmlPreloadedResolver> 如果它找不到它，它将调用回退解析程序的`GetEntity`方法。 如果回退解析程序中未提供<xref:System.Xml.Resolvers.XmlPreloadedResolver>构造函数，将引发异常。</xref:System.Xml.Resolvers.XmlPreloadedResolver>"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "从<xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>返回的 URI"
    - id: role
      type: System.String
      description: "当解析 Uri 时，.NET Framework for Silverlight 的当前版本不使用此参数。 此参数为进行将来扩展而提供。 例如，此参数可以是映射到 xlink:role，用作其他方案中的特定于实现的参数。"
    - id: ofObjectToReturn
      type: System.Type
      description: "要返回的对象类型。 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>支持<xref:System.IO.Stream>对象和<xref:System.IO.TextReader>对象已添加为 uri <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。</xref:System.IO.TextReader> </xref:System.IO.Stream> 如果冲突解决程序不支持所请求的类型，则将引发异常。 使用<xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>方法来确定是否具有特定<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>受此解析程序。</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>"
    return:
      type: System.Object
      description: "A<xref:System.IO.Stream>或<xref:System.IO.TextReader>对应于实际的源文件的对象。</xref:System.IO.TextReader> </xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "无法解析 URI 中传递<code> absoluteUri </code>。       - <code> ofObjectToReturn </code>不受支持的类型。"
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "将 URI 异步映射到包含实际资源的对象。"
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "从<xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>返回的 URI"
    - id: role
      type: System.String
      description: "当解析 Uri 时，.NET Framework for Silverlight 的当前版本不使用此参数。 此参数为进行将来扩展而提供。 例如，此参数可以是映射到 xlink:role，用作其他方案中的特定于实现的参数。"
    - id: ofObjectToReturn
      type: System.Type
      description: "要返回的对象类型。 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>支持<xref:System.IO.Stream>对象和<xref:System.IO.TextReader>对象已添加为 uri <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。</xref:System.IO.TextReader> </xref:System.IO.Stream> 如果冲突解决程序不支持所请求的类型，则将引发异常。 使用<xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>方法来确定是否具有特定<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>受此解析程序。</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "A<xref:System.IO.Stream>或<xref:System.IO.TextReader>对应于实际的源文件的对象。</xref:System.IO.TextReader> </xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  id: PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "获取预加载的 Uri 的集合。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "预加载的 Uri 的集合。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "删除与从 URI 相对应的数据<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>。"
  remarks: "在存储中不存在数据不是不引发任何异常。"
  syntax:
    content: public void Remove (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "应从删除的数据的 URI <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>存储。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "解析绝对 URI 基和相对 Uri。"
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "基 URI 用于解析相对 URI。"
    - id: relativeUri
      type: System.String
      description: "要解析的 URI。 URI 可以是绝对或相对。 如果绝对的此值有效地替换`baseUri`值。 如果相对的它结合了以及`baseUri`以构成绝对 URI。"
    return:
      type: System.Uri
      description: "<xref:System.Uri>表示的绝对 URI 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不能解析相对 URI。</xref:System.Uri>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "确定冲突解决程序是否支持<xref:System.Type>s 只是<xref:System.IO.Stream>.</xref:System.IO.Stream>比</xref:System.Type>其他"
  syntax:
    content: public override bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "要检查的绝对 URI。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>返回。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>受支持; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlKnownDtds
  parent: System.Xml.Resolvers
  isExternal: false
  name: XmlKnownDtds
  nameWithType: XmlKnownDtds
  fullName: System.Xml.Resolvers.XmlKnownDtds
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
- uid: System.Collections.Generic.IEqualityComparer{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Uri>
  nameWithType: IEqualityComparer<Uri>
  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add
  nameWithType: XmlPreloadedResolver.Add
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlPreloadedResolver.GetEntity
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlPreloadedResolver.GetEntityAsync
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove
  nameWithType: XmlPreloadedResolver.Remove
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlPreloadedResolver.ResolveUri
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlPreloadedResolver.SupportsType
