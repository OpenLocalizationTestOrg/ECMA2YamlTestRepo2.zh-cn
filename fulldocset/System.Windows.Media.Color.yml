### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Color
  id: Color
  children:
  - System.Windows.Media.Color.A
  - System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.B
  - System.Windows.Media.Color.Clamp
  - System.Windows.Media.Color.ColorContext
  - System.Windows.Media.Color.Equals(System.Object)
  - System.Windows.Media.Color.Equals(System.Windows.Media.Color)
  - System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  - System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)
  - System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)
  - System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)
  - System.Windows.Media.Color.FromValues(System.Single[],System.Uri)
  - System.Windows.Media.Color.G
  - System.Windows.Media.Color.GetHashCode
  - System.Windows.Media.Color.GetNativeColorValues
  - System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)
  - System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)
  - System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.R
  - System.Windows.Media.Color.ScA
  - System.Windows.Media.Color.ScB
  - System.Windows.Media.Color.ScG
  - System.Windows.Media.Color.ScR
  - System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)
  - System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Color.ToString
  - System.Windows.Media.Color.ToString(System.IFormatProvider)
  langs:
  - csharp
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
  type: Struct
  summary: "描述一种颜色从 alpha、 红色、 绿色和蓝色通道角度。"
  remarks: "<a name=&quot;xamlAttributeUsage_Color&quot;></a># # XAML 属性用法```   <object property=&quot;predefinedColor&quot;/>   - or -   <object property=&quot;#rgb&quot;/>   - or -   <object property=&quot;#argb&quot;/>   - or -   <object property=&quot;#rrggbb&quot;/>   - or -   <object property=&quot;#aarrggbb&quot;/>   - or -   <object property=&quot;sc# scA,scR,scG,scB&quot;/>   - or -   <object property=&quot;ContextColor profileUri alphaValue,colorValue&quot;/>      ``` <a name=&quot;xamlValues_Color&quot;> </a> # # XAML 值*predefinedColor*的一种颜色的预定义的<xref:System.Windows.Media.Colors>类。</xref:System.Windows.Media.Colors>             *rgb*三位十六进制数字。 第一个数字指定的颜色<xref:System.Windows.Media.Color.R%2A>值，第二个数字指定<xref:System.Windows.Media.Color.G%2A>值，且第三个数字，则指定<xref:System.Windows.Media.Color.B%2A>值。</xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> 例如，`00F`。       *argb*四位十六进制数字。 第一个数字指定的颜色<xref:System.Windows.Media.Color.A%2A>值，第二个数字指定其<xref:System.Windows.Media.Color.R%2A>值下, 一步的数字指定<xref:System.Windows.Media.Color.G%2A>值，且最后一个数字，则指定其<xref:System.Windows.Media.Color.B%2A>值。</xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A> 例如，`F00F`。       *rrggbb*六位数的十六进制数。 前两个数字指定的颜色<xref:System.Windows.Media.Color.R%2A>值，后面的两个指定其<xref:System.Windows.Media.Color.G%2A>值和最终的两个指定其<xref:System.Windows.Media.Color.B%2A>值。</xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> 例如，`0000FF`。       *aarrggbb*八位十六进制数。 前两个数字指定的颜色<xref:System.Windows.Media.Color.A%2A>值，后面的两个指定其<xref:System.Windows.Media.Color.R%2A>值，后面的两个指定其<xref:System.Windows.Media.Color.G%2A>值和最终的两个指定其<xref:System.Windows.Media.Color.B%2A>值。</xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A> 例如，`FF0000FF`。       *缩放*<xref:System.Single?displayProperty=fullName>的颜色<xref:System.Windows.Media.Color.ScA%2A>值。</xref:System.Windows.Media.Color.ScA%2A> </xref:System.Single?displayProperty=fullName>           *scR* <xref:System.Single?displayProperty=fullName>的颜色<xref:System.Windows.Media.Color.ScR%2A>值。</xref:System.Windows.Media.Color.ScR%2A> </xref:System.Single?displayProperty=fullName>           *scG* <xref:System.Single?displayProperty=fullName>的颜色<xref:System.Windows.Media.Color.ScG%2A>值。</xref:System.Windows.Media.Color.ScG%2A> </xref:System.Single?displayProperty=fullName>           *scB* <xref:System.Single?displayProperty=fullName>的颜色<xref:System.Windows.Media.Color.ScB%2A>值。</xref:System.Windows.Media.Color.ScB%2A> </xref:System.Single?displayProperty=fullName>           *profileUri* <xref:System.Uri?displayProperty=fullName>[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件。</xref:System.Uri?displayProperty=fullName>           *alphaValue* <xref:System.Single?displayProperty=fullName> alpha 通道颜色值。</xref:System.Single?displayProperty=fullName>     值范围是 0.0 到 1.0 之间。       *colorValue* <xref:System.Single?displayProperty=fullName>表示的颜色配置文件的颜色通道的三到&8; 个值的以逗号分隔列表。</xref:System.Single?displayProperty=fullName>     值范围是 0.0 到 1.0 之间。"
  example:
  - "This example shows how to use sRGB, ScRGB, and color profile values to create the color blue.  \n  \n [!code-xml[GraphicsMMMiscSnippets_snip#ColorExample](~/add/codesnippet/xaml/MiscSnippets/ColorExample.xaml#colorexample)]\n [!code-xml[GraphicsMMMiscSnippets_snip#ColorExample](~/add/codesnippet/xaml/t-system.windows.media.c_3_1.xaml)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.ColorConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Color : IEquatable<System.Windows.Media.Color>, IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Media.Color>
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Media.Color.A
  id: A
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: A
  nameWithType: Color.A
  fullName: System.Windows.Media.Color.A
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>颜色的 alpha 通道值。"
  remarks: "Alpha 通道<xref:System.Windows.Media.Color>结构确定透明度量<xref:System.Windows.Media.Color>具有。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color>  为 255 的 alpha 值指示<xref:System.Windows.Media.Color>完全不透明的 0 值表示的颜色是完全透明。</xref:System.Windows.Media.Color>       `sRGB`通道 (A， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和 ScRGB 通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A>  例如，当 A，它是`sRGB`修改 alpha 通道， `ScRGB` alpha 通道， <xref:System.Windows.Media.Color.ScA%2A>，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.ScA%2A>"
  syntax:
    content: public byte A { get; set; }
    return:
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref> Alpha 通道值的颜色、 0 和 255 之间的值。"
  overload: System.Windows.Media.Color.A*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)
  id: Add(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Add(Color,Color)
  nameWithType: Color.Add(Color,Color)
  fullName: System.Windows.Media.Color.Add(Color,Color)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "添加两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  remarks: "<xref:System.Windows.Media.Color>通过将第一种颜色的 alpha、 红色、 绿色和蓝色通道添加到第二种颜色的 alpha、 红色、 绿色和蓝色通道，结构加在一起。</xref:System.Windows.Media.Color> 例如的 alpha 通道`color1`和的 alpha 通道`color2`添加在一起以产生所生成的颜色的 alpha 通道。 相同是使用要生成新的颜色的红色、 绿色和蓝色通道的红色、 绿色和蓝色通道进行。"
  syntax:
    content: public static System.Windows.Media.Color Add (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "第一个<xref href=&quot;System.Windows.Media.Color&quot;></xref>要添加一个。"
    - id: color2
      type: System.Windows.Media.Color
      description: "第二个<xref href=&quot;System.Windows.Media.Color&quot;></xref>要添加一个。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，其颜色值是加法运算的结果。"
  overload: System.Windows.Media.Color.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)
  id: AreClose(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: AreClose(Color,Color)
  nameWithType: Color.AreClose(Color,Color)
  fullName: System.Windows.Media.Color.AreClose(Color,Color)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "比较两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>模糊是否相等的结构。"
  remarks: "此相等方法补偿浮点值，可以获取少量的错误运算时的事实。"
  syntax:
    content: public static bool AreClose (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "要比较的第一个颜色。"
    - id: color2
      type: System.Windows.Media.Color
      description: "要比较的第二个颜色。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>color1</code> and <code>color2</code> are nearly identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Color.AreClose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.B
  id: B
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: B
  nameWithType: Color.B
  fullName: System.Windows.Media.Color.B
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>蓝色颜色通道值。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>，B) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当 B，`sRGB`蓝色通道，将修改，`ScRGB`蓝色通道<xref:System.Windows.Media.Color.ScB%2A>，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.ScB%2A>"
  syntax:
    content: public byte B { get; set; }
    return:
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>蓝色通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 255 之间的值。"
  overload: System.Windows.Media.Color.B*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Clamp
  id: Clamp
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Clamp()
  nameWithType: Color.Clamp()
  fullName: System.Windows.Media.Color.Clamp()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "集<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;></xref>通道的 0 到 1，如果范围内的颜色设为它们是该范围以外。"
  remarks: "色域`ScRGB`颜色空间大于限制范围，因此使用此方法可能导致的颜色信息丢失。"
  syntax:
    content: public void Clamp ();
    parameters: []
  overload: System.Windows.Media.Color.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ColorContext
  id: ColorContext
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ColorContext
  nameWithType: Color.ColorContext
  fullName: System.Windows.Media.Color.ColorContext
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色的颜色配置文件。"
  remarks: "A[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件包含特定应用程序或颜色打印机等设备的颜色系统配置文件。 此配置文件符合反过来可映射到单独的配置文件的其他设备的公共配置文件。 这样一台计算机设备用于匹配其他应用程序和设备在相同或其他计算机系统上的颜色的颜色系统。"
  syntax:
    content: public System.Windows.Media.ColorContext ColorContext { get; }
    return:
      type: System.Windows.Media.ColorContext
      description: "[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色的颜色配置文件。"
  overload: System.Windows.Media.Color.ColorContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Color.Equals(Object)
  fullName: System.Windows.Media.Color.Equals(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "测试指定的对象是否是<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构并且等效于此颜色。"
  remarks: "这些运算时，浮点值可以获取轻微的错误。  <xref:System.Windows.Media.Color.Equals%2A>方法，<xref:System.Windows.Media.Color.op_Equality%2A>运算符，与<xref:System.Windows.Media.Color.op_Inequality%2A>运算符不弥补这并因此可能不会返回预期的布尔值结果。</xref:System.Windows.Media.Color.op_Inequality%2A> </xref:System.Windows.Media.Color.op_Equality%2A> </xref:System.Windows.Media.Color.Equals%2A>       <xref:System.Windows.Media.Color.AreClose%2A>方法使用此浮点算术错误补偿通过返回的模糊相等算法`true`有关的两个比较<xref:System.Windows.Media.Color>结构几乎相同，但其值可能因少量而异。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.AreClose%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要与此比较的对象<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的对象是<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构以及是否与当前<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Color.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color)
  id: Equals(System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Equals(Color)
  nameWithType: Color.Equals(Color)
  fullName: System.Windows.Media.Color.Equals(Color)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "测试是否指定<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构等同于此颜色。"
  syntax:
    content: public bool Equals (System.Windows.Media.Color color);
    parameters:
    - id: color
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构要与当前<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构等同于当前<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Color.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)
  id: Equals(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Equals(Color,Color)
  nameWithType: Color.Equals(Color,Color)
  fullName: System.Windows.Media.Color.Equals(Color,Color)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "测试两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构相等。"
  remarks: "这些运算时，浮点值可以获取轻微的错误。  <xref:System.Windows.Media.Color.Equals%2A>方法，<xref:System.Windows.Media.Color.op_Equality%2A>运算符，与<xref:System.Windows.Media.Color.op_Inequality%2A>运算符不弥补这并因此可能不会返回预期的布尔值结果。</xref:System.Windows.Media.Color.op_Inequality%2A> </xref:System.Windows.Media.Color.op_Equality%2A> </xref:System.Windows.Media.Color.Equals%2A>       <xref:System.Windows.Media.Color.AreClose%2A>方法使用此浮点算术错误补偿通过返回的模糊相等算法`true`有关的两个比较<xref:System.Windows.Media.Color>结构几乎相同，但其值可能因少量而异。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.AreClose%2A>"
  syntax:
    content: public static bool Equals (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "第一个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    - id: color2
      type: System.Windows.Media.Color
      description: "第二个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>color1</code> and <code>color2</code> are exactly identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Color.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  id: FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: FromArgb(Byte,Byte,Byte,Byte)
  nameWithType: Color.FromArgb(Byte,Byte,Byte,Byte)
  fullName: System.Windows.Media.Color.FromArgb(Byte,Byte,Byte,Byte)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>使用指定的结构<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref> alpha 通道和颜色通道值。"
  remarks: "FromArgb 方法允许你指定的 alpha 通道;<xref:System.Windows.Media.Color.FromRgb%2A>方法使用的默认值为 255 的 alpha 通道。</xref:System.Windows.Media.Color.FromRgb%2A>       一种颜色的 alpha 通道确定颜色的透明度的量。 255 的 alpha 值表示的颜色是完全不透明，值为 0 表示的颜色是完全透明。"
  example:
  - >-
    [!code-cs[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/add/codesnippet/csharp/BrushesMiscSnippets_procedural/CreateColorsFromExample.cs#fromargbexample)]
     [!code-vb[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/add/codesnippet/visualbasic/brushesmiscsnippets_procedural/createcolorsfromexample.vb#fromargbexample)]
  syntax:
    content: public static System.Windows.Media.Color FromArgb (byte a, byte r, byte g, byte b);
    parameters:
    - id: a
      type: System.Byte
      description: "Alpha 通道， <xref:System.Windows.Media.Color.A*>，新颜色。</xref:System.Windows.Media.Color.A*>"
    - id: r
      type: System.Byte
      description: "红色的通道， <xref:System.Windows.Media.Color.R*>，新颜色。</xref:System.Windows.Media.Color.R*>"
    - id: g
      type: System.Byte
      description: "绿色的通道， <xref:System.Windows.Media.Color.G*>，新颜色。</xref:System.Windows.Media.Color.G*>"
    - id: b
      type: System.Byte
      description: "蓝色通道<xref:System.Windows.Media.Color.B*>，新颜色。</xref:System.Windows.Media.Color.B*>"
    return:
      type: System.Windows.Media.Color
      description: "A <xref href=&quot;System.Windows.Media.Color&quot;> </xref>用指定的值的结构。"
  overload: System.Windows.Media.Color.FromArgb*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)
  id: FromAValues(System.Single,System.Single[],System.Uri)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: FromAValues(Single,Single[],Uri)
  nameWithType: Color.FromAValues(Single,Single[],Uri)
  fullName: System.Windows.Media.Color.FromAValues(Single,Single[],Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>通过使用指定的 alpha 通道、 颜色通道值和颜色配置文件的结构。"
  remarks: "A[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件包含特定应用程序或颜色打印机等设备的颜色系统配置文件。 此配置文件符合反过来可映射到单独的配置文件的其他设备的公共配置文件。 这样一台计算机设备用于匹配其他应用程序和设备在相同或其他计算机系统上的颜色的颜色系统。"
  example:
  - "The following example shows how to use the FromAValues method to create a <xref:System.Windows.Media.Color> structure.  \n  \n [!code-cs[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/add/codesnippet/csharp/BrushesMiscSnippets_procedural/CreateColorsFromExample.cs#fromavaluesexample)]\n [!code-vb[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/add/codesnippet/visualbasic/brushesmiscsnippets_procedural/createcolorsfromexample.vb#fromavaluesexample)]"
  syntax:
    content: public static System.Windows.Media.Color FromAValues (float a, float[] values, Uri profileUri);
    parameters:
    - id: a
      type: System.Single
      description: "新的颜色，介于 0 和 1 之间的 alpha 通道。"
    - id: values
      type: System.Single[]
      description: "指定新的颜色的颜色通道的值的集合。 这些值将映射到`profileUri`。"
    - id: profileUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件的新颜色。"
    return:
      type: System.Windows.Media.Color
      description: "A <xref href=&quot;System.Windows.Media.Color&quot;> </xref>用指定的值的结构。"
  overload: System.Windows.Media.Color.FromAValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)
  id: FromRgb(System.Byte,System.Byte,System.Byte)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: FromRgb(Byte,Byte,Byte)
  nameWithType: Color.FromRgb(Byte,Byte,Byte)
  fullName: System.Windows.Media.Color.FromRgb(Byte,Byte,Byte)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>使用指定的结构<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>颜色通道值。"
  remarks: "<xref:System.Windows.Media.Color.FromArgb%2A>方法允许你指定的 alpha 通道; FromRgb 方法对于 alpha 通道使用默认值为 1。</xref:System.Windows.Media.Color.FromArgb%2A>       一种颜色的 alpha 通道确定颜色的透明度的量。 Alpha 值为 1 表示的颜色是完全不透明，值为 0 表示的颜色是完全透明。       SRGB 通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和 ScRGB 通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当<xref:System.Windows.Media.Color.R%2A>，sRGB 红色通道中，修改 ScRGB 红色通道， <xref:System.Windows.Media.Color.ScR%2A>，转换为等效的值。</xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.R%2A>"
  example:
  - "The following example shows how to use the FromRgb method to create a <xref:System.Windows.Media.Color> structure.  \n  \n [!code-cs[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/add/codesnippet/csharp/BrushesMiscSnippets_procedural/CreateColorsFromExample.cs#fromrgbexample)]\n [!code-vb[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/add/codesnippet/visualbasic/brushesmiscsnippets_procedural/createcolorsfromexample.vb#fromrgbexample)]"
  syntax:
    content: public static System.Windows.Media.Color FromRgb (byte r, byte g, byte b);
    parameters:
    - id: r
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>红色通道<xref:System.Windows.Media.Color.R*>，新颜色。</xref:System.Windows.Media.Color.R*>"
    - id: g
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>绿色通道<xref:System.Windows.Media.Color.G*>，新颜色。</xref:System.Windows.Media.Color.G*>"
    - id: b
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>蓝色通道<xref:System.Windows.Media.Color.B*>，新颜色。</xref:System.Windows.Media.Color.B*>"
    return:
      type: System.Windows.Media.Color
      description: "A <xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构具有指定的值和为 255 的 alpha 通道值。"
  overload: System.Windows.Media.Color.FromRgb*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)
  id: FromScRgb(System.Single,System.Single,System.Single,System.Single)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: FromScRgb(Single,Single,Single,Single)
  nameWithType: Color.FromScRgb(Single,Single,Single,Single)
  fullName: System.Windows.Media.Color.FromScRgb(Single,Single,Single,Single)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>使用指定的结构<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref> alpha 通道和颜色通道值。"
  remarks: "一种颜色的 alpha 通道确定颜色的透明度的量。 Alpha 值为 1 表示的颜色是完全不透明，值为 0 表示的颜色是完全透明。"
  example:
  - >-
    [!code-cs[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/add/codesnippet/csharp/BrushesMiscSnippets_procedural/CreateColorsFromExample.cs#fromscrgbexample)]
     [!code-vb[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/add/codesnippet/visualbasic/brushesmiscsnippets_procedural/createcolorsfromexample.vb#fromscrgbexample)]
  syntax:
    content: public static System.Windows.Media.Color FromScRgb (float a, float r, float g, float b);
    parameters:
    - id: a
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref> Alpha 通道， <xref:System.Windows.Media.Color.ScA*>，新颜色。</xref:System.Windows.Media.Color.ScA*>"
    - id: r
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>红色通道<xref:System.Windows.Media.Color.ScR*>，新颜色。</xref:System.Windows.Media.Color.ScR*>"
    - id: g
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>绿色通道<xref:System.Windows.Media.Color.ScG*>，新颜色。</xref:System.Windows.Media.Color.ScG*>"
    - id: b
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>蓝色通道<xref:System.Windows.Media.Color.ScB*>，新颜色。</xref:System.Windows.Media.Color.ScB*>"
    return:
      type: System.Windows.Media.Color
      description: "A <xref href=&quot;System.Windows.Media.Color&quot;> </xref>用指定的值的结构。"
  overload: System.Windows.Media.Color.FromScRgb*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.FromValues(System.Single[],System.Uri)
  id: FromValues(System.Single[],System.Uri)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: FromValues(Single[],Uri)
  nameWithType: Color.FromValues(Single[],Uri)
  fullName: System.Windows.Media.Color.FromValues(Single[],Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>通过使用指定的颜色通道值和颜色配置文件的结构。"
  remarks: "A[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件包含特定应用程序或颜色打印机等设备的颜色系统配置文件。 此配置文件符合反过来可映射到单独的配置文件的其他设备的公共配置文件。 这样一台计算机设备用于匹配其他应用程序和设备在相同或其他计算机系统上的颜色的颜色系统。"
  example:
  - "The following example shows how to use the FromValues method to create a <xref:System.Windows.Media.Color> structure.  \n  \n [!code-cs[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/add/codesnippet/csharp/BrushesMiscSnippets_procedural/CreateColorsFromExample.cs#fromvaluesexample)]\n [!code-vb[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/add/codesnippet/visualbasic/brushesmiscsnippets_procedural/createcolorsfromexample.vb#fromvaluesexample)]"
  syntax:
    content: public static System.Windows.Media.Color FromValues (float[] values, Uri profileUri);
    parameters:
    - id: values
      type: System.Single[]
      description: "指定新的颜色的颜色通道的值的集合。 这些值将映射到`profileUri`。"
    - id: profileUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_icc](~/add/includes/tlasharptla-icc-md.md)]或[!INCLUDE[TLA#tla_icm](~/add/includes/ajax-current-ext-md.md)]颜色配置文件的新颜色。"
    return:
      type: System.Windows.Media.Color
      description: "A <xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构具有指定的值和 alpha 通道值 1。"
  overload: System.Windows.Media.Color.FromValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.G
  id: G
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: G
  nameWithType: Color.G
  fullName: System.Windows.Media.Color.G
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>绿色颜色通道值。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>，G， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当 G，`sRGB`绿色通道，将修改，`ScRGB`绿色通道<xref:System.Windows.Media.Color.ScG%2A>，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.ScG%2A>"
  syntax:
    content: public byte G { get; set; }
    return:
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>绿色的通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 255 之间的值。"
  overload: System.Windows.Media.Color.G*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Color.GetHashCode()
  fullName: System.Windows.Media.Color.GetHashCode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取此哈希代码<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "此哈希代码<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  overload: System.Windows.Media.Color.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.GetNativeColorValues
  id: GetNativeColorValues
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: GetNativeColorValues()
  nameWithType: Color.GetNativeColorValues()
  fullName: System.Windows.Media.Color.GetNativeColorValues()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取颜色通道值的颜色。"
  syntax:
    content: public float[] GetNativeColorValues ();
    parameters: []
    return:
      type: System.Single[]
      description: "颜色通道值的数组。"
  overload: System.Windows.Media.Color.GetNativeColorValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)
  id: Multiply(System.Windows.Media.Color,System.Single)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Multiply(Color,Single)
  nameWithType: Color.Multiply(Color,Single)
  fullName: System.Windows.Media.Color.Multiply(Color,Single)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "乘以指定的 alpha、 红色、 蓝方和绿色通道<xref href=&quot;System.Windows.Media.Color&quot;></xref>通过指定的值的结构。"
  syntax:
    content: public static System.Windows.Media.Color Multiply (System.Windows.Media.Color color, float coefficient);
    parameters:
    - id: color
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>相乘。"
    - id: coefficient
      type: System.Single
      description: "要相乘的值。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>其颜色值是乘法运算的结果的结构。"
  overload: System.Windows.Media.Color.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)
  id: op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: op_Addition(Color,Color)
  nameWithType: Color.op_Addition(Color,Color)
  fullName: System.Windows.Media.Color.op_Addition(Color,Color)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "添加两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  remarks: "<xref:System.Windows.Media.Color>通过将第一种颜色的 alpha、 红色、 绿色和蓝色通道添加到第二种颜色的 alpha、 红色、 绿色和蓝色通道，结构加在一起。</xref:System.Windows.Media.Color>  例如的 alpha 通道`color1`和的 alpha 通道`color2`添加在一起以产生所生成的颜色的 alpha 通道。  相同是使用要生成新的颜色的红色、 绿色和蓝色通道的红色、 绿色和蓝色通道进行。"
  syntax:
    content: public static System.Windows.Media.Color op_Addition (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "第一个<xref href=&quot;System.Windows.Media.Color&quot;></xref>要添加一个。"
    - id: color2
      type: System.Windows.Media.Color
      description: "第二个<xref href=&quot;System.Windows.Media.Color&quot;></xref>要添加一个。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，其颜色值是加法运算的结果。"
  overload: System.Windows.Media.Color.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)
  id: op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: op_Equality(Color,Color)
  nameWithType: Color.op_Equality(Color,Color)
  fullName: System.Windows.Media.Color.op_Equality(Color,Color)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "测试两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构相等。"
  remarks: "这些运算时，浮点值可以获取轻微的错误。  <xref:System.Windows.Media.Color.Equals%2A>方法中，相等运算符，与<xref:System.Windows.Media.Color.op_Inequality%2A>运算符不弥补这并因此可能不会返回预期的布尔值结果。</xref:System.Windows.Media.Color.op_Inequality%2A> </xref:System.Windows.Media.Color.Equals%2A>       <xref:System.Windows.Media.Color.AreClose%2A>方法使用此浮点算术错误补偿通过返回的模糊相等算法`true`有关的两个比较<xref:System.Windows.Media.Color>结构几乎相同，但其值可能因少量而异。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.AreClose%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "第一个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    - id: color2
      type: System.Windows.Media.Color
      description: "第二个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>color1</code> and <code>color2</code> are exactly identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Color.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)
  id: op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: op_Inequality(Color,Color)
  nameWithType: Color.op_Inequality(Color,Color)
  fullName: System.Windows.Media.Color.op_Inequality(Color,Color)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "测试两个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构不相同。"
  remarks: "这些运算时，浮点值可以获取轻微的错误。  <xref:System.Windows.Media.Color.Equals%2A>方法，<xref:System.Windows.Media.Color.op_Equality%2A>运算符和不相等运算符不弥补这并因此可能不会返回预期的布尔值结果。</xref:System.Windows.Media.Color.op_Equality%2A> </xref:System.Windows.Media.Color.Equals%2A>       <xref:System.Windows.Media.Color.AreClose%2A>方法使用此浮点算术错误补偿通过返回的模糊相等算法`true`有关的两个比较<xref:System.Windows.Media.Color>结构几乎相同，但其值可能因少量而异。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.AreClose%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "第一个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    - id: color2
      type: System.Windows.Media.Color
      description: "第二个<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>color1</code> and <code>color2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Color.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)
  id: op_Multiply(System.Windows.Media.Color,System.Single)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: op_Multiply(Color,Single)
  nameWithType: Color.op_Multiply(Color,Single)
  fullName: System.Windows.Media.Color.op_Multiply(Color,Single)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "乘以指定的 alpha、 红色、 蓝方和绿色通道<xref href=&quot;System.Windows.Media.Color&quot;></xref>通过指定的值的结构。"
  syntax:
    content: public static System.Windows.Media.Color op_Multiply (System.Windows.Media.Color color, float coefficient);
    parameters:
    - id: color
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>相乘。"
    - id: coefficient
      type: System.Single
      description: "要相乘的值。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>其颜色值是乘法运算的结果的结构。"
  overload: System.Windows.Media.Color.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)
  id: op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: op_Subtraction(Color,Color)
  nameWithType: Color.op_Subtraction(Color,Color)
  fullName: System.Windows.Media.Color.op_Subtraction(Color,Color)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "减去<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  remarks: "<xref:System.Windows.Media.Color>结构通过减去从第一种颜色的 alpha、 红色、 绿色和蓝色通道的第二个颜色的 alpha、 红色、 绿色和蓝色通道减去从另一个。</xref:System.Windows.Media.Color>  例如的 alpha 通道`color2`减去的 alpha 通道`color1`以生成所产生的 alpha 通道<xref:System.Windows.Media.Color>结构。</xref:System.Windows.Media.Color>  相同，可使用要生成新的红色、 绿色和蓝色通道的红色、 绿色和蓝色通道<xref:System.Windows.Media.Color>结构。</xref:System.Windows.Media.Color>"
  syntax:
    content: public static System.Windows.Media.Color op_Subtraction (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构被减数。"
    - id: color2
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构要从中减去`color1`。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>其颜色值是减法运算的结果的结构。"
  overload: System.Windows.Media.Color.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.R
  id: R
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: R
  nameWithType: Color.R
  fullName: System.Windows.Media.Color.R
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>颜色的红色通道值。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>，R、 <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当 R，`sRGB`红色通道被修改，`ScRGB`红色通道<xref:System.Windows.Media.Color.ScR%2A>，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.ScR%2A>"
  syntax:
    content: public byte R { get; set; }
    return:
      type: System.Byte
      description: "<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;> </xref>红色通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 255 之间的值。"
  overload: System.Windows.Media.Color.R*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ScA
  id: ScA
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ScA
  nameWithType: Color.ScA
  fullName: System.Windows.Media.Color.ScA
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;></xref>颜色的 alpha 通道值。"
  remarks: "Alpha 通道<xref:System.Windows.Media.Color>结构确定透明度量<xref:System.Windows.Media.Color>具有。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color>  Alpha 值为 1 指示<xref:System.Windows.Media.Color>完全不透明的 0 值表示的颜色是完全透明。</xref:System.Windows.Media.Color>       `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (缩放， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当<xref:System.Windows.Media.Color.A%2A>、`sRGB`修改 alpha 通道， `ScRGB` alpha 通道，ScAis 转换为等效的值使用 0-1 范围`Sc`方案支持。</xref:System.Windows.Media.Color.A%2A>"
  syntax:
    content: public float ScA { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>的 alpha 通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 1 之间的值。"
  overload: System.Windows.Media.Color.ScA*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ScB
  id: ScB
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ScB
  nameWithType: Color.ScB
  fullName: System.Windows.Media.Color.ScB
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置 ScRGB 蓝色通道值的颜色。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>， <xref:System.Windows.Media.Color.ScG%2A>，ScB) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当<xref:System.Windows.Media.Color.B%2A>、`sRGB`蓝色通道，将修改，`ScRGB`蓝色通道，ScB，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.B%2A>"
  syntax:
    content: public float ScB { get; set; }
    return:
      type: System.Single
      description: "ScRGB 红色通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 1 之间的值。"
  overload: System.Windows.Media.Color.ScB*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ScG
  id: ScG
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ScG
  nameWithType: Color.ScG
  fullName: System.Windows.Media.Color.ScG
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;></xref>绿色颜色通道值。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>， <xref:System.Windows.Media.Color.ScR%2A>，ScG， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScR%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当<xref:System.Windows.Media.Color.G%2A>、`sRGB`绿色通道，将修改，`ScRGB`绿色通道，ScGis 转换为等效的值使用 0-1 范围`Sc`方案支持。</xref:System.Windows.Media.Color.G%2A>"
  syntax:
    content: public float ScG { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>绿色的通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 1 之间的值。"
  overload: System.Windows.Media.Color.ScG*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ScR
  id: ScR
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ScR
  nameWithType: Color.ScR
  fullName: System.Windows.Media.Color.ScR
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;></xref>颜色的红色通道值。"
  remarks: "`sRGB`通道 (<xref:System.Windows.Media.Color.A%2A>， <xref:System.Windows.Media.Color.R%2A>， <xref:System.Windows.Media.Color.G%2A>， <xref:System.Windows.Media.Color.B%2A>) 和`ScRGB`通道 (<xref:System.Windows.Media.Color.ScA%2A>，ScR、 <xref:System.Windows.Media.Color.ScG%2A>， <xref:System.Windows.Media.Color.ScB%2A>) 的<xref:System.Windows.Media.Color>结构不是同步的属性。</xref:System.Windows.Media.Color> </xref:System.Windows.Media.Color.ScB%2A> </xref:System.Windows.Media.Color.ScG%2A> </xref:System.Windows.Media.Color.ScA%2A> </xref:System.Windows.Media.Color.B%2A> </xref:System.Windows.Media.Color.G%2A> </xref:System.Windows.Media.Color.R%2A> </xref:System.Windows.Media.Color.A%2A>  例如，当<xref:System.Windows.Media.Color.R%2A>、`sRGB`红色通道被修改，`ScRGB`红色通道，ScR，转换为等效于使用 0-1 的值范围`Sc`方案支持。</xref:System.Windows.Media.Color.R%2A>"
  syntax:
    content: public float ScR { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_ScRGB&quot; name=&quot;ScRGB&quot; href=&quot;&quot;> </xref>红色通道值<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构，介于 0 和 1 之间的值。"
  overload: System.Windows.Media.Color.ScR*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)
  id: Subtract(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: Subtract(Color,Color)
  nameWithType: Color.Subtract(Color,Color)
  fullName: System.Windows.Media.Color.Subtract(Color,Color)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "减去<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构<xref href=&quot;System.Windows.Media.Color&quot;></xref>结构。"
  remarks: "<xref:System.Windows.Media.Color>结构通过减去从第一种颜色的 alpha、 红色、 绿色和蓝色通道的第二个颜色的 alpha、 红色、 绿色和蓝色通道减去从另一个。</xref:System.Windows.Media.Color>  例如的 alpha 通道`color2`减去的 alpha 通道`color1`以生成所产生的 alpha 通道<xref:System.Windows.Media.Color>结构。</xref:System.Windows.Media.Color>  相同，可使用要生成新的红色、 绿色和蓝色通道的红色、 绿色和蓝色通道<xref:System.Windows.Media.Color>结构。</xref:System.Windows.Media.Color>"
  syntax:
    content: public static System.Windows.Media.Color Subtract (System.Windows.Media.Color color1, System.Windows.Media.Color color2);
    parameters:
    - id: color1
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构被减数。"
    - id: color2
      type: System.Windows.Media.Color
      description: "<xref href=&quot;System.Windows.Media.Color&quot;> </xref>结构要从中减去`color1`。"
    return:
      type: System.Windows.Media.Color
      description: "一个新<xref href=&quot;System.Windows.Media.Color&quot;></xref>其颜色值是减法运算的结果的结构。"
  overload: System.Windows.Media.Color.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Color.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Color.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "使用指定的格式的当前实例的值设置。"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "要使用的格式。       -空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 使用的类型定义的默认格式<xref:System.IFormattable>实现。</xref:System.IFormattable>"
    - id: provider
      type: System.IFormatProvider
      description: "要用于设置值的格式提供程序。       -空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 来从操作系统的当前区域设置获取数字格式信息。"
    return:
      type: System.String
      description: "指定的格式中的当前实例的值。"
  overload: System.Windows.Media.Color.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ToString
  id: ToString
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ToString()
  nameWithType: Color.ToString()
  fullName: System.Windows.Media.Color.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建的字符串表示形式颜色使用<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>通道。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "颜色的字符串表示形式。 默认实现表示<xref:System.Byte>十六进制窗体中的值，与前缀`#`字符和始于的 alpha 通道。</xref:System.Byte> 例如的 ToString 值<xref:System.Windows.Media.Colors.AliceBlue*>是`#FFF0F8FF`。</xref:System.Windows.Media.Colors.AliceBlue*>"
  overload: System.Windows.Media.Color.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Color.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Media.Color
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Color.ToString(IFormatProvider)
  fullName: System.Windows.Media.Color.ToString(IFormatProvider)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "通过使用创建的字符串表示形式颜色<xref uid=&quot;langword_csharp_sRGB&quot; name=&quot;sRGB&quot; href=&quot;&quot;></xref>通道和指定的格式提供程序。"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "区域性特定格式设置信息。"
    return:
      type: System.String
      description: "颜色的字符串表示形式。"
  overload: System.Windows.Media.Color.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Media.Color.A
  parent: System.Windows.Media.Color
  isExternal: false
  name: A
  nameWithType: Color.A
  fullName: System.Windows.Media.Color.A
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Add(Color,Color)
  nameWithType: Color.Add(Color,Color)
  fullName: System.Windows.Media.Color.Add(Color,Color)
- uid: System.Windows.Media.Color
  parent: System.Windows.Media
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
- uid: System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: AreClose(Color,Color)
  nameWithType: Color.AreClose(Color,Color)
  fullName: System.Windows.Media.Color.AreClose(Color,Color)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Color.B
  parent: System.Windows.Media.Color
  isExternal: false
  name: B
  nameWithType: Color.B
  fullName: System.Windows.Media.Color.B
- uid: System.Windows.Media.Color.Clamp
  parent: System.Windows.Media.Color
  isExternal: false
  name: Clamp()
  nameWithType: Color.Clamp()
  fullName: System.Windows.Media.Color.Clamp()
- uid: System.Windows.Media.Color.ColorContext
  parent: System.Windows.Media.Color
  isExternal: false
  name: ColorContext
  nameWithType: Color.ColorContext
  fullName: System.Windows.Media.Color.ColorContext
- uid: System.Windows.Media.ColorContext
  parent: System.Windows.Media
  isExternal: false
  name: ColorContext
  nameWithType: ColorContext
  fullName: System.Windows.Media.ColorContext
- uid: System.Windows.Media.Color.Equals(System.Object)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Equals(Object)
  nameWithType: Color.Equals(Object)
  fullName: System.Windows.Media.Color.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Equals(Color)
  nameWithType: Color.Equals(Color)
  fullName: System.Windows.Media.Color.Equals(Color)
- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Equals(Color,Color)
  nameWithType: Color.Equals(Color,Color)
  fullName: System.Windows.Media.Color.Equals(Color,Color)
- uid: System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromArgb(Byte,Byte,Byte,Byte)
  nameWithType: Color.FromArgb(Byte,Byte,Byte,Byte)
  fullName: System.Windows.Media.Color.FromArgb(Byte,Byte,Byte,Byte)
- uid: System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromAValues(Single,Single[],Uri)
  nameWithType: Color.FromAValues(Single,Single[],Uri)
  fullName: System.Windows.Media.Color.FromAValues(Single,Single[],Uri)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromRgb(Byte,Byte,Byte)
  nameWithType: Color.FromRgb(Byte,Byte,Byte)
  fullName: System.Windows.Media.Color.FromRgb(Byte,Byte,Byte)
- uid: System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromScRgb(Single,Single,Single,Single)
  nameWithType: Color.FromScRgb(Single,Single,Single,Single)
  fullName: System.Windows.Media.Color.FromScRgb(Single,Single,Single,Single)
- uid: System.Windows.Media.Color.FromValues(System.Single[],System.Uri)
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromValues(Single[],Uri)
  nameWithType: Color.FromValues(Single[],Uri)
  fullName: System.Windows.Media.Color.FromValues(Single[],Uri)
- uid: System.Windows.Media.Color.G
  parent: System.Windows.Media.Color
  isExternal: false
  name: G
  nameWithType: Color.G
  fullName: System.Windows.Media.Color.G
- uid: System.Windows.Media.Color.GetHashCode
  parent: System.Windows.Media.Color
  isExternal: false
  name: GetHashCode()
  nameWithType: Color.GetHashCode()
  fullName: System.Windows.Media.Color.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Color.GetNativeColorValues
  parent: System.Windows.Media.Color
  isExternal: false
  name: GetNativeColorValues()
  nameWithType: Color.GetNativeColorValues()
  fullName: System.Windows.Media.Color.GetNativeColorValues()
- uid: System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Multiply(Color,Single)
  nameWithType: Color.Multiply(Color,Single)
  fullName: System.Windows.Media.Color.Multiply(Color,Single)
- uid: System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Addition(Color,Color)
  nameWithType: Color.op_Addition(Color,Color)
  fullName: System.Windows.Media.Color.op_Addition(Color,Color)
- uid: System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Equality(Color,Color)
  nameWithType: Color.op_Equality(Color,Color)
  fullName: System.Windows.Media.Color.op_Equality(Color,Color)
- uid: System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Inequality(Color,Color)
  nameWithType: Color.op_Inequality(Color,Color)
  fullName: System.Windows.Media.Color.op_Inequality(Color,Color)
- uid: System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Multiply(Color,Single)
  nameWithType: Color.op_Multiply(Color,Single)
  fullName: System.Windows.Media.Color.op_Multiply(Color,Single)
- uid: System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Subtraction(Color,Color)
  nameWithType: Color.op_Subtraction(Color,Color)
  fullName: System.Windows.Media.Color.op_Subtraction(Color,Color)
- uid: System.Windows.Media.Color.R
  parent: System.Windows.Media.Color
  isExternal: false
  name: R
  nameWithType: Color.R
  fullName: System.Windows.Media.Color.R
- uid: System.Windows.Media.Color.ScA
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScA
  nameWithType: Color.ScA
  fullName: System.Windows.Media.Color.ScA
- uid: System.Windows.Media.Color.ScB
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScB
  nameWithType: Color.ScB
  fullName: System.Windows.Media.Color.ScB
- uid: System.Windows.Media.Color.ScG
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScG
  nameWithType: Color.ScG
  fullName: System.Windows.Media.Color.ScG
- uid: System.Windows.Media.Color.ScR
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScR
  nameWithType: Color.ScR
  fullName: System.Windows.Media.Color.ScR
- uid: System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)
  parent: System.Windows.Media.Color
  isExternal: false
  name: Subtract(Color,Color)
  nameWithType: Color.Subtract(Color,Color)
  fullName: System.Windows.Media.Color.Subtract(Color,Color)
- uid: System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Media.Color
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Color.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Color.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Media.Color.ToString
  parent: System.Windows.Media.Color
  isExternal: false
  name: ToString()
  nameWithType: Color.ToString()
  fullName: System.Windows.Media.Color.ToString()
- uid: System.Windows.Media.Color.ToString(System.IFormatProvider)
  parent: System.Windows.Media.Color
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Color.ToString(IFormatProvider)
  fullName: System.Windows.Media.Color.ToString(IFormatProvider)
- uid: System.Windows.Media.Color.A*
  parent: System.Windows.Media.Color
  isExternal: false
  name: A
  nameWithType: Color.A
- uid: System.Windows.Media.Color.Add*
  parent: System.Windows.Media.Color
  isExternal: false
  name: Add
  nameWithType: Color.Add
- uid: System.Windows.Media.Color.AreClose*
  parent: System.Windows.Media.Color
  isExternal: false
  name: AreClose
  nameWithType: Color.AreClose
- uid: System.Windows.Media.Color.B*
  parent: System.Windows.Media.Color
  isExternal: false
  name: B
  nameWithType: Color.B
- uid: System.Windows.Media.Color.Clamp*
  parent: System.Windows.Media.Color
  isExternal: false
  name: Clamp
  nameWithType: Color.Clamp
- uid: System.Windows.Media.Color.ColorContext*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ColorContext
  nameWithType: Color.ColorContext
- uid: System.Windows.Media.Color.Equals*
  parent: System.Windows.Media.Color
  isExternal: false
  name: Equals
  nameWithType: Color.Equals
- uid: System.Windows.Media.Color.FromArgb*
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromArgb
  nameWithType: Color.FromArgb
- uid: System.Windows.Media.Color.FromAValues*
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromAValues
  nameWithType: Color.FromAValues
- uid: System.Windows.Media.Color.FromRgb*
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromRgb
  nameWithType: Color.FromRgb
- uid: System.Windows.Media.Color.FromScRgb*
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromScRgb
  nameWithType: Color.FromScRgb
- uid: System.Windows.Media.Color.FromValues*
  parent: System.Windows.Media.Color
  isExternal: false
  name: FromValues
  nameWithType: Color.FromValues
- uid: System.Windows.Media.Color.G*
  parent: System.Windows.Media.Color
  isExternal: false
  name: G
  nameWithType: Color.G
- uid: System.Windows.Media.Color.GetHashCode*
  parent: System.Windows.Media.Color
  isExternal: false
  name: GetHashCode
  nameWithType: Color.GetHashCode
- uid: System.Windows.Media.Color.GetNativeColorValues*
  parent: System.Windows.Media.Color
  isExternal: false
  name: GetNativeColorValues
  nameWithType: Color.GetNativeColorValues
- uid: System.Windows.Media.Color.Multiply*
  parent: System.Windows.Media.Color
  isExternal: false
  name: Multiply
  nameWithType: Color.Multiply
- uid: System.Windows.Media.Color.op_Addition*
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Addition
  nameWithType: Color.op_Addition
- uid: System.Windows.Media.Color.op_Equality*
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Equality
  nameWithType: Color.op_Equality
- uid: System.Windows.Media.Color.op_Inequality*
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Inequality
  nameWithType: Color.op_Inequality
- uid: System.Windows.Media.Color.op_Multiply*
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Multiply
  nameWithType: Color.op_Multiply
- uid: System.Windows.Media.Color.op_Subtraction*
  parent: System.Windows.Media.Color
  isExternal: false
  name: op_Subtraction
  nameWithType: Color.op_Subtraction
- uid: System.Windows.Media.Color.R*
  parent: System.Windows.Media.Color
  isExternal: false
  name: R
  nameWithType: Color.R
- uid: System.Windows.Media.Color.ScA*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScA
  nameWithType: Color.ScA
- uid: System.Windows.Media.Color.ScB*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScB
  nameWithType: Color.ScB
- uid: System.Windows.Media.Color.ScG*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScG
  nameWithType: Color.ScG
- uid: System.Windows.Media.Color.ScR*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ScR
  nameWithType: Color.ScR
- uid: System.Windows.Media.Color.Subtract*
  parent: System.Windows.Media.Color
  isExternal: false
  name: Subtract
  nameWithType: Color.Subtract
- uid: System.Windows.Media.Color.System#IFormattable#ToString*
  parent: System.Windows.Media.Color
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Color.System.IFormattable.ToString
- uid: System.Windows.Media.Color.ToString*
  parent: System.Windows.Media.Color
  isExternal: false
  name: ToString
  nameWithType: Color.ToString
