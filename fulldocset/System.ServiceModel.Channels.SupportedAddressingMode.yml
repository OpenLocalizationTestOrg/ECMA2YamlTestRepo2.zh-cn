### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "指定非匿名地址，或者对二者同时服务是否支持匿名地址发送响应。"
  remarks: "此枚举用于指定一服务器，后者反过来，施加了对其客户端要求的功能。       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]有多种寻址控制，用于指定消息应发送到的位置。 例如，没有逻辑<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>消息目标的地址、 物理 (&quot;Via&quot;) 使用的传输，此时服务侦听的地址和<xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>提供客户端终结点的地址的终结点地址。</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       在最基本的情况下，当两个参与方之间交换消息本身仅，它不需要单独指定这些地址。 但是交换过程可能涉及其他消息目标，你必须能够在需要明确提供地址时指定。 仅使用两个参与方之间甚至此功能有时是必需的作为使用双向 HTTP 服务器必须在其中创建自己的 HTTP 请求。 下列关系种类定义由 SupportedAddressingMode 枚举，用以捕获这些消息模式:-匿名地址是寻址的最基本形式。 响应的默认路径时，则会使用匿名寻址。 TCP 是双向通信传输协议，且 TCP 消息的响应可发送回发送原始消息的套接字的另一端。 同样，HTTP 请求-答复模式发送响应通过 HTTP 回复通道。 这些响应都不要求指定将响应消息。 如果服务器要求来自客户端匿名响应，它会使用匿名枚举的值。 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]系统提供<xref:System.ServiceModel.NetTcpBinding>，<xref:System.ServiceModel.BasicHttpBinding>和<xref:System.ServiceModel.WSHttpBinding>绑定一律使用匿名地址。</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -非匿名地址发送响应要求创建新的通信通道时使用。 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]系统提供<xref:System.ServiceModel.WSDualHttpBinding>绑定使用的非匿名地址。</xref:System.ServiceModel.WSDualHttpBinding> 使用双向 HTTP 客户端创建以将消息发送的 HTTP 请求和服务器然后必须创建自己的 HTTP 请求来发送响应。 由于服务器要启动发送，它必须有特定的终结点，以建立连接。 你必须用于响应提供服务器的终结点地址。 同样，如果服务必须响应它接收的单向消息，则还需要非匿名地址，因为不没有可用于通信的任何反向通道。 如果服务器将发送回一条消息，则需要是完全独立于用于发送第一条消息操作。      混合是一种寻址它可以合并根据正在发送的消息的匿名和非匿名地址的第三个形式。 混合模式寻址的典型示例是使用专用计算机来处理错误或确认消息。 如果回复的标准交换序列是 HTTP 或 TCP，则响应会使用匿名寻址，但出错时使用非匿名寻址。 虽然[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]不提供混合寻址在某个标准绑定的功能，就可以编写一个通道，使服务可以发送响应，直接在反向通道 （当响应地址为匿名） 上或独立通道上 （当响应地址为非匿名）。 在这种情况下，通道的绑定元素用于混合的 setSupportedAddressingMode。"
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "服务器仅支持匿名地址，客户端必须提供匿名响应地址。"
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "服务器支持匿名和非匿名地址，客户端可以选择使用任一或全部。"
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "服务器仅支持非匿名地址，客户端必须提供非匿名响应地址。"
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
