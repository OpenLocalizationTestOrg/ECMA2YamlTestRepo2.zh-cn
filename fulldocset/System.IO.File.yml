### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "提供静态方法用于创建、 复制、 删除、 移动和打开单个文件，并协助创建<xref href=&quot;System.IO.FileStream&quot;></xref>对象。       若要浏览此类型的.NET Framework 源代码，请参阅[引用源](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)。"
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "向一个文件中追加行，然后关闭该文件。 如果指定的文件不存在，此方法将创建一个文件，该文件，向其中写入指定的行，然后关闭该文件。"
  remarks: "如果不存在，但它不会创建新目录，该方法将创建该文件。 因此，值`path`参数必须包含现有目录。"
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "要向其中追加行的文件。 如果它尚不存在，则创建该文件。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要追加到文件中的行。"
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个由定义的多个无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，目录不存在或它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有写入到文件的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。"
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "通过使用指定编码，将行追加到文件，然后关闭该文件。 如果指定的文件不存在，此方法将创建一个文件，该文件，向其中写入指定的行，然后关闭该文件。"
  remarks: "如果不存在，但它不会创建新目录，该方法将创建该文件。 因此，值`path`参数必须包含现有目录。       你可以使用此方法创建包含以下文件:-的结果[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)查询的文件的行，如使用获取<xref:System.IO.File.ReadLines%2A>方法。</xref:System.IO.File.ReadLines%2A>      的实现的集合内容<xref:System.Collections.Generic.IEnumerable%601>的字符串。</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要向其中追加行的文件。 如果它尚不存在，则创建该文件。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要追加到文件中的行。"
    - id: encoding
      type: System.Text.Encoding
      description: "使用编码的字符。"
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个由定义的多个无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，目录不存在或它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开文件，将指定的字符串追加到文件，然后关闭该文件。 如果文件不存在，此方法将创建一个文件，将指定的字符串写入该文件，然后关闭该文件。"
  remarks: "此方法给定字符串和文件路径，在打开指定的文件，将字符串追加到文件的末尾，然后关闭该文件。 文件句柄保证即将关闭此方法，即使引发异常。       如果不存在，但它不会创建新目录，该方法将创建该文件。 因此，值`path`参数必须包含现有目录。"
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "要追加到指定的字符串的文件。"
    - id: contents
      type: System.String
      description: "要追加到文件的字符串。"
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，目录不存在或它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将指定的字符串追加到文件中，创建文件，如果不存在。"
  remarks: "此方法给定字符串和文件路径，在打开指定的文件，将字符串追加到使用指定的编码，对文件的末尾，然后关闭该文件。 文件句柄保证即将关闭此方法，即使引发异常。       如果不存在，但它不会创建新目录，该方法将创建该文件。 因此，值`path`参数必须包含现有目录。"
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要追加到指定的字符串的文件。"
    - id: contents
      type: System.String
      description: "要追加到文件的字符串。"
    - id: encoding
      type: System.Text.Encoding
      description: "使用编码的字符。"
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，目录不存在或它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建<xref:System.IO.StreamWriter>的 utf-8 编码将文本追加到现有文件，或新文件如果指定的文件不存在。</xref:System.IO.StreamWriter>"
  remarks: "此方法相当于<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>构造函数重载。</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 如果指定的文件`path`不存在，则创建它。 如果存在该文件，写入到操作<xref:System.IO.StreamWriter>将文本追加到文件。</xref:System.IO.StreamWriter> 允许其他线程处于打开状态时读取文件。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       `path`参数不区分大小写。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要追加到文件的路径。"
    return:
      type: System.IO.StreamWriter
      description: "一个流写入器的追加 utf-8 编码文本到指定的文件或新文件。"
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，目录不存在或它位于未映射的驱动器上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将现有文件复制到新文件。 不允许覆盖同名的文件。"
  remarks: "此方法相当于<xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>方法重载`overwrite`参数设置为`false`。</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       `sourceFileName`和`destFileName`参数可指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>方法。</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> 此方法不支持的参数中的通配符。       在复制的文件中保留的原始文件的属性。"
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destFileName
      type: System.String
      description: "目标文件的名称。 这不能是一个目录或现有文件。"
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。       -<code>sourceFileName</code>或<code>destFileName</code>指定的目录。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路径<code> sourceFileName </code>或<code> destFileName </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>未找到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>存在。       -或者-发生了 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式无效。"
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将现有文件复制到新文件。 允许覆盖同名的文件。"
  remarks: "`sourceFileName`和`destFileName`参数可指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 此方法不支持的参数中的通配符。       在复制的文件中保留的原始文件的属性。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destFileName
      type: System.String
      description: "目标文件的名称。 这不能是目录。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以覆盖目标文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。       -<code>sourceFileName</code>或<code>destFileName</code>指定的目录。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路径<code> sourceFileName </code>或<code> destFileName </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>未找到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -或者-发生了 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式无效。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建或覆盖指定的路径中的文件。"
  remarks: "<xref:System.IO.FileStream>由该方法创建的对象具有一个默认<xref:System.IO.FileShare>值<xref:System.IO.FileShare>; 没有其他进程或代码在关闭原始文件句柄之前，可以访问创建的文件。</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       此方法相当于<xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>方法重载使用默认的缓冲区大小。</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果指定的文件不存在，则创建它;如果它存在，并且不是只读的将覆盖的内容。       默认情况下，对新文件的完全读/写访问权限授予所有用户。 该文件以读/写访问权限打开，并且必须先关闭然后它可由其他应用程序中打开。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "路径和要创建的文件的名称。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>提供对中指定的文件的读/写访问<code> path </code>。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       - <code> path </code>指定的文件是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "创建文件时发生 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建或覆盖指定的文件。"
  remarks: "<xref:System.IO.FileStream>由该方法创建的对象具有一个默认<xref:System.IO.FileShare>值<xref:System.IO.FileShare>; 没有其他进程或代码在关闭原始文件句柄之前，可以访问创建的文件。</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       此方法相当于<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>构造函数重载。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的文件不存在，则创建它;如果它存在，并且不是只读的将覆盖的内容。       默认情况下，对新文件的完全读/写访问权限授予所有用户。 该文件以读/写访问权限打开，并且必须先关闭然后它可由其他应用程序中打开。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "文件的名称。"
    - id: bufferSize
      type: System.Int32
      description: "读取和写入文件的缓冲的字节数。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>与提供对中指定的文件的读/写访问的指定的缓冲区大小<code> path </code>。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       - <code> path </code>指定的文件是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "创建文件时发生 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建或覆盖指定的文件，指定缓冲区大小和<xref href=&quot;System.IO.FileOptions&quot;></xref>值，该值描述如何创建或覆盖该文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       此方法相当于<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>构造函数重载。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的文件不存在，则创建它;如果它存在，并且不是只读的将覆盖的内容。       默认情况下，对新文件的完全读/写访问权限授予所有用户。 该文件以读/写访问权限打开，并且必须先关闭然后它可由其他应用程序中打开。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "文件的名称。"
    - id: bufferSize
      type: System.Int32
      description: "读取和写入文件的缓冲的字节数。"
    - id: options
      type: System.IO.FileOptions
      description: "之一<xref href=&quot;System.IO.FileOptions&quot;></xref>描述如何创建或覆盖该文件的值。"
    return:
      type: System.IO.FileStream
      description: "具有指定的缓冲区大小的新文件。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       - <code> path </code>指定的文件是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "创建文件时发生 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建或覆盖具有指定的缓冲区大小、 文件选项和文件安全性的指定的文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       此方法相当于<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>构造函数重载。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的文件不存在，则创建它;如果它存在，并且不是只读的将覆盖的内容。       默认情况下，对新文件的完全读/写访问权限授予所有用户。 该文件以读/写访问权限打开，并且必须先关闭然后它可由其他应用程序中打开。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "文件的名称。"
    - id: bufferSize
      type: System.Int32
      description: "读取和写入文件的缓冲的字节数。"
    - id: options
      type: System.IO.FileOptions
      description: "之一<xref href=&quot;System.IO.FileOptions&quot;></xref>描述如何创建或覆盖该文件的值。"
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>值确定的访问控制和审核对文件的安全。"
    return:
      type: System.IO.FileStream
      description: "具有指定的缓冲区大小、 文件选项和文件安全性的新文件。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       - <code> path </code>指定的文件是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "创建文件时发生 I/O 错误。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建或打开用于写入 utf-8 编码文本的文件。"
  remarks: "此方法相当于<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>使用构造函数重载`append`参数设置为`false`。</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 如果指定的文件`path`不存在，则创建它。 如果存在该文件，将覆盖其内容。 允许其他线程处于打开状态时读取文件。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要打开进行写入的文件。"
    return:
      type: System.IO.StreamWriter
      description: "A <xref:System.IO.StreamWriter>，写入指定的文件使用 utf-8 编码。</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "解密由当前帐户使用加密的文件<xref:System.IO.File.Encrypt*>方法。</xref:System.IO.File.Encrypt*>"
  remarks: "解密方法允许你使用加密文件进行解密<xref:System.IO.File.Encrypt%2A>方法。</xref:System.IO.File.Encrypt%2A>  解密方法可以解密使用当前用户帐户加密的文件。       解密方法要求对正在解密文件的独占访问权限，并且，如果另一个进程正在使用该文件将引发异常。 如果未加密文件，解密将返回非零值，该值指示成功。       同时<xref:System.IO.File.Encrypt%2A>方法和解密方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</xref:System.IO.File.Encrypt%2A>       当前的文件系统必须格式化为 NTFS 和当前的操作系统必须是 Windows NT 或更高版本。"
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "描述要解密的文件的路径。"
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>参数是零长度字符串，仅包含空格，或由<xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>定义包含一个或多个无效字符"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了无效的驱动器。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所描述的文件<code> path </code>找不到参数。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。 例如，加密的文件已打开。       -或者-当前平台上不支持此操作。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "当前操作系统不是 Windows NT 或更高版本。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "文件系统不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或- <code> path </code>参数指定了一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "删除指定的文件。"
  remarks: "指定的任何相对或绝对路径信息的文件名称`path`参数。 不能包含通配符字符。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果要删除的文件不存在，不引发异常。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "要删除的文件的名称。 不支持通配符。"
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的文件正在使用。       -或-该文件，打开句柄并且操作系统是 Windows XP 或更早版本。 枚举目录和文件，则可能会导致此开放句柄。 有关详细信息，请参阅[如何︰ 枚举目录和文件](~/add/includes/ajax-current-ext-md.md)。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       -或者-文件是正在使用的可执行文件。       - <code> path </code>是一个目录。       - <code> path </code>指定了一个只读文件。"
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将某个文件加密，使得只有用于加密该文件的帐户可以对其进行解密。"
  remarks: "加密方法允许你的文件进行加密，使得仅用来调用此方法的帐户可以对其进行解密。 使用<xref:System.IO.File.Decrypt%2A>方法以解密加密的加密方法的文件。</xref:System.IO.File.Decrypt%2A>       加密方法要求对所加密的文件独占访问权，并且如果另一个进程正在使用该文件将失败。       这两种加密方法和<xref:System.IO.File.Decrypt%2A>方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</xref:System.IO.File.Decrypt%2A>       此方法不是所有版本的 Windows 上可用的。 例如，不在主页版本上可用。       当前的文件系统必须格式化为 NTFS。"
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "描述要加密的文件的路径。"
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>参数是零长度字符串，仅包含空格，或由<xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>定义包含一个或多个无效字符"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了无效的驱动器。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所描述的文件<code> path </code>找不到参数。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。       -或者-当前平台上不支持此操作。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "当前操作系统不是 Windows NT 或更高版本。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "文件系统不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或- <code> path </code>参数指定了一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "确定指定的文件是否存在。"
  remarks: "Exists 方法不应该用于路径验证，此方法只检查中指定的文件是否`path`存在。 将无效的路径传递给 Exists 返回`false`。 若要检查的路径是否包含任何无效字符，可以调用<xref:System.IO.Path.GetInvalidPathChars%2A>方法来检索文件系统对于无效的字符。</xref:System.IO.Path.GetInvalidPathChars%2A> 你还可以创建要测试是否正则表达式的路径对于你的环境是否有效。 有关可接受的路径的示例，请参阅<xref:System.IO.File>。</xref:System.IO.File>       若要检查如果目录存在，请参阅<xref:System.IO.Directory.Exists%2A?displayProperty=fullName>。</xref:System.IO.Directory.Exists%2A?displayProperty=fullName>       要注意，另一个进程可以可能进行一些处理时间之间的文件调用 Exists 方法并执行该文件，如<xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A>的另一个操作       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果`path`描述一个目录，此方法返回`false`。 从删除尾随空格`path`之前确定文件是否存在的参数。       Exists 方法返回`false`如果在尝试确定指定的文件是否存在任何错误时发生。 在引发异常，例如传递具有无效的字符或太多字符，磁盘失效或缺失的文件名的情况下可能发生这或如果调用方没有权限读取此文件。"
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "要检查的文件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果调用方具有所需的权限和<code> path </code>包含现有文件的名称; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 此方法也返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果<code> path </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，一个无效路径或零长度字符串。 如果调用方不具有足够的权限读取指定的文件，不会引发异常，并且该方法返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>无论是否存在<code> path </code>。"
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "获取<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>对象，它封装指定文件的访问控制列表 (ACL) 项。"
  remarks: "GetAccessControl 方法用于检索文件的访问控制列表 (ACL) 项。       ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。 有关详细信息，请参阅[如何︰ 添加或移除访问控制列表项](~/add/includes/ajax-current-ext-md.md)。       在 NTFS 环境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>如果用户具有向用户授予<xref:System.Security.AccessControl.FileSystemRights>上的父文件夹的权限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒绝<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒绝<xref:System.Security.AccessControl.FileSystemRights>上的父目录。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "包含的文件的路径<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>描述文件的访问控制列表 (ACL) 信息的对象。"
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>对象，它封装的访问控制规则所描述的文件<code> path </code>参数。"
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到该文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或- <code> path </code>参数指定了一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "获取<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>封装特定文件的访问控制列表 (ACL) 项的指定的类型的对象。"
  remarks: "GetAccessControl 方法用于检索文件的访问控制列表 (ACL) 项。       ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。 有关详细信息，请参阅[如何︰ 添加或移除访问控制列表项](~/add/includes/ajax-current-ext-md.md)。       在 NTFS 环境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>如果用户具有向用户授予<xref:System.Security.AccessControl.FileSystemRights>上的父文件夹的权限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒绝<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒绝<xref:System.Security.AccessControl.FileSystemRights>上的父目录。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "包含的文件的路径<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>描述文件的访问控制列表 (ACL) 信息的对象。"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;></xref>值，指定的类型的访问控制列表 (ACL) 信息来接收。"
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>对象，它封装的访问控制规则所描述的文件<code> path </code>参数。"
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到该文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或- <code> path </code>参数指定了一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "获取<xref href=&quot;System.IO.FileAttributes&quot;></xref>的路径上的文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件的路径。"
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;> </xref>的路径上的文件。"
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>为空，仅包含空格，或包含无效字符。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>表示一个文件，且是无效，例如位于未映射的驱动器或文件上找不到。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>表示一个目录且是无效，例如位于未映射的驱动器，则在目录上找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由另一个进程正在使用此文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回的创建日期和时间的指定的文件或目录。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)为本地时间调整协调世界时 (UTC)。       NTFS 格式化的驱动器可能缓存文件，如短时间内的文件创建时间的信息。 因此，可能有必要显式设置文件的创建时间，如果要覆盖或替换现有文件。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其创建日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为的创建日期和时间的指定的文件或目录。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回指定的文件或目录的创建日期和时间，格式为协调世界时 (UTC)。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)协调世界时 (UTC)。       NTFS 格式化的驱动器可能缓存文件，如短时间内的文件创建时间的信息。 因此，可能有必要显式设置文件的创建时间，如果要覆盖或替换现有文件。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其创建日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为的创建日期和时间的指定的文件或目录。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回的日期和时间指定上次访问文件或目录。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)为本地时间调整协调世界时 (UTC)。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其访问日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为日期和时间上次访问指定的文件或目录。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回的日期和时间，以协调世界时 (UTC)，上次访问指定的文件或目录。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)协调世界时 (UTC)。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其访问日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为日期和时间上次访问指定的文件或目录。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回的日期和时间指定上次写入文件或目录。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。 每个操作系统管理根据其自己的规则的上次写入时间。 若要提高性能，操作系统未设置上次写入时间值的最后一个写入操作的确切时间，但可能会将其设置为近似相反。       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)为本地时间调整协调世界时 (UTC)。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其写入日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为的日期和上次写入指定的文件或目录的时间。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "返回的日期和时间，上次写入指定的文件或目录的协调世界时 (UTC) 中。"
  remarks: "> [!NOTE]1> 此方法可能返回不准确的值，因为它使用其值可能不会持续更新由操作系统的本机函数。 每个操作系统管理根据其自己的规则的上次写入时间。 若要提高性能，操作系统未设置上次写入时间值的最后一个写入操作的确切时间，但可能会将其设置为近似相反。       如果该文件中所述`path`参数不存在，此方法将返回第午夜 12:00 到公元 1601 年 1 月 1 日 (C.E.)协调世界时 (UTC)。       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "文件或为要获取其写入日期和时间信息的目录中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>结构设置为的日期和上次写入指定的文件或目录的时间。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将指定的文件移到新位置，提供要指定新文件名的选项。"
  remarks: "此方法适用于整个磁盘卷，并且它不会引发异常，如果源和目标相同。 请注意，是否你尝试通过将具有相同名称的文件移到该目录替换文件，你会获得<xref:System.IO.IOException>.</xref:System.IO.IOException> Move 方法不能用于覆盖现有文件。       `sourceFileName`和`destFileName`自变量可以包括相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果你尝试将文件移跨磁盘卷，并且该文件正在使用中，将文件复制到目标，但它不会删除从源。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移动的文件的名称。 可以包括相对或绝对路径。"
    - id: destFileName
      type: System.String
      description: "新路径和文件的名称。"
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标文件已存在。       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>是零长度字符串，仅包含空格，或包含无效字符中定义<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路径<code> sourceFileName </code>或<code> destFileName </code>是无效的 （例如，它位于未映射的驱动器上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式无效。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开<xref href=&quot;System.IO.FileStream&quot;></xref>指定路径上具有读/写访问。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "要打开的文件。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，该值指定是否文件创建一个不存在，并确定是保留还是覆盖现有文件的内容。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>打开指定的模式和路径，使用读/写访问与不共享权限。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的文件是一个隐藏的文件。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定的值无效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开<xref href=&quot;System.IO.FileStream&quot;></xref>上指定的路径，使用指定的模式和访问权限。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>"
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "要打开的文件。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，该值指定是否文件创建一个不存在，并确定是保留还是覆盖现有文件的内容。"
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref>值，该值指定可以对文件执行的操作。"
    return:
      type: System.IO.FileStream
      description: "一个非共享<xref href=&quot;System.IO.FileStream&quot;> </xref> ，它提供访问指定的文件中，具有指定的模式和访问权限。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定是只读的文件和<code>access</code>不<xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的文件是一个隐藏的文件。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>或<code>access</code>指定的值无效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开<xref href=&quot;System.IO.FileStream&quot;></xref>上指定的路径、 具有指定的模式带读、 写或读/写访问权限和指定的共享选项。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "要打开的文件。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，该值指定是否文件创建一个不存在，并确定是保留还是覆盖现有文件的内容。"
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref>值，该值指定可以对文件执行的操作。"
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref>值，该值指定其他线程具有到文件的访问类型。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>上指定的路径、 具有指定的模式带读、 写或读/写访问权限和指定的共享选项。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定是只读的文件和<code>access</code>不<xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的文件是一个隐藏的文件。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code><code>access</code>，或<code>share</code>指定的值无效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开用于读取的现有文件。"
  remarks: "此方法相当于<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>使用<xref:System.IO.FileMode>的<xref:System.IO.FileMode>、<xref:System.IO.FileAccess>和<xref:System.IO.FileAccess><xref:System.IO.FileShare>的<xref:System.IO.FileShare>.</xref:System.IO.FileShare>值</xref:System.IO.FileShare></xref:System.IO.FileAccess>的值</xref:System.IO.FileAccess></xref:System.IO.FileMode>的值</xref:System.IO.FileMode>来构造函数重载</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "要以只读方式打开的文件。"
    return:
      type: System.IO.FileStream
      description: "只读<xref href=&quot;System.IO.FileStream&quot;></xref>指定路径上。"
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开现有 utf-8 编码的文本文件以进行读取。"
  remarks: "此方法相当于<xref:System.IO.StreamReader.%23ctor%28System.String%29>构造函数重载。</xref:System.IO.StreamReader.%23ctor%28System.String%29>       `path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要以只读方式打开的文件。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>在指定的路径。</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开现有文件或创建新文件以进行写入。"
  remarks: "此方法相当于<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>与文件模式设置的构造函数重载<xref:System.IO.FileMode>，访问权限设为<xref:System.IO.FileAccess>，和共享模式设置为<xref:System.IO.FileShare>。</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       如果一个已存在的文件路径，或创建一个新文件，如果不存在，则 OpenWrite 方法打开文件。 对于现有的文件，它不会不新将文本追加到现有的文本。 相反，它将用新的字符覆盖现有的字符。 如果使用较短字符串 （如&quot;第二次运行&quot;） （例如&quot;This is OpenWrite 方法的测试)&quot;覆盖较长的字符串，则文件将包含多种字符串 (&quot;第二个 runtest OpenWrite 方法的&quot;)。       `path`参数可以指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请使用<xref:System.IO.Directory.GetCurrentDirectory%2A>方法。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "要打开进行写入的文件。"
    return:
      type: System.IO.FileStream
      description: "一个非共享<xref href=&quot;System.IO.FileStream&quot;></xref>与指定路径上的对象<xref href=&quot;System.IO.FileAccess&quot;></xref>访问。"
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。       - <code> path </code>指定只读文件或目录。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开一个二进制文件，将该文件的内容读入一个字节数组，然后关闭该文件。"
  remarks: "给定文件路径，此方法打开该文件，文件的内容读入一个字节数组，然后关闭该文件。"
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "要打开以进行读取的文件。"
    return:
      type: System.Byte[]
      description: "包含文件的内容的字节数组。"
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "当前平台上不支持此操作。       - <code> path </code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开一个文本文件，读取所有行的文件，然后关闭该文件。"
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "要打开以进行读取的文件。"
    return:
      type: System.String[]
      description: "包含文件的所有行的字符串数组。"
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开文件读取的使用指定的编码，该文件所有行，然后关闭该文件。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要打开以进行读取的文件。"
    - id: encoding
      type: System.Text.Encoding
      description: "应用于文件的内容的编码。"
    return:
      type: System.String[]
      description: "包含文件的所有行的字符串数组。"
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开一个文本文件，读取所有行的文件，然后关闭该文件。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要打开以进行读取的文件。"
    return:
      type: System.String
      description: "包含文件的所有行的字符串。"
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "打开文件读取的使用指定的编码，该文件所有行，然后关闭该文件。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要打开以进行读取的文件。"
    - id: encoding
      type: System.Text.Encoding
      description: "应用于文件的内容的编码。"
    return:
      type: System.String
      description: "包含文件的所有行的字符串。"
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "读取文件的行。"
  remarks: "ReadLines 和<xref:System.IO.File.ReadAllLines%2A>方法的行为有所不同，如下所示︰ 当你使用 ReadLines 时，你可以启动之前，则返回整个集合枚举字符串的集合; 当你使用<xref:System.IO.File.ReadAllLines%2A>，必须等待之前才能访问该数组返回整个字符串的数组。</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> 因此，当您正在使用非常大的文件，ReadLines 可以更高效。       你可以使用 ReadLines 方法执行以下操作:-执行[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)文件以获取经过筛选的其行集上的查询。      -向文件写入的行返回的集合<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>方法，或将它们追加到现有文件与<xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>方法。</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      -创建立即填充的集合获取<xref:System.Collections.Generic.IEnumerable%601>其构造函数，如<xref:System.Collections.Generic.IList%601>或<xref:System.Collections.Generic.Queue%601>。</xref:System.Collections.Generic.Queue%601></xref:System.Collections.Generic.IList%601>的字符串集合</xref:System.Collections.Generic.IEnumerable%601>的实例       此方法使用<xref:System.Text.Encoding.UTF8%2A>编码值。</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "要读取的文件。"
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "文件的所有行或行的查询结果。"
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个定义的无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "读取具有指定编码的文件的行。"
  remarks: "使用此方法指定要使用的编码读取文件。       ReadLines 和<xref:System.IO.File.ReadAllLines%2A>方法的行为有所不同，如下所示︰ 当你使用 ReadLines 时，可以开始之前，则返回整个集合枚举字符串的集合。</xref:System.IO.File.ReadAllLines%2A> 当你使用<xref:System.IO.File.ReadAllLines%2A>，必须等待之前才能访问该数组返回整个字符串的数组。</xref:System.IO.File.ReadAllLines%2A> 因此，当您正在使用非常大的文件，ReadLines 可以更高效。       你可以使用 ReadLines 方法执行以下操作:-执行[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)文件以获取经过筛选的其行集上的查询。      -向文件写入的行返回的集合<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>方法，或将它们追加到现有文件与<xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>方法。</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      -创建立即填充的集合获取<xref:System.Collections.Generic.IEnumerable%601>其构造函数，如<xref:System.Collections.Generic.IList%601>或<xref:System.Collections.Generic.Queue%601>。</xref:System.Collections.Generic.Queue%601></xref:System.Collections.Generic.IList%601>的字符串集合</xref:System.Collections.Generic.IEnumerable%601>的实例"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要读取的文件。"
    - id: encoding
      type: System.Text.Encoding
      description: "编码适用于文件的内容。"
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "文件的所有行或行的查询结果。"
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "用指定的文件的内容替换另一个文件，删除原始文件，并创建被替换文件的备份的内容。"
  remarks: "Replace 方法将指定文件的内容替换另一个文件的内容。  它还将创建被替换文件的备份。       如果`sourceFileName`和`destinationFileName`是在不同的卷上，此方法将引发的异常。 如果`destinationBackupFileName`是将源文件中的其他卷上, 删除备份文件。       传递`null`到`destinationBackupFileName`参数，如果你不想要创建被替换文件的备份。"
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "替换指定的文件的文件的名称`destinationFileName`。"
    - id: destinationFileName
      type: System.String
      description: "被替换文件的名称。"
    - id: destinationBackupFileName
      type: System.String
      description: "备份文件的名称。"
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "描述的路径<code> destinationFileName </code>参数不是合法的窗体。       -描述的路径<code> destinationBackupFileName </code>参数不是合法的窗体。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了无效的驱动器。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "当前所描述的文件<xref href=&quot;System.IO.FileInfo&quot;></xref>找不到对象。       -所描述的文件<code> destinationBackupFileName </code>找不到参数。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "操作系统是 Windows 98 Second Edition 或更早版本和文件系统不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code>或<code> destinationFileName </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或者-源或目标参数指定的目录而不是文件。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "用另一个文件，删除原始文件，并创建被替换文件的备份的内容替换指定文件的内容，还可以忽略合并错误。"
  remarks: "Replace 方法将指定文件的内容替换另一个文件的内容。  它还将创建被替换文件的备份。       如果`sourceFileName`和`destinationFileName`是在不同的卷上，此方法将引发的异常。 如果`destinationBackupFileName`是将源文件中的其他卷上, 删除备份文件。       传递`null`到`destinationBackupFileName`参数，如果你不想要创建被替换文件的备份。"
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "替换指定的文件的文件的名称`destinationFileName`。"
    - id: destinationFileName
      type: System.String
      description: "被替换文件的名称。"
    - id: destinationBackupFileName
      type: System.String
      description: "备份文件的名称。"
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要忽略合并错误 （如特性和访问控制列表 (Acl)） 从被替换文件到替换文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "描述的路径<code> destinationFileName </code>参数不是合法的窗体。       -描述的路径<code> destinationBackupFileName </code>参数不是合法的窗体。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了无效的驱动器。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "当前所描述的文件<xref href=&quot;System.IO.FileInfo&quot;></xref>找不到对象。       -所描述的文件<code> destinationBackupFileName </code>找不到参数。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "操作系统是 Windows 98 Second Edition 或更早版本和文件系统不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code>或<code> destinationFileName </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或者-源或目标参数指定的目录而不是文件。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "将访问控制列表 (ACL) 项所描述应用<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>到指定的文件的对象。"
  remarks: "SetAccessControl 方法适用于表示非继承的 ACL 列表的文件的访问控制列表 (ACL) 项。      1> [!CAUTION]&1;> 为 ACL 指定`fileSecurity`参数替换现有文件 ACL。 若要添加的新用户的权限，请使用<xref:System.IO.File.GetAccessControl%2A>方法来获取现有的 ACL，对其进行修改，然后使用 SetAccessControl 以将其应用回文件。</xref:System.IO.File.GetAccessControl%2A>       ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。 有关详细信息，请参阅[如何︰ 添加或移除访问控制列表项](~/add/includes/ajax-current-ext-md.md)。       SetAccessControl 方法仍然仅存在<xref:System.Security.AccessControl.FileSecurity>对象创建后已修改的对象。</xref:System.Security.AccessControl.FileSecurity>  如果<xref:System.Security.AccessControl.FileSecurity>尚未修改对象，它不会保留到文件。</xref:System.Security.AccessControl.FileSecurity>  因此，不能检索<xref:System.Security.AccessControl.FileSecurity>对象从一个文件，并重新对同一对象应用到另一个文件。</xref:System.Security.AccessControl.FileSecurity>       若要将 ACL 信息从一个文件复制到另一个︰ 1。  使用<xref:System.IO.File.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.FileSecurity>源文件中的对象。</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  创建一个新<xref:System.Security.AccessControl.FileSecurity>目标文件的对象。</xref:System.Security.AccessControl.FileSecurity>      3.  使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>方法的源<xref:System.Security.AccessControl.FileSecurity>要检索 ACL 信息对象。</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法的信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.FileSecurity>对象。</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  设置目标<xref:System.Security.AccessControl.FileSecurity>目标文件使用 SetAccessControl 方法的对象。</xref:System.Security.AccessControl.FileSecurity>       在 NTFS 环境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>如果用户具有向用户授予<xref:System.Security.AccessControl.FileSystemRights>上的父文件夹的权限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒绝<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒绝<xref:System.Security.AccessControl.FileSystemRights>上的父目录。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "要添加或移除访问控制列表 (ACL) 项的文件。"
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>对象，描述要应用于所描述的文件的 ACL 项`path`参数。"
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到该文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>参数指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或- <code> path </code>参数指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "设置指定<xref href=&quot;System.IO.FileAttributes&quot;></xref>的指定路径上的文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       某些文件属性，如<xref:System.IO.FileAttributes>和<xref:System.IO.FileAttributes>，可以组合。</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> 其他特性，例如<xref:System.IO.FileAttributes>，必须单独使用。</xref:System.IO.FileAttributes>       不能更改的压缩状态<xref:System.IO.File>对象使用 SetAttributes 方法。</xref:System.IO.File>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "文件的路径。"
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "枚举值的按位组合。"
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>为空，仅包含空格，包含无效字符或文件属性无效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效，（例如，它位于未映射的驱动器上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到该文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "设置日期和时间已创建了文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS 格式化的驱动器可能缓存文件元信息，例如短时间内的文件创建时间。 因此，可能有必要显式设置文件的创建时间，如果要覆盖或替换现有文件。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "为其设置的创建日期和时间信息文件。"
    - id: creationTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为的创建日期和时间设置的值`path`。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "执行操作时发生 I/O 错误。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>指定的值超出了日期、 时间，或两个此操作所允许的范围。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "设置的日期和时间，以协调世界时 (UTC)，该文件已创建。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS 格式化的驱动器可能缓存文件元信息，例如短时间内的文件创建时间。 因此，可能有必要显式设置文件的创建时间，如果要覆盖或替换现有文件。       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "为其设置的创建日期和时间信息文件。"
    - id: creationTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为的创建日期和时间设置的值`path`。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "执行操作时发生 I/O 错误。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>指定的值超出了日期、 时间，或两个此操作所允许的范围。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "设置日期和上次访问指定的文件时间。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "若要设置其访问日期和时间信息文件。"
    - id: lastAccessTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为上次访问日期和时间设置的值`path`。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>指定的值超出了允许此操作的日期或时间范围。"
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "协调世界时 (UTC)，上次访问指定的文件中设置的日期和时间。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "若要设置其访问日期和时间信息文件。"
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为上次访问日期和时间设置的值`path`。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>指定的值超出了允许此操作的日期或时间范围。"
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "设置日期和时间，上次写入指定的文件。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "为其设置的日期和时间信息文件。"
    - id: lastWriteTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为上次写入日期和时间设置的值`path`。</xref:System.DateTime> 该值用本地时间表示。"
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>指定的值超出了允许此操作的日期或时间范围。"
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "协调世界时 (UTC)，上次写入指定的文件中设置的日期和时间。"
  remarks: "`path`参数允许指定相对或绝对路径信息。 相对路径信息被解释为相对于当前工作目录。 若要获取当前工作目录，请参阅<xref:System.IO.Directory.GetCurrentDirectory%2A>。</xref:System.IO.Directory.GetCurrentDirectory%2A>       通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "为其设置的日期和时间信息文件。"
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要为上次写入日期和时间设置的值`path`。</xref:System.DateTime> 该值用 UTC 时间表示。"
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路径。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>指定的值超出了允许此操作的日期或时间范围。"
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，将指定的字节数组写入该文件，然后关闭该文件。 如果目标文件已存在，则覆盖。"
  remarks: "给定字节数组和文件路径，此方法打开指定的文件的字节数组的内容写入该文件，，然后关闭该文件。"
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: bytes
      type: System.Byte[]
      description: "要写入到文件的字节。"
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或字节数组为空。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，向其中写入一个字符串集合，然后关闭该文件。"
  remarks: "WriteAllLines 方法的默认行为是通过使用 utf-8 编码字节顺序标记 (BOM) 不写出数据。 如果需要包含 utf-8 的标识符，如字节顺序标记，在文件的开头使用<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>方法重载<xref:System.Text.Encoding.UTF8%2A>编码。</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       如果目标文件已存在，则覆盖。       你可以使用此方法创建的内容采用的集合类<xref:System.Collections.Generic.IEnumerable%601>在其构造函数，如<xref:System.Collections.Generic.List%601.%23ctor%2A>， <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>，或<xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>类。</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> </xref:System.Collections.Generic.HashSet%601.%23ctor%2A> </xref:System.Collections.Generic.List%601.%23ctor%2A> </xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要写入到文件中的行。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个定义的无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，指定的字符串数组写入该文件，然后关闭该文件。"
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.String[]
      description: "要写入到文件的字符串数组。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "通过使用指定的编码创建一个新文件，向其中写入一个字符串集合，然后关闭该文件。"
  remarks: "如果目标文件已存在，则覆盖。       你可以使用此方法创建包含以下文件:-的结果[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)查询的文件的行，如使用获取<xref:System.IO.File.ReadLines%2A>方法。</xref:System.IO.File.ReadLines%2A>      的实现的集合内容<xref:System.Collections.Generic.IEnumerable%601>的字符串。</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要写入到文件中的行。"
    - id: encoding
      type: System.Text.Encoding
      description: "使用编码的字符。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个定义的无效字符<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>是一个目录。       -或者-调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，将指定的字符串数组写入该文件通过使用指定的编码，然后关闭该文件。"
  remarks: "如果目标文件已存在，则覆盖。       给定的字符串数组和文件路径，此方法打开指定的文件写入使用指定的编码，该文件的字符串数组，然后关闭该文件。"
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.String[]
      description: "要写入到文件的字符串数组。"
    - id: encoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>对象，它表示的字符编码应用于字符串数组。</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，将指定的字符串写入该文件，然后关闭该文件。 如果目标文件已存在，则覆盖。"
  remarks: "此方法使用 utf-8 编码而无需字节顺序标记 (BOM)，因此使用<xref:System.Text.Encoding.GetPreamble%2A>方法将返回一个空字节数组。</xref:System.Text.Encoding.GetPreamble%2A> 如果需要包含 utf-8 的标识符，如字节顺序标记，在文件的开头使用<xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>方法重载<xref:System.Text.Encoding.UTF8%2A>编码。</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       此方法给定字符串和文件路径，在打开指定的文件，将字符串写入该文件，，然后关闭该文件。"
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.String
      description: "要写入到文件的字符串。"
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "创建一个新文件，将指定的字符串写入文件使用指定的编码，然后关闭该文件。 如果目标文件已存在，则覆盖。"
  remarks: "此方法给定字符串和文件路径，在打开指定的文件，将字符串写入使用指定的编码，该文件，然后关闭该文件。 文件句柄保证即将关闭此方法，即使引发异常。"
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要写入的文件。"
    - id: contents
      type: System.String
      description: "要写入到文件的字符串。"
    - id: encoding
      type: System.Text.Encoding
      description: "要应用于字符串的编码。"
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "打开文件时发生 I/O 错误。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定的文件是只读的。       -或者-当前平台上不支持此操作。       -或-<code>path</code>指定了一个目录。       -或者-调用方没有所要求的权限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是无效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有所要求的权限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
