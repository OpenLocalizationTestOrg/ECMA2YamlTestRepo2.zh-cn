### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.AttachedProperty
  id: AttachedProperty
  children:
  - System.Activities.Presentation.Model.AttachedProperty.#ctor
  - System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  - System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  - System.Activities.Presentation.Model.AttachedProperty.Name
  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.OwnerType
  - System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  - System.Activities.Presentation.Model.AttachedProperty.Type
  langs:
  - csharp
  name: AttachedProperty
  nameWithType: AttachedProperty
  fullName: System.Activities.Presentation.Model.AttachedProperty
  type: Class
  summary: "使用，以便关联或将其他信息附加到对象的实例。"
  remarks: "使用此[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]以便保持跟踪有趣的段数据处于瞬态或 （通常） 将放弃在编辑会话末尾的数据的编辑会话过程。 附加属性可在中作为项`View`可以绑定到这些值并对更改做出响应。 例如，这是所选的项模板的显示方式 （它切断于所选内容的附加属性）。"
  syntax:
    content: public abstract class AttachedProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "初始化的新实例<xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;></xref>类。"
  syntax:
    content: protected AttachedProperty ();
    parameters: []
  overload: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  id: GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "检索指定的模型项的值。"
  syntax:
    content: public abstract object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "模型项中。"
    return:
      type: System.Object
      description: "返回<xref:System.Object>包含模型项的值。</xref:System.Object>"
  overload: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  id: IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取或设置一个布尔值，该值指示是否<xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;></xref>是否可浏览。"
  remarks: "将此值设置的主影响`true`在于<xref:System.Activities.Presentation.Model.AttachedProperty>将可在检测到<xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>集合<xref:System.Activities.Presentation.Model.ModelItem>它所附加到。</xref:System.Activities.Presentation.Model.ModelItem> </xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> </xref:System.Activities.Presentation.Model.AttachedProperty>"
  syntax:
    content: public bool IsBrowsable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;></xref>可浏览; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，确定附加的属性是只读的。"
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  id: Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取或设置属性的名称。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "返回<xref:System.String>，其中包含属性的名称。</xref:System.String>"
  overload: System.Activities.Presentation.Model.AttachedProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  id: NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "创建指示指定的模型项已更改的通知。"
  syntax:
    content: public void NotifyPropertyChanged (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "已更改的项。"
  overload: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  id: OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取或设置所有者类型。"
  syntax:
    content: public Type OwnerType { get; set; }
    return:
      type: System.Type
      description: "返回<xref:System.Type>包含所有者类型。</xref:System.Type>"
  overload: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  id: ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将指定的模型项重置为默认值。"
  syntax:
    content: public abstract void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "要重置的模型项。"
  overload: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将指定的模型项设置为指定的值。"
  syntax:
    content: public abstract void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "要设置的模型项。"
    - id: value
      type: System.Object
      description: "要设置的值。"
  overload: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  id: Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取的类型。"
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "返回<xref:System.Type>包含的类型。</xref:System.Type>"
  overload: System.Activities.Presentation.Model.AttachedProperty.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty
  nameWithType: AttachedProperty.AttachedProperty
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue
  nameWithType: AttachedProperty.GetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged
  nameWithType: AttachedProperty.NotifyPropertyChanged
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue
  nameWithType: AttachedProperty.ResetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue
  nameWithType: AttachedProperty.SetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.Type*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
