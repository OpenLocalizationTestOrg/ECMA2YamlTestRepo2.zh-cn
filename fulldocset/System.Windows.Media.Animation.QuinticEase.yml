### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.QuinticEase
  id: QuinticEase
  children:
  - System.Windows.Media.Animation.QuinticEase.#ctor
  - System.Windows.Media.Animation.QuinticEase.CreateInstanceCore
  - System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: QuinticEase
  nameWithType: QuinticEase
  fullName: System.Windows.Media.Animation.QuinticEase
  type: Class
  summary: "表示创建的动画的缓动函数加速和/或减速使用公式*f*(*t*) = *t*<sup>5</sup>。"
  remarks: "你可以控制是否动画加快，减速或这二者通过指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 下图演示的不同值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>其中*f*(*t*) 表示的动画进度和*t*表示时间。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![不同缓动模式图的 QuinticEase。](~/add/media/quinticease-graph.png &quot;不同缓动模式图的 QuinticEase。&quot;)       用于此函数的公式如下所示。       *f*(*t*) = *t*<sup>5</sup>       >  [!NOTE]&1;> 可以使用<xref:System.Windows.Media.Animation.PowerEase>创建相同的行为<xref:System.Windows.Media.Animation.CubicEase>， <xref:System.Windows.Media.Animation.QuadraticEase>， <xref:System.Windows.Media.Animation.QuarticEase>，并通过使用 QuinticEase<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性。</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.QuarticEase> </xref:System.Windows.Media.Animation.QuadraticEase> </xref:System.Windows.Media.Animation.CubicEase> </xref:System.Windows.Media.Animation.PowerEase> 例如，如果你想要使用<xref:System.Windows.Media.Animation.PowerEase>用于替换<xref:System.Windows.Media.Animation.CubicEase>，指定<xref:System.Windows.Media.Animation.PowerEase.Power%2A>值为 3。</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.CubicEase> </xref:System.Windows.Media.Animation.PowerEase>       还有一些其他缓动函数除了你可以使用下面的 Silverlight 示例的 QuinticEase。       [运行此示例](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)除了使用运行时中附带的缓动函数，您可以通过从<xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>继承创建您自己的自定义缓动函数      <a name=&quot;xamlObjectElementUsage_QuinticEase&quot;></a># # XAML 对象元素用法```   <QuinticEase .../>   ```"
  example:
  - "The following example applies a QuinticEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[QuinticEase#QuinticEase](~/add/codesnippet/xaml/quinticease/window1.xaml#quinticease)]\n [!code-xml[QuinticEase#QuinticEase](~/add/codesnippet/xaml/t-system.windows.media.a_15_1.xaml)]"
  syntax:
    content: 'public class QuinticEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.QuinticEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.QuinticEase
  langs:
  - csharp
  name: QuinticEase()
  nameWithType: QuinticEase.QuinticEase()
  fullName: System.Windows.Media.Animation.QuinticEase.QuinticEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.QuinticEase&quot;></xref>类。"
  syntax:
    content: public QuinticEase ();
    parameters: []
  overload: System.Windows.Media.Animation.QuinticEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.QuinticEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: QuinticEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建的新实例<xref href=&quot;System.Windows.Freezable&quot;></xref>派生类。 在创建派生的类时，必须重写此方法。"
  remarks: "动画类间接继承<xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> 因此，您需要重写<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>方法来构造自定义的动画对象。</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新实例。"
  overload: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.QuinticEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: QuinticEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.QuinticEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "提供可以重写以生成的缓动函数的逻辑部分<xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;></xref>模式的自定义缓动函数。"
  remarks: "此方法转换规范化的时间，以控制节奏的<xref:System.Windows.Media.Animation.EasingMode>用例的<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A></xref:System.Windows.Media.Animation.EasingMode>动画       只需指定你缓动函数<xref:System.Windows.Media.Animation.EasingMode>种情况下，因为的实现<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法转换`normalizedTime`为<xref:System.Windows.Media.Animation.EasingMode>和<xref:System.Windows.Media.Animation.EasingMode>情况。</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "动画的标准化的时间 （进度）。"
    return:
      type: System.Double
      description: "双精度值，该值表示已转换的进度。"
  overload: System.Windows.Media.Animation.QuinticEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.QuinticEase.#ctor
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: QuinticEase()
  nameWithType: QuinticEase.QuinticEase()
  fullName: System.Windows.Media.Animation.QuinticEase.QuinticEase()
- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: QuinticEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: QuinticEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.QuinticEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.QuinticEase.#ctor*
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: QuinticEase
  nameWithType: QuinticEase.QuinticEase
- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: QuinticEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore*
  parent: System.Windows.Media.Animation.QuinticEase
  isExternal: false
  name: EaseInCore
  nameWithType: QuinticEase.EaseInCore
