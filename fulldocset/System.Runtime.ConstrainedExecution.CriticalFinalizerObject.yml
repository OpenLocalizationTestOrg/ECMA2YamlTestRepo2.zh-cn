### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "确保所有终止代码在派生类中的被都标记为关键。"
  remarks: "从 CriticalFinalizerObject 类派生的类隐式将被视为受约束的执行区域 (CER)。  这要求在终结器仅调用具有高可靠性协定的代码中的代码。 有关 Cer 的详细信息，请参阅<xref:System.Runtime.ConstrainedExecution>命名空间。</xref:System.Runtime.ConstrainedExecution>       在从 CriticalFinalizerObject 类派生的类，所有关键终止代码将有机会在执行时，公共语言运行时 (CLR) 保证提供终结器为 CER，即使在情况下，CLR 强制卸载应用程序域或中止线程遵循的规则。 如果终结器 cer 违反规则，它可能无法成功执行。 此外，CLR 建立之间正常和关键终结器弱排序︰ 对于通过一次垃圾回收回收的对象，所有非关键的终结器调用任何关键终结器之前。 例如，如类<xref:System.IO.FileStream>，用于存储中的数据<xref:System.Runtime.InteropServices.SafeHandle>从 CriticalFinalizerObject，派生的类可以运行一个标准的终结器清空现有的缓冲数据。</xref:System.Runtime.InteropServices.SafeHandle> </xref:System.IO.FileStream>       在大多数情况下，你不需要编写从 CriticalFinalizerObject 类派生的类。 .NET Framework 类库提供了两个类，<xref:System.Runtime.InteropServices.SafeHandle>和<xref:System.Runtime.InteropServices.CriticalHandle>，句柄资源提供关键终止功能。</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle> 此外，.NET Framework 提供一组预写类派生自<xref:System.Runtime.InteropServices.SafeHandle>类，并且此组位于<xref:Microsoft.Win32.SafeHandles>命名空间。</xref:Microsoft.Win32.SafeHandles> </xref:System.Runtime.InteropServices.SafeHandle> 这些类旨在提供通用功能的支持文件和操作系统句柄。"
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "初始化的新实例<xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;></xref>类。"
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "释放使用的所有资源<xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;></xref>类。"
  remarks: "从派生的任何类型的终结器<xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>有机会执行并不会中止，假定终结器正确遵守受约束的执行区域 (CER) 的规则。</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
