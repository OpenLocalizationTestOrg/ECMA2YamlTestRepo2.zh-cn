### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  id: X509ThumbprintKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint
  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString
  langs:
  - csharp
  name: X509ThumbprintKeyIdentifierClause
  nameWithType: X509ThumbprintKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  type: Class
  summary: "表示密钥标识符子句，它标识<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>安全令牌使用 X.509 证书的指纹。"
  remarks: "通常情况下，X509ThumbprintKeyIdentifierClause 不需要时要使用，而不创建自定义安全令牌服务。 当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。 附加的引用指包含在 SOAP 消息的令牌和未附加引用则引用未包含在 SOAP 消息的安全标头的安全令牌的安全标头的安全令牌。 这些引用通常确认已颁发的安全令牌的真实性。 使用 X509ThumbprintKeyIdentifierClause 类来引用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌使用 X.509 证书的指纹。</xref:System.IdentityModel.Tokens.X509SecurityToken> <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint%2A>方法返回指纹。</xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint%2A>       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]支持以下类型的安全令牌引用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>- <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>- <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>-X509ThumbprintKeyIdentifierClause</xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: 'public class X509ThumbprintKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  langs:
  - csharp
  name: X509ThumbprintKeyIdentifierClause(Byte[])
  nameWithType: X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&quot;></xref>类使用的 X.509 证书的指定的指纹。"
  syntax:
    content: public X509ThumbprintKeyIdentifierClause (byte[] thumbprint);
    parameters:
    - id: thumbprint
      type: System.Byte[]
      description: "数组<xref:System.Byte>，包含 X.509 证书的指纹。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>thumbprint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或-<code>thumbprint</code>的长度为零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  langs:
  - csharp
  name: X509ThumbprintKeyIdentifierClause(X509Certificate2)
  nameWithType: X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&quot;></xref>类使用指定的 X.509 证书。"
  remarks: "此构造函数通过调用来获取指纹 （X.509 证书原始数据的 sha-1 哈希值）<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A>方法。</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A>"
  syntax:
    content: public X509ThumbprintKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>包含 X.509 证书。"
  overload: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint
  id: GetX509Thumbprint
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  langs:
  - csharp
  name: GetX509Thumbprint()
  nameWithType: X509ThumbprintKeyIdentifierClause.GetX509Thumbprint()
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回的 X.509 证书的指纹。"
  syntax:
    content: public byte[] GetX509Thumbprint ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>，包含 X.509 证书的指纹。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509ThumbprintKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否等效于指定的 X.509 证书的指纹。"
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含要比较的 X.509 证书。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> certificate </code>含有相同的指纹与当前实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509ThumbprintKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回表示当前对象的字符串。"
  remarks: "ToString 方法返回指纹。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，表示当前对象。</xref:System.String>"
  overload: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: X509ThumbprintKeyIdentifierClause(Byte[])
  nameWithType: X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: X509ThumbprintKeyIdentifierClause(X509Certificate2)
  nameWithType: X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: GetX509Thumbprint()
  nameWithType: X509ThumbprintKeyIdentifierClause.GetX509Thumbprint()
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint()
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509ThumbprintKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509ThumbprintKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: X509ThumbprintKeyIdentifierClause
  nameWithType: X509ThumbprintKeyIdentifierClause.X509ThumbprintKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint*
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: GetX509Thumbprint
  nameWithType: X509ThumbprintKeyIdentifierClause.GetX509Thumbprint
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509ThumbprintKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509ThumbprintKeyIdentifierClause.ToString
