### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ControlTemplate
  id: ControlTemplate
  children:
  - System.Windows.Controls.ControlTemplate.#ctor
  - System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  - System.Windows.Controls.ControlTemplate.TargetType
  - System.Windows.Controls.ControlTemplate.Triggers
  - System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: ControlTemplate
  nameWithType: ControlTemplate
  fullName: System.Windows.Controls.ControlTemplate
  type: Class
  summary: "指定 visual 结构和行为方面<xref href=&quot;System.Windows.Controls.Control&quot;> </xref> ，可以在控件的多个实例之间进行共享。"
  remarks: "ControlTemplate 可以指定控件的可视结构。 控件作者还可定义默认 ControlTemplate 并且应用程序作者可重写的 ControlTemplate 以重新构造该控件的可视结构。       控件模板化是提供的许多功能之一[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]样式和模板化模型。 样式和模板化模型为您提供很大的灵活性，在许多情况下你不需要编写你自己的控件。 如果您是想要更改控件的可视化效果或若要替换的 ControlTemplate 现有控件，请参阅应用程序作者[样式和模板化](~/add/includes/ajax-current-ext-md.md)有关示例和的深度讨论的主题。       如果你正在编写您自己的控件，请参阅&quot;创建自定义控件&quot;[控件创作概述](~/add/includes/ajax-current-ext-md.md)。       ControlTemplate 旨在能看不到用户和对象，包括样式以外的实现详细信息的一个自包含的单元。 操作的控件模板的内容的唯一方法是在相同的控件模板。      <a name=&quot;xamlObjectElementUsage_VisualTree&quot;></a># # XAML 属性元素用法```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ``` <a name=&quot;xamlValues_VisualTree&quot;> </a> # # XAML 值*ControlTemplate* ControlTemplate 或派生的类的对象元素。             *VisualTreeRootNode*单个[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]作为 ControlTemplate （或派生的类） 的直接子元素。 模板必须具有单个根节点。 若要生成的有用的模板，作为选择的元素*VisualTreeRootNode*希望支持其自己的内容模型通常支持多个子元素的模型。       *VisualTreeNodeContents*完成预期的模板的一个或多个元素。 如果选作元素*VisualTreeRootNode*仅支持单个子级，然后那里只能将一个元素声明为*VisualTreeNodeContents*。 还有可能 （但不常见） 提供文本内容，如果所选*VisualTreeRootNode*支持文本内容属性。"
  example:
  - "The following shows a <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> that sets the ControlTemplate of a <xref:System.Windows.Controls.Button>:  \n  \n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/t-system.windows.control_3_1.xaml)]  \n  \n When this gets applied, the <xref:System.Windows.Controls.Button> appears as an <xref:System.Windows.Shapes.Ellipse>:  \n  \n ![Button ControlTemplate sample](~/add/media/stylingintro-buttoncontroltemplate.png \"Button ControlTemplate sample\")  \n  \n When you set the <xref:System.Windows.Controls.Control.Template%2A> property of a <xref:System.Windows.Controls.Control> to a new ControlTemplate as in the above example, you are replacing the entire template. What the <xref:System.Windows.Controls.Button> looks like when it is in focus or pressed is all part of the default appearance of the button that you are replacing. Therefore, depending on your needs, you may want to put in your definition what your button should look like when it is pressed, and so on, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#1](~/add/codesnippet/xaml/controltemplateexamples/resources/button.xaml#1)]  \n  \n Note that this example references resources that are not shown here. For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041). That sample provides examples of control templates for many controls and is the best way for you to get started with creating control templates."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.DictionaryKeyProperty("TargetType")]

      public class ControlTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新实例<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>类。"
  syntax:
    content: public ControlTemplate ();
    parameters: []
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新实例<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>与指定的目标类型的类。"
  syntax:
    content: public ControlTemplate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "此模板适用于类型。"
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.TargetType
  id: TargetType
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取或设置此类型<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>旨在。"
  remarks: "如果你有独立<xref:System.Windows.Controls.ControlTemplate>TargetType 属性设置为一种类型，资源部分中<xref:System.Windows.Controls.ControlTemplate>不会应用到该类型自动。</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> 相反，你需要指定`x:Key`和显式应用该模板。       另请注意，<xref:System.Windows.Controls.ControlTemplate>如果模板定义包含一种<xref:System.Windows.Controls.ContentPresenter>。</xref:System.Windows.Controls.ContentPresenter></xref:System.Windows.Controls.ControlTemplate>上必需的 TargetType 属性      <a name=&quot;xamlAttributeUsage_TargetType&quot;></a># # XAML 属性用法```   <object  TargetType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_TargetType&quot;> </a> # # XAML 值*typeName*类的类型名称。       来指代<xref:System.Type>名称的类，使用[标记扩展和 WPF XAML](~/add/includes/ajax-current-ext-md.md)。</xref:System.Type>"
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#Label](~/add/codesnippet/xaml/controltemplateexamples/resources/label.xaml#label)]  \n  \n The above example uses the following resource:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.ControlTemplate.TargetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "TargetType 属性不得为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>模板的定义是否<xref href=&quot;System.Windows.Controls.ContentPresenter&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的类型不是有效的。 TargetType <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref>必须为或继承自<xref href=&quot;System.Windows.Controls.Control&quot;> </xref>、 <xref href=&quot;System.Windows.Controls.Page&quot;> </xref>，或<xref href=&quot;System.Windows.Navigation.PageFunctionBase&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.Triggers
  id: Triggers
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取的集合<xref href=&quot;System.Windows.TriggerBase&quot;></xref>指定条件应用属性更改或根据执行操作的对象。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a># # XAML 属性元素用法```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> # # XAML 值*oneOrMoreTriggers*一个或多个<xref:System.Windows.TriggerBase>对象 (通常为<xref:System.Windows.Trigger>)。</xref:System.Windows.Trigger> </xref:System.Windows.TriggerBase>      "
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#ToolTip](~/add/codesnippet/xaml/controltemplateexamples/resources/tooltip.xaml#tooltip)]  \n  \n The above example uses the following resources:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "集合<xref href=&quot;System.Windows.TriggerBase&quot;></xref>对象。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.ControlTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "检查针对一组规则模板化父级。"
  remarks: "该方法使用以下规则︰ 1。 `templatedParent`不能是类型<xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement>       2. `templatedParent`的类型<xref:System.Windows.FrameworkElement>，它是不一<xref:System.Windows.Controls.Control>。</xref:System.Windows.Controls.Control></xref:System.Windows.FrameworkElement>不能为       3. `templatedParent`不能为<xref:System.Windows.Controls.Control>不与该键相关联<xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.Control> a"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "此模板应用到的元素。"
  overload: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>templatedParent</code> must not be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "必须将关联<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>与<xref href=&quot;System.Windows.Controls.Control&quot;></xref>通过设置&lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt;之前使用的属性<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>上<xref href=&quot;System.Windows.Controls.Control&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.ControlTemplate.#ctor
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Controls.ControlTemplate.TargetType
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.ControlTemplate.#ctor*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate
  nameWithType: ControlTemplate.ControlTemplate
- uid: System.Windows.Controls.ControlTemplate.TargetType*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: ControlTemplate.ValidateTemplatedParent
