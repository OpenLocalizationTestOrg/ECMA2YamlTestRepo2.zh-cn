### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapAttributeAttribute
  id: SoapAttributeAttribute
  children:
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  - System.Xml.Serialization.SoapAttributeAttribute.DataType
  - System.Xml.Serialization.SoapAttributeAttribute.Namespace
  langs:
  - csharp
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute
  fullName: System.Xml.Serialization.SoapAttributeAttribute
  type: Class
  summary: "指定<xref:System.Xml.Serialization.XmlSerializer>必须编码的 SOAP 特性类成员序列化为。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "SoapAttributeAttribute 类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象作为编码的 SOAP XML。</xref:System.Xml.Serialization.XmlSerializer> 结果 XML 符合万维网联合会 (www.w3.org) 文档，&quot;简单对象访问协议 (SOAP) 1.1&quot;的第 5 节。 类似的属性的完整列表，请参阅[属性，控制编码 SOAP 序列化](~/add/includes/ajax-current-ext-md.md)。       要序列化作为编码 SOAP 消息的对象，您必须先构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>创建使用<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>类。</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       适用于公共字段，以指定 SoapAttributeAttribute<xref:System.Xml.Serialization.XmlSerializer>序列化为 XML 特性字段。</xref:System.Xml.Serialization.XmlSerializer> 你可以通过设置指定该属性的替代名称<xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>属性。</xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> 设置<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>如果特性必须提供特定的 XML 架构定义语言 (XSD) 数据类型。</xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> 如果该属性属于特定 XML 命名空间，设置<xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>属性。</xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>       有关使用属性的详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)      >  [!NOTE]&1;> 可以使用 word`SoapAttribute`而不是更长的 SoapAttributeAttribute 在代码中。"
  example:
  - "The following example serializes a class that contains several fields to which a SoapAttributeAttribute is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/t-system.xml.serializati_15_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_15_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/t-system.xml.serializati_15_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapAttributeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;></xref>类。"
  remarks: "使用此构造函数创建<xref:System.Xml.Serialization.SoapAttributeAttribute>当你重写类成员的序列化。</xref:System.Xml.Serialization.SoapAttributeAttribute> 创建<xref:System.Xml.Serialization.SoapAttributeAttribute>、 设置其属性，并将该对象设置为<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>属性<xref:System.Xml.Serialization.SoapAttributes>对象。</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> </xref:System.Xml.Serialization.SoapAttributeAttribute> 有关更多详细信息，请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述。</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example creates a new <xref:System.Xml.Serialization.SoapAttributeAttribute> that is used to override the serialization of a field. After creating a <xref:System.Xml.Serialization.SoapAttributeAttribute> and setting its properties, the object is set to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. The <xref:System.Xml.Serialization.SoapAttributes> is then added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cpp[SoapAttributeAttributeEx2#1](~/add/codesnippet/cpp/m-system.xml.serializati_10_1.cpp)]\n [!code-vb[SoapAttributeAttributeEx2#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_10_1.vb)]\n [!code-cs[SoapAttributeAttributeEx2#1](~/add/codesnippet/csharp/m-system.xml.serializati_10_1.cs)]"
  syntax:
    content: public SoapAttributeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;></xref>类使用指定的值作为 XML 属性的名称。"
  remarks: ''
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/m-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/m-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public SoapAttributeAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "XML 属性的名称。"
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  id: AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置由<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>生成的 XML 属性名称"
  remarks: "AttributeName 属性用于指定的 XML 属性名称时无法使用默认值。 例如，如果 XML 属性名称作为成员标识符无效，在 AttributeName 设置为无效名称时使用的标识符的有效名称。"
  example:
  - "The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The AttributeName property is set for the `Today` field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_0_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_0_1.cpp)]"
  syntax:
    content: public string AttributeName { get; set; }
    return:
      type: System.String
      description: "XML 属性的名称。 默认值是成员标识符。"
  overload: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置生成的<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> SOAP 属性的 XML 架构定义语言 (XSD) 数据类型"
  remarks: "下表列出了 XML 架构的简单数据类型及其.net 等效项。       XML 架构`base64Binary`和`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并应用<xref:System.Xml.Serialization.SoapAttributeAttribute>与设置为&quot;base64Binary&quot;或&quot;hexBinary&quot;的数据类型，为相应。</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.Byte> XML 架构`time`和`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.SoapAttributeAttribute>与设置为&quot;日期&quot;或&quot;时间&quot;的数据类型。</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.DateTime>       对于每个 XML 架构数据类型映射到一个字符串，将应用于<xref:System.Xml.Serialization.SoapAttributeAttribute>其数据类型属性设置为 XML 架构数据类型。</xref:System.Xml.Serialization.SoapAttributeAttribute> 请注意这不会更改的序列化格式，仅该成员的架构。      1> [!NOTE]&1;> 属性是区分大小写，因此你必须将其设置完全符合 XML 架构数据类型之一。      1> [!NOTE]&1;> 将二进制数据作为 XML 元素传递是更高效，然后将其传递为 XML 特性。       有关 XML 架构数据类型的详细信息，请参阅名为&quot;XML 架构第 2︰ 数据类型&quot;万维网联合会 (www.w3.org) 文档。      |XSD 数据类型 |。最终的数据类型 |  |-------------------|--------------------|  | anyURI |<xref:System.String>|  | base64Binary |<xref:System.Byte>对象的数组 |  | 布尔 |<xref:System.Boolean>|  | 字节 |<xref:System.SByte>|  | 日期 |<xref:System.DateTime>|  | dateTime |<xref:System.DateTime>|  | 十进制 |<xref:System.Decimal>|  | double |<xref:System.Double>|  |实体 |<xref:System.String>|  |实体 |<xref:System.String>|  | float |<xref:System.Single>|  | gDay |<xref:System.String>|  | gMonth |<xref:System.String>|  | gMonthDay |<xref:System.String>|  | gYear |<xref:System.String>|  | gYearMonth |<xref:System.String>|  | hexBinary |<xref:System.Byte>对象的数组 |  | ID |<xref:System.String>|  |IDREF |<xref:System.String>|  |IDREFS |<xref:System.String>|  | int |<xref:System.Int32>|  | 整数 |<xref:System.String>|  | 语言 |<xref:System.String>|  | 长 |<xref:System.Int64>|  |名称 |<xref:System.String>|  |NCName |<xref:System.String>|  | negativeInteger |<xref:System.String>|  |NMTOKEN |<xref:System.String>|  |NMTOKENS |<xref:System.String>|  | normalizedString |<xref:System.String>|  | nonNegativeInteger |<xref:System.String>|  | nonPositiveInteger |<xref:System.String>|  |表示法 |<xref:System.String>|  | positiveInteger |<xref:System.String>|  |QName |<xref:System.Xml.XmlQualifiedName>|  | 持续时间 |<xref:System.String>|  | 字符串 |<xref:System.String>|  | 短 |<xref:System.Int16>|  | 时间 |<xref:System.DateTime>|  | 令牌 |<xref:System.String>|  | unsignedByte |<xref:System.Byte>|  | unsignedInt |<xref:System.UInt32>|  | unsignedLong |<xref:System.UInt64>|  | unsignedShort |<xref:System.UInt16>|</xref:System.UInt16></xref:System.UInt64></xref:System.UInt32></xref:System.Byte></xref:System.String></xref:System.DateTime></xref:System.Int16></xref:System.String></xref:System.String></xref:System.Xml.XmlQualifiedName></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Int64></xref:System.String></xref:System.String></xref:System.Int32></xref:System.String></xref:System.String></xref:System.String></xref:System.Byte></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Single></xref:System.String></xref:System.String></xref:System.Double></xref:System.Decimal></xref:System.DateTime></xref:System.DateTime></xref:System.SByte></xref:System.Boolean></xref:System.Byte></xref:System.String>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The DataType property is set for the `GroupNumber` and the `Today` fields.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_31_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_31_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_31_1.cpp)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: 'XML 架构数据类型，按照万维网联合会 (www.w3.org) 文档定义名为&quot;XML 架构第 2︰ 数据类型&quot;。'
  overload: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "具有指定的 XML 架构数据类型无法映射到.NET 数据类型。"
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置 XML 属性的 XML 命名空间。"
  remarks: "<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性符合万维网联合会 (www.w3.org) 规范&quot;命名空间中 XML&quot;。</xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>       若要创建与前缀关联的命名空间，必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>，包含的命名空间和前缀的 XML 文档中使用。</xref:System.Xml.Serialization.XmlSerializerNamespaces> 每个<xref:System.Xml.Serialization.XmlAttributeAttribute>必须与一种<xref:System.Xml.Serialization.XmlSerializerNamespaces>.</xref:System.Xml.Serialization.XmlSerializerNamespaces>中的命名空间</xref:System.Xml.Serialization.XmlAttributeAttribute>为你设置命名空间 当<xref:System.Xml.Serialization.XmlSerializer>生成 XML 代码中，它正确加上前缀每个属性名称。</xref:System.Xml.Serialization.XmlSerializer>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The Namespace property is set for the `GroupName` the field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_28_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_28_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_28_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "XML 属性的 XML 命名空间。"
  overload: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
