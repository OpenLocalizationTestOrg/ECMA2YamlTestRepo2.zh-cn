### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.SocketElement
  id: SocketElement
  children:
  - System.Net.Configuration.SocketElement.#ctor
  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  - System.Net.Configuration.SocketElement.IPProtectionLevel
  - System.Net.Configuration.SocketElement.PostDeserialize
  - System.Net.Configuration.SocketElement.Properties
  langs:
  - csharp
  name: SocketElement
  nameWithType: SocketElement
  fullName: System.Net.Configuration.SocketElement
  type: Class
  summary: "表示用于配置信息<xref:System.Net.Sockets.Socket>对象。</xref:System.Net.Sockets.Socket> 此类不能被继承。"
  remarks: "This class corresponds to the [\\&lt;socket\\&gt; Element (Network Settings)](../Topic/%3Csocket%3E%20Element%20\\(Network%20Settings\\).md) configuration element.  \n  \n This class provides programmatic access to information that can be stored in configuration files.  \n  \n This class is used to specify whether completion ports are used for connecting, whether completion ports are used for accepting connections, and the default IP protection level for an IPv6 socket."
  syntax:
    content: 'public sealed class SocketElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: SocketElement()
  nameWithType: SocketElement.SocketElement()
  fullName: System.Net.Configuration.SocketElement.SocketElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Net.Configuration.SocketElement&quot;></xref>类。"
  remarks: "此构造函数将添加<xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A>和<xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A>属性设置为<xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A>集合。</xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> </xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> </xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A>"
  syntax:
    content: public SocketElement ();
    parameters: []
  overload: System.Net.Configuration.SocketElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  id: AlwaysUseCompletionPortsForAccept
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "获取或设置一个布尔值，指定在接受连接时是否使用完成端口。"
  syntax:
    content: public bool AlwaysUseCompletionPortsForAccept { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用完成端口;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  id: AlwaysUseCompletionPortsForConnect
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "获取或设置一个布尔值，指定是否在创建连接时使用完成端口。"
  syntax:
    content: public bool AlwaysUseCompletionPortsForConnect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用完成端口;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel
  id: IPProtectionLevel
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
  fullName: System.Net.Configuration.SocketElement.IPProtectionLevel
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "获取或设置一个值，指定的默认<xref href=&quot;System.Net.Sockets.IPProtectionLevel&quot;></xref>用于套接字。"
  remarks: "IPProtectionLevel 属性，可对 IPv6 套接字到指定的作用域，如具有相同的链接本地地址或站点本地前缀的限制配置。 此选项使应用程序可以限制对 IPv6 套接字的访问。 此类限制，可让在专用局域网上运行的应用程序以只需方式很好地增强自身以便防范外部攻击。 此选项可以扩大或缩小侦听套接字，从而使得公共和私有用户如果合适的话，或对同一站点中，根据需要限制的访问的不受限制访问的范围。 此选项具有三个中指定的定义的保护级别<xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName>枚举。</xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName>"
  syntax:
    content: public System.Net.Sockets.IPProtectionLevel IPProtectionLevel { get; set; }
    return:
      type: System.Net.Sockets.IPProtectionLevel
      description: "值<xref href=&quot;System.Net.Sockets.IPProtectionLevel&quot;></xref>当前实例。"
  overload: System.Net.Configuration.SocketElement.IPProtectionLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.PostDeserialize
  id: PostDeserialize
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: SocketElement.PostDeserialize()
  fullName: System.Net.Configuration.SocketElement.PostDeserialize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override void PostDeserialize ();
    parameters: []
  overload: System.Net.Configuration.SocketElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.SocketElement.Properties
  id: Properties
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: Properties
  nameWithType: SocketElement.Properties
  fullName: System.Net.Configuration.SocketElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.Net.Configuration.SocketElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.SocketElement.#ctor
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: SocketElement()
  nameWithType: SocketElement.SocketElement()
  fullName: System.Net.Configuration.SocketElement.SocketElement()
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
  fullName: System.Net.Configuration.SocketElement.IPProtectionLevel
- uid: System.Net.Sockets.IPProtectionLevel
  parent: System.Net.Sockets
  isExternal: false
  name: IPProtectionLevel
  nameWithType: IPProtectionLevel
  fullName: System.Net.Sockets.IPProtectionLevel
- uid: System.Net.Configuration.SocketElement.PostDeserialize
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: SocketElement.PostDeserialize()
  fullName: System.Net.Configuration.SocketElement.PostDeserialize()
- uid: System.Net.Configuration.SocketElement.Properties
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: Properties
  nameWithType: SocketElement.Properties
  fullName: System.Net.Configuration.SocketElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.SocketElement.#ctor*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: SocketElement
  nameWithType: SocketElement.SocketElement
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
- uid: System.Net.Configuration.SocketElement.PostDeserialize*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: PostDeserialize
  nameWithType: SocketElement.PostDeserialize
- uid: System.Net.Configuration.SocketElement.Properties*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: Properties
  nameWithType: SocketElement.Properties
