### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  id: WorkflowMarkupSerializer
  children:
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  langs:
  - csharp
  name: WorkflowMarkupSerializer
  nameWithType: WorkflowMarkupSerializer
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  type: Class
  summary: "在设计时提供可扩展应用程序标记语言 (XAML) 序列化服务添加到工作流。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowMarkupSerializer 提供序列化流的方法和<xref:System.Workflow.ComponentModel.Activity>类到 XAML 格式和 XAML 内容反序列化为工作流和活动类对象。</xref:System.Workflow.ComponentModel.Activity> 这些服务主要由工作流设计器用于工作流设计图面上保留类。       WorkflowMarkupSerializer 是所有标记序列化程序中包含的基类<xref:System.Workflow.ComponentModel.Serialization>命名空间。</xref:System.Workflow.ComponentModel.Serialization>       有关详细信息，请参阅[序列化](~/add/includes/ajax-current-ext-md.md)。       WorkflowMarkupSerializer 不支持嵌套类型的序列化。       WorkflowMarkupSerializer 的功能是依赖于的 Windows Workflow Foundation 外部的其他类型的功能。 由于这些其他类型的限制，可以通过 WorkflowMarkupSerializer 序列不是所有的数据类型。 下面是列表是某些不受支持的类型的示例。      1> [!NOTE]&1;> 这不是全部和完整的不受支持的类型列表。       数组 (仅当未修饰的属性时，才支持`DesignerSerializationVisibility.Content`属性值) 无参数构造函数的多维数组泛型类型的类型 (泛型`List`和`Dictionary`修饰的属性时，才支持的类型`DesignerSerializationVisibility.Content`属性值) `Hashtable` `Queue` `Stack` `XmlDocument` `MailMessage` `Bitmap`使用除此列表中，任何两个修饰的属性之外 FlagsAttribute 修饰的枚举数组枚举`ContentPropertyAttibute`和`DesignerSerializationVisibilityAttribute`无法序列化`WorkflowMarkupSerializer`。                                   "
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationProvider))]

      public class WorkflowMarkupSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: WorkflowMarkupSerializer()
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> class.  This code example is part of the OutlookWorkflowWizard SDK Sample from the Loader.cs file. For more information, see [Outlook Workflow Wizard](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \n  \n [!code-cs[WF_Samples#97](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#97)]\n [!code-vb[WF_Samples#97](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#97)]"
  syntax:
    content: public WorkflowMarkupSerializer ();
    parameters: []
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  id: AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: AddChild(WorkflowMarkupSerializationManager,Object,Object)
  nameWithType: WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "将子对象添加到指定的对象。"
  remarks: "除了异常行为，AddChild 提供任何默认行为。 必须重写<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>提供此方法在继承序列化程序逻辑。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual void AddChild (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>要在此操作中使用。"
    - id: parentObject
      type: System.Object
      description: "<xref:System.Object>要向其中添加的子对象。</xref:System.Object>"
    - id: childObj
      type: System.Object
      description: "<xref:System.Object>添加</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentObject</code>或<code> childObj</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "返回一个布尔值，该值指示指定的对象是否可以序列化为一个字符串。"
  syntax:
    content: protected virtual bool CanSerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>用于序列化此对象。"
    - id: value
      type: System.Object
      description: "指定<xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的对象可以序列化为一个字符串;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ClearChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "从指定的对象中移除所有子对象。"
  remarks: "除了异常行为，ClearChildren 提供任何默认行为。 必须重写<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>提供此方法在继承序列化程序逻辑。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual void ClearChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>支持此操作。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要从中删除所有子对象。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  id: ClrNamespacesProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ClrNamespacesProperty
  nameWithType: WorkflowMarkupSerializer.ClrNamespacesProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "表示一个附加<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>用于定义自定义活动引用的程序集。"
  remarks: "有关此依赖项属性的详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  id: CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: CreateInstance(WorkflowMarkupSerializationManager,Type)
  nameWithType: WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "创建的指定实例<xref:System.Type>使用指定<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>。</xref:System.Type>"
  remarks: "CreateInstance 使用与指定的参数最匹配的类型构造函数。"
  syntax:
    content: protected virtual object CreateInstance (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type type);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>支持此操作。"
    - id: type
      type: System.Type
      description: "指定<xref:System.Type></xref:System.Type>"
    return:
      type: System.Object
      description: "实例指定<xref:System.Type>。</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Deserialize(XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "将工作流标记反序列化到<xref:System.Object>。</xref:System.Object>"
  remarks: "有关工作流标记的详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。"
  syntax:
    content: public object Deserialize (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>，它包含工作流定义。</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "<xref:System.Object>，它包含在工作流标记文件或流中定义的工作流的定义。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  id: Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Deserialize(IDesignerSerializationManager,XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "反序列化到工作流标记<xref:System.Object>使用指定的序列化管理器。</xref:System.Object>"
  remarks: "工作流标记的详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。"
  syntax:
    content: public object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlReader reader);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "实现的对象<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;></xref>接口，如<xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref>。"
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>，它包含工作流定义。</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "<xref:System.Object>，它包含在工作流标记文件或流中定义的工作流的定义。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  id: DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "反序列化从根据要反序列化的属性的给定类型的指定字符串的可扩展应用程序标记语言 (XAML) 内容。"
  remarks: "`value`必须满足以下条件之一:-它是基元类型、 string、 枚举或一种<xref:System.TimeSpan>。</xref:System.TimeSpan>      -可以通过将其分配<xref:System.IConvertible>接口或从<xref:System.Delegate>或<xref:System.Type>类。</xref:System.Type> </xref:System.Delegate> </xref:System.IConvertible>"
  syntax:
    content: protected virtual object DeserializeFromString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type propertyType, string value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理反序列化过程。"
    - id: propertyType
      type: System.Type
      description: "<xref:System.Type>与要反序列化的属性关联。</xref:System.Type>"
    - id: value
      type: System.String
      description: "一个字符串，包含要反序列化的 XAML。"
    return:
      type: System.Object
      description: "反序列化<xref:System.Object>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code><code>propertyType</code>，或<code>value</code>，包含一个空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  id: EventsProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: EventsProperty
  nameWithType: WorkflowMarkupSerializer.EventsProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "表示一个附加<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> ，它定义事件处理程序属性的名称。"
  remarks: "此属性仅在设计期间，以编程方式发出工作流实例使用的对象模型时使用。 它表示引用的事件处理程序，尚未编译的 XAML。 此属性包含`Hashtable`、 带有事件名和事件处理程序名称-值对。 编译完成后，事件属性都直接与处理程序相关联。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  example:
  - "The following example shows how to set the value of the EventsProperty dependency property.  \n  \n```c#  \nCodeActivity code1 = new CodeActivity();  \nHashtable eventsHashtable = new Hashtable();  \neventsHashtable.Add(\"ExecuteCode\", \"methodName1\");  \ncode1.SetValue(WorkflowMarkupSerializer.EventsProperty, eventsHashtable);  \n```"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "检索指定对象的子对象的列表"
  remarks: "除非在始终从 GetChildren 继承的类中重写返回`null`(`Nothing`)。"
  syntax:
    content: protected virtual System.Collections.IList GetChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>支持此操作。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要从中检索子对象。</xref:System.Object>"
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>，其中包含的子对象<code> obj </code>。</xref:System.Collections.IList>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>或<code>serializationManager</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetEvents(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "检索有关与指定<xref:System.Object>.</xref:System.Object>关联的所有事件信息"
  syntax:
    content: protected virtual System.Reflection.EventInfo[] GetEvents (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理反序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>搜索事件对象。</xref:System.Object>"
    return:
      type: System.Reflection.EventInfo[]
      description: "<xref:System.Reflection.EventInfo>数组，其中包含有关与关联的事件信息<code> obj </code>。</xref:System.Reflection.EventInfo>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>或<code>obj</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetProperties(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "检索有关与指定对象关联的所有属性的信息。"
  syntax:
    content: protected virtual System.Reflection.PropertyInfo[] GetProperties (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要搜索属性。</xref:System.Object>"
    return:
      type: System.Reflection.PropertyInfo[]
      description: "A<xref:System.Reflection.PropertyInfo>数组，其中包含有关与关联的属性的信息<code> obj </code>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>或<code>obj</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "重写。 通知<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;></xref>只是已经反序列对象。"
  remarks: "之后，立即调用 OnAfterDeserialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>方法运行。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> 可以在继承的类中重写 OnAfterDeserialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>执行任何所需的处理在`obj`它已序列化到可扩展应用程序标记语言 (XAML) 后。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>不提供任何默认行为。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> 你必须重写它派生的类添加任何处理逻辑中。"
  syntax:
    content: protected virtual void OnAfterDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>，已反序列化。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "通知<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;></xref>刚刚已序列化对象。"
  remarks: "之后，立即调用 OnAfterSerialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>方法运行。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> 可以在继承的类中重写 OnAfterSerialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>执行任何所需的处理在`obj`它已序列化到可扩展应用程序标记语言 (XAML) 后。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       OnAfterSerialize 提供任何默认行为。 你必须重写它派生的类添加任何处理逻辑中。"
  syntax:
    content: protected virtual void OnAfterSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>已序列化。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "重写。 通知<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;></xref>对象即将反序列化。"
  remarks: "立即之前调用 OnBeforeDeserialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>方法运行。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> 您可以重写<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>中继承的类<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>上执行所需的处理`obj`则会序列化到可扩展应用程序标记语言 (XAML) 之前。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> </xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>       OnBeforeDeserialize 提供任何默认行为。 你必须重写它派生的类添加任何处理逻辑中。"
  syntax:
    content: protected virtual void OnBeforeDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理反序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>，已反序列化。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "通知<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> ，<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*>即将运行。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*>"
  remarks: "立即之前调用 OnBeforeSerialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>方法运行。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> 可以在继承的类中重写 OnBeforeSerialize<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>上执行所需的处理`obj`之前它<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>已开始序列化过程中的步骤。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> </xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       OnBeforeSerialize 提供任何默认行为。 你必须重写它派生的类添加任何处理逻辑中。"
  syntax:
    content: protected virtual void OnBeforeSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要序列化。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  id: Serialize(System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Serialize(XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "序列化指定<xref:System.Object>到工作流标记文件或流。</xref:System.Object>"
  remarks: "必须序列化工作流类型的新实例，或者以编程方式创建工作流创建<xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>来创建一种<xref:System.Workflow.Runtime.WorkflowInstance>。</xref:System.Workflow.Runtime.WorkflowInstance></xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>中可用的工作流标记中的根活动       有关工作流标记的详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。"
  syntax:
    content: public void Serialize (System.Xml.XmlWriter writer, object obj);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>，其中包含的流或文件使用在序列化。</xref:System.Xml.XmlWriter>"
    - id: obj
      type: System.Object
      description: "要进行序列化的对象。"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Serialize(IDesignerSerializationManager,XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "序列化指定<xref:System.Object>到工作流标记文件或使用指定的序列化管理器的流。</xref:System.Object>"
  remarks: "必须序列化工作流类型的新实例，或者以编程方式创建工作流创建<xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>来创建一种<xref:System.Workflow.Runtime.WorkflowInstance>。</xref:System.Workflow.Runtime.WorkflowInstance></xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>中可用的工作流标记中的根活动       工作流标记的详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。"
  syntax:
    content: public void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlWriter writer, object obj);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "实现的对象<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;></xref>接口，如<xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref>。"
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>，其中包含的流或文件使用在序列化。</xref:System.Xml.XmlWriter>"
    - id: obj
      type: System.Object
      description: "要进行序列化的对象。"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: SerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "序列化指定<xref:System.Object>为字符串。</xref:System.Object>"
  remarks: "如果<xref:System.Delegate>实例是可从`value`，与关联的方法名写入 SerializeToString`value`为字符串。</xref:System.Delegate> 如果<xref:System.Type>实例是可从`value`，SerializeToString 写入与关联的类型的完全限定名称`value`为字符串。</xref:System.Type> 如果上述条件均不存在，将转换 SerializeToString`value`为字符串并写入结果。"
  syntax:
    content: protected virtual string SerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要序列化为一个字符串。</xref:System.Object>"
    return:
      type: System.String
      description: "一个字符串，包含序列化<xref:System.Object>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>或<code>value</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "返回一个值，该值指示是否<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;></xref>应序列化指定<xref:System.Object>.</xref:System.Object>"
  remarks: "由调用 ShouldSerializeValue<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>其序列化指定的对象之前。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 该方法返回`false`如果`value`包含空引用 (`Nothing`) 或者，如果`value`和<xref:System.ComponentModel.DefaultValueAttribute>的当前序列化上下文是否相等。</xref:System.ComponentModel.DefaultValueAttribute>       可以在继承自的类中重写 ShouldSerializeValue<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>以便自定义如何确定是否应序列化指定的对象。</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual bool ShouldSerializeValue (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "<xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>管理序列化过程。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>检查。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示<code> value </code>序列化; 否则为应为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  id: XClassProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: XClassProperty
  nameWithType: WorkflowMarkupSerializer.XClassProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "表示一个附加<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> ，它定义将在编译期间创建的类型名称。"
  remarks: "此值对应于`x:Class`XAML 中的特性。 有关详细信息，请参阅[使用工作流标记](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。       此属性仅在设计时使用。 编译完成后，它将成为已编译的类型的名称。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty XClassProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  id: XCodeProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: XCodeProperty
  nameWithType: WorkflowMarkupSerializer.XCodeProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "表示代码示例中，嵌入到 XAML <xref uid=&quot;langword_csharp_x:Code&quot; name=&quot;x:Code&quot; href=&quot;&quot;> </xref>元素。"
  remarks: "此属性仅在设计期间，以编程方式发出工作流使用的对象模型时使用。 属性包含`CodeTypeMemberCollection`填充集合`CodeSnippetTypeMember`元素。 编译完成后，代码将编译为生成的类型的一部分。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  example:
  - "The following example is XAML code that contains a code example that would be compiled during workflow compilation.  \n  \n```  \n<CodeActivity x:Name=\"codeActivity1\" ExecuteCode=\"methodName1\">  \n  <x:Code><![CDATA[  \n      void methodName1(object sender, EventArgs e)   \n      {  \n      }  \n  ]]></x:Code>  \n</CodeActivity>  \n```  \n  \n The following example shows how to set the same value for the XCodeProperty dependency property programmatically.  \n  \n```c#  \nCodeActivity code1 = new CodeActivity();  \n  \ncode1.SetValue(WorkflowMarkupSerializer.XCodeProperty,   \n                    new CodeTypeMemberCollection(  \n                        new CodeTypeMember[] {  \n                            new CodeSnippetTypeMember(\"void methodName1(object sender, EventArgs e) { }\")  \n                        }));  \n  \n```"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty XCodeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: WorkflowMarkupSerializer()
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.WorkflowMarkupSerializer()
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: AddChild(WorkflowMarkupSerializationManager,Object,Object)
  nameWithType: WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
  parent: System.Workflow.ComponentModel.Serialization
  isExternal: false
  name: WorkflowMarkupSerializationManager
  nameWithType: WorkflowMarkupSerializationManager
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClearChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClrNamespacesProperty
  nameWithType: WorkflowMarkupSerializer.ClrNamespacesProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CreateInstance(WorkflowMarkupSerializationManager,Type)
  nameWithType: WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize(XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize(IDesignerSerializationManager,XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: EventsProperty
  nameWithType: WorkflowMarkupSerializer.EventsProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetEvents(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetProperties(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize(XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize(IDesignerSerializationManager,XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: SerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: XClassProperty
  nameWithType: WorkflowMarkupSerializer.XClassProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: XCodeProperty
  nameWithType: WorkflowMarkupSerializer.XCodeProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: WorkflowMarkupSerializer
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: AddChild
  nameWithType: WorkflowMarkupSerializer.AddChild
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CanSerializeToString
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClearChildren
  nameWithType: WorkflowMarkupSerializer.ClearChildren
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CreateInstance
  nameWithType: WorkflowMarkupSerializer.CreateInstance
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize
  nameWithType: WorkflowMarkupSerializer.Deserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: DeserializeFromString
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetChildren
  nameWithType: WorkflowMarkupSerializer.GetChildren
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetEvents
  nameWithType: WorkflowMarkupSerializer.GetEvents
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetProperties
  nameWithType: WorkflowMarkupSerializer.GetProperties
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterDeserialize
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterSerialize
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeDeserialize
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeSerialize
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize
  nameWithType: WorkflowMarkupSerializer.Serialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: SerializeToString
  nameWithType: WorkflowMarkupSerializer.SerializeToString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue
