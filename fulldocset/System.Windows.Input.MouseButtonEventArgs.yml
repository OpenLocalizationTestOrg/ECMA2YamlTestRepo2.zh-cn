### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseButtonEventArgs
  id: MouseButtonEventArgs
  children:
  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  - System.Windows.Input.MouseButtonEventArgs.ButtonState
  - System.Windows.Input.MouseButtonEventArgs.ChangedButton
  - System.Windows.Input.MouseButtonEventArgs.ClickCount
  - System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  langs:
  - csharp
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
  type: Class
  summary: "提供数据鼠标按钮相关的事件。"
  remarks: "MouseButtonEventArgs 适用于以下事件︰ <xref:System.Windows.Input.Mouse.MouseDown>， <xref:System.Windows.Input.Mouse.MouseUp>， <xref:System.Windows.UIElement.MouseLeftButtonDown>， <xref:System.Windows.UIElement.MouseLeftButtonUp>， <xref:System.Windows.UIElement.MouseRightButtonDown>， <xref:System.Windows.UIElement.MouseRightButtonUp>，和相应的隧道事件。</xref:System.Windows.UIElement.MouseRightButtonUp> </xref:System.Windows.UIElement.MouseRightButtonDown> </xref:System.Windows.UIElement.MouseLeftButtonUp> </xref:System.Windows.UIElement.MouseLeftButtonDown> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>       <xref:System.Windows.Input.Mouse>类提供的其他属性和方法来确定鼠标的状态。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of the object that raised the event.  The color chosen depends on the mouse button which was pressed.  The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]"
  syntax:
    content: 'public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Input.MouseEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)'
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新实例<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;></xref>使用指定的类<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>，时间戳，和<xref href=&quot;System.Windows.Input.MouseButton&quot;> </xref>。"
  syntax:
    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "与此事件关联的逻辑鼠标设备。"
    - id: timestamp
      type: System.Int32
      description: "输入的发生时的时间。"
    - id: button
      type: System.Windows.Input.MouseButton
      description: "鼠标按钮所描述其状态。"
  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)'
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新实例<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;></xref>使用指定的类<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>，时间戳， <xref href=&quot;System.Windows.Input.MouseButton&quot;> </xref>，和<xref href=&quot;System.Windows.Input.StylusDevice&quot;> </xref>。  。"
  syntax:
    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "与此事件关联的逻辑的鼠标设备。"
    - id: timestamp
      type: System.Int32
      description: "事件发生的时间。"
    - id: button
      type: System.Windows.Input.MouseButton
      description: "与此事件关联的按钮。"
    - id: stylusDevice
      type: System.Windows.Input.StylusDevice
      description: "触笔设备与此事件关联。"
  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState
  id: ButtonState
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取与事件关联的按钮的状态。"
  remarks: "<xref:System.Windows.Input.Mouse>类提供的其他属性和方法来确定鼠标的状态。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of the object that handles the event.  The color that is chosen depends on whether the mouse button was pressed or released.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsbuttonstatepressed)]\n [!code-cs[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState ButtonState { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "按钮的状态处于。"
  overload: System.Windows.Input.MouseButtonEventArgs.ButtonState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  id: ChangedButton
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取与事件关联的按钮。"
  remarks: "<xref:System.Windows.Input.Mouse>类提供的其他属性和方法来确定鼠标的状态。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.  The ChangedButton property is checked to determine which button was pressed.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]"
  syntax:
    content: public System.Windows.Input.MouseButton ChangedButton { get; }
    return:
      type: System.Windows.Input.MouseButton
      description: "按下按钮。"
  overload: System.Windows.Input.MouseButtonEventArgs.ChangedButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount
  id: ClickCount
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取单击此按钮的次数。"
  remarks: "ClickCount 的一种用途是确定是否发生了双击鼠标单击操作。  一些类公开一次双击，例如<xref:System.Windows.Controls.Control.MouseDoubleClick><xref:System.Windows.Controls.Control>类</xref:System.Windows.Controls.Control>的事件</xref:System.Windows.Controls.Control.MouseDoubleClick>的事件 当双击鼠标事件不公开的类上时，双击鼠标可以检测到使用 ClickCount 属性上的事件数据。"
  example:
  - "The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.  ClickCount property is used to determine the number of clicks.  \n  \n [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseclickcountdoubleclick)]\n [!code-cs[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseclickcountdoubleclick)]"
  syntax:
    content: public int ClickCount { get; }
    return:
      type: System.Int32
      description: "单击鼠标按钮的次数。"
  overload: System.Windows.Input.MouseButtonEventArgs.ClickCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "将事件处理程序调用的特定类型的方式，这可以提高事件系统效率。"
  remarks: "此实现将强制转换的泛型处理程序，可为<xref:System.Windows.Input.MouseEventHandler>并调用它。</xref:System.Windows.Input.MouseEventHandler> 有关此实现模式和它的原因的详细信息，请参阅<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由事件概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "要以特定类型的方式调用的泛型处理程序。"
    - id: genericTarget
      type: System.Object
      description: "要在调用处理程序的目标。"
  overload: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseButton
  parent: System.Windows.Input
  isExternal: false
  name: MouseButton
  nameWithType: MouseButton
  fullName: System.Windows.Input.MouseButton
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
- uid: System.Windows.Input.StylusDevice
  parent: System.Windows.Input
  isExternal: false
  name: StylusDevice
  nameWithType: StylusDevice
  fullName: System.Windows.Input.StylusDevice
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseButtonEventArgs.InvokeEventHandler
