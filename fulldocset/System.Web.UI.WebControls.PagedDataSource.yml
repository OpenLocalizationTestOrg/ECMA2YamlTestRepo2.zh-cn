### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagedDataSource
  id: PagedDataSource
  children:
  - System.Web.UI.WebControls.PagedDataSource.#ctor
  - System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.PagedDataSource.Count
  - System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  - System.Web.UI.WebControls.PagedDataSource.DataSource
  - System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  - System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  - System.Web.UI.WebControls.PagedDataSource.IsLastPage
  - System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.PagedDataSource.PageCount
  - System.Web.UI.WebControls.PagedDataSource.PageSize
  - System.Web.UI.WebControls.PagedDataSource.SyncRoot
  - System.Web.UI.WebControls.PagedDataSource.VirtualCount
  langs:
  - csharp
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
  type: Class
  summary: "封装的数据绑定控件的分页相关的属性 (如<xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>， <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>， <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>，和<xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>)，允许应用程序执行分页。 此类不能被继承。"
  remarks: "PagedDataSource 类封装的属性的允许数据源控件，如<xref:System.Web.UI.WebControls.DataGrid>， <xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.FormView>，若要执行分页。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataGrid> 提供分页支持添加到自定义的数据绑定控件时，将由控件开发人员使用此类。       此类使用的最佳的方法对属于当前页的数据进行枚举。 如果基础数据源支持索引的访问 (如<xref:System.Array?displayProperty=fullName>和<xref:System.Collections.IList?displayProperty=fullName>)，此类使用它。</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> 否则，它将使用创建的枚举器<xref:System.Collections.IEnumerable.GetEnumerator%2A>方法。</xref:System.Collections.IEnumerable.GetEnumerator%2A>       PagedDataSource 实例的初始属性值的列表，请参阅<xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;></xref>类。"
  remarks: "使用此构造函数来创建和初始化<xref:System.Web.UI.WebControls.PagedDataSource>类</xref:System.Web.UI.WebControls.PagedDataSource>的新实例       下表显示<xref:System.Web.UI.WebControls.PagedDataSource>.</xref:System.Web.UI.WebControls.PagedDataSource>实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|  |<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|&10; |  |<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public PagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.PagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用数据绑定控件中的自定义分页。"
  remarks: "AllowCustomPaging 属性用于指示是否启用了自定义分页。 自定义分页是可选的一种专门由提供的分页<xref:System.Web.UI.WebControls.DataGrid>控件。</xref:System.Web.UI.WebControls.DataGrid> ASP.NET 2.0 版数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.FormView>) 使用服务器端分页，并且不支持自定义分页。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 自定义分页和服务器端分页是互相排斥。 如果 AllowCustomPaging 设置为`true`，请确保<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>设置为`false`。</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>       有关自定义分页的详细信息，请参阅<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>。</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自定义分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示数据绑定控件中启用分页。"
  remarks: "AllowPaging 属性用于指定的数据绑定控件是否已启用的分页。 ASP.NET 2.0 版数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.FormView>) 还使用服务器端分页提供自动分页功能。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 服务器端分页的详细信息，请参阅<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>。</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 使用时<xref:System.Web.UI.WebControls.DataGrid>控件，你还可以提供你自己的自定义分页逻辑。</xref:System.Web.UI.WebControls.DataGrid> 有关自定义分页的详细信息，请参阅<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>和<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>       有关数据绑定控件的分页支持的详细信息，请参阅`AllowPaging`数据绑定控件属性。"
  syntax:
    content: public bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用服务器端分页。"
  remarks: "ASP.NET 2.0 版数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.FormView>) 提供通过服务器端分页的自动分页功能。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 在使用 ASP.NET 2.0 数据绑定控件，则将此属性设置为`true`。      1> [!NOTE]&1;> 服务器端分页和自定义分页是互相排斥。 如果 AllowServerPaging 设置为`true`，请确保<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>设置为`false`。</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了服务器端分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从数据源的所有项都复制到指定&lt;xref:System.Array?displayProperty=fullName&gt;中的指定索引处开始， &lt;xref:System.Array?displayProperty=fullName&gt;。"
  remarks: "使用此方法将数据源的内容复制到指定<xref:System.Array?displayProperty=fullName>指定索引处开始。</xref:System.Array?displayProperty=fullName> <xref:System.Array?displayProperty=fullName>通常用于循环访问数据源中的项。</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "从零开始&lt;xref:System.Array?displayProperty=fullName&gt; ，它从数据源接收复制的项。"
    - id: index
      type: System.Int32
      description: "在指定的第一个位置&lt;xref:System.Array?displayProperty=fullName&gt;以接收复制的内容。"
  overload: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于从数据源的项的数目。"
  remarks: "使用的 Count 属性来确定要用于从数据源项的数目。 返回的值取决于是否启用了分页和是否使用自定义分页。      -如果禁用分页 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性`false`) 的值<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>返回属性。</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -如果启用了分页 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性`true`) 和启用自定义分页 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>属性设置为`true`) 的值<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>返回属性。</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -如果启用了分页 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性`true`) 和<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>属性设置为`false`的值<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>返回属性。</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -如果启用了分页 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性`true`)，自定义分页处于禁用状态 (通过设置<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>属性`false`)，和<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>属性设置为`true`的值<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>属性的值中减去<xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A>返回前的属性。</xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      1> [!NOTE] 1> 如果<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>属性包含`null`，则返回 0。</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "用于从数据源的项的数目。"
  overload: System.Web.UI.WebControls.PagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的当前页的索引。"
  remarks: "CurrentPageIndex 属性用于指定或确定当前页的索引。"
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "当前页的索引。"
  overload: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据源。"
  remarks: "使用数据源属性指定或确定正在通过寻呼发送的数据源。"
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "A &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;实现表示数据源的对象。"
  overload: System.Web.UI.WebControls.PagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在数据源中获取项的数目。"
  remarks: "使用了属性来确定数据源中的项的数目。 如果使用自定义分页或服务器端分页，则值<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>返回属性; 否则，返回的数据源中的项的总数。</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>      1> [!NOTE] 1> 如果<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>属性包含`null`，则返回 0。</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "数据源中的项的数目。"
  overload: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "数据源不是&lt;xref:System.Collections.ICollection?displayProperty=fullName&gt;实现对象。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  id: FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取页面上显示的第一个记录的索引。"
  remarks: "FirstIndexInPage 属性用于确定在当前页面上的第一项的索引。      1> [!NOTE] 1> 如果<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性设置为`false`，或<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>或<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>属性设置为`true`，或<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>属性包含`null`，则返回 0。</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int FirstIndexInPage { get; }
    return:
      type: System.Int32
      description: "页面上显示的第一个记录的索引。"
  overload: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回&lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;实现包含数据源中的所有项的对象。"
  remarks: "使用此方法创建<xref:System.Collections.IEnumerator?displayProperty=fullName>，可以循环访问数据源中获取每个项。</xref:System.Collections.IEnumerator?displayProperty=fullName> 若要访问的枚举器中当前位置处的项，使用<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> 使用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法将移动到集合中的下一项。</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 若要将枚举器移到其初始位置，使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法。</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      1> [!NOTE]&1;> 最初获取枚举数或时使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法将枚举器移到的第一项在集合中，必须调用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法。</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 否则，表示的项<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性是不确定。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;实现包含数据源中的所有项的对象。"
  overload: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，表示用于将数据绑定的每个项的属性。"
  remarks: "使用 GetItemProperties 方法创建<xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>，表示用于将数据绑定的每个项的属性。</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> 如果<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>属性是`null`或不是<xref:System.ComponentModel.ITypedList?displayProperty=fullName>实现对象，`null`返回。</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> GetItemProperties 方法的详细信息，请参阅<xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>。</xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>返回包含列表名称的对象。 这可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，表示用于将数据绑定的每个项的属性。"
  overload: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回的列表的名称。 此方法不适用于此类。"
  remarks: "此方法继承自<xref:System.ComponentModel.ITypedList?displayProperty=fullName>且不适用于此类。</xref:System.ComponentModel.ITypedList?displayProperty=fullName> 它已实现返回<xref:System.String.Empty?displayProperty=fullName>所有用例。</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>返回包含列表名称的对象。 这可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: '&lt;xref:System.String?displayProperty=fullName&gt;所有用例。'
  overload: System.Web.UI.WebControls.PagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  id: IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否启用自定义分页。"
  remarks: "IsCustomPagingEnabled 属性用于确定是否启用了自定义分页。      1> [!NOTE]&1;> 同时<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>和<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>属性必须是`true`，此属性才返回`true`。</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public bool IsCustomPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自定义分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  id: IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示当前页是否为第一页。"
  remarks: "使用 IsFirstPage 属性来确定当前页是否是第一页。"
  syntax:
    content: public bool IsFirstPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前页是第一页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  id: IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示当前页是否最后一页。"
  remarks: "使用 IsLastPage 属性来确定当前页是否是最后一页。"
  syntax:
    content: public bool IsLastPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前页是最后一页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  id: IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否启用分页。"
  remarks: "IsPagingEnabled 属性用于确定是否启用了分页。      1> [!NOTE] 1><xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>属性必须为`true`和<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>属性不能设置为 0，此属性返回`true`。</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示数据源只读的。"
  remarks: "实现此属性始终返回`false`，指示是否可以在所有情况下修改数据源。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>所有用例。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否启用服务器端分页支持。"
  remarks: "启用服务器端分页时<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>和<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>属性都设置为`true`，并不在单个页面中显示的数据源检索的数据量。</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了分页，并且服务器端指示分页，则使用<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>属性; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否同步对数据源的访问 （线程安全）。"
  remarks: "此属性派生自<xref:System.Collections.ICollection?displayProperty=fullName>类和重写以始终返回`false`以指示此类不是线程安全。</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 属性的详细信息，请参阅<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>所有用例。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数据源中显示所有项所必需的页的总数。"
  remarks: "PageCount 属性用于确定在数据源中显示所有项所必需的页面数。      1> [!NOTE] 1> 如果<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>属性是`null`，则返回 0。</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 如果<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>属性设置为`false`或<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>属性设置为 0 或更少，则返回 1。</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "在数据源中显示所有项所必需的页面数。"
  overload: System.Web.UI.WebControls.PagedDataSource.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在单个页面上显示的项数。"
  remarks: "使用的 PageSize 属性指定或确定要在单个页面上显示的项数。"
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "在单个页面上显示的项的数目。"
  overload: System.Web.UI.WebControls.PagedDataSource.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取可用于同步对集合的访问的对象。"
  remarks: "在此实现中返回的对象是<xref:System.Web.UI.WebControls.PagedDataSource>对象本身。</xref:System.Web.UI.WebControls.PagedDataSource>       有关详细信息<xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>属性，请参阅<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "一个可用于同步对集合的访问的对象。"
  overload: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  id: VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的数据源中的实际项数，使用自定义分页时。"
  remarks: "自定义分页或服务器端分页使用以确定数据源中的项的虚拟数目时，请使用 VirtualCount 属性。 VirtualCount 属性的详细信息，请参阅<xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>。</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>"
  syntax:
    content: public int VirtualCount { get; set; }
    return:
      type: System.Int32
      description: "使用自定义分页时，数据源中的项的虚拟数目。"
  overload: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource.PagedDataSource
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: PagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.PagedDataSource.Count*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: PagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: PagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: PagedDataSource.GetListName
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
