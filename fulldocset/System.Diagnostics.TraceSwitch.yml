### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  id: TraceSwitch
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  summary: "无需重新编译你的代码，提供了用于控制跟踪和调试输出一个多级开关。"
  remarks: "可以使用跟踪开关来筛选出基于它们的重要性的消息。 TraceSwitch 类提供<xref:System.Diagnostics.TraceSwitch.TraceError%2A>， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性，以测试开关的级别。</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> <xref:System.Diagnostics.TraceSwitch.Level%2A>属性获取或设置开关的<xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>       你可以通过应用程序配置文件设置 TraceSwitch 的级别，然后使用应用程序中的配置的 TraceSwitch 级别。 或者，你可以在代码中创建 TraceSwitch 并设置直接要检测特定的代码段的级别。       若要配置 TraceSwitch，编辑你的应用程序。 在此文件中，可以添加或删除交换机、 设置开关的值，或清除所有交换机以前由应用程序设置。 配置文件的格式应类似下面的示例︰```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```此配置节定义与 TraceSwitch<xref:System.Diagnostics.Switch.DisplayName%2A>设置为`mySwitch`，并<xref:System.Diagnostics.TraceSwitch.Level%2A>设置为 1，对应于枚举值<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      1> [!NOTE] 1> 在.NET Framework 2.0 版，你可以使用文本指定开关值。 例如，`true`为<xref:System.Diagnostics.BooleanSwitch>或表示枚举值，如文本`Error`为 TraceSwitch。</xref:System.Diagnostics.BooleanSwitch> 行`<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />`等效于`<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`。       在你的应用程序，你可以配置的交换机级别使用通过创建 TraceSwitch 具有相同的名称，如下面的示例中所示︰ [!code-vb[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)][!code-cpp[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)][!code-cs[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs) ]默认情况下，该交换机<xref:System.Diagnostics.TraceSwitch.Level%2A>属性使用配置文件中指定的值设置。</xref:System.Diagnostics.TraceSwitch.Level%2A>     如果<xref:System.Diagnostics.TraceSwitch.%23ctor%2A>构造函数找不到在配置文件中，<xref:System.Diagnostics.TraceSwitch.Level%2A>新交换机默认为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName></xref:System.Diagnostics.TraceSwitch.Level%2A>初始交换机设置</xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       你必须启用跟踪或调试才能使用交换机。 下面的语法是特定的编译器。 如果你使用除 C# 或 Visual Basic 编译器，请参阅你的编译器的文档。      -若要启用调试 C# 中，添加`/d:DEBUG`到编译器命令行编译代码，或添加时的标志`#define DEBUG`到你的文件的顶部。 在 Visual Basic 中，添加`/d:DEBUG=True`到编译器命令行的标志。      -若要启用 C# 中的跟踪，添加`/d:TRACE`到编译器命令行编译代码，或添加时的标志`#define TRACE`到你的文件的顶部。 在 Visual Basic 中，添加`/d:TRACE=True`到编译器命令行的标志。      1> [!NOTE]&1;> 这些调试和跟踪编译器开关时将不再需要在隔离中使用 TraceSwitch 类。 它们仅需要结合<xref:System.Diagnostics.Trace>或<xref:System.Diagnostics.Debug>有条件地编译的方法。</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       有关检测应用程序的详细信息，请参阅<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> 有关配置和使用跟踪开关的详细信息，请参阅[跟踪开关](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 为了提高性能，你可以 TraceSwitch 成员`static`类中。"
  example:
  - "The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]

      public class TraceSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.TraceSwitch&quot;></xref>类，使用指定的显示名称和描述。"
  remarks: "若要设置的级别你<xref:System.Diagnostics.TraceSwitch>，编辑你的应用程序的名称对应的配置文件。</xref:System.Diagnostics.TraceSwitch> 在此文件中，你可以添加交换机和将其值设置、 删除交换机，或清除所有交换机以前由应用程序设置。 配置文件的格式应类似下面的示例︰ ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] 1> 在.NET Framework 2.0 版，你可以使用文本指定开关值。 例如，`true`为<xref:System.Diagnostics.BooleanSwitch>或表示枚举值，如文本`Error` <xref:System.Diagnostics.TraceSwitch>。</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> 行`<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />`等效于`<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`。       在你的应用程序，你可以通过创建使用配置的交换机级别<xref:System.Diagnostics.TraceSwitch>具有相同名称，如下面的示例中所示︰ [!code-vb[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)][!code-cpp[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)][!code-cs[经典 TraceSwitch.TraceError 示例&#3;](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs) ]时<xref:System.Diagnostics.TraceSwitch.%23ctor%2A>构造函数找不到在配置文件中，<xref:System.Diagnostics.TraceSwitch.Level%2A>新的交换机的属性设置为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>。</xref:System.Diagnostics.TraceLevel?displayProperty=fullName></xref:System.Diagnostics.TraceSwitch.Level%2A>初始交换机设置</xref:System.Diagnostics.TraceSwitch.%23ctor%2A>    </xref:System.Diagnostics.TraceSwitch>       <xref:System.Diagnostics.TraceSwitch>类提供<xref:System.Diagnostics.TraceSwitch.TraceError%2A>， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性，以测试<xref:System.Diagnostics.TraceSwitch.Level%2A>的交换机。</xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> </xref:System.Diagnostics.TraceSwitch> <xref:System.Diagnostics.TraceSwitch.Level%2A>属性获取或设置开关的<xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>      1> [!NOTE]&1;> 要提高性能，可以进行<xref:System.Diagnostics.TraceSwitch>成员`static`中你的类。</xref:System.Diagnostics.TraceSwitch>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]"
  syntax:
    content: public TraceSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "要在用户界面上显示的名称。"
    - id: description
      type: System.String
      description: "交换机的说明。"
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新实例<xref href=&quot;System.Diagnostics.TraceSwitch&quot;></xref>类，交换机的使用指定的显示名称、 说明和默认值。"
  remarks: "`displayName`参数用于设置的值<xref:System.Diagnostics.Switch.DisplayName%2A>属性，`description`参数用于设置的值<xref:System.Diagnostics.Switch.Description%2A>属性，与`defaultSwitchValue`参数是保存为一个字段，用于初始化<xref:System.Diagnostics.Switch.Value%2A>上第一个引用的属性。</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> 请参阅<xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>有关详细信息和代码示例的构造函数。</xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "要在用户界面上显示的名称。"
    - id: description
      type: System.String
      description: "交换机的说明。"
    - id: defaultSwitchValue
      type: System.String
      description: "开关的默认值。"
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取或设置确定开关允许的消息的跟踪级别。"
  remarks: "若要设置的级别你<xref:System.Diagnostics.TraceSwitch>，编辑你的应用程序的名称对应的配置文件。</xref:System.Diagnostics.TraceSwitch> 在此文件中，你可以添加交换机和将其值设置、 删除交换机，或清除所有交换机以前由应用程序设置。 配置文件的格式应类似下面的示例︰ ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;0&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;3&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] 1> 在.NET Framework 2.0 版，你可以使用文本指定开关值。 例如，`true`为<xref:System.Diagnostics.BooleanSwitch>或表示枚举值，如文本`Error` <xref:System.Diagnostics.TraceSwitch>。</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> 行`<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />`等效于`<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`。       当<xref:System.Diagnostics.TraceSwitch.%23ctor%2A>构造函数无法找到配置文件中的初始开关设置，则新交换机级别属性设置为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>。</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       设置此属性可更新<xref:System.Diagnostics.TraceSwitch.TraceError%2A>， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性以反映新值。</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLevel Level { get; set; }
    return:
      type: System.Diagnostics.TraceLevel
      description: "之一<xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>值，指定的允许的交换机的消息的级别。"
  overload: System.Diagnostics.TraceSwitch.Level*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "级别设置为一个值，不是一个<xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>值。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "更新并更正此交换机的级别。"
  remarks: ".NET framework 使用 OnSwitchSettingChanged 方法以验证并更正通过配置文件初始化开关的值。 如果配置文件中指定开关值未定义的将消息写入到所有跟踪侦听器<xref:System.Diagnostics.TraceLevel>枚举和开关设置为已定义的值。</xref:System.Diagnostics.TraceLevel>       如果你尝试在你的代码以设置<xref:System.Diagnostics.TraceSwitch.Level%2A>属性不由定义的值<xref:System.Diagnostics.TraceLevel>枚举，<xref:System.ArgumentException>引发异常。</xref:System.ArgumentException> </xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  syntax:
    content: protected override void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "集<> *1> 属性设置为等效的整数<> *1> 属性。"
  remarks: "当在内部调用此方法<xref:System.Diagnostics.Switch.Value%2A>属性交换机更改。</xref:System.Diagnostics.Switch.Value%2A> 该方法确保开关的值与相关的属性反映新值。"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指示开关是否允许错误处理消息。"
  remarks: "你可以使用 TraceError， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性结合<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类发出指定的重要性或更高版本的所有消息。</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 当<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为最高的重要性， <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>， <xref:System.Diagnostics.TraceLevel>，发出仅错误处理消息。</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]"
  syntax:
    content: public bool TraceError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指示开关是否允许信息性消息。"
  remarks: "你可以使用<xref:System.Diagnostics.TraceSwitch.TraceError%2A>， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>，TraceInfo，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性结合<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类发出指定的重要性或更高版本的所有消息。</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 当<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>，发出信息性消息、 警告和错误处理消息。</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public bool TraceInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Diagnostics.TraceSwitch.Level*>属性设置为<xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>或<xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指示开关是否允许所有消息。"
  remarks: "你可以使用<xref:System.Diagnostics.TraceSwitch.TraceError%2A>， <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和 TraceVerbose 属性结合<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类发出指定的重要性或更高版本的所有消息。</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 当<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>，所有调试和跟踪消息进行传输。</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]"
  syntax:
    content: public bool TraceVerbose { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Diagnostics.TraceSwitch.Level*>属性设置为<xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceVerbose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指示开关是否允许警告消息。"
  remarks: "你可以使用<xref:System.Diagnostics.TraceSwitch.TraceError%2A>，TraceWarning， <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>，和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性结合<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类发出指定的重要性或更高版本的所有消息。</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 当<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel?displayProperty=fullName>，发出警告和错误处理消息。</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public bool TraceWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceWarning*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
- uid: System.Diagnostics.TraceSwitch.Level
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
- uid: System.Diagnostics.TraceSwitch.TraceError
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
- uid: System.Diagnostics.TraceSwitch.#ctor*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch
  nameWithType: TraceSwitch.TraceSwitch
- uid: System.Diagnostics.TraceSwitch.Level*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: TraceSwitch.OnSwitchSettingChanged
- uid: System.Diagnostics.TraceSwitch.OnValueChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: TraceSwitch.OnValueChanged
- uid: System.Diagnostics.TraceSwitch.TraceError*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
- uid: System.Diagnostics.TraceSwitch.TraceInfo*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
