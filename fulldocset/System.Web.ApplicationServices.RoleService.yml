### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "允许访问 ASP.NET 角色提供程序中作为 WCF Web 服务。"
  remarks: "RoleService 对象可用于读取通过 Windows Communication Foundation (WCF) 服务的用户的角色。 若要使用的角色服务，必须启用 Web 服务器上的角色服务，然后 WCF 兼容客户端应用程序连接到 Web 服务。 有关如何配置的角色服务的信息，请参阅[如何︰ 启用 WCF 角色服务](~/add/includes/ajax-current-ext-md.md)。       必须对用户进行身份验证，以读取用户的角色。 角色服务的工作方式与任何类型的 ASP.NET 身份验证。 有关如何通过 WCF 服务中的用户登录的信息，请参阅[Windows Communication Foundation 身份验证服务概述](~/add/includes/ajax-current-ext-md.md)。       RoleService 类公开应仅通过 WCF 服务访问的两个方法︰<xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>方法和<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>方法返回已登录用户的所有角色。</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法确定用户是否在指定的角色。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       RoleService 对象引发<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> 创建的事件处理程序<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件以选择要在运行时使用的角色提供程序。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       有关如何使用 WCF 角色服务从一个控制台应用程序的示例，请参阅[演练︰ 使用 ASP.NET 应用程序服务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "初始化的新实例<xref href=&quot;System.Web.ApplicationServices.RoleService&quot;></xref>类。"
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "返回已登录用户的所有角色。"
  remarks: "GetRolesForCurrentUser 方法返回用户的所有角色。 当必须检查或保留所有用户角色，以确定哪些资源可供用户时，你可以使用 GetRolesForCurrentUser 方法。 你可以使用此方法以避免多次调用<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       调用 GetRolesForCurrentUser 方法引发<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      1> [!NOTE]&1;> 不在 Web 服务器执行的代码中调用 GetRolesForCurrentUser 方法。 调用仅作为 WCF 服务的一部分的 GetRolesForCurrentUser 方法。 有关如何读取 Web 服务器执行的代码中的用户的角色的详细信息，请参阅<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法。</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "用户所属的角色名称的数组。"
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "未启用角色管理。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "确定登录的用户是否属于指定角色。"
  remarks: "IsCurrentUserInRole 方法检查登录的用户是否属于指定角色。 IsCurrentUserInRole 方法将引发<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      1> [!NOTE]&1;> 不在 Web 服务器执行的代码中调用 IsCurrentUserInRole 方法。 调用仅作为 WCF 服务的一部分的 IsCurrentUserInRole 方法。 有关如何检查用户是否属于指定组从 Web 服务器上执行代码的详细信息，请参阅<xref:System.Web.Security.Roles.IsUserInRole%2A>方法。</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "要检查的角色名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户是指定的角色;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或用户未登录。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "未启用角色管理。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "发生时<xref href=&quot;System.Web.ApplicationServices.RoleService&quot;></xref>实例确定要用于检查用户的角色的角色提供程序。"
  remarks: "<xref:System.Web.ApplicationServices.RoleService>类引发 SelectingProvider 事件确定时，它要用于检索用户的角色的角色提供程序。</xref:System.Web.ApplicationServices.RoleService> 你可以创建的事件处理程序要在运行时选择要使用的角色提供程序的 SelectingProvider 事件。"
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
