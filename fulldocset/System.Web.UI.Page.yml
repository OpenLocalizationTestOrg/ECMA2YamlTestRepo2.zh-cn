### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "表示一个.aspx 文件，也称为 Web 窗体页上，从托管 ASP.NET Web 应用程序的服务器请求。"
  remarks: "页类是与具有.aspx 扩展名的文件关联。 这些文件作为页对象的运行时编译并在服务器内存中缓存。       如果你想要创建 Web 窗体页使用的代码隐藏技术，派生自此类。 快速应用程序开发 (RAD) 的设计器，如 Microsoft Visual Studio 自动使用此模型来创建 Web 窗体页面。       在页面中，所有服务器控件的命名容器页对象用作除实现<xref:System.Web.UI.INamingContainer>接口或子控件实现此接口的控件。</xref:System.Web.UI.INamingContainer>       页类是一个控件充当 Web 应用程序的用户界面，因此应审查，请确保在其后追加用于编写安全代码和保护应用程序的最佳做法。 有关这些主题的常规信息，请参阅[Web 应用程序安全威胁概述](~/add/includes/ajax-current-ext-md.md)， [NIB︰ 安全策略最佳实践](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)，和[安全性的基础概念](~/add/includes/ajax-current-ext-md.md)。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 显示安全错误消息](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证控件简介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.Page&quot;></xref>类。"
  remarks: "默认构造函数初始化为其默认值的所有字段。"
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在创建传递给母版页的内容 （来自内容控件） 的集合，如果当前页或母版页引用母板页的页初始化期间调用。"
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "要添加的内容模板的名称。"
    - id: template
      type: System.Web.UI.ITemplate
      description: "内容的模板"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已经存在具有相同名称的内容模板。"
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "注册不需要对异步页的状态信息的开始和结束事件处理程序委托。"
  remarks: "使用 AddOnPreRenderCompleteAsync 方法将处理程序添加到异步网页。       你可以注册多个异步处理程序;但是，只有一个处理程序运行一次。 如果你想要同时处理多个异步方法，则应使用单个<xref:System.Web.BeginEventHandler>方法并启动从该处理程序的多个异步操作。</xref:System.Web.BeginEventHandler>       异步处理程序调用之间<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       首先，所有<xref:System.Web.UI.Page>事件 (通过<xref:System.Web.UI.Control.PreRender>事件) 运行，然后每个注册<xref:System.Web.BeginEventHandler>调用方法。</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 处理程序完成后，相应<xref:System.Web.EndEventHandler>调用方法。</xref:System.Web.EndEventHandler> 如果有多个异步处理程序，调用下一步的处理程序。       调用的已注册的异步事件处理程序之后，调用页事件的其余部分，从<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "委托<xref href=&quot;System.Web.BeginEventHandler&quot;></xref>方法。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "委托<xref href=&quot;System.Web.EndEventHandler&quot;></xref>方法。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "注册开始和结束事件处理程序委托的异步页。"
  remarks: "使用 AddOnPreRenderCompleteAsync 方法添加处理程序需要到异步的 Web 页的状态信息。 在传递的对象`state`参数可以为你的应用程序要求中指定的事件处理程序委托之间传输信息的任何对象`beginHandler`和`endHandler`参数。       你可以注册多个异步处理程序;但是，只有一个处理程序运行一次。 如果你想要同时处理多个异步方法，则应使用单个<xref:System.Web.BeginEventHandler>方法并启动从该处理程序的多个异步操作。</xref:System.Web.BeginEventHandler>       异步处理程序调用之间<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       首先，所有<xref:System.Web.UI.Page>事件 (通过<xref:System.Web.UI.Control.PreRender>事件) 运行，然后每个注册<xref:System.Web.BeginEventHandler>调用方法。</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 处理程序完成后，相应<xref:System.Web.EndEventHandler>调用方法。</xref:System.Web.EndEventHandler> 如果有多个异步处理程序，调用下一步的处理程序。       调用的已注册的异步事件处理程序之后，调用页事件的其余部分，从<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "委托<xref href=&quot;System.Web.BeginEventHandler&quot;></xref>方法。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "委托<xref href=&quot;System.Web.EndEventHandler&quot;></xref>方法。"
    - id: state
      type: System.Object
      description: "包含事件处理程序的状态信息的对象。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "添加构成当前页的依赖文件的列表。 此方法由 ASP.NET 页面框架内部使用，但不可在代码中直接使用。"
  remarks: "AddWrappedFileDependencies 方法将添加的文件，如用户控件文件，构成当前页的列表。 如果任何这些页被修改，整个页面编译会在被请求的下一步时间。 此方法支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "<xref:System.Object>包含的文件名称列表。</xref:System.Object>"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.HttpApplicationState&quot;></xref>当前 Web 请求的对象。"
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "中的当前数据<xref href=&quot;System.Web.HttpApplicationState&quot;></xref>类。"
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "启动 Active Server 页 (ASP) 资源的请求。 为了兼容旧 ASP 应用程序提供此方法。"
  remarks: "请勿调用此方法。"
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>有关当前请求的信息。"
    - id: cb
      type: System.AsyncCallback
      description: "回调方法。"
    - id: extraData
      type: System.Object
      description: "与 ASP 请求相同的方式中处理该请求所需的任何额外数据。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>对象。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "终止活动服务器页面 (ASP) 资源的请求。 为了兼容旧 ASP 应用程序提供此方法。"
  remarks: "请勿调用此方法。"
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "生成请求的 ASP 页。"
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置一个值，该值指示是否可以在单线程单元 (STA) 线程上执行页。"
  remarks: "当设置为`true`，此属性允许页后，可以在单线程单元 (STA) 线程上执行。 这允许页后，可以调用 STA 组件，如使用 Visual Basic 6.0 中开发的组件。 此属性设置为`true`还允许页后，可以调用 COM + 组件需要访问非托管的 ASP 内置对象。 这些是可通过 ASP 访问`ObjectContext`对象或`OnStartPage`方法。       在大多数情况下，不要在代码中设置此属性。 设置`aspcompat`属性设为`true`.aspx 文件中使用指令。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该页支持 Active Server Pages (ASP) 的代码;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置一个值，该值指示是否同步还是异步处理页。"
  remarks: "AsyncMode 属性由设置<xref:System.Web.UI.Page>分析器生成页代码时。</xref:System.Web.UI.Page> 使用`Async`在指令中设置此值的属性。       异步页不工作时`AspCompat`属性设置为`true`或`Transaction`属性设置为值`Disabled`在指令中。"
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果异步; 处理页否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "开始处理异步页请求。"
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>请求。"
    - id: callback
      type: System.AsyncCallback
      description: "要在过程完成时通知回调方法。"
    - id: extraData
      type: System.Object
      description: "异步方法的状态数据。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用该异步请求。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "处理异步页请求的结束。"
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用挂起的异步请求。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值时处理异步任务使用的超时间隔。"
  remarks: "页的异步超时表示页将等待执行异步任务的时间量。 在大多数情况下，不要在代码中设置此属性。 设置页异步超时间隔使用的 Web 配置文件或在指令中。 由页指令覆盖页配置节中设置的值。       定义你异步任务使用<xref:System.Web.UI.PageAsyncTask>类并注册开始日期、 结束和超时处理程序。</xref:System.Web.UI.PageAsyncTask> 如果在指定时间段内未完成异步任务，将调用超时处理程序。"
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，其中包含的异步任务完成的允许的时间间隔。</xref:System.TimeSpan> 默认时间间隔为 45 秒。"
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性设置为负值。"
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置控件在用于执行回发页面中。"
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "用于执行回发控件。"
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置一个值，该值指示是否缓冲页面输出。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 将缓冲区属性设置为`true`.aspx 文件中使用指令。 当请求页时，动态生成的类来设置属性。      1> [!NOTE]&1;> 缓冲区属性设置和获取<xref:System.Web.HttpResponse.BufferOutput%2A>属性。</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果页面输出进行缓冲处理;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.Caching.Cache&quot;></xref>与页驻留在其中的应用程序关联的对象。"
  remarks: "应用程序的<xref:System.Web.Caching.Cache>对象允许你存储和检索在后续请求的任意数据。</xref:System.Web.Caching.Cache> 缓存未专门关联与页或用户会话。 它主要用于增强应用程序性能。 有关详细信息，请参阅[缓存应用程序数据](~/add/includes/ajax-current-ext-md.md)。 应用程序缓存和页面输出缓存之间的差异的详细信息，请参阅[ASP.NET 缓存概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref>与该页面的应用程序关联。"
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "实例<xref href=&quot;System.Web.Caching.Cache&quot;></xref>未创建。"
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取所请求 URL 的查询字符串部分。"
  remarks: "ClientQueryString 属性包含请求的浏览器的 URL 的查询字符串部分。 例如，如果所请求的 URL，&quot;http://www.contoso.com/default.aspx?id=100&quot;ClientQueryString 属性将包含&quot;id =&100;&quot;。 编码 ClientQueryString 属性;使用<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>方法进行解码的查询字符串。</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "所请求 URL 的查询字符串部分。"
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref>用于管理、 注册脚本和将脚本添加到页的对象。"
  remarks: "使用 ClientScript 属性来获取<xref:System.Web.UI.ClientScriptManager>可以用于管理、 注册脚本和将脚本添加到网页上的对象。</xref:System.Web.UI.ClientScriptManager> 有关详细信息，请参阅<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager>       <xref:System.Web.UI.ClientScriptManager>类是中新增[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]，并替换<xref:System.Web.UI.Page>类用于管理现已弃用的脚本方法。</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager>"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，允许你重写的浏览器功能的自动检测并指定页特定浏览器客户端的呈现方式。"
  remarks: "如果你未设置请属性中，<xref:System.Web.HttpBrowserCapabilities>与关联的对象<xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>属性反映客户端浏览器的功能。</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> 如果设置此属性，则禁用客户端浏览器检测和页将使用你提供的值 （别名） 相关联的浏览器功能。       Web 服务器计算机上的根 Web.config 配置文件定义以下默认别名，你可以使用常见用户代理字符串作为速记:- `uplevel`，它指定浏览器功能等效于 Internet Explorer 6.0。      - `downlevel`，它指定浏览器功能等效于较旧的浏览器不支持客户端脚本。 可以使用此别名以确定 Web 页面已禁用的客户端脚本的浏览器中工作原理。       你可以设置使用此属性，以编程方式的别名也可以设置它以声明方式使用`ClientTarget`指令的特性。       你可以定义中的其他别名`clientTarget`的应用程序级别的 Web.config 文件的部分。 有关详细信息，请参阅[请元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)。"
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，指定你想要重写的浏览器功能。</xref:System.String>"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置当前的代码页标识符<xref href=&quot;System.Web.UI.Page&quot;> </xref>。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`CodePage`属性设为所需的.aspx 文件中使用该指令的值。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "一个整数，表示当前的代码页标识符<xref href=&quot;System.Web.UI.Page&quot;> </xref>。"
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的 HTTP MIME 类型<xref href=&quot;System.Web.HttpResponse&quot;></xref>与页关联的对象。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`ContentType`属性使用.aspx 文件中的指令。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "与当前页关联的 HTTP MIME 类型。"
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.HttpContext&quot;></xref>与页关联的对象。"
  remarks: "此属性提供以编程方式访问页将运行中，包括有关请求、 响应、 会话和应用程序的信息的上下文。"
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>对象，其中包含与当前页关联的信息。"
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "创建<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象以呈现页面的内容。"
  remarks: "CreateHtmlTextWriter 方法创建<xref:System.IO.TextWriter>通过<xref:System.Web.HttpRequest.Browser%2A>属性<xref:System.Web.HttpContext.Request%2A>页面请求与关联的对象。</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.IO.TextWriter> 你可以添加对的引用<xref:System.Web.UI.HtmlTextWriter>中`browserCaps`配置节。</xref:System.Web.UI.HtmlTextWriter> 重写 CreateHtmlTextWriter 方法，以执行自定义的查找。"
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>用于创建<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>。</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "创建指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象以呈现页面的内容。"
  remarks: "在页面适配器内部使用此方法。"
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>用于创建<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>。</xref:System.IO.TextWriter>"
    - id: writerType
      type: System.Type
      description: "要创建的文本编写器的类型。"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>呈现页面的内容。"
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> writerType </code>参数设置为无效的类型。"
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的区域性 ID <xref href=&quot;System.Threading.Thread&quot;> </xref>与页关联的对象。"
  remarks: "设置`Culture`的指令的.aspx 文件中的属性。 当请求页时，动态生成的类将设置此属性的值。 此外，你可以还显式设置区域性属性的值，通过编程方式或 Web.config 文件的元素。       区域性属性用于帮助本地化页面内容。 你可以将其设置为任何有效的区域性 id。 例如，`en-us`的区域性 ID 将页设置为美国英语，而`fr`的区域性 ID 设置为法语的页。 此外可以将值设置为`auto`，用于将执行的浏览器的自动检测的首选语言，并将其设置。 使用默认值可以如限定自动语言检测`auto:en-us`。       有关详细信息，请参阅<xref:System.Globalization.CultureInfo>类概述。</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "一个有效的区域性 id。"
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "执行的实例的任何初始化<xref href=&quot;System.Web.UI.Page&quot;> </xref> RAD 设计器所需的类。 此方法仅在设计时使用。"
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref>的回发到页面使用 POST 或 GET 命令的数据。"
  remarks: "将方法返回<xref:System.Collections.Specialized.NameValueCollection>包含数据的对象回发到页。</xref:System.Collections.Specialized.NameValueCollection> 存在页的隐藏的字段 VIEWSTATE 和 EVENTTARGET 用于帮助确定是否发生回发事件。 <xref:System.Web.UI.Page.IsPostBack%2A>属性设置将方法调用时。</xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>对象，其中包含窗体数据。 如果回发使用 POST 命令，从返回的窗体信息<xref:System.Web.UI.Page.Context*>对象。</xref:System.Web.UI.Page.Context*> 如果回发使用 GET 命令，则返回的查询字符串信息。 如果首次请求该页<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>返回。"
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回到使用 POST 或 GET 命令，而不在请求执行 ASP.NET 请求验证页上的已发布的数据的名称值集合。"
  remarks: "有关详细信息，请参阅<xref:System.Web.UnvalidatedRequestValues>类。</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "一个包含未经过验证的窗体数据的对象。"
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示该页是否验证回发和回调事件。"
  remarks: "当 EnableEventValidation 属性设置为`true`，ASP.NET 验证控件事件源自由该控件已呈现的用户界面。 控件在呈现期间注册其事件，然后在回发或回调处理过程中验证事件。 例如，如果列表控件包含选项按顺序编号 1、 2 或 3 当呈现页面，并且如果指定选项编号 4 收到的回发的请求时，ASP.NET 将引发异常。 默认情况下，在 ASP.NET 中的所有事件驱动控件都使用此功能。       如果你编写在运行时更改客户端中的控件的客户端脚本，你可能必须使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法，以避免 false 事件验证错误。</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>      1> [!IMPORTANT]&1;> 此功能降低了未经授权或恶意的回发请求和回调的风险。 强烈建议不要禁用事件验证。       通过设置设置 EnableEventValidation 属性`enableEventValidation`指令的特性或`enableEventValidation`的 Web.config 文件中的元素的属性。 如果在代码中设置此属性，则必须初始化页之前设置它。"
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该页验证回发和回调的事件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "页已初始化后，已设置 EnableEventValidation 属性。"
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示该页面保持其视图状态，并且任何服务器的视图状态控制它包含在当前页面请求结束时。"
  remarks: "有关为什么你可能想要禁用视图状态的信息，请参阅<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>       无论是否应`false`，页可能会包含 ASP.NET 用于检测回发的隐藏的视图状态字段。"
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该页面保持其视图状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示 ASP.NET 是否应检查消息身份验证代码 (MAC) 中页面的视图状态，当从客户端回发页面时。"
  remarks: "视图状态 MAC 是变量的隐藏页发送到浏览器时，将页面的视图状态保存到的加密的版本。 当此属性设置为`true`，加密的视图状态会检查以验证它的客户端上不被篡改。       未在代码中设置此属性。 设置`EnableViewStateMac`属性使用.aspx 文件中的指令。 当请求页时，动态生成的类来设置属性。      1> [!IMPORTANT]&1;> 此属性应永远不会设置为`false`生产 Web 站点，即使该应用程序或页不使用视图状态中。 视图状态 MAC 可帮助确保 ASP.NET 函数除了视图状态中的安全。"
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应 MAC 检查和编码; 的视图状态。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置要向其请求的浏览器重定向发生未处理的页异常时的错误页。"
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "将浏览器重定向到错误页。"
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "开始一个异步任务的执行。"
  remarks: "定义一个异步任务使用<xref:System.Web.UI.PageAsyncTask>类。</xref:System.Web.UI.PageAsyncTask> 任务定义的并向页使用注册后<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法，可以调用 ExecuteRegisteredAsyncTasks 方法开始异步任务。</xref:System.Web.UI.Page.RegisterAsyncTask%2A>       在页处理，任何已注册的异步任务，如果它们存在时, 点自动调用方法 ExecuteRegisteredAsyncTasks 调用为非异步页。 ExecuteRegisteredAsyncTasks 此自动调用之前发生<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> 对你想要对此方法的自动调用以外有时调用的任务调用 ExecuteRegisteredAsyncTasks 方法。 请注意，即使 ExecuteRegisteredAsyncTasks 可能不止一次调用将仅一次执行异步任务。       <xref:System.Web.UI.Page.AsyncTimeout%2A>属性在每次调用 ExecuteRegisteredAsyncTasks 方法重置。</xref:System.Web.UI.Page.AsyncTimeout%2A> 最后一个值<xref:System.Web.UI.Page.AsyncTimeout%2A>之前调用 ExecuteRegisteredAsyncTasks 方法将优先。</xref:System.Web.UI.Page.AsyncTimeout%2A> 如果一个异步任务采用多个<xref:System.Web.UI.Page.AsyncTimeout%2A>，在该 ExecuteRegisteredAsyncTasks 调用过程中调用的后续任务立即超时。</xref:System.Web.UI.Page.AsyncTimeout%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有在异步任务中的出现异常。"
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的文件的数组，当前<xref href=&quot;System.Web.HttpResponse&quot;></xref>所依赖的对象。"
  remarks: "此属性已弃用。 使用<xref:System.Web.HttpResponse.AddFileDependencies%2A>方法或<xref:System.Web.HttpResponse.AddFileDependency%2A>方法<xref:System.Web.HttpResponse>类。</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.AddFileDependency%2A> </xref:System.Web.HttpResponse.AddFileDependencies%2A>       在大多数情况下，不要在代码中设置此属性。 设置`FileDependencies`属性设为`true`.aspx 文件中使用指令。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "数组的文件当前<xref href=&quot;System.Web.HttpResponse&quot;></xref>所依赖的对象。"
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "搜索具有指定标识符的服务器控件在页命名容器。"
  remarks: "FindControl 方法可以用于访问控制其<xref:System.Web.UI.Control.ID%2A>在设计时不可用。</xref:System.Web.UI.Control.ID%2A> 方法搜索仅页面的立即，或顶级，容器;它会以递归方式搜索不包含在页上的命名容器中的控件。 若要访问从属命名容器中的控件，调用`FindControl`该容器的方法。"
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "要找的控件标识符。"
    return:
      type: System.Web.UI.Control
      description: "指定的控件，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果指定的控件不存在。"
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取页的 HTML 窗体。"
  remarks: "使用窗体属性访问的方法和属性<xref:System.Web.UI.HtmlControls.HtmlForm>是在页上的控件层次结构的基类的对象。</xref:System.Web.UI.HtmlControls.HtmlForm>"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>与页关联的对象。"
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在基于页面的声明性特性的页生成期间初始化管理树。"
  remarks: "FrameworkInitialize 方法初始化<xref:System.Web.UI.Page>对象，并创建基于页面的声明性特性的控制树。</xref:System.Web.UI.Page> FrameworkInitialize 方法被重写由页分析和代码生成为<xref:System.Web.UI.Page>声明性页的类。</xref:System.Web.UI.Page> 通常，你应该不需要重写此方法通过。 如果重写时，一定要调用基类的 FrameworkInitialize 方法。"
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取数据绑定上下文堆栈顶部的数据项。"
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "在数据绑定上下文堆栈顶部的对象。"
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "没有页数据绑定上下文。"
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取用于在客户端事件中回发到服务器指定的控件并使用指定的事件自变量的引用。"
  remarks: "请参阅<xref:System.Web.UI.ClientScriptManager>此不推荐使用的成员的替代方法的类。</xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "接收客户端事件回发的服务器控件。"
    - id: argument
      type: System.String
      description: "A<xref:System.String>传递给&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;。</xref:System.String>"
    return:
      type: System.String
      description: "表示客户端事件的字符串。"
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个引用，使用<xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;></xref>追加到其开头，可以使用在客户端事件以将发布回服务器指定的控件并使用指定的事件自变量。"
  remarks: "请参阅<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>此不推荐使用的成员的替代方法的方法。</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要处理回发的服务器控件。"
    - id: argument
      type: System.String
      description: "将参数传递到服务器控件。"
    return:
      type: System.String
      description: "表示包括目标控件的 ID 和事件参数的回发函数 JavaScript 调用的字符串。"
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回一个客户端事件，导致回发到服务器中的程序可以使用的字符串。 引用字符串定义由指定<xref href=&quot;System.Web.UI.Control&quot;></xref>对象。"
  remarks: "此方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要处理回发的服务器上的服务器控件。"
    return:
      type: System.String
      description: "一个字符串，当客户端上的脚本被视为启动回发。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回一个客户端事件，导致回发到服务器中的程序可以使用的字符串。 引用字符串定义由处理回发和字符串自变量的其他事件信息的指定控件。"
  remarks: "此方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要处理回发的服务器控件。"
    - id: argument
      type: System.String
      description: "将参数传递到服务器控件。"
    return:
      type: System.String
      description: "一个字符串，当客户端上的脚本被视为启动回发。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索由生成的哈希代码<xref href=&quot;System.Web.UI.Page&quot;></xref>在生成的对象运行时间。 此哈希代码是唯一的<xref href=&quot;System.Web.UI.Page&quot;></xref>对象的控件层次结构。"
  remarks: "不重写此方法。"
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "在运行时生成的哈希代码。 默认值为 0。"
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回的控件验证程序指定的验证组的集合。"
  remarks: "GetValidators 方法返回与特定的验证组关联的所有验证对象。 你可以返回默认验证组 (与控件而不通过关联的所有验证控件`ValidationGroup`属性集) 通过设置`validationGroup`参数`null`。       若要验证的验证组的成员，可以循环访问集合并调用<xref:System.Web.UI.IValidator.Validate%2A>的每个验证程序方法返回。</xref:System.Web.UI.IValidator.Validate%2A>"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "若要返回的验证组或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>返回默认验证组。"
    return:
      type: System.Web.UI.ValidatorCollection
      description: "A <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref> ，该字符串包含指定的验证组控件验证程序。"
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回列表的虚拟文件位置相对应的物理文件名称的列表。"
  remarks: "GetWrappedFileDependencies 方法获取的文件，如用户控件文件，构成当前页的列表。 如果修改了任何这些页面，整个页面编译会在被请求的下一步时间。 不重写此方法。"
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "虚拟文件位置的字符串数组。"
    return:
      type: System.Object
      description: "一个包含物理文件位置的列表对象。"
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取页面的文档标头，如果<xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;></xref>元素定义与<xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;></xref>页声明中。"
  remarks: "标头属性获取的引用<xref:System.Web.UI.HtmlControls.HtmlHead>对象可用于设置页的文档标头信息。</xref:System.Web.UI.HtmlControls.HtmlHead> <xref:System.Web.UI.HtmlControls.HtmlHead>可用于添加信息，例如样式表、 样式规则、 标题和元数据向`head`元素。</xref:System.Web.UI.HtmlControls.HtmlHead>      1> [!NOTE]&1;> 添加样式以编程方式使用的方法<xref:System.Web.UI.IStyleSheet>不支持异步回发期间的界面。</xref:System.Web.UI.IStyleSheet> 当将 AJAX 功能添加到 Web 页中时，异步回发而无需更新整页更新页面区域内。 有关详细信息，请参阅[Microsoft Ajax 概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref>包含标头。"
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置的特定实例的标识符<xref href=&quot;System.Web.UI.Page&quot;></xref>类。"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "实例的标识符<xref href=&quot;System.Web.UI.Page&quot;></xref>类。 默认值为 _Page。"
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取用于生成页上的控件的唯一 ID 时分隔控件标识符的字符。"
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "用于分隔控件标识符的字符。 默认值将由<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;></xref>呈现页面的实例。 IdSeparator 服务器端域且不应修改。"
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "页初始化已完成时发生。"
  remarks: "在页面的初始化阶段的末尾，调用 InitComplete 事件。 在页面的生命周期的此阶段，声明的所有页面上的控件进行初始化，但该页面的状态将不填充。 你可以访问服务器控件，但它们将不包含从用户返回的信息。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "集<> *1> 和<> *1> 页的当前线程。"
  remarks: "InitializeCulture 方法不包含任何编码的逻辑。 控件扩展的功能的开发人员<xref:System.Web.UI.Page>类可以重写 InitializeCulture 方法以初始化<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>页信息。</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化当前页面请求的输出缓存基于<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;></xref>对象。"
  remarks: "不应调用此方法。 要启用和操作页的输出缓存，请使用任一指令在.aspx 文件中，或的方法和属性的<xref:System.Web.HttpCachePolicy>类。</xref:System.Web.HttpCachePolicy> 后者是可通过访问`Response.Cache`页的代码声明块或代码隐藏文件中的语法。 有关详细信息，请参阅[缓存 ASP.NET 页](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> ，包含缓存设置。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "输出缓存设置位置无效。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化当前页面请求的输出缓存。"
  remarks: "不应调用此方法。 要启用和操作页的输出缓存，请使用任一指令在.aspx 文件中，或的方法和属性的<xref:System.Web.HttpCachePolicy>类。</xref:System.Web.HttpCachePolicy> 后者是可通过访问`Response.Cache`中页的代码的语法。 有关详细信息，请参阅[缓存 ASP.NET 页](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "输出缓存中存储的对象都有效的时间量。"
    - id: varyByHeader
      type: System.String
      description: "从输出缓存的内容将因的标头以分号分隔列表。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 标头。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "之一<xref href=&quot;System.Web.UI.OutputCacheLocation&quot;></xref>值。"
    - id: varyByParam
      type: System.String
      description: "通过从输出缓存的内容将因的 GET 或 POST 方法接收的参数之间用分号分隔的列表。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "为指定值无效<code> location </code>。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化当前页面请求的输出缓存。"
  remarks: "不应调用此方法。 若要启用和操作页的输出缓存，使用任一的指令中的.aspx 文件中，或方法和属性的<xref:System.Web.HttpCachePolicy>类。</xref:System.Web.HttpCachePolicy> 后者是可通过访问`Response.Cache`中页的代码的语法。 有关详细信息，请参阅[缓存 ASP.NET 页](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "输出缓存中存储的对象都有效的时间量。"
    - id: varyByContentEncoding
      type: System.String
      description: "以分号分隔列表的字符集 （内容编码），来自输出缓存的内容将因。"
    - id: varyByHeader
      type: System.String
      description: "从输出缓存的内容将因的标头以分号分隔列表。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 标头。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "之一<xref href=&quot;System.Web.UI.OutputCacheLocation&quot;></xref>值。"
    - id: varyByParam
      type: System.String
      description: "通过从输出缓存的内容将因的 GET 或 POST 方法接收的参数之间用分号分隔的列表。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "为指定值无效<code> location </code>。"
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否以异步方式处理页。"
  remarks: "使用 IsAsync 属性，确定是否异步模式中运行网页。 此信息很有用，如果控件或页面上的代码需要修改其行为，具体取决于页是异步。 有关异步编程的详细信息，请参阅[异步操作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该页面的异步模式，则是否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>;"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否页面请求为回调的结果。"
  remarks: "有关详细信息，请参阅[实现客户端回调而无需回发](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果页面请求是回调; 的结果否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否已向页注册客户端脚本块与指定的键。"
  remarks: "<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>若要避免不必要地将客户端脚本。</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>在调用之前调用此方法 这一点特别重要，如果该脚本需要大量服务器资源进行创建。       IsClientScriptBlockRegistered 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>中<xref:System.Web.UI.ClientScriptManager>类</xref:System.Web.UI.ClientScriptManager>方法</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "要搜索的客户端脚本的字符串键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果注册了脚本块;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示页面是否涉及跨页回发。"
  remarks: "ASP.NET 提供了两种用于将从一页的控制转移到另一个机制。 你可以使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法处理传输之间页，也可以进行的跨页面请求分配的页 URL<xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>按钮控件实现的属性<xref:System.Web.UI.WebControls.IButtonControl>接口。</xref:System.Web.UI.WebControls.IButtonControl> </xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> </xref:System.Web.HttpServerUtility.Transfer%2A>       在任一情况下，<xref:System.Web.UI.Page.PreviousPage%2A>页属性将包含一个对象，表示上一页或发起方。</xref:System.Web.UI.Page.PreviousPage%2A> 如果页 A 例如，发送至页 B，页 A IsCrossPagePostBack 属性 (可通过访问<xref:System.Web.UI.Page.PreviousPage%2A>属性) 将`true`和页 B 的<xref:System.Web.UI.Page.PreviousPage%2A>属性将具有名称的页 A</xref:System.Web.UI.Page.PreviousPage%2A> </xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果页面参与跨页请求;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示页面首次呈现还是正在加载回发响应。"
  remarks: "回发和回调之间的差异的说明，请参阅[实现客户端回调而无需回发](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果以响应客户端回发; 加载页时否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否已注册中的页的执行回发的控件。"
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件具有已注册;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.Page&quot;></xref>对象可以重复使用。"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否注册客户端启动脚本<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>若要避免不必要地将客户端脚本。</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>在调用之前调用此方法 这一点特别重要，如果该脚本需要大量服务器资源进行创建。       IsStartupScriptRegistered 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>中<xref:System.Web.UI.ClientScriptManager>类</xref:System.Web.UI.ClientScriptManager>方法</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "要搜索的启动脚本字符串键。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已注册的启动脚本;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示页验证是否成功。"
  remarks: "此属性返回`true`，当前的验证组中的所有验证服务器控件都必须都验证成功。 只有具有调用之后，应检查此属性<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>方法或一组`CausesValidation`属性`true`中`OnServerClick`启动窗体处理的 ASP.NET 服务器控件的事件处理程序。</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 这些服务器控件包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.HtmlControls.HtmlButton>， <xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>类。</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.WebControls.Button>       如果强制验证的验证组使用<xref:System.Web.UI.Page.Validate%2A>方法，则指定的验证组中的所有验证控件必须成功验证也。</xref:System.Web.UI.Page.Validate%2A>"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果页验证成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "IsValid 属性称为之前发生验证。"
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取页上下文中存储的对象列表。"
  remarks: "使用项目属性将具有相同的生存期的对象存储为页面请求。 此属性是只读的;但是，你可以将对象添加到<xref:System.Collections.IDictionary>对象返回。</xref:System.Collections.IDictionary>       添加到项属性的对象都的整个生存期内页上，提供的因此可以在页生命周期的初期将对象添加到事件中的项属性，还可以访问更高版本的事件中的那些对象。"
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "对引用<xref:System.Collections.IDictionary>包含页上下文中存储的对象。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的区域设置标识符<xref href=&quot;System.Threading.Thread&quot;></xref>与页关联的对象。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 `LCID`可以在.aspx 文件指令中设置属性，但是，设置的区域设置标识符的首选的方法是使用<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>属性。</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "要传递到的区域设置标识符<xref href=&quot;System.Threading.Thread&quot;> </xref>。"
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在页面的生命周期加载阶段结束时发生。"
  remarks: "LoadComplete 事件发生后所有回发数据和视图状态数据加载到页和之后<xref:System.Web.UI.Control.OnLoad%2A>已为页面上的所有控件调用方法。</xref:System.Web.UI.Control.OnLoad%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "任何保存到的视图状态信息的加载<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "LoadPageStateFromPersistenceMedium 方法使用<xref:System.Web.UI.PageStatePersister.Load%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>所引用对象<xref:System.Web.UI.Page.PageStatePersister%2A>属性加载任何保存的视图状态信息<xref:System.Web.UI.Page>对象。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Load%2A>       ASP.NET 包括两个子代的<xref:System.Web.UI.PageStatePersister>类，<xref:System.Web.UI.HiddenFieldPageStatePersister>将状态信息保存在 ASP.NET 页中包含的隐藏字段的类和<xref:System.Web.UI.SessionPageStatePersister>中保存状态的类<xref:System.Web.UI.Page.Session%2A>与请求关联的对象。</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister>       若要将状态保存在你选择的位置，你应创建一个新的派生<xref:System.Web.UI.PageStatePersister>类，该类将保存并加载到持久性介质的所选的状态。</xref:System.Web.UI.PageStatePersister> 有关示例创建一个新的<xref:System.Web.UI.PageStatePersister>对象，请参阅<xref:System.Web.UI.PageStatePersister>类。</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       如果你使用的.NET Framework 版本 1.0 或 1.1，重写此方法，如果你想要加载<xref:System.Web.UI.Page>状态从隐藏的字段之外的任何内容。</xref:System.Web.UI.Page> 如果你选择这样做，则还必须重写<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "保存的视图状态。"
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否在回发后将用户返回到客户端浏览器中的同一位置。 此属性取代了已过时<xref:System.Web.UI.Page.SmartNavigation*>属性。</xref:System.Web.UI.Page.SmartNavigation*>"
  remarks: "当网页是回发到服务器，则用户将返回到页面顶部。 在较长的网页，这意味着，用户必须向下滚动页面回发到页面上的最后一个位置。       当 MaintainScrollPositionOnPostBack 属性设置为`true`，则用户将改为返回到最后一个位置的页上。       在中设置 MaintainScrollPositionOnPostBack 属性[@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指令。"
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应保持客户端位置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索虚拟路径，绝对或相对的还是相对于应用程序路径映射到的物理路径。"
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.String>表示虚拟路径。</xref:System.String>"
    return:
      type: System.String
      description: "与的虚拟路径或相对于应用程序路径关联的物理路径。"
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取确定页面的整体外观的主页面。"
  remarks: "主属性返回<xref:System.Web.UI.MasterPage>对象关联的这一页。</xref:System.Web.UI.MasterPage> 此属性是只读的;但是，你可以设置属性<xref:System.Web.UI.MasterPage>对象返回。</xref:System.Web.UI.MasterPage>       属性是仅在上有效的主机页该引用母版页中的<xref:System.Web.UI.Page.MasterPageFile%2A>属性。</xref:System.Web.UI.Page.MasterPageFile%2A> 如果访问主属性不引用母板页的页面上`null`返回。 母版页的内容不可用，直到后<xref:System.Web.UI.Page.PreInit>引发事件。</xref:System.Web.UI.Page.PreInit>"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "<xref href=&quot;System.Web.UI.MasterPage&quot;> </xref>与此页上，如果它存在关联; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置母版页的虚拟路径。"
  remarks: "MasterPageFile 属性是虚拟路径 （从应用程序的根目录） 关联的这一页的母版页文件。 该 MasterPageFile 属性可以设置仅在<xref:System.Web.UI.Page.PreInit>事件; 正在尝试设置后的 MasterPageFile 属性<xref:System.Web.UI.Page.PreInit>事件将引发<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit> 如果 MasterPageFile 属性无效，类型的异常<xref:System.Web.HttpException>引发更高版本中页的生命周期，但不会引发异常时在该属性设置<xref:System.Web.UI.Page.PreInit>事件。</xref:System.Web.UI.Page.PreInit> </xref:System.Web.HttpException>       MasterPageFile 属性设置的页是内容页，并因此可包含仅顶级控件<xref:System.Web.UI.WebControls.Content>控件。</xref:System.Web.UI.WebControls.Content>"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "主控页的虚拟路径。"
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MasterPageFile 属性后设置<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>事件已完成。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置页面的状态字段的最大长度。"
  remarks: "当 MaxPageStateFieldLength 属性设置为正数时，发送到客户端浏览器的视图状态分为多个隐藏的字段，并且每个字段的值小于 MaxPageStateFieldLength 属性中指定的大小。       将 MaxPageStateFieldLength 属性设置为负数 （默认值） 指示不应该将视图状态字段分隔成多个块。 将 MaxPageStateFieldLength 设置为数量较少可能会导致性能不佳。       设置中的 MaxPageStateFieldLength 属性的值的 Web.config 文件。"
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "最大长度，以字节为单位，有关该页面的状态字段。 默认值为-1。"
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MaxPageStateFieldLength 属性不等于-1 或一个正数。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "页已初始化后，已设置 MaxPageStateFieldLength 属性。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置&quot;description&quot;的内容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>元素。"
  remarks: "HTML`meta`元素可用于提高搜索引擎列表。 &quot;Description&quot;`meta`某些搜索引擎使用元素来改善列表预览。       如果没有&quot;描述&quot;`meta`中的元素`head`的页标记中，元素`meta`呈现页时，将元素添加到页面。 如果页面标记已有&quot;description&quot;`meta`元素，此属性获取或设置`content`属性`meta`元素。       此外可以在指令中设置此属性。"
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "&quot;说明&quot;的内容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "页没有标头控件 ( <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>具有元素<xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;></xref>属性设置为&quot;server&quot;)。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置&quot;关键字&quot;的内容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>元素。"
  remarks: "HTML`meta`元素可用于提高搜索引擎列表。 &quot;关键字&quot;`meta`元素根本或者不使用或由主要的搜索引擎提供很少的权重。       如果没有任何&quot;关键字&quot;`meta`中的元素`head`的页标记中，元素`meta`呈现页时，将元素添加到页面。 如果页面标记已有&quot;关键字&quot;`meta`元素，此属性获取或设置`content`属性`meta`元素。       此外可以在指令中设置此属性。"
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "&quot;关键字&quot;的内容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "页没有标头控件 ( <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>具有元素<xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;></xref>属性设置为&quot;server&quot;)。"
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取模型绑定执行上下文。"
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "模型绑定执行上下文。 如果模型绑定执行上下文<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，一个新的创建并返回一个。"
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取包含的模型和模型绑定验证状态的模型状态字典对象。"
  remarks: "在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "模型状态字典对象。"
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件来初始化页。"
  remarks: "OnInit 方法执行创建所需的初始化和安装步骤<xref:System.Web.UI.Page>实例。</xref:System.Web.UI.Page> 在此阶段中的页面的生命周期，该页上声明的服务器控件初始化为其默认状态;但是，将不填充每个控件的视图状态。 页上的控件无法访问期间页上的其他服务器控件`Page_Init`阶段，而不考虑其他控件是否子项或父控件。 不保证其他服务器控件都可创建并准备好进行访问。       OnInit 方法之后调用<xref:System.Web.UI.Page.OnPreInit%2A>方法和之前<xref:System.Web.UI.Page.OnInitComplete%2A>方法。</xref:System.Web.UI.Page.OnInitComplete%2A> </xref:System.Web.UI.Page.OnPreInit%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.InitComplete&quot;></xref>页初始化之后的事件。"
  remarks: "页初始化完成后调用 OnInitComplete 方法。 在此阶段的页面的生命周期中，所有声明的页上的控件进行初始化，但尚未填充页面的视图状态。 你可以访问服务器控件，但它们将不包含从用户返回的信息。       OnInitComplete 方法发生末尾<xref:System.Web.UI.Page>初始化阶段和之前的加载阶段。</xref:System.Web.UI.Page>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnInitComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.LoadComplete&quot;></xref>末尾的页加载阶段的事件。"
  remarks: "在页面加载阶段的末尾调用 OnLoadComplete 方法。 此时在页的生命周期，所有的回发数据和视图状态数据加载到页上的控件。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnLoadComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>页初始化开头的事件。"
  remarks: "页初始化阶段开头调用 OnPreInit 方法。       调用 OnPreInit 方法后，加载个性化信息并初始化页面主题中，如果有的话。 这也是首选的阶段，以动态定义<xref:System.Web.UI.PageTheme>或<xref:System.Web.UI.MasterPage>页。</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.PageTheme>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.PreLoad&quot;></xref>事件后回发数据加载到页面服务器控件之前<xref:System.Web.UI.Control.OnLoad*>事件。</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "所有回发数据从用户返回后调用方法 OnPreLoad 会加载。 在页面的生命周期中的此阶段，查看状态信息的回发数据声明和控件和在初始化阶段过程中创建的控件将加载到页面的控件。       此外将与视图状态和回发数据加载在 OnPreLoad 方法中创建的控件。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreLoad 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;></xref>事件在 OnPreRenderComplete 事件之后和之前呈现页面。"
  remarks: "完成页生命周期的预呈现阶段时，被调用 OnPreRenderComplete 方法。 在此阶段的页的生命周期中，创建所有控件，而该页已准备好将输出呈现。       这是保存页面的视图状态之前调用的最后一个事件。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreRenderComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;></xref>事件后已将页状态保存到持久性介质。"
  remarks: "控件的状态信息写入持久性介质页时，被调用 OnSaveStateComplete 方法。 状态信息写入到持久性介质上，通过调用<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnSaveStateComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>对象，其中包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取呈现特定请求的浏览器的页面的适配器。"
  remarks: "PageAdapter 属性返回特定于<xref:System.Web.UI.Adapters.PageAdapter>修改的行为的对象<xref:System.Web.UI.Page>请求浏览器的对象。</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>       特定于<xref:System.Web.UI.Adapters.PageAdapter>对象确定通过检查传入的特征<xref:System.Web.UI.Page.Request%2A>对象。</xref:System.Web.UI.Page.Request%2A> </xref:System.Web.UI.Adapters.PageAdapter> 在任何生命周期事件、 请求选择适配器时<xref:System.Web.UI.Adapters.PageAdapter>对象替代的相应事件上<xref:System.Web.UI.Page>对象。</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref>呈现页面。"
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.PageStatePersister&quot;></xref>与页关联的对象。"
  remarks: "HTTP 请求和响应是本质上是无状态。 要保持 HTTP 请求之间的状态，ASP.NET 服务器页可以存储<xref:System.Web.UI.Page>状态。</xref:System.Web.UI.Page> 此状态，称为视图状态，它包含的页面和控件设置使页和控件显示就像它们是相同的用户所看到并与之交互到页其最后一个往返行程的数据。 有几种机制来存储到同一页上的连续请求之间的视图状态。 抽象<xref:System.Web.UI.PageStatePersister>类表示这些状态存储机制的基类。</xref:System.Web.UI.PageStatePersister>       页开发人员通常不需要使用 PageStatePersister 属性。 主要由控件开发人员在扩展<xref:System.Web.UI.Page>类</xref:System.Web.UI.Page>的功能使用 PageStatePersister 属性"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "A <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref>与页关联。"
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "一个字符串，在所呈现页面上定义所引起隐藏的字段。"
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "一个字符串，在所呈现页面上定义 EVENTTARGET 隐藏的字段。"
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在页初始化之前发生。"
  remarks: "此事件使您能够检查页请求，如是否正在加载页回发到响应中的条件。 你还可以检查配置文件属性的值。       事件可以设置更高版本在页的生命周期中使用的值。 可以动态设置母版页或主题对于请求的页，并创建动态控件。       有关如何 PreInit 事件适合 ASP.NET 生命周期的详细信息，请参阅[ASP.NET 页面生命周期概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在页面之前发生<xref href=&quot;System.Web.UI.Control.Load&quot;></xref>事件。"
  remarks: '所有回发数据处理之后，并在引发预加载事件<xref:System.Web.UI.Control.Load>事件。</xref:System.Web.UI.Control.Load> 第二个尝试加载之前的回发数据<xref:System.Web.UI.Page.OnLoadComplete%2A>事件。</xref:System.Web.UI.Page.OnLoadComplete%2A> 有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在将页内容呈现之前发生。"
  remarks: "完成页生命周期的预呈现阶段时，引发 PreRenderComplete 事件。 在此阶段的页的生命周期中，创建所有控件、 完成所需的任何分页，和页已准备好呈现到输出。       这是保存页面的视图状态之前引发的最后一个事件。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取传输到当前页的控件的页面。"
  remarks: "当你使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法或使用跨页面发送将处理从一个 ASP.NET 页传输到另一个，起始页包含可能要求的目标页的请求信息。</xref:System.Web.HttpServerUtility.Transfer%2A> PreviousPage 属性可用于访问该信息。       如果当前页呈现 （不是传输或从另一页的跨 post），直接请求的结果 PreviousPage 属性包含`null`。"
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>表示传输到当前页的控件的页。"
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当前用户不被允许访问前一页。       -或-ASP.NET 路由正在使用中前, 一页的 URL 是路由的 URL。 当 ASP.NET 检查访问权限时，它假设 URL 到文件的实际路径。 因为这不是最情况下使用的路由的 URL，该检查失败。"
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的内部服务器对象<xref href=&quot;System.Web.UI.Page&quot;></xref>对象，如<> *1>， <> </> *1>， <> </> *1>，和<> *1> 属性。"
  remarks: "不应调用此方法。"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>提供对内部服务器对象的引用的对象 (例如， <> </> *1>， <> </> *1>，和<xref:System.Web.HttpContext.Session*>) 用于 HTTP 请求提供服务。</xref:System.Web.HttpContext.Session*>"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "通知服务器控件导致回发，它应处理传入的回发事件。"
  remarks: "<xref:System.Web.UI.Page>对象调用 RaisePostBackEvent 方法时产生的回发。</xref:System.Web.UI.Page> 加载和更改通知都已完成之后但尚未预呈现发生之前，此调用是在页的生命周期中。"
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "ASP.NET 服务器控件导致回发。 此控件必须实现<xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;></xref>接口。"
    - id: eventArgument
      type: System.String
      description: "回发的自变量。"
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "声明了一个呈现页时被声明为一个 ECMAScript 数组声明的值。"
  remarks: "此方法可以由基于脚本的控件，用于在数组内声明本身，以便客户端脚本库可以使用的相同类型的所有控件。       RegisterArrayDeclaration 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>中<xref:System.Web.UI.ClientScriptManager>类</xref:System.Web.UI.ClientScriptManager>方法</xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "中要在其中声明值的数组的名称。"
    - id: arrayValue
      type: System.String
      description: "要置于数组中的值。"
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "向页中注册新的异步任务。"
  remarks: "定义一个异步任务使用<xref:System.Web.UI.PageAsyncTask>类。</xref:System.Web.UI.PageAsyncTask> 如果定义了任务，使用 RegisterAsyncTask 方法替换为页注册任务。 注册任务之后, 调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法，以开始异步任务。</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>       RegisterAsyncTask 方法可以用于同步和异步页。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "A <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref>定义异步任务。"
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "异步任务是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "发出的响应的客户端脚本块。"
  remarks: "客户端脚本的开始标记之后，将发出<xref:System.Web.UI.Page>对象的`<form runat= server>`元素。</xref:System.Web.UI.Page> 请务必包括打开和关闭`<script>`元素周围的脚本块中指定的字符串`script`参数。       因为此方法使用密钥来标识脚本块，则不需要发送到输出流请求的其他服务器控件实例每次脚本块。 使用密钥也减少了不同的控件的脚本块相互干扰的可能性。       任何脚本块具有相同`key`参数值被视为重复项。      1> [!NOTE]&1;> 请记住包括解决你的脚本的 HTML 注释标记，以便它将不会呈现请求浏览器不支持脚本。       RegisterClientScriptBlock 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "标识脚本块的唯一键。"
    - id: script
      type: System.String
      description: "发送到客户端的脚本内容。"
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "允许服务器控件自动注册该窗体上的隐藏的字段。 该字段将发送到<xref href=&quot;System.Web.UI.Page&quot;></xref>对象时<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>呈现服务器控件。"
  remarks: "RegisterHiddenField 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>中<xref:System.Web.UI.ClientScriptManager>类</xref:System.Web.UI.ClientScriptManager>方法</xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "要呈现的隐藏字段的唯一名称。"
    - id: hiddenFieldInitialValue
      type: System.String
      description: "要在隐藏的表单中发出的值。"
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "使页能够访问客户端<xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;></xref>事件。 该脚本应是对注册在其他地方的客户端代码的函数调用。"
  remarks: "RegisterOnSubmitStatement 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>中<xref:System.Web.UI.ClientScriptManager>类</xref:System.Web.UI.ClientScriptManager>方法</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "标识脚本块的唯一键。"
    - id: script
      type: System.String
      description: "要发送到客户端的客户端脚本。"
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将控件注册一个必须保留其控件状态。"
  remarks: "使用控件状态的自定义服务器控件必须对每个请求调用 RegisterRequiresControlState 方法，因为控件状态的注册将不会从请求到请求在回发事件。 建议在进行注册<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init>"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要注册的控件。"
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "要注册的控件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "仅之前或期间，可以调用 RegisterRequiresControlState 方法<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将控件注册为回发处理页回发到服务器时需要。"
  remarks: "要注册的控件必须实现<xref:System.Web.UI.IPostBackDataHandler>接口或<xref:System.Web.HttpException>引发。</xref:System.Web.HttpException> </xref:System.Web.UI.IPostBackDataHandler> 在实现某一控件时<xref:System.Web.UI.IPostBackDataHandler>接口启用的回发数据处理和引发的任何帖子备份数据更改事件。</xref:System.Web.UI.IPostBackDataHandler> 服务器控件的事件模型的详细信息，请参阅[ASP.NET Web 窗体服务器控件事件模型](~/add/includes/ajax-current-ext-md.md)。       使用页或之前注册控件`Page_PreRender`页生命周期事件。"
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要注册的控件。"
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "要注册的控件不实现<xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;></xref>接口。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ASP.NET 服务器控件注册为一个需要一个事件，它在上的控件进行处理时，会引发<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "只有一台服务器控件可以注册每个页请求。 当控件不包含其控件 ID 的形式将数据发布，则必须使用 RegisterRequiresRaiseEvent。 此外，注册的控件必须实现<xref:System.Web.UI.IPostBackEventHandler>接口。</xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "要注册的控件。"
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将替换为页控件注册一个要求的视图状态加密。"
  remarks: "如果你正在开发讨论与潜在敏感信息的自定义控件，调用 RegisterRequiresViewStateEncryption 方法替换为页注册控件并确保控件的视图状态进行加密。       如果将加密整个页面状态<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>设置为<xref:System.Web.UI.ViewStateEncryptionMode>或<xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之前或期间页，必须调用 RegisterRequiresViewStateEncryption 方法<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>阶段在页生命周期中。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "发出的页响应中的客户端脚本块。"
  remarks: "类似于<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>方法，RegisterStartupScript 方法发出的结束标记之前脚本<xref:System.Web.UI.Page>对象的`<form runat= server>`元素。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 请务必包括打开和关闭`<script>`元素周围的脚本块中指定的字符串`script`参数。       此方法使用密钥来标识脚本块，因为脚本块不必到输出流请求的其他服务器控件实例具有相同的任何脚本块每次发出`key`参数值被视为重复项。      1> [!NOTE]&1;> 请记住包括解决你的脚本的 HTML 注释标记，以便它将不会呈现请求浏览器不支持脚本。       RegisterStartupScript 方法已被否决。 使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "标识脚本块的唯一键。"
    - id: script
      type: System.String
      description: "将发送到客户端的脚本内容。"
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "如果调用，会导致页面视图状态，以保持不变。"
  remarks: "通过自动调用 RegisterViewStateHandler 方法<xref:System.Web.UI.HtmlControls.HtmlForm>服务器控件。</xref:System.Web.UI.HtmlControls.HtmlForm> 如果此方法不会被调用，则不会保留页面视图状态。      1> [!NOTE]&1;> 通常情况下，仅<xref:System.Web.UI.HtmlControls.HtmlForm>页的服务器控件调用此方法。</xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象并调用的子控件<xref href=&quot;System.Web.UI.Page&quot;></xref>来呈现。"
  remarks: "Render 方法负责创建的文本和发送到客户端浏览器的标记。 默认呈现方法调用<xref:System.Web.UI.Control.RenderChildren%2A>要写入的文本和包含的页上的控件的标记。</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>接收页面内容。"
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.HttpRequest&quot;></xref>请求的页对象。"
  remarks: "<xref:System.Web.HttpRequest>对象包含有关当前 HTTP 请求的信息。</xref:System.Web.HttpRequest>"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "当前<xref href=&quot;System.Web.HttpRequest&quot;></xref>与页关联。"
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "发生时<xref href=&quot;System.Web.HttpRequest&quot;></xref>对象不可用。"
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否指定<xref href=&quot;System.Web.UI.Control&quot;></xref>对象注册来参与控制状态管理。"
  remarks: "控件状态是组成关键需要函数; Web 服务器控件的视图状态数据的对象它包含在一个单独的对象从普通视图状态。       使用控件状态的自定义控件必须调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>方法，然后才能保存控件状态。</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 使用 RequiresControlState 方法替换为需要控件状态页注册的控件检查。"
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>控件状态要求检查。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Web.UI.Control&quot;></xref>需要控制状态; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.HttpResponse&quot;></xref>与关联的对象<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。 此对象可用于将 HTTP 响应数据发送到客户端，并包含有关该响应的信息。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "当前<xref href=&quot;System.Web.HttpResponse&quot;></xref>与页关联。"
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref>对象不可用。"
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置当前的编码语言<xref href=&quot;System.Web.HttpResponse&quot;></xref>对象。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`ResponseEncoding`属性设为所需的.aspx 文件中使用该指令的值。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "一个字符串，包含当前的编码语言<xref href=&quot;System.Web.HttpResponse&quot;> </xref>。"
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取&lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt;的当前值&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;实例。"
  remarks: "如果网页正在通过 ASP.NET 路由发出的请求的响应，此属性提供访问权限作为路由数据传递的 URL 参数值。 如果在响应而不是路由 URL 的物理 URL 运行页面，此属性是`null`。 下面的示例演示如何提取名为 URL 参数的值`year`。       [Visual Basic]     ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#]```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ```如果使用的 URL 模式定义路由`{locale}/{year}`域`contoso.com`，以及请求的 URL 是否`contoso.com/US/2010`，`year`将包含值&quot;2010&quot;时此代码运行。       有关 ASP.NET 路由的详细信息，请参阅[ASP.NET 路由](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "&lt;Xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt;的当前值&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;实例。"
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将保存的页面的任何视图状态，以及控制状态信息。"
  remarks: "SavePageStateToPersistenceMedium 方法使用<xref:System.Web.UI.PageStatePersister.Save%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>所引用对象<xref:System.Web.UI.Page.PageStatePersister%2A>属性来存储页的视图状态，以及控制状态信息。</xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Save%2A>       ASP.NET 包括两个子代的<xref:System.Web.UI.PageStatePersister>类，<xref:System.Web.UI.HiddenFieldPageStatePersister>将状态信息保存在 ASP.NET 页中包含的隐藏字段的类和<xref:System.Web.UI.SessionPageStatePersister>中保存状态的类<xref:System.Web.UI.Page.Session%2A>与请求关联的对象。</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister> 请注意，当使用<xref:System.Web.UI.SessionPageStatePersister>类隐藏的视图状态字段仍呈现因为这用于确定回发。</xref:System.Web.UI.SessionPageStatePersister>       若要将状态保存在你选择的位置，你应创建一个新的派生<xref:System.Web.UI.PageStatePersister>类，该类将保存并加载到持久性介质的所选的状态。</xref:System.Web.UI.PageStatePersister> 有关示例创建一个新的<xref:System.Web.UI.PageStatePersister>对象，请参阅<xref:System.Web.UI.PageStatePersister>类。</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       如果你使用的.NET Framework 版本 1.0 或 1.1，重写此方法，如果你想要保存<xref:System.Web.UI.Page>状态的隐藏字段之外的任何内容。</xref:System.Web.UI.Page> 如果你选择这样做，则还必须重写<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>要在其中存储视图状态信息。</xref:System.Object>"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "发生后在页已完成保存所有视图状态和控件状态的信息页和页上的控件。"
  remarks: "在网页上的控件的状态信息保存后<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> 页上的控件保存到持久性介质和 SaveStateComplete 事件引发之后的视图状态和页面的控件状态。       这是在请求浏览器中呈现页之前引发的最后一个事件。       有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>对象，它是实例的<xref href=&quot;System.Web.HttpServerUtility&quot;></xref>类。"
  remarks: "此属性提供访问权限频繁使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>和<xref:System.Web.HttpServerUtility.MapPath%2A>方法，以及其他。</xref:System.Web.HttpServerUtility.MapPath%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A>"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "当前<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>与页关联的对象。"
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取当前<xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;></xref>由 ASP.NET 提供的对象。"
  remarks: "此属性提供有关当前请求的会话的信息。 A`Session`对象将保留为从 ASP.NET 应用程序中请求网页或文档的每个用户。 变量存储在`Session`时用户将页面之间移动应用程序中，对象将不会被丢弃; 相反，这些变量将保留，只要用户访问你的应用程序中的页。 有关会话状态的详细信息，请参阅[ASP.NET 会话状态概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "当前的会话状态数据。"
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当会话信息设置为时发生<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将浏览器焦点设置为具有指定标识符的控件。"
  remarks: "使用 SetFocus 方法来实现具有指定 ID 字符串的活动控件控件的浏览器显示的网页中。 页已准备好进行呈现到中的客户端之前，必须调用 SetFocus 方法<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender>      1> [!NOTE] 1> SetFocus 方法将仅适用于浏览器支持 ECMAScript 1.3 或更高版本。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "要将焦点设置到该控件的 ID。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将浏览器焦点设置为指定的控件。"
  remarks: "使用 SetFocus 方法来实现指定的控件的浏览器显示的网页上的活动控件。 页已准备好进行呈现到中的客户端之前，必须调用 SetFocus 方法<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender>      1> [!NOTE] 1> SetFocus 方法将仅适用于浏览器支持 ECMAScript 1.3 或更高版本。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要接收焦点的控件。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否验证查询字符串值。"
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应跳过查询字符串验证 （查询字符串应不验证）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果查询字符串验证应需要放置作为普通。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否启用智能导航。 此属性已弃用。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`SmartNavigation`属性设为`true`的指令的.aspx 文件中。 当请求页时，动态生成的类将设置此属性。      1> [!NOTE] 1> 在 ASP.NET 版本 2.0，SmartNavigation 属性已弃用。 使用<xref:System.Web.UI.Page.SetFocus%2A>方法和<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>属性改为。</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> </xref:System.Web.UI.Page.SetFocus%2A>       当页面请求的 Microsoft Internet Explorer 5.5 浏览器中，或更高版本，智能导航增强了用户的体验的页通过执行以下:-消除导致导航的闪烁。      -在移动页时，则保留的滚动位置。      -将元素焦点之间导航。      -保留页面状态在浏览器的历史记录中仅最后一个。       具有需要频繁回发的 ASP.NET 页、 但是并不返回显著改变的可见内容，最好使用智能导航。 决定是否将此属性设置为时，请仔细考虑这一点`true`。"
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了智能导航功能;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置在页生命周期的初期应用于页面的主题的名称。"
  remarks: "此属性不是指直接级联样式表 (CSS)。 属性包含 ASP.NET 主题，可以包括 CSS 文件中的名称。       StyleSheetTheme 属性指定在页面生命周期的早期应用于的页面主题的名称，而<xref:System.Web.UI.Page.Theme%2A>属性指定更高版本中页的生命周期应用于的页面主题的名称。</xref:System.Web.UI.Page.Theme%2A> 这意味着在页上的设置，优先于样式表主题中的设置。 有关详细信息，请参阅[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。       通常，在页面指令中或通过重写属性，可设置此属性的值。 有关信息，请参阅以下主题:-[如何︰ 应用 ASP.NET 主题](~/add/includes/ajax-current-ext-md.md)      -   [如何︰ 以编程方式应用 ASP.NET 主题](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "在页面生命周期的初期应用于页面主题的名称。"
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已尝试设置 StyleSheetTheme 属性后的<xref:System.Web.UI.Page.FrameworkInitialize*>调用了方法。</xref:System.Web.UI.Page.FrameworkInitialize*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme 设置为无效的主题名称。 时，将引发此异常<xref:System.Web.UI.Page.FrameworkInitialize*>方法，不是由调用属性 setter。</xref:System.Web.UI.Page.FrameworkInitialize*>"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置页面主题的名称。"
  remarks: "主题属性设置的页使用的主题的名称。 如果你想要优先于主题中的设置页上的设置，使用<xref:System.Web.UI.Page.StyleSheetTheme%2A>属性。</xref:System.Web.UI.Page.StyleSheetTheme%2A> 有关详细信息，请参阅[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。       主题属性必须之前设置<xref:System.Web.UI.Page.PreInit>事件; 设置后的主题属性<xref:System.Web.UI.Page.PreInit>事件将导致<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit>       作为应用程序或全局主题必须存在指定的主题。 如果主题不存在，<xref:System.Web.HttpException>引发异常。</xref:System.Web.HttpException>"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "页面主题的名称。"
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试设置后的主题<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>已发生事件。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "主题设置为无效的主题名称。"
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置页的标题。"
  remarks: "使用 Title 属性在发送到请求的浏览器的 HTML 标头中设置页面标题。      1> [!NOTE]&1;> 页面中必须包含`head`具有属性的元素`runat=&quot;server&quot;`，否则标题将不会呈现。"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "页的标题。"
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Title 属性需要页上的标头控件。"
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.TraceContext&quot;></xref>当前 Web 请求的对象。"
  remarks: "跟踪跟踪，并显示有关 Web 请求的执行详细信息。 无法在呈现的页面中显示的跟踪数据，必须启用页面或应用程序级别的跟踪。       默认情况下，在页面上的跟踪功能被禁用。 若要启用页跟踪，使用指令`<% @ Page trace=&quot;true&quot; %>`。 若要启用整个应用程序的跟踪，必须在应用程序的配置文件中，Web.config 文件中，驻留在应用程序的根目录下启用它。 有关详细信息，请参阅[ASP.NET 跟踪概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "从数据<xref href=&quot;System.Web.TraceContext&quot;></xref>当前 Web 请求的对象。"
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置一个值，该值指示是否为启用跟踪<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`Trace`属性设为`true`的指令的.aspx 文件中。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果页; 启用了跟踪否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置中的跟踪语句页面显示的模式。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`TraceMode`的指令的.aspx 文件中的属性。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "之一<xref href=&quot;System.Web.TraceMode&quot;></xref>枚举成员。"
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置页支持事务的级别。"
  remarks: "在大多数情况下，不要在代码中设置此属性。 设置`Transaction`的指令的.aspx 文件中的属性。 当请求页时，动态生成的类来设置属性。"
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "一个整数，表示之一<xref href=&quot;System.EnterpriseServices.TransactionOption&quot;></xref>枚举成员。"
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "要添加。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "设置的用户界面 (UI) ID <xref href=&quot;System.Threading.Thread&quot;> </xref>与页关联的对象。"
  remarks: "此属性是快捷方式<xref:System.Threading.Thread.CurrentThread%2A>属性。</xref:System.Threading.Thread.CurrentThread%2A> 区域性是正在执行的线程集的一个属性`UICulture`的指令的.aspx 文件中的属性。 当请求页时，动态生成的类将设置此属性的值。 此外，还显式设置中的 UICulture 属性的值的 Web.config 文件。"
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "UI id。"
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取独特的后缀将追加到缓存的浏览器的文件路径。"
  remarks: "UniqueFilePathSuffix 属性返回到的文件路径时所需的缓存浏览器末尾追加的字符串。 此字符串用来标识与特定请求相关联的文件路径。"
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "独特的后缀追加到的文件路径。 默认值是&quot;__ufps =&quot;外加一个唯一的 6 位数字。"
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，指示客户端验证是否使用非介入式 JavaScript。"
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用非介入式 JavaScript，则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "停止指定的控件的控件状态的持久性。"
  remarks: "使用控件状态的自定义服务器控件必须调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>对每个请求之前保存的状态。</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 控件状态的注册将不会从请求到请求在回发期间。 使用 UnregisterRequiresControlState 方法来确保控件状态不会持久保存的不再需要保留的回发的控件。       在内部，会调用 UnregisterRequiresControlState 方法，使用时<xref:System.Web.UI.Control.RemovedControl%2A>方法以从控件集合中移除的控件。</xref:System.Web.UI.Control.RemovedControl%2A>"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>为其停止的控件状态持久性。"
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "要添加。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "要添加。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "要添加。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取有关发出页面请求的用户的信息。"
  remarks: "<xref:System.Security.Principal.IPrincipal>对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</xref:System.Security.Principal.IPrincipal>       此属性使用<xref:System.Web.HttpContext>对象的<xref:System.Web.HttpContext.User%2A>属性以确定请求的来源位置。</xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext>"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>表示发出页面请求的用户。</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示以验证其分配的信息的页上包括任何验证控件。"
  remarks: "当用户单击具有所有 ASP.NET 服务器控件时，会调用此方法`CausesValidation`属性设置为`true`，这是默认设置。 其中包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 服务器控件<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 服务器控件和控件，可以自动发布回服务器如<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控件。</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       若要禁用的任何页面上的按钮控件的验证，设置按钮控件的`CausesValidation`属性`false`。       当调用此方法时，它将循环中包含的验证控件<xref:System.Web.UI.ValidatorCollection>与关联的对象<xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>属性并调用当前的验证组中每个验证控件的验证逻辑。</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> </xref:System.Web.UI.ValidatorCollection> 验证组取决于发布到服务器页的控件。 如果未验证指定组，然后使用没有验证组。      1> [!NOTE]&1;> 页验证的行为已更改。 在[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]，控件不再调用验证方法; 它们使用<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>方法相反。</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> 如果使用上的 Validate 方法[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]页上，验证组将被忽略，并且所有控件进行都验证。"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示指定的验证组以验证其分配的信息中的验证控件。"
  remarks: "当用户单击具有所有 ASP.NET 服务器控件时，会调用此方法`CausesValidation`属性设置为`true`，这是默认设置。 其中包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 服务器控件<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 服务器控件和控件，可以自动发布回服务器如<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控件。</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       若要禁用的任何页面上的按钮控件的验证，设置按钮控件的`CausesValidation`属性`false`。       Validate 方法验证指定的验证组。 在验证组中，调用验证方法后<xref:System.Web.UI.Page.IsValid%2A>方法将返回`true`仅当指定的验证组和引发页后，可以发布到服务器的控件的验证组是否有效。</xref:System.Web.UI.Page.IsValid%2A>"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "要验证的控件的验证组名称。"
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否页上会检查客户端从浏览器的潜在危险值的输入。"
  remarks: "值<xref:System.Web.UI.ValidateRequestMode>中不使用<xref:System.Web.UI.Page>类，因为没有任何继承自。</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidateRequestMode>"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "一个值，该值指示网页是否检查客户端输入。 默认值是<xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>。"
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取包含请求的页上的所有验证控件的集合。"
  remarks: "你可以使用此属性来操作的方法和属性<xref:System.Web.UI.ValidatorCollection>关联与当前对象<xref:System.Web.UI.Page>实例。</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidatorCollection> 此集合包含页中包含的所有验证服务器控件。       调用<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>方法会导致执行当前的验证组中每个验证服务器控件的验证逻辑。</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 如果未通过的任何这些控件，<xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>属性返回`false`。</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       验证控件的详细信息，请参阅[ASP.NET 验证控件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "验证控件的集合。"
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确认<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>指定 ASP.NET 服务器控件在运行时中时呈现控件。"
  remarks: "所需内的控件`<form runat=server>`标记可以调用此方法之前及其呈现，以便是否它们位于外部标记显示错误消息。 控件的回发或依赖于已注册的脚本块应调用此方法的重写中<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>方法。</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> 具有不同的方式呈现服务器窗体元素的页可以重写此方法引发在不同条件下的异常。       如果没有包含在服务器控件的回发或使用客户端脚本将不起<xref:System.Web.UI.HtmlControls.HtmlForm>服务器控件 (`form runat=&quot;server&quot;>`) 标记。</xref:System.Web.UI.HtmlControls.HtmlForm> 在呈现时没有包含在提供明确的错误消息时，这些控件可以调用此方法<xref:System.Web.UI.HtmlControls.HtmlForm>控件。</xref:System.Web.UI.HtmlControls.HtmlForm>       当你开发的自定义服务器控件时，很常见，才能调用此方法重写时`Render`任何类型的输入标记的方法。 这一点特别重要，如果输入的控件调用<xref:System.Web.UI.Page.GetPostBackEventReference%2A>，或如果它会发出客户端脚本。</xref:System.Web.UI.Page.GetPostBackEventReference%2A> 复合服务器控件不需要进行此调用。"
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ASP.NET 服务器控件中所需<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>控件。"
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "指定的服务器控件不包含开始标记和结束标记之间<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>在运行时的服务器控件。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "要验证的控件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置的视图状态加密运算模式。"
  remarks: "不能在代码中设置 ViewStateEncryptionMode 属性。 它只能设置在指令中或在< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> 在指令的替代中的值设置，在配置文件中设置任何值。       在指令中设置此属性的语法如下︰ ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ```用于在配置文件中设置此属性的语法如下︰ ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ```自定义控件开发人员可能想要在保存潜在的敏感数据，若要在其控件中查看状态之前检查代码中的此属性的值。            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "之一<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>。"
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "设置的值不是成员的<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref>枚举。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "仅在或页之前，可以设置 ViewStateEncryptionMode 属性<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>阶段在页生命周期中。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将标识符分配给单个用户的当前页关联的视图状态变量中。"
  remarks: "设置 ViewStateUserKey 属性可帮助你防止对你的应用程序免受恶意用户的攻击。 通过允许你将标识符分配给单个用户的视图状态变量，以便它们不能使用变量来生成攻击执行此操作。 有关 Web 攻击和有关你可以执行哪些操作来帮助防止它们的详细信息，请参阅[需要利用的 ASP.NET 内置功能受到保护，这一点 Web 攻击](http://go.microsoft.com/fwlink/?LinkId=163557)。       你可以为任何字符串值，设置此属性，如对用户的身份验证名称或<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>      1> [!NOTE]&1;> 必须设置此属性在`Page_Init`的页处理阶段。 设置此属性在`Page_Load`阶段将引发异常。"
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "单个用户的标识符。"
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已在页处理期间太迟访问 ViewStateUserKey 属性。"
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.Page&quot;></xref>呈现对象。"
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.Page&quot;></xref>是呈现; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
