### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationCollectionAttribute
  id: ConfigurationCollectionAttribute
  children:
  - System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  - System.Configuration.ConfigurationCollectionAttribute.AddItemName
  - System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  - System.Configuration.ConfigurationCollectionAttribute.CollectionType
  - System.Configuration.ConfigurationCollectionAttribute.ItemType
  - System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  langs:
  - csharp
  name: ConfigurationCollectionAttribute
  nameWithType: ConfigurationCollectionAttribute
  fullName: System.Configuration.ConfigurationCollectionAttribute
  type: Class
  summary: "以声明方式指示的.NET framework 框架来创建配置元素集合的实例。 此类不能被继承。"
  remarks: "你使用 ConfigurationCollectionAttribute 特性修饰<xref:System.Configuration.ConfigurationElementCollection>元素。</xref:System.Configuration.ConfigurationElementCollection> 这会指示.NET Framework 来创建集合的实例并使用您的自定义将其初始化<xref:System.Configuration.ConfigurationElement>值。</xref:System.Configuration.ConfigurationElement>      1> [!NOTE]&1;> 创建自定义配置元素的最简单方法是使用特性化 （声明性） 模型。 声明元素，并使用 ConfigurationCollectionAttribute 属性修饰它们。 使用此特性标记每个元素，.NET Framework 使用反射读取装饰参数以及创建相关<xref:System.Configuration.ConfigurationElementCollection>实例。</xref:System.Configuration.ConfigurationElementCollection> 你还可以使用的编程模型。 在这种情况下你要负责声明自定义的公共集合，但还能重写<xref:System.Configuration.ConfigurationElementCollection>成员并返回属性集合。</xref:System.Configuration.ConfigurationElementCollection>       .NET Framework 配置系统提供的自定义配置元素的创建过程中可以使用的属性类型。 有两种类型的属性:-指示.NET Framework 如何创建实例的自定义配置元素属性的属性。 这些类型包括:-ConfigurationCollectionAttribute- <xref:System.Configuration.ConfigurationPropertyAttribute>-指示.NET Framework 如何验证自定义配置元素属性的属性。</xref:System.Configuration.ConfigurationPropertyAttribute> These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.StringValidatorAttribute></xref:System.Configuration.RegexStringValidatorAttribute></xref:System.Configuration.LongValidatorAttribute></xref:System.Configuration.IntegerValidatorAttribute>"
  example:
  - "The following example shows how to use the ConfigurationCollectionAttribute.  \n  \n This example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the ConfigurationCollectionAttribute to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class). When you run the example, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n            <remove name=\"Contoso\" />  \n            <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"0\" />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_7_1.vb)]  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#31](~/add/codesnippet/csharp/t-system.configuration.c_7_2.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#31](~/add/codesnippet/visualbasic/t-system.configuration.c_7_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class ConfigurationCollectionAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ConfigurationCollectionAttribute(Type)
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  fullName: System.Configuration.ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;></xref>类。"
  remarks: "使用此构造函数无法识别要创建的属性集合的自定义类型的.NET Framework。"
  example:
  - "The following example shows how to use the ConfigurationCollectionAttribute.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/m-system.configuration.c_25_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/m-system.configuration.c_25_1.vb)]"
  syntax:
    content: public ConfigurationCollectionAttribute (Type itemType);
    parameters:
    - id: itemType
      type: System.Type
      description: "要创建的属性集合的类型。"
  overload: System.Configuration.ConfigurationCollectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>itemType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  id: AddItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref uid=&quot;langword_csharp_&lt;add&gt;&quot; name=&quot;&lt;add&gt;&quot; href=&quot;&quot;></xref>配置元素。"
  remarks: "AddItemName 属性，可将其他名称分配给的配置元素。 例如，可以使用`addUrl`而不是&quot;添加&quot;。"
  example:
  - "The following example shows how to use the AddItemName property.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_47_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_47_1.vb)]"
  syntax:
    content: public string AddItemName { get; set; }
    return:
      type: System.String
      description: "使用标准名称替换的名称&quot;添加&quot;配置项目。"
  overload: System.Configuration.ConfigurationCollectionAttribute.AddItemName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  id: ClearItemsName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
  fullName: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;></xref>配置元素。"
  remarks: "ClearItemsName 属性允许您分配到不同的名称`<clear>`配置元素。 例如，可以使用`clearUrls`而不是&quot;清除&quot;。"
  example:
  - "The following example shows how to use the ClearItemsName.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_18_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_18_1.vb)]"
  syntax:
    content: public string ClearItemsName { get; set; }
    return:
      type: System.String
      description: "将替换标准名称的名称&quot;清除&quot;为配置项目。"
  overload: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
  fullName: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的一种<xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;></xref>属性。"
  syntax:
    content: public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "一种<xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;> </xref>。"
  overload: System.Configuration.ConfigurationCollectionAttribute.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType
  id: ItemType
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
  fullName: System.Configuration.ConfigurationCollectionAttribute.ItemType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取集合元素的类型。"
  remarks: "ItemType 属性用于通过反射获取的配置元素类型。"
  syntax:
    content: public Type ItemType { get; }
    return:
      type: System.Type
      description: "集合元素的类型。"
  overload: System.Configuration.ConfigurationCollectionAttribute.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  id: RemoveItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置的名称<xref uid=&quot;langword_csharp_&lt;remove&gt;&quot; name=&quot;&lt;remove&gt;&quot; href=&quot;&quot;></xref>配置元素。"
  remarks: "RemoveItemName 属性允许您分配到不同的名称`<remove>`配置元素。 例如，可以使用`removeUrl`而不是&quot;删除&quot;。"
  example:
  - "The following example shows how to use the RemoveItemName property.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_41_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_41_1.vb)]"
  syntax:
    content: public string RemoveItemName { get; set; }
    return:
      type: System.String
      description: "将替换标准名称的名称&quot;取消&quot;的配置元素。"
  overload: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ConfigurationCollectionAttribute(Type)
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  fullName: System.Configuration.ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.AddItemName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
  fullName: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
  fullName: System.Configuration.ConfigurationCollectionAttribute.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
  fullName: System.Configuration.ConfigurationCollectionAttribute.ItemType
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ConfigurationCollectionAttribute
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
