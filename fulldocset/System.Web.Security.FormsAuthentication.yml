### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "管理 Web 应用程序的窗体身份验证服务。 此类不能被继承。"
  remarks: "窗体身份验证使用户和密码验证的 Web 应用程序不需要 Windows 身份验证。 使用窗体身份验证，用户信息存储在外部数据源，如<xref:System.Web.Security.Membership>数据库，或应用程序的配置文件中。</xref:System.Web.Security.Membership> 一旦用户进行身份验证，窗体身份验证都维护在 cookie 或 URL 中的身份验证票证，以便经过身份验证的用户不需要提供与每个请求的凭据。       通过设置启用 forms 身份验证`mode`到的配置元素的属性`Forms`。 你可以要求对应用程序的所有请求使用的配置元素为拒绝该任何的请求未知的用户，如下面的示例中所示都包含有效的用户身份验证票证。      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```在前面的示例中，应用程序的一部分的 ASP.NET 页的任何请求需要由窗体身份验证提供有效的用户名称。 如果用户名不存在，则该请求重定向到配置<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       FormsAuthentication 类提供给方法和属性可以在对用户进行身份验证的应用程序中使用的访问。 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法将浏览器重定向到已配置<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>以便用户可以登录到应用程序。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法将返回到请求的原始受保护 URL 或<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>身份验证的用户重定向</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 也有必要使你能够管理窗体身份验证票证的方法。"
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化的新实例<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>类。"
  remarks: "此构造函数不应在代码中使用。"
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "验证用户名和密码与应用程序的配置文件中存储的凭据。"
  remarks: "身份验证方法验证应用程序配置文件的部分中存储的用户凭据。 或者，可以使用 ASP.NET 成员身份来存储用户凭据和调用<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>以验证凭据。</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 有关详细信息，请参阅[使用成员资格管理用户](~/add/includes/ajax-current-ext-md.md)。       为了提高安全性，你可以对密码进行加密存储在应用程序的配置文件，通过使用<xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>方法。</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "用户名。"
    - id: password
      type: System.String
      description: "用户的密码。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户名和密码有效，则为否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取窗体身份验证 cookie 的域的值。"
  remarks: "使用 ASP.NET 应用程序配置文件中设置 CookieDomain 属性值`domain`配置元素的属性。 CookieDomain 属性值确定的<xref:System.Web.HttpCookie.Domain%2A>cookie 将使用的为</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "<xref:System.Web.HttpCookie.Domain*>窗体身份验证 cookie。</xref:System.Web.HttpCookie.Domain*> 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否为无 cookie 窗体身份验证配置应用程序。"
  remarks: "CookieMode 属性反映的值`cookieless`配置元素的属性。 CookieMode 属性确定是否<xref:System.Web.Security.FormsAuthenticationTicket>将存储在浏览器中的会话 cookie 值，或将其存储在<xref:System.Web.HttpRequest.QueryString%2A>属性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      1> [!NOTE]&1;> 时<xref:System.Web.Security.FormsAuthenticationTicket>值存储在 URI 中，生成的 URI 的长度可能超过允许的最大长度。</xref:System.Web.Security.FormsAuthenticationTicket> 这是最有可能发生时<xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>属性设置为应用程序名称和应用程序名称太长 （40 或多个字符），当用户在应用程序名称时较长，或者长<xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>字符串存储在<xref:System.Web.Security.FormsAuthenticationTicket>值。</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> 如果生成的 URI 是太长，则 Web 服务器将返回`400 - Bad Request`错误。"
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "之一<xref href=&quot;System.Web.HttpCookieMode&quot;></xref>值，该值指示是否为无 cookie 窗体身份验证配置应用程序。 默认值是<xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否将应用程序配置为支持无 cookie 窗体身份验证。"
  remarks: "CookiesSupported 属性返回一个值基于<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>值和浏览器的功能。</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>属性设置为<xref:System.Web.HttpCookieMode>，CookiesSupported 属性将返回`true`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>属性设置为<xref:System.Web.HttpCookieMode>，CookiesSupported 属性将返回`false`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>属性设置为<xref:System.Web.HttpCookieMode>，CookiesSupported 属性将返回`true`如果浏览器支持 cookie，并且已启用 cookie; 否则，将返回 CookiesSupported 属性`false`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>属性设置为<xref:System.Web.HttpCookieMode>，CookiesSupported 属性将返回`true`如果<xref:System.Web.HttpRequest.Browser%2A>当前<xref:System.Web.HttpContext.Request%2A>支持 cookie 和重定向使用 cookie; 否则，CookiesSupported 属性将返回`false`。</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果应用程序配置为支持无 cookie 窗体身份验证;否则为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref>对象基于传递给方法的加密的窗体身份验证票证。"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "加密的身份验证票证。"
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. 如果<code> encryptedTicket </code>参数不是有效的票证， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>返回。"
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取的 URL <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref>类将重定向到如果不指定 URL 的重定向。"
  remarks: "使用 ASP.NET 应用程序配置文件中设置 DefaultUrl 属性值`defaultUrl`配置元素的属性。 使用 DefaultUrl 属性<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>如果请求中包含不返回 URL 的方法。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 同样，<xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>方法将返回 DefaultUrl 如果请求中包含不返回 URL。</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "URL 的<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>类将重定向到如果不指定 URL 的重定向。 默认值是&quot;default.aspx&quot;。"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否已经过身份验证的用户可以将重定向到 Url 中其他 Web 应用程序。"
  remarks: "使用设置 EnableCrossAppRedirects 属性值`enableCrossAppRedirects`配置元素的属性。       中选中 EnableCrossAppRedirects 属性<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法时重定向 URL 未指向当前应用程序中的页。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 如果 EnableCrossAppRedirects `true`，然后执行重定向; 如果 EnableCrossAppRedirects `false`，将浏览器重定向到中定义的页<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      1> [!NOTE]&1;> 时跨应用程序执行重定向页面，你必须确保内经过身份验证的应用程序重复的配置元素中的特定属性。 有关详细信息及示例，请参阅[跨应用程序的窗体身份验证](~/add/includes/ajax-current-ext-md.md)。      1> [!IMPORTANT]&1;> 允许跨应用程序重定向，你的站点时，容易遭受攻击来将用户定向到恶意网站，但为您的网站使用的登录页。 始终验证重定向 URL 返回<xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>方法是希望，以便你可以确保你允许重定向仅到已批准的网站的 URL。</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> 你还必须验证重定向 URL，使用适当的协议 （HTTP 或 HTTPS）。 若要执行这些验证，可以将一个回发事件处理程序添加到您的登录页，也可以添加的处理程序<xref:System.Web.UI.WebControls.Login.LoggedIn>事件<xref:System.Web.UI.WebControls.Login>控件。</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果经过身份验证的用户可以重定向到 Url 中其他 Web 应用程序中;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "启用窗体身份验证。"
  remarks: "如果<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性是`null`，属性设置为默认 URL 值从`configurationData`参数。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>属性是`null`，，将属性设置为从登录 URL 值`configurationData`参数。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "包含&quot;defaultUrl&quot;和/或&quot;登录 Url&quot;的值的名称 / 值集合。 参数可以为没有默认 URL 或登录 URL 的值的情况下为 null。"
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在开始前初始化阶段不是应用程序。"
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建包含适合在 HTTP cookie 中使用的加密的窗体身份验证票证的字符串。"
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>用来创建加密的窗体身份验证票证的对象。"
    return:
      type: System.String
      description: "包含加密的窗体身份验证票证的字符串。"
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取用于存储窗体身份验证票证的 cookie 的名称。"
  remarks: "使用 ASP.NET 应用程序配置文件中设置 FormsCookieName 属性值`name`配置元素的属性。 FormsCookieName 用于引用将存储的 cookie<xref:System.Web.Security.FormsAuthenticationTicket>信息。</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "用于存储窗体身份验证票证的 cookie 名称。 默认值是&quot;。ASPXAUTH&quot;。"
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取窗体身份验证 cookie 的路径。"
  remarks: "ASP.NET 应用程序中使用的配置文件中设置了 FormsCookiePath 属性值`path`配置元素的属性。 FormsCookiePath 指定<xref:System.Web.HttpCookie.Path%2A>的 cookie 存储<xref:System.Web.Security.FormsAuthenticationTicket>信息。</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "其中存储表单身份验证票证信息的 cookie 的路径。 默认值是&quot;/&quot;。"
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建给定的用户名的身份验证 cookie。 这不，以便应用程序可以具有更好地控制颁发 cookie 的方式的传出响应的一部分设置 cookie。"
  remarks: "Cookie 的路径由<xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>属性。</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户的名称。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建一个持久的 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> ，包含加密的窗体身份验证票证的信息。 默认值为<xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>使用属性。</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建给定的用户名的身份验证 cookie。 这不作为传出响应的一部分设置 cookie。"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户的名称。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建一个持久的 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "<xref:System.Web.HttpCookie.Path*>身份验证 cookie。</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> ，包含加密的窗体身份验证票证的信息。"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "返回原始请求导致重定向到登录页的重定向 URL。"
  remarks: "你可以使用此方法，当你想要在而不是使用应用程序代码中执行重定向<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       GetRedirectUrl 方法返回在查询字符串中使用指定的 URL`ReturnURL`变量名称。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，GetRedirectUrl 方法返回的返回 URL `caller.aspx`。 如果`ReturnURL`变量不存在，则 GetRedirectUrl 方法返回中的 URL<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       将浏览器重定向到登录页时，ASP.NET 会自动添加的返回 URL。       默认情况下，`ReturnUrl`变量必须引用某页在当前应用程序中。 如果`ReturnUrl`不同的服务器的 GetRedirectUrl 方法返回的 URL 中的页上或不同的应用程序是指<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果你想要允许使用返回的 URL 来指代当前应用程序之外的网页，则必须设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`使用`enableCrossAppRedirects`配置元素的属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      1> [!IMPORTANT]&1;> 设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`以允许跨应用程序重定向是一个潜在的安全威胁。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 有关详细信息，请参阅<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户的名称。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "忽略此参数。"
    return:
      type: System.String
      description: "一个字符串，包含重定向 URL。"
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "生成适用于基于指定的密码和哈希算法的配置文件中存储的哈希密码。"
  remarks: "HashPasswordForStoringInConfigFile 方法创建一个经过哈希处理的密码值，将窗体身份验证凭据存储在应用程序的配置文件时，可以使用。       使用存储在应用程序配置文件的身份验证凭据<xref:System.Web.Security.FormsAuthentication.Authenticate%2A>方法以验证的应用程序的用户的密码。</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> 或者，可以使用 ASP.NET 成员资格来存储用户凭据。 有关详细信息，请参阅[使用成员资格管理用户](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "哈希处理密码。"
    - id: passwordFormat
      type: System.String
      description: "要使用的哈希算法。 `passwordFormat`是<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>表示之一<xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;></xref>枚举值。"
    return:
      type: System.String
      description: "经过哈希处理的密码。"
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>不是有效<xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>根据应用程序的配置设置的对象。"
  remarks: "Initialize 方法调用时<xref:System.Web.Security.FormsAuthenticationModule>创建的<xref:System.Web.Security.FormsAuthentication>类</xref:System.Web.Security.FormsAuthentication>实例</xref:System.Web.Security.FormsAuthenticationModule> 此方法不应在代码中调用。"
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否启用表单身份验证。"
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了窗体身份验证;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取的 URL 的登录页<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>类将重定向到。"
  remarks: "使用 ASP.NET 应用程序配置文件中设置的登录 Url 属性值`loginUrl`配置元素的属性。 LoginUrl 由<xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法。</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "该登录名的 URL 页面<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>类将重定向到。 默认值为&quot;login.aspx。&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "经过身份验证的用户重定向回最初请求的 URL 或默认 URL。"
  remarks: "RedirectFromLoginPage 方法将重定向到在查询字符串中使用指定的 URL`ReturnURL`变量名称。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，RedirectFromLoginPage 方法的重定向到返回 URL `caller.aspx`。 如果`ReturnURL`变量不存在，则 RedirectFromLoginPage 方法将重定向到中的 URL<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       将浏览器重定向到登录页时，ASP.NET 会自动添加的返回 URL。       默认情况下，`ReturnUrl`变量必须引用某页在当前应用程序中。 如果`ReturnUrl`引用在不同的应用程序或不同的服务器，RedirectFromLoginPage 方法上的页面重定向到中的 URL<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果你想要允许重定向到当前应用程序之外的网页，则必须设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`使用`enableCrossAppRedirects`配置元素的属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      1> [!IMPORTANT]&1;> 设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`以允许跨应用程序重定向是一个潜在的安全威胁。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 有关详细信息，请参阅<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>属性是`true`，并且`ReturnUrl`变量位于当前应用程序或<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性是`true`，然后 RedirectFromLoginPage 方法发出的身份验证票证，并将其放在默认 cookie 中使用<xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>方法。</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`和重定向路径为当前应用程序中的 URL，该票证颁发重定向 URL 的一部分。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>是`true`，和重定向 URL 不是指某页在当前应用程序中，RedirectFromLoginPage 方法发出身份验证票证，并将其放入<xref:System.Web.HttpRequest.QueryString%2A>属性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户名。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建一个持久的 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: '查询字符串中指定的返回 URL 包含除 HTTP 之外的协议︰ 或 HTTPS:。'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "经过身份验证的用户重定向回最初请求的 URL 或指定的 cookie 路径用于窗体身份验证 cookie 的默认 URL。"
  remarks: "RedirectFromLoginPage 方法将重定向到在查询字符串中使用指定的返回 URL`ReturnURL`变量名称。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，RedirectFromLoginPage 方法的重定向到返回 URL `caller.aspx`。 如果`ReturnURL`变量不存在，则 RedirectFromLoginPage 方法将重定向到中的 URL<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       将浏览器重定向到登录页时，ASP.NET 会自动添加的返回 URL。       默认情况下，`ReturnUrl`变量必须引用某页在当前应用程序中。 如果`ReturnUrl`指的是在不同的应用程序中或在不同服务器上，方法将重定向到中的 URL RedirectFromLoginPage 的页面<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>属性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果你想要允许重定向到当前应用程序之外的网页，则必须设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`使用`enableCrossAppRedirects`配置元素的属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      1> [!IMPORTANT]&1;> 设置<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性`true`以允许跨应用程序重定向是一个潜在的安全威胁。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 有关详细信息，请参阅<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>属性是`true`，并且`ReturnUrl`变量位于当前应用程序或<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>属性是`true`，然后 RedirectFromLoginPage 方法发出身份验证票证，并将其放在指定的 cookie`strCookiePath`参数使用<xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>方法。</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`和重定向路径为当前应用程序中的 URL，该票证颁发重定向 URL 的一部分。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>是`true`，和重定向 URL 不是指某页在当前应用程序中，RedirectFromLoginPage 方法发出身份验证票证，并将其放入<xref:System.Web.HttpRequest.QueryString%2A>属性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户名。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建一个持久的 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "窗体身份验证票证的 cookie 路径。"
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: '查询字符串中指定的返回 URL 包含除 HTTP 之外的协议︰ 或 HTTPS:。'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将浏览器重定向到登录 URL。"
  remarks: "RedirectToLoginPage 方法将浏览器重定向到<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       RedirectToLoginPage 方法并不会清除窗体身份验证 cookie。 你可以使用 RedirectToLoginPage 方法结合<xref:System.Web.Security.FormsAuthentication.SignOut%2A>方法日志出的一个用户，并允许不同用户登录。</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将浏览器重定向到登录 URL 与指定的查询字符串。"
  remarks: "RedirectToLoginPage 方法重定向到浏览器<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>并包括`extraQueryString`值作为<xref:System.Management.ManagementQuery.QueryString%2A>重定向 url。</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       RedirectToLoginPage 方法并不会清除窗体身份验证 cookie。 你可以使用 RedirectToLoginPage 方法结合<xref:System.Web.Security.FormsAuthentication.SignOut%2A>方法日志出的一个用户，并允许不同用户登录。</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "要包括在重定向 URL 查询字符串。"
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "有条件地更新颁发日期和时间和到期日期和时间<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>。"
  remarks: "RenewTicketIfOld 方法将更新的到期日期和时间所提供的<xref:System.Web.Security.FormsAuthenticationTicket>如果当前日期和时间减去<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>值是否大于<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>值的当前日期和时间减去。</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       使用更新的票证<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>属性设置为当前日期和时间与<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>属性设置为当前日期和时间加上原始<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>值减去原始<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>值。</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "若要更新的窗体身份验证票证。"
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "已更新<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示窗体身份验证 cookie 是否需要 SSL 以便返回到服务器。"
  remarks: "使用 ASP.NET 应用程序配置文件中设置的 RequireSSL 属性值`requireSSL`配置元素的属性。 你可以在 Web.config 文件中为指定 ASP.NET 应用程序是否需要 SSL （安全套接字层） 来返回到服务器的窗体身份验证 cookie，通过设置`requireSSL`属性。 有关详细信息，请参阅<xref:System.Web.HttpCookie.Secure%2A>。</xref:System.Web.HttpCookie.Secure%2A>       如果你配置建议，`requireSSL`作为`false`，还配置`slidingExpiration`作为`false`，从而缩短票证的有效时间量。"
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果需要返回到服务器; 在窗体身份验证 cookie SSL否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建提供的用户名的验证票证，并将其添加到响应 cookie 集合或 URL 如果你使用的无 cookie 的身份验证。"
  remarks: "SetAuthCookie 方法将添加窗体身份验证票证的 cookie 集合到或 URL 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 窗体身份验证票证提供到下一步所做的浏览器的请求的窗体身份验证信息。 使用窗体身份验证，你可以使用 SetAuthCookie 方法，当你想要对用户进行身份验证，但仍保留使用重定向对导航的控制。"
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户的名称。 这没有映射到 Windows 帐户。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建的持久性 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建提供的用户名的验证票证，并将其添加到的响应，使用提供的 cookie 的路径，或使用 URL，如果你使用的无 cookie 的身份验证的 cookie 集合。"
  remarks: "SetAuthCookie 方法︰ 将窗体身份验证票证添加 cookie 集合或 URL，如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 窗体身份验证票证提供到下一步所做的浏览器的请求的窗体身份验证信息。 使用窗体身份验证，你可以使用 SetAuthCookie 方法，当你想要对用户进行身份验证，但仍保留使用重定向对导航的控制。"
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "经过身份验证的用户的名称。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建一个持久的 cookie （一种跨浏览器会话保存）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "窗体身份验证票证的 cookie 路径。"
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从浏览器中移除的窗体身份验证票证。"
  remarks: "注销方法的窗体身份验证票证信息如果从中删除 cookie 或 URL<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 你可以使用 SignOut 方法结合<xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法日志出的一个用户，并允许不同用户登录。</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       如果无 cookie 模式，以独占方式运行，或如果支持经过身份验证和匿名用户，你应显式控制重定向到登录页，如果需要特殊的业务逻辑，若要移除的匿名标识符后执行。       当调用 SignOut 方法时，通过调用来发出重定向到应用程序的登录页<xref:System.Web.HttpResponse.Redirect%2A>方法替换`endResponse`参数设置为`false`。</xref:System.Web.HttpResponse.Redirect%2A> 重定向不进行直到当前页已完成执行，以便可以运行附加代码。 如果代码不包含的显式重定向到另一页，则会将用户重定向到应用程序的配置文件中配置的登录页。       调用 SignOut 方法只会删除窗体身份验证 cookie。 Web 服务器不存储有效和过期的身份验证票证以便更高版本的比较。 这使得您的网站很容易遭受重播攻击，如果恶意用户获得有效的窗体身份验证 cookie。 为了提高安全性，使用窗体身份验证 cookie 时，你应执行以下操作:-用于窗体的身份验证 cookie 设置绝对过期<xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>属性`false`。</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> 这就限制了可以在其中重播被劫持的 cookie 窗口。      -仅发布和接受身份验证 cookie，请通过安全套接字层 (SSL)，通过设置<xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>属性`true`以及通过运行整个网站在 SSL 下。</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> 设置<xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>属性`true`可确保，ASP.NET 会永远不会将身份验证 cookie 发送到浏览器通过非 SSL 连接; 但是，客户端可能不接受该 cookie 的安全设置。</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> 这意味着客户端可能发送的窗体身份验证 cookie 通过非 SSL 连接，从而使易受到劫持。 你可以防止客户端通过运行在 SSL 下整个网站以明文发送的窗体身份验证 cookie。      -使用持久存储在服务器上记录当用户注销该网站，然后再使用应用程序事件如<xref:System.Web.HttpApplication.PostAuthenticateRequest>事件，以确定是否当前的用户进行身份验证通过 forms 身份验证。</xref:System.Web.HttpApplication.PostAuthenticateRequest> 如果用户进行身份验证通过 forms 身份验证，并且如果持久存储中的信息指示用户已注销，立即清除身份验证 cookie，并将浏览器重定向回登录页。 成功登录后，更新存储以反映用户已登录。 当你使用此方法时，你的应用程序必须跟踪的用户的登录状态，并必须强制空闲用户注销。"
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否启用相对过期机制。"
  remarks: "使用设置 SlidingExpiration 属性值`slidingExpiration`配置元素的属性。       相对过期机制重置为有效的身份验证 cookie 的到期时间，如果发出请求，并且有超过一半的超时间隔已过。 如果 cookie 已过期，用户必须重新进行身份验证。 将 SlidingExpiration 属性设置为`false`可应用的安全性通过限制提高的身份验证 cookie 的有效，时间基于配置`timeout`值。       我们建议，如果你配置`requireSSL`作为`false`，还配置`slidingExpiration`作为`false`，从而缩短票证的有效时间量。"
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用相对过期机制，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示是否使用协调世界时 (UTC) 还是本地时间，对于票证到期日期。"
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "一个值，该值指示是否使用协调世界时 (UTC) 还是本地时间，对于票证到期日期。"
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取身份验证票证过期之前的时间量。"
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "过期之前的身份验证票证的时间量。"
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
