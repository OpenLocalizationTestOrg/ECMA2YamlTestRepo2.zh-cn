### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ApplicationQueuingAttribute
  id: ApplicationQueuingAttribute
  children:
  - System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  - System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  - System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  - System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  langs:
  - csharp
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute
  type: Class
  summary: "启用队列支持的标记的程序集，并启用应用程序从消息队列的队列读取方法调用。 此类不能被继承。"
  remarks: "ApplicationQueuingAttribute 实例的初始属性值的列表，请参阅<xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>构造函数。</xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>       有关使用属性的详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the ApplicationQueuingAttribute type.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ApplicationQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新实例<xref href=&quot;System.EnterpriseServices.ApplicationQueuingAttribute&quot;></xref>类，启用队列支持程序集和初始化<> *1>， <> </> *1>，和<xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>。</xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>"
  remarks: "下表显示<xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |`Enabled`|`true`|  |`QueueListenerEnabled`|`false`|  |`MaxListenerThreads`|zero (0)|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public ApplicationQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "获取或设置一个值，该值指示是否启用队列支持。"
  remarks: "应用程序不能为默认情况下使用排队的组件。 实例化<xref:System.EnterpriseServices.ApplicationQueuingAttribute>可让应用程序使用排队组件; 但是，不会启用应用程序以侦听来自客户端的排队消息。</xref:System.EnterpriseServices.ApplicationQueuingAttribute>"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用队列支持，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 构造函数设置的默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  id: MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "获取或设置用于从队列提取消息并激活相应组件的线程数。"
  remarks: "此属性的有效范围为 0 到 1000年。 默认值为零。 对于新创建的应用程序，设置派生自当前用于确定默认侦听器线程数的算法︰ 16 倍的 Cpu 数服务器中。       有关详细信息，请参阅`QcListenerMaxThreads`中[应用程序 （COM +）](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp)。"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]"
  syntax:
    content: public int MaxListenerThreads { get; set; }
    return:
      type: System.Int32
      description: "最大线程数以用于处理队列中接收消息。 默认值为零。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  id: QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "获取或设置一个值，该值指示应用程序是否将接受来自客户端的已排队的组件调用。"
  remarks: ''
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]"
  syntax:
    content: public bool QueueListenerEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该应用程序接受已排队的组件调用异步方法。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
