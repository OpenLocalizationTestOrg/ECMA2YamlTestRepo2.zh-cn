### YamlMime:ManagedReference
items:
- uid: System.Data.Services.Client.DataServiceStreamResponse
  id: DataServiceStreamResponse
  children:
  - System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition
  - System.Data.Services.Client.DataServiceStreamResponse.ContentType
  - System.Data.Services.Client.DataServiceStreamResponse.Dispose
  - System.Data.Services.Client.DataServiceStreamResponse.Headers
  - System.Data.Services.Client.DataServiceStreamResponse.Stream
  langs:
  - csharp
  name: DataServiceStreamResponse
  nameWithType: DataServiceStreamResponse
  fullName: System.Data.Services.Client.DataServiceStreamResponse
  type: Class
  summary: "表示来自响应[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]，包含以流的形式的二进制数据。"
  syntax:
    content: 'public sealed class DataServiceStreamResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition
  id: ContentDisposition
  parent: System.Data.Services.Client.DataServiceStreamResponse
  langs:
  - csharp
  name: ContentDisposition
  nameWithType: DataServiceStreamResponse.ContentDisposition
  fullName: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取<xref uid=&quot;langword_csharp_Content-Disposition&quot; name=&quot;Content-Disposition&quot; href=&quot;&quot;></xref>响应流的标头字段。"
  remarks: "当`Content-Disposition`标头不在响应中，存在 ContentDisposition 属性返回`null`。"
  syntax:
    content: public string ContentDisposition { get; }
    return:
      type: System.String
      description: "内容<xref uid=&quot;langword_csharp_Content-Disposition&quot; name=&quot;Content-Disposition&quot; href=&quot;&quot;></xref>标头字段。"
  overload: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentType
  id: ContentType
  parent: System.Data.Services.Client.DataServiceStreamResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: DataServiceStreamResponse.ContentType
  fullName: System.Data.Services.Client.DataServiceStreamResponse.ContentType
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取响应流的内容类型。"
  remarks: "当`Content-Type`标头不在响应中，存在<xref:System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition%2A>属性返回`null`。</xref:System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition%2A>"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "响应流的内容类型。"
  overload: System.Data.Services.Client.DataServiceStreamResponse.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceStreamResponse.Dispose
  id: Dispose
  parent: System.Data.Services.Client.DataServiceStreamResponse
  langs:
  - csharp
  name: Dispose()
  nameWithType: DataServiceStreamResponse.Dispose()
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Dispose()
  type: Method
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "释放当前实例所使用的所有资源<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>类。"
  remarks: "使用<xref:System.Data.Services.Client.DataServiceStreamResponse>.</xref:System.Data.Services.Client.DataServiceStreamResponse>完成调用的 Dispose 方法 此释放由对象拥有的资源。 你应始终执行此操作以释放由持有的资源<xref:System.Data.Services.Client.DataServiceStreamResponse>; 否则为使用的资源不会释放垃圾回收器调用之后才<xref:System.Object.Finalize%2A>方法<xref:System.Data.Services.Client.DataServiceStreamResponse>对象。</xref:System.Data.Services.Client.DataServiceStreamResponse> </xref:System.Object.Finalize%2A> </xref:System.Data.Services.Client.DataServiceStreamResponse>       Dispose 调用方法以及对所有引用后<xref:System.Data.Services.Client.DataServiceStreamResponse>是可以发布，垃圾回收来回收使用的内存。</xref:System.Data.Services.Client.DataServiceStreamResponse>       不能使用<xref:System.Data.Services.Client.DataServiceStreamResponse>后调用的 Dispose 方法。</xref:System.Data.Services.Client.DataServiceStreamResponse>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Services.Client.DataServiceStreamResponse.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceStreamResponse.Headers
  id: Headers
  parent: System.Data.Services.Client.DataServiceStreamResponse
  langs:
  - csharp
  name: Headers
  nameWithType: DataServiceStreamResponse.Headers
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Headers
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "获取响应标头的集合。"
  remarks: "响应是<xref:System.Collections.Generic.Dictionary%602>对象，其中包含的字符串的每个标头在响应中的键 / 值对。</xref:System.Collections.Generic.Dictionary%602>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,string> Headers { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "将响应消息作为该标头集合&lt;xref:System.Collections.Generic.Dictionary%602&gt;对象。"
  overload: System.Data.Services.Client.DataServiceStreamResponse.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.DataServiceStreamResponse.Stream
  id: Stream
  parent: System.Data.Services.Client.DataServiceStreamResponse
  langs:
  - csharp
  name: Stream
  nameWithType: DataServiceStreamResponse.Stream
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Stream
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "以二进制流的形式从数据服务获取的二进制属性数据。"
  remarks: "当读取此流发生网络错误时，将引发错误。       返回<xref:System.IO.Stream>是只读的。</xref:System.IO.Stream>       必须调用任何一种<xref:System.Data.Services.Client.DataServiceStreamResponse.Dispose%2A>方法<xref:System.Data.Services.Client.DataServiceStreamResponse>或<xref:System.IO.Stream.Close%2A><xref:System.IO.Stream>.</xref:System.IO.Stream>方法</xref:System.IO.Stream.Close%2A></xref:System.Data.Services.Client.DataServiceStreamResponse></xref:System.Data.Services.Client.DataServiceStreamResponse.Dispose%2A> 否则，网络连接将保持打开状态并且不可用于其他应用程序。       <xref:System.Net.HttpWebResponse.GetResponseStream%2A>方法用于访问流。</xref:System.Net.HttpWebResponse.GetResponseStream%2A>"
  syntax:
    content: public System.IO.Stream Stream { get; }
    return:
      type: System.IO.Stream
      description: "包含二进制属性数据的流。"
  overload: System.Data.Services.Client.DataServiceStreamResponse.Stream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "当<xref href=&quot;System.Data.Services.Client.DataServiceStreamResponse&quot;></xref>已释放。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: ContentDisposition
  nameWithType: DataServiceStreamResponse.ContentDisposition
  fullName: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentType
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: ContentType
  nameWithType: DataServiceStreamResponse.ContentType
  fullName: System.Data.Services.Client.DataServiceStreamResponse.ContentType
- uid: System.Data.Services.Client.DataServiceStreamResponse.Dispose
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Dispose()
  nameWithType: DataServiceStreamResponse.Dispose()
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Dispose()
- uid: System.Data.Services.Client.DataServiceStreamResponse.Headers
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Headers
  nameWithType: DataServiceStreamResponse.Headers
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Headers
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,String>
  nameWithType: Dictionary<String,String>
  fullName: System.Collections.Generic.Dictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.DataServiceStreamResponse.Stream
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Stream
  nameWithType: DataServiceStreamResponse.Stream
  fullName: System.Data.Services.Client.DataServiceStreamResponse.Stream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition*
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: ContentDisposition
  nameWithType: DataServiceStreamResponse.ContentDisposition
- uid: System.Data.Services.Client.DataServiceStreamResponse.ContentType*
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: ContentType
  nameWithType: DataServiceStreamResponse.ContentType
- uid: System.Data.Services.Client.DataServiceStreamResponse.Dispose*
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Dispose
  nameWithType: DataServiceStreamResponse.Dispose
- uid: System.Data.Services.Client.DataServiceStreamResponse.Headers*
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Headers
  nameWithType: DataServiceStreamResponse.Headers
- uid: System.Data.Services.Client.DataServiceStreamResponse.Stream*
  parent: System.Data.Services.Client.DataServiceStreamResponse
  isExternal: false
  name: Stream
  nameWithType: DataServiceStreamResponse.Stream
