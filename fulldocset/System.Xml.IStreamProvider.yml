### YamlMime:ManagedReference
items:
- uid: System.Xml.IStreamProvider
  id: IStreamProvider
  children:
  - System.Xml.IStreamProvider.GetStream
  - System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  langs:
  - csharp
  name: IStreamProvider
  nameWithType: IStreamProvider
  fullName: System.Xml.IStreamProvider
  type: Interface
  summary: "表示可以由类提供流实现的接口。"
  remarks: "包含写入 XML 编写器时，流的正文的传出消息<xref:System.ServiceModel.Channels.Message>将使用的一系列调用类似于在以下其<xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>实现:-写入流前面的 （例如 XML 开始标记） 的任何必要信息。</xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> </xref:System.ServiceModel.Channels.Message>      -写入流。      -写入流 （例如，XML 结束标记） 后面的任何信息。       这非常适用于类似于文本 XML 编码的编码。 但是，有一些编码不将 XML infoset 信息 （例如，开始和结束 XML 元素的标记） 一起元素中包含的数据。 例如，在 MTOM 编码中，消息拆分为多个部分。 一部分包含 XML infoset，其中可能包含对实际元素内容的其他部分的引用。 由于 XML infoset 将通常为小与流处理的内容相比，它使必要缓冲 infoset，将其写出，然后以流处理方式写入内容。 这意味着，按时间结束元素标记编写的我们应当尚未写出流尚未。       为此，请使用 IStreamProvider 接口。 此接口具有<xref:System.Xml.IStreamProvider.GetStream>方法可返回要写入的流。</xref:System.Xml.IStreamProvider.GetStream> 写出经过流处理的消息正文中的正确方法<xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>如下:-写入流 （例如 XML 开始标记） 前面所有必要信息-调用`WriteValue`上重载<xref:System.Xml.XmlDictionaryWriter>与采用 IStreamProvider`IStreamProvider`实现可返回要写入的流。</xref:System.Xml.XmlDictionaryWriter> </xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>      -写入流后面的 （例如，XML 结束标记） 使用此方法的任何信息，XML 编写器可以选择何时调用<xref:System.Xml.IStreamProvider.GetStream>和写出经过流处理的数据。</xref:System.Xml.IStreamProvider.GetStream> 例如，文本和二进制 XML 编写器将立即调用，并将写出开始和结束标记之间的经过流处理的内容。 MTOM 编写器可以决定调用<xref:System.Xml.IStreamProvider.GetStream>更高版本，准备写入消息的相应部分时。</xref:System.Xml.IStreamProvider.GetStream>"
  syntax:
    content: public interface IStreamProvider
  implements: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.GetStream
  id: GetStream
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "获取流。"
  remarks: "可以使用此方法以返回要写入流。"
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>对象。</xref:System.IO.Stream>"
  overload: System.Xml.IStreamProvider.GetStream*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  id: ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "释放要输出的流。"
  syntax:
    content: public void ReleaseStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "正在发布的流。"
  overload: System.Xml.IStreamProvider.ReleaseStream*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IStreamProvider.GetStream
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
- uid: System.Xml.IStreamProvider.GetStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream
  nameWithType: IStreamProvider.GetStream
- uid: System.Xml.IStreamProvider.ReleaseStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream
  nameWithType: IStreamProvider.ReleaseStream
