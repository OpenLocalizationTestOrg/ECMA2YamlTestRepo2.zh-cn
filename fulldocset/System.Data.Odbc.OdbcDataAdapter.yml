### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataAdapter
  id: OdbcDataAdapter
  children:
  - System.Data.Odbc.OdbcDataAdapter.#ctor
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.RowUpdated
  - System.Data.Odbc.OdbcDataAdapter.RowUpdating
  - System.Data.Odbc.OdbcDataAdapter.SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
  type: Class
  summary: "表示一组数据命令和与用于填充数据源的连接<xref href=&quot;System.Data.DataSet&quot;></xref>和更新数据源。 此类不能被继承。"
  remarks: "OdbcDataAdapter 用作之间的桥梁`DataSet`和用于检索和保存数据的数据源。 OdbcDataAdapter 通过使用提供此桥<xref:System.Data.Common.DbDataAdapter.Fill%2A>将数据从数据源到<xref:System.Data.DataSet>，并使用<xref:System.Data.Common.DbDataAdapter.Update%2A>发送中所做更改<xref:System.Data.DataSet>回数据源。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       当 OdbcDataAdapter 填充<xref:System.Data.DataSet>，它创建所需的表和列返回的数据如果不存在。</xref:System.Data.DataSet> 但是，主键信息除非不包含隐式创建的架构中的<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为<xref:System.Data.MissingSchemaAction>。</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 你还可以创建的<xref:System.Data.DataSet>，包括主前的关键信息，填充它使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>处理数据</xref:System.Data.DataSet>的架构 OdbcDataAdapter 有关详细信息，请参阅[将现有约束添加到数据集](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 当调用`Fill`不具有主键列的数据源的方法，OdbcDataAdapter 尝试将提升为主键的唯一约束列。 在过程中，OdbcDataAdapter 将标记为不可为 null 的唯一约束。 此行为适用，除非存在位于唯一约束列中 null 值。 如果没有一个 null 值，`Fill`方法将失败并违反了约束。 若要避免这种情况下，唯一约束列中不允许使用 null 值。      1> [!NOTE]&1;> 由于本机 ODBC 驱动程序，只有一个<xref:System.Data.DataTable>调用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>时返回</xref:System.Data.DataTable>的限制 这是 true，即使从多个执行 SQL 批处理语句<xref:System.Data.DataTable>对象也会随着。</xref:System.Data.DataTable>       此外包括 OdbcDataAdapter <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>， <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>， <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>， <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>，和`TableMappings`属性以便于加载和更新的数据。</xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, OdbcDataAdapter, and <xref:System.Data.Odbc.OdbcConnection> to select records and populate a `DataSet` with the selected rows.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>类。"
  remarks: "当你创建的实例<xref:System.Data.Odbc.OdbcDataAdapter>，以下的只写和只读属性被设置为其默认值，如表所示。</xref:System.Data.Odbc.OdbcDataAdapter>      |属性 |默认值 |  |----------------|-------------------|  |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|      您可以更改任何通过单独属性调用这些属性的值。</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_2_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_2_1.vb)]"
  syntax:
    content: public OdbcDataAdapter ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  id: '#ctor(System.Data.Odbc.OdbcCommand)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>与指定的 SQL SELECT 语句一起使用的类。"
  remarks: "此实现的<xref:System.Data.Odbc.OdbcDataAdapter>构造函数集<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性中指定的值`selectCommand`参数。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter>       当你创建的实例<xref:System.Data.Odbc.OdbcDataAdapter>，以下的只写和只读属性被设置为其默认值，如表所示。</xref:System.Data.Odbc.OdbcDataAdapter>      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|      您可以更改任何通过单独属性调用这些属性的值。</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_6_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_6_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> ，是 SQL SELECT 语句或存储的过程，并被设置为<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>属性<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>与 SQL SELECT 语句一起使用的类和<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>。"
  remarks: "此实现的<xref:System.Data.Odbc.OdbcDataAdapter>很有用的应用程序必须调用中`Fill`方法为两个或多个<xref:System.Data.Odbc.OdbcDataAdapter>对象。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/visualbasic/d0ba4f92-5ec4-4c3a-b38b-_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/csharp/d0ba4f92-5ec4-4c3a-b38b-_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "一个字符串，它 SQL SELECT 语句或存储的过程用于<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>属性<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>表示的连接。"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>替换 SQL SELECT 语句和连接字符串的类。"
  remarks: "此重载<xref:System.Data.Odbc.OdbcDataAdapter>构造函数使用`selectConnectionString`参数设置<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter> 但是，它不开放连接。 你仍必须显式打开连接。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_1_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_1_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "一个字符串，它 SQL SELECT 语句或存储的过程用于<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>属性<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>。</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "连接字符串中。"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "要添加。"
    - id: command
      type: System.Data.IDbCommand
      description: "要添加。"
    - id: statementType
      type: System.Data.StatementType
      description: "要添加。"
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "要添加。"
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "要添加。"
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "要添加。"
    - id: command
      type: System.Data.IDbCommand
      description: "要添加。"
    - id: statementType
      type: System.Data.StatementType
      description: "要添加。"
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "要添加。"
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "要添加。"
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置的 SQL 语句或存储的过程用于删除数据源中的记录。"
  remarks: "当分配 DeleteCommand 属性到以前创建<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>不克隆。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> 相反，DeleteCommand 保留以前创建的<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>的引用       更新操作期间，如果未设置 DeleteCommand 和主键信息位于<xref:System.Data.DataSet>，你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder>类自动生成 DeleteCommand，并对帐所需的其他命令<xref:System.Data.DataSet>到数据源。</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 若要执行此操作，设置<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性的<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 生成逻辑也需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_2_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_2_1.cs)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>在更新操作期间用于删除数据源中对应的已删除行的记录<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置的 SQL 语句或存储的过程用于将新记录插入到数据源。"
  remarks: "当分配 InsertCommand 属性到以前创建<xref:System.Data.Odbc.OdbcCommand>对象，<xref:System.Data.Odbc.OdbcCommand>不克隆。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> 相反，InsertCommand 保留以前创建的<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>的引用       更新操作期间，如果未设置 InsertCommand 和主键信息位于<xref:System.Data.DataSet>，你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder>类自动生成 InsertCommand，并对帐所需的其他命令<xref:System.Data.DataSet>到数据源。</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 若要执行此操作，设置<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性的<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 生成逻辑也需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 如果执行此命令返回行，这些行可能添加到<xref:System.Data.DataSet>取决于你如何设置<xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>属性<xref:System.Data.Odbc.OdbcCommand>对象。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>在更新操作期间用于在数据源对应中新行中插入记录<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "要添加。"
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "要添加。"
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "针对数据源执行命令后，在更新操作期间发生。"
  remarks: "当你使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有两个事件发生每个更新的数据行。</xref:System.Data.Common.DbDataAdapter.Update%2A> 执行的顺序，如下所示是︰ 1。  中的值<xref:System.Data.DataRow>移动到的参数值。</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>引发事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  该命令执行。      4.  如果该命令设置为`FirstReturnedRecord`，第一个返回结果置于<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  如果有输出参数，请在放入<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>调用。</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.Odbc.OdbcRowUpdatedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "期间出现<xref:System.Data.Common.DbDataAdapter.Update*>针对数据源执行命令之前。</xref:System.Data.Common.DbDataAdapter.Update*>"
  remarks: "当你使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有两个事件发生每个更新的数据行。</xref:System.Data.Common.DbDataAdapter.Update%2A> 执行的顺序，如下所示是︰ 1。  中的值<xref:System.Data.DataRow>移动到的参数值。</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>引发事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  该命令执行。      4.  如果该命令设置为`FirstReturnedRecord`，第一个返回结果置于<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  如果有输出参数，请在放入<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>调用。</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.Odbc.OdbcRowUpdatingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置的 SQL 语句或存储的过程用于选择数据源中的记录。"
  remarks: "当分配 SelectCommand 到以前创建<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>不克隆。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> 相反，SelectCommand 保留以前创建的引用<xref:System.Data.Odbc.OdbcCommand>对象。</xref:System.Data.Odbc.OdbcCommand>       如果 SelectCommand 不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the SelectCommand and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_3_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_3_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> ，填充操作过程中，用于从数据源中放置虚拟机选择记录<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅<xref:System.Data.IDbDataAdapter.DeleteCommand*>。</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcDataAdapter>实例被强制转换为<xref:System.Data.IDbDataAdapter>接口。</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>更新期间用于删除已删除的行在数据集中的数据源中的记录。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅<xref:System.Data.IDbDataAdapter.InsertCommand*>。</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcDataAdapter>实例被强制转换为<xref:System.Data.IDbDataAdapter>接口。</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> ，在更新过程中，用于从数据源用于放置在数据集中插入记录。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅<xref:System.Data.IDbDataAdapter.SelectCommand*>。</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcDataAdapter>实例被强制转换为<xref:System.Data.IDbDataAdapter>接口。</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> ，在更新过程中，用于从数据源用于放置在数据集中选择的记录。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅<xref:System.Data.IDbDataAdapter.UpdateCommand*>。</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcDataAdapter>实例被强制转换为<xref:System.Data.IDbDataAdapter>接口。</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>修改的行在数据集中的数据源中更新来更新记录期间使用。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcDataAdapter>实例被强制转换为<xref:System.ICloneable>接口。</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个新<xref:System.Object>，它是此实例的副本。</xref:System.Object>"
  overload: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置的 SQL 语句或存储的过程用于更新数据源中的记录。"
  remarks: "当分配 UpdateCommand 到以前创建<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>不克隆。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> 相反，限于 UpdateCommand 保留以前创建的引用<xref:System.Data.Odbc.OdbcCommand>对象。</xref:System.Data.Odbc.OdbcCommand>       更新操作期间，如果未设置限于 UpdateCommand 和主键信息位于<xref:System.Data.DataSet>，你可以使用<xref:System.Data.Odbc.OdbcCommandBuilder>类自动生成限于 UpdateCommand，并对帐所需的其他命令<xref:System.Data.DataSet>到数据源。</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 若要执行此操作，设置<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>属性的<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 生成逻辑也需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 如果执行此命令返回行，这些行可能会与合并<xref:System.Data.DataSet>取决于你如何设置<xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>属性<xref:System.Data.Odbc.OdbcCommand>对象。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>在更新操作期间用于对已修改行中更新数据源相对应的记录<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
- uid: System.Data.Odbc.OdbcRowUpdatedEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatedEventHandler
  nameWithType: OdbcRowUpdatedEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatedEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
- uid: System.Data.Odbc.OdbcRowUpdatingEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatingEventHandler
  nameWithType: OdbcRowUpdatingEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatingEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OdbcDataAdapter.OnRowUpdated
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OdbcDataAdapter.OnRowUpdating
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
