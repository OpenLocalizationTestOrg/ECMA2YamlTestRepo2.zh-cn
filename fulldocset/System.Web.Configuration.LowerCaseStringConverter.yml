### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.LowerCaseStringConverter
  id: LowerCaseStringConverter
  children:
  - System.Web.Configuration.LowerCaseStringConverter.#ctor
  - System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: LowerCaseStringConverter
  nameWithType: LowerCaseStringConverter
  fullName: System.Web.Configuration.LowerCaseStringConverter
  type: Class
  summary: "提供支持将对象转换为小写的字符串。 此类不能被继承。"
  remarks: "LowerCaseStringConverter 类允许对象转换为小写的字符串。 此类还提供支持验证的对象类型可以转换为小写的字符串中之前进行转换。       LowerCaseStringConverter 方法作为参数实现的对象，带有带<xref:System.ComponentModel.ITypeDescriptorContext>接口。</xref:System.ComponentModel.ITypeDescriptorContext> 此接口提供有关组件的上下文信息。 通常情况下，此接口用于在设计时提供有关设计时容器的信息。 <xref:System.ComponentModel.ITypeDescriptorContext>常用于类型转换。</xref:System.ComponentModel.ITypeDescriptorContext>"
  syntax:
    content: 'public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.Configuration.LowerCaseStringConverter.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.LowerCaseStringConverter
  langs:
  - csharp
  name: LowerCaseStringConverter()
  nameWithType: LowerCaseStringConverter.LowerCaseStringConverter()
  fullName: System.Web.Configuration.LowerCaseStringConverter.LowerCaseStringConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的实例<xref href=&quot;System.Web.Configuration.LowerCaseStringConverter&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the LowerCaseStringConverter constructor.  \n  \n [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/add/codesnippet/visualbasic/m-system.web.configurati_75_1.vb)]\n [!code-cs[System.Web.Configuration.LowerCaseStringConverter#2](~/add/codesnippet/csharp/m-system.web.configurati_75_1.cs)]"
  syntax:
    content: public LowerCaseStringConverter ();
    parameters: []
  overload: System.Web.Configuration.LowerCaseStringConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: LowerCaseStringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "确定对象是否可以转换为基于指定参数的小写字符串。"
  remarks: "此方法使用实现的对象<xref:System.ComponentModel.ITypeDescriptorContext>接口用作`ctx`参数。</xref:System.ComponentModel.ITypeDescriptorContext> 此接口提供有关组件的上下文信息。 通常情况下，此接口用于在设计时提供有关设计时容器的信息。 <xref:System.ComponentModel.ITypeDescriptorContext>常用于类型转换。</xref:System.ComponentModel.ITypeDescriptorContext> 如果所需的自定义行为，重写此方法在派生类。"
  example:
  - "The following example demonstrates how to use this method.  \n  \n [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/add/codesnippet/visualbasic/c6c18555-9d5f-471e-b3ee-_1.vb)]\n [!code-cs[System.Web.Configuration.LowerCaseStringConverter#3](~/add/codesnippet/csharp/c6c18555-9d5f-471e-b3ee-_1.cs)]"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "实现的对象<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref>接口。"
    - id: type
      type: System.Type
      description: "要转换的对象类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果参数所描述一个对象，可以转换为小写的字符串对象;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: LowerCaseStringConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "确定对象是否可以转换为基于指定参数的小写字符串。"
  remarks: "此方法使用实现的对象<xref:System.ComponentModel.ITypeDescriptorContext>接口用作`ctx`参数。</xref:System.ComponentModel.ITypeDescriptorContext> 此接口提供有关组件的上下文信息。 通常情况下，此接口用于在设计时提供有关设计时容器的信息。 <xref:System.ComponentModel.ITypeDescriptorContext>常用于类型转换。</xref:System.ComponentModel.ITypeDescriptorContext> 如果所需的自定义行为，重写此方法在派生类。"
  example:
  - "The following example demonstrates how to use this method.  \n  \n [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/add/codesnippet/visualbasic/f17031b6-6d75-467d-836e-_1.vb)]\n [!code-cs[System.Web.Configuration.LowerCaseStringConverter#4](~/add/codesnippet/csharp/f17031b6-6d75-467d-836e-_1.cs)]"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "实现的对象<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref>接口。"
    - id: type
      type: System.Type
      description: "要转换的对象类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果参数所描述一个对象，可以转换为小写的字符串对象;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.Configuration.LowerCaseStringConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: LowerCaseStringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "将对象从其原始值转换为小写的字符串基于指定的参数。"
  remarks: "此方法使用实现的对象<xref:System.ComponentModel.ITypeDescriptorContext>接口用作`ctx`参数。</xref:System.ComponentModel.ITypeDescriptorContext> 此接口提供有关组件的上下文信息。 通常情况下，此接口用于在设计时提供有关设计时容器的信息。 <xref:System.ComponentModel.ITypeDescriptorContext>常用于类型转换。</xref:System.ComponentModel.ITypeDescriptorContext> `ci`参数对象提供的区域性相关信息。 `data`参数对象用作要转换的对象和生成的对象作为该方法完成后。 如果所需的自定义行为，重写此方法在派生类。"
  example:
  - "The following example demonstrates how to use this method.  \n  \n [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/add/codesnippet/visualbasic/3d9704d9-bdf4-4372-8dbd-_1.vb)]\n [!code-cs[System.Web.Configuration.LowerCaseStringConverter#5](~/add/codesnippet/csharp/3d9704d9-bdf4-4372-8dbd-_1.cs)]"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "实现的对象<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref>接口。"
    - id: ci
      type: System.Globalization.CultureInfo
      description: "实现<xref:System.Globalization.CultureInfo>类</xref:System.Globalization.CultureInfo>的对象"
    - id: data
      type: System.Object
      description: "要转换的对象。"
    return:
      type: System.Object
      description: "一个小写字符串对象。"
  overload: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: LowerCaseStringConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "将对象转换为小写的字符串基于指定的参数。"
  remarks: "此方法使用实现的对象<xref:System.ComponentModel.ITypeDescriptorContext>接口用作`ctx`参数。</xref:System.ComponentModel.ITypeDescriptorContext> 此接口提供有关组件的上下文信息。 通常情况下，此接口用于在设计时提供有关设计时容器的信息。 <xref:System.ComponentModel.ITypeDescriptorContext>常用于类型转换。</xref:System.ComponentModel.ITypeDescriptorContext> `ci`参数对象提供的区域性相关信息。 `value`对象充当要转换的对象和生成的对象方法完成后。 如果所需的自定义行为，重写此方法在派生类。"
  example:
  - "The following example demonstrates how to use this method.  \n  \n [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/add/codesnippet/visualbasic/864450b6-a613-4626-bf2a-_1.vb)]\n [!code-cs[System.Web.Configuration.LowerCaseStringConverter#6](~/add/codesnippet/csharp/864450b6-a613-4626-bf2a-_1.cs)]"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "实现的对象<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref>接口。"
    - id: ci
      type: System.Globalization.CultureInfo
      description: "实现<xref:System.Globalization.CultureInfo>类</xref:System.Globalization.CultureInfo>的对象"
    - id: value
      type: System.Object
      description: "要转换的对象。"
    - id: type
      type: System.Type
      description: "要转换的对象类型。"
    return:
      type: System.Object
      description: "一个小写字符串对象。"
  overload: System.Web.Configuration.LowerCaseStringConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Web.Configuration.LowerCaseStringConverter.#ctor
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: LowerCaseStringConverter()
  nameWithType: LowerCaseStringConverter.LowerCaseStringConverter()
  fullName: System.Web.Configuration.LowerCaseStringConverter.LowerCaseStringConverter()
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: LowerCaseStringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: LowerCaseStringConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: LowerCaseStringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: LowerCaseStringConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.Configuration.LowerCaseStringConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Web.Configuration.LowerCaseStringConverter.#ctor*
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: LowerCaseStringConverter
  nameWithType: LowerCaseStringConverter.LowerCaseStringConverter
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom*
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: LowerCaseStringConverter.CanConvertFrom
- uid: System.Web.Configuration.LowerCaseStringConverter.CanConvertTo*
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: LowerCaseStringConverter.CanConvertTo
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertFrom*
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: LowerCaseStringConverter.ConvertFrom
- uid: System.Web.Configuration.LowerCaseStringConverter.ConvertTo*
  parent: System.Web.Configuration.LowerCaseStringConverter
  isExternal: false
  name: ConvertTo
  nameWithType: LowerCaseStringConverter.ConvertTo
