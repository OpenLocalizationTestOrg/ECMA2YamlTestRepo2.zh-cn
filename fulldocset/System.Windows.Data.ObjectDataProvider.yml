### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.ObjectDataProvider
  id: ObjectDataProvider
  children:
  - System.Windows.Data.ObjectDataProvider.#ctor
  - System.Windows.Data.ObjectDataProvider.BeginQuery
  - System.Windows.Data.ObjectDataProvider.ConstructorParameters
  - System.Windows.Data.ObjectDataProvider.IsAsynchronous
  - System.Windows.Data.ObjectDataProvider.MethodName
  - System.Windows.Data.ObjectDataProvider.MethodParameters
  - System.Windows.Data.ObjectDataProvider.ObjectInstance
  - System.Windows.Data.ObjectDataProvider.ObjectType
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  langs:
  - csharp
  name: ObjectDataProvider
  nameWithType: ObjectDataProvider
  fullName: System.Windows.Data.ObjectDataProvider
  type: Class
  summary: "包装和创建可以用作绑定源的对象。"
  remarks: "> [!IMPORTANT]1> ObjectDataProvider 失败时它不具有执行反射的给定的类型或成员的权限。 有关详细信息，请参阅中的权限要求[绑定源概述](~/add/includes/ajax-current-ext-md.md)。       有多种方法来创建要用作绑定源的对象。 例如，创建你的对象的资源部分中你[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]页上，也可以在代码中创建你的对象并将其设置为`DataContext`你的窗口。       ObjectDataProvider 使你能够创建你的对象中[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]并使其可用作绑定源。 它提供的以下属性，使您能够在你的对象上执行查询并将绑定到结果。      -使用<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>属性将参数传递给你的对象的构造函数。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>      -使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>属性来调用方法，并使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性将参数传递给方法。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> </xref:System.Windows.Data.ObjectDataProvider.MethodName%2A> 然后可以绑定到方法的结果。       你还可以使用<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>属性可指定是否要在工作线程或活动的上下文中执行对象创建。</xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>       此类也是有用的当你想要将你当前的绑定源对象替换为另一个对象和更新所有关联的绑定。       ObjectDataProvider 可以方便地创建和使用对象作为绑定源对象中的[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，但不替换现有数据模型。       如果你要实现您自己的数据绑定的对象，请参阅[绑定源概述](../Topic/Binding%20Sources%20Overview.md)有关信息和建议。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]

      public class ObjectDataProvider : System.Windows.Data.DataSourceProvider
  inheritance:
  - System.Object
  - System.Windows.Data.DataSourceProvider
  implements: []
  inheritedMembers:
  - System.Windows.Data.DataSourceProvider.BeginInit
  - System.Windows.Data.DataSourceProvider.Data
  - System.Windows.Data.DataSourceProvider.DataChanged
  - System.Windows.Data.DataSourceProvider.DeferRefresh
  - System.Windows.Data.DataSourceProvider.Dispatcher
  - System.Windows.Data.DataSourceProvider.EndInit
  - System.Windows.Data.DataSourceProvider.Error
  - System.Windows.Data.DataSourceProvider.InitialLoad
  - System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled
  - System.Windows.Data.DataSourceProvider.IsRefreshDeferred
  - System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)
  - System.Windows.Data.DataSourceProvider.PropertyChanged
  - System.Windows.Data.DataSourceProvider.Refresh
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.#ctor
  id: '#ctor'
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectDataProvider()
  nameWithType: ObjectDataProvider.ObjectDataProvider()
  fullName: System.Windows.Data.ObjectDataProvider.ObjectDataProvider()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新实例<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>类。"
  syntax:
    content: public ObjectDataProvider ();
    parameters: []
  overload: System.Windows.Data.ObjectDataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery
  id: BeginQuery
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: BeginQuery()
  nameWithType: ObjectDataProvider.BeginQuery()
  fullName: System.Windows.Data.ObjectDataProvider.BeginQuery()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "开始创建请求的对象，可以立即或在后台线程，基于值的<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous*>属性。</xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous*>"
  remarks: "<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>的基的类和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>方法</xref:System.Windows.Data.DataSourceProvider.Refresh%2A></xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>调用此方法"
  syntax:
    content: protected override void BeginQuery ();
    parameters: []
  overload: System.Windows.Data.ObjectDataProvider.BeginQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  id: ConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
  fullName: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取要传递给构造函数的参数列表。"
  remarks: "更改此集合会隐式导致<xref:System.Windows.Data.ObjectDataProvider>刷新。</xref:System.Windows.Data.ObjectDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlPropertyElementUsage_ConstructorParameters&quot;></a># # XAML 属性元素用法```   <object>     <object.ConstructorParameters>       parameterValues     </object.ConstructorParameters>   </object>   ```"
  example:
  - "The following example shows how to use this property:  \n  \n [!code-xml[SimpleBinding#ODPCP](~/add/codesnippet/xaml/SimpleBinding_VB/Page1.xaml#odpcp)]"
  syntax:
    content: public System.Collections.IList ConstructorParameters { get; }
    return:
      type: System.Collections.IList
      description: "要传递给构造函数的参数列表。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ConstructorParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  id: IsAsynchronous
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
  fullName: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否在工作线程或活动的上下文中执行对象创建。"
  remarks: "此属性是很有用，如果你正在绑定到速度较慢，可用的外部数据对象。"
  syntax:
    content: public bool IsAsynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在辅助线程; 中执行对象创建否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.IsAsynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.MethodName
  id: MethodName
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
  fullName: System.Windows.Data.ObjectDataProvider.MethodName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置要调用的方法的名称。"
  remarks: "此属性可用于在你的对象上调用的方法和使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性将参数传递给方法。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> 然后可以绑定到方法的结果。"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "要调用的方法的名称。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters
  id: MethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
  fullName: System.Windows.Data.ObjectDataProvider.MethodParameters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取要传递给方法的参数列表。"
  remarks: "你可以使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>属性来在你的对象上调用的方法和 MethodParameters 属性用于将参数传递给方法。</xref:System.Windows.Data.ObjectDataProvider.MethodName%2A> 然后可以绑定到方法的结果。       更改此集合会隐式导致<xref:System.Windows.Data.ObjectDataProvider>若要刷新的对象。</xref:System.Windows.Data.ObjectDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlPropertyElementUsage_MethodParameters&quot;></a># # XAML 属性元素用法```   <object>     <object.MethodParameters>       parameterValues     </object.MethodParameters>   </object>   ```"
  syntax:
    content: public System.Collections.IList MethodParameters { get; }
    return:
      type: System.Collections.IList
      description: "要传递给方法的参数列表。 默认值为空列表。"
  overload: System.Windows.Data.ObjectDataProvider.MethodParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance
  id: ObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
  fullName: System.Windows.Data.ObjectDataProvider.ObjectInstance
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置用作绑定源的对象。"
  remarks: "当<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>设置为非 null 值，则<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>.</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>指定类型的对象属性包含</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 如果由用户，分配的 ObjectInstance<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>属性返回的分配对象的类型。</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 如果设置为的 ObjectInstance <xref:System.Windows.Data.DataSourceProvider>、<xref:System.Windows.Data.ObjectDataProvider>使用<xref:System.Windows.Data.DataSourceProvider.Data%2A>的分配的源提供程序中作为有效的 ObjectInstance。</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.ObjectDataProvider> </xref:System.Windows.Data.DataSourceProvider>       如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>是使用 ObjectInstance 和<xref:System.Windows.Data.DataSourceProvider.Data%2A>不会更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>称为。</xref:System.Windows.Data.DataSourceProvider.Refresh%2A> </xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "从构造的对象的实例<> *1> 和<> *1>，或<xref href=&quot;System.Windows.Data.DataSourceProvider&quot;></xref>其中<xref:System.Windows.Data.DataSourceProvider.Data*>用作的 ObjectInstance。</xref:System.Windows.Data.DataSourceProvider.Data*>"
  overload: System.Windows.Data.ObjectDataProvider.ObjectInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>赋值<xref:System.Windows.Data.ObjectDataProvider.ObjectType*>和 ObjectInstance; 只允许有一个。</xref:System.Windows.Data.ObjectDataProvider.ObjectType*>"
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ObjectType
  id: ObjectType
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
  fullName: System.Windows.Data.ObjectDataProvider.ObjectType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置要创建的实例的对象类型。"
  remarks: "如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用时，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>和<xref:System.Windows.Data.DataSourceProvider.Data%2A>不更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>称为。</xref:System.Windows.Data.DataSourceProvider.Refresh%2A> </xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A> </xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlAttributeUsage_ObjectType&quot;></a># # XAML 属性用法```   <object ObjectType=&quot;myDataType&quot;/>   ``` <a name=&quot;xamlValues_ObjectType&quot;> </a> # # XAML 值*myDataType*要创建的实例的数据类型。       使用[X:type 标记扩展](~/add/includes/ajax-current-ext-md.md)设置类型。"
  syntax:
    content: public Type ObjectType { get; set; }
    return:
      type: System.Type
      description: "此属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>时<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>为未初始化或显式设置为 null。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>是分配，ObjectType 返回的对象或为 null 的类型的对象是否为 null。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ObjectType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>分配这两个 ObjectType 和<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>; 但只允许一个，则。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>"
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  id: ShouldSerializeConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeConstructorParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters*>属性应对其进行持久化。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>属性不具有简单的默认值。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.ObjectDataProvider>或开发你自己控制合并<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeConstructorParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  id: ShouldSerializeMethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeMethodParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.ObjectDataProvider.MethodParameters*>属性应对其进行持久化。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性不具有简单的默认值。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.ObjectDataProvider>或开发你自己控制合并<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeMethodParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  id: ShouldSerializeObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeObjectInstance()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>属性应对其进行持久化。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>属性不具有简单的默认值。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.ObjectDataProvider>或开发你自己控制合并<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeObjectInstance ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  id: ShouldSerializeObjectType
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeObjectType()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.ObjectDataProvider.ObjectType*>属性应对其进行持久化。</xref:System.Windows.Data.ObjectDataProvider.ObjectType*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>属性不具有简单的默认值。</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.ObjectDataProvider>或开发你自己控制合并<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeObjectType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.DataSourceProvider
  isExternal: false
  name: System.Windows.Data.DataSourceProvider
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ObjectDataProvider.#ctor
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectDataProvider()
  nameWithType: ObjectDataProvider.ObjectDataProvider()
  fullName: System.Windows.Data.ObjectDataProvider.ObjectDataProvider()
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: BeginQuery()
  nameWithType: ObjectDataProvider.BeginQuery()
  fullName: System.Windows.Data.ObjectDataProvider.BeginQuery()
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
  fullName: System.Windows.Data.ObjectDataProvider.ConstructorParameters
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
  fullName: System.Windows.Data.ObjectDataProvider.IsAsynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ObjectDataProvider.MethodName
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
  fullName: System.Windows.Data.ObjectDataProvider.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
  fullName: System.Windows.Data.ObjectDataProvider.MethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
  fullName: System.Windows.Data.ObjectDataProvider.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ObjectDataProvider.ObjectType
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
  fullName: System.Windows.Data.ObjectDataProvider.ObjectType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeConstructorParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeMethodParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectInstance()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectType()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType()
- uid: System.Windows.Data.ObjectDataProvider.#ctor*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectDataProvider
  nameWithType: ObjectDataProvider.ObjectDataProvider
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: BeginQuery
  nameWithType: ObjectDataProvider.BeginQuery
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
- uid: System.Windows.Data.ObjectDataProvider.MethodName*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
- uid: System.Windows.Data.ObjectDataProvider.ObjectType*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeConstructorParameters
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeMethodParameters
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectInstance
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectType
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType
