### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  summary: "将序列化或反序列化对象所需的所有数据都存储。 此类不能被继承。"
  remarks: "此类使用与自定义序列化行为的对象。 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>方法上的<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Runtime.Serialization.ISerializationSurrogate>填充具有名称、 类型和值的每条它想要序列化的信息的 SerializationInfo 存储区。</xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 在反序列化，相应的函数可以提取此信息。       会将对象添加到在序列化时使用的 SerializationInfo 存储<xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>方法和从在反序列化使用 SerializationInfo 存储提取<xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>方法。</xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> </xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>       有关自定义序列化的详细信息，请参阅[自定义序列化](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the SerializationInfo for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_18_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_18_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_18_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "创建的新实例<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>类。"
  remarks: "<xref:System.Runtime.Serialization.IFormatterConverter>作为传递`converter`参数将数据从内部表示形式转换为窗体请求的用户。</xref:System.Runtime.Serialization.IFormatterConverter> 内部数据的表示形式中<xref:System.Runtime.Serialization.SerializationInfo>依赖于格式化程序，创建它。</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化的对象。</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref>在反序列化过程中使用。"
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>converter</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>类。"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化的对象。</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref>在反序列化过程中使用。"
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: "指示对象是否需要在部分信任环境中的同一个令牌。"
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个布尔值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException> 例如︰```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, true);      info.AddValue(&quot;abc&quot;, false);      // However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, true);      info.AddValue(&quot;XYZ&quot;, false);   }   ```      ```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      &quot; This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)      info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)      &quot; However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)   End Sub   ```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Boolean
      description: "要序列化的布尔值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 8 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Byte
      description: "要序列化的字节值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 Unicode 字符值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Char
      description: "要序列化的字符值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加<xref:System.DateTime>值到<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。</xref:System.DateTime>"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.DateTime
      description: "<xref:System.DateTime>要序列化值。</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个十进制值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Decimal
      description: "要序列化的十进制值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "如果值具有与关联<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "添加到一个双精度浮点值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Double
      description: "要序列化的双精度值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 16 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Int16
      description: "<xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 32 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/b3789dd4-8567-4492-a19c-_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/b3789dd4-8567-4492-a19c-_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/b3789dd4-8567-4492-a19c-_1.vb)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 64 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Int64
      description: "要序列化的 Int64 值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到指定的对象<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>应用商店，其中是具有指定名称关联。"
  remarks: "中包含的对象`value`参数序列化为返回的类型`value`。       如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Object
      description: "要进行序列化的值。 此对象的任何子表达式会自动进行序列化。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 8 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.SByte
      description: "<xref uid=&quot;langword_csharp_Sbyte&quot; name=&quot;Sbyte&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "添加到一个单精度浮点值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Single
      description: "要序列化的单个值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 16 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.UInt16
      description: "<xref uid=&quot;langword_csharp_UInt16&quot; name=&quot;UInt16&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 32 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/44ffdfaa-67f2-436c-9c0d-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/44ffdfaa-67f2-436c-9c0d-_1.vb)]"
  syntax:
    content: public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.UInt32
      description: "<xref uid=&quot;langword_csharp_UInt32&quot; name=&quot;UInt32&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "将添加到一个 64 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.UInt64
      description: "<xref uid=&quot;langword_csharp_UInt64&quot; name=&quot;UInt64&quot; href=&quot;&quot;> </xref>要序列化值。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "添加到值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储，其中<code> value </code>与关联<code> name </code>和序列化为<xref:System.Type><code> type </code>。</xref:System.Type>"
  remarks: "分配的类型始终是该对象的类型或其父级之一。       如果使用添加两个值名称的差异仅在于种情况下，会引发任何异常，这不是建议的做法。 但是，添加两个值完全相同的名称将导致<xref:System.Runtime.Serialization.SerializationException>引发。</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: "要关联值，因此它可以反序列化更高版本的名称。"
    - id: value
      type: System.Object
      description: "要进行序列化的值。 此对象的任何子表达式会自动进行序列化。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>若要将与当前对象相关联。</xref:System.Type> 此参数必须始终为对象本身或其基类，这些类之一的类型。"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>name</code> or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "已与关联的值<code> name </code>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取或设置要在仅序列化期间序列化的类型的程序集名称。"
  remarks: "程序集名称是返回的值相同<xref:System.Reflection.Assembly.FullName%2A>包含类型的程序集的属性。</xref:System.Reflection.Assembly.FullName%2A> 这是在序列化此对象的类型信息时，格式化程序使用的程序集名称。       程序集名称包含的程序集、 版本、 区域性和有关对象的一些安全信息的名称。       正在更改 （例如，若要为特定类型发送代理） 要序列化的类型的用户将设置此属性的值。      1> [!CAUTION]&1;> 执行不反序列化期间使用此属性，因为此属性的值是不确定。"
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "要序列化的类型的程序集的全名。"
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "属性设置为的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取或设置的完整名称<xref:System.Type>要序列化。</xref:System.Type>"
  remarks: "FullTypeName 等同于将返回通过调用<xref:System.Type.FullName%2A><xref:System.Type>。</xref:System.Type> </xref:System.Type.FullName%2A> 这是在序列化此对象的类型信息时，格式化程序使用的类型名称。       正在更改的类型进行序列化 （例如，若要为特定类型发送代理） 的用户将想要设置此属性的值。      1> [!CAUTION]&1;> 执行不反序列化期间使用此属性，因为此属性的值是不确定。"
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: "要序列化的类型的全名。"
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "此属性设置为的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索一个布尔值，从<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个布尔值，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Boolean
      description: "与关联的布尔值<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为布尔值。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索的一个 8 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 8 位无符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Byte
      description: "与关联的 8 位无符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为 8 位无符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 Unicode 字符值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是 Unicode 字符，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Char
      description: "与关联的 Unicode 字符<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 Unicode 字符。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索<xref:System.DateTime>值从<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。</xref:System.DateTime>"
  remarks: "如果值为<xref:System.DateTime>，或可以转换为<xref:System.DateTime>，该值是返回; 否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> </xref:System.DateTime> </xref:System.DateTime> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>与关联的值<code> name </code>。</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为<xref:System.DateTime>值。</xref:System.DateTime>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个十进制值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是十进制或者可以转换为十进制数，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Decimal
      description: "从一个十进制值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为十进制。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个双精度浮点值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果值是双精度，或者可以转换为双精度型，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Double
      description: "与关联的双精度浮点值<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为双精度浮点值。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回<xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;></xref>用于循环访问中的名称-值对<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "需要在编写它们出到流之前，循环访问的值的格式化程序将最常使用此函数。"
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref>分析中包含的名称-值对<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 16 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 16 位有符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Int16
      description: "与关联的 16 位带符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 16 位有符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 32 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 32 位有符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_2_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_2_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_2_1.vb)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "要检索的值的名称。"
    return:
      type: System.Int32
      description: "与关联的 32 位带符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 32 位有符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 64 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 64 位有符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.Int64
      description: "与关联的 64 位带符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 64 位有符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索的一个 8 位有符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果值为`Int8`，或可以转换为`Int8`，该值是返回; 否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.SByte
      description: "与关联的 8 位带符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为 8 位有符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个单精度浮点值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果值是一个单精度浮点数，或可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: "要检索的值的名称。"
    return:
      type: System.Single
      description: "与关联的单精度浮点值<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>无法转换为单精度浮点值。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索<xref:System.String>值从<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。</xref:System.String>"
  remarks: "如果值为<xref:System.String>，或可以转换为<xref:System.String>，该值是返回; 否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> </xref:System.String> </xref:System.String> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.String
      description: "<xref:System.String>与关联<code> name </code>。</xref:System.String>"
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为一种<xref:System.String>。</xref:System.String>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 16 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 16 位无符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.UInt16
      description: "与关联的 16 位无符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 16 位无符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 32 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 32 位有符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.UInt32
      description: "与关联的 32 位无符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 32 位无符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索从一个 64 位无符号的整数值<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果该值是一个 64 位无符号的整数，或者可以转换为一个，则返回该值;否则为<xref:System.InvalidCastException>引发。</xref:System.InvalidCastException> 是由<xref:System.Runtime.Serialization.IFormatterConverter>与此<xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.IFormatterConverter>执行的所有转换"
  syntax:
    content: public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    return:
      type: System.UInt64
      description: "与关联的 64 位无符号的整数<code> name </code>。"
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为 64 位无符号整数。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "检索一个值，从<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  remarks: "如果数据存储在<xref:System.Runtime.Serialization.SerializationInfo>是请求的类型 （或其派生类之一），则直接返回该值。</xref:System.Runtime.Serialization.SerializationInfo> 否则为<xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>调用以将其转换为适当的类型。</xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>       GetValue 方法返回的值可以始终安全地强制转换为中指定的类型`type`参数。"
  example:
  - "The following code example demonstrates the use of the GetValue method:  \n  \n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/visualbasic/a88aeee3-6425-4869-aee2-_1.vb)]\n [!code-cs[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/csharp/a88aeee3-6425-4869-aee2-_1.cs)]\n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/cpp/a88aeee3-6425-4869-aee2-_1.cpp)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "与要检索的值关联的名称。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>要检索的值。</xref:System.Type> 如果存储的值无法转换为此类型，系统可能会引发一种<xref:System.InvalidCastException>。</xref:System.InvalidCastException>"
    return:
      type: System.Object
      description: "指定的对象<xref:System.Type>与关联<code> name </code>。</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "与关联的值<code> name </code>不能转换为<code> type </code>。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "当前实例中未找到具有指定名称的元素。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取是否已显式设置程序集名称。"
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果已显式设置程序集名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取是否已显式设置的完整类型名称。"
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果已显式设置的完整类型名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "获取已添加到的成员数<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>存储。"
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: "已添加到当前的成员数<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>。"
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回要进行序列化的对象的类型。"
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "正在序列化的对象类型。"
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "集<xref:System.Type>要序列化的对象。</xref:System.Type>"
  remarks: "<xref:System.Runtime.Serialization.Formatter>负责设置<xref:System.Type>的<xref:System.Runtime.Serialization.SerializationInfo>实例之前将其传递给<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> </xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Type> </xref:System.Runtime.Serialization.Formatter> 但是，想要为其对象发送代理用户将需要更改此所表示的类型<xref:System.Runtime.Serialization.SerializationInfo>实例。</xref:System.Runtime.Serialization.SerializationInfo> 使用 SetType 方法相当于设置这两个<xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>和<xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_6_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_6_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_6_1.vb)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化的对象。</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
