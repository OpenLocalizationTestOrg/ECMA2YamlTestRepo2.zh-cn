### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService
  id: ITypeDescriptorFilterService
  children:
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  langs:
  - csharp
  name: ITypeDescriptorFilterService
  nameWithType: ITypeDescriptorFilterService
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService
  type: Interface
  summary: "提供要修改的设计模式中的组件的成员描述符集的接口。"
  remarks: "ITypeDescriptorFilterService 接口提供了一个接口，用于在设计时属性、 事件和组件的类级别特性的修改。 集内的描述符的组件提供了一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>通过发生这种修改 类型描述符将查询 ITypeDescriptorFilterService 服务组件的站点和类型描述符如果它存在，将传递它收集到此服务的所有元数据。 然后，服务可通过添加、 移除和更改现有特征的组件修改元数据。       例如，可以通过调用修改组件的属性<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>方法。</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> 筛选器服务获取一个字典，其中包含属性名称和类型<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>其属性描述符 使用以下逻辑实现进行修改。      |修改 |实现 |  |------------------|--------------------|  |删除 |删除在字典中的相应条目。 |  |添加 |向字典中添加的相应条目。 |  |更改 |调用现有的属性描述符方法、 替换关联的属性描述符条目，或替换字典中的整个属性键/值对。 |      返回值<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>确定固定了此组属性。</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> 如果此方法返回`true`、<xref:System.ComponentModel.TypeDescriptor>为此组件可以缓存的结果。</xref:System.ComponentModel.TypeDescriptor> 组件被垃圾回收之前，会保留此缓存或<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>调用方法的类型描述符。</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  example:
  - "The following code example demonstrates a designer that uses the ITypeDescriptorFilterService to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \n  \n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements ITypeDescriptorFilterService, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original ITypeDescriptorFilterService. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \n  \n [!code-cs[ITypeDescriptorFilterService#1](~/add/codesnippet/csharp/t-system.componentmodel._32_1.cs)]\n [!code-vb[ITypeDescriptorFilterService#1](~/add/codesnippet/visualbasic/t-system.componentmodel._32_1.vb)]\n [!code-cpp[ITypeDescriptorFilterService#1](~/add/codesnippet/cpp/t-system.componentmodel._32_1.cpp)]"
  syntax:
    content: public interface ITypeDescriptorFilterService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "筛选组件通过公开的属性<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "当用户请求的一组组件的属性，调用此方法。 要添加到字典中，该特性的特性<xref:System.Attribute.TypeId%2A>作为键且作为值的实际属性。</xref:System.Attribute.TypeId%2A> 此服务的实施者可以添加、 删除或更改在字典中的现有特性条目。"
  syntax:
    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要筛选的属性的组件。"
    - id: attributes
      type: System.Collections.IDictionary
      description: "可以修改的属性的字典。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果经过筛选的属性集是要缓存;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果筛选服务必须再次查询。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "筛选组件通过公开事件<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "当用户请求的一组组件的事件时调用此方法。 将事件添加到字典中，事件名称作为键且相应<xref:System.ComponentModel.EventDescriptor>对象作为值。</xref:System.ComponentModel.EventDescriptor> 此服务的实施者可以添加、 删除或更改事件字典中的条目。"
  syntax:
    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "为筛选器事件的组件。"
    - id: events
      type: System.Collections.IDictionary
      description: "可以修改的事件的字典。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果经过筛选的事件集是要缓存;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果筛选服务必须再次查询。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "筛选组件通过公开的属性<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "当用户请求的一组组件的属性，调用此方法。 属性添加到字典中，属性名称作为键且相应<xref:System.ComponentModel.PropertyDescriptor>对象作为值。</xref:System.ComponentModel.PropertyDescriptor> 此服务的实施者可以添加、 删除或更改属性字典中的条目。"
  syntax:
    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "为筛选器属性的组件。"
    - id: properties
      type: System.Collections.IDictionary
      description: "可以修改的属性的字典。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果经过筛选的属性集是要缓存;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果筛选服务必须再次查询。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes
  nameWithType: ITypeDescriptorFilterService.FilterAttributes
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents
  nameWithType: ITypeDescriptorFilterService.FilterEvents
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties
  nameWithType: ITypeDescriptorFilterService.FilterProperties
