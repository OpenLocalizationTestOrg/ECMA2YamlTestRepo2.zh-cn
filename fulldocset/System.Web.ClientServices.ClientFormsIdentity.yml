### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "表示使用窗体身份验证，客户端应用程序服务的身份验证的用户标识。"
  remarks: "客户端应用程序服务功能使用此类来表示经过身份验证的用户。 当你配置应用程序使用客户端应用程序服务和 forms 身份验证时，你可以通过调用来进行验证用户`static`<xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>方法。</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> 身份验证后，你可以检索对通过当前 ClientFormsIdentity 实例的引用<xref:System.Security.Principal.IPrincipal.Identity%2A>属性<xref:System.Security.Principal.IPrincipal>通过检索`static`<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>属性。</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.Identity%2A> 有关详细信息，请参阅[客户端应用程序服务](~/add/includes/ajax-current-ext-md.md)。       通常会访问 ClientFormsIdentity 对象作为<xref:System.Security.Principal.IIdentity>引用以避免直接依赖于此类。</xref:System.Security.Principal.IIdentity> 你可以确定用户是否已验证通过检查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>的标识属性。</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 但是，适用于 Windows，但不是能为客户端应用程序服务，则可能会验证该用户。 若要确定用户是否客户端应用程序服务进行身份验证，则应该还确认<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>属性值是&quot;ClientForms&quot;。</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       必须使用的显式 ClientFormsIdentity 引用来调用<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法，不能由<xref:System.Security.Principal.IIdentity>接口。</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "初始化的新实例<xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;></xref>类。"
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "经过身份验证的用户的名称。"
    - id: password
      type: System.String
      description: "经过身份验证的用户的密码。"
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "用于对用户进行身份验证的成员资格提供程序。"
    - id: authenticationType
      type: System.String
      description: "使用的身份验证类型。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户已经过身份验证;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "从身份验证服务检索 cookie。"
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "获取从身份验证服务中检索的 cookie 的集合。"
  remarks: "此属性不适合在应用程序代码中使用。 不能有意修改通过此属性，检索到的 cookie 和它们所包含任何有用信息。"
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "从身份验证服务检索 cookie。"
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "获取用于对用户进行身份验证的身份验证的类型。"
  remarks: "通常会访问<xref:System.Web.ClientServices.ClientFormsIdentity>对象作为一个<xref:System.Security.Principal.IIdentity>引用以避免直接依赖于此类。</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> 你可以确定用户是否已验证通过检查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>的标识属性。</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 但是，适用于 Windows，但不是能为客户端应用程序服务，则可能会验证该用户。 若要确定用户是否客户端应用程序服务进行身份验证，则应该还确认<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>属性值是&quot;ClientForms&quot;。</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 有关详细信息，请参阅<xref:System.Web.ClientServices.ClientFormsIdentity>类概述。</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "用于对用户进行身份验证的身份验证类型。"
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "释放使用的所有资源<xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>。"
  remarks: "在完成使用<xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity>时调用的 Dispose Dispose 方法离开<xref:System.Web.ClientServices.ClientFormsIdentity>中不可用状态。</xref:System.Web.ClientServices.ClientFormsIdentity> 调用 Dispose 后，必须释放对所有引用<xref:System.Web.ClientServices.ClientFormsIdentity>以便垃圾回收器才能回收的内存，<xref:System.Web.ClientServices.ClientFormsIdentity>占用。</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> 有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.Web.ClientServices.ClientFormsIdentity>。</xref:System.Web.ClientServices.ClientFormsIdentity>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.Web.ClientServices.ClientFormsIdentity>对象的`Finalize`方法。</xref:System.Web.ClientServices.ClientFormsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "释放由非托管的资源<xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Web.ClientServices.ClientFormsIdentity>引用。</xref:System.Web.ClientServices.ClientFormsIdentity> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "获取一个值，该值指示用户是否已经过身份验证。"
  remarks: "通常会访问<xref:System.Web.ClientServices.ClientFormsIdentity>对象作为一个<xref:System.Security.Principal.IIdentity>引用以避免直接依赖于此类。</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> 你可以确定用户是否已验证通过检查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>的标识属性。</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 但是，适用于 Windows，但不是能为客户端应用程序服务，则可能会验证该用户。 若要确定用户是否客户端应用程序服务进行身份验证，则应该还确认<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>属性值是&quot;ClientForms&quot;。</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 有关详细信息，请参阅<xref:System.Web.ClientServices.ClientFormsIdentity>类概述。</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户已经过身份验证;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "获取用户的名称。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "用户的名称。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "获取用于对用户进行身份验证的成员资格提供程序。"
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "用于对用户进行身份验证成员资格提供程序。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "以无提示方式进行用户身份验证使用缓存的凭据。"
  remarks: "当您使用窗体身份验证来验证当前用户，<xref:System.Web.ClientServices.ClientFormsIdentity>类存储用户凭据，只要运行应用程序。</xref:System.Web.ClientServices.ClientFormsIdentity> 但是，仅验证该用户，直到身份验证 cookie 过期。 Cookie 过期后，用户必须重新验证来访问远程角色或 Web 设置服务。 你可以使用**服务的高级设置**对话框中，为应用程序，以自动重新验证用户，配置中所述[如何︰ 配置客户端应用程序服务](~/add/includes/ajax-current-ext-md.md)。 但是，如果你配置你的应用程序遵守 cookie 到期时间，你可以以编程方式重新验证用户通过调用 RevalidateUser 方法。 此方法也是有用时从脱机模式切换到联机模式下，因为应用程序可能已关闭期间脱机。      1> [!NOTE]&1;> RevalidateUser 方法只是为了方便。 因为它没有返回值，所以不能指示重新验证是否已失败。 重新验证可能会失败，例如，如果用户凭据在服务器上已发生更改。 在这种情况下，你可能想要包括在服务调用失败之后显式验证用户的代码。 有关详细信息，请参阅中的访问 Web 设置部分[演练︰ 使用客户端应用程序服务](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
