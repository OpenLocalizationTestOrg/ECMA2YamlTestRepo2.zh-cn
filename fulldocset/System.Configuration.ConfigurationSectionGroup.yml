### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationSectionGroup
  id: ConfigurationSectionGroup
  children:
  - System.Configuration.ConfigurationSectionGroup.#ctor
  - System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  - System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  - System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  - System.Configuration.ConfigurationSectionGroup.IsDeclared
  - System.Configuration.ConfigurationSectionGroup.Name
  - System.Configuration.ConfigurationSectionGroup.SectionGroupName
  - System.Configuration.ConfigurationSectionGroup.SectionGroups
  - System.Configuration.ConfigurationSectionGroup.Sections
  - System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSectionGroup.Type
  langs:
  - csharp
  name: ConfigurationSectionGroup
  nameWithType: ConfigurationSectionGroup
  fullName: System.Configuration.ConfigurationSectionGroup
  type: Class
  summary: "表示一组的配置文件中相关章节。"
  remarks: "（如 Web.config 文件中） 的配置文件中设置组织成部分。 由于相关的某些部分，它通常是很方便的做法它们节组中。 ConfigurationSectionGroup 类表示`sectionGroup`时，将使用组的各个部分中定义的 XML 元素`configSections`配置文件元素。 部分组可以嵌套 （节组可以包含其他节组以及部分）。 下面的示例演示`configSections`定义三个嵌套的节组元素︰```   <configSections>     <sectionGroup name=&quot;system.web.extensions&quot;...>       <sectionGroup name=&quot;scripting&quot; ...>         <section name=&quot;scriptResourceHandler&quot;.../>         <sectionGroup name=&quot;webServices&quot;...>           <section name=&quot;jsonSerialization&quot; .../>           <section name=&quot;profileService&quot; ... />        <section name=&quot;authenticationService&quot; .../>           <section name=&quot;roleService&quot; .../>         </sectionGroup>       </sectionGroup>     </sectionGroup>   </configSections>   ```配置系统将设置从配置文件加载到 ConfigurationSectionGroup 对象。 你可以使用<xref:System.Configuration.ConfigurationSectionGroup.Sections%2A>和<xref:System.Configuration.ConfigurationSectionGroup.SectionGroups%2A>属性来访问的部分和 ConfigurationSectionGroup 对象中包含的节组。</xref:System.Configuration.ConfigurationSectionGroup.SectionGroups%2A> </xref:System.Configuration.ConfigurationSectionGroup.Sections%2A>       有关如何从配置文件访问信息的详细信息，请参阅<xref:System.Configuration.ConfigurationManager>类。</xref:System.Configuration.ConfigurationManager>"
  example:
  - "The following example shows how to use the ConfigurationSectionGroup class to retrieve configuration settings. The example is a console application that reads configuration settings and writes information about each configuration section group and the sections in it to the console.  \n  \n The `Main` method loads the configuration settings into a <xref:System.Configuration.Configuration> object, retrieves the <xref:System.Configuration.Configuration.SectionGroups%2A> collection from the <xref:System.Configuration.Configuration> object, and then calls the `ShowSectionGroupCollectionInfo` method to display the section property values.  \n  \n The `ShowSectionGroupCollectionInfo` method iterates through the section groups and calls the `ShowSectionGroupInfo` method for each one.  \n  \n The `ShowSectionGroupInfo` method displays the name of the section group, some property values, and the names of the sections that it contains. If the section group contains section groups, this method calls `ShowSectionGroupCollectionInfo` recursively to display those section groups.  \n  \n The `indentLevel` field is used to add spaces to the left side of displayed lines to show logical groupings. All lines are limited to 79 characters of text to avoid line wrapping, which would make it harder to distinguish the logical groupings.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#1](~/add/codesnippet/csharp/t-system.configuration.c_13_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#1](~/add/codesnippet/visualbasic/t-system.configuration.c_13_1.vb)]"
  syntax:
    content: public class ConfigurationSectionGroup
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ConfigurationSectionGroup()
  nameWithType: ConfigurationSectionGroup.ConfigurationSectionGroup()
  fullName: System.Configuration.ConfigurationSectionGroup.ConfigurationSectionGroup()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>类。"
  syntax:
    content: public ConfigurationSectionGroup ();
    parameters: []
  overload: System.Configuration.ConfigurationSectionGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: ConfigurationSectionGroup.ForceDeclaration()
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "强制此声明<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: "ForceDeclaration 方法可以强制<xref:System.Configuration.ConfigurationSectionGroup>对象写入配置文件，即使它它们并不需要，因为它已在父文件中声明。</xref:System.Configuration.ConfigurationSectionGroup>"
  example:
  - "The following code example shows how to use the ForceDeclaration method.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#12](~/add/codesnippet/csharp/m-system.configuration.c_2_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#12](~/add/codesnippet/visualbasic/m-system.configuration.c_2_1.vb)]"
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: ConfigurationSectionGroup.ForceDeclaration(Boolean)
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "强制此声明<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: "<xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A>方法强制将此<xref:System.Configuration.ConfigurationSectionGroup>声明，以写入到文件中，如果`force`是`true`。</xref:System.Configuration.ConfigurationSectionGroup> </xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A> 如果`force`是`false`，可能会忽略此操作，如果<xref:System.Configuration.ConfigurationSectionGroup>对象必须由系统。</xref:System.Configuration.ConfigurationSectionGroup>       ForceDeclaration 方法可以强制<xref:System.Configuration.ConfigurationSectionGroup>对象写入配置文件，即使它它们并不需要，因为它已在父文件中声明。</xref:System.Configuration.ConfigurationSectionGroup> 此外，它可以删除组从配置文件如果不需要组。       你可能想要使用 ForceDeclaration 方法来使配置文件更易于移植从一台计算机到另一个，而无需担心是否组声明已存在。"
  example:
  - "The following code example shows how to use the ForceDeclaration method.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#13](~/add/codesnippet/csharp/f92da3b4-5d48-496e-83f1-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#13](~/add/codesnippet/visualbasic/f92da3b4-5d48-496e-83f1-_1.vb)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象必须写入该文件; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Configuration.ConfigurationSectionGroup\"></xref> object is the root section group.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationSectionGroup\"></xref> object has a location."
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: ConfigurationSectionGroup.IsDeclarationRequired
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象声明是必需的。"
  remarks: ''
  example:
  - "The following code example determines whether this instance of the <xref:System.Configuration.ConfigurationSectionGroup> declaration is required.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#5](~/add/codesnippet/csharp/p-system.configuration.c_58_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#5](~/add/codesnippet/visualbasic/p-system.configuration.c_58_1.vb)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>声明是必选的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclared
  id: IsDeclared
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: IsDeclared
  nameWithType: ConfigurationSectionGroup.IsDeclared
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>声明对象。"
  remarks: "如果在配置文件中声明了节组，IsDeclared 属性返回`true`。       IsDeclared 属性返回`false`如果本节继承自 Machine.config 或父配置文件。"
  example:
  - "The following code example determines whether this instance of <xref:System.Configuration.ConfigurationSectionGroup> is declared. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#6](~/add/codesnippet/csharp/p-system.configuration.c_1_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#6](~/add/codesnippet/visualbasic/p-system.configuration.c_1_1.vb)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>声明; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationSectionGroup.IsDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.Name
  id: Name
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationSectionGroup.Name
  fullName: System.Configuration.ConfigurationSectionGroup.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取此的名称属性<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: "名称属性值将不包含父节组部分组的名称。"
  example:
  - "The following code example shows how to display the name of this instance of the <xref:System.Configuration.ConfigurationSectionGroup> class. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#3](~/add/codesnippet/csharp/p-system.configuration.c_52_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#3](~/add/codesnippet/visualbasic/p-system.configuration.c_52_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "此名称属性<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  overload: System.Configuration.ConfigurationSectionGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  id: SectionGroupName
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: SectionGroupName
  nameWithType: ConfigurationSectionGroup.SectionGroupName
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取与此关联的部分组名称<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;> </xref>。"
  remarks: "SectionGroupName 属性值是包括父组一节的节组的完整路径名称..."
  example:
  - "The following code example shows how to display the name of this instance of the <xref:System.Configuration.ConfigurationSectionGroup> class. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#11](~/add/codesnippet/csharp/p-system.configuration.c_35_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#11](~/add/codesnippet/visualbasic/p-system.configuration.c_35_1.vb)]"
  syntax:
    content: public string SectionGroupName { get; }
    return:
      type: System.String
      description: "此节组名称<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  overload: System.Configuration.ConfigurationSectionGroup.SectionGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroups
  id: SectionGroups
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: SectionGroups
  nameWithType: ConfigurationSectionGroup.SectionGroups
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroups
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.ConfigurationSectionGroupCollection&quot;></xref>对象，其中包含所有<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象的子级的这<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example shows how to access the SectionGroups property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#8](~/add/codesnippet/csharp/p-system.configuration.c_39_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#8](~/add/codesnippet/visualbasic/p-system.configuration.c_39_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroupCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationSectionGroupCollection&quot;> </xref>对象，其中包含所有<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象的子级的这<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  overload: System.Configuration.ConfigurationSectionGroup.SectionGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.Sections
  id: Sections
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Sections
  nameWithType: ConfigurationSectionGroup.Sections
  fullName: System.Configuration.ConfigurationSectionGroup.Sections
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取<xref href=&quot;System.Configuration.ConfigurationSectionCollection&quot;></xref>对象，其中包含的所有<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>对象在此<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example shows how to access the Sections property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#7](~/add/codesnippet/csharp/p-system.configuration.c_17_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#7](~/add/codesnippet/visualbasic/p-system.configuration.c_17_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionCollection Sections { get; }
    return:
      type: System.Configuration.ConfigurationSectionCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationSectionCollection&quot;> </xref>对象，其中包含所有<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>对象在此<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  overload: System.Configuration.ConfigurationSectionGroup.Sections*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  id: ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指示是否当前<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>配置对象层次结构进行序列化指定的目标版本时，实例应进行序列化[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。"
  remarks: "为创建每个配置节组[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]和更高版本必须显式重写此方法并返回`true`，但只有部分组是有效的指定版本[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 对于的早期版本创建的现有配置节组[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]无需更改。       基类型包含始终返回此方法的默认实现`true`。 换而言之，如果配置节组实施者不重写此方法，默认情况下配置节组将为进行序列化所有 framework 版本。"
  syntax:
    content: protected virtual bool ShouldSerializeSectionGroupInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);
    parameters:
    - id: targetFramework
      type: System.Runtime.Versioning.FrameworkName
      description: "目标版本[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应序列化当前的节组;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationSectionGroup.Type
  id: Type
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Type
  nameWithType: ConfigurationSectionGroup.Type
  fullName: System.Configuration.ConfigurationSectionGroup.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "获取或设置此类型<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  remarks: "如果此实例的<xref:System.Configuration.ConfigurationSectionGroup>类是派生的类型，类型属性将返回扩展<xref:System.Configuration.ConfigurationSectionGroup>类</xref:System.Configuration.ConfigurationSectionGroup>的派生类型的名称</xref:System.Configuration.ConfigurationSectionGroup>"
  example:
  - "The following code example shows how to use the Type property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!code-cs[System.Configuration.ConfigurationSectionGroup#4](~/add/codesnippet/csharp/p-system.configuration.c_60_1.cs)]\n [!code-vb[System.Configuration.ConfigurationSectionGroup#4](~/add/codesnippet/visualbasic/p-system.configuration.c_60_1.vb)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "此类型<xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref>对象。"
  overload: System.Configuration.ConfigurationSectionGroup.Type*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Configuration.ConfigurationSectionGroup\"></xref> object is the root section group.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationSectionGroup\"></xref> object has a location."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "已在另一级别定义的部分或组。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationSectionGroup.#ctor
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ConfigurationSectionGroup()
  nameWithType: ConfigurationSectionGroup.ConfigurationSectionGroup()
  fullName: System.Configuration.ConfigurationSectionGroup.ConfigurationSectionGroup()
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ForceDeclaration()
  nameWithType: ConfigurationSectionGroup.ForceDeclaration()
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration()
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: ConfigurationSectionGroup.ForceDeclaration(Boolean)
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: ConfigurationSectionGroup.IsDeclarationRequired
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclared
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclared
  nameWithType: ConfigurationSectionGroup.IsDeclared
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclared
- uid: System.Configuration.ConfigurationSectionGroup.Name
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Name
  nameWithType: ConfigurationSectionGroup.Name
  fullName: System.Configuration.ConfigurationSectionGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroupName
  nameWithType: ConfigurationSectionGroup.SectionGroupName
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroupName
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroups
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroups
  nameWithType: ConfigurationSectionGroup.SectionGroups
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroups
- uid: System.Configuration.ConfigurationSectionGroupCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroupCollection
  nameWithType: ConfigurationSectionGroupCollection
  fullName: System.Configuration.ConfigurationSectionGroupCollection
- uid: System.Configuration.ConfigurationSectionGroup.Sections
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Sections
  nameWithType: ConfigurationSectionGroup.Sections
  fullName: System.Configuration.ConfigurationSectionGroup.Sections
- uid: System.Configuration.ConfigurationSectionCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionCollection
  nameWithType: ConfigurationSectionCollection
  fullName: System.Configuration.ConfigurationSectionCollection
- uid: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.ConfigurationSectionGroup.Type
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Type
  nameWithType: ConfigurationSectionGroup.Type
  fullName: System.Configuration.ConfigurationSectionGroup.Type
- uid: System.Configuration.ConfigurationSectionGroup.#ctor*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ConfigurationSectionGroup
  nameWithType: ConfigurationSectionGroup.ConfigurationSectionGroup
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ForceDeclaration
  nameWithType: ConfigurationSectionGroup.ForceDeclaration
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: ConfigurationSectionGroup.IsDeclarationRequired
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclared*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclared
  nameWithType: ConfigurationSectionGroup.IsDeclared
- uid: System.Configuration.ConfigurationSectionGroup.Name*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Name
  nameWithType: ConfigurationSectionGroup.Name
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroupName*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroupName
  nameWithType: ConfigurationSectionGroup.SectionGroupName
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroups*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroups
  nameWithType: ConfigurationSectionGroup.SectionGroups
- uid: System.Configuration.ConfigurationSectionGroup.Sections*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Sections
  nameWithType: ConfigurationSectionGroup.Sections
- uid: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ShouldSerializeSectionGroupInTargetVersion
  nameWithType: ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion
- uid: System.Configuration.ConfigurationSectionGroup.Type*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Type
  nameWithType: ConfigurationSectionGroup.Type
