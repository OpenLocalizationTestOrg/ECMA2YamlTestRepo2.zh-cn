### YamlMime:ManagedReference
items:
- uid: System.Activities.RuntimeTransactionHandle
  id: RuntimeTransactionHandle
  children:
  - System.Activities.RuntimeTransactionHandle.#ctor
  - System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  - System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.SuppressTransaction
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  langs:
  - csharp
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle
  fullName: System.Activities.RuntimeTransactionHandle
  type: Class
  summary: "提供对工作流实例中运行时事务的访问。"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback
  inheritance:
  - System.Object
  - System.Activities.Handle
  implements:
  - System.Activities.IExecutionProperty
  - System.Activities.IPropertyRegistrationCallback
  inheritedMembers:
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  id: '#ctor'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "初始化的新实例<xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;></xref>类。"
  syntax:
    content: public RuntimeTransactionHandle ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "初始化的新实例<xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;></xref>类使用指定的根事务。"
  syntax:
    content: public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);
    parameters:
    - id: rootTransaction
      type: System.Transactions.Transaction
      description: "根事务。"
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  id: AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置指示是否应放弃工作流实例，如果事务失败。"
  remarks: "如果 AbortInstanceOnTransactionFailure `false`，事务失败将导致无法作为正常传播异常。 默认值为 AbortInstanceOnTransactionFailure `true`。"
  syntax:
    content: public bool AbortInstanceOnTransactionFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应中止工作流实例，如果事务失败;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  id: CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "完成当前的运行时事务。"
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "当前的执行环境。"
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  id: CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "完成当前的运行时事务，并在事务完成时安排书签回调。"
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "当前的执行环境。"
    - id: callback
      type: System.Activities.BookmarkCallback
      description: "完成事务后调用的书签回调。"
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  id: GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回对当前的运行时事务的引用。"
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "当前的执行环境。"
    return:
      type: System.Transactions.Transaction
      description: "当前事务。"
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  id: GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回对当前的运行时事务的引用。"
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "当前的执行环境。"
    return:
      type: System.Transactions.Transaction
      description: "当前事务。"
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  id: GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回对当前的运行时事务的引用。"
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "当前的执行环境。"
    return:
      type: System.Transactions.Transaction
      description: "当前的运行时事务。"
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "要添加。"
  overload: System.Activities.RuntimeTransactionHandle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "要添加。"
  overload: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "开始创建<xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;></xref>供新事务。"
  remarks: "此方法是当活动创建一个新的事务供运行时使用。 工作流可能会保留一个或多个时间之前调用回调。 此方法允许在多个分支的并行排队等候同时进行的请求，而不会阻止对方继续完成事务的事务范围。 若要避免错误，如果工作流仍然存在，请确保可序列化状态对象。"
  syntax:
    content: public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "当前的执行环境。"
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "该方法时要调用<xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;></xref>创建。"
    - id: state
      type: System.Object
      description: "可选用户提供的状态，其中包含有关请求的信息。"
  overload: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "开始创建<xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;></xref>供现有事务。"
  remarks: "当活动具有它需要运行时使用的事务，使用此方法。 工作流不能对 RequireTransactionContext 的调用和后续回调之间持久保存。 不允许在第一个调用完成之前再次调用 RequireTransactionContext 并在第一次调用之后的所有调用都导致异常。 此方法允许从主机提供给运行时不会面临中间出现持久点的风险流入的事务。 因为实例保证不会继续保留使用此方法时，可以进行序列化的状态对象不需要。"
  syntax:
    content: public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "当前的执行环境。"
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "该方法时要调用<xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;></xref>创建。"
    - id: state
      type: System.Object
      description: "可选用户提供的状态，其中包含有关请求的信息。"
  overload: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  id: SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取或设置一个值，该值指示是否取消此运行时事务。"
  syntax:
    content: public bool SuppressTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果取消运行时事务;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  id: System#Activities#IExecutionProperty#CleanupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "有关此成员的说明，请参阅&lt;xref:System.Activities.IExecutionProperty.CleanupWorkflowThread%2A?displayProperty=fullName&gt;。"
  syntax:
    content: void IExecutionProperty.CleanupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  id: System#Activities#IExecutionProperty#SetupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "有关此成员的说明，请参阅&lt;xref:System.Activities.IExecutionProperty.SetupWorkflowThread%2A?displayProperty=fullName&gt;。"
  syntax:
    content: void IExecutionProperty.SetupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "有关此成员的说明，请参阅<xref:System.Activities.IPropertyRegistrationCallback.Register*>。</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  syntax:
    content: void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "此参数的说明，请参阅<xref:System.Activities.IPropertyRegistrationCallback.Register*>。</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "有关此成员的说明，请参阅<xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>。</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  syntax:
    content: void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "此参数的说明，请参阅<xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>。</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Handle
  isExternal: false
  name: System.Activities.Handle
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
- uid: System.Activities.BookmarkCallback
  parent: System.Activities
  isExternal: false
  name: BookmarkCallback
  nameWithType: BookmarkCallback
  fullName: System.Activities.BookmarkCallback
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
  parent: System
  isExternal: true
  name: Action<NativeActivityTransactionContext,Object>
  nameWithType: Action<NativeActivityTransactionContext,Object>
  fullName: System.Action<System.Activities.NativeActivityTransactionContext,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.NativeActivityTransactionContext,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.NativeActivityTransactionContext
    name: NativeActivityTransactionContext
    nameWithType: NativeActivityTransactionContext
    fullName: NativeActivityTransactionContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
- uid: System.Activities.RegistrationContext
  parent: System.Activities
  isExternal: false
  name: RegistrationContext
  nameWithType: RegistrationContext
  fullName: System.Activities.RegistrationContext
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
- uid: System.Activities.RuntimeTransactionHandle.#ctor*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction
  nameWithType: RuntimeTransactionHandle.CompleteTransaction
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize
  nameWithType: RuntimeTransactionHandle.OnInitialize
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize
  nameWithType: RuntimeTransactionHandle.OnUninitialize
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister
