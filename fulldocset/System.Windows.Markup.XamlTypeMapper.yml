### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlTypeMapper
  id: XamlTypeMapper
  children:
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  - System.Windows.Markup.XamlTypeMapper.DefaultMapper
  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  langs:
  - csharp
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
  type: Class
  summary: "将 XAML 元素名称映射到相应的 CLR<xref:System.Type>的程序集中。</xref:System.Type>"
  remarks: "XamlTypeMapper 是提供备用上下文<xref:System.Windows.Markup.XamlReader>和<xref:System.Windows.Markup.XamlWriter>。</xref:System.Windows.Markup.XamlWriter></xref:System.Windows.Markup.XamlReader>高级 WPF 方案的一部分 有关[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]WPF 应用程序，你应考虑重写<xref:System.Xaml.XamlSchemaContext>此方案中，而不尝试使用 XamlTypeMapper。</xref:System.Xaml.XamlSchemaContext>       XamlTypeMapper 可以用于通过比的应用程序的更直接技术的自定义映射信息与提供 XAML 分析器<xref:System.Windows.Markup.XmlnsDefinitionAttribute>上的程序集代码的值。</xref:System.Windows.Markup.XmlnsDefinitionAttribute> 这可能很有用︰ 合并的程序集中的所有 CLR 命名空间; 二是引用类型包含 XAML 准备就绪，可以在现有程序集而无需重新编译它只是为了增加<xref:System.Windows.Markup.XmlnsDefinitionAttribute>归。</xref:System.Windows.Markup.XmlnsDefinitionAttribute>       你通常创建 XamlTypeMapper 实例，以便指定<xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>一种<xref:System.Windows.Markup.ParserContext>。</xref:System.Windows.Markup.ParserContext>的属性值</xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> <xref:System.Windows.Markup.ParserContext>反过来可用作的上下文<xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>调用。</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName> </xref:System.Windows.Markup.ParserContext>      ## 默认映射器你可以获取默认映射程序使用<xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>静态属性。</xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 默认映射器仅适用于默认程序集列表。 使用有关程序集 （如在 XamlTypeMapper 构造函数中指定） 没有特定信息。      <a name=&quot;xamlTextUsage_XamlTypeMapper&quot;></a># # XAML 文本用法"
  syntax:
    content: public class XamlTypeMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新实例<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>通过指定一个程序集的字符串数组的类名<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>应使用。"
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "程序集名称的数组<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>应使用。"
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新实例<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>类，使用指定的程序集名称数组，并将指定的命名空间映射。"
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "程序集名称的数组<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>应使用。"
    - id: namespaceMaps
      type: System.Windows.Markup.NamespaceMapEntry[]
      description: "命名空间映射数组<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>应使用。"
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  id: AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "在程序集中，定义 XML 命名空间和 CLR 命名空间之间的映射，并将它们添加到<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>信息。"
  remarks: "AddMappingProcessingInstruction 是以编程方式添加映射。  例如，下面的 XAML 映射指令的不同部分对应于 AddMappingProcessingInstruction 的参数︰ ```   <Window xmlns:SDK=&quot;clr-namespace:Samples;assembly=SDKSamples&quot;>   ...   ``` `xmlNamespace`是`SDK`、`clrNamespace`是`Samples`，和`assemblyName`是`SDKSamples`。"
  syntax:
    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "XML 命名空间的前缀..."
    - id: clrNamespace
      type: System.String
      description: "包含要映射的类型的 CLR 命名空间。"
    - id: assemblyName
      type: System.String
      description: "包含的 CLR 命名空间的程序集。"
  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>clrNamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  id: AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "请求权限<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>派生在完全信任以访问特定的内部类型下调用的类型。"
  remarks: "如果没有重写子类，始终返回 AllowInternalType `false`。       行为由子类中重写时, 应不应返回 AllowInternalType`true`如果内部类型可以访问; 否则为`false`。"
  syntax:
    content: protected virtual bool AllowInternalType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要访问的类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以访问的内部类型;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  id: DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "获取实例<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>使用如果尚未指定。"
  remarks: "默认映射器仅适用于默认程序集列表。 有关程序集没有特定信息 (如中指定<xref:System.Windows.Markup.XamlTypeMapper>构造函数) 使用。</xref:System.Windows.Markup.XamlTypeMapper> 在当前实现中的默认程序集列表是︰ `WindowsBase`， `PresentationCore`， `PresentationFramework`。       使用默认映射器并不意味着，你根本无法使用自定义的程序集类型在 XAML 中使用。 它仅意味着如果你使用自定义类型/程序集，你必须再使用作为映射创建传统的 XAML 技术`xmlns`每个 XAML 页面，其中引用类型/程序集，而不是类型映射器 API 中的属性。 有关详细信息，请参阅[XAML 命名空间和 Namespace 映射为 WPF XAML](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }
    return:
      type: System.Windows.Markup.XamlTypeMapper
      description: "默认类型映射器。"
  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "获取 CLR<xref:System.Type>给定的 XAML 元素映射到，使用指定的 XML 命名空间前缀和元素名称。</xref:System.Type>"
  remarks: "如果无法找到一种类型，映射到提供的信息，`null`返回。       不作为的一部分包括前缀`localName`。 对于任何前缀 XAML 元素的信息，将其分隔成`xmlNamespace`和`localName`此 API 调用的组件。"
  syntax:
    content: public Type GetType (string xmlNamespace, string localName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "指定的 XML 命名空间前缀。"
    - id: localName
      type: System.String
      description: "若要获取映射的<xref:System.Type>为</xref:System.Type>XAML 元素的&quot;本地&quot;名称 在此上下文中的本地意味着映射而非提供`xmlNamespace`。"
    return:
      type: System.Type
      description: "<xref:System.Type>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果没有映射无法解析。</xref:System.Type>"
  overload: System.Windows.Markup.XamlTypeMapper.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>localName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  id: SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "指定要使用时加载的程序集的路径。"
  syntax:
    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);
    parameters:
    - id: assemblyName
      type: System.String
      description: "没有使用扩展或指定路径的程序集的短名称 (等效于&lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;)。"
    - id: assemblyPath
      type: System.String
      description: "程序集的文件路径。 程序集路径必须是包含文件扩展名的文件的完整文件路径。"
  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyPath</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Windows.Markup.XamlParseException
    commentId: T:System.Windows.Markup.XamlParseException
    description: "<code>assemblyName</code>是<xref:System.String>-<code>assemblyPath</code>是<xref:System.String>-或-<code>assemblyPath</code>不是包含文件扩展名的文件的完整文件路径。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.XamlParseException
  parent: System.Windows.Markup
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Windows.Markup.XamlParseException
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
- uid: System.Windows.Markup.NamespaceMapEntry[]
  parent: System.Windows.Markup
  isExternal: false
  name: NamespaceMapEntry
  nameWithType: NamespaceMapEntry
  fullName: System.Windows.Markup.NamespaceMapEntry[]
  spec.csharp:
  - uid: System.Windows.Markup.NamespaceMapEntry
    name: NamespaceMapEntry
    nameWithType: NamespaceMapEntry
    fullName: NamespaceMapEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper
  parent: System.Windows.Markup
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.#ctor*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType
  nameWithType: XamlTypeMapper.AllowInternalType
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType
  nameWithType: XamlTypeMapper.GetType
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath
  nameWithType: XamlTypeMapper.SetAssemblyPath
