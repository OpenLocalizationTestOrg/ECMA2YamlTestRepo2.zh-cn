### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementEventWatcher
  id: ManagementEventWatcher
  children:
  - System.Management.ManagementEventWatcher.#ctor
  - System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.EventArrived
  - System.Management.ManagementEventWatcher.Finalize
  - System.Management.ManagementEventWatcher.Options
  - System.Management.ManagementEventWatcher.Query
  - System.Management.ManagementEventWatcher.Scope
  - System.Management.ManagementEventWatcher.Start
  - System.Management.ManagementEventWatcher.Stop
  - System.Management.ManagementEventWatcher.Stopped
  - System.Management.ManagementEventWatcher.WaitForNextEvent
  langs:
  - csharp
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher
  fullName: System.Management.ManagementEventWatcher
  type: Class
  summary: "基于指定的临时事件通知订阅*事件查询*。"
  remarks: ''
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher#1](~/add/codesnippet/visualbasic/t-system.management.mana_3_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher#1](~/add/codesnippet/csharp/t-system.management.mana_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class ManagementEventWatcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor
  id: '#ctor'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>类。 进一步初始化，在对象上设置的属性。 这是默认构造函数。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher()#1](~/add/codesnippet/csharp/m-system.management.mana_12_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher()#1](~/add/codesnippet/visualbasic/m-system.management.mana_12_1.vb)]"
  syntax:
    content: public ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  id: '#ctor(System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>类在给定 WMI*事件查询*。"
  remarks: "观察程序将侦听的事件的命名空间是当前设置的默认命名空间。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/visualbasic/c0e026ca-897f-4f5f-a9bd-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/csharp/c0e026ca-897f-4f5f-a9bd-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.EventQuery query);
    parameters:
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref>表示 WMI 事件查询，用于确定为其观察程序将侦听的事件。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>类在给定 WMI*事件查询*中以字符串的形式。"
  remarks: "观察程序将侦听的事件的命名空间是当前设置的默认命名空间。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/csharp/m-system.management.mana_6_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/visualbasic/m-system.management.mana_6_1.vb)]"
  syntax:
    content: public ManagementEventWatcher (string query);
    parameters:
    - id: query
      type: System.String
      description: "WMI 事件查询，定义为其观察程序将侦听的事件。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope,EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>侦听符合给定的 WMI 事件的类*事件查询*。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/visualbasic/b5f1fa53-1f6d-471d-aeed-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/csharp/b5f1fa53-1f6d-471d-aeed-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: "A <xref href=&quot;System.Management.ManagementScope&quot;> </xref>表示在其中观察程序将侦听事件的范围 （命名空间）。"
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref>表示 WMI 事件查询，用于确定为其观察程序将侦听的事件。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String,String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>侦听符合给定的 WMI 事件的类*事件查询*。 对于此变体，查询和作用域指定为字符串。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/visualbasic/ecd7dbbd-83ad-4ab8-8132-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/csharp/ecd7dbbd-83ad-4ab8-8132-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query);
    parameters:
    - id: scope
      type: System.String
      description: "管理作用域 （命名空间） 在其中观察程序将侦听事件。"
    - id: query
      type: System.String
      description: "定义为其观察程序将侦听的事件的查询。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>侦听符合给定的 WMI 事件查询，根据指定的选项的事件的类。 对于此变体，查询和作用域为指定的对象。 Options 对象可以指定如超时和上下文信息的选项。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/visualbasic/883600df-4ae0-4065-84b0-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/csharp/883600df-4ae0-4065-84b0-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: "A <xref href=&quot;System.Management.ManagementScope&quot;> </xref>表示在其中观察程序将侦听事件的范围 （命名空间）。"
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref>表示 WMI 事件查询，用于确定为其观察程序将侦听的事件。"
    - id: options
      type: System.Management.EventWatcherOptions
      description: "<xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref>表示用于监视事件的其他选项。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  id: '#ctor(System.String,System.String,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String,String,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementEventWatcher&quot;></xref>侦听符合给定的 WMI 事件的类*事件查询*，根据指定的选项。 对于此变体，查询和作用域指定为字符串。 Options 对象可以指定如超时和上下文信息的选项。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/csharp/d5abf6b1-ec23-4c92-b0e0-_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/visualbasic/d5abf6b1-ec23-4c92-b0e0-_1.vb)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.String
      description: "管理作用域 （命名空间） 在其中观察程序将侦听事件。"
    - id: query
      type: System.String
      description: "定义为其观察程序将侦听的事件的查询。"
    - id: options
      type: System.Management.EventWatcherOptions
      description: "<xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref>表示用于监视事件的其他选项。"
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.EventArrived
  id: EventArrived
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: System.Management.ManagementEventWatcher.EventArrived
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "一个新的事件到达时发生。"
  remarks: "##事件数据的事件处理程序接收类型的自变量<xref:System.Management.EventArrivedEventArgs>包含数据与此事件。</xref:System.Management.EventArrivedEventArgs> 以下<xref:System.Management.EventArrivedEventArgs>属性提供了特定于此事件的信息。</xref:System.Management.EventArrivedEventArgs>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Management.ManagementEventArgs.Context%2A>（继承自<xref:System.Management.ManagementEventArgs>） |获取从触发了事件的操作返回的操作上下文回显。 |  |<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|获取已传递的 WMI 事件。 |     # #.NET framework 安全完全信任直接调用方。</xref:System.Management.EventArrivedEventArgs.NewEvent%2A> </xref:System.Management.ManagementEventArgs> </xref:System.Management.ManagementEventArgs.Context%2A> 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Management.EventArrivedEventHandler EventArrived;
    return:
      type: System.Management.EventArrivedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Finalize
  id: Finalize
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: System.Management.ManagementEventWatcher.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "确保未处理的调用，会清除。 这是对象的析构函数。 在 C# 中，使用析构函数语法表示终结器。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: ~ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Options
  id: Options
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: System.Management.ManagementEventWatcher.Options
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取或设置选项，用于监视事件。"
  remarks: "##属性值选项，用于监视事件。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/csharp/p-system.management.mana_15_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/visualbasic/p-system.management.mana_15_1.vb)]"
  syntax:
    content: public System.Management.EventWatcherOptions Options { get; set; }
    return:
      type: System.Management.EventWatcherOptions
      description: "返回<xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref> ，它包含用于监视事件事件选项。"
  overload: System.Management.ManagementEventWatcher.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Query
  id: Query
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: System.Management.ManagementEventWatcher.Query
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取或设置要应用于事件的条件。"
  remarks: "##属性值的条件的事件，应用于等同于*事件查询*。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/csharp/p-system.management.mana_3_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/visualbasic/p-system.management.mana_3_1.vb)]"
  syntax:
    content: public System.Management.EventQuery Query { get; set; }
    return:
      type: System.Management.EventQuery
      description: "返回<xref href=&quot;System.Management.EventQuery&quot;> </xref> ，其中包含要应用于事件的查询。"
  overload: System.Management.ManagementEventWatcher.Query*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Scope
  id: Scope
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: System.Management.ManagementEventWatcher.Scope
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取或设置要在其中监视的事件 （命名空间或范围） 的作用域。"
  remarks: "##属性值都要监视的事件 （命名空间或范围） 的范围。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/visualbasic/p-system.management.mana_4_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/csharp/p-system.management.mana_4_1.cs)]"
  syntax:
    content: public System.Management.ManagementScope Scope { get; set; }
    return:
      type: System.Management.ManagementScope
      description: "返回<xref href=&quot;System.Management.ManagementScope&quot;></xref>包含范围要在其中监视的事件。"
  overload: System.Management.ManagementEventWatcher.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Start
  id: Start
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: System.Management.ManagementEventWatcher.Start()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "使用给定查询的事件订阅，并提供它们，以异步方式，通过<xref href=&quot;System.Management.ManagementEventWatcher.EventArrived&quot;></xref>事件。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Stop
  id: Stop
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: System.Management.ManagementEventWatcher.Stop()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "它是同步还是异步取消的订阅。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/csharp/m-system.management.mana_8_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/visualbasic/m-system.management.mana_8_1.vb)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Stopped
  id: Stopped
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: System.Management.ManagementEventWatcher.Stopped
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "当取消订阅时出现。"
  remarks: "##事件数据的事件处理程序接收类型的自变量<xref:System.Management.StoppedEventArgs>包含数据与此事件。</xref:System.Management.StoppedEventArgs> 以下<xref:System.Management.StoppedEventArgs>属性提供了特定于此事件的信息。</xref:System.Management.StoppedEventArgs>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Management.ManagementEventArgs.Context%2A>（继承自<xref:System.Management.ManagementEventArgs>） |获取从触发了事件的操作返回的操作上下文回显。 |  |<xref:System.Management.StoppedEventArgs.Status%2A>|获取该操作的完成状态。 |     # #.NET framework 安全完全信任直接调用方。</xref:System.Management.StoppedEventArgs.Status%2A> </xref:System.Management.ManagementEventArgs> </xref:System.Management.ManagementEventArgs.Context%2A> 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Management.StoppedEventHandler Stopped;
    return:
      type: System.Management.StoppedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  id: WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: System.Management.ManagementEventWatcher.WaitForNextEvent()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "等待下一个事件匹配到达时，指定的查询，然后又返回它。"
  remarks: "如果事件观察程序对象包含与指定的超时时间的选项，API 将等待下一个事件仅为指定的时间; 量否则，将阻止 API，直到发生下一个事件。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the WaitForNextEvent method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/csharp/m-system.management.mana_11_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/visualbasic/m-system.management.mana_11_1.vb)]"
  syntax:
    content: public System.Management.ManagementBaseObject WaitForNextEvent ();
    parameters: []
    return:
      type: System.Management.ManagementBaseObject
      description: "A <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref>表示刚到达的事件。"
  overload: System.Management.ManagementEventWatcher.WaitForNextEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Management.ManagementEventWatcher.#ctor
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher()
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(EventQuery)
- uid: System.Management.EventQuery
  parent: System.Management
  isExternal: false
  name: EventQuery
  nameWithType: EventQuery
  fullName: System.Management.EventQuery
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope,EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
- uid: System.Management.ManagementScope
  parent: System.Management
  isExternal: false
  name: ManagementScope
  nameWithType: ManagementScope
  fullName: System.Management.ManagementScope
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String,String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String)
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
- uid: System.Management.EventWatcherOptions
  parent: System.Management
  isExternal: false
  name: EventWatcherOptions
  nameWithType: EventWatcherOptions
  fullName: System.Management.EventWatcherOptions
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String,String,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
- uid: System.Management.ManagementEventWatcher.EventArrived
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: System.Management.ManagementEventWatcher.EventArrived
- uid: System.Management.EventArrivedEventHandler
  parent: System.Management
  isExternal: false
  name: EventArrivedEventHandler
  nameWithType: EventArrivedEventHandler
  fullName: System.Management.EventArrivedEventHandler
- uid: System.Management.ManagementEventWatcher.Finalize
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: System.Management.ManagementEventWatcher.Finalize()
- uid: System.Management.ManagementEventWatcher.Options
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: System.Management.ManagementEventWatcher.Options
- uid: System.Management.ManagementEventWatcher.Query
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: System.Management.ManagementEventWatcher.Query
- uid: System.Management.ManagementEventWatcher.Scope
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: System.Management.ManagementEventWatcher.Scope
- uid: System.Management.ManagementEventWatcher.Start
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: System.Management.ManagementEventWatcher.Start()
- uid: System.Management.ManagementEventWatcher.Stop
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: System.Management.ManagementEventWatcher.Stop()
- uid: System.Management.ManagementEventWatcher.Stopped
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: System.Management.ManagementEventWatcher.Stopped
- uid: System.Management.StoppedEventHandler
  parent: System.Management
  isExternal: false
  name: StoppedEventHandler
  nameWithType: StoppedEventHandler
  fullName: System.Management.StoppedEventHandler
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: System.Management.ManagementEventWatcher.WaitForNextEvent()
- uid: System.Management.ManagementBaseObject
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject
- uid: System.Management.ManagementEventWatcher.#ctor*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher.ManagementEventWatcher
- uid: System.Management.ManagementEventWatcher.Finalize*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize
  nameWithType: ManagementEventWatcher.Finalize
- uid: System.Management.ManagementEventWatcher.Options*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
- uid: System.Management.ManagementEventWatcher.Query*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
- uid: System.Management.ManagementEventWatcher.Scope*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
- uid: System.Management.ManagementEventWatcher.Start*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start
  nameWithType: ManagementEventWatcher.Start
- uid: System.Management.ManagementEventWatcher.Stop*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop
  nameWithType: ManagementEventWatcher.Stop
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent
  nameWithType: ManagementEventWatcher.WaitForNextEvent
