### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.IssuerTokenResolver
  id: IssuerTokenResolver
  children:
  - System.IdentityModel.Tokens.IssuerTokenResolver.#ctor
  - System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation
  - System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName
  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver
  langs:
  - csharp
  name: IssuerTokenResolver
  nameWithType: IssuerTokenResolver
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver
  type: Class
  summary: "从服务合作伙伴收到解析颁发者令牌。"
  syntax:
    content: 'public class IssuerTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: IssuerTokenResolver()
  nameWithType: IssuerTokenResolver.IssuerTokenResolver()
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.IssuerTokenResolver()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.IssuerTokenResolver&quot;></xref>类。"
  remarks: "默认情况下，初始化新实例，它与<xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver>使用默认存储 (LM。TrustedPeople)。</xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver>        //"
  syntax:
    content: public IssuerTokenResolver ();
    parameters: []
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: IssuerTokenResolver(SecurityTokenResolver)
  nameWithType: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.IssuerTokenResolver&quot;></xref>通过使用指定的标记解析程序的类。"
  syntax:
    content: public IssuerTokenResolver (System.IdentityModel.Selectors.SecurityTokenResolver wrappedTokenResolver);
    parameters:
    - id: wrappedTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "安全令牌解析程序要包装的此实例。 集<xref:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*>属性中的新实例。</xref:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*>"
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation
  id: DefaultStoreLocation
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: DefaultStoreLocation
  nameWithType: IssuerTokenResolver.DefaultStoreLocation
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "为解决 X.509 证书的默认存储位置。"
  syntax:
    content: public static readonly System.Security.Cryptography.X509Certificates.StoreLocation DefaultStoreLocation;
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName
  id: DefaultStoreName
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: DefaultStoreName
  nameWithType: IssuerTokenResolver.DefaultStoreName
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "默认解决 X.509 证书的存储。"
  syntax:
    content: public static readonly System.Security.Cryptography.X509Certificates.StoreName DefaultStoreName;
    return:
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "尝试检索在指定的密钥标识符子句中引用的密钥。 （重写基类方法。）"
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "若要检索的密钥的密钥标识符子句。"
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "此方法返回时，包含指定的密钥标识符子句中引用的密钥。 此参数传递时未经初始化。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当检索指定的密钥标识符子句中; 密钥否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "尝试检索与指定的密钥标识符中包含的密钥标识符子句中至少一个匹配的安全令牌。 （重写基类方法。）"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "要创建安全令牌的密钥标识符。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "此方法返回时，包含<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，它表示指定的密钥标识符。 此参数传递时未经初始化。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以为指定的密钥标识符; 检索安全令牌否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，尝试解析与指定的密钥标识符子句相匹配的安全令牌。 （重写基类方法。）"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "要创建安全令牌的密钥标识符子句。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "此方法返回时，包含<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，它表示指定的密钥标识符子句。 此参数传递时未经初始化。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以为指定的密钥标识符子句; 检索安全令牌否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver
  id: WrappedTokenResolver
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  langs:
  - csharp
  name: WrappedTokenResolver
  nameWithType: IssuerTokenResolver.WrappedTokenResolver
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取此实例包装的安全令牌解析。"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenResolver WrappedTokenResolver { get; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "已包装的标记解析程序。"
  overload: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: IssuerTokenResolver()
  nameWithType: IssuerTokenResolver.IssuerTokenResolver()
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.IssuerTokenResolver()
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: IssuerTokenResolver(SecurityTokenResolver)
  nameWithType: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: DefaultStoreLocation
  nameWithType: IssuerTokenResolver.DefaultStoreLocation
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: DefaultStoreName
  nameWithType: IssuerTokenResolver.DefaultStoreName
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: WrappedTokenResolver
  nameWithType: IssuerTokenResolver.WrappedTokenResolver
  fullName: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: IssuerTokenResolver
  nameWithType: IssuerTokenResolver.IssuerTokenResolver
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: IssuerTokenResolver.TryResolveTokenCore
- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*
  parent: System.IdentityModel.Tokens.IssuerTokenResolver
  isExternal: false
  name: WrappedTokenResolver
  nameWithType: IssuerTokenResolver.WrappedTokenResolver
