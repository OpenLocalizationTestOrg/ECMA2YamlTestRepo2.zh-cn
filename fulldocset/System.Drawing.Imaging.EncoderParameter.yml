### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.EncoderParameter
  id: EncoderParameter
  children:
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.Dispose
  - System.Drawing.Imaging.EncoderParameter.Encoder
  - System.Drawing.Imaging.EncoderParameter.Finalize
  - System.Drawing.Imaging.EncoderParameter.NumberOfValues
  - System.Drawing.Imaging.EncoderParameter.Type
  - System.Drawing.Imaging.EncoderParameter.ValueType
  langs:
  - csharp
  name: EncoderParameter
  nameWithType: EncoderParameter
  fullName: System.Drawing.Imaging.EncoderParameter
  type: Class
  summary: "用于将一个值或一个值，数组传递给图像编码器。"
  remarks: "你还可以使用 EncoderParameter 对象收到的支持的特定图像编码器某个特定参数的可能值列表。"
  example:
  - "The following code example demonstrates how to create a EncoderParameter using the <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/t-system.drawing.imaging_0_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/t-system.drawing.imaging_0_2.cs)]"
  syntax:
    content: 'public sealed class EncoderParameter : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一个 8 位无符号的整数。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Byte
      description: "一个 8 位无符号的整数，指定中存储的值<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和 8 位无符号整数的数组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性的数组中的元素数。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Byte[]
      description: "指定存储中的值的 8 位无符号整数数组<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一个 16 位整数。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Int16
      description: "一个指定中存储的值的 16 位整数<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 必须为非负数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和 16 位整数的数组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性的数组中的元素数。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Int16[]
      description: "指定存储中的值的 16 位整数数组<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 整数数组中的必须为非负数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一个 64 位整数。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> （32 位），并将设置<> *1> 属性设置为 1。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.Imaging.EncoderParameter> using the EncoderParameter constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_2.cs)]"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Int64
      description: "一个 64 位整数，它指定中存储的值<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 必须为非负数。 此参数转换为 32 位整数，然后将它存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和 64 位整数的数组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> （32-位），并将设置<> *1> 属性的数组中的元素数。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Int64[]
      description: "指定的值存储在 64 位整数的数组<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 整数数组中的必须为非负数。 64 位整数转换为 32 位整数，然后将它们存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.String)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一个字符串。 字符串转换为以 null 结尾的 ASCII 字符串，然后将它存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性包括 NULL 终止符的 ASCII 字符串的长度。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.String
      description: "A <xref:System.String>，它指定中存储的值<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。</xref:System.String>"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一个 8 位值。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>或<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Byte
      description: "指定的值存储在字节<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
    - id: undefined
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 <> </> *1> 属性设置为<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>; 否则为<> *1> 属性设置为<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和字节数组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>或<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性的数组中的元素数。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: value
      type: System.Byte[]
      description: "指定存储中的值的字节数组<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
    - id: undefined
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 <> </> *1> 属性设置为<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>; 否则为<> *1> 属性设置为<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和 32 位整数的一对。 整数对表示一小部分、 第一个整数为分子和第二个整数为分母。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: numerator
      type: System.Int32
      description: "表示分数分子的 32 位整数。 必须为非负数。"
    - id: denominator
      type: System.Int32
      description: "一个表示分数分母的 32 位整数。 必须为非负数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和两个 32 位整数数组。 这两个数组表示秒的小数部分的数组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性中的元素数<code> numerator </code>数组，它必须是元素的数目相同中<code> denominator </code>数组。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: numerator
      type: System.Int32[]
      description: "指定的分数分子的 32 位整数数组。 整数数组中的必须为非负数。"
    - id: denominator
      type: System.Int32[]
      description: "指定的分数分母的 32 位整数数组。 整数数组中的必须为非负数。 使用相同的索引的分子的对应分母为给定的索引。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和一对 64 位整数。 整数对表示一的系列整数、 要在范围内，最少数量的第一个整数和第二个整数的范围中的最大数目。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: rangebegin
      type: System.Int64
      description: "一个 64 位整数，它表示范围中最少数量的整数。 必须为非负数。 此参数转换为 32 位整数，然后将它存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
    - id: rangeend
      type: System.Int64
      description: "一个 64 位整数，它表示的最大数范围中的整数。 必须为非负数。 此参数转换为 32 位整数，然后将它存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和两个 64 位整数数组。 这两个数组表示一组整数范围。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性中的元素数<code> rangebegin </code>数组，它必须是元素的数目相同中<code> rangeend </code>数组。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: rangebegin
      type: System.Int64[]
      description: "指定整数范围中的最小值的 64 位整数数组。 整数数组中的必须为非负数。 64 位整数转换为 32 位整数，然后将它们存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
    - id: rangeend
      type: System.Int64[]
      description: "指定整数范围中的最大值的 64 位整数数组。 整数数组中的必须为非负数。 64 位整数转换为 32 位整数，然后将它们存储在<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref>对象。 使用相同的索引的最小值的对应给定索引的最大值。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象、 的值数、 数据类型的值，以及指向存储中的值的指针<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: numberValues
      type: System.Int32
      description: "一个整数，指定存储中的值的数目<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>属性设置为此值。</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: type
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "成员<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>指定中存储的值的数据类型的枚举<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 <xref:System.Type>和<xref:System.Drawing.Imaging.EncoderParameter.ValueType*>属性设置为此值。</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: value
      type: System.IntPtr
      description: "指向由指定类型的值的数组的指针`Type`参数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和指定的值，值，以及指向存储中的值的指针的数据类型的数量的三个整数<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: NumberOfValues
      type: System.Int32
      description: "一个整数，指定存储中的值的数目<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>属性设置为此值。</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: Type
      type: System.Int32
      description: "成员<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>指定中存储的值的数据类型的枚举<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 <xref:System.Type>和<xref:System.Drawing.Imaging.EncoderParameter.ValueType*>属性设置为此值。</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: Value
      type: System.Int32
      description: "指向由指定类型的值的数组的指针`Type`参数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "类型不是有效<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>。"
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和四个 32 位整数。 四个整数表示一个分数范围。 前两个整数表示在范围内，最小的分数，剩余的两个整数表示该范围中最大的分数。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性设置为 1。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: numerator1
      type: System.Int32
      description: "一个表示该范围中最小的分数分子的 32 位整数。 必须为非负数。"
    - id: demoninator1
      type: System.Int32
      description: "一个 32 位整数，它表示该范围中最小的分数分母。 必须为非负数。"
    - id: numerator2
      type: System.Int32
      description: "一个 32 位整数，它表示该范围中最小的分数分母。 必须为非负数。"
    - id: demoninator2
      type: System.Int32
      description: "一个表示该范围中最大的分数分子的 32 位整数。 必须为非负数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>使用指定的类<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象和四个 32 位整数数组。 这四个数组表示数组合理范围。 合理范围是从最小分数值的最大的小数部分值通过所有分数 （竖式） 组。 设置<> *1> 属性<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>，并将设置<> *1> 属性中的元素数<code> numerator1 </code>数组，它必须是与其他三个数组中的元素数相同。"
  remarks: "第 i 个范围包含所有小数数字从 numerator1 [i] / denominator1 [i] 通过 numerator2 [i] / denominator2 [i]。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>封装参数类别的全局唯一标识符的对象。"
    - id: numerator1
      type: System.Int32[]
      description: "指定的范围的最小值分子的 32 位整数数组。 整数数组中的必须为非负数。"
    - id: denominator1
      type: System.Int32[]
      description: "指定的范围的最小值分母的 32 位整数数组。 整数数组中的必须为非负数。"
    - id: numerator2
      type: System.Int32[]
      description: "指定的范围的最大值分子的 32 位整数数组。 整数数组中的必须为非负数。"
    - id: denominator2
      type: System.Int32[]
      description: "指定的范围的最大值分母的 32 位整数数组。 整数数组中的必须为非负数。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "释放所有资源由此<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  remarks: "调用 Dispose 允许使用的资源<xref:System.Drawing.Imaging.EncoderParameter>对象可以重新分配用于其他目的。</xref:System.Drawing.Imaging.EncoderParameter>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  id: Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "获取或设置<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>对象与此关联<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>对象所封装指定的类别的全局唯一标识符 (GUID) (例如<xref href=&quot;System.Drawing.Imaging.Encoder.Quality&quot;> </xref>， <xref href=&quot;System.Drawing.Imaging.Encoder.ColorDepth&quot;> </xref>，或<xref href=&quot;System.Drawing.Imaging.Encoder.Compression&quot;> </xref>) 在此存储的参数<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public System.Drawing.Imaging.Encoder Encoder { get; set; }
    return:
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>对象，它封装指定在此存储的参数的类别的 GUID <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.Encoder*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "允许<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象尝试释放资源并执行其他清理操作之前<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>通过垃圾回收回收对象。"
  syntax:
    content: ~EncoderParameter ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  id: NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "值存储在此数组中获取的元素数<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public int NumberOfValues { get; }
    return:
      type: System.Int32
      description: "一个整数，指示的值存储在此数组中元素的数目<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Type
  id: Type
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "获取在此存储的值的数据类型<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType Type { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "成员<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>枚举，指示在此存储的值的数据类型<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  id: ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "获取在此存储的值的数据类型<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "成员<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>枚举，指示在此存储的值的数据类型<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。"
  overload: System.Drawing.Imaging.EncoderParameter.ValueType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
- uid: System.Drawing.Imaging.Encoder
  parent: System.Drawing.Imaging
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Drawing.Imaging.Encoder
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
- uid: System.Int16[]
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16[]
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
- uid: System.Drawing.Imaging.EncoderParameterValueType
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameterValueType
  nameWithType: EncoderParameterValueType
  fullName: System.Drawing.Imaging.EncoderParameterValueType
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
- uid: System.Drawing.Imaging.EncoderParameter.#ctor*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter
  nameWithType: EncoderParameter.EncoderParameter
- uid: System.Drawing.Imaging.EncoderParameter.Dispose*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose
  nameWithType: EncoderParameter.Dispose
- uid: System.Drawing.Imaging.EncoderParameter.Encoder*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize
  nameWithType: EncoderParameter.Finalize
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
