### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  id: SecurityTokenHandlerCollectionManager
  children:
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  langs:
  - csharp
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  type: Class
  summary: "一个类，管理多个，命名安全标记处理程序集合。"
  syntax:
    content: public class SecurityTokenHandlerCollectionManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: SecurityTokenHandlerCollectionManager(String)
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager&quot;></xref>指定类名为 service。"
  syntax:
    content: public SecurityTokenHandlerCollectionManager (string serviceName);
    parameters:
    - id: serviceName
      type: System.String
      description: "关联的服务的名称。 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*>属性设置为此名称。</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*>"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "确定此实例是否包含指定的使用情况的安全令牌处理程序集合。"
  syntax:
    content: public bool ContainsKey (string usage);
    parameters:
    - id: usage
      type: System.String
      description: "为其查找令牌处理程序集合使用。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例包含指定的用法; 令牌处理程序集合否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  id: Count
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: Count
  nameWithType: SecurityTokenHandlerCollectionManager.Count
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取多的安全令牌处理程序管理的此实例的集合。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "此实例管理的令牌处理程序集的数目。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager
  id: CreateDefaultSecurityTokenHandlerCollectionManager
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: CreateDefaultSecurityTokenHandlerCollectionManager()
  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建一个令牌处理程序管理器的集合包含一组默认令牌处理程序的处理程序集合。"
  remarks: "从配置的默认服务名称与相关联的新实例。"
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager CreateDefaultSecurityTokenHandlerCollectionManager ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
      description: "包含使用的默认令牌处理程序集合中的管理器。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  id: CreateEmptySecurityTokenHandlerCollectionManager
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: CreateEmptySecurityTokenHandlerCollectionManager()
  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建一个空的令牌处理程序集合管理器。"
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager CreateEmptySecurityTokenHandlerCollectionManager ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
      description: "包含没有处理程序集合管理器。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  id: Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollectionManager.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(String)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回指定的使用情况的安全令牌处理程序集合。"
  remarks: "如果令牌处理程序集合关联与指定的键 （用法） 不存在，将引发异常。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandlerCollection this[string usage] { get; set; }
    parameters:
    - id: usage
      type: System.String
      description: "找不到令牌处理程序用法的名称。"
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "指定的使用与关联的标记处理程序集合。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  id: SecurityTokenHandlerCollections
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: SecurityTokenHandlerCollections
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取安全令牌处理程序管理的此实例的集合。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection> SecurityTokenHandlerCollections { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandlerCollection}
      description: "此实例管理令牌处理程序集合。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  id: ServiceName
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  name: ServiceName
  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取服务名称。"
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "与此实例关联的服务的名称。"
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: SecurityTokenHandlerCollectionManager(String)
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: Count
  nameWithType: SecurityTokenHandlerCollectionManager.Count
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollectionManager()
  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: CreateEmptySecurityTokenHandlerCollectionManager()
  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollectionManager.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: SecurityTokenHandlerCollections
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandlerCollection}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenHandlerCollection>
  nameWithType: IEnumerable<SecurityTokenHandlerCollection>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
    name: SecurityTokenHandlerCollection
    nameWithType: SecurityTokenHandlerCollection
    fullName: SecurityTokenHandlerCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: ServiceName
  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: ContainsKey
  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: Count
  nameWithType: SecurityTokenHandlerCollectionManager.Count
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: CreateEmptySecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: Item
  nameWithType: SecurityTokenHandlerCollectionManager.Item
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: SecurityTokenHandlerCollections
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  isExternal: false
  name: ServiceName
  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName
