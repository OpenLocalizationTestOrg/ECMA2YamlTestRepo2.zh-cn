### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ResourceExpressionBuilder
  id: ResourceExpressionBuilder
  children:
  - System.Web.Compilation.ResourceExpressionBuilder.#ctor
  - System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder
  fullName: System.Web.Compilation.ResourceExpressionBuilder
  type: Class
  summary: "将在控件上的属性值分配到页分析器提供的代码。"
  remarks: "ResourceExpressionBuilder 类创建在页执行时检索资源的值的代码。 资源文件通常包含针对特定语言或区域性本地化的信息。       资源表达式的形式`<%$ Resources: ClassKey, ResourceKey %>`页中。 冒号 （:） 的表达式的一部分指定的表达式生成器，若要使用，类型和冒号后面的部分表示的类名称和资源键。 前面的表达式将从名为的文件中检索以下值`ClassKey.resx`:```   <data name=&quot;ResourceKey&quot;><value xml:space=&quot;preserve&quot;>Hello!</value></data>   ```当页分析器遇到一个具有表达式`Resources`前缀，它会创建 ResourceExpressionBuilder 类的实例。 ResourceExpressionBuilder 类计算的表达式，或生成代码以执行页时返回表达式的值。       如果在将编译的页面中遇到这种表达式，ResourceExpressionBuilder 对象生成代码，从资源文件中检索指定的值。 如果在无需编译的页面中遇到这种表达式，ResourceExpressionBuilder 对象时将值返回从资源文件分析页面。"
  example:
  - "The following code example retrieves the default currency from a resource file.  \n  \n [!code-cs[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/csharp/t-system.web.compilation_3_1.aspx)]\n [!code-vb[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/visualbasic/t-system.web.compilation_3_1.aspx)]  \n  \n This code reads the following value from a resource file named `Financial.resx` in the App_GlobalResources directory.  \n  \n```  \n<data name=\"Currency\"><value xml:space=\"preserve\">US dollars</value></data>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Resources")]

      public class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.ResourceExpressionBuilder&quot;></xref>类。"
  syntax:
    content: public ResourceExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回一个值，从资源文件。"
  remarks: '形式的表达式时调用此方法`<%$ Resources: someResourceKey %>`遇到在使用非编译功能页面中。 它从资源文件中的键/值对检索适当的值。'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "包含表达式的对象。"
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "表示有关属性的信息的对象绑定到由表达式。"
    - id: parsedData
      type: System.Object
      description: "返回的对象，其中包含分析数据<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>方法。</xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "对表达式求值的上下文信息。"
    return:
      type: System.Object
      description: "<xref:System.Object>与已分析的表达式相关联。</xref:System.Object> 已分析的表达式包含的类名称和资源键。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回要评估页执行期间的代码表达式。"
  remarks: "在 CodeDOM 创建过程调用此方法为页或控件。 <xref:System.CodeDom.CodeExpression>返回对象的类型是<xref:System.CodeDom.CodeMethodInvokeExpression>和表示页执行期间检索资源值时要调用的方法。</xref:System.CodeDom.CodeMethodInvokeExpression> </xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "对象的属性名称。"
    - id: parsedData
      type: System.Object
      description: "已分析的值的表达式。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "为控件或页的属性。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> ，它调用的方法。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  id: ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回一个对象，表示已分析的表达式。"
  remarks: "此方法将分析该表达式并返回<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>和<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>在返回的属性值<xref:System.Web.Compilation.ResourceExpressionFields>对象，如果在表达式中提供了这些属性。</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> </xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>"
  syntax:
    content: public static System.Web.Compilation.ResourceExpressionFields ParseExpression (string expression);
    parameters:
    - id: expression
      type: System.String
      description: "要分析的表达式值。"
    return:
      type: System.Web.Compilation.ResourceExpressionFields
      description: "<xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;> </xref>的表达式。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回一个对象，表示已分析的表达式。"
  remarks: "返回类型的<xref:System.Object><xref:System.Web.Compilation.ResourceExpressionFields>.</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Object> 此方法将分析该表达式并返回<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>和<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>在返回的属性值<xref:System.Web.Compilation.ResourceExpressionFields>对象，如果在表达式中提供了这些属性。</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> </xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>"
  syntax:
    content: public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "声明性的表达式的值。"
    - id: propertyType
      type: System.Type
      description: "通过表达式绑定到属性的类型。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "对表达式求值的上下文信息。"
    return:
      type: System.Object
      description: "<xref:System.Object>，它表示已分析的表达式。</xref:System.Object>"
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "资源表达式无法找到或无效。"
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回一个值，该值指示是否可以使用非编译功能的页中计算表达式。"
  remarks: "SupportsEvaluate 属性指示是否<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>已在类中实现方法</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>必须在使用非编译功能页面中计算表达式的表达式生成器中实现。</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder>在非编译页中，支持的资源的值的计算，因此此属性总是返回`true`。</xref:System.Web.Compilation.ResourceExpressionBuilder>"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
- uid: System.Web.Compilation.ResourceExpressionFields
  parent: System.Web.Compilation
  isExternal: false
  name: ResourceExpressionFields
  nameWithType: ResourceExpressionFields
  fullName: System.Web.Compilation.ResourceExpressionFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ResourceExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ResourceExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
