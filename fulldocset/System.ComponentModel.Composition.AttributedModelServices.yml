### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.AttributedModelServices
  id: AttributedModelServices
  children:
  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)
  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)
  - System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)
  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)
  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)
  - System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])
  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)
  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)
  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)
  - System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  - System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  - System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)
  - System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)
  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)
  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)
  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)
  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)
  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)
  langs:
  - csharp
  name: AttributedModelServices
  nameWithType: AttributedModelServices
  fullName: System.ComponentModel.Composition.AttributedModelServices
  type: Class
  summary: "包含用于与撰写使用 MEF 特性化编程模型的帮助器方法。"
  syntax:
    content: public static class AttributedModelServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)
  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: AddExportedValue(CompositionBatch,T)
  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "要添加。"
    - id: exportedValue
      type: T
      description: "要添加。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)
  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: AddExportedValue(CompositionBatch,String,T)
  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,String,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,String,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "要添加。"
    - id: contractName
      type: System.String
      description: "要添加。"
    - id: exportedValue
      type: T
      description: "要添加。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)
  id: AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: AddPart(CompositionBatch,Object)
  nameWithType: AttributedModelServices.AddPart(CompositionBatch,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddPart(CompositionBatch,Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "从指定的特性化对象，创建可组合的部件并将其添加到指定的组合批次。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "要添加的批。"
    - id: attributedPart
      type: System.Object
      description: "要添加的对象。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "新部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.AddPart*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)
  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: ComposeExportedValue(CompositionContainer,T)
  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);
    parameters:
    - id: container
      type: System.ComponentModel.Composition.Hosting.CompositionContainer
      description: "要添加。"
    - id: exportedValue
      type: T
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)
  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: ComposeExportedValue(CompositionContainer,String,T)
  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);
    parameters:
    - id: container
      type: System.ComponentModel.Composition.Hosting.CompositionContainer
      description: "要添加。"
    - id: contractName
      type: System.String
      description: "要添加。"
    - id: exportedValue
      type: T
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])
  id: ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: ComposeParts(CompositionContainer,Object[])
  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer,Object[])
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(CompositionContainer,Object[])
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "从特性化的对象的数组创建可组合的部件，并在指定的组合容器中对它们进行组合。"
  syntax:
    content: public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts);
    parameters:
    - id: container
      type: System.ComponentModel.Composition.Hosting.CompositionContainer
      description: "要在其中执行组合的组合容器。"
    - id: attributedParts
      type: System.Object[]
      description: "特性化的对象构成的数组。"
  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)
  id: CreatePart(System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: CreatePart(Object)
  nameWithType: AttributedModelServices.CreatePart(Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "从指定的特性化对象创建可组合的部件。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);
    parameters:
    - id: attributedPart
      type: System.Object
      description: "特性化的对象。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "所创建的部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)
  id: CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: CreatePart(ComposablePartDefinition,Object)
  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(ComposablePartDefinition,Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "从指定的特性化对象，并使用指定的一部分定义创建可组合的部件。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);
    parameters:
    - id: partDefinition
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "新部件的定义。"
    - id: attributedPart
      type: System.Object
      description: "特性化的对象。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "所创建的部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)
  id: CreatePart(System.Object,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: CreatePart(Object,ReflectionContext)
  nameWithType: AttributedModelServices.CreatePart(Object,ReflectionContext)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object,ReflectionContext)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "从指定的特性化对象，并使用指定的反射上下文中创建可组合的部件。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: attributedPart
      type: System.Object
      description: "特性化的对象。"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "部件反射上下文。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "所创建的部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reflectionContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: CreatePartDefinition(Type,ICompositionElement)
  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "创建具有指定的类型和源的一部分定义。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);
    parameters:
    - id: type
      type: System.Type
      description: "定义的类型。"
    - id: origin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "定义的来源。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "新的部件定义。"
  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)
  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: CreatePartDefinition(Type,ICompositionElement,Boolean)
  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "创建具有指定的类型和源的一部分定义。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);
    parameters:
    - id: type
      type: System.Type
      description: "定义的类型。"
    - id: origin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "定义的来源。"
    - id: ensureIsDiscoverable
      type: System.Boolean
      description: "一个值，该值指示应可发现的新定义。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "新的部件定义。"
  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  id: Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Exports(ComposablePartDefinition,Type)
  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition,Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition,Type)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "返回一个值，该值指示指定的部分是否包含与指定的协定类型匹配的导出。"
  syntax:
    content: public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要搜索的部件。"
    - id: contractType
      type: System.Type
      description: "协定类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> part </code>包含匹配的导出定义<code> contractType </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Exports*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  id: Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Exports(ComposablePartDefinition)
  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static bool Exports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Exports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)
  id: GetContractName(System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: GetContractName(Type)
  nameWithType: AttributedModelServices.GetContractName(Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetContractName(Type)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "获取指定类型的规范的协定名称。"
  syntax:
    content: public static string GetContractName (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要使用的类型。"
    return:
      type: System.String
      description: "从指定类型创建的协定名称。"
  overload: System.ComponentModel.Composition.AttributedModelServices.GetContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: GetMetadataView(IDictionary<String,Object>)
  nameWithType: AttributedModelServices.GetMetadataView(IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView(IDictionary<String,Object>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static TMetadataView GetMetadataView<TMetadataView> (System.Collections.Generic.IDictionary<string,object> metadata);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "要添加。"
    return:
      type: TMetadataView
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView<TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)
  id: GetTypeIdentity(System.Reflection.MethodInfo)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: GetTypeIdentity(MethodInfo)
  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(MethodInfo)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "获取指定的方法的唯一标识符。"
  syntax:
    content: public static string GetTypeIdentity (System.Reflection.MethodInfo method);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: "要检查的方法。"
    return:
      type: System.String
      description: "方法的唯一标识符。"
  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)
  id: GetTypeIdentity(System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: GetTypeIdentity(Type)
  nameWithType: AttributedModelServices.GetTypeIdentity(Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(Type)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "获取指定类型的唯一标识符。"
  syntax:
    content: public static string GetTypeIdentity (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要检查的类型。"
    return:
      type: System.String
      description: "类型的唯一标识符。"
  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Imports(ComposablePartDefinition,Type)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "返回一个值，该值指示指定的部分是否包含与指定的协定类型匹配的导入。"
  syntax:
    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要搜索的部件。"
    - id: contractType
      type: System.Type
      description: "协定类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> part </code>包含匹配的导入定义<code> contractType </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)
  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Imports(ComposablePartDefinition,Type,ImportCardinality)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "返回一个值，该值指示指定的部分是否包含与指定的协定匹配的导入类型，并导入基数。"
  syntax:
    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要搜索的部件。"
    - id: contractType
      type: System.Type
      description: "协定类型。"
    - id: importCardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "导入基数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> part </code>包含匹配的导入定义<code> contractType </code>和<code> importCardinality </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Imports(ComposablePartDefinition)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)
  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: Imports(ComposablePartDefinition,ImportCardinality)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  syntax:
    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: "要添加。"
    - id: importCardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: SatisfyImportsOnce(ICompositionService,Object)
  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "通过禁用重新组合中使用指定的组合服务中，组合的指定的部分。"
  remarks: "与普通组合不同组成此方法的部件不保证保持有效如果后面目录`compositionService`更改。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);
    parameters:
    - id: compositionService
      type: System.ComponentModel.Composition.ICompositionService
      description: "要使用的组合服务。"
    - id: attributedPart
      type: System.Object
      description: "要组合的部件。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "已组合的部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.AttributedModelServices
  langs:
  - csharp
  name: SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "通过使用重新组合已禁用指定的组合服务，并使用指定的反射上下文中组合的指定的部分。"
  syntax:
    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: compositionService
      type: System.ComponentModel.Composition.ICompositionService
      description: "要使用的组合服务。"
    - id: attributedPart
      type: System.Object
      description: "要组合的部件。"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "部件反射上下文。"
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "已组合的部件。"
  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reflectionContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: AddExportedValue(CompositionBatch,T)
  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,T)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionBatch
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionBatch
  nameWithType: CompositionBatch
  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: AddExportedValue(CompositionBatch,String,T)
  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,String,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,String,T)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: AddPart(CompositionBatch,Object)
  nameWithType: AttributedModelServices.AddPart(CompositionBatch,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.AddPart(CompositionBatch,Object)
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: ComposeExportedValue(CompositionContainer,T)
  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,T)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: ComposeExportedValue(CompositionContainer,String,T)
  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: ComposeParts(CompositionContainer,Object[])
  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer,Object[])
  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(CompositionContainer,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePart(Object)
  nameWithType: AttributedModelServices.CreatePart(Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object)
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePart(ComposablePartDefinition,Object)
  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(ComposablePartDefinition,Object)
- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartDefinition
  nameWithType: ComposablePartDefinition
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePart(Object,ReflectionContext)
  nameWithType: AttributedModelServices.CreatePart(Object,ReflectionContext)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object,ReflectionContext)
- uid: System.Reflection.ReflectionContext
  parent: System.Reflection
  isExternal: true
  name: ReflectionContext
  nameWithType: ReflectionContext
  fullName: System.Reflection.ReflectionContext
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePartDefinition(Type,ICompositionElement)
  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.Primitives.ICompositionElement
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ICompositionElement
  nameWithType: ICompositionElement
  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePartDefinition(Type,ICompositionElement,Boolean)
  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)
  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Exports(ComposablePartDefinition,Type)
  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition,Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition,Type)
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Exports(ComposablePartDefinition)
  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition)
- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetContractName(Type)
  nameWithType: AttributedModelServices.GetContractName(Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetContractName(Type)
- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetMetadataView(IDictionary<String,Object>)
  nameWithType: AttributedModelServices.GetMetadataView(IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView(IDictionary<String,Object>)
- uid: TMetadataView
  isExternal: true
  name: TMetadataView
  nameWithType: TMetadataView
  fullName: TMetadataView
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetTypeIdentity(MethodInfo)
  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(MethodInfo)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetTypeIdentity(Type)
  nameWithType: AttributedModelServices.GetTypeIdentity(Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(Type)
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports(ComposablePartDefinition,Type)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type)
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports(ComposablePartDefinition,Type,ImportCardinality)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)
- uid: System.ComponentModel.Composition.Primitives.ImportCardinality
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportCardinality
  nameWithType: ImportCardinality
  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports(ComposablePartDefinition)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition)
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports(ComposablePartDefinition,ImportCardinality)
  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)
  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)
- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: SatisfyImportsOnce(ICompositionService,Object)
  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)
  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)
- uid: System.ComponentModel.Composition.ICompositionService
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ICompositionService
  nameWithType: ICompositionService
  fullName: System.ComponentModel.Composition.ICompositionService
- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)
- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: AddExportedValue<T>
  nameWithType: AttributedModelServices.AddExportedValue<T>
- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: AddPart
  nameWithType: AttributedModelServices.AddPart
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: ComposeExportedValue<T>
  nameWithType: AttributedModelServices.ComposeExportedValue<T>
- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: ComposeParts
  nameWithType: AttributedModelServices.ComposeParts
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePart
  nameWithType: AttributedModelServices.CreatePart
- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: CreatePartDefinition
  nameWithType: AttributedModelServices.CreatePartDefinition
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Exports
  nameWithType: AttributedModelServices.Exports
- uid: System.ComponentModel.Composition.AttributedModelServices.Exports<T>*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Exports<T>
  nameWithType: AttributedModelServices.Exports<T>
- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetContractName
  nameWithType: AttributedModelServices.GetContractName
- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView<TMetadataView>*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetMetadataView<TMetadataView>
  nameWithType: AttributedModelServices.GetMetadataView<TMetadataView>
- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: GetTypeIdentity
  nameWithType: AttributedModelServices.GetTypeIdentity
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports
  nameWithType: AttributedModelServices.Imports
- uid: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: Imports<T>
  nameWithType: AttributedModelServices.Imports<T>
- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*
  parent: System.ComponentModel.Composition.AttributedModelServices
  isExternal: false
  name: SatisfyImportsOnce
  nameWithType: AttributedModelServices.SatisfyImportsOnce
