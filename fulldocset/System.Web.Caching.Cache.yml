### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.Cache
  id: Cache
  children:
  - System.Web.Caching.Cache.#ctor
  - System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Count
  - System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  - System.Web.Caching.Cache.EffectivePrivateBytesLimit
  - System.Web.Caching.Cache.Get(System.String)
  - System.Web.Caching.Cache.GetEnumerator
  - System.Web.Caching.Cache.Insert(System.String,System.Object)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Item(System.String)
  - System.Web.Caching.Cache.NoAbsoluteExpiration
  - System.Web.Caching.Cache.NoSlidingExpiration
  - System.Web.Caching.Cache.Remove(System.String)
  - System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
  type: Class
  summary: "实现的 Web 应用程序缓存。 此类不能被继承。"
  remarks: "每个应用程序域中创建的此类的一个实例，并会保持有效的只要应用程序域将保持活动状态。 通过提供了有关此类的实例信息`Cache`属性<xref:System.Web.HttpContext>对象或`Cache`属性<xref:System.Web.UI.Page>对象。</xref:System.Web.UI.Page> </xref:System.Web.HttpContext>      1> [!NOTE]&1;> 缓存类不用于在 ASP.NET 应用程序之外的使用。 设计和测试在提供的 Web 应用程序中缓存的 ASP.NET 中使用。 对于其他类型的应用程序，如控制台应用程序或 Windows 窗体应用程序，使用<xref:System.Runtime.Caching.ObjectCache>类。</xref:System.Runtime.Caching.ObjectCache>"
  example:
  - "The following example is a page that shows users the value assigned to an item in the cache, and then notifies them when the item is removed from the cache. It creates a `RemovedCallback` method, which has the signature of the `CacheItemRemovedCallback` delegate, to notify users when the cache item is removed, and it uses the <xref:System.Web.Caching.CacheItemRemovedReason> enumeration to tell them why it was removed. In addition, it uses the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property to add objects to the cache and retrieve the value of those objects. In the `AddItemToCache` method, it uses the <xref:System.Web.Caching.Cache.Add%2A?displayProperty=fullName> method to add an item to the cache. To use the `CacheItemRemovedCallback` delegate, you must add an item to the cache with this method or the <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method, so that that ASP.NET can automatically make the proper method calls when the item is removed. The custom `RemoveItemFromCache` method uses the <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName> method to explicitly delete the item from the cache, causing the `RemovedCallback` method to be invoked.  \n  \n> [!NOTE]\n>  The instance of Cache that is accessed by the snippet below is a member of the <xref:System.Web.UI.Page> object that this sample inherits.  \n  \n [!code-cs[System.Web.Caching Examples#1](~/add/codesnippet/csharp/t-system.web.caching.cache_1.aspx)]\n [!code-vb[System.Web.Caching Examples#1](~/add/codesnippet/visualbasic/t-system.web.caching.cache_1.aspx)]"
  syntax:
    content: 'public sealed class Cache : System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.#ctor
  id: '#ctor'
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "初始化的新实例<xref href=&quot;System.Web.Caching.Cache&quot;></xref>类。"
  syntax:
    content: public Cache ();
    parameters: []
  overload: System.Web.Caching.Cache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "添加到指定的项<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象具有依赖关系、 过期和优先级策略，以及你可以使用从删除插入的项时通知你的应用程序一个委托<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。"
  remarks: "如果具有相同的项，对此方法的调用将失败`key`参数已存储在`Cache`。 若要覆盖现有`Cache`项使用同一个`key`参数，使用<xref:System.Web.Caching.Cache.Insert%2A>方法。</xref:System.Web.Caching.Cache.Insert%2A>       不能同时设置`absoluteExpiration`和`slidingExpiration`参数。 如果你想要在特定时间过期的缓存项，则设置`absoluteExpiration`到特定的时间，参数和`slidingExpiration`到<xref:System.Web.Caching.Cache.NoSlidingExpiration>。</xref:System.Web.Caching.Cache.NoSlidingExpiration>参数       如果你想的缓存项以在某段时间后过期自已经过了上次访问该项，则将设置`slidingExpiration`过期时间间隔，参数和`absoluteExpiration`到<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>参数"
  example:
  - "The following example creates an `AddItemToCache` method. When this method is called, it sets an `itemRemoved` property to `false` and registers an `onRemove` method with a new instance of the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate. The delegate's signature is used in the `RemovedCallback` method. The `AddItemToCache` method then checks the value associated with the `Key1` key in the cache. If the value is `null`, the `Add` method places an item in the cache with a key of `Key1`, a value of `Value 1`, an absolute expiration of 60 seconds, and a high cache priority. It also uses the `onRemove` method as an argument. This allows the `RemovedCallback` method to be called when this item is removed from the cache.  \n  \n> [!NOTE]\n>  For examples of how to use the <xref:System.Web.Caching.CacheDependency> class and the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Caching Examples#3](~/add/codesnippet/csharp/97b35003-2ed6-4e36-acd6-_1.aspx)]\n [!code-vb[System.Web.Caching Examples#3](~/add/codesnippet/visualbasic/97b35003-2ed6-4e36-acd6-_1.aspx)]"
  syntax:
    content: public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "用于引用该项的缓存密钥。"
    - id: value
      type: System.Object
      description: "要添加到缓存的项。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "文件或缓存关键的依存关系项。 当任何依赖项更改时，对象将变为无效，并且从缓存中删除。 如果没有依赖关系，此参数将包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "添加的对象到期，从缓存中删除时间。 如果使用滑动过期`absoluteExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "对象的到期时间和上次访问添加的对象的时间之间的间隔。 如果此值为 20 分钟的等效项，该对象将过期，并从缓存 20 分钟后它上次访问被移除。 如果你使用的绝对过期`slidingExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>。"
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "所表示的对象的相对成本<xref href=&quot;System.Web.Caching.CacheItemPriority&quot;></xref>枚举。 缓存时它逐出对象; 使用此值从成本较高的对象之前缓存中删除开销较低的对象。"
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "一个委托，如果提供，从缓存中移除对象时调用。 你可以使用此通知应用程序，从缓存删除其对象时。"
    return:
      type: System.Object
      description: "一个对象，表示项之前存储在缓存中; 如果已添加的项否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Caching.Cache.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> slidingExpiration </code>参数设置为小于<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>或超过一年。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>和<code> slidingExpiration </code>参数都设置为您尝试将添加到项目<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Count
  id: Count
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取存储在缓存中的项的数目。"
  remarks: "监视应用程序的性能时，或使用 ASP.NET 跟踪功能时，此属性可能很有用。"
  example:
  - "The following example obtains the value of the `Count` property, converts it to a string, and assigns the string to the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> Web server control, `Label1`.  \n  \n [!code-vb[System.Web.Caching.Cache.Count#1](~/add/codesnippet/visualbasic/p-system.web.caching.cac_3_1.aspx)]\n [!code-cs[System.Web.Caching.Cache.Count#1](~/add/codesnippet/csharp/p-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "在缓存中存储的项的数目。"
  overload: System.Web.Caching.Cache.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  id: EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取 ASP.NET 开始从缓存中删除项之前可以由应用程序使用的物理内存的百分比。"
  remarks: "EffectivePercentagePhysicalMemoryLimit 属性返回对应用程序可用的物理内存的百分比。 当可用百分比变得较低时，缓存算法将开始从缓存中移除项。       该 EffectivePercentagePhysicalMemoryLimit 属性可以设置与`percentagePhysicalMemoryUsedLimit`属性[缓存元素的缓存 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299)应用程序的配置文件中的元素。 如果`percentagePhysicalMemoryUsedLimit`特性未设置，缓存算法确定的最大大小的缓存，并计算 EffectivePercentagePhysicalMemoryLimit 属性。       EffectivePercentagePhysicalMemoryLimit 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public long EffectivePercentagePhysicalMemoryLimit { get; }
    return:
      type: System.Int64
      description: "应用程序的物理内存的百分比。"
  overload: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  id: EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取用于缓存的可用字节数。"
  remarks: "EffectivePrivateBytesLimit 属性返回可由应用程序进程的字节的数。 一旦达到此限制，缓存算法开始积极清理缓存。       该 EffectivePrivateBytesLimit 属性可以设置与`privateBytesLimit`属性[缓存元素的缓存 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299)应用程序的配置文件中的元素。 当`privateBytesLimit`未设置属性、 缓存算法确定缓存中，最大大小和 EffectivePrivateBytesLimit 属性包含所选算法的大小。"
  example:
  - <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>
  syntax:
    content: public long EffectivePrivateBytesLimit { get; }
    return:
      type: System.Int64
      description: "可用于缓存的字节数。"
  overload: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Get(System.String)
  id: Get(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "检索指定的项目的<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following example demonstrates how to retrieve the value cached for an ASP.NET text box server control.  \n  \n [!code-vb[Classic Cache.Get Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_4_1.vb)]\n [!code-cs[Classic Cache.Get Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_4_1.cs)]"
  syntax:
    content: public object Get (string key);
    parameters:
    - id: key
      type: System.String
      description: "要检索的缓存项标识符。"
    return:
      type: System.Object
      description: "检索到的缓存项，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到此项。"
  overload: System.Web.Caching.Cache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "检索用于循环访问密钥设置的字典枚举数和缓存中包含其值。"
  remarks: "可以添加到或从缓存中时此方法枚举完成的项目移除项。"
  example:
  - "The following example creates an <xref:System.Collections.IDictionaryEnumerator> object, `CacheEnum`, using the `GetEnumerator` method. The enumerator moves through the cache, converts the value of each cached item to a string, and then writes the values to a Web Forms page.  \n  \n [!code-vb[Cache.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_3_1.aspx)]\n [!code-cs[Cache.GetEnumerator#1](~/add/codesnippet/csharp/m-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "要循环访问的枚举数<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象。"
  overload: System.Web.Caching.Cache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  id: Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "将一项插入<xref href=&quot;System.Web.Caching.Cache&quot;></xref>缓存键来引用其位置，并使用默认值由提供<xref href=&quot;System.Web.Caching.CacheItemPriority&quot;></xref>枚举。"
  remarks: "此方法将覆盖现有的缓存项其键与匹配`key`参数。 对象添加到缓存中使用的此重载`Insert`方法插入没有文件或缓存依赖项，优先级<xref:System.Web.Caching.CacheItemPriority>，滑动过期值<xref:System.Web.Caching.Cache.NoSlidingExpiration>，和<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>绝对过期值</xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.CacheItemPriority>"
  example:
  - "The following example demonstrates how to insert an item into an application's cache.  \n  \n [!code-cs[Classic Cache.Insert Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_8_1.cs)]\n [!code-vb[Classic Cache.Insert Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_8_1.vb)]"
  syntax:
    content: public void Insert (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "用于引用该项的缓存密钥。"
    - id: value
      type: System.Object
      description: "要插入到缓存的对象。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "将对象插入<xref href=&quot;System.Web.Caching.Cache&quot;> </xref> ，其文件或密钥依赖关系。"
  remarks: "此方法将覆盖现有的缓存项其键与匹配`key`参数。 对象添加到缓存中使用的此重载`Insert`方法插入没有文件或缓存依赖项，优先级<xref:System.Web.Caching.CacheItemPriority>，滑动过期值<xref:System.Web.Caching.Cache.NoSlidingExpiration>，和<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>绝对过期值</xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.CacheItemPriority>"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with a cache dependency on an XML configuration file.  \n  \n [!code-cs[Classic Cache.Insert1 Example#1](~/add/codesnippet/csharp/1f70e8db-a9cf-4467-9e9a-_1.cs)]\n [!code-vb[Classic Cache.Insert1 Example#1](~/add/codesnippet/visualbasic/1f70e8db-a9cf-4467-9e9a-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);
    parameters:
    - id: key
      type: System.String
      description: "用于标识的项的缓存密钥。"
    - id: value
      type: System.Object
      description: "要将其插入缓存中的对象。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "文件或缓存关键的依存关系所插入对象。 当任何依赖项更改时，对象将变为无效，并且从缓存中删除。 如果没有依赖关系，此参数将包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "将对象插入<xref href=&quot;System.Web.Caching.Cache&quot;></xref>与依赖关系和过期策略。"
  remarks: "此方法将覆盖现有`Cache`项具有相同`key`参数。       如果`slidingExpiration`参数设置为<xref:System.Web.Caching.Cache.NoSlidingExpiration>，滑动过期已禁用。</xref:System.Web.Caching.Cache.NoSlidingExpiration> 如果你设置`slidingExpiration`参数为大于<xref:System.TimeSpan.Zero>、`absoluteExpiration`参数设置为<xref:System.DateTime.Now%2A>中包含的值加`slidingExpiration`参数。</xref:System.DateTime.Now%2A> </xref:System.TimeSpan.Zero> 如果在指定的时间量之前从缓存请求的内容项`absoluteExpiration`参数，该项将被放在缓存中同样，和`absoluteExpiration`再次将设置为`DateTime.Now`中包含的值加`slidingExpiration`参数。 如果请求的内容项是不从缓存中的日期以前`absoluteExpiration`从缓存中删除参数，该项目。 。 添加到缓存中使用 insert 方法的此重载的项插入<xref:System.Web.Caching.CacheItemPriority>.</xref:System.Web.Caching.CacheItemPriority>优先级"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with an absolute expiration.  \n  \n> [!NOTE]\n>  Since this form of the `Insert` method supports cache dependencies, if the item has no dependencies, you must declare the `dependency` parameter as `null` (`Nothing` in Visual Basic) in the comma-delimited list of parameters.  \n  \n [!code-vb[Classic Cache.Insert2 Example#1](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_1.vb)]\n [!code-cs[Classic Cache.Insert2 Example#1](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_1.cs)]  \n  \n The following example demonstrates how to insert an item into the cache with a sliding expiration.  \n  \n [!code-vb[Classic Cache.Insert2 Example#2](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_2.vb)]\n [!code-cs[Classic Cache.Insert2 Example#2](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_2.cs)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);
    parameters:
    - id: key
      type: System.String
      description: "用来引用该对象的缓存密钥。"
    - id: value
      type: System.Object
      description: "要将其插入缓存中的对象。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "文件或缓存关键的依存关系所插入对象。 当任何依赖项更改时，对象将变为无效，并且从缓存中删除。 如果没有依赖关系，此参数将包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "插入的对象到期，从缓存中删除时间。 若要避免如将从标准时间更改为夏时制的本地时间可能存在的问题，请使用<> *1> 而非<> *1> 作为此参数值。 如果你使用的绝对过期`slidingExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "上次访问所插入的对象的时间和该对象的到期的时间之间的间隔。 如果此值为 20 分钟的等效项，该对象将过期，并从缓存 20 分钟上次访问后被删除。 如果使用滑动过期`absoluteExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "你设置<code> slidingExpiration </code>参数小于<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>或超过一年的等效项。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>和<code> slidingExpiration </code>参数都设置为您尝试将添加到项目<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "将对象插入<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象与依赖关系、 过期策略和一个委托，你可以使用通知应用程序之前从缓存中移除的项。"
  remarks: "Insert 方法，可在缓存中插入一个新项，并提供在从缓存中移除的项之前调用的委托。 在委托中，你可以更新的缓存的项，从而导致无法从缓存中删除。       此方法将覆盖现有`Cache`项具有相同`key`参数。       不能同时设置`absoluteExpiration`和`slidingExpiration`参数。 如果你想要在特定时间过期的缓存项，则设置`absoluteExpiration`到特定的时间，参数和`slidingExpiration`到<xref:System.Web.Caching.Cache.NoSlidingExpiration>。</xref:System.Web.Caching.Cache.NoSlidingExpiration>参数       如果你想的缓存项过期后设置的一段时间以后项上次访问，你将设置`slidingExpiration`到过期时间间隔，并且您的参数设置`absoluteExpiration`到<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>参数"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);
    parameters:
    - id: key
      type: System.String
      description: "用来引用的对象的缓存密钥。"
    - id: value
      type: System.Object
      description: "要插入到缓存的对象。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "文件或缓存关键的依存关系项。 当任何依赖项更改时，对象将变为无效，并且从缓存中删除。 如果没有依赖关系，此参数将包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "插入的对象到期，从缓存中删除时间。 若要避免如将从标准时间更改为夏时制的本地时间可能存在的问题，请使用<> *1> 而不是<> *1> 作为此参数值。 如果你使用的绝对过期`slidingExpiration`参数必须设置为<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "对象的到期时间和上次访问缓存的对象的时间之间的间隔。 如果此值为 20 分钟的等效项，该对象将过期，并从缓存 20 分钟上次访问后被删除。 如果使用滑动过期`absoluteExpiration`参数必须设置为<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>。"
    - id: onUpdateCallback
      type: System.Web.Caching.CacheItemUpdateCallback
      description: "从缓存中删除该对象之前将调用委托。 你可以使用此更新的缓存的项，并确保它不删除从缓存。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code>, <code>value</code>, or <code>onUpdateCallback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "你设置<code> slidingExpiration </code>参数小于<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>或超过一年的等效项。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>和<code> slidingExpiration </code>参数都设置为您尝试将添加到项目<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。       -or-       The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, and the <code>absoluteExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>, and the <code>slidingExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "将对象插入<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象具有依赖关系、 过期和优先级策略，以及你可以使用从删除插入的项时通知你的应用程序一个委托<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。"
  remarks: "此方法将覆盖现有`Cache`项具有相同`key`参数。       不能同时设置`absoluteExpiration`和`slidingExpiration`参数。 如果你想要在特定时间过期的缓存项，则设置`absoluteExpiration`到特定的时间，参数和`slidingExpiration`到<xref:System.Web.Caching.Cache.NoSlidingExpiration>。</xref:System.Web.Caching.Cache.NoSlidingExpiration>参数       如果你想的缓存项在一段时间后过期传递自上次访问该项，则设置`slidingExpiration`过期时间间隔，参数和`absoluteExpiration`到<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>参数"
  example:
  - "The following example demonstrates how to assign an item high priority when you insert it into your application's `Cache` object.  \n  \n> [!NOTE]\n>  For more information about how to use this method with the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [How to: Notify an Application When an Item Is Removed from the Cache](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic Cache.Insert3 Example#1](~/add/codesnippet/csharp/50cb7857-3a5b-41d1-859e-_1.cs)]\n [!code-vb[Classic Cache.Insert3 Example#1](~/add/codesnippet/visualbasic/50cb7857-3a5b-41d1-859e-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "用来引用该对象的缓存密钥。"
    - id: value
      type: System.Object
      description: "要将其插入缓存中的对象。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "文件或缓存关键的依存关系项。 当任何依赖项更改时，对象将变为无效，并且从缓存中删除。 如果没有依赖关系，此参数将包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "插入的对象到期，从缓存中删除时间。 若要避免如将从标准时间更改为夏时制的本地时间可能存在的问题，请使用<> *1> 而非<> *1> 作为此参数值。 如果你使用的绝对过期`slidingExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "对象的到期时间和上次访问所插入的对象的时间之间的间隔。 如果此值为 20 分钟的等效项，该对象将过期，并从缓存 20 分钟上次访问后被删除。 如果使用滑动过期`absoluteExpiration`参数必须是<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>。"
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "相对于存储在缓存中，为表示由其他项的对象的成本<xref href=&quot;System.Web.Caching.CacheItemPriority&quot;></xref>枚举。 它逐出对象; 时，缓存使用此值从成本较高的对象之前缓存中删除开销较低的对象。"
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "调用的委托，如果提供，将从缓存中移除对象时。 你可以使用此通知应用程序，从缓存删除其对象时。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "你设置<code> slidingExpiration </code>参数小于<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>或超过一年的等效项。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>和<code> slidingExpiration </code>参数都设置为您尝试将添加到项目<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取或设置指定键处的缓存项。"
  remarks: "若要检索的值指定的缓存项，或将注册表项和密钥为其添加到缓存，你可以使用此属性。 添加缓存项使用 Item 属性等效于调用<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>方法。</xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>"
  example:
  - "The following example uses the `Item` property to retrieve the value of a cached object associated with the `Key1` key. It then uses the <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> method to write the value and introductory text and the B HTML element to a Web Forms page.  \n  \n [!code-cs[System.Web.Caching Examples#5](~/add/codesnippet/csharp/p-system.web.caching.cac_2_1.aspx)]\n [!code-vb[System.Web.Caching Examples#5](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_1.aspx)]  \n  \n The following example demonstrates using this property to insert the value of a text box into the cache.  \n  \n [!code-vb[Classic Cache.this Example#2](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_2.vb)]\n [!code-cs[Classic Cache.this Example#2](~/add/codesnippet/csharp/p-system.web.caching.cac_2_2.cs)]"
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "A<xref:System.String>表示缓存项的键的对象。</xref:System.String>"
    return:
      type: System.Object
      description: "指定的缓存项中。"
  overload: System.Web.Caching.Cache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  id: NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "在中使用<code> absoluteExpiration </code>中的参数<xref:System.Web.Caching.Cache.Insert*>方法调用，以指示项应永远不会过期。</xref:System.Web.Caching.Cache.Insert*> 此字段为只读的。"
  remarks: "使用时，此字段设置`absoluteExpiration`参数等于<xref:System.DateTime>，后者是一个常量，表示最大可能`DateTime`值，12/31/9999 11:59:59 PM.</xref:System.DateTime>"
  example:
  - "The following example demonstrates how to use the `NoAbsoluteExpiration` field to disable absolute expirations when inserting an item in the `Cache`.  \n  \n [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_1_1.vb)]\n [!code-cs[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_1_1.cs)]"
  syntax:
    content: public static readonly DateTime NoAbsoluteExpiration;
    return:
      type: System.DateTime
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "用作<code> slidingExpiration </code>中的参数<> *1> 或<> *1> 方法调用，以禁用滑动过期时间。 此字段为只读的。"
  remarks: "使用时，此字段设置`slidingExpiration`参数<xref:System.TimeSpan?displayProperty=fullName>字段，常量值为零。</xref:System.TimeSpan?displayProperty=fullName> 根据过期的缓存的项`absoluteExpiration`与关联参数`Insert`或`Add`方法调用。"
  example:
  - "The following example demonstrates how to use the Insert method to add an item to the <xref:System.Web.Caching.Cache> object using the `NoSlidingExpiration` field.  \n  \n [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_0_1.vb)]\n [!code-cs[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_0_1.cs)]"
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "从应用程序的中移除指定的项<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following example creates a `RemoveItemFromCache` method. When this method is called, it uses the <xref:System.Web.Caching.Cache.Item%2A> property to check whether the cache contains an object that is associated with a `Key1` key value. If it does, the `Remove` method is called to remove the object.  \n  \n [!code-cs[System.Web.Caching Examples#4](~/add/codesnippet/csharp/m-system.web.caching.cac_9_1.aspx)]\n [!code-vb[System.Web.Caching Examples#4](~/add/codesnippet/visualbasic/m-system.web.caching.cac_9_1.aspx)]"
  syntax:
    content: public object Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "A<xref:System.String>要移除的缓存项的标识符。</xref:System.String>"
    return:
      type: System.Object
      description: "从其中移除的项<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>。 如果未找到键参数中的值，返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Caching.Cache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "返回可循环访问的枚举<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象集合。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "可循环访问的枚举<xref href=&quot;System.Web.Caching.Cache&quot;></xref>对象集合。"
  overload: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Caching.Cache.#ctor
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Caching.CacheItemPriority
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: System.Web.Caching.CacheItemPriority
- uid: System.Web.Caching.CacheItemRemovedCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemRemovedCallback
  nameWithType: CacheItemRemovedCallback
  fullName: System.Web.Caching.CacheItemRemovedCallback
- uid: System.Web.Caching.Cache.Count
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
- uid: System.Web.Caching.Cache.GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
- uid: System.Web.Caching.CacheItemUpdateCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemUpdateCallback
  nameWithType: CacheItemUpdateCallback
  fullName: System.Web.Caching.CacheItemUpdateCallback
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.Web.Caching.Cache.Item(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
- uid: System.Web.Caching.Cache.Remove(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Caching.Cache.#ctor*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache
  nameWithType: Cache.Cache
- uid: System.Web.Caching.Cache.Add*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add
  nameWithType: Cache.Add
- uid: System.Web.Caching.Cache.Count*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get
  nameWithType: Cache.Get
- uid: System.Web.Caching.Cache.GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator
  nameWithType: Cache.GetEnumerator
- uid: System.Web.Caching.Cache.Insert*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert
  nameWithType: Cache.Insert
- uid: System.Web.Caching.Cache.Item*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item
  nameWithType: Cache.Item
- uid: System.Web.Caching.Cache.Remove*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove
  nameWithType: Cache.Remove
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator
