### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepBase
  id: WizardStepBase
  children:
  - System.Web.UI.WebControls.WizardStepBase.#ctor
  - System.Web.UI.WebControls.WizardStepBase.AllowReturn
  - System.Web.UI.WebControls.WizardStepBase.EnableTheming
  - System.Web.UI.WebControls.WizardStepBase.ID
  - System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WizardStepBase.Name
  - System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WizardStepBase.StepType
  - System.Web.UI.WebControls.WizardStepBase.Title
  - System.Web.UI.WebControls.WizardStepBase.Wizard
  langs:
  - csharp
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
  type: Class
  summary: "实现在一个步骤所需的基本功能<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控件。"
  remarks: "你无法直接创建 WizardStepBase 类的实例。 相反，由继承此类<xref:System.Web.UI.WebControls.WizardStep>类和<xref:System.Web.UI.WebControls.TemplatedWizardStep>类以提供用作向导的控件中的步骤的基本功能。</xref:System.Web.UI.WebControls.TemplatedWizardStep> </xref:System.Web.UI.WebControls.WizardStep>       你可以从要创建一个自定义类，表示的向导控件中的唯一步骤的 WizardStepBase 类派生。"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]

      public abstract class WizardStepBase : System.Web.UI.WebControls.View
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.View
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.View.Activate
  - System.Web.UI.WebControls.View.Deactivate
  - System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  - System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  - System.Web.UI.WebControls.View.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>类。"
  syntax:
    content: protected WizardStepBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  id: AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否允许用户若要从后续步骤中返回当前步骤<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  remarks: "AllowReturn 属性可以用于强制实施中的线性导航<xref:System.Web.UI.WebControls.Wizard>控件。</xref:System.Web.UI.WebControls.Wizard> 如果每个步骤都有其 AllowReturn 属性设置为`false`，用户将不能已被访问后返回到一个步骤。 您可能需要使用此功能的一种情况是不允许用户在完成因为你是将数据保存到将数据库作为每个步骤后返回到另一个步骤完成。 如果你将数据保存在每个步骤后，并允许用户返回到步骤和更改信息已保存后，保存的数据可能会损坏。 AllowReturn 属性设置为`false`，一旦用户已离开一个步骤，他或她将无法返回到它并更改任何值。       AllowReturn 属性确定如何以及何时**上一步**不呈现按钮。 下表描述了**上一步**按钮呈现行为。      |方案 |行为 |  |--------------|--------------|  |线性︰ 步骤 1 已设置为 AllowReturn`false`和用户执行任何操作将转到步骤 2。 |步骤 2 不会显示**上一步**按钮。 |  |非线性︰ 步骤 1 已设置为 AllowReturn`false`和用户执行任何操作将转到步骤 3。 |步骤 3 不会显示**上一步**按钮。 |  |侧栏按钮︰ 步骤 2 将设置为 AllowReturn `false` ，<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>设置为`true`，并在侧栏按钮用户单击。 |没有按钮自动禁用侧栏上，当 AllowReturn 设置为`false`。</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 如果用户单击按钮时，则忽略该操作。 |  |线性 & 非线性带有自定义模板︰ 该步骤具有自定义导航模板。 |否自动隐藏或显示发生如果 AllowReturn 设置为`false`何时使用模板进行导航。 **上一步**按钮应在模板上可选。 |  |使用 Visual Studio 设计器和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>︰ 在控件有 5 个步骤，你正在在步骤 4，并且运行页面。 |步骤 4 时<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>，则**上一步**呈现按钮。</xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> </xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> **上一步**按钮仅对隐藏<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType>历史记录中前面的步骤时已设置为 AllowReturn `false`。</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 由于首先呈现步骤 4 和历史记录中, 有任何步骤**上一步**按钮不会隐藏。 |  |启动步骤和非线性导航︰ 的用户访问步骤 3 和步骤 4 和步骤 1 已设置为<xref:System.Web.UI.WebControls.WizardStepType><xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>。 |向导不会添加**上一步**按钮<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType>而不考虑用户如何导航到该步骤时。 |  |在历史记录中的相同步骤︰ 的用户访问第 3 步其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType>和用户不会提交其操作。</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> </xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>  </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A></xref:System.Web.UI.WebControls.WizardStepType> 然后在步骤 3 上的上一个按钮单击。 |向导控件将检查以查看**上一步**历史记录中的步骤是用户当前正在&quot;相同&quot;步骤。 如果步骤是相同的向导控制回顾历史记录以确定前面的&quot;其他&quot;步骤中，和基本的显示**上一步**按钮和目标基于&quot;不同步骤&quot;历史记录中。 |    &1;> [!NOTE]&1;> 时 AllowReturn 属性设置为`false`，但<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>的父控件的属性<xref:System.Web.UI.WebControls.WizardStepBase>设置为`true`，侧栏区域中的按钮单击不起作用。</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 侧栏区域通常显示提供非线性导航窗格中，因此如果你未使用的非线性导航功能，你可能想要设置<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>属性`false`。</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates using the AllowReturn property to stop the user from returning to a step in the <xref:System.Web.UI.WebControls.Wizard> control after it has been accessed. In the example, the `Step1` step has its AllowReturn property set to `false`. After the user leaves the `Step1` step, no Previous button appears on the `Step2` step.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_10_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_10_1.aspx)]"
  syntax:
    content: public virtual bool AllowReturn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允许用户以返回到当前的步骤;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否将主题应用到该控件。"
  remarks: "EnableTheming 属性指示是否为启用主题<xref:System.Web.UI.WebControls.WizardStepBase>控件。</xref:System.Web.UI.WebControls.WizardStepBase> 是否为其控件集合中包含的控件启用主题，还会影响 EnableTheming 属性。 当 EnableTheming 属性是`true`，应用程序的主题目录中搜索要应用的控件外观。 如果用于特定的控件中的主题目录存在，则不会应用的外观。 当 EnableTheming 属性是`false`，则不搜索主题目录和的值<xref:System.Web.UI.Control.SkinID%2A>未使用属性。</xref:System.Web.UI.Control.SkinID%2A>       控件可以重写通过设置其父控件或包含的页的 EnableTheming 值。 例如，如果<xref:System.Web.UI.WebControls.WizardStepBase>控件具有设置为 EnableTheming `false`，你可以有选择地应用到包含向导步骤中的设置的子控件的主题<xref:System.Web.UI.Control.EnableTheming%2A>属性`true`各个子控件上。</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用主题;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  id: ID
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置分配给服务器控件的编程标识符。"
  remarks: "ID 属性用于标识并引用特定的向导步骤控件 Web 窗体页中。 ID 值将成为页; 中的控件实例的名称这样，你可以轻松访问该页面的代码中的特定步骤。 例如，如果你设置的 ID 属性<xref:System.Web.UI.WebControls.WizardStepBase>控件到&quot;步骤&1;&quot;，你可以引用在代码中为该页面的向导步骤的子控件`Step1.Controls`。</xref:System.Web.UI.WebControls.WizardStepBase>       <xref:System.Web.UI.WebControls.WizardStepBase>控件可确保在每个步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>添加或修改在设计时步骤时，控件具有有效的唯一标识符。</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.WebControls.WizardStepBase> 例如，当在设计时设置为步骤的 ID，它不能匹配的标识符中包含的另一个步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件，但不能与匹配<xref:System.Web.UI.Control.ID%2A>用于包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件。</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>"
  example:
  - "The following code example defines three wizard steps for a <xref:System.Web.UI.WebControls.Wizard> control in a Web Forms page. In code for the page, the wizard step instances are named by their ID values, and they can be referenced in the code as `WizardStep1`, `WizardStep2`, and `WizardStep3`.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_480_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_480_1.aspx)]"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "分配给控件的编程标识符。"
  overload: System.Web.UI.WebControls.WizardStepBase.ID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在设计时，该属性已设置为无效的标识符字符串。       -或-属性已设置为包含与相同的标识符<> *1> 控件在设计时。      -或-属性已设置为与另一个步骤中包含相同的标识符<> *1> 控件在设计时。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从保存的一个页面请求还原视图状态信息<xref:System.Web.UI.WebControls.WebControl.SaveViewState*>方法。</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>，表示，它表示要还原的控件状态。</xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  id: Name
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取控件中用作向导的步骤与关联的名称。"
  remarks: "Name 属性返回一个字符串，标识的向导控件中的步骤。 如果为指定值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，该名称属性返回该值。</xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 如果为不指定任何值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，该名称属性返回的值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 如果值未指定任何一个<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>或<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性，该名称属性返回`null`。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "用作向导的控件中的步骤与关联的名称。"
  overload: System.Web.UI.WebControls.WizardStepBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref:System.Web.UI.Control.OnLoad*>事件。</xref:System.Web.UI.Control.OnLoad*>"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "输出的内容<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>到指定的控件的子控件<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象，该客户端上编写相应内容以便呈现对象。"
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，它表示要在客户端呈现 HTML 内容的输出流。"
  overload: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  id: StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的一种导航用户界面 (UI) 来显示的一个步骤中<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控件。"
  remarks: "使用 StepType 属性指定的一种导航按钮以显示中为步骤<xref:System.Web.UI.WebControls.Wizard>控件。</xref:System.Web.UI.WebControls.Wizard> 如果指定此属性的值时，任何步骤标记为<xref:System.Web.UI.WebControls.WizardStepType>处于禁用状态侧栏中显示。</xref:System.Web.UI.WebControls.WizardStepType>       如果未指定此属性的值，则默认将`WizardStepType.Auto`。       下表列出 StepType 属性和步骤所产生行为的可用设置︰`WizardStepType.Auto`的导航步骤是在其中声明该步骤的顺序确定呈现的用户界面。       `WizardStepType.Complete`要显示的最后一个步骤。 没有导航按钮的呈现。       `WizardStepType.Finish`该步骤是最终数据集合步骤。 完成和上一步按钮导航呈现。       `WizardStepType.Start`步骤是第一个显示。 不呈现上一步按钮。       `WizardStepType.Step`该步骤是开始日期和完成步骤之间的任何步骤。 上一步和下一步按钮导航呈现。 此步骤类型可用于重写<xref:System.Web.UI.WebControls.WizardStepType>步骤类型。</xref:System.Web.UI.WebControls.WizardStepType>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }
    return:
      type: System.Web.UI.WebControls.WizardStepType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;></xref>枚举值。 默认值是<xref uid=&quot;langword_csharp_WizardStepType.Auto&quot; name=&quot;WizardStepType.Auto&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.StepType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "所选的值不是之一<xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;></xref>枚举值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  id: Title
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要用于中的步骤的标题<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制侧栏功能启用时。"
  remarks: "使用 Title 属性显示在一个步骤的用户友好标题<xref:System.Web.UI.WebControls.Wizard>控制侧栏功能启用时。</xref:System.Web.UI.WebControls.Wizard> 如果未设置 Title 属性，并且边栏功能启用时，值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>侧栏按钮的显示属性。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates using the Title property to display a user-friendly title for a step in the <xref:System.Web.UI.WebControls.Wizard> control. In the example, `Step1` does not have its Title property set, so it appears in the <xref:System.Web.UI.WebControls.Wizard> control as \"WizardStep1\". `Step2` does have its Title property set, so it appears as \"Step 2\".  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_149_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public virtual string Title { get; set; }
    return:
      type: System.String
      description: "要用于中的步骤的标题<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制侧栏功能启用时。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WizardStepBase.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  id: Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>是对象的父级的控件派生自<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>。"
  syntax:
    content: public System.Web.UI.WebControls.Wizard Wizard { get; }
    return:
      type: System.Web.UI.WebControls.Wizard
      description: "<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>是对象的父级的控件派生自<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.Wizard*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.View
  isExternal: false
  name: System.Web.UI.WebControls.View
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepType
  nameWithType: WizardStepType
  fullName: System.Web.UI.WebControls.WizardStepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
- uid: System.Web.UI.WebControls.Wizard
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Wizard
  nameWithType: Wizard
  fullName: System.Web.UI.WebControls.Wizard
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState
  nameWithType: WizardStepBase.LoadViewState
- uid: System.Web.UI.WebControls.WizardStepBase.Name*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad
  nameWithType: WizardStepBase.OnLoad
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren
  nameWithType: WizardStepBase.RenderChildren
- uid: System.Web.UI.WebControls.WizardStepBase.StepType*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
