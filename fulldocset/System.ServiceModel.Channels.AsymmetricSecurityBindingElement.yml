### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  id: AsymmetricSecurityBindingElement
  children:
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString
  langs:
  - csharp
  name: AsymmetricSecurityBindingElement
  nameWithType: AsymmetricSecurityBindingElement
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  type: Class
  summary: "表示支持使用非对称加密的通道安全的自定义绑定元素。 此绑定元素使用发件人的身份验证令牌的消息进行签名，并对使用接收方的令牌对消息进行加密。"
  remarks: "自定义绑定包含以特定顺序排列的绑定元素集合︰ 首先添加表示绑定堆栈顶部的元素，则下一步中的下元素绑定堆栈中，添加第二个，依次类推。      ### 将此类添加到绑定 1。  创建一种<xref:System.ServiceModel.Channels.BindingElementCollection>。</xref:System.ServiceModel.Channels.BindingElementCollection>      2.  创建将在绑定堆栈，如可选<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>和<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>。</xref:System.ServiceModel.Channels.ReliableSessionBindingElement></xref:System.ServiceModel.Channels.TransactionFlowBindingElement>此绑定元素之上的自定义绑定元素      3.  将已创建的元素添加到前面的顺序<xref:System.ServiceModel.Channels.BindingElementCollection>使用<xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%28System.Int32%2CSystem.ServiceModel.Channels.BindingElement%29>方法。</xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%28System.Int32%2CSystem.ServiceModel.Channels.BindingElement%29> </xref:System.ServiceModel.Channels.BindingElementCollection>      4.  创建的 AsymmetricSecurityBindingElement 实例并将其添加到集合。      5.  将任何其他自定义绑定元素添加到集合，如<xref:System.ServiceModel.Channels.TcpTransportBindingElement>.</xref:System.ServiceModel.Channels.TcpTransportBindingElement>       使用此类之前，应该确定标准绑定是否满足您的安全要求。      1> [!NOTE]&1;> 其基本类的属性创建此对象的实例后，应视为<xref:System.ServiceModel.Channels.SecurityBindingElement>不可变。</xref:System.ServiceModel.Channels.SecurityBindingElement> 对某些属性调用 set 可能会产生不可预知的后果︰ 绑定可能就好像属性保留了其旧值一样，并出现运行时错误，该错误是问题的唯一迹象。 已知具有此行为的两个属性为<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A>和<xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A>。</xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> </xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> 可能有其他属性是如此。"
  example:
  - "The following example shows how to use this class to create a custom binding that includes this class as a security binding element. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] the code in this example, see [How to: Consistently Reference X.509 Certificates](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[S_UEAssymetricSecurityBindingElement#1](~/add/codesnippet/csharp/t-system.servicemodel.ch_3_1.cs)]\n [!code-vb[S_UEAssymetricSecurityBindingElement#1](~/add/codesnippet/visualbasic/t-system.servicemodel.ch_3_1.vb)]"
  syntax:
    content: 'public sealed class AsymmetricSecurityBindingElement : System.ServiceModel.Channels.SecurityBindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.SecurityBindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: AsymmetricSecurityBindingElement()
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "创建此类的实例。"
  remarks: "此构造函数设置的以下成员: |成员 |值 |  |------------|-----------|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>|<xref:System.ServiceModel.Security.MessageProtectionOrder>|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A>|`false`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A>|`null`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A>|`null`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A>|`false`|</xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A></xref:System.ServiceModel.Security.MessageProtectionOrder></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>"
  syntax:
    content: public AsymmetricSecurityBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  id: '#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)'
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: AsymmetricSecurityBindingElement(SecurityTokenParameters)
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Channels.AsymmetricSecurityBindingElement&quot;></xref>与指定的接收方令牌参数。"
  remarks: "此构造函数设置的以下成员: |成员 |值 |  |------------|-----------|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>|<xref:System.ServiceModel.Security.MessageProtectionOrder>|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A>|`false`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A>|`null`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A>|`recipientTokenParameters`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A>|`false`|</xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A></xref:System.ServiceModel.Security.MessageProtectionOrder></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>"
  syntax:
    content: public AsymmetricSecurityBindingElement (System.ServiceModel.Security.Tokens.SecurityTokenParameters recipientTokenParameters);
    parameters:
    - id: recipientTokenParameters
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "定义的令牌的接收方 （例如，服务器的 X.509 证书）。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  id: '#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)'
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Channels.AsymmetricSecurityBindingElement&quot;></xref>使用指定的接收方和发起方令牌参数。"
  remarks: "此构造函数设置的以下成员: |成员 |值 |  |------------|-----------|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>|<xref:System.ServiceModel.Security.MessageProtectionOrder>|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A>|`false`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A>|`initiatorTokenParameters`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A>|`recipientTokenParameters`|  |<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A>|`false`|</xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A></xref:System.ServiceModel.Security.MessageProtectionOrder></xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>"
  example:
  - "The following code shows one way to call this constructor.  \n  \n [!code-cs[S_UEAssymetricSecurityBindingElement#2](~/add/codesnippet/csharp/e271d539-e1fa-479f-a907-_1.cs)]\n [!code-vb[S_UEAssymetricSecurityBindingElement#2](~/add/codesnippet/visualbasic/e271d539-e1fa-479f-a907-_1.vb)]"
  syntax:
    content: public AsymmetricSecurityBindingElement (System.ServiceModel.Security.Tokens.SecurityTokenParameters recipientTokenParameters, System.ServiceModel.Security.Tokens.SecurityTokenParameters initiatorTokenParameters);
    parameters:
    - id: recipientTokenParameters
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "定义的令牌的接收方 （例如服务器的 X.509 证书）。"
    - id: initiatorTokenParameters
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "定义发起程序 （例如，客户端的 X.509 证书） 的令牌。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  id: AllowSerializedSigningTokenOnReply
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: AllowSerializedSigningTokenOnReply
  nameWithType: AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个值，该值指示是否允许序列化答复消息上的签名令牌。"
  remarks: "此标志旨在启用与某些较旧的 Ws-security (例如，WSE 2.0) 实现互操作性。"
  syntax:
    content: public bool AllowSerializedSigningTokenOnReply { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果序列化签名，允许在答复消息上的令牌;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: BuildChannelFactoryCore(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: protected override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactoryCore<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "要添加。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: BuildChannelListenerCore(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'protected override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListenerCore<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "要添加。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: AsymmetricSecurityBindingElement.Clone()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "创建从当前初始化此类的新实例。"
  remarks: "这将创建当前绑定元素对象树中，也称为深层克隆的完整副本。 一个对象的深层克隆创建对象的副本以及直接或间接引用该对象的所有内容的副本。 （这也被描述为复制整个对象图。）返回深层克隆使运行时以支持多个自定义绑定共自定义绑定元素的情况。 如果未返回深层克隆，运行时行为不确定。       浅表克隆，与此相反，是对象的只是对象的对象的副本。 如果对象包含对其他对象的引用，则浅表复制不创建所引用的对象; 的副本相反，它会复制对原始对象的引用。"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A<xref:System.ServiceModel.Channels.BindingElement>具有属性值等于当前实例的对象。</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters
  id: InitiatorTokenParameters
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: InitiatorTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.InitiatorTokenParameters
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "指定发起方的令牌定义。"
  remarks: "此属性获取和设置的类，该类包含发起通信一方的令牌属性。"
  example:
  - "The following code shows an example of referencing this property.  \n  \n [!code-cs[S_UEAssymetricSecurityBindingElement#4](~/add/codesnippet/csharp/0d38d234-52be-42be-aa1f-_1.cs)]\n [!code-vb[S_UEAssymetricSecurityBindingElement#4](~/add/codesnippet/visualbasic/0d38d234-52be-42be-aa1f-_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.Tokens.SecurityTokenParameters InitiatorTokenParameters { get; set; }
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "A<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>用于包含令牌定义。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder
  id: MessageProtectionOrder
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: MessageProtectionOrder
  nameWithType: AsymmetricSecurityBindingElement.MessageProtectionOrder
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置消息加密和签名为此绑定的顺序。"
  remarks: "> [!NOTE]1> 即使 MessageProtectionOrder 属性设置为<xref:System.ServiceModel.Security.MessageProtectionOrder>。</xref:System.ServiceModel.Security.MessageProtectionOrder>如果中没有任何内容进行加密的消息，是签名元素不进行加密 此行为也会出现系统提供的绑定。 但是 WSDL 生成的[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]仍包含`sp:EncryptSignature`1> 断言。       有关成员及其说明的列表，请参阅<xref:System.ServiceModel.Security.MessageProtectionOrder>。</xref:System.ServiceModel.Security.MessageProtectionOrder>"
  syntax:
    content: public System.ServiceModel.Security.MessageProtectionOrder MessageProtectionOrder { get; set; }
    return:
      type: System.ServiceModel.Security.MessageProtectionOrder
      description: "之一<xref href=&quot;System.ServiceModel.Security.MessageProtectionOrder&quot;></xref>指定如何保护消息的值。 默认值是<xref href=&quot;System.ServiceModel.Security.MessageProtectionOrder&quot;> </xref>。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值不是枚举的有效成员。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters
  id: RecipientTokenParameters
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: RecipientTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.RecipientTokenParameters
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "指定接收方的令牌定义。"
  remarks: "此属性获取和设置一个包含接收通信一方的令牌属性类。"
  example:
  - "The following code shows an example of referencing this property.  \n  \n [!code-cs[S_UEAssymetricSecurityBindingElement#5](~/add/codesnippet/csharp/2abe1ea8-2495-432d-9149-_1.cs)]\n [!code-vb[S_UEAssymetricSecurityBindingElement#5](~/add/codesnippet/visualbasic/2abe1ea8-2495-432d-9149-_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.Tokens.SecurityTokenParameters RecipientTokenParameters { get; set; }
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "A<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>用于包含令牌定义。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  id: RequireSignatureConfirmation
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: RequireSignatureConfirmation
  nameWithType: AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个值，该值指示是否必须确认消息签名。"
  remarks: "此属性指定是否必须作为响应一部分确认请求签名。 如果值为`true`，然后服务器包括并签署，在响应中，包含在请求中的所有签名。"
  syntax:
    content: public bool RequireSignatureConfirmation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果必须确认消息签名;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  id: SetKeyDerivation(System.Boolean)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: SetKeyDerivation(Boolean)
  nameWithType: AsymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "设置一个值，该值指示是否需要派生的密钥。"
  remarks: "派生的密钥创建从现有密钥，并使其可以对话过程中使用不同的密钥。 这使得黑客解密通信的难度。"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UEAssymetricSecurityBindingElement#3](~/add/codesnippet/csharp/6d71f046-7653-4cab-8328-_1.cs)]\n [!code-vb[S_UEAssymetricSecurityBindingElement#3](~/add/codesnippet/visualbasic/6d71f046-7653-4cab-8328-_1.vb)]"
  syntax:
    content: public override void SetKeyDerivation (bool requireDerivedKeys);
    parameters:
    - id: requireDerivedKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果派生的密钥是必需的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: AsymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "导出有关绑定，其添加到 Web 服务描述语言 (WSDL) 信息的自定义策略断言。"
  remarks: "此方法与绑定相关的语句写入特定协定公开的 WSDL 信息，并由[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]以通知客户端绑定堆栈中此自定义绑定元素是否存在。       此方法采用两个参数︰<xref:System.ServiceModel.Description.MetadataExporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>对象。</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataExporter> 使用<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>， <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>，和<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>方法以获取已经从不同范围导出的策略断言的集合。</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A> 然后使用此方法将你自己的策略断言添加到适当的集合。       <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A>属性可公开<xref:System.ServiceModel.Description.ContractDescription>正在导出的终结点。</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 这样，此方法以正确限定它们的导出的策略断言的范围。 例如，代码中的安全属性可以将添加到行为<xref:System.ServiceModel.Description.ContractDescription>指示安全策略断言应该添加其中。</xref:System.ServiceModel.Description.ContractDescription>       一旦将自定义策略断言附加到 WSDL 信息，客户端可以检测和导入通过实现的自定义绑定断言<xref:System.ServiceModel.Description.IPolicyImportExtension>接口。</xref:System.ServiceModel.Description.IPolicyImportExtension>"
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref>可用来修改导出过程。"
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref>可用来插入自定义策略断言。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString
  id: ToString
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  langs:
  - csharp
  name: ToString()
  nameWithType: AsymmetricSecurityBindingElement.ToString()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "返回一个字符串，表示这<xref href=&quot;System.ServiceModel.Channels.AsymmetricSecurityBindingElement&quot;></xref>实例。"
  remarks: "返回的 ToString 信息包括<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>， <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A>， <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A>，和<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A>的当前实例的值。</xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A> </xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A> </xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> </xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "当前<xref href=&quot;System.ServiceModel.Channels.AsymmetricSecurityBindingElement&quot;></xref>实例。"
  overload: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.SecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Channels.SecurityBindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AsymmetricSecurityBindingElement()
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement()
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AsymmetricSecurityBindingElement(SecurityTokenParameters)
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters)
- uid: System.ServiceModel.Security.Tokens.SecurityTokenParameters
  parent: System.ServiceModel.Security.Tokens
  isExternal: true
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenParameters
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement(SecurityTokenParameters,SecurityTokenParameters)
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AllowSerializedSigningTokenOnReply
  nameWithType: AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelFactoryCore(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelListenerCore(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: Clone()
  nameWithType: AsymmetricSecurityBindingElement.Clone()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: AsymmetricSecurityBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: InitiatorTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.InitiatorTokenParameters
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: AsymmetricSecurityBindingElement.MessageProtectionOrder
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder
- uid: System.ServiceModel.Security.MessageProtectionOrder
  parent: System.ServiceModel.Security
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: MessageProtectionOrder
  fullName: System.ServiceModel.Security.MessageProtectionOrder
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: RecipientTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.RecipientTokenParameters
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: RequireSignatureConfirmation
  nameWithType: AsymmetricSecurityBindingElement.RequireSignatureConfirmation
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: SetKeyDerivation(Boolean)
  nameWithType: AsymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: AsymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: ToString()
  nameWithType: AsymmetricSecurityBindingElement.ToString()
  fullName: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AsymmetricSecurityBindingElement
  nameWithType: AsymmetricSecurityBindingElement.AsymmetricSecurityBindingElement
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: AllowSerializedSigningTokenOnReply
  nameWithType: AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelFactoryCore<TChannel>
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelListenerCore<TChannel>
  nameWithType: AsymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: Clone
  nameWithType: AsymmetricSecurityBindingElement.Clone
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: AsymmetricSecurityBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: InitiatorTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.InitiatorTokenParameters
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: AsymmetricSecurityBindingElement.MessageProtectionOrder
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: RecipientTokenParameters
  nameWithType: AsymmetricSecurityBindingElement.RecipientTokenParameters
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: RequireSignatureConfirmation
  nameWithType: AsymmetricSecurityBindingElement.RequireSignatureConfirmation
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: SetKeyDerivation
  nameWithType: AsymmetricSecurityBindingElement.SetKeyDerivation
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: AsymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
- uid: System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString*
  parent: System.ServiceModel.Channels.AsymmetricSecurityBindingElement
  isExternal: false
  name: ToString
  nameWithType: AsymmetricSecurityBindingElement.ToString
