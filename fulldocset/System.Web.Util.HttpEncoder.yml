### YamlMime:ManagedReference
items:
- uid: System.Web.Util.HttpEncoder
  id: HttpEncoder
  children:
  - System.Web.Util.HttpEncoder.#ctor
  - System.Web.Util.HttpEncoder.Current
  - System.Web.Util.HttpEncoder.Default
  - System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  - System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  - System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
  type: Class
  summary: "提供编码和解码逻辑。"
  remarks: "类包含编码和解码类中的方法使用如的逻辑<xref:System.Web.HttpUtility>， <xref:System.Web.HttpServerUtility>，和<xref:System.Net.HttpResponseHeader>。</xref:System.Net.HttpResponseHeader> </xref:System.Web.HttpServerUtility> </xref:System.Web.HttpUtility>       你可以从 HttpEncoder 类继承并重写其行为以进行自定义默认编码和解码的 ASP.NET 的行为。 然后设置<xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>属性的<xref:System.Web.Configuration.HttpRuntimeSection>类，以配置你的自定义类。</xref:System.Web.Configuration.HttpRuntimeSection> </xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>       从 HttpEncoder 派生的自定义类用于编码和解码可以重写内置 ASP.NET 编码和解码行为，或仅选择改变它的方面。       你可以在 ASP.NET 中来替换或补充以下编码行为配置的自定义编码类型:-HTML 编码的 HTML 特性编码的 URL 编码的 URL 路径编码的 HTTP 标头名称和标头值编码通过默认情况下，ASP.NET 应用程序配置为使用<xref:System.Web.Security.AntiXss.AntiXssEncoder>键入对于所有输出编码。</xref:System.Web.Security.AntiXss.AntiXssEncoder>       下面的示例应用程序级 Web.config 文件所示如何<xref:System.Web.Security.AntiXss.AntiXssEncoder>类型设置 ASP.NET 应用程序︰`<httpRuntime requestValidationMode=&quot;4.5&quot; encoderType=&quot;System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;/>`中的示例设置的配置设置<xref:System.Web.Security.AntiXss.AntiXssEncoder>类来执行所有输出应用程序中的编码。</xref:System.Web.Security.AntiXss.AntiXssEncoder> </xref:System.Web.Security.AntiXss.AntiXssEncoder> 有关详细信息，请参阅<xref:System.Web.Security.AntiXss.AntiXssEncoder>类概述。</xref:System.Web.Security.AntiXss.AntiXssEncoder>"
  syntax:
    content: public class HttpEncoder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.#ctor
  id: '#ctor'
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "初始化的新实例<xref href=&quot;System.Web.Util.HttpEncoder&quot;></xref>类。"
  syntax:
    content: public HttpEncoder ();
    parameters: []
  overload: System.Web.Util.HttpEncoder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Current
  id: Current
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "获取或设置<xref href=&quot;System.Web.Util.HttpEncoder&quot;></xref>将应用程序中使用的类型。"
  remarks: "如果派生<xref:System.Web.Util.HttpEncoder>类型指定在配置文件中，当前的属性返回对自定义类型的引用。</xref:System.Web.Util.HttpEncoder> 但是，如果使用没有自定义编码器，则该属性将返回对默认 ASP.NET 的引用<xref:System.Web.Util.HttpEncoder>实例。</xref:System.Web.Util.HttpEncoder>       当前的属性不是线程安全。 将此属性设置仅在应用程序的`Application_Start`方法，因为`Application_Start`在单个线程上运行。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Current { get; set; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "对将使用的编码器/解码器类型的引用。"
  overload: System.Web.Util.HttpEncoder.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "正在分配给此属性的编码器实例是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Default
  id: Default
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "获取 ASP.NET 的默认编码器的引用。"
  remarks: "常见的编码问题在于默认 ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>行为将空间转换为&quot;+&quot;字符。</xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 从历史上看，&quot;+&quot;字符已成为 Internet 约定，在 URL 中的空格字符编码到更易于阅读的方式。 但是，根据标准，空格字符应为&quot;%20&quot;和而不是编码为&quot;+&quot;字符。 ASP.NET 使您可以实现更多的标准符合编码算法。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Default { get; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "对默认编码器的引用。"
  overload: System.Web.Util.HttpEncoder.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  id: HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "编码为可用作 HTTP 标头的字符串标头名称和值。"
  remarks: "方法采用输入 HeaderNameValueEncode 字符串从`headerName`和`headerValue`参数并对它们进行编码。 将编码的值作为输出参数返回。       HeaderNameValueEncode 方法使用以下逻辑进行编码标头名称和值:-其 Unicode 值小于 ASCII 字符 32，除 ASCII 字符 9，以外的所有字符都是 URL 编码到的格式为`%NN`其中`N`字符表示十六进制值。      ASCII 字符 9 （水平制表符） 不是 URL 编码。      ASCII 字符 127 编码为`%7F`。      的未编码所有其他字符。          1> [!NOTE]&1;> 虽然此方法可以用于 Unicode 值，它通常用于 ASCII 范围内的值。       HeaderNameValueEncode 方法的默认实现返回的值`headerValue`中`encodedHeaderValue`如果`headerValue`是`null`或为空字符串。 同样，默认实现返回的值`headerName`中`encodedHeaderName`如果`headerName`是`null`或为空字符串。"
  syntax:
    content: protected virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);
    parameters:
    - id: headerName
      type: System.String
      description: "要编码的 HTTP 标头名称。"
    - id: headerValue
      type: System.String
      description: "要编码的 HTTP 标头值。"
    - id: encodedHeaderName
      type: System.String
      description: "此方法返回时，包含要使用的 HTTP 标头的编码的名称。 此参数传递时未经初始化。"
    - id: encodedHeaderValue
      type: System.String
      description: "此方法返回时，包含要使用的 HTTP 标头的编码的值。 此参数传递时未经初始化。"
  overload: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "将传入值编码为一个字符串，可以插入到由使用单引号或双引号双引号分隔的 HTML 特性。"
  remarks: "The HtmlAttributeEncode method encodes characters by using the standard HTML entities. For example, the `<` (left angle bracket) is encoded as `<` and the `\\` (backslash) is encoded as `\\`.  \n  \n It is safe to use HtmlAttributeEncode within single-quoted and double-quoted attributes. The values must be quoted."
  syntax:
    content: protected virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要编码的字符串。"
    - id: output
      type: System.IO.TextWriter
      description: "要写入到编码的值的文本编写器。"
  overload: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "将解码的 HTML 编码的字符串中的一个值。"
  remarks: "下表列出的 ASP.NET 解码逻辑可以解码的字符序列。      |字符序列 |规则 |  |------------------------|----------|  |`&#NNN;` （ASCII 字符的十进制代码）。 |解码为指定的 ASCII 字符。 字符序列 # 字符之后开始的第一个数字、 分号处完成。 |  |`&#xZZ;` （ASCII 字符的十六进制代码）。 |解码为指定的 ASCII 字符。 编码的形式指定使用而不是十进制值的十六进制字符的字符。 字符序列 # 字符之后开始的第一个数字、 分号处完成。 |  |名为 HTML 实体。 |解码为等效的 ASCII 字符。 |"
  syntax:
    content: protected virtual void HtmlDecode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要解码的字符串。"
    - id: output
      type: System.IO.TextWriter
      description: "要写入到的已解码的值的文本编写器。"
  overload: System.Web.Util.HttpEncoder.HtmlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "将字符串编码为 HTML 编码的字符串。"
  remarks: "The following table lists the character sequences that the ASP.NET encoding logic can decode.  \n  \n|Character|Encoded as|  \n|---------------|----------------|  \n|`<` (left angle bracket)|`<`|  \n|`>` (right angle bracket)|`>`|  \n|`\"` (double quotation marks)|`\"`|  \n|`&` (ampersand)|`&`|  \n|`\\` (backslash)|`\\`|  \n|ASCII characters from 160 to 255|`&#NNN;`, where `NNN` is the three-digit decimal character code|  \n  \n If you override the HtmlEncode method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes. This accommodates parsing by the Razor engine, where markup and code can be combined, such as \\<tag attr=\"@value\">. In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls HtmlEncode rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>."
  syntax:
    content: protected virtual void HtmlEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要编码的字符串。"
    - id: output
      type: System.IO.TextWriter
      description: "要写入到编码的值的文本编写器。"
  overload: System.Web.Util.HttpEncoder.HtmlEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "字符串进行编码。"
  remarks: "URL 编码可确保所有浏览器正确地传输 URL 字符串中的文本。 字符问号 （？），& 符 （&），如正斜杠 （/），并且可能会截断空格，或将其某些浏览器已损坏。 因此，必须对这些字符进行编码。"
  syntax:
    content: protected virtual string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "要编码的字符串。"
    return:
      type: System.String
      description: "已编码的字符串。"
  overload: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "将编码为等效的十六进制字符实体不允许在 URL 中的字符的数组。"
  remarks: "由<xref:System.Web.HttpUtility>类</xref:System.Web.HttpUtility>中的多个 URL 编码方法调用执行 UrlEncode 方法       进行 URL 编码的执行 UrlEncode 方法并不处于的一套 ASCII 字符的任何字符被视为可 URL 安全。 空格被编码为 ASCII&quot;`+&quot;`字符。 URL 安全 ASCII 字符包括 ASCI 字符 (A 到 Z 和一个到 z)，数字 (0 到 9)，以及某些标点符号。 下表列出被视为 URL 安全 ASCII 字符的标点符号。      |字符 |说明 |  |---------------|-----------------|  |-|连字符 |  |_|下划线 |  |.|期间 （点） |  |!|感叹号 |  |*|星号 （*） |  |(|左括号 |  |)|右括号 |"
  syntax:
    content: protected virtual byte[] UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "要编码的字节数组。"
    - id: offset
      type: System.Int32
      description: "中的位置`bytes`数组中自其开始编码。"
    - id: count
      type: System.Int32
      description: "中的项的数目`bytes`数组进行编码。"
    return:
      type: System.Byte[]
      description: "编码的字符的数组。"
  overload: System.Web.Util.HttpEncoder.UrlEncode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小于零或大于的长度<code>bytes</code>数组。       -<code>count</code>小于零或<code>count</code>加上<code>offset</code>大于的长度<code>bytes</code>数组。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "将编码的 URL 的子部分。"
  remarks: "调用 UrlPathEncode 方法<xref:System.Web.HttpUtility.UrlPathEncode%2A>方法。</xref:System.Web.HttpUtility.UrlPathEncode%2A> <xref:System.Web.HttpUtility.UrlPathEncode%2A>方法执行以下步骤:-将 UrlPathEncode 方法的编码逻辑应用到的 URL (不包括查询字符串） 的路径部分。</xref:System.Web.HttpUtility.UrlPathEncode%2A> 该方法假定 URL 被编码为 utf-8 字符串。      -将非空格编码，以便在生成编码的字符串中使用的前 128 个 ASCII 字符的一个子集。 在 Unicode 值 128 和更高版本或 32 且小于，任何字符是 URL 编码。      -将编码为&20;%的空间。"
  syntax:
    content: protected virtual string UrlPathEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "要编码的字符串。"
    return:
      type: System.String
      description: "URL 编码的字符串。"
  overload: System.Web.Util.HttpEncoder.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Util.HttpEncoder.#ctor
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
- uid: System.Web.Util.HttpEncoder.Current
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder
  parent: System.Web.Util
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Default
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
- uid: System.Web.Util.HttpEncoder.#ctor*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Current*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder.Default*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode
  nameWithType: HttpEncoder.HeaderNameValueEncode
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpEncoder.HtmlAttributeEncode
- uid: System.Web.Util.HttpEncoder.HtmlDecode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpEncoder.HtmlDecode
- uid: System.Web.Util.HttpEncoder.HtmlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpEncoder.HtmlEncode
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpEncoder.JavaScriptStringEncode
- uid: System.Web.Util.HttpEncoder.UrlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode
  nameWithType: HttpEncoder.UrlEncode
- uid: System.Web.Util.HttpEncoder.UrlPathEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpEncoder.UrlPathEncode
