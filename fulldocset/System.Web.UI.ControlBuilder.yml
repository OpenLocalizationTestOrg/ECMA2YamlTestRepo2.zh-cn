### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlBuilder
  id: ControlBuilder
  children:
  - System.Web.UI.ControlBuilder.#ctor
  - System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  - System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  - System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  - System.Web.UI.ControlBuilder.BindingContainerBuilder
  - System.Web.UI.ControlBuilder.BindingContainerType
  - System.Web.UI.ControlBuilder.BuildObject
  - System.Web.UI.ControlBuilder.CloseControl
  - System.Web.UI.ControlBuilder.ComplexPropertyEntries
  - System.Web.UI.ControlBuilder.ControlType
  - System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  - System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  - System.Web.UI.ControlBuilder.DeclareType
  - System.Web.UI.ControlBuilder.DesignerFilter
  - System.Web.UI.ControlBuilder.FChildrenAsProperties
  - System.Web.UI.ControlBuilder.FIsNonParserAccessor
  - System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  - System.Web.UI.ControlBuilder.GetObjectPersistData
  - System.Web.UI.ControlBuilder.GetResourceKey
  - System.Web.UI.ControlBuilder.HasAspCode
  - System.Web.UI.ControlBuilder.HasBody
  - System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  - System.Web.UI.ControlBuilder.ID
  - System.Web.UI.ControlBuilder.InDesigner
  - System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  - System.Web.UI.ControlBuilder.InPageTheme
  - System.Web.UI.ControlBuilder.ItemType
  - System.Web.UI.ControlBuilder.Localize
  - System.Web.UI.ControlBuilder.NamingContainerType
  - System.Web.UI.ControlBuilder.NeedsTagInnerText
  - System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  - System.Web.UI.ControlBuilder.PageVirtualPath
  - System.Web.UI.ControlBuilder.Parser
  - System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  - System.Web.UI.ControlBuilder.ServiceProvider
  - System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  - System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  - System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  - System.Web.UI.ControlBuilder.SubBuilders
  - System.Web.UI.ControlBuilder.TagName
  - System.Web.UI.ControlBuilder.TemplatePropertyEntries
  - System.Web.UI.ControlBuilder.ThemeResolutionService
  langs:
  - csharp
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
  type: Class
  summary: "构建控件和子控件，它包含支持页分析器。"
  remarks: "默认情况下，在页面上的每个控件都与默认 ControlBuilder 类相关联。 分析过程中，ASP.NET 页框架生成 ControlBuilder 对象对应于页的控件的树的树。 ControlBuilder 树然后用于生成页代码以创建管理树。 子控件，除了 ControlBuilder 定义的控件标记中的内容的分析方式的行为。 可以通过定义您自己的自定义控件生成器类来覆盖此默认行为。 这通过应用<xref:System.Web.UI.ControlBuilderAttribute>属性设为你的控件生成器类，如下所示︰ `[ControlBuilderAttribute(typeof(ControlBuilderType))]` </xref:System.Web.UI.ControlBuilderAttribute>"
  example:
  - "The following code example creates a <xref:System.Web.UI.WebControls.Table> control whose attributes and content are defined at the time the table is built. The following is the command line to use to build the executable.  \n  \n [Visual Basic]  \n  \n```  \nvbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  \n```  \n  \n [C#]  \n  \n```  \ncsc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  \n```  \n  \n [!code-cs[SystemWebUI_ControlBuilder_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlb_1_1.cs)]\n [!code-vb[SystemWebUI_ControlBuilder_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlb_1_1.vb)]  \n  \n The following code example uses the previous custom control. In particular, it builds a table whose attributes and content are defined at run time. Notice that the values shown in the  directive reflect the previous command line.  \n  \n [!code-cs[SystemWebUI_ControlBuilder_2#2](~/add/codesnippet/csharp/t-system.web.ui.controlb_1_2.aspx)]\n [!code-vb[SystemWebUI_ControlBuilder_2#2](~/add/codesnippet/visualbasic/t-system.web.ui.controlb_1_2.aspx)]"
  syntax:
    content: public class ControlBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.#ctor
  id: '#ctor'
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ControlBuilder()
  nameWithType: ControlBuilder.ControlBuilder()
  fullName: System.Web.UI.ControlBuilder.ControlBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>类。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.ControlBuilder>类。</xref:System.Web.UI.ControlBuilder>      1> [!NOTE]&1;> 分析页面时通常由 ASP.NET 使用此构造函数和创建的控件层次结构。 它不用于在代码中使用。"
  syntax:
    content: public ControlBuilder ();
    parameters: []
  overload: System.Web.UI.ControlBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  id: AllowWhitespaceLiterals
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AllowWhitespaceLiterals()
  nameWithType: ControlBuilder.AllowWhitespaceLiterals()
  fullName: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否在控件的开始和结束标记之间的内容中允许存在空白。 由 ASP.NET 页面框架调用此方法。"
  remarks: "AllowWhitespaceLiterals 方法用于确定是否之间开始标记和结束标记的控件的内容中允许存在空白。 如果此方法返回`false`，由页分析器处理内容之前，将内容从削减的空白文本。 如果此方法返回`true`，未删除的空白文本。       此方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在代码中调用。"
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#4](~/add/codesnippet/csharp/m-system.web.ui.controlb_4_1.cs)]
     [!code-vb[ControlBuilderSamples_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_4_1.vb)]
  syntax:
    content: public virtual bool AllowWhitespaceLiterals ();
    parameters: []
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  id: AppendLiteralString(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AppendLiteralString(String)
  nameWithType: ControlBuilder.AppendLiteralString(String)
  fullName: System.Web.UI.ControlBuilder.AppendLiteralString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将指定的文本内容添加到控件。 由 ASP.NET 页面框架调用此方法。"
  remarks: "重写 AppendLiteralString 方法，以控制如何文本内容之间控件的开始和结束标记处理。 文本内容可以是任何浏览器由传递给服务器控件的文本。 例如，任何 HTML 元素和其开始和结束标记之间的文本，都是文本内容。"
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#3](~/add/codesnippet/csharp/m-system.web.ui.controlb_3_1.cs)]
     [!code-vb[ControlBuilderSamples_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_3_1.vb)]
  syntax:
    content: public virtual void AppendLiteralString (string s);
    parameters:
    - id: s
      type: System.String
      description: "要添加到控件的内容。"
  overload: System.Web.UI.ControlBuilder.AppendLiteralString*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "字符串文本的格式不正确。"
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  id: AppendSubBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AppendSubBuilder(ControlBuilder)
  nameWithType: ControlBuilder.AppendSubBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.AppendSubBuilder(ControlBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将生成器添加到<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>属于容器控件的任何子控件的对象。"
  remarks: ''
  example:
  - "The following example overrides the AppendSubBuilder method to throw an <xref:System.Exception> if the control this control builder is applied to tries to include controls in its instance of <xref:System.Web.UI.ControlCollection> class.  \n  \n [!code-vb[ControlBuilderSamples_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_5_1.vb)]\n [!code-cs[ControlBuilderSamples_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_5_1.cs)]"
  syntax:
    content: public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);
    parameters:
    - id: subBuilder
      type: System.Web.UI.ControlBuilder
      description: "<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>对象分配给子控件。"
  overload: System.Web.UI.ControlBuilder.AppendSubBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder
  id: BindingContainerBuilder
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
  fullName: System.Web.UI.ControlBuilder.BindingContainerBuilder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取此生成器所创建的控件添加到绑定容器对应的控件生成器。"
  syntax:
    content: public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }
    return:
      type: System.Web.UI.ControlBuilder
      description: "对应于控件的绑定容器控件生成器。"
  overload: System.Web.UI.ControlBuilder.BindingContainerBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BindingContainerType
  id: BindingContainerType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
  fullName: System.Web.UI.ControlBuilder.BindingContainerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取此生成器所创建的控件的绑定容器的类型。"
  syntax:
    content: public virtual Type BindingContainerType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>，代表此生成器所创建的控件的绑定容器的类型。</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.BindingContainerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BuildObject
  id: BuildObject
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BuildObject()
  nameWithType: ControlBuilder.BuildObject()
  fullName: System.Web.UI.ControlBuilder.BuildObject()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "生成此引用的控件的设计时实例<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public virtual object BuildObject ();
    parameters: []
    return:
      type: System.Object
      description: "作为结果生成的控件。"
  overload: System.Web.UI.ControlBuilder.BuildObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CloseControl
  id: CloseControl
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CloseControl()
  nameWithType: ControlBuilder.CloseControl()
  fullName: System.Web.UI.ControlBuilder.CloseControl()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "由分析器以通知生成器的控件的开始和结束标记的分析已完成调用。"
  remarks: "分析器使用 CloseControl 方法以指示它已完成分析控件生成器。"
  syntax:
    content: public virtual void CloseControl ();
    parameters: []
  overload: System.Web.UI.ControlBuilder.CloseControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  id: ComplexPropertyEntries
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
  fullName: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取复杂属性项的集合。"
  remarks: "如果不存在项，则返回静态的空集合。"
  syntax:
    content: public System.Collections.ICollection ComplexPropertyEntries { get; }
    return:
      type: System.Collections.ICollection
      description: "复杂属性项的集合。"
  overload: System.Web.UI.ControlBuilder.ComplexPropertyEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ControlType
  id: ControlType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ControlType
  nameWithType: ControlBuilder.ControlType
  fullName: System.Web.UI.ControlBuilder.ControlType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref:System.Type>要创建的控件。</xref:System.Type>"
  remarks: ''
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the ControlType property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_1_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_1_1.cs)]"
  syntax:
    content: public Type ControlType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>要创建的控件。</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.ControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  id: CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  nameWithType: ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  fullName: System.Web.UI.ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "创建<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>从指定的标记名称和对象类型，以及其他参数定义生成器的对象。"
  syntax:
    content: public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);
    parameters:
    - id: parser
      type: System.Web.UI.TemplateParser
      description: "<xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref>负责分析该控件的对象。"
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>负责构建父控件的对象。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>生成器将创建的对象。</xref:System.Type>"
    - id: tagName
      type: System.String
      description: "要生成的标记的名称。 这允许生成器来支持多个标记类型。"
    - id: id
      type: System.String
      description: "<xref:System.Web.UI.ControlBuilder.ID*>分配给控件的属性。</xref:System.Web.UI.ControlBuilder.ID*>"
    - id: attribs
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>保存所有指定的标记特性的对象。</xref:System.Collections.IDictionary>"
    - id: line
      type: System.Int32
      description: "指定控件源代码文件行号。"
    - id: sourceFileName
      type: System.String
      description: "是要创建控件的源文件的名称。"
    return:
      type: System.Web.UI.ControlBuilder
      description: "负责创建控件的生成器。"
  overload: System.Web.UI.ControlBuilder.CreateBuilderFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  id: CurrentFilterResolutionService
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
  fullName: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.IFilterResolutionService&quot;></xref>分析和保持控件设计器中时用于管理设备筛选器的对象相关的服务。"
  remarks: "<xref:System.Web.UI.IFilterResolutionService>接口是特定于控件的设计器中使用设备筛选器的方式的接口。</xref:System.Web.UI.IFilterResolutionService> 当分析或在浏览器请求，上下文以外的设计器中保持控件<xref:System.Web.UI.IFilterResolutionService>提供一种方法来确定是否当前控件受指定的筛选器和指定的筛选器是否为特定的设备筛选器层次结构的一部分。</xref:System.Web.UI.IFilterResolutionService>"
  syntax:
    content: public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }
    return:
      type: System.Web.UI.IFilterResolutionService
      description: "<xref href=&quot;System.Web.UI.IFilterResolutionService&quot;> </xref>分析和保持控件设计器中时用于管理设备筛选器的对象相关的服务。"
  overload: System.Web.UI.ControlBuilder.CurrentFilterResolutionService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.DeclareType
  id: DeclareType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
  fullName: System.Web.UI.ControlBuilder.DeclareType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取将由代码生成用于声明操作的类型。"
  syntax:
    content: public virtual Type DeclareType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>代码生成用来声明该控件的控件。</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.DeclareType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.DesignerFilter
  id: DesignerFilter
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: DesignerFilter
  nameWithType: ControlBuilder.DesignerFilter
  fullName: System.Web.UI.ControlBuilder.DesignerFilter
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示`&quot;__designer&quot;`文字字符串。"
  syntax:
    content: public static readonly string DesignerFilter;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties
  id: FChildrenAsProperties
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
  fullName: System.Web.UI.ControlBuilder.FChildrenAsProperties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，确定控件是否有<xref href=&quot;System.Web.UI.ParseChildrenAttribute&quot;></xref>与<xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>"
  syntax:
    content: protected bool FChildrenAsProperties { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件具有<xref href=&quot;System.Web.UI.ParseChildrenAttribute&quot;></xref>与<xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>"
  overload: System.Web.UI.ControlBuilder.FChildrenAsProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  id: FIsNonParserAccessor
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
  fullName: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，确定控件是否实现<xref href=&quot;System.Web.UI.IParserAccessor&quot;></xref>接口。"
  syntax:
    content: protected bool FIsNonParserAccessor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果该控件实现<xref href=&quot;System.Web.UI.IParserAccessor&quot;></xref>接口，否则为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.FIsNonParserAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  id: GetChildControlType(System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetChildControlType(String,IDictionary)
  nameWithType: ControlBuilder.GetChildControlType(String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.GetChildControlType(String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref:System.Type>与子标记对应的控件类型。</xref:System.Type> 由 ASP.NET 页面框架调用此方法。"
  remarks: "此方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在代码中调用。"
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#2](~/add/codesnippet/csharp/1e17c7c0-caef-4f64-90f8-_1.cs)]
     [!code-vb[ControlBuilderSamples_1#2](~/add/codesnippet/visualbasic/1e17c7c0-caef-4f64-90f8-_1.vb)]
  syntax:
    content: public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);
    parameters:
    - id: tagName
      type: System.String
      description: "子标记名称。"
    - id: attribs
      type: System.Collections.IDictionary
      description: "包含子控件中包含的特性的数组。"
    return:
      type: System.Type
      description: "<xref:System.Type>的指定的控件的子级。</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.GetChildControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData
  id: GetObjectPersistData
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetObjectPersistData()
  nameWithType: ControlBuilder.GetObjectPersistData()
  fullName: System.Web.UI.ControlBuilder.GetObjectPersistData()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "创建<xref href=&quot;System.Web.UI.ObjectPersistData&quot;></xref>对象的<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public System.Web.UI.ObjectPersistData GetObjectPersistData ();
    parameters: []
    return:
      type: System.Web.UI.ObjectPersistData
      description: "The <xref href=&quot;System.Web.UI.ObjectPersistData&quot;></xref> for this <xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>."
  overload: System.Web.UI.ControlBuilder.GetObjectPersistData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetResourceKey
  id: GetResourceKey
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetResourceKey()
  nameWithType: ControlBuilder.GetResourceKey()
  fullName: System.Web.UI.ControlBuilder.GetResourceKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "检索此资源键<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public string GetResourceKey ();
    parameters: []
    return:
      type: System.String
      description: "资源键<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.GetResourceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HasAspCode
  id: HasAspCode
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
  fullName: System.Web.UI.ControlBuilder.HasAspCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示控件是否包含任何代码块。"
  remarks: ''
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the HasAspCode property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_3_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_3_1.cs)]"
  syntax:
    content: public virtual bool HasAspCode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件包含至少一个代码块;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.HasAspCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HasBody
  id: HasBody
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HasBody()
  nameWithType: ControlBuilder.HasBody()
  fullName: System.Web.UI.ControlBuilder.HasBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定控件是否具有开始和结束标记。 由 ASP.NET 页面框架调用此方法。"
  remarks: "此方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在代码中调用。"
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the HasBody method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_1_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_1_1.cs)]"
  syntax:
    content: public virtual bool HasBody ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件有开始标记和结束标记;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.HasBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  id: HtmlDecodeLiterals
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HtmlDecodeLiterals()
  nameWithType: ControlBuilder.HtmlDecodeLiterals()
  fullName: System.Web.UI.ControlBuilder.HtmlDecodeLiterals()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否一个 HTML 控件的文本字符串必须解码的 HTML。 由 ASP.NET 页面框架调用此方法。"
  remarks: "文字字符串是指开始标记和结束标记的 HTML 控件之间的文本。 HTML 编码是将文本转换为的浏览器将显示，而将解释为 HTML 的字符串表示形式时。 问号 （？）、 and 符 （&）、 斜杠等字符将标记 （/），并可能截断空格，或将其损坏某些浏览器，因此中出现时，这些字符必须经过编码`a`标记或查询字符串中。       HtmlDecodeLiterals 方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在您的代码中调用。"
  example:
  - "The following example overrides the HtmlDecodeLiterals method to allow HTML decoding of literal strings in any control this builder is applied to.  \n  \n [!code-vb[ControlBuilderSamples_2#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_6_1.vb)]\n [!code-cs[ControlBuilderSamples_2#2](~/add/codesnippet/csharp/m-system.web.ui.controlb_6_1.cs)]"
  syntax:
    content: public virtual bool HtmlDecodeLiterals ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>HTML 控件文本字符串要解码;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.HtmlDecodeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ID
  id: ID
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ID
  nameWithType: ControlBuilder.ID
  fullName: System.Web.UI.ControlBuilder.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取或设置要生成的控件的标识符属性。"
  syntax:
    content: public string ID { get; set; }
    return:
      type: System.String
      description: "控件的标识符属性。"
  overload: System.Web.UI.ControlBuilder.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.InDesigner
  id: InDesigner
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
  fullName: System.Web.UI.ControlBuilder.InDesigner
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回是否<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>在设计器中运行。"
  remarks: ''
  example:
  - "The following example uses the InDesigner property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called. When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method determines whether the control is being accessed at design-time through a designer. The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the InDesigner property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called. If the InDesigner property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_0_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_0_1.cs)]"
  syntax:
    content: protected bool InDesigner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>运行在设计器中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.InDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  id: Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  nameWithType: ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>供使用后实例化。 由 ASP.NET 页面框架调用此方法。"
  remarks: "此方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在代码中调用。"
  syntax:
    content: public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);
    parameters:
    - id: parser
      type: System.Web.UI.TemplateParser
      description: "<xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref>负责分析该控件的对象。"
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>负责构建父控件的对象。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>分配给生成器将创建该控件。</xref:System.Type>"
    - id: tagName
      type: System.String
      description: "要生成的标记的名称。 这允许生成器来支持多个标记类型。"
    - id: id
      type: System.String
      description: "<xref:System.Web.UI.ControlBuilder.ID*>分配给控件的属性。</xref:System.Web.UI.ControlBuilder.ID*>"
    - id: attribs
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>保存所有指定的标记特性的对象。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.ControlBuilder.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.InPageTheme
  id: InPageTheme
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
  fullName: System.Web.UI.ControlBuilder.InPageTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个布尔值，该值指示是否这<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象用于生成页面主题。"
  syntax:
    content: protected bool InPageTheme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用此<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>生成页主题; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.InPageTheme*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ItemType
  id: ItemType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ItemType
  nameWithType: ControlBuilder.ItemType
  fullName: System.Web.UI.ControlBuilder.ItemType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取在绑定容器上设置的类型。"
  syntax:
    content: public virtual string ItemType { get; }
    return:
      type: System.String
      description: "绑定容器上设置的类型。"
  overload: System.Web.UI.ControlBuilder.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Localize
  id: Localize
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Localize
  nameWithType: ControlBuilder.Localize
  fullName: System.Web.UI.ControlBuilder.Localize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个布尔值，该值指示是否控件，是创建此<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象进行了本地化。"
  syntax:
    content: public bool Localize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>以指示该控件创建此<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象是本地化; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.Localize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.NamingContainerType
  id: NamingContainerType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
  fullName: System.Web.UI.ControlBuilder.NamingContainerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取此生成器所创建的控件的命名容器的类型。"
  syntax:
    content: public Type NamingContainerType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>，代表此生成器所创建的控件的命名容器的类型。</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.NamingContainerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText
  id: NeedsTagInnerText
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: NeedsTagInnerText()
  nameWithType: ControlBuilder.NeedsTagInnerText()
  fullName: System.Web.UI.ControlBuilder.NeedsTagInnerText()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定控件生成器是否需要获取其内部的文本。 如果是这样，<xref:System.Web.UI.ControlBuilder.SetTagInnerText*>必须调用方法。</xref:System.Web.UI.ControlBuilder.SetTagInnerText*> 由 ASP.NET 页面框架调用此方法。"
  remarks: "内部文本是控件的开始标记和结束标记之间的文本。       此方法在分析过程中由 ASP.NET 页面框架调用，但不可直接在代码中调用。"
  example:
  - "The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the NeedsTagInnerText method is called. When a control has this builder attached to it, the NeedsTagInnerText determines whether the control is being accessed at design-time through a designer. The NeedsTagInnerText returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called. If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_0_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_0_1.cs)]"
  syntax:
    content: public virtual bool NeedsTagInnerText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件生成器需要获取其内部的文本。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.NeedsTagInnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  id: OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: OnAppendToParentBuilder(ControlBuilder)
  nameWithType: ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "通知<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> ，它将被添加到父控件生成器。"
  remarks: ''
  example:
  - "This example overrides the OnAppendToParentBuilder method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/6102f4e2-d19f-4c63-97f4-_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/6102f4e2-d19f-4c63-97f4-_1.cs)]"
  syntax:
    content: public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);
    parameters:
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>对象向其添加当前的生成器。"
  overload: System.Web.UI.ControlBuilder.OnAppendToParentBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.PageVirtualPath
  id: PageVirtualPath
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
  fullName: System.Web.UI.ControlBuilder.PageVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取页后，可以通过此生成的虚拟路径<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>实例。"
  syntax:
    content: public string PageVirtualPath { get; }
    return:
      type: System.String
      description: "页后，可以生成虚拟路径。"
  overload: System.Web.UI.ControlBuilder.PageVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Parser
  id: Parser
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Parser
  nameWithType: ControlBuilder.Parser
  fullName: System.Web.UI.ControlBuilder.Parser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.TemplateParser&quot;></xref>负责分析该控件。"
  remarks: "此属性检索<xref:System.Web.UI.TemplateParser>负责分析该控件。</xref:System.Web.UI.TemplateParser>"
  syntax:
    content: protected System.Web.UI.TemplateParser Parser { get; }
    return:
      type: System.Web.UI.TemplateParser
      description: "<xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref>用于分析该控件。"
  overload: System.Web.UI.ControlBuilder.Parser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  id: ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  nameWithType: ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  fullName: System.Web.UI.ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "启用自定义控件生成器，以访问生成的代码文档对象模型 (CodeDom) 并插入和在分析和生成控件的过程中修改代码。"
  remarks: "在单文件页模型中，`baseType`和`derivedType`参数具有相同的<xref:System.CodeDom.CodeTypeDeclaration>类型，这通常派生自<xref:System.Web.UI.Page>类。</xref:System.Web.UI.Page> </xref:System.CodeDom.CodeTypeDeclaration>       在代码隐藏页模型中，`baseType`是的<xref:System.CodeDom.CodeTypeDeclaration>，它表示部分的代码隐藏类，该类通常从<xref:System.Web.UI.Page>类</xref:System.Web.UI.Page>派生的类型</xref:System.CodeDom.CodeTypeDeclaration> `derivedType`参数是派生自包含标记的分部类的类。       有关 ASP.NET Web 页模型的详细信息，请参阅[ASP.NET Web 窗体页语法概述](~/add/includes/ajax-current-ext-md.md)。       有关如何使用 CodeDOM 表示并生成源代码的详细信息，请参阅[动态源代码生成和编译](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "正在生成的控件在 CodeDOM 图根容器。"
    - id: baseType
      type: System.CodeDom.CodeTypeDeclaration
      description: "包含正在生成的控件的页或用户控件的基类。"
    - id: derivedType
      type: System.CodeDom.CodeTypeDeclaration
      description: "包含正在生成的控件的页或用户控件派生的类型。"
    - id: buildMethod
      type: System.CodeDom.CodeMemberMethod
      description: "用于生成控件的代码。"
    - id: dataBindingMethod
      type: System.CodeDom.CodeMemberMethod
      description: "用于生成控件的数据绑定方法代码。"
  overload: System.Web.UI.ControlBuilder.ProcessGeneratedCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ServiceProvider
  id: ServiceProvider
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
  fullName: System.Web.UI.ControlBuilder.ServiceProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取此服务对象<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    return:
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>，它会表示的服务对象此<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>。</xref:System.IServiceProvider>"
  overload: System.Web.UI.ControlBuilder.ServiceProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  id: SetResourceKey(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetResourceKey(String)
  nameWithType: ControlBuilder.SetResourceKey(String)
  fullName: System.Web.UI.ControlBuilder.SetResourceKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "此设置的资源键<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public void SetResourceKey (string resourceKey);
    parameters:
    - id: resourceKey
      type: System.String
      description: "资源键<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>。"
  overload: System.Web.UI.ControlBuilder.SetResourceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  id: SetServiceProvider(System.IServiceProvider)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetServiceProvider(IServiceProvider)
  nameWithType: ControlBuilder.SetServiceProvider(IServiceProvider)
  fullName: System.Web.UI.ControlBuilder.SetServiceProvider(IServiceProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "此设置的服务对象<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public void SetServiceProvider (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>表示的服务对象<xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>。</xref:System.IServiceProvider>"
  overload: System.Web.UI.ControlBuilder.SetServiceProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  id: SetTagInnerText(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetTagInnerText(String)
  nameWithType: ControlBuilder.SetTagInnerText(String)
  fullName: System.Web.UI.ControlBuilder.SetTagInnerText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "提供<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>提供控件标记的内部文本。"
  remarks: "仅当调用此方法<xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A>以前返回`true`。</xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A>"
  example:
  - "The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called. When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer. The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the SetTagInnerText method is called. If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the SetTagInnerText call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_2_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_2_1.cs)]"
  syntax:
    content: public virtual void SetTagInnerText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要提供的文本。"
  overload: System.Web.UI.ControlBuilder.SetTagInnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SubBuilders
  id: SubBuilders
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
  fullName: System.Web.UI.ControlBuilder.SubBuilders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取的子列表<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象的<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  syntax:
    content: public System.Collections.ArrayList SubBuilders { get; }
    return:
      type: System.Collections.ArrayList
      description: "子列表<xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>对象。"
  overload: System.Web.UI.ControlBuilder.SubBuilders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.TagName
  id: TagName
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: TagName
  nameWithType: ControlBuilder.TagName
  fullName: System.Web.UI.ControlBuilder.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取要生成的控件的标记名称。"
  syntax:
    content: public string TagName { get; }
    return:
      type: System.String
      description: "控件的标记名称。"
  overload: System.Web.UI.ControlBuilder.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  id: TemplatePropertyEntries
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
  fullName: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取模板属性项的集合。"
  remarks: "如果不存在项，则返回静态的空集合。"
  syntax:
    content: public System.Collections.ICollection TemplatePropertyEntries { get; }
    return:
      type: System.Collections.ICollection
      description: "模板属性项的集合。"
  overload: System.Web.UI.ControlBuilder.TemplatePropertyEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService
  id: ThemeResolutionService
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
  fullName: System.Web.UI.ControlBuilder.ThemeResolutionService
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.IThemeResolutionService&quot;></xref>用于在设计时管理控件主题和皮肤的对象。"
  remarks: "<xref:System.Web.UI.IThemeResolutionService>接口是一个或多个容器<xref:System.Web.UI.ThemeProvider>对象，反过来提供<xref:System.Web.UI.SkinBuilder>将主题应用和控件到控件的外观的设计器中创建的对象。</xref:System.Web.UI.SkinBuilder> </xref:System.Web.UI.ThemeProvider> </xref:System.Web.UI.IThemeResolutionService>"
  syntax:
    content: public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }
    return:
      type: System.Web.UI.IThemeResolutionService
      description: "<xref href=&quot;System.Web.UI.IThemeResolutionService&quot;> </xref>用于在设计时管理控件主题和皮肤的对象。"
  overload: System.Web.UI.ControlBuilder.ThemeResolutionService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.ControlBuilder.#ctor
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlBuilder()
  nameWithType: ControlBuilder.ControlBuilder()
  fullName: System.Web.UI.ControlBuilder.ControlBuilder()
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AllowWhitespaceLiterals()
  nameWithType: ControlBuilder.AllowWhitespaceLiterals()
  fullName: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendLiteralString(String)
  nameWithType: ControlBuilder.AppendLiteralString(String)
  fullName: System.Web.UI.ControlBuilder.AppendLiteralString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendSubBuilder(ControlBuilder)
  nameWithType: ControlBuilder.AppendSubBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.AppendSubBuilder(ControlBuilder)
- uid: System.Web.UI.ControlBuilder
  parent: System.Web.UI
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
  fullName: System.Web.UI.ControlBuilder.BindingContainerBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
  fullName: System.Web.UI.ControlBuilder.BindingContainerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlBuilder.BuildObject
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BuildObject()
  nameWithType: ControlBuilder.BuildObject()
  fullName: System.Web.UI.ControlBuilder.BuildObject()
- uid: System.Web.UI.ControlBuilder.CloseControl
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CloseControl()
  nameWithType: ControlBuilder.CloseControl()
  fullName: System.Web.UI.ControlBuilder.CloseControl()
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
  fullName: System.Web.UI.ControlBuilder.ComplexPropertyEntries
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.ControlBuilder.ControlType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlType
  nameWithType: ControlBuilder.ControlType
  fullName: System.Web.UI.ControlBuilder.ControlType
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  nameWithType: ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  fullName: System.Web.UI.ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
- uid: System.Web.UI.TemplateParser
  parent: System.Web.UI
  isExternal: false
  name: TemplateParser
  nameWithType: TemplateParser
  fullName: System.Web.UI.TemplateParser
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
  fullName: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
- uid: System.Web.UI.IFilterResolutionService
  parent: System.Web.UI
  isExternal: false
  name: IFilterResolutionService
  nameWithType: IFilterResolutionService
  fullName: System.Web.UI.IFilterResolutionService
- uid: System.Web.UI.ControlBuilder.DeclareType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
  fullName: System.Web.UI.ControlBuilder.DeclareType
- uid: System.Web.UI.ControlBuilder.DesignerFilter
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DesignerFilter
  nameWithType: ControlBuilder.DesignerFilter
  fullName: System.Web.UI.ControlBuilder.DesignerFilter
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
  fullName: System.Web.UI.ControlBuilder.FChildrenAsProperties
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
  fullName: System.Web.UI.ControlBuilder.FIsNonParserAccessor
- uid: System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetChildControlType(String,IDictionary)
  nameWithType: ControlBuilder.GetChildControlType(String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.GetChildControlType(String,IDictionary)
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetObjectPersistData()
  nameWithType: ControlBuilder.GetObjectPersistData()
  fullName: System.Web.UI.ControlBuilder.GetObjectPersistData()
- uid: System.Web.UI.ObjectPersistData
  parent: System.Web.UI
  isExternal: false
  name: ObjectPersistData
  nameWithType: ObjectPersistData
  fullName: System.Web.UI.ObjectPersistData
- uid: System.Web.UI.ControlBuilder.GetResourceKey
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetResourceKey()
  nameWithType: ControlBuilder.GetResourceKey()
  fullName: System.Web.UI.ControlBuilder.GetResourceKey()
- uid: System.Web.UI.ControlBuilder.HasAspCode
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
  fullName: System.Web.UI.ControlBuilder.HasAspCode
- uid: System.Web.UI.ControlBuilder.HasBody
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasBody()
  nameWithType: ControlBuilder.HasBody()
  fullName: System.Web.UI.ControlBuilder.HasBody()
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HtmlDecodeLiterals()
  nameWithType: ControlBuilder.HtmlDecodeLiterals()
  fullName: System.Web.UI.ControlBuilder.HtmlDecodeLiterals()
- uid: System.Web.UI.ControlBuilder.ID
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ID
  nameWithType: ControlBuilder.ID
  fullName: System.Web.UI.ControlBuilder.ID
- uid: System.Web.UI.ControlBuilder.InDesigner
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
  fullName: System.Web.UI.ControlBuilder.InDesigner
- uid: System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  nameWithType: ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
- uid: System.Web.UI.ControlBuilder.InPageTheme
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
  fullName: System.Web.UI.ControlBuilder.InPageTheme
- uid: System.Web.UI.ControlBuilder.ItemType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ItemType
  nameWithType: ControlBuilder.ItemType
  fullName: System.Web.UI.ControlBuilder.ItemType
- uid: System.Web.UI.ControlBuilder.Localize
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Localize
  nameWithType: ControlBuilder.Localize
  fullName: System.Web.UI.ControlBuilder.Localize
- uid: System.Web.UI.ControlBuilder.NamingContainerType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
  fullName: System.Web.UI.ControlBuilder.NamingContainerType
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NeedsTagInnerText()
  nameWithType: ControlBuilder.NeedsTagInnerText()
  fullName: System.Web.UI.ControlBuilder.NeedsTagInnerText()
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: OnAppendToParentBuilder(ControlBuilder)
  nameWithType: ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
- uid: System.Web.UI.ControlBuilder.PageVirtualPath
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
  fullName: System.Web.UI.ControlBuilder.PageVirtualPath
- uid: System.Web.UI.ControlBuilder.Parser
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Parser
  nameWithType: ControlBuilder.Parser
  fullName: System.Web.UI.ControlBuilder.Parser
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  nameWithType: ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  fullName: System.Web.UI.ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.Web.UI.ControlBuilder.ServiceProvider
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
  fullName: System.Web.UI.ControlBuilder.ServiceProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetResourceKey(String)
  nameWithType: ControlBuilder.SetResourceKey(String)
  fullName: System.Web.UI.ControlBuilder.SetResourceKey(String)
- uid: System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetServiceProvider(IServiceProvider)
  nameWithType: ControlBuilder.SetServiceProvider(IServiceProvider)
  fullName: System.Web.UI.ControlBuilder.SetServiceProvider(IServiceProvider)
- uid: System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetTagInnerText(String)
  nameWithType: ControlBuilder.SetTagInnerText(String)
  fullName: System.Web.UI.ControlBuilder.SetTagInnerText(String)
- uid: System.Web.UI.ControlBuilder.SubBuilders
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
  fullName: System.Web.UI.ControlBuilder.SubBuilders
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.ControlBuilder.TagName
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TagName
  nameWithType: ControlBuilder.TagName
  fullName: System.Web.UI.ControlBuilder.TagName
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
  fullName: System.Web.UI.ControlBuilder.TemplatePropertyEntries
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
  fullName: System.Web.UI.ControlBuilder.ThemeResolutionService
- uid: System.Web.UI.IThemeResolutionService
  parent: System.Web.UI
  isExternal: false
  name: IThemeResolutionService
  nameWithType: IThemeResolutionService
  fullName: System.Web.UI.IThemeResolutionService
- uid: System.Web.UI.ControlBuilder.#ctor*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder.ControlBuilder
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AllowWhitespaceLiterals
  nameWithType: ControlBuilder.AllowWhitespaceLiterals
- uid: System.Web.UI.ControlBuilder.AppendLiteralString*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendLiteralString
  nameWithType: ControlBuilder.AppendLiteralString
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendSubBuilder
  nameWithType: ControlBuilder.AppendSubBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
- uid: System.Web.UI.ControlBuilder.BuildObject*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BuildObject
  nameWithType: ControlBuilder.BuildObject
- uid: System.Web.UI.ControlBuilder.CloseControl*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CloseControl
  nameWithType: ControlBuilder.CloseControl
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
- uid: System.Web.UI.ControlBuilder.ControlType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlType
  nameWithType: ControlBuilder.ControlType
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CreateBuilderFromType
  nameWithType: ControlBuilder.CreateBuilderFromType
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
- uid: System.Web.UI.ControlBuilder.DeclareType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
- uid: System.Web.UI.ControlBuilder.GetChildControlType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetChildControlType
  nameWithType: ControlBuilder.GetChildControlType
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetObjectPersistData
  nameWithType: ControlBuilder.GetObjectPersistData
- uid: System.Web.UI.ControlBuilder.GetResourceKey*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetResourceKey
  nameWithType: ControlBuilder.GetResourceKey
- uid: System.Web.UI.ControlBuilder.HasAspCode*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
- uid: System.Web.UI.ControlBuilder.HasBody*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasBody
  nameWithType: ControlBuilder.HasBody
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HtmlDecodeLiterals
  nameWithType: ControlBuilder.HtmlDecodeLiterals
- uid: System.Web.UI.ControlBuilder.ID*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ID
  nameWithType: ControlBuilder.ID
- uid: System.Web.UI.ControlBuilder.InDesigner*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
- uid: System.Web.UI.ControlBuilder.Init*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Init
  nameWithType: ControlBuilder.Init
- uid: System.Web.UI.ControlBuilder.InPageTheme*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
- uid: System.Web.UI.ControlBuilder.ItemType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ItemType
  nameWithType: ControlBuilder.ItemType
- uid: System.Web.UI.ControlBuilder.Localize*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Localize
  nameWithType: ControlBuilder.Localize
- uid: System.Web.UI.ControlBuilder.NamingContainerType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NeedsTagInnerText
  nameWithType: ControlBuilder.NeedsTagInnerText
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: OnAppendToParentBuilder
  nameWithType: ControlBuilder.OnAppendToParentBuilder
- uid: System.Web.UI.ControlBuilder.PageVirtualPath*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
- uid: System.Web.UI.ControlBuilder.Parser*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Parser
  nameWithType: ControlBuilder.Parser
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ProcessGeneratedCode
  nameWithType: ControlBuilder.ProcessGeneratedCode
- uid: System.Web.UI.ControlBuilder.ServiceProvider*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
- uid: System.Web.UI.ControlBuilder.SetResourceKey*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetResourceKey
  nameWithType: ControlBuilder.SetResourceKey
- uid: System.Web.UI.ControlBuilder.SetServiceProvider*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetServiceProvider
  nameWithType: ControlBuilder.SetServiceProvider
- uid: System.Web.UI.ControlBuilder.SetTagInnerText*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetTagInnerText
  nameWithType: ControlBuilder.SetTagInnerText
- uid: System.Web.UI.ControlBuilder.SubBuilders*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
- uid: System.Web.UI.ControlBuilder.TagName*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TagName
  nameWithType: ControlBuilder.TagName
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
