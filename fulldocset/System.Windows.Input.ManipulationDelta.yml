### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ManipulationDelta
  id: ManipulationDelta
  children:
  - System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  - System.Windows.Input.ManipulationDelta.Expansion
  - System.Windows.Input.ManipulationDelta.Rotation
  - System.Windows.Input.ManipulationDelta.Scale
  - System.Windows.Input.ManipulationDelta.Translation
  langs:
  - csharp
  name: ManipulationDelta
  nameWithType: ManipulationDelta
  fullName: System.Windows.Input.ManipulationDelta
  type: Class
  summary: "包含操作事件发生时累积的转换数据。"
  remarks: "ManipulationDelta 类包含有关操作的位置中的更改信息。  [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]解释更改作为<xref:System.Windows.Input.ManipulationDelta.Translation%2A>， <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>，或<xref:System.Windows.Input.ManipulationDelta.Rotation%2A>。</xref:System.Windows.Input.ManipulationDelta.Rotation%2A> </xref:System.Windows.Input.ManipulationDelta.Expansion%2A> </xref:System.Windows.Input.ManipulationDelta.Translation%2A> 当<xref:System.Windows.UIElement.ManipulationDelta>上发生事件<xref:System.Windows.UIElement>，ManipulationDelta 对象上使用属性来转换应处理该对象。</xref:System.Windows.UIElement> </xref:System.Windows.UIElement.ManipulationDelta>  <xref:System.Windows.Input.ManipulationDeltaEventArgs>类提供了两个属性的类型 ManipulationDelta︰<xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>和<xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>。</xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> </xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> </xref:System.Windows.Input.ManipulationDeltaEventArgs>       有关操作的详细信息，请参阅[输入概述](~/add/includes/ajax-current-ext-md.md)。  响应操作的应用程序的示例，请参阅[演练︰ 创建你的第一个 Touch 应用](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public class ManipulationDelta
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  id: '#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)'
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: ManipulationDelta(Vector,Double,Vector,Vector)
  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新实例<xref href=&quot;System.Windows.Input.ManipulationDelta&quot;></xref>类。"
  syntax:
    content: public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);
    parameters:
    - id: translation
      type: System.Windows.Vector
      description: "在操作之间的线性运动[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。"
    - id: rotation
      type: System.Double
      description: "以度为单位的操作的旋转。"
    - id: scale
      type: System.Windows.Vector
      description: "操作已调整量作为乘数。"
    - id: expansion
      type: System.Windows.Vector
      description: "在调整操作的量， [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。"
  overload: System.Windows.Input.ManipulationDelta.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Expansion
  id: Expansion
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
  fullName: System.Windows.Input.ManipulationDelta.Expansion
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取或设置大小在调整操作后的量[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。"
  remarks: "<xref:System.Windows.Input.ManipulationDelta.Scale%2A>和扩展属性报告调整大小操作。</xref:System.Windows.Input.ManipulationDelta.Scale%2A>  两者之间的差异是在其中报告的值的方法。  扩展属性报告中的调整大小操作[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。 <xref:System.Windows.Input.ManipulationDelta.Scale%2A>属性报告的值作为乘数。</xref:System.Windows.Input.ManipulationDelta.Scale%2A>  如果<xref:System.Windows.Input.ManipulationDelta.Scale%2A>为 0.5，操作被解释为 50%的减小大小。</xref:System.Windows.Input.ManipulationDelta.Scale%2A>  如果<xref:System.Windows.Input.ManipulationDelta.Scale%2A>为 2，操作被解释为 100%的增加大小。</xref:System.Windows.Input.ManipulationDelta.Scale%2A>"
  syntax:
    content: public System.Windows.Vector Expansion { get; }
    return:
      type: System.Windows.Vector
      description: "在调整操作的量， [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。"
  overload: System.Windows.Input.ManipulationDelta.Expansion*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Rotation
  id: Rotation
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
  fullName: System.Windows.Input.ManipulationDelta.Rotation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取或设置操作的旋转角度 （度）。"
  remarks: "旋转属性报告操作被解释为围绕一个轴旋转的方式。  轴通常是联系人的启动了操作的两个点之间的点。"
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and Rotation properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public double Rotation { get; }
    return:
      type: System.Double
      description: "以度为单位的操作的旋转。"
  overload: System.Windows.Input.ManipulationDelta.Rotation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Scale
  id: Scale
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Scale
  nameWithType: ManipulationDelta.Scale
  fullName: System.Windows.Input.ManipulationDelta.Scale
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取或设置操作调整的量作为乘数。"
  remarks: "小数位数和<xref:System.Windows.Input.ManipulationDelta.Expansion%2A>属性都报告调整大小操作。</xref:System.Windows.Input.ManipulationDelta.Expansion%2A>  两者之间的差异是在其中报告的值的方法。  扩展属性作为乘数报告的值。  如果比例为 0.5，操作将被解释为 50%的减小大小。  如果小数位数为 2，操作将被解释为 100%的增加大小。 <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>属性报告中的调整大小操作[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。</xref:System.Windows.Input.ManipulationDelta.Expansion%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, Scale, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public System.Windows.Vector Scale { get; }
    return:
      type: System.Windows.Vector
      description: "已调整的量的操作。"
  overload: System.Windows.Input.ManipulationDelta.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Translation
  id: Translation
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Translation
  nameWithType: ManipulationDelta.Translation
  fullName: System.Windows.Input.ManipulationDelta.Translation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取或设置线性动作的操作。"
  remarks: "转换属性报告操作被解释为水平和垂直移动在屏幕上的方式。"
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the Translation, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public System.Windows.Vector Translation { get; }
    return:
      type: System.Windows.Vector
      description: "在操作之间的线性运动[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]。"
  overload: System.Windows.Input.ManipulationDelta.Translation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: ManipulationDelta(Vector,Double,Vector,Vector)
  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Input.ManipulationDelta.Expansion
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
  fullName: System.Windows.Input.ManipulationDelta.Expansion
- uid: System.Windows.Input.ManipulationDelta.Rotation
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
  fullName: System.Windows.Input.ManipulationDelta.Rotation
- uid: System.Windows.Input.ManipulationDelta.Scale
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Scale
  nameWithType: ManipulationDelta.Scale
  fullName: System.Windows.Input.ManipulationDelta.Scale
- uid: System.Windows.Input.ManipulationDelta.Translation
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Translation
  nameWithType: ManipulationDelta.Translation
  fullName: System.Windows.Input.ManipulationDelta.Translation
- uid: System.Windows.Input.ManipulationDelta.#ctor*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: ManipulationDelta
  nameWithType: ManipulationDelta.ManipulationDelta
- uid: System.Windows.Input.ManipulationDelta.Expansion*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
- uid: System.Windows.Input.ManipulationDelta.Rotation*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
- uid: System.Windows.Input.ManipulationDelta.Scale*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Scale
  nameWithType: ManipulationDelta.Scale
- uid: System.Windows.Input.ManipulationDelta.Translation*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Translation
  nameWithType: ManipulationDelta.Translation
