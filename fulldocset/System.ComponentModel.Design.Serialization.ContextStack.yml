### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ContextStack
  id: ContextStack
  children:
  - System.ComponentModel.Design.Serialization.ContextStack.#ctor
  - System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  - System.ComponentModel.Design.Serialization.ContextStack.Current
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  - System.ComponentModel.Design.Serialization.ContextStack.Pop
  - System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  langs:
  - csharp
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
  type: Class
  summary: "提供一个序列化程序可以用于将信息提供给嵌套的序列化程序的堆栈对象。"
  remarks: "部分序列化程序需要有关上下文的对象，以便正确地保留其状态的信息。 ContextStack 类，可序列化程序将正在序列化的对象的上下文相关的数据设置为堆栈另一个序列化程序可以访问的位置。 值<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>提供属性<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>共享信息的部分序列化程序的使用。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>       上下文堆栈很有用，因为可以深嵌套的序列化设计文档的过程，并且每个级别的嵌套的对象可能需要上下文信息，以便正确地保留对象的状态。 序列化程序可以在调用嵌套的序列化程序之前将上下文对象设置为堆栈。 设置堆栈为每个对象应序列化程序，以对嵌套的序列化程序的调用返回之后将其删除。       通常，在堆栈上的对象包含当前正在序列化的对象有关的上下文信息。 父序列化程序将上下文信息添加到下一个要进行序列化的对象有关堆栈、 调用适当的序列化程序和序列化程序完成执行的对象上时的上下文信息从堆栈中移除。 负责每个序列化程序，以确定哪些对象获取在此堆栈上推送的实现。       例如，具有属性的对象名为`Enabled`具有<xref:System.Boolean>.</xref:System.Boolean>数据类型 如果序列化程序将此值写入数据流，它可能需要包括上下文或正在写入的属性的类型。 序列化程序不具有此信息，但是，因为它仅指示要写入<xref:System.Boolean>值。</xref:System.Boolean> 若要对序列化程序中提供此信息，父序列化程序可以将推送<xref:System.ComponentModel.PropertyDescriptor>指向`Enabled`上下文堆栈上的属性。</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example demonstrates using a ContextStack to push and then remove 10 values.  \n  \n [!code-cpp[ContextStackExample#1](~/add/codesnippet/cpp/t-system.componentmodel._11_1.cpp)]\n [!code-vb[ContextStackExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._11_1.vb)]\n [!code-cs[ContextStackExample#1](~/add/codesnippet/csharp/t-system.componentmodel._11_1.cs)]"
  syntax:
    content: public sealed class ContextStack
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  \n  \n [!code-cpp[ContextStackExample#2](~/add/codesnippet/cpp/m-system.componentmodel._1_1.cpp)]\n [!code-vb[ContextStackExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._1_1.vb)]\n [!code-cs[ContextStackExample#2](~/add/codesnippet/csharp/m-system.componentmodel._1_1.cs)]"
  syntax:
    content: public ContextStack ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  id: Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "将对象追加到堆栈上，而不是将其推到堆栈顶部的末尾。"
  remarks: "此方法允许序列化程序才能通过添加不需要按顺序移除的上下文数据对象与其他序列化程序进行通信。 没有方法来删除已追加到堆栈的末尾，而不删除所有其他对象的对象。"
  syntax:
    content: public void Append (object context);
    parameters:
    - id: context
      type: System.Object
      description: "要追加到堆栈上下文对象。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  id: Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取在堆栈上的当前对象。"
  remarks: "当前对象是在堆栈上，顶部的对象或上一次添加到堆栈的对象。"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "在堆栈上的当前对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果已不推送任何对象。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Current*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取在指定的级别堆栈上的对象。"
  syntax:
    content: public object this[int level] { get; }
    parameters:
    - id: level
      type: System.Int32
      description: "要在堆栈上检索的对象的级别。 级别 0 是堆栈的顶部，级别 1 是下一步，向下，依次类推。 此级别必须是大于或等于 0。 如果级别大于在堆栈上的级别数，它将返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "在指定的级别中，在堆栈上的对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不存在的对象在该级别。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>level</code>小于 0。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "继承自或实现指定的类型的堆栈上获取的第一个对象。"
  remarks: "在堆栈上，搜索实现或继承的对象的每个级别上进行检查`type`。 如果找到匹配项，则它将返回。"
  syntax:
    content: public object this[Type type] { get; }
    parameters:
    - id: type
      type: System.Type
      description: "要从上下文堆栈中检索的类型。"
    return:
      type: System.Object
      description: "继承自或实现指定的类型的堆栈上的第一个对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果堆栈上的没有任何对象实现的类型。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  id: Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "删除从堆栈，并返回其值的当前对象。"
  remarks: ''
  example:
  - "The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#4](~/add/codesnippet/cpp/m-system.componentmodel._2_1.cpp)]\n [!code-vb[ContextStackExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._2_1.vb)]\n [!code-cs[ContextStackExample#4](~/add/codesnippet/csharp/m-system.componentmodel._2_1.cs)]"
  syntax:
    content: public object Pop ();
    parameters: []
    return:
      type: System.Object
      description: "从堆栈中; 删除的对象<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果没有对象在堆栈上。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  id: Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "推入，或将放置到堆栈上指定的对象。"
  remarks: ''
  example:
  - "The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#3](~/add/codesnippet/cpp/m-system.componentmodel._20_1.cpp)]\n [!code-vb[ContextStackExample#3](~/add/codesnippet/visualbasic/m-system.componentmodel._20_1.vb)]\n [!code-cs[ContextStackExample#3](~/add/codesnippet/csharp/m-system.componentmodel._20_1.cs)]"
  syntax:
    content: public void Push (object context);
    parameters:
    - id: context
      type: System.Object
      description: "要推送到堆栈的上下文对象。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack.ContextStack
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append
  nameWithType: ContextStack.Append
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item
  nameWithType: ContextStack.Item
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop
  nameWithType: ContextStack.Pop
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push
  nameWithType: ContextStack.Push
