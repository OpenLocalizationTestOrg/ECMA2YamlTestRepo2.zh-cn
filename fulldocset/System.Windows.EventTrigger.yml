### YamlMime:ManagedReference
items:
- uid: System.Windows.EventTrigger
  id: EventTrigger
  children:
  - System.Windows.EventTrigger.#ctor
  - System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  - System.Windows.EventTrigger.Actions
  - System.Windows.EventTrigger.AddChild(System.Object)
  - System.Windows.EventTrigger.AddText(System.String)
  - System.Windows.EventTrigger.RoutedEvent
  - System.Windows.EventTrigger.ShouldSerializeActions
  - System.Windows.EventTrigger.SourceName
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  langs:
  - csharp
  name: EventTrigger
  nameWithType: EventTrigger
  fullName: System.Windows.EventTrigger
  type: Class
  summary: "表示一个触发器，它适用的一组操作以响应事件。"
  remarks: "<xref:System.Windows.Trigger>对象具有<xref:System.Windows.Trigger.Setters%2A>， <xref:System.Windows.TriggerBase.EnterActions%2A>，和<xref:System.Windows.TriggerBase.ExitActions%2A>应用更改或操作的属性基于某些属性的状态时事件触发器对象开始的一组<xref:System.Windows.EventTrigger.Actions%2A>指定的路由的事件的发生时。</xref:System.Windows.EventTrigger.Actions%2A> </xref:System.Windows.TriggerBase.ExitActions%2A> </xref:System.Windows.TriggerBase.EnterActions%2A> </xref:System.Windows.Trigger.Setters%2A></xref:System.Windows.Trigger> 例如，你可能想要使用事件触发器时在鼠标指针位于某一特定启动一组动画[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]控件。 与不同<xref:System.Windows.Trigger>，事件触发器终止状态没有概念，因此将不会操作撤消后，引发的条件的事件不再为 true。</xref:System.Windows.Trigger>       请注意，使用事件触发器时，你需要选择不会干扰内在行为的控件的事件。 控件如<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>如鼠标单击的用户输入事件上执行特定操作和键盘事件。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 例如，如果你样式按钮并尝试设置<xref:System.Windows.Input.Mouse.MouseDown>事件作为<xref:System.Windows.EventTrigger.RoutedEvent%2A>的事件触发器，事件触发器永远不会获取应用，因为处理此事件第一次获取了按钮。</xref:System.Windows.EventTrigger.RoutedEvent%2A> </xref:System.Windows.Input.Mouse.MouseDown> 相反，你可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>事件或不同的事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>       如果你将使用数据绑定时<xref:System.Windows.Data.Binding.TargetUpdated>事件中，你必须设置<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>值你<xref:System.Windows.Data.Binding>对象传递给`true`引发的事件。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>       添加<xref:System.Windows.TriggerAction>事件触发器对象的子隐式将其添加到<xref:System.Windows.TriggerActionCollection>事件触发器对象。</xref:System.Windows.TriggerActionCollection> </xref:System.Windows.TriggerAction>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/t-system.windows.eventtr_1.xaml)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Actions")]

      public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor
  id: '#ctor'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.EventTrigger&quot;></xref>类。"
  syntax:
    content: public EventTrigger ();
    parameters: []
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.EventTrigger&quot;></xref>与指定的事件的类。"
  syntax:
    content: public EventTrigger (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "<xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>激活此触发器。"
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.Actions
  id: Actions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取要在事件发生时应用操作的集合。"
  remarks: "与不同<xref:System.Windows.Trigger>，<xref:System.Windows.EventTrigger>有终止的状态，没有概念，因此将不会操作撤消后引发事件的条件不再为 true。</xref:System.Windows.EventTrigger> </xref:System.Windows.Trigger>       添加<xref:System.Windows.TriggerAction>子级到<xref:System.Windows.EventTrigger>对象隐式将其添加到<xref:System.Windows.TriggerActionCollection>为<xref:System.Windows.EventTrigger>对象。</xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerActionCollection> </xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerAction>      1> [!NOTE]&1;> 此属性仅在中设置[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]通过集合语法所示，或通过访问的集合对象，并使用它的各种方法，例如 Add。 要访问集合对象本身的属性是只读的该集合本身是读写。      <a name=&quot;xamlPropertyElementUsage_Actions&quot;></a># # XAML 属性元素用法```   <object>     <object.Actions>       OneOrMoreTriggerActions     </object.Actions>   </object>   ``` <a name=&quot;xamlValues_Actions&quot;> </a> # # XAML 值*OneOrMoreTriggerActions*一个或多个<xref:System.Windows.TriggerAction>对象。</xref:System.Windows.TriggerAction>      "
  example:
  - "This example describes how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. As mentioned above, adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object. Therefore, in this example, `<EventTrigger.Actions>` is implicit.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_1_1.xaml)]"
  syntax:
    content: public System.Windows.TriggerActionCollection Actions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "默认值为空集合。"
  overload: System.Windows.EventTrigger.Actions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  id: AddChild(System.Object)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "指定将对象添加到<xref:System.Windows.EventTrigger.Actions*>当前事件触发器的集合。</xref:System.Windows.EventTrigger.Actions*>"
  syntax:
    content: protected virtual void AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref href=&quot;System.Windows.TriggerAction&quot;> </xref>要添加到对象<xref:System.Windows.EventTrigger.Actions*>此触发器的集合。</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddText(System.String)
  id: AddText(System.String)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "此方法不支持，将引发异常。"
  syntax:
    content: protected virtual void AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "未使用此参数。"
  overload: System.Windows.EventTrigger.AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置<xref href=&quot;System.Windows.RoutedEvent&quot;></xref>将激活此触发器。"
  remarks: "<xref:System.Windows.EventTrigger>在指定的路由的事件发生时，s 应用一组操作。</xref:System.Windows.EventTrigger> 例如，你可能想要使用<xref:System.Windows.EventTrigger>s 鼠标指针位于某一特定时启动动画一套[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]控件。</xref:System.Windows.EventTrigger>       如果模板或包含此样式<xref:System.Windows.EventTrigger>没有`TargetType`属性指定，则需要质量与类名称使用的事件名称`ClassName.EventName`语法。</xref:System.Windows.EventTrigger>       <xref:System.Windows.EventTrigger>对象无法处理已<xref:System.Windows.RoutedEventArgs.Handled%2A>.</xref:System.Windows.RoutedEventArgs.Handled%2A>的事件</xref:System.Windows.EventTrigger> 控件如<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>如鼠标单击的用户输入事件上执行特定操作和键盘事件。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 例如，如果你样式按钮并尝试设置<xref:System.Windows.Input.Mouse.MouseDown>事件作为的 RoutedEvent <xref:System.Windows.EventTrigger>、<xref:System.Windows.EventTrigger>永远不会获取应用，因为处理此事件第一次获取了按钮。</xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger> </xref:System.Windows.Input.Mouse.MouseDown> 相反，你可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>事件或不同的事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>       如果你将使用数据绑定时<xref:System.Windows.Data.Binding.TargetUpdated>事件中，你必须设置<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>值你<xref:System.Windows.Data.Binding>为 true 时要引发的事件的对象。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_0_1.xaml)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.EventTrigger.RoutedEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "RoutedEvent 属性不能为 null。"
  platform:
  - net462
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  id: ShouldSerializeActions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "返回序列化进程是否应序列化<xref:System.Windows.EventTrigger.Actions*>此类的实例上的属性</xref:System.Windows.EventTrigger.Actions*>的有效值"
  syntax:
    content: public bool ShouldSerializeActions ();
    parameters: []
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>如果<xref:System.Windows.EventTrigger.Actions*>属性值应序列化; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.ShouldSerializeActions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.SourceName
  id: SourceName
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置该对象具有激活此触发器事件的名称。 元素触发器或模板触发器才使用此选项。"
  remarks: "你可以将此属性设置为范围内的任何元素的名称触发器集合 (集合此<xref:System.Windows.EventTrigger>是的一部分) 应用。</xref:System.Windows.EventTrigger> 这通常是在包含此<xref:System.Windows.EventTrigger>。</xref:System.Windows.EventTrigger>的模板内的已命名的元素 如果你要设置<xref:System.Windows.FrameworkElement.Triggers%2A>元素直接，则它的属性是在该父元素的范围内的已命名的元素。</xref:System.Windows.FrameworkElement.Triggers%2A>       您可以命名对象使用[X:name 指令](~/add/includes/ajax-current-ext-md.md)语法。"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 如果此属性值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，则为引发事件而受到监视的元素是模板化父级或逻辑树的根。"
  overload: System.Windows.EventTrigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "后<xref href=&quot;System.Windows.EventTrigger&quot;></xref>是在使用中，不能修改它。"
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "添加子对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.EventTrigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加的子对象。"
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "将节点的文本内容添加到对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.EventTrigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要添加到对象的文本。"
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.EventTrigger.#ctor
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.EventTrigger.Actions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
- uid: System.Windows.TriggerActionCollection
  parent: System.Windows
  isExternal: false
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.TriggerActionCollection
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.EventTrigger.AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.EventTrigger.RoutedEvent
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventTrigger.SourceName
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.EventTrigger.#ctor*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger
  nameWithType: EventTrigger.EventTrigger
- uid: System.Windows.EventTrigger.Actions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
- uid: System.Windows.EventTrigger.AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild
  nameWithType: EventTrigger.AddChild
- uid: System.Windows.EventTrigger.AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText
  nameWithType: EventTrigger.AddText
- uid: System.Windows.EventTrigger.RoutedEvent*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions
  nameWithType: EventTrigger.ShouldSerializeActions
- uid: System.Windows.EventTrigger.SourceName*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText
