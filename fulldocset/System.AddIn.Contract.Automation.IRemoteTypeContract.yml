### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: "定义组件可用于访问类型信息和跨应用程序域和进程边界调用成员的协定。"
  remarks: "若要获取 IRemoteTypeContract，组件可以调用<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>方法的实现的对象<xref:System.AddIn.Contract.Automation.IRemoteObjectContract>接口。</xref:System.AddIn.Contract.Automation.IRemoteObjectContract> </xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>       若要获取有关类型的对象的信息，请组件调用<xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>方法。</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>       若要获取有关对象的成员的信息，请组件调用返回有关特定类型的成员的信息的方法之一。 例如，若要获取的对象有关的事件的信息，请组件可以使用<xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>或<xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A>方法。</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> </xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>       若要调用对象的成员，组件使用<xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>方法。</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>"
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回当前的规范名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "当前的规范名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;></xref>使您可以访问的指定事件的当前<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "事件的当前名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索事件的值。"
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref>使您可以访问指定的事件中，如果找到; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;></xref>提供对当前的指定事件的访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索的事件的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;></xref>对象可访问的事件的匹配指定的绑定约束; 否则为一个空&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> ，它提供对当前的指定字段的访问<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "当前字段的名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索为该字段的值。"
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref>使您可以访问指定的字段中，如果找到; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;></xref>提供对当前的指定字段的访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索字段的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;></xref>对象可访问的字段的匹配指定的绑定约束; 否则为一个空&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回由当前实现的接口<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: "由当前实现的接口的规范名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> ，表示的接口具有指定规范名称此<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>实现。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>不实现具有指定规范名称接口。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回由当前实现的接口<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>表示由当前实现的所有接口的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>提供对指定的成员类型在当前的所有指定的成员访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>，使用指定的绑定约束。"
  remarks: "可以使用此方法，以获取单个成员，或获得多个具有相同的名称，如构造函数或方法的重载的成员。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "当前的成员的名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。 该名称可表示具有相同名称的多个成员。"
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: "按位组合<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>指定要搜索的成员的值。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索的成员的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>这些对象表示的当前成员<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>具有指定的名称且符合指定的条件<code> memberTypes </code>和<code> bindingFlags </code>参数。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>提供对在当前的所有成员访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>的匹配指定的绑定约束。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索的成员的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>提供对当前的成员访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>满足指定的绑定约束。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;></xref>提供对当前的指定方法的访问<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "当前方法的名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索方法的值。"
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>表示要获取的数量、 顺序和方法的参数的类型的对象。"
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref>使您可以访问指定的方法中，如果找到; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;></xref>提供对当前的指定方法的访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索方法的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;></xref>提供对与指定的绑定约束匹配的方法访问的对象。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回的集合<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;></xref>提供对当前的指定属性的访问的对象<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索中的属性的值。"
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;></xref>提供对与指定的绑定约束匹配的属性的访问的对象。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;></xref>使您可以访问的指定属性的当前<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "当前的属性的名称<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索方法的值。"
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> ，它指定属性的返回类型。"
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;的<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>表示的指定属性的参数的对象。"
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref>使您可以访问指定的属性，如果找到; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "返回有关对象的类型信息当前<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>标识。"
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: "A <xref href=&quot;System.AddIn.Contract.Automation.RemoteTypeData&quot;> </xref>包含有关对象的信息，当前<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;></xref>标识。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "调用指定的成员的当前<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>。"
  remarks: "`remoteArgModifiers`参数仅用于使用 com。 编写的组件 中的每个值`remoteArgModifiers`参数指示是否的对应值中`remoteArgs`通过引用传递参数。 长度`remoteArgModifiers`应为相同的长度`remoteArgs`。       如果你通过`null`为`remoteArgModifiers`，此方法使用默认逻辑来确定是否通过引用传递自变量。"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: "要调用的成员的名称。"
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "按位组合<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>指定如何搜索的成员的值。"
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteObjectContract&quot;> </xref>对其调用指定的成员。"
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&quot;> </xref> ，其中包含要传递给要调用的成员的自变量。"
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: "布尔值，用于指示数组是否每个`remoteArgs`通过引用传递值。"
    - id: localeId
      type: System.Int32
      description: "要被调用的成员可能会执行的特定于区域设置转换中使用的区域设置 ID。"
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> ，表示被调用成员的返回值。"
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
    name: IRemoteEventInfoContract
    nameWithType: IRemoteEventInfoContract
    fullName: IRemoteEventInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
    name: IRemoteFieldInfoContract
    nameWithType: IRemoteFieldInfoContract
    fullName: IRemoteFieldInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteTypeContract
    name: IRemoteTypeContract
    nameWithType: IRemoteTypeContract
    fullName: IRemoteTypeContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.IContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.IContract
    name: IContract
    nameWithType: IContract
    fullName: IContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
    name: IRemoteMethodInfoContract
    nameWithType: IRemoteMethodInfoContract
    fullName: IRemoteMethodInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
    name: IRemotePropertyInfoContract
    nameWithType: IRemotePropertyInfoContract
    fullName: IRemotePropertyInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: IRemoteTypeContract.GetCanonicalName
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent
  nameWithType: IRemoteTypeContract.GetEvent
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents
  nameWithType: IRemoteTypeContract.GetEvents
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField
  nameWithType: IRemoteTypeContract.GetField
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields
  nameWithType: IRemoteTypeContract.GetFields
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface
  nameWithType: IRemoteTypeContract.GetInterface
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces
  nameWithType: IRemoteTypeContract.GetInterfaces
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember
  nameWithType: IRemoteTypeContract.GetMember
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers
  nameWithType: IRemoteTypeContract.GetMembers
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod
  nameWithType: IRemoteTypeContract.GetMethod
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods
  nameWithType: IRemoteTypeContract.GetMethods
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties
  nameWithType: IRemoteTypeContract.GetProperties
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty
  nameWithType: IRemoteTypeContract.GetProperty
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData
  nameWithType: IRemoteTypeContract.GetTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember
  nameWithType: IRemoteTypeContract.InvokeMember
