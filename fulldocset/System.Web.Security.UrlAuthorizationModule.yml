### YamlMime:ManagedReference
items:
- uid: System.Web.Security.UrlAuthorizationModule
  id: UrlAuthorizationModule
  children:
  - System.Web.Security.UrlAuthorizationModule.#ctor
  - System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  - System.Web.Security.UrlAuthorizationModule.Dispose
  - System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule
  fullName: System.Web.Security.UrlAuthorizationModule
  type: Class
  summary: "验证用户有权访问请求的 URL。 此类不能被继承。"
  remarks: "哪确定当前用户是否请求的 url，根据用户允许访问<xref:System.Security.Principal.IIdentity.Name%2A>或角色的成员的用户列表。</xref:System.Security.Principal.IIdentity.Name%2A> 有关如何确定用户名称的信息，请参阅[ASP.NET 身份验证](~/add/includes/ajax-current-ext-md.md)。 有关如何管理用户角色的信息，请参阅[使用角色管理授权](~/add/includes/ajax-current-ext-md.md)。       为用户或角色的授权管理使用的配置元素。 您可以允许或拒绝用户或角色使用`allow`或`deny`子元素，分别。 `allow`和`deny`子元素解释它们出现在配置中的顺序。 元素指定允许或拒绝访问，一旦哪将完成其授权检查。 例如下, 一节从 Web.config 文件要求用户 （通过拒绝匿名用户），登录，然后仅允许用户要具有访问权限的管理员角色中。 不在的管理员角色的用户被拒绝。      ```   <authorization>     <deny users=&quot;?&quot; />     <allow roles=&quot;Administrators&quot; />     <deny users=&quot;*&quot; />   </authorization>   ```用户或角色必须专门为拒绝，若要拒绝对 URL 的用户或角色授予的权限。 也就是说，如果不指定前面的示例一样`<deny users=&quot;*&quot; />`元素，则所有经过身份验证的用户已允许访问所请求的 URL，而不考虑哪些角色它们是一样的成员。"
  example:
  - "The following code example grants access to Kim and members of the Admins role, while denying it to John and all anonymous users.  \n  \n```  \n<authorization>  \n  <allow users=\"Kim\"/>  \n  <allow roles=\"Admins\"/>  \n  <deny users=\"John\"/>  \n  <deny users=\"?\"/>  \n</authorization>  \n```"
  syntax:
    content: 'public sealed class UrlAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建的实例<xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;></xref>类。"
  remarks: "此构造函数不应从应用程序代码中调用。       ASP.NET 调用此构造函数来创建实例的<xref:System.Web.Security.UrlAuthorizationModule>类。</xref:System.Web.Security.UrlAuthorizationModule> 后调用的构造函数，它调用<xref:System.Web.Security.UrlAuthorizationModule.Init%2A>方法以初始化新<xref:System.Web.Security.UrlAuthorizationModule>对象。</xref:System.Web.Security.UrlAuthorizationModule> </xref:System.Web.Security.UrlAuthorizationModule.Init%2A>"
  syntax:
    content: public UrlAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  id: CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "确定用户是否可以访问到请求的文件。"
  remarks: "CheckUrlAccessForPrincipal 方法检查当前用户是否被授予访问权限的应用程序的 Web.config 文件中请求的文件。       用于发出请求的 HTTP 谓词是否`GET`， `POST`，或`HEAD`，CheckUrlAccessForPrincipal 方法检查文件的读取访问权限。 如果使用任何其他谓词，则 CheckUrlAccessForPrincipal 检查文件的读/写访问权限。       有关详细信息和示例 Web.config 文件，请参阅<xref:System.Web.Security.UrlAuthorizationModule>类文档。</xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: user
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>对象，表示当前用户。</xref:System.Security.Principal.IPrincipal>"
    - id: verb
      type: System.String
      description: "用于发出请求的 HTTP 谓词。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前用户可以访问该文件;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>verb</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>不符合应用程序根路径。"
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "释放所有资源，以外使用的内存<xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref>。"
  remarks: "此方法不应从应用程序代码中调用。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化<xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;></xref>对象。"
  remarks: "此方法不应从应用程序代码中调用。       Init 方法可确保<xref:System.Web.Security.UrlAuthorizationModule>包含在处理<xref:System.Web.HttpApplication.AuthorizeRequest>事件。</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "当前<xref href=&quot;System.Web.HttpApplication&quot;></xref>实例。"
  overload: System.Web.Security.UrlAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.UrlAuthorizationModule.#ctor*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: UrlAuthorizationModule.Dispose
- uid: System.Web.Security.UrlAuthorizationModule.Init*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: UrlAuthorizationModule.Init
