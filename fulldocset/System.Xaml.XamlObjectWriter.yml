### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlObjectWriter
  id: XamlObjectWriter
  children:
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  - System.Xaml.XamlObjectWriter.Clear
  - System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  - System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  - System.Xaml.XamlObjectWriter.Result
  - System.Xaml.XamlObjectWriter.RootNameScope
  - System.Xaml.XamlObjectWriter.SchemaContext
  - System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  - System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  - System.Xaml.XamlObjectWriter.WriteEndMember
  - System.Xaml.XamlObjectWriter.WriteEndObject
  - System.Xaml.XamlObjectWriter.WriteGetObject
  - System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  - System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  - System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  - System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  langs:
  - csharp
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter
  fullName: System.Xaml.XamlObjectWriter
  type: Class
  summary: "从源 XAML 节点流中创建对象图。"
  remarks: "`Write` XamlObjectWriter 方法实现模式，以便使用 XamlObjectWriter<xref:System.Xaml.XamlWriter>由定义<xref:System.Xaml.XamlWriter.WriteNode%2A>方法。</xref:System.Xaml.XamlWriter.WriteNode%2A> </xref:System.Xaml.XamlWriter> <xref:System.Xaml.XamlWriter.WriteNode%2A>逻辑交换机之间`Write`方法，具体取决于哪个节点类型是在读取器中的当前位置。</xref:System.Xaml.XamlWriter.WriteNode%2A>      ## 作用域 A XamlObjectWriter 具有作用域; 的概念也就是说，XamlObjectWriter 维护其输出对象关系图中的引用的概念点。 为特定的作用域中，某些操作可能是有效或无效，或者不产生无操作结果。 例如，如果你调用<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>若要对某个对象的初始化已实例形式存在，请编写指令，默认实现，将引发异常。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>       用于跟踪自定义 XamlObjectWriter 的范围内的可行方法是使节点操作与堆栈或框架的类。 堆栈或框架可以跟踪的推送和弹出针对每个进入或退出时 XamlObjectWriter 写入对象图时的对象模型深度级别。      ## 回调到支持中间和高级 XamlObjectWriter 情况下，编写对象图的机制提供回调 XamlObjectWriter 提交或即将提交某些操作时出现的入口点。 某些回调在设置中启用和并不特定于对象类型或写入; 的成员但是，回调信息通常是在上下文中可用，或者在事件是通过回调发送的数据。 以下是相关的回调的列表:-由声明回调<xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>时作用域转到一个新对象并在调用<xref:System.ComponentModel.ISupportInitialize.BeginInit%2A>阶段创建的每个对象的对象生存期。</xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>      的通过声明回调<xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>时作用域转到一个新对象并在调用<xref:System.ComponentModel.ISupportInitialize.EndInit%2A>阶段创建的每个对象的对象生存期。</xref:System.ComponentModel.ISupportInitialize.EndInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>      的通过声明回调<xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>作用域的对象中启动、 发生时调用时第一个<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>进行但尚未提交到该对象的作用域调用。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>      的通过声明回调<xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>作用域的对象中启动、 发生时调用时<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>进行但尚未提交到该对象的作用域调用。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>      的通过声明回调<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>时调用<xref:System.Xaml.XamlObjectWriter.OnSetValue%2A>称为。</xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>      ## 编写 XamlObjectWriter 的默认实现的字典键的约束支持的类型转换<xref:System.Collections.Generic.Dictionary%602>之前字典内容将添加到对象图。</xref:System.Collections.Generic.Dictionary%602> 这种方式的泛型字典可以在运行时中由对象键控，并可以匹配相关的泛型`Add`和索引器行为。 但是，为实现基 XamlObjectWriter，此功能仅为存在的基对象关系图创建<xref:System.Collections.Generic.Dictionary%602>类而不是针对<xref:System.Collections.Generic.Dictionary%602>.</xref:System.Collections.Generic.Dictionary%602>的派生类</xref:System.Collections.Generic.Dictionary%602>      ## 检查释放 XAML 编写器可能用于推迟的操作或位置上调用执行针对已在此期间释放的 XAML 编写器实例。 XamlObjectWriter 各种 Api 可能会引发<xref:System.ObjectDisposedException>在这些情况下。</xref:System.ObjectDisposedException>"
  syntax:
    content: 'public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer'
  inheritance:
  - System.Object
  - System.Xaml.XamlWriter
  implements:
  - System.Xaml.IXamlLineInfoConsumer
  inheritedMembers:
  - System.Xaml.XamlWriter.Close
  - System.Xaml.XamlWriter.IsDisposed
  - System.Xaml.XamlWriter.System#IDisposable#Dispose
  - System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新实例<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>类使用由的 XAML 架构上下文<xref href=&quot;System.Xaml.XamlReader&quot;> </xref>。"
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "与 XAML 读取器共享的 XAML 架构上下文提供节点以进行写入。"
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  id: '#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新实例<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>类使用由上下文<xref href=&quot;System.Xaml.XamlReader&quot;></xref>及其设置。"
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "与 XAML 读取器共享的 XAML 架构上下文提供节点以进行写入。"
    - id: settings
      type: System.Xaml.XamlObjectWriterSettings
      description: "设置对象，它指定的某些选项<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>行为和输出。"
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Clear
  id: Clear
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "重置所有可能的框架，并清除对象图。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "释放由非托管的资源<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>，并可以选择释放托管的资源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管的资源;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlObjectWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  id: OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "调用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>与关联的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>此<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>"
  syntax:
    content: protected virtual void OnAfterBeginInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要报告的对象。 对象打包到<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>调用处理程序。"
  overload: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  id: OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "调用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>与关联的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>此<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>"
  syntax:
    content: protected virtual void OnAfterEndInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要报告的对象。 值打包到<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>调用处理程序。"
  overload: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  id: OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "调用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>引用与关联的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>此<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>"
  syntax:
    content: protected virtual void OnAfterProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要报告的对象。 这将它们打包成<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>调用处理程序。"
  overload: System.Xaml.XamlObjectWriter.OnAfterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  id: OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "调用任何<xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>引用与关联的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>此<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>"
  syntax:
    content: protected virtual void OnBeforeProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要传递的值<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>调用处理程序。"
  overload: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  id: OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "调用任何<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>引用与关联的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>此编写器，只要<code> handled </code>中<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;></xref>事件数据不是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>"
  remarks: "如果`SetValue`此 XAML 编写器的操作有一个关联的处理程序 (<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>中声明<xref:System.Xaml.XamlObjectWriterSettings>)，此方法创建新<xref:System.Windows.Markup.XamlSetValueEventArgs>并将它们传递到处理程序。</xref:System.Windows.Markup.XamlSetValueEventArgs> </xref:System.Xaml.XamlObjectWriterSettings> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> 返回值将由读取<xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A>传递事件数据的值。</xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> 如果没有处理程序，且会调用此方法，则调用将返回`false`。"
  syntax:
    content: protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);
    parameters:
    - id: eventSender
      type: System.Object
      description: "与报表作为到处理程序的源的对象。"
    - id: member
      type: System.Xaml.XamlMember
      description: "若要设置，属性作为的一部分传递到处理程序的名称<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>。"
    - id: value
      type: System.Object
      description: "要提供命名的属性的值`property`。 到处理程序的一部分传递的值<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "一个布尔值，将由任何关联的处理程序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 请参阅备注。"
  overload: System.Xaml.XamlObjectWriter.OnSetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Result
  id: Result
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取已写入的最后一个对象。 通常仅当调用节点流位于其端和对象图已完成。"
  remarks: "结果的最常见的用法是仅在节点流已知要在其结尾，且对象关系图已完成时调用它。 否则为对象图很可能不完整，并不是适用于大多数平台方案。       结果通常仅包含一个非 null 值对的调用后立即调用<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>，如果当前作用域是在其中该对象提供一个值的成员。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>"
  syntax:
    content: public virtual object Result { get; }
    return:
      type: System.Object
      description: "写入的最后一个对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 请参阅备注。"
  overload: System.Xaml.XamlObjectWriter.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  id: RootNameScope
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref:System.Windows.Markup.INameScope>维护 XAML 名称范围的绝对根节点的 XAML 对象编写器的服务。</xref:System.Windows.Markup.INameScope>"
  remarks: "此属性的值可能来自对象编写器上下文。"
  syntax:
    content: public System.Windows.Markup.INameScope RootNameScope { get; }
    return:
      type: System.Windows.Markup.INameScope
      description: "<xref:System.Windows.Markup.INameScope>维护对象编写器的当前根的 XAML 名称范围的服务。</xref:System.Windows.Markup.INameScope>"
  overload: System.Xaml.XamlObjectWriter.RootNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取活动的 XAML 架构上下文。"
  remarks: "XAML 架构上下文都是大多数实际对象编写方案的必要信息源。 XAML 架构上下文影响后备类型的类型查找，并包含有关程序集的信息存在后备类型。 默认 XAML 架构上下文基于 CLR 类型映射规则。 框架通常提供其自己的 XAML 架构上下文，以便确保程序集加载机制匹配框架的编程和应用程序模型。"
  syntax:
    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "XAML 架构上下文。"
  overload: System.Xaml.XamlObjectWriter.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  id: SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "实现&lt;xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo%2A?displayProperty=fullName&gt;并提供有关异常的行信息。"
  remarks: "此服务方法不应在代码中直接调用。 但是，如果要创建从派生的类<xref:System.Xaml.XamlObjectWriter>和预期要报告上下文行号是不可用或没有什么用处，此方法不能调用。</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public void SetLineInfo (int lineNumber, int linePosition);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "读取器中的行号。"
    - id: linePosition
      type: System.Int32
      description: "从读取器的行位置。"
  overload: System.Xaml.XamlObjectWriter.SetLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  id: ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取一个值，报告的行信息服务是否应提供值，并因此，还应调用<xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>方法时它都相关。</xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>"
  remarks: "此实现始终返回`true`。"
  syntax:
    content: public bool ShouldProvideLineInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用的编写器; 行信息否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  id: WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "关闭当前的成员范围内，并关闭时，可以编写成员范围的值。 新范围将成为父对象的成员的作用域。"
  syntax:
    content: public override void WriteEndMember ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "未能从遇到此调用和前一个之间的值节点创建成员值<xref uid=&quot;langword_csharp_StartMember&quot; name=&quot;StartMember&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  id: WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "关闭当前对象编写器的作用域。 新对象的作用域将成为父成员范围。"
  remarks: "如果此`EndObject`位置作用域关闭的根对象，新对象的作用域将成为根作用域。       调用<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>可能不尚未创建该对象，因为对象成员可能必需的初始化路径，例如初始化文本或初始化参数。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 对于这些情况，WriteEndObject 调用实际写入对象。"
  syntax:
    content: public override void WriteEndObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  id: WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "写入概念<xref uid=&quot;langword_csharp_StartObject&quot; name=&quot;StartObject&quot; href=&quot;&quot;></xref>到对象图时指定的对象是默认值或父属性的隐式值。 隐式值来自于从 XAML 架构上下文中获取的信息和支持类型信息，而不是指定为输入 XAML 节点集的对象值。"
  remarks: "使用 WriteGetObject 写入和与写入之间的差异<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>可在生成的对象图中查看。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> WriteGetObject 并不构造类型的实例，因为 WriteGetObject API 具有要通知的内容构造的对象图的信息。 相反，父属性初始化; 时创建对象时因此，<xref:System.Xaml.XamlObjectWriter>不需要构造它。</xref:System.Xaml.XamlObjectWriter> 与此相反，<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>指定该类型的实例应构造并插入到的对象图。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       如果你的 XAML 节点流将视为一系列帧，WriteGetObject 平衡到<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>调用。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> 因此，加号 WriteGetObject 数<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>调用应等于数量<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>XAML 节点流的完整对象写入评估的一部分的调用。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       概念`StartObject`定位的对象图中的隐式对象是必需的因为尽管本身的对象值是隐式的默认值，但该对象仍可能具有需要编写基于在 XAML 节点流的成员。 出现这种情况的典型情况是当<xref:System.Xaml.XamlObjectWriter>写入成员节点的集合属性，以及集合初始化是隐式创建拥有的集合属性的对象。</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public override void WriteGetObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteGetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  id: WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "定义适用于的下一步对象的作用域或成员范围的命名空间声明。"
  remarks: "如果当前的作用域是根作用域、 对象的作用域或成员范围，可以编写一个命名空间声明。 但是，WriteNamespace 只能调用之前调用以下项之一︰ WriteNamespace， <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>，或<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 用于写入到同一个节点的多个命名空间声明是连续 WriteNamespace 用例。 最终，<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>或<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>必须调用。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       WriteNamespace 不使用`Start` / `End`比喻。 尽管 XAML 命名空间在 CLR 表示的意义上具有成员，但成员已知，且不需要表示为一种特殊类型的<xref:System.Xaml.XamlMember>扩展性。</xref:System.Xaml.XamlMember> 若要访问的值<xref:System.Xaml.NamespaceDeclaration>，你访问其<xref:System.Xaml.NamespaceDeclaration.Namespace%2A>和<xref:System.Xaml.NamespaceDeclaration.Prefix%2A>属性。</xref:System.Xaml.NamespaceDeclaration.Prefix%2A> </xref:System.Xaml.NamespaceDeclaration.Namespace%2A> </xref:System.Xaml.NamespaceDeclaration>       命名空间声明可能具有<xref:System.String.Empty?displayProperty=fullName>的前缀值。</xref:System.String.Empty?displayProperty=fullName> A<xref:System.String.Empty?displayProperty=fullName>前缀表示的默认 XAML 命名空间声明。</xref:System.String.Empty?displayProperty=fullName> 请不要尝试使用 null 表示默认的前缀; 此 API 中引发了异常。 有关详细信息，请参阅<xref:System.Xaml.NamespaceDeclaration>。</xref:System.Xaml.NamespaceDeclaration>"
  syntax:
    content: public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);
    parameters:
    - id: namespaceDeclaration
      type: System.Xaml.NamespaceDeclaration
      description: "要写入的命名空间声明。"
  overload: System.Xaml.XamlObjectWriter.WriteNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlObjectReaderException
    commentId: T:System.Xaml.XamlObjectReaderException
    description: "尝试编写无效的作用域中的 XAML 命名空间节点。"
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  id: WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "将新的成员节点写入到当前对象的作用域，并且该范围将成为新的成员范围。"
  remarks: >-
    > [!TIP]

    >  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.
  syntax:
    content: public override void WriteStartMember (System.Xaml.XamlMember property);
    parameters:
    - id: property
      type: System.Xaml.XamlMember
      description: "要写入的 XAML 属性。 通常从 XAML 读取器通过中间 XAML 节点流，获取此值。"
  overload: System.Xaml.XamlObjectWriter.WriteStartMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "<code>property</code>has <xref:System.Xaml.XamlMember.IsUnknown*> set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -或-<xref:System.Xaml.XamlLanguage.UnknownContent*>传递，指示 XAML 节点流包含不支持的内容的对象的内容。       -或者-尝试编写无效的作用域中的启动成员。"
  - type: System.Xaml.XamlDuplicateMemberException
    commentId: T:System.Xaml.XamlDuplicateMemberException
    description: "<code>property</code>指定在父对象的作用域中已显式设置的属性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>property</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  id: WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "将对象节点写入到当前作用域，并将作用域设置为新对象的作用域。"
  syntax:
    content: public override void WriteStartObject (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "要写入的类型。 通常从 XAML 读取器获取此值。"
  overload: System.Xaml.XamlObjectWriter.WriteStartObject*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "处理<xref:System.Xaml.XamlType.IsUnknown*>键入并不能创建一个对象。</xref:System.Xaml.XamlType.IsUnknown*>       -或者-尝试编写无效的作用域中的起始对象。"
  - type: System.Xaml.XamlParseException
    commentId: T:System.Xaml.XamlParseException
    description: "尝试写入一个根对象时设置中已提供的根对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  id: WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "将值写入当前成员作用域。 如果当前作用域是集合、 字典或数组对象内，则值应添加到集合、 字典或数组中。"
  syntax:
    content: public override void WriteValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要写入的值。"
  overload: System.Xaml.XamlObjectWriter.WriteValue*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "尝试在无效的作用域中写入一个值。"
  platform:
  - net462
references:
- uid: System.Xaml.XamlWriter
  isExternal: false
  name: System.Xaml.XamlWriter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlObjectWriterException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterException
  nameWithType: XamlObjectWriterException
  fullName: System.Xaml.XamlObjectWriterException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlObjectReaderException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectReaderException
  nameWithType: XamlObjectReaderException
  fullName: System.Xaml.XamlObjectReaderException
- uid: System.Xaml.XamlDuplicateMemberException
  parent: System.Xaml
  isExternal: false
  name: XamlDuplicateMemberException
  nameWithType: XamlDuplicateMemberException
  fullName: System.Xaml.XamlDuplicateMemberException
- uid: System.Xaml.XamlParseException
  parent: System.Xaml
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Xaml.XamlParseException
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
- uid: System.Xaml.XamlObjectWriterSettings
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterSettings
  nameWithType: XamlObjectWriterSettings
  fullName: System.Xaml.XamlObjectWriterSettings
- uid: System.Xaml.XamlObjectWriter.Clear
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlObjectWriter.Result
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
- uid: System.Windows.Markup.INameScope
  parent: System.Windows.Markup
  isExternal: true
  name: INameScope
  nameWithType: INameScope
  fullName: System.Windows.Markup.INameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
- uid: System.Xaml.XamlObjectWriter.#ctor*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter.XamlObjectWriter
- uid: System.Xaml.XamlObjectWriter.Clear*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear
  nameWithType: XamlObjectWriter.Clear
- uid: System.Xaml.XamlObjectWriter.Dispose*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose
  nameWithType: XamlObjectWriter.Dispose
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit
  nameWithType: XamlObjectWriter.OnAfterBeginInit
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit
  nameWithType: XamlObjectWriter.OnAfterEndInit
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties
  nameWithType: XamlObjectWriter.OnAfterProperties
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties
  nameWithType: XamlObjectWriter.OnBeforeProperties
- uid: System.Xaml.XamlObjectWriter.OnSetValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue
  nameWithType: XamlObjectWriter.OnSetValue
- uid: System.Xaml.XamlObjectWriter.Result*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo
  nameWithType: XamlObjectWriter.SetLineInfo
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember
  nameWithType: XamlObjectWriter.WriteEndMember
- uid: System.Xaml.XamlObjectWriter.WriteEndObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject
  nameWithType: XamlObjectWriter.WriteEndObject
- uid: System.Xaml.XamlObjectWriter.WriteGetObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject
  nameWithType: XamlObjectWriter.WriteGetObject
- uid: System.Xaml.XamlObjectWriter.WriteNamespace*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace
  nameWithType: XamlObjectWriter.WriteNamespace
- uid: System.Xaml.XamlObjectWriter.WriteStartMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember
  nameWithType: XamlObjectWriter.WriteStartMember
- uid: System.Xaml.XamlObjectWriter.WriteStartObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject
  nameWithType: XamlObjectWriter.WriteStartObject
- uid: System.Xaml.XamlObjectWriter.WriteValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue
  nameWithType: XamlObjectWriter.WriteValue
