### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurfaceManager
  id: DesignSurfaceManager
  children:
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  langs:
  - csharp
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager
  fullName: System.ComponentModel.Design.DesignSurfaceManager
  type: Class
  summary: "管理集合<xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;></xref>对象。"
  remarks: "DesignSurfaceManager 类旨在作为容器的<xref:System.ComponentModel.Design.DesignSurface>对象。</xref:System.ComponentModel.Design.DesignSurface> 它提供公共服务该句柄事件之间的路由设计器，属性窗口和其他全局对象。 使用 DesignSurfaceManager 是可选的但建议如果您计划让多个设计器窗口。       DesignSurfaceManager 类自动提供了一些设计时服务。 您可以通过将它们替换在受保护覆盖每个这些服务<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>属性。</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 若要替换服务，重写构造函数、 调用基类，和通过受保护的任何更改<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>属性。</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 已添加到服务容器的所有实现服务<xref:System.IDisposable>释放设计图面管理器时，将释放接口。</xref:System.IDisposable> DesignSurfaceManager 类提供<xref:System.ComponentModel.Design.IDesignerEventService>为默认服务的接口。</xref:System.ComponentModel.Design.IDesignerEventService> <xref:System.ComponentModel.Design.IDesignerEventService>提供设计器事件的全局事件处理机制。</xref:System.ComponentModel.Design.IDesignerEventService> 通过此机制，应用程序将设计器变为活动状态时得到通知。 该服务提供设计器的集合和其中全局对象，如属性窗口中，可以监视选择一个位置更改事件。"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurfaceManager : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>类。"
  syntax:
    content: public DesignSurfaceManager ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>类。"
  syntax:
    content: public DesignSurfaceManager (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "父服务提供程序。 如果它们无法解析的设计图面管理器，服务请求将转发到此提供程序。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  id: ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取或设置活动设计器。"
  remarks: "当设计器无法活动窗口，则应该通过设计器的用户界面将设置 ActiveDesignSurface 属性。 此属性的默认实现适用于的默认实现<xref:System.ComponentModel.Design.IDesignerEventService>接口来通知相关的方新设计器目前处于活动状态。</xref:System.ComponentModel.Design.IDesignerEventService> 如果提供您自己的实现<xref:System.ComponentModel.Design.IDesignerEventService>，则应重写此属性以适当地通知你的服务。</xref:System.ComponentModel.Design.IDesignerEventService> 此属性可以设置为`null`，指示没有设计器处于活动状态。"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "活动设计器。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  id: ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "当前活动设计器更改时发生。"
  syntax:
    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;
    return:
      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  id: CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "创建实例的设计图面。"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的设计图面实例中。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  id: CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "创建实例的设计图面。"
  remarks: "如果你想要方便地添加其他每个设计器服务，使用`parentProvider`参数来为此设计图面中提供的服务提供程序。 CreateDesignSurface 方法创建的合并的服务提供程序能够满足从给定的服务提供程序的服务请求以及<xref:System.ComponentModel.Design.DesignSurfaceManager>本身。</xref:System.ComponentModel.Design.DesignSurfaceManager> CreateDesignSurface 方法随后将传递到此服务提供商<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>       后<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>返回设计图面上，方法尝试获取<xref:System.ComponentModel.Design.IDesignerEventService>.</xref:System.ComponentModel.Design.IDesignerEventService> CreateDesignSurface</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 如果不存在，并且它是服务的实例，<xref:System.ComponentModel.Design.DesignSurfaceManager>提供默认情况下，CreateDesignSurface 方法引发<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>事件。</xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> </xref:System.ComponentModel.Design.DesignSurfaceManager>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "父服务提供程序。 新的合并的服务提供程序将创建，将首先请求一种服务，此提供程序并分派到设计图面管理器对象的任何故障。 此合并的提供程序将传递给<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的设计图面实例中。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  id: CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "创建在设计图面的实现。"
  remarks: "两个调用 CreateDesignSurfaceCore 方法<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 它是实际创建设计图面的实现。 默认实现只返回新<xref:System.ComponentModel.Design.DesignSurface>。</xref:System.ComponentModel.Design.DesignSurface> 你可以重写该方法以提供自定义对象派生自<xref:System.ComponentModel.Design.DesignSurface>类。</xref:System.ComponentModel.Design.DesignSurface>"
  syntax:
    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "要传递到设计图面服务提供程序。 这是任一实例<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>或实现的对象<xref:System.IServiceProvider>，和表示的服务提供程序之间的合并<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>类和外部传递提供程序。</xref:System.IServiceProvider>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的设计图面实例中。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  id: DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "创建设计器时出现。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  id: DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放设计器时发生。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  id: DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取设计图面的集合。"
  remarks: "DesignSurfaces 属性实现直接的顶部<xref:System.ComponentModel.Design.IDesignerEventService>，因此如果你提供的该服务实现，此属性使用您的实现。</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }
    return:
      type: System.ComponentModel.Design.DesignSurfaceCollection
      description: "当前承载的设计图面管理器的设计图面的集合。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放使用的资源<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>。"
  remarks: "公共的 Dispose 方法遵循标准<xref:System.IDisposable>模式。</xref:System.IDisposable> 调用此方法将销毁设计图面管理器。 它还将释放导致实现的所有服务的服务容器<xref:System.IDisposable>也被释放。</xref:System.IDisposable> 此方法的受保护的版本是`virtual`，它遵循普通<xref:System.IDisposable>模式。</xref:System.IDisposable>      1> [!NOTE]&1;> 由于<xref:System.ComponentModel.Design.DesignSurfaceManager>不具有任何本机代码，以清理时，它没有调用<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>终结器</xref:System.ComponentModel.Design.DesignSurfaceManager> 如果你需要调用<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>，你必须自己添加一个终结器。</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放由非托管的资源<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "公共<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>方法遵循标准<xref:System.IDisposable>模式。</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 调用此方法将销毁设计图面管理器。 它还将释放导致实现的所有服务的服务容器<xref:System.IDisposable>也被释放。</xref:System.IDisposable> 此方法的受保护的版本是`virtual`，它遵循普通<xref:System.IDisposable>模式。</xref:System.IDisposable>      1> [!NOTE]&1;> 由于<xref:System.ComponentModel.Design.DesignSurfaceManager>不具有任何本机代码，以清理时，它不具有一个调用 Dispose 的终结器。</xref:System.ComponentModel.Design.DesignSurfaceManager> 如果你需要调用 Dispose，你必须自己添加一个终结器。       此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.ComponentModel.Design.DesignSurfaceManager>引用。</xref:System.ComponentModel.Design.DesignSurfaceManager> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "在设计图面管理器的服务容器中获取服务。"
  remarks: "GetService 方法将转发到任何服务提供程序在构造时提供给设计图面管理器。"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要检索的服务类型。"
    return:
      type: System.Object
      description: "实现时，或者是的给定的服务类型; 一个派生的类的对象否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果服务不存在服务容器中。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  id: SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "当全局所选内容更改时发生。"
  remarks: "组件的活动设计器的选择集更改时，引发此事件。 这通过映射<xref:System.ComponentModel.Design.IDesignerEventService>接口。</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取设计图面管理器的 ServiceContainer。"
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "设计图面管理器的 ServiceContainer。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurface
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ActiveDesignSurfaceChangedEventHandler
  nameWithType: ActiveDesignSurfaceChangedEventHandler
  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
- uid: System.ComponentModel.Design.DesignSurfaceEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceEventHandler
  nameWithType: DesignSurfaceEventHandler
  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceCollection
  nameWithType: DesignSurfaceCollection
  fullName: System.ComponentModel.Design.DesignSurfaceCollection
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager.DesignSurfaceManager
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface
  nameWithType: DesignSurfaceManager.CreateDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose
  nameWithType: DesignSurfaceManager.Dispose
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService
  nameWithType: DesignSurfaceManager.GetService
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
