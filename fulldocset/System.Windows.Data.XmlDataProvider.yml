### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.XmlDataProvider
  id: XmlDataProvider
  children:
  - System.Windows.Data.XmlDataProvider.#ctor
  - System.Windows.Data.XmlDataProvider.BaseUri
  - System.Windows.Data.XmlDataProvider.BeginQuery
  - System.Windows.Data.XmlDataProvider.Document
  - System.Windows.Data.XmlDataProvider.EndInit
  - System.Windows.Data.XmlDataProvider.IsAsynchronous
  - System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  - System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  - System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  - System.Windows.Data.XmlDataProvider.Source
  - System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  - System.Windows.Data.XmlDataProvider.XmlSerializer
  - System.Windows.Data.XmlDataProvider.XPath
  langs:
  - csharp
  name: XmlDataProvider
  nameWithType: XmlDataProvider
  fullName: System.Windows.Data.XmlDataProvider
  type: Class
  summary: "使用户可以声明性访问[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]数据绑定的数据。"
  remarks: "> [!IMPORTANT]1> 在部分信任沙盒，XmlDataProvider 失败时它没有权限来访问给定的数据。 有关部分信任安全性的详细信息，请参阅[WPF 部分信任安全](~/add/includes/ajax-current-ext-md.md)。       XmlDataProvider 公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]数据。      -你可以嵌入内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据使用 XmlDataProvider 类。      -你可以设置<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据文件。</xref:System.Uri> </xref:System.Windows.Data.XmlDataProvider.Source%2A>      -你可以设置<xref:System.Windows.Data.XmlDataProvider.Document%2A>到<xref:System.Xml.XmlDocument>。</xref:System.Xml.XmlDocument>属性</xref:System.Windows.Data.XmlDataProvider.Document%2A>       XmlDataProvider 执行完全刷新的所有绑定时<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName>事件发生。</xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName> 有特定的节点不进行优化。       <xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=fullName>属性设置为`true`默认情况下，这意味着 XmlDataProvider 检索数据，并生成的集合[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]异步默认节点。</xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.ContentProperty("XmlSerializer")]

      public class XmlDataProvider : System.Windows.Data.DataSourceProvider, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  - System.Windows.Data.DataSourceProvider
  implements:
  - System.Windows.Markup.IUriContext
  inheritedMembers:
  - System.Windows.Data.DataSourceProvider.BeginInit
  - System.Windows.Data.DataSourceProvider.Data
  - System.Windows.Data.DataSourceProvider.DataChanged
  - System.Windows.Data.DataSourceProvider.DeferRefresh
  - System.Windows.Data.DataSourceProvider.Dispatcher
  - System.Windows.Data.DataSourceProvider.Error
  - System.Windows.Data.DataSourceProvider.InitialLoad
  - System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled
  - System.Windows.Data.DataSourceProvider.IsRefreshDeferred
  - System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)
  - System.Windows.Data.DataSourceProvider.PropertyChanged
  - System.Windows.Data.DataSourceProvider.Refresh
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.#ctor
  id: '#ctor'
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlDataProvider()
  nameWithType: XmlDataProvider.XmlDataProvider()
  fullName: System.Windows.Data.XmlDataProvider.XmlDataProvider()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新实例<xref href=&quot;System.Windows.Data.XmlDataProvider&quot;></xref>类。"
  syntax:
    content: public XmlDataProvider ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.BaseUri
  id: BaseUri
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此类型或成员支持[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: protected virtual Uri BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基 URI。"
  overload: System.Windows.Data.XmlDataProvider.BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.BeginQuery
  id: BeginQuery
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: BeginQuery()
  nameWithType: XmlDataProvider.BeginQuery()
  fullName: System.Windows.Data.XmlDataProvider.BeginQuery()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "准备加载的是内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]还是外部[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]文件以生成的集合[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]节点。"
  remarks: "执行是立即或在后台线程，基于值<xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A>属性。</xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A>       <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>的基的类和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>方法</xref:System.Windows.Data.DataSourceProvider.Refresh%2A></xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>调用此方法"
  syntax:
    content: protected override void BeginQuery ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.BeginQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.Document
  id: Document
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: Document
  nameWithType: XmlDataProvider.Document
  fullName: System.Windows.Data.XmlDataProvider.Document
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置<xref href=&quot;System.Xml.XmlDocument&quot;></xref>要用作绑定源。"
  remarks: "<xref:System.Windows.Data.XmlDataProvider>公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]数据。</xref:System.Windows.Data.XmlDataProvider>      -你可以嵌入内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据使用<xref:System.Windows.Data.XmlDataProvider>类。</xref:System.Windows.Data.XmlDataProvider>      -你可以设置<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据文件。</xref:System.Uri> </xref:System.Windows.Data.XmlDataProvider.Source%2A>      -你可以将此属性设置为<xref:System.Xml.XmlDocument>.</xref:System.Xml.XmlDocument>       <xref:System.Windows.Data.XmlDataProvider>当对执行完全刷新的所有绑定<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName>事件发生。</xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName></xref:System.Windows.Data.XmlDataProvider> 有特定的节点不进行优化。       如果<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性是设置，那么任何内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据将被丢弃。</xref:System.Windows.Data.XmlDataProvider.Source%2A> 如果设置文档属性，则<xref:System.Windows.Data.XmlDataProvider.Source%2A>清除属性和任何内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据将被丢弃。</xref:System.Windows.Data.XmlDataProvider.Source%2A>       设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象︰ <xref:System.Windows.Data.XmlDataProvider.Source%2A>，文档， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref>要用作绑定源。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.EndInit
  id: EndInit
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: EndInit()
  nameWithType: XmlDataProvider.EndInit()
  fullName: System.Windows.Data.XmlDataProvider.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示此元素的初始化已完成;这将导致<> *1> 没有其他<> *1> 是未完成。"
  syntax:
    content: protected override void EndInit ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous
  id: IsAsynchronous
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
  fullName: System.Windows.Data.XmlDataProvider.IsAsynchronous
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，指示在辅助线程中或在活动的上下文中是否将执行节点集合创建。"
  syntax:
    content: public bool IsAsynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要执行工作线程; 中的节点集合创建否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.IsAsynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: XmlDataProvider.ShouldSerializeSource()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.XmlDataProvider.Source*>属性应对其进行持久化。</xref:System.Windows.Data.XmlDataProvider.Source*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性不具有简单的默认值。</xref:System.Windows.Data.XmlDataProvider.Source%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.XmlDataProvider>或开发你自己控制合并<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  id: ShouldSerializeXmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeXmlSerializer()
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.XmlDataProvider.XmlSerializer*>属性应对其进行持久化。</xref:System.Windows.Data.XmlDataProvider.XmlSerializer*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A>属性不具有简单的默认值。</xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.XmlDataProvider>或开发你自己控制合并<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeXmlSerializer ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  id: ShouldSerializeXPath
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeXPath()
  nameWithType: XmlDataProvider.ShouldSerializeXPath()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.XmlDataProvider.XPath*>属性应对其进行持久化。</xref:System.Windows.Data.XmlDataProvider.XPath*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.XPath%2A>属性不具有简单的默认值。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.XmlDataProvider>或开发你自己控制合并<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeXPath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.Source
  id: Source
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: Source
  nameWithType: XmlDataProvider.Source
  fullName: System.Windows.Data.XmlDataProvider.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置<xref:System.Uri>的[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]要用作绑定源的数据文件。</xref:System.Uri>"
  remarks: "<xref:System.Windows.Data.XmlDataProvider>公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]数据。</xref:System.Windows.Data.XmlDataProvider>      -你可以嵌入内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据使用<xref:System.Windows.Data.XmlDataProvider>类。</xref:System.Windows.Data.XmlDataProvider>      -你可以将此属性设置为<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据文件。</xref:System.Uri>      -你可以设置<xref:System.Windows.Data.XmlDataProvider.Document%2A>到<xref:System.Xml.XmlDocument>。</xref:System.Xml.XmlDocument>属性</xref:System.Windows.Data.XmlDataProvider.Document%2A>       如果源属性为设置，那么任何内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据将被丢弃。 如果<xref:System.Windows.Data.XmlDataProvider.Document%2A>属性是组，然后清除属性的源和任何内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据将被丢弃。</xref:System.Windows.Data.XmlDataProvider.Document%2A>       设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象︰ 源， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  example:
  - "In some applications, embedding the [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] inline within the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page can be inconvenient because the exact content of the data must be known at compile time. Therefore, you can obtain the data from an external [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] file, as in the following example.  \n  \n [!code-xml[XMLDataSource2#XmlFileExample](~/add/codesnippet/xaml/XmlDataSource2/Window1.xaml#xmlfileexample)]  \n  \n If the [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] data resides in a remote [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] file, you define access to the data by assigning an appropriate [!INCLUDE[TLA2#tla_url](~/add/includes/tla2sharptla-url-md.md)] to the Source attribute as follows:  \n  \n```  \n<XmlDataProvider x:Key=\"BookData\" Source=\"http://MyUrl\" XPath=\"Books\"/>  \n```"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]要用作绑定源的数据文件。</xref:System.Uri> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基 URI。"
  overload: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  id: XmlNamespaceManager
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
  fullName: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置<xref:System.Xml.XmlNamespaceManager>用于运行<xref:System.Windows.Data.XmlDataProvider.XPath*>查询。</xref:System.Windows.Data.XmlDataProvider.XPath*> </xref:System.Xml.XmlNamespaceManager>"
  remarks: "设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象: <xref:System.Windows.Data.XmlDataProvider.Source%2A> <xref:System.Windows.Data.XmlDataProvider.Document%2A>、 XmlNamespaceManager 和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>.</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlAttributeUsage_XmlNamespaceManager&quot;></a># # XAML 属性用法```   <object XmlNamespaceManager=&quot;mappingCollection&quot;/>   ``` <a name=&quot;xamlValues_XmlNamespaceManager&quot;> </a> # # XAML 值*mappingCollection* <xref:System.Windows.Data.XmlNamespaceMappingCollection>.</xref:System.Windows.Data.XmlNamespaceMappingCollection>       来指代<xref:System.Windows.Data.XmlNamespaceMappingCollection>，使用[标记扩展和 WPF XAML](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Data.XmlNamespaceMappingCollection>"
  example:
  - "The following example demonstrates how to use this property.  \n  \n [!code-xml[XmlnsBind#XmlNamespaceMapping](~/add/codesnippet/xaml/p-system.windows.data.xm_1_1.xaml)]\n [!code-xml[XmlnsBind#XmlNamespaceMapping](~/add/codesnippet/xaml/p-system.windows.data.xm_1_1.xaml)]"
  syntax:
    content: public System.Xml.XmlNamespaceManager XmlNamespaceManager { get; set; }
    return:
      type: System.Xml.XmlNamespaceManager
      description: "<xref:System.Xml.XmlNamespaceManager>用于运行<xref:System.Windows.Data.XmlDataProvider.XPath*>查询。</xref:System.Windows.Data.XmlDataProvider.XPath*> </xref:System.Xml.XmlNamespaceManager> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.XmlNamespaceManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer
  id: XmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
  fullName: System.Windows.Data.XmlDataProvider.XmlSerializer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]内容。"
  remarks: "分析器使用此属性来编译嵌入的文本内容[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]数据岛。      <a name=&quot;xamlPropertyElementUsage_XmlSerializer&quot;></a># # XAML 属性元素用法```   <XmlDataProvider>     <XmlDataProvider.XmlSerializer>       <x:XData>          <elementDataRoot>             <elementData/>          <elementDataRoot>       </x:XData>     </XmlDataProvider.XmlSerializer>   </XmlDataProvider>   --or--   <XmlDataProvider>       <x:XData>          <elementDataRoot>             <elementData/>          <elementDataRoot>       </x:XData>   </XmlDataProvider>   ``` <a name=&quot;xamlValues_XmlSerializer&quot;> </a> # # XAML 值*elementDataRoot*所需。       包含的数据岛的单个根元素。 如果没有单一根，`x:XData`作为数据源无效。       *elementData*可选。 表示你的数据的 XML。 可以包含任意数目的元素作为元素数据、 嵌套的元素可包含在其他元素，依此类推，受约束的 XML 的一般规则。"
  syntax:
    content: public System.Xml.Serialization.IXmlSerializable XmlSerializer { get; }
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "内联[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]内容。"
  overload: System.Windows.Data.XmlDataProvider.XmlSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XPath
  id: XPath
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataProvider.XPath
  fullName: System.Windows.Data.XmlDataProvider.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置<xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;></xref>用于生成数据集合的查询。"
  remarks: "<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>方法将处理`XPath`表达式从<xref:System.Windows.Data.Binding.XPath%2A>属性。</xref:System.Windows.Data.Binding.XPath%2A> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`不支持函数。 有关`XPath`表达式的信息，请参阅<xref:System.Xml.XmlNode.SelectNodes%2A>文档和示例部分中提供一些示例。</xref:System.Xml.XmlNode.SelectNodes%2A>       设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象︰ <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和 XPath。</xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref>用于生成数据集合的查询。 默认值为一个空字符串。"
  overload: System.Windows.Data.XmlDataProvider.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.DataSourceProvider
  isExternal: false
  name: System.Windows.Data.DataSourceProvider
- uid: System.Windows.Data.XmlDataProvider.#ctor
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlDataProvider()
  nameWithType: XmlDataProvider.XmlDataProvider()
  fullName: System.Windows.Data.XmlDataProvider.XmlDataProvider()
- uid: System.Windows.Data.XmlDataProvider.BaseUri
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.BaseUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Data.XmlDataProvider.BeginQuery
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BeginQuery()
  nameWithType: XmlDataProvider.BeginQuery()
  fullName: System.Windows.Data.XmlDataProvider.BeginQuery()
- uid: System.Windows.Data.XmlDataProvider.Document
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Document
  nameWithType: XmlDataProvider.Document
  fullName: System.Windows.Data.XmlDataProvider.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Windows.Data.XmlDataProvider.EndInit
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: EndInit()
  nameWithType: XmlDataProvider.EndInit()
  fullName: System.Windows.Data.XmlDataProvider.EndInit()
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
  fullName: System.Windows.Data.XmlDataProvider.IsAsynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: XmlDataProvider.ShouldSerializeSource()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeSource()
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXmlSerializer()
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer()
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXPath()
  nameWithType: XmlDataProvider.ShouldSerializeXPath()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath()
- uid: System.Windows.Data.XmlDataProvider.Source
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Source
  nameWithType: XmlDataProvider.Source
  fullName: System.Windows.Data.XmlDataProvider.Source
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
  fullName: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
  fullName: System.Windows.Data.XmlDataProvider.XmlSerializer
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Windows.Data.XmlDataProvider.XPath
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XPath
  nameWithType: XmlDataProvider.XPath
  fullName: System.Windows.Data.XmlDataProvider.XPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.XmlDataProvider.#ctor*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlDataProvider
  nameWithType: XmlDataProvider.XmlDataProvider
- uid: System.Windows.Data.XmlDataProvider.BaseUri*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
- uid: System.Windows.Data.XmlDataProvider.BeginQuery*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BeginQuery
  nameWithType: XmlDataProvider.BeginQuery
- uid: System.Windows.Data.XmlDataProvider.Document*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Document
  nameWithType: XmlDataProvider.Document
- uid: System.Windows.Data.XmlDataProvider.EndInit*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: EndInit
  nameWithType: XmlDataProvider.EndInit
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: XmlDataProvider.ShouldSerializeSource
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXmlSerializer
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXPath
  nameWithType: XmlDataProvider.ShouldSerializeXPath
- uid: System.Windows.Data.XmlDataProvider.Source*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Source
  nameWithType: XmlDataProvider.Source
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
- uid: System.Windows.Data.XmlDataProvider.XPath*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XPath
  nameWithType: XmlDataProvider.XPath
