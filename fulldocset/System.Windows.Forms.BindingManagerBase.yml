### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingManagerBase
  id: BindingManagerBase
  children:
  - System.Windows.Forms.BindingManagerBase.#ctor
  - System.Windows.Forms.BindingManagerBase.AddNew
  - System.Windows.Forms.BindingManagerBase.BindingComplete
  - System.Windows.Forms.BindingManagerBase.Bindings
  - System.Windows.Forms.BindingManagerBase.CancelCurrentEdit
  - System.Windows.Forms.BindingManagerBase.Count
  - System.Windows.Forms.BindingManagerBase.Current
  - System.Windows.Forms.BindingManagerBase.CurrentChanged
  - System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  - System.Windows.Forms.BindingManagerBase.DataError
  - System.Windows.Forms.BindingManagerBase.EndCurrentEdit
  - System.Windows.Forms.BindingManagerBase.GetItemProperties
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  - System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  - System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)
  - System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  - System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)
  - System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)
  - System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  - System.Windows.Forms.BindingManagerBase.Position
  - System.Windows.Forms.BindingManagerBase.PositionChanged
  - System.Windows.Forms.BindingManagerBase.PullData
  - System.Windows.Forms.BindingManagerBase.PushData
  - System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)
  - System.Windows.Forms.BindingManagerBase.ResumeBinding
  - System.Windows.Forms.BindingManagerBase.SuspendBinding
  - System.Windows.Forms.BindingManagerBase.UpdateIsBinding
  langs:
  - csharp
  name: BindingManagerBase
  nameWithType: BindingManagerBase
  fullName: System.Windows.Forms.BindingManagerBase
  type: Class
  summary: "管理所有<xref href=&quot;System.Windows.Forms.Binding&quot;></xref>绑定到同一数据源和数据成员的对象。 此类为抽象类。"
  remarks: "BindingManagerBase 启用 Windows 窗体上绑定到同一数据源的数据绑定控件的同步。 (有关将控件绑定到数据源的简单的详细信息，请参阅<xref:System.Windows.Forms.Binding>类)</xref:System.Windows.Forms.Binding>例如，假设一个窗体包含两个<xref:System.Windows.Forms.TextBox>同一数据源但属于不同的列绑定的控件。</xref:System.Windows.Forms.TextBox> 数据源可以是<xref:System.Data.DataTable>，包含客户名称，而这些列可能包含的第一个和最后一个名称。</xref:System.Data.DataTable> 为了显示为相应的第一个和最后一个名称组合在一起以相同的客户，必须同步这两个控件。 <xref:System.Windows.Forms.CurrencyManager>，它继承自 BindingManagerBase 类中，通过维护指向数据源中的当前项的指针来完成此同步。</xref:System.Windows.Forms.CurrencyManager> <xref:System.Windows.Forms.TextBox>控件将绑定到当前项，使其能够显示同一行的信息。</xref:System.Windows.Forms.TextBox> 如果当前项更改，<xref:System.Windows.Forms.CurrencyManager>通知所有绑定控件，以便它们可以刷新其数据。</xref:System.Windows.Forms.CurrencyManager> 此外，你可以设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性来指定中的行<xref:System.Data.DataTable>控件指向。</xref:System.Data.DataTable> </xref:System.Windows.Forms.BindingManagerBase.Position%2A> 若要确定数据源中存在的行数，请使用<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性。</xref:System.Windows.Forms.BindingManagerBase.Count%2A>       <xref:System.Windows.Forms.CurrencyManager>是必要的因为数据源不一定维护当前项的指针。</xref:System.Windows.Forms.CurrencyManager> 例如，数组和<xref:System.Collections.ArrayList>对象可以是数据源，但它们不具有返回当前项的属性。</xref:System.Collections.ArrayList> 若要获取当前项，请使用<xref:System.Windows.Forms.BindingManagerBase.Current%2A>属性。</xref:System.Windows.Forms.BindingManagerBase.Current%2A>       <xref:System.Windows.Forms.PropertyManager>也继承自 BindingManagerBase，并且它用于维护当前属性的对象，而不是数据源中的当前对象的属性。</xref:System.Windows.Forms.PropertyManager> 因此，尝试设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>或<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性<xref:System.Windows.Forms.PropertyManager>不起作用。</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.BindingManagerBase.Count%2A> </xref:System.Windows.Forms.BindingManagerBase.Position%2A>       若要创建 BindingManagerBase，使用<xref:System.Windows.Forms.BindingContext>类，该类返回<xref:System.Windows.Forms.CurrencyManager>或<xref:System.Windows.Forms.PropertyManager>，取决于正在管理的数据源。</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingContext>       解决方案程序员人员最好控件直接绑定到<xref:System.Windows.Forms.BindingSource>组件，它将作为数据源和连接到实际目标数据源的数据连接器。</xref:System.Windows.Forms.BindingSource> <xref:System.Windows.Forms.BindingSource>极大地简化了这两个简单和复杂数据绑定，包括管理控件与其目标之间的货币。</xref:System.Windows.Forms.BindingSource>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a BindingManagerBase for a specific data source. (The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events. Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list. The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.  \n  \n [!code-cpp[Classic BindingManagerBase Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_12_1.cpp)]\n [!code-vb[Classic BindingManagerBase Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_12_1.vb)]\n [!code-cs[Classic BindingManagerBase Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_12_1.cs)]"
  syntax:
    content: public abstract class BindingManagerBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: BindingManagerBase()
  nameWithType: BindingManagerBase.BindingManagerBase()
  fullName: System.Windows.Forms.BindingManagerBase.BindingManagerBase()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>类。"
  remarks: "默认构造函数集<xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>属性`null`。</xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>"
  syntax:
    content: public BindingManagerBase ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.AddNew
  id: AddNew
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: AddNew()
  nameWithType: BindingManagerBase.AddNew()
  fullName: System.Windows.Forms.BindingManagerBase.AddNew()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，请向基础列表添加新项。"
  remarks: "AddNew 方法该项的类型使用默认构造函数将新项添加到基础列表。 AddNew 主要用于将复杂数据绑定支持添加到其自定义组件的程序员使用。       通常使用允许应用程序程序员可以插入自己的代码用于创建自定义的项目的以下模式实现 AddNew: 1。  AddNew 引发<xref:System.Windows.Forms.BindingSource.AddingNew>事件。</xref:System.Windows.Forms.BindingSource.AddingNew>      2.  程序员可以通过处理提供的自定义项<xref:System.Windows.Forms.BindingSource.AddingNew>事件，并设置<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>属性<xref:System.ComponentModel.AddingNewEventArgs>到新的项的参数。</xref:System.ComponentModel.AddingNewEventArgs> </xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> </xref:System.Windows.Forms.BindingSource.AddingNew> 否则，该组件应创建使用默认构造函数的项。      3.  如果数据源不实现<xref:System.ComponentModel.IEditableObject>接口，项立即添加到的数据源和基础列表。</xref:System.ComponentModel.IEditableObject> 如果支持此接口，则添加事务性通过<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>和<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法。</xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> </xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>"
  syntax:
    content: public abstract void AddNew ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.BindingComplete
  id: BindingComplete
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: BindingComplete
  nameWithType: BindingManagerBase.BindingComplete
  fullName: System.Windows.Forms.BindingManagerBase.BindingComplete
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在数据绑定操作完成时发生。"
  remarks: "BindingComplete 事件发生在一个数据绑定操作，这可能包括以下完成后:-将信息从数据源推送到其绑定的控件的属性。      -拉取到其关联的数据源绑定控件中的信息。       尽管可以通过检查来确定此状态，请注意，无论的完成状态的绑定操作中，将引发此事件<xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A>属性<xref:System.Windows.Forms.BindingCompleteEventArgs>与事件关联的参数。</xref:System.Windows.Forms.BindingCompleteEventArgs> </xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> <xref:System.Windows.Forms.BindingCompleteEventArgs>此外可能包含错误和异常信息。</xref:System.Windows.Forms.BindingCompleteEventArgs> 例如，尝试从数据源到推送 null 值的绑定操作<xref:System.Windows.Forms.DateTimePicker>控件将产生异常，因为<xref:System.DateTime>不能为`null`。</xref:System.DateTime> </xref:System.Windows.Forms.DateTimePicker> 在这种情况下，虽然绑定操作未成功完成，将引发 BindingComplete 事件，并且事件将包含失败的绑定尝试的信息。"
  example:
  - "The following code example demonstrates how to handle the BindingComplete event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/e-system.windows.forms.b_8_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/e-system.windows.forms.b_8_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;
    return:
      type: System.Windows.Forms.BindingCompleteEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.Bindings
  id: Bindings
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: Bindings
  nameWithType: BindingManagerBase.Bindings
  fullName: System.Windows.Forms.BindingManagerBase.Bindings
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取所管理绑定的集合。"
  remarks: ''
  example:
  - "The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source. The example then uses the Bindings property to print information about each control bound to the same data source.  \n  \n [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_5_1.cpp)]\n [!code-cs[Classic BindingManagerBase.Bindings Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_5_1.cs)]\n [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_5_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BindingsCollection Bindings { get; }
    return:
      type: System.Windows.Forms.BindingsCollection
      description: "A <xref href=&quot;System.Windows.Forms.BindingsCollection&quot;> </xref>包含<xref href=&quot;System.Windows.Forms.Binding&quot;></xref>管理此对象<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
  overload: System.Windows.Forms.BindingManagerBase.Bindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit
  id: CancelCurrentEdit
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: CancelCurrentEdit()
  nameWithType: BindingManagerBase.CancelCurrentEdit()
  fullName: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写时取消当前编辑。"
  remarks: "仅当数据源实现时，才支持此方法<xref:System.ComponentModel.IEditableObject>接口。</xref:System.ComponentModel.IEditableObject> 如果对象没有实现<xref:System.ComponentModel.IEditableObject>接口，对数据所做的更改将不会被放弃。</xref:System.ComponentModel.IEditableObject>       调用 CancelCurrentEdit 方法会导致<xref:System.Windows.Forms.Binding.Format>事件发生。</xref:System.Windows.Forms.Binding.Format>"
  example:
  - "The following code example demonstrates both the CancelCurrentEdit and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods. When you call the CancelCurrentEdit methods, changes made to the data are discarded. When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.  \n  \n [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_11_1.cpp)]\n [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_11_1.vb)]\n [!code-cs[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_11_1.cs)]"
  syntax:
    content: public abstract void CancelCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.Count
  id: Count
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: Count
  nameWithType: BindingManagerBase.Count
  fullName: System.Windows.Forms.BindingManagerBase.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，获取由托管的行数<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
  remarks: "使用的 Count 属性来确定在列表中的最后一项的行由<xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase>维护 若要转到最后一个项，设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性计数属性值减 1。</xref:System.Windows.Forms.BindingManagerBase.Position%2A>"
  example:
  - "The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property. The `MoveNext` method increments the property by 1. The `MovePrevious` method decrements the property by 1. The `MoveFirst` method sets the property to 0. The `MoveLast` method sets the property to the value of the Count property minus 1.  \n  \n [!code-cs[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_37_1.cs)]\n [!code-cpp[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_37_1.cpp)]\n [!code-vb[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_37_1.vb)]"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "通过托管的行数<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
  overload: System.Windows.Forms.BindingManagerBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.Current
  id: Current
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: Current
  nameWithType: BindingManagerBase.Current
  fullName: System.Windows.Forms.BindingManagerBase.Current
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，获取当前对象。"
  remarks: "当前对象包含的数据源中的当前项的值。 若要使用的当前项的值，必须强制转换为<xref:System.Type>包含受支持<xref:System.Windows.Forms.Binding.DataSource%2A>。</xref:System.Windows.Forms.Binding.DataSource%2A>的对象的</xref:System.Type>项 例如，<xref:System.Data.DataTable>包含<xref:System.Data.DataRowView>对象。</xref:System.Data.DataRowView> </xref:System.Data.DataTable> 若要确定当前对象的类型，请使用<xref:System.Object.GetType%2A>和<xref:System.Type.ToString%2A>方法。</xref:System.Type.ToString%2A> </xref:System.Object.GetType%2A>      1> [!NOTE]&1;> 时<xref:System.Windows.Forms.Binding.DataSource%2A>是<xref:System.Data.DataSet>， <xref:System.Data.DataViewManager>，或<xref:System.Data.DataTable>将实际绑定到一种<xref:System.Data.DataView>。</xref:System.Data.DataView> 、</xref:System.Data.DataTable> </xref:System.Data.DataViewManager> </xref:System.Data.DataSet> </xref:System.Windows.Forms.Binding.DataSource%2A> 因此，每个当前对象是<xref:System.Data.DataRowView>对象。</xref:System.Data.DataRowView>"
  example:
  - "The following code example prints the value of the Current object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event. The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.  \n  \n [!code-cs[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_38_1.cs)]\n [!code-vb[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_38_1.vb)]\n [!code-cpp[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_38_1.cpp)]"
  syntax:
    content: public abstract object Current { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>，表示当前对象。</xref:System.Object>"
  overload: System.Windows.Forms.BindingManagerBase.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.CurrentChanged
  id: CurrentChanged
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: CurrentChanged
  nameWithType: BindingManagerBase.CurrentChanged
  fullName: System.Windows.Forms.BindingManagerBase.CurrentChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在当前绑定的项更改时发生。"
  remarks: "将引发 CurrentChanged 事件每当<xref:System.Windows.Forms.BindingManagerBase.Current%2A>属性更改或<xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>事件发生。</xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> </xref:System.Windows.Forms.BindingManagerBase.Current%2A>       有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the CurrentChanged event. The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.  \n  \n [!code-cs[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/csharp/e-system.windows.forms.b_0_1.cs)]\n [!code-vb[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.b_0_1.vb)]\n [!code-cpp[Classic BindingManagerBase.Current Example#1](~/add/codesnippet/cpp/e-system.windows.forms.b_0_1.cpp)]"
  syntax:
    content: public event EventHandler CurrentChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  id: CurrentItemChanged
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: CurrentItemChanged
  nameWithType: BindingManagerBase.CurrentItemChanged
  fullName: System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在当前绑定项的状态更改时发生。"
  remarks: "在当前绑定项中的状态中的更改时，将发生 CurrentItemChanged 事件。 如果更改此项目的属性之一，或者针对项本身被替换或移动，则可以发生此问题。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CurrentItemChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>. Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the CurrentItemChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#82](~/add/codesnippet/csharp/e-system.windows.forms.b_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#82](~/add/codesnippet/visualbasic/e-system.windows.forms.b_15_1.vb)]"
  syntax:
    content: public event EventHandler CurrentItemChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.DataError
  id: DataError
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: DataError
  nameWithType: BindingManagerBase.DataError
  fullName: System.Windows.Forms.BindingManagerBase.DataError
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "发生时<xref:System.Exception>由以无提示方式处理<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。</xref:System.Exception>"
  remarks: "此事件是信息性并报告公共语言规范 (CLS)-仅符合异常。 若要确定哪种类型的异常发生，处理此事件，并检查<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A><xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>属性</xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A>       有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataError event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>. Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the DataError event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#83](~/add/codesnippet/csharp/e-system.windows.forms.b_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#83](~/add/codesnippet/visualbasic/e-system.windows.forms.b_5_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;
    return:
      type: System.Windows.Forms.BindingManagerDataErrorEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.EndCurrentEdit
  id: EndCurrentEdit
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: EndCurrentEdit()
  nameWithType: BindingManagerBase.EndCurrentEdit()
  fullName: System.Windows.Forms.BindingManagerBase.EndCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，将结束当前编辑。"
  remarks: "仅当数据源实现时，才支持此方法<xref:System.ComponentModel.IEditableObject>接口。</xref:System.ComponentModel.IEditableObject> 在这种情况下，将保存更改。 如果对象没有实现<xref:System.ComponentModel.IEditableObject>接口，对数据所做的更改将不保存。</xref:System.ComponentModel.IEditableObject>"
  example:
  - "The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the EndCurrentEdit methods. When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded. When you call the EndCurrentEdit method, the changes are kept.  \n  \n [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_13_1.cpp)]\n [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_13_1.vb)]\n [!code-cs[BindingManagerBase.CancelCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_13_1.cs)]"
  syntax:
    content: public abstract void EndCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.EndCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties
  id: GetItemProperties
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: GetItemProperties()
  nameWithType: BindingManagerBase.GetItemProperties()
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，获取绑定的属性说明符集合。"
  remarks: ''
  example:
  - "The following code example uses the GetItemProperties method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>. The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.  \n  \n [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_6_1.cpp)]\n [!code-cs[Classic BindingManagerBase.GetItemProperties Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_6_1.cs)]\n [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_6_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>表示绑定的属性描述符。"
  overload: System.Windows.Forms.BindingManagerBase.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  id: GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: GetItemProperties(ArrayList,ArrayList)
  nameWithType: BindingManagerBase.GetItemProperties(ArrayList,ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties(ArrayList,ArrayList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取使用指定绑定的属性说明符集合<xref href=&quot;System.Collections.ArrayList&quot;> </xref>。"
  remarks: "创建数据绑定控件的开发人员使用此方法。"
  syntax:
    content: protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);
    parameters:
    - id: dataSources
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>包含数据源。"
    - id: listAccessors
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>包含表的绑定的属性。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>表示绑定的属性描述符。"
  overload: System.Windows.Forms.BindingManagerBase.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  id: GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: GetItemProperties(Type,Int32,ArrayList,ArrayList)
  nameWithType: BindingManagerBase.GetItemProperties(Type,Int32,ArrayList,ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties(Type,Int32,ArrayList,ArrayList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取由此管理的项目的属性列表<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
  remarks: "开发人员使用此重载来创建数据绑定控件。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>. The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.  \n  \n [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/add/codesnippet/cpp/44393fcf-2cf0-4362-8532-_1.cpp)]\n [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/add/codesnippet/visualbasic/44393fcf-2cf0-4362-8532-_1.vb)]\n [!code-cs[Classic BindingManagerBase.GetItemProperties2 Example#1](~/add/codesnippet/csharp/44393fcf-2cf0-4362-8532-_1.cs)]"
  syntax:
    content: protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);
    parameters:
    - id: listType
      type: System.Type
      description: "<xref:System.Type>的绑定的列表。</xref:System.Type>"
    - id: offset
      type: System.Int32
      description: "计数器用于以递归方式调用方法。"
    - id: dataSources
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>包含数据源。"
    - id: listAccessors
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>包含表的绑定的属性。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>表示绑定的属性描述符。"
  overload: System.Windows.Forms.BindingManagerBase.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)
  id: GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: GetListName(ArrayList)
  nameWithType: BindingManagerBase.GetListName(ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetListName(ArrayList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，获取为绑定提供数据的列表的名称。"
  syntax:
    content: protected abstract string GetListName (System.Collections.ArrayList listAccessors);
    parameters:
    - id: listAccessors
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>包含表的绑定的属性。"
    return:
      type: System.String
      description: "为绑定提供数据的列表的名称。"
  overload: System.Windows.Forms.BindingManagerBase.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  id: IsBindingSuspended
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: IsBindingSuspended
  nameWithType: BindingManagerBase.IsBindingSuspended
  fullName: System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示绑定是否已挂起。"
  syntax:
    content: public bool IsBindingSuspended { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果绑定是否已挂起;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.BindingManagerBase.IsBindingSuspended*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  id: OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: OnBindingComplete(BindingCompleteEventArgs)
  nameWithType: BindingManagerBase.OnBindingComplete(BindingCompleteEventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnBindingComplete(BindingCompleteEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.BindingManagerBase.BindingComplete&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnBindingComplete 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);
    parameters:
    - id: args
      type: System.Windows.Forms.BindingCompleteEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.BindingCompleteEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Windows.Forms.BindingManagerBase.OnBindingComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)
  id: OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: OnCurrentChanged(EventArgs)
  nameWithType: BindingManagerBase.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnCurrentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnCurrentChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected abstract void OnCurrentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.BindingManagerBase.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  id: onCurrentChangedHandler
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: onCurrentChangedHandler
  nameWithType: BindingManagerBase.onCurrentChangedHandler
  fullName: System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定的事件处理程序<xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentChanged&quot;></xref>事件。"
  syntax:
    content: protected EventHandler onCurrentChangedHandler;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)
  id: OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: BindingManagerBase.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentItemChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnCurrentItemChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected abstract void OnCurrentItemChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)
  id: OnDataError(System.Exception)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: OnDataError(Exception)
  nameWithType: BindingManagerBase.OnDataError(Exception)
  fullName: System.Windows.Forms.BindingManagerBase.OnDataError(Exception)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引发<xref href=&quot;System.Windows.Forms.BindingManagerBase.DataError&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。       OnDataError 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected void OnDataError (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>导致<xref href=&quot;System.Windows.Forms.BindingManagerBase.DataError&quot;></xref>事件发生。</xref:System.Exception>"
  overload: System.Windows.Forms.BindingManagerBase.OnDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  id: onPositionChangedHandler
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: onPositionChangedHandler
  nameWithType: BindingManagerBase.onPositionChangedHandler
  fullName: System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定的事件处理程序<xref href=&quot;System.Windows.Forms.BindingManagerBase.PositionChanged&quot;></xref>事件。"
  syntax:
    content: protected EventHandler onPositionChangedHandler;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.Position
  id: Position
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: Position
  nameWithType: BindingManagerBase.Position
  fullName: System.Windows.Forms.BindingManagerBase.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，获取或设置控件绑定到此数据源指向的基础列表中的位置。"
  remarks: "使用位置属性来循环访问由<xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase>维护的基础列表 若要转到第一项，将位置设置为 0。 若要转到列表的末尾，将位置设置的值为<xref:System.Windows.Forms.BindingManagerBase.Count%2A>减 1 的属性。</xref:System.Windows.Forms.BindingManagerBase.Count%2A>       <xref:System.Windows.Forms.BindingManagerBase.PositionChanged>位置属性值更改时发生事件。</xref:System.Windows.Forms.BindingManagerBase.PositionChanged>"
  example:
  - "The following code example shows four methods that set the Position property. The `MoveNext` method increments the property by 1. The `MovePrevious` method decrements the property by 1. The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.  \n  \n [!code-cs[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_0_1.cs)]\n [!code-cpp[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_0_1.cpp)]\n [!code-vb[Classic BindingManagerBase.Count Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_0_1.vb)]"
  syntax:
    content: public abstract int Position { get; set; }
    return:
      type: System.Int32
      description: "指定基础列表中的某个位置的从零开始索引。"
  overload: System.Windows.Forms.BindingManagerBase.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.PositionChanged
  id: PositionChanged
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: PositionChanged
  nameWithType: BindingManagerBase.PositionChanged
  fullName: System.Windows.Forms.BindingManagerBase.PositionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "值之后发生<xref:System.Windows.Forms.BindingManagerBase.Position*>属性已更改。</xref:System.Windows.Forms.BindingManagerBase.Position*>"
  remarks: "有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control. The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the PositionChanged event.  \n  \n [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/add/codesnippet/cpp/e-system.windows.forms.b_6_1.cpp)]\n [!code-cs[Classic BindingManagerBase.PositionChanged Example#1](~/add/codesnippet/csharp/e-system.windows.forms.b_6_1.cs)]\n [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.b_6_1.vb)]"
  syntax:
    content: public event EventHandler PositionChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.PullData
  id: PullData
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: PullData()
  nameWithType: BindingManagerBase.PullData()
  fullName: System.Windows.Forms.BindingManagerBase.PullData()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将数据从数据绑定控件拉入到数据源中，不返回任何信息。"
  remarks: "PullData 方法是以编程方式请求从数据绑定控件回数据源的信息。 它不需要的控件的标准操作，因为通常控件自动更新其绑定的数据源在焦点离开它时。       PullData 引发<xref:System.Windows.Forms.BindingManagerBase.BindingComplete>事件和更改事件的数据源视。</xref:System.Windows.Forms.BindingManagerBase.BindingComplete>"
  syntax:
    content: protected void PullData ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.PullData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.PushData
  id: PushData
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: PushData()
  nameWithType: BindingManagerBase.PushData()
  fullName: System.Windows.Forms.BindingManagerBase.PushData()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将数据从数据源推送到数据绑定控件，不返回任何信息。"
  remarks: "PushData 方法是将信息从数据源推入数据绑定控件的编程方法。 如果数据源实现，此方法不是必需<xref:System.ComponentModel.IBindingList?displayProperty=fullName>接口，因为<xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName>事件应自动导致该控件通过其流量管理器进行更新。</xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName> </xref:System.ComponentModel.IBindingList?displayProperty=fullName>       如果此方法发出时<xref:System.Windows.Forms.BindingManagerBase.PullData%2A>正在执行的操作，PushData 方法立即返回值为`true`。</xref:System.Windows.Forms.BindingManagerBase.PullData%2A>"
  syntax:
    content: protected void PushData ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.PushData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: BindingManagerBase.RemoveAt(Int32)
  fullName: System.Windows.Forms.BindingManagerBase.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，则从基础列表中删除指定索引处的行。"
  remarks: "RemoveAt 方法依赖于基础的数据源，以确定该方法的行为。 (请参阅<xref:System.Windows.Forms.Binding>列表类支持的数据源。)</xref:System.Windows.Forms.Binding>为类，该实现<xref:System.Collections.IList>， <xref:System.ComponentModel.IBindingList>，或<xref:System.ComponentModel.ITypedList>也作为强类型化的类，该实现<xref:System.Collections.IList>，RemoveAt 方法实际删除而不是删除其内容的基础列表中的行。</xref:System.Collections.IList> </xref:System.ComponentModel.ITypedList> </xref:System.ComponentModel.IBindingList> </xref:System.Collections.IList>       如果基础列表实现<xref:System.ComponentModel.IBindingList>接口，<xref:System.ComponentModel.IBindingList.AllowRemove%2A>属性必须返回`true`。</xref:System.ComponentModel.IBindingList.AllowRemove%2A> </xref:System.ComponentModel.IBindingList> 如果基础列表实现<xref:System.Collections.IList>接口，<xref:System.Collections.IList.IsFixedSize%2A>属性必须返回`false`。</xref:System.Collections.IList.IsFixedSize%2A> </xref:System.Collections.IList>"
  example:
  - >-
    [!code-cpp[BindingManagerBase_RemoveAt#1](~/add/codesnippet/cpp/m-system.windows.forms.b_2_1.cpp)]
     [!code-vb[BindingManagerBase_RemoveAt#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_2_1.vb)]
     [!code-cs[BindingManagerBase_RemoveAt#1](~/add/codesnippet/csharp/m-system.windows.forms.b_2_1.cs)]
  syntax:
    content: public abstract void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要删除的行索引。"
  overload: System.Windows.Forms.BindingManagerBase.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "位于指定位置没有行<code> index </code>。"
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.ResumeBinding
  id: ResumeBinding
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: ResumeBinding()
  nameWithType: BindingManagerBase.ResumeBinding()
  fullName: System.Windows.Forms.BindingManagerBase.ResumeBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写时恢复数据绑定。"
  remarks: "<xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A>和 ResumeBinding 是允许临时挂起和恢复的数据绑定的两个方法。</xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 如果必须允许用户编辑数据字段之前，将执行验证，则通常将挂起数据绑定。 例如，用户可能需要更改的字段将按照的第二个字段;否则，验证第一个字段将导致将在错误中的第二个字段。"
  example:
  - >-
    [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/visualbasic/m-system.windows.forms.b_16_1.vb)]
     [!code-cs[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/csharp/m-system.windows.forms.b_16_1.cs)]
     [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/cpp/m-system.windows.forms.b_16_1.cpp)]
  syntax:
    content: public abstract void ResumeBinding ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.ResumeBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.SuspendBinding
  id: SuspendBinding
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: SuspendBinding()
  nameWithType: BindingManagerBase.SuspendBinding()
  fullName: System.Windows.Forms.BindingManagerBase.SuspendBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，挂起数据绑定。"
  remarks: "SuspendBinding 和<xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>允许临时挂起和恢复的数据绑定的这两种方法。</xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 如果必须允许用户编辑数据字段之前，将执行验证，则通常将挂起数据绑定。 例如，用户可能需要更改的字段将按照的第二个字段;否则，验证第一个字段将导致将在错误中的第二个字段。"
  example:
  - >-
    [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/visualbasic/m-system.windows.forms.b_15_1.vb)]
     [!code-cs[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/csharp/m-system.windows.forms.b_15_1.cs)]
     [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/cpp/m-system.windows.forms.b_15_1.cpp)]
  syntax:
    content: public abstract void SuspendBinding ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.SuspendBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingManagerBase.UpdateIsBinding
  id: UpdateIsBinding
  parent: System.Windows.Forms.BindingManagerBase
  langs:
  - csharp
  name: UpdateIsBinding()
  nameWithType: BindingManagerBase.UpdateIsBinding()
  fullName: System.Windows.Forms.BindingManagerBase.UpdateIsBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当在派生类中重写，更新绑定。"
  remarks: "UpdateIsBinding 方法更新绑定的控件和其数据源之间的数据绑定。 对于复杂数据绑定方案，它还将重置当前位置为基础列表的开头。"
  syntax:
    content: protected abstract void UpdateIsBinding ();
    parameters: []
  overload: System.Windows.Forms.BindingManagerBase.UpdateIsBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Forms.BindingManagerBase.#ctor
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: BindingManagerBase()
  nameWithType: BindingManagerBase.BindingManagerBase()
  fullName: System.Windows.Forms.BindingManagerBase.BindingManagerBase()
- uid: System.Windows.Forms.BindingManagerBase.AddNew
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: AddNew()
  nameWithType: BindingManagerBase.AddNew()
  fullName: System.Windows.Forms.BindingManagerBase.AddNew()
- uid: System.Windows.Forms.BindingManagerBase.BindingComplete
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: BindingComplete
  nameWithType: BindingManagerBase.BindingComplete
  fullName: System.Windows.Forms.BindingManagerBase.BindingComplete
- uid: System.Windows.Forms.BindingCompleteEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: BindingCompleteEventHandler
  nameWithType: BindingCompleteEventHandler
  fullName: System.Windows.Forms.BindingCompleteEventHandler
- uid: System.Windows.Forms.BindingManagerBase.Bindings
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Bindings
  nameWithType: BindingManagerBase.Bindings
  fullName: System.Windows.Forms.BindingManagerBase.Bindings
- uid: System.Windows.Forms.BindingsCollection
  parent: System.Windows.Forms
  isExternal: false
  name: BindingsCollection
  nameWithType: BindingsCollection
  fullName: System.Windows.Forms.BindingsCollection
- uid: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: CancelCurrentEdit()
  nameWithType: BindingManagerBase.CancelCurrentEdit()
  fullName: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit()
- uid: System.Windows.Forms.BindingManagerBase.Count
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Count
  nameWithType: BindingManagerBase.Count
  fullName: System.Windows.Forms.BindingManagerBase.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingManagerBase.Current
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Current
  nameWithType: BindingManagerBase.Current
  fullName: System.Windows.Forms.BindingManagerBase.Current
- uid: System.Windows.Forms.BindingManagerBase.CurrentChanged
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: CurrentChanged
  nameWithType: BindingManagerBase.CurrentChanged
  fullName: System.Windows.Forms.BindingManagerBase.CurrentChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: CurrentItemChanged
  nameWithType: BindingManagerBase.CurrentItemChanged
  fullName: System.Windows.Forms.BindingManagerBase.CurrentItemChanged
- uid: System.Windows.Forms.BindingManagerBase.DataError
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: DataError
  nameWithType: BindingManagerBase.DataError
  fullName: System.Windows.Forms.BindingManagerBase.DataError
- uid: System.Windows.Forms.BindingManagerDataErrorEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerDataErrorEventHandler
  nameWithType: BindingManagerDataErrorEventHandler
  fullName: System.Windows.Forms.BindingManagerDataErrorEventHandler
- uid: System.Windows.Forms.BindingManagerBase.EndCurrentEdit
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: EndCurrentEdit()
  nameWithType: BindingManagerBase.EndCurrentEdit()
  fullName: System.Windows.Forms.BindingManagerBase.EndCurrentEdit()
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetItemProperties()
  nameWithType: BindingManagerBase.GetItemProperties()
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetItemProperties(ArrayList,ArrayList)
  nameWithType: BindingManagerBase.GetItemProperties(ArrayList,ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties(ArrayList,ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetItemProperties(Type,Int32,ArrayList,ArrayList)
  nameWithType: BindingManagerBase.GetItemProperties(Type,Int32,ArrayList,ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetItemProperties(Type,Int32,ArrayList,ArrayList)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetListName(ArrayList)
  nameWithType: BindingManagerBase.GetListName(ArrayList)
  fullName: System.Windows.Forms.BindingManagerBase.GetListName(ArrayList)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: IsBindingSuspended
  nameWithType: BindingManagerBase.IsBindingSuspended
  fullName: System.Windows.Forms.BindingManagerBase.IsBindingSuspended
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnBindingComplete(BindingCompleteEventArgs)
  nameWithType: BindingManagerBase.OnBindingComplete(BindingCompleteEventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnBindingComplete(BindingCompleteEventArgs)
- uid: System.Windows.Forms.BindingCompleteEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: BindingCompleteEventArgs
  nameWithType: BindingCompleteEventArgs
  fullName: System.Windows.Forms.BindingCompleteEventArgs
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnCurrentChanged(EventArgs)
  nameWithType: BindingManagerBase.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnCurrentChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: onCurrentChangedHandler
  nameWithType: BindingManagerBase.onCurrentChangedHandler
  fullName: System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: BindingManagerBase.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(EventArgs)
- uid: System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnDataError(Exception)
  nameWithType: BindingManagerBase.OnDataError(Exception)
  fullName: System.Windows.Forms.BindingManagerBase.OnDataError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: onPositionChangedHandler
  nameWithType: BindingManagerBase.onPositionChangedHandler
  fullName: System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
- uid: System.Windows.Forms.BindingManagerBase.Position
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Position
  nameWithType: BindingManagerBase.Position
  fullName: System.Windows.Forms.BindingManagerBase.Position
- uid: System.Windows.Forms.BindingManagerBase.PositionChanged
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: PositionChanged
  nameWithType: BindingManagerBase.PositionChanged
  fullName: System.Windows.Forms.BindingManagerBase.PositionChanged
- uid: System.Windows.Forms.BindingManagerBase.PullData
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: PullData()
  nameWithType: BindingManagerBase.PullData()
  fullName: System.Windows.Forms.BindingManagerBase.PullData()
- uid: System.Windows.Forms.BindingManagerBase.PushData
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: PushData()
  nameWithType: BindingManagerBase.PushData()
  fullName: System.Windows.Forms.BindingManagerBase.PushData()
- uid: System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: BindingManagerBase.RemoveAt(Int32)
  fullName: System.Windows.Forms.BindingManagerBase.RemoveAt(Int32)
- uid: System.Windows.Forms.BindingManagerBase.ResumeBinding
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: ResumeBinding()
  nameWithType: BindingManagerBase.ResumeBinding()
  fullName: System.Windows.Forms.BindingManagerBase.ResumeBinding()
- uid: System.Windows.Forms.BindingManagerBase.SuspendBinding
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: SuspendBinding()
  nameWithType: BindingManagerBase.SuspendBinding()
  fullName: System.Windows.Forms.BindingManagerBase.SuspendBinding()
- uid: System.Windows.Forms.BindingManagerBase.UpdateIsBinding
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: UpdateIsBinding()
  nameWithType: BindingManagerBase.UpdateIsBinding()
  fullName: System.Windows.Forms.BindingManagerBase.UpdateIsBinding()
- uid: System.Windows.Forms.BindingManagerBase.#ctor*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: BindingManagerBase
  nameWithType: BindingManagerBase.BindingManagerBase
- uid: System.Windows.Forms.BindingManagerBase.AddNew*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: AddNew
  nameWithType: BindingManagerBase.AddNew
- uid: System.Windows.Forms.BindingManagerBase.Bindings*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Bindings
  nameWithType: BindingManagerBase.Bindings
- uid: System.Windows.Forms.BindingManagerBase.CancelCurrentEdit*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: CancelCurrentEdit
  nameWithType: BindingManagerBase.CancelCurrentEdit
- uid: System.Windows.Forms.BindingManagerBase.Count*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Count
  nameWithType: BindingManagerBase.Count
- uid: System.Windows.Forms.BindingManagerBase.Current*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Current
  nameWithType: BindingManagerBase.Current
- uid: System.Windows.Forms.BindingManagerBase.EndCurrentEdit*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: EndCurrentEdit
  nameWithType: BindingManagerBase.EndCurrentEdit
- uid: System.Windows.Forms.BindingManagerBase.GetItemProperties*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetItemProperties
  nameWithType: BindingManagerBase.GetItemProperties
- uid: System.Windows.Forms.BindingManagerBase.GetListName*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: GetListName
  nameWithType: BindingManagerBase.GetListName
- uid: System.Windows.Forms.BindingManagerBase.IsBindingSuspended*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: IsBindingSuspended
  nameWithType: BindingManagerBase.IsBindingSuspended
- uid: System.Windows.Forms.BindingManagerBase.OnBindingComplete*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnBindingComplete
  nameWithType: BindingManagerBase.OnBindingComplete
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentChanged*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnCurrentChanged
  nameWithType: BindingManagerBase.OnCurrentChanged
- uid: System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnCurrentItemChanged
  nameWithType: BindingManagerBase.OnCurrentItemChanged
- uid: System.Windows.Forms.BindingManagerBase.OnDataError*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: OnDataError
  nameWithType: BindingManagerBase.OnDataError
- uid: System.Windows.Forms.BindingManagerBase.Position*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: Position
  nameWithType: BindingManagerBase.Position
- uid: System.Windows.Forms.BindingManagerBase.PullData*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: PullData
  nameWithType: BindingManagerBase.PullData
- uid: System.Windows.Forms.BindingManagerBase.PushData*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: PushData
  nameWithType: BindingManagerBase.PushData
- uid: System.Windows.Forms.BindingManagerBase.RemoveAt*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: RemoveAt
  nameWithType: BindingManagerBase.RemoveAt
- uid: System.Windows.Forms.BindingManagerBase.ResumeBinding*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: ResumeBinding
  nameWithType: BindingManagerBase.ResumeBinding
- uid: System.Windows.Forms.BindingManagerBase.SuspendBinding*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: SuspendBinding
  nameWithType: BindingManagerBase.SuspendBinding
- uid: System.Windows.Forms.BindingManagerBase.UpdateIsBinding*
  parent: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: UpdateIsBinding
  nameWithType: BindingManagerBase.UpdateIsBinding
