### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.HtmlWindow
  id: HtmlWindow
  children:
  - System.Windows.Forms.HtmlWindow.Alert(System.String)
  - System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlWindow.Close
  - System.Windows.Forms.HtmlWindow.Confirm(System.String)
  - System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlWindow.Document
  - System.Windows.Forms.HtmlWindow.DomWindow
  - System.Windows.Forms.HtmlWindow.Equals(System.Object)
  - System.Windows.Forms.HtmlWindow.Error
  - System.Windows.Forms.HtmlWindow.Focus
  - System.Windows.Forms.HtmlWindow.Frames
  - System.Windows.Forms.HtmlWindow.GetHashCode
  - System.Windows.Forms.HtmlWindow.GotFocus
  - System.Windows.Forms.HtmlWindow.History
  - System.Windows.Forms.HtmlWindow.IsClosed
  - System.Windows.Forms.HtmlWindow.Load
  - System.Windows.Forms.HtmlWindow.LostFocus
  - System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  - System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Name
  - System.Windows.Forms.HtmlWindow.Navigate(System.String)
  - System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  - System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  - System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  - System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  - System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  - System.Windows.Forms.HtmlWindow.Opener
  - System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  - System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  - System.Windows.Forms.HtmlWindow.Parent
  - System.Windows.Forms.HtmlWindow.Position
  - System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  - System.Windows.Forms.HtmlWindow.RemoveFocus
  - System.Windows.Forms.HtmlWindow.Resize
  - System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  - System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Scroll
  - System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  - System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Size
  - System.Windows.Forms.HtmlWindow.StatusBarText
  - System.Windows.Forms.HtmlWindow.Unload
  - System.Windows.Forms.HtmlWindow.Url
  - System.Windows.Forms.HtmlWindow.WindowFrameElement
  langs:
  - csharp
  name: HtmlWindow
  nameWithType: HtmlWindow
  fullName: System.Windows.Forms.HtmlWindow
  type: Class
  summary: "表示包含一个或多个实例的逻辑窗口<xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref>。"
  remarks: "不应与在 Windows 窗体或 Win32 API; 窗口的概念混淆 HtmlWindow没有任何`HWND`或类似 Windows 资源，直接对应的 HtmlWindow 实例。 相反，HtmlWindow 上用户的屏幕，以及用于与通过提示和对话框的用户交互的方法提供文档的位置的高级的说明。 HtmlWindow 充当 Web 页面的文档和其元数据，例如文档的位置和 Web 浏览器的功能的逻辑容器。       一种 Web 页包含单个文档，或者`FRAMESET`包含一个或多个`FRAME`元素，其中每个承载其自己的文档。 Web 开发人员使用框架集以显示逻辑上相关的页面并排显示 （例如，内容旁边导航页页）。 当包含单个文档的页面时，你可以访问它通过<xref:System.Windows.Forms.HtmlWindow.Document%2A>HtmlWindow; 如果网页使用帧的属性，你可以访问其文档，一直到<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合，包含一个或多个 HtmlWindow 对象。</xref:System.Windows.Forms.HtmlWindow.Frames%2A> </xref:System.Windows.Forms.HtmlWindow.Document%2A>       当你的主机<xref:System.Windows.Forms.WebBrowser>控件在 Windows 窗体应用程序，你可以选择与使用标准 Windows 窗体类，如用户交互<xref:System.Windows.Forms.Form>或<xref:System.Windows.Forms.MessageBox>，或者你可以使用方法上定义为此目的的 HtmlWindow。</xref:System.Windows.Forms.MessageBox> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.WebBrowser> <xref:System.Windows.Forms.HtmlWindow.Alert%2A>方法具有自定义文本中显示一个简单的对话框和**确定**按钮;<xref:System.Windows.Forms.HtmlWindow.Prompt%2A>向用户; 呈现自定义文本和文本输入的字段的行和<xref:System.Windows.Forms.HtmlWindow.Confirm%2A>的自定义文本线显示一个对话框和**确定**和**取消**按钮。</xref:System.Windows.Forms.HtmlWindow.Confirm%2A> </xref:System.Windows.Forms.HtmlWindow.Prompt%2A> </xref:System.Windows.Forms.HtmlWindow.Alert%2A>       你可以使用 HtmlWindow 打开包含新的文档的新窗口。 <xref:System.Windows.Forms.HtmlWindow.Open%2A>将指定的 URL 加载到已命名的窗口中，如果不存在，请创建它，而<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>始终在新创建的窗口中打开其 URL。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A></xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  example:
  - "The following code example contains two methods. The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed. The second opens another URL in the same window, but specifies that only the location bar should be displayed. Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first. The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public sealed class HtmlWindow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Alert(System.String)
  id: Alert(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Alert(String)
  nameWithType: HtmlWindow.Alert(String)
  fullName: System.Windows.Forms.HtmlWindow.Alert(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "显示一个消息框。"
  remarks: "<xref:System.Windows.Forms.MessageBox>类提供了警报的方法的更强大版本。</xref:System.Windows.Forms.MessageBox>       虽然警报接受 Unicode 文本作为输入，Internet Explorer 脚本提示符不会显示非拉丁语言文本相应地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 上由于操作系统限制。 有关详细信息，请参阅[信息︰ Internet Explorer 脚本将提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  syntax:
    content: public void Alert (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref:System.String>在消息框中显示。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Alert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  id: AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.AttachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "添加事件处理程序已命名的 HTML DOM 事件。"
  remarks: "文档完成加载之前，不应将事件附加到 HTML 文档或其对象之一。 中的最早，应调用此方法是<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件<xref:System.Windows.Forms.WebBrowser>控件。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>"
  syntax:
    content: public void AttachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "你想要处理事件的名称。"
    - id: eventHandler
      type: System.EventHandler
      description: "对处理事件的托管代码的引用。"
  overload: System.Windows.Forms.HtmlWindow.AttachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Close
  id: Close
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlWindow.Close()
  fullName: System.Windows.Forms.HtmlWindow.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "关闭该窗口。"
  remarks: "使用<xref:System.Windows.Forms.HtmlWindow.IsClosed%2A>属性来确定是否窗口已关闭。</xref:System.Windows.Forms.HtmlWindow.IsClosed%2A> 如果窗口已关闭，则此方法将产生任何影响。       当你创建新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，关闭导致 HTML 文档对象模型，以便打开 Internet Explorer 的新实例。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果你不调用关闭所有已创建的 windows 上，此实例的 Internet 资源管理器将继续运行，即使你的应用程序关闭后。"
  example:
  - "The following code example opens a window, and closes it if the user has not used it in the past five minutes. The code example was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`. To run this example successfully, change the first argument supplied to <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to a valid URL.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#9](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#9)]\n [!code-cs[System.Windows.Forms.HtmlWindow#9](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#9)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Confirm(System.String)
  id: Confirm(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Confirm(String)
  nameWithType: HtmlWindow.Confirm(String)
  fullName: System.Windows.Forms.HtmlWindow.Confirm(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "显示一个对话框，使用消息和按钮，以请求作出是 / 无响应。"
  remarks: "确认显示模式对话框;用户将不能访问而无需先关闭此对话框中的基础的 HTML 页。       虽然确认接受 Unicode 文本作为输入，Internet Explorer 脚本提示符不会显示非拉丁语言文本相应地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 上由于操作系统限制。 有关详细信息，请参阅[信息︰ Internet Explorer 脚本将提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  example:
  - "Copy the following HTML and save it into a form called orderForm.htm:  \n  \n `<HTML>`  \n  \n `<BODY>`  \n  \n `<FORM name=\"NewOrderForm\">`  \n  \n `Select Part Type:`  \n  \n `<SELECT name=\"PartType\">`  \n  \n `<OPTION>AZ-3700`  \n  \n `<OPTION>AZ-3701`  \n  \n `<OPTION>AZ-3702`  \n  \n `<SELECT><br>`  \n  \n `Quantity: <INPUT type=\"text\" name=\"PartQty\" size=\"2\" maxsize=\"2\"><br>`  \n  \n `Building/Desk:`  \n  \n `<INPUT type=\"text\" name=\"PartBuilding\" size=\"2\" maxsize=\"2\"> /`  \n  \n `<INPUT type=\"text\" name=\"PartDesk\" size=\"2\" maxsize=\"2\"><p>`  \n  \n `<INPUT type=\"submit\" value=\"Transmit Order\">`  \n  \n `</FORM>`  \n  \n `</BODY>`  \n  \n `</HTML>`  \n  \n The following code example displays a Confirm dialog box when the user submits `NewOrderForm`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#10](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#10)]\n [!code-cs[System.Windows.Forms.HtmlWindow#10](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#10)]"
  syntax:
    content: public bool Confirm (string message);
    parameters:
    - id: message
      type: System.String
      description: "要向用户显示的文本。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户单击**是**;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果用户单击**否**或关闭该对话框。"
  overload: System.Windows.Forms.HtmlWindow.Confirm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  id: DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.DetachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移除指定的事件处理程序。"
  syntax:
    content: public void DetachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "你想要处理事件的名称。"
    - id: eventHandler
      type: System.EventHandler
      description: "对处理事件的托管代码的引用。"
  overload: System.Windows.Forms.HtmlWindow.DetachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Document
  id: Document
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Document
  nameWithType: HtmlWindow.Document
  fullName: System.Windows.Forms.HtmlWindow.Document
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取窗口中包含的 HTML 文档。"
  remarks: "通常，你将访问通过文档<xref:System.Windows.Forms.WebBrowser.Document%2A>属性<xref:System.Windows.Forms.WebBrowser>控件。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.Document%2A> 当你需要访问内的文档时使用此属性`FRAME`使用<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合。</xref:System.Windows.Forms.HtmlWindow.Frames%2A>"
  example:
  - "The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public System.Windows.Forms.HtmlDocument Document { get; }
    return:
      type: System.Windows.Forms.HtmlDocument
      description: "有效实例<xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref>，如果未加载的文档。 如果此窗口包含`FRAMESET`，或者当前未加载任何文档，它将返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.DomWindow
  id: DomWindow
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
  fullName: System.Windows.Forms.HtmlWindow.DomWindow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取此类包装的非托管的接口。"
  remarks: "使用基础非托管的接口指针到文档对象模型 (DOM) 来执行未公开受<xref:System.Windows.Forms.HtmlWindow>。</xref:System.Windows.Forms.HtmlWindow>方法       你必须将添加引用到非托管 MSHTML.dll 才能使用 DomWindow。 有关详细信息，请参阅[导入类型库当作程序集](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example obtains an `IHTMLWindow2` pointer from a document's window and displays a new document in a modal window.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#3](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#3)]\n [!code-cs[System.Windows.Forms.HtmlWindow#3](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#3)]"
  syntax:
    content: public object DomWindow { get; }
    return:
      type: System.Object
      description: "一个对象，可以强制转换为<xref uid=&quot;langword_csharp_IHTMLWindow2&quot; name=&quot;IHTMLWindow2&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_IHTMLWindow3&quot; name=&quot;IHTMLWindow3&quot; href=&quot;&quot;> </xref>，或<xref uid=&quot;langword_csharp_IHTMLWindow4 &quot; name=&quot;IHTMLWindow4 &quot; href=&quot;&quot;></xref>指针。"
  overload: System.Windows.Forms.HtmlWindow.DomWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HtmlWindow.Equals(Object)
  fullName: System.Windows.Forms.HtmlWindow.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "测试对象与当前对象相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要测试的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Error
  id: Error
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Error
  nameWithType: HtmlWindow.Error
  fullName: System.Windows.Forms.HtmlWindow.Error
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当窗口内部运行的脚本遇到运行时错误时发生。"
  remarks: "HTML 页面可以包含用 JScript 或 VBScript，当加载页时可以执行通常编写的脚本代码。 脚本遇到运行时错误时发生错误。 因为脚本代码位于后期绑定，这意味着，与对象的调用不被解析直到运行时错误可能包括中引用 null 对象到调用未定义的属性或方法的所有内容。       你可以设置<xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A>属性<xref:System.Windows.Forms.HtmlElementErrorEventArgs>为 true，以便防止 Internet 资源管理器中的本机错误对话框显示。</xref:System.Windows.Forms.HtmlElementErrorEventArgs> </xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A>       有关取消事件上传和取消事件的默认操作之间的差异的详细信息，请参阅[关于 DHTML 对象模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example traps the error that results when a script on an HTML page attempts to access an object that is not defined in the document. The page must be fully loaded before the Error event handler is attached, otherwise the example will not work.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#16)]\n [!code-cs[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#16)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementErrorEventHandler Error;
    return:
      type: System.Windows.Forms.HtmlElementErrorEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Focus
  id: Focus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Focus()
  nameWithType: HtmlWindow.Focus()
  fullName: System.Windows.Forms.HtmlWindow.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将焦点置于当前窗口上。"
  remarks: "如果另一个窗口拥有焦点焦点调用之前，该窗口将失去焦点。       不要调用焦点上一个窗口内的一个元素之前窗口的<xref:System.Windows.Forms.HtmlWindow.Load>引发事件。</xref:System.Windows.Forms.HtmlWindow.Load>"
  syntax:
    content: public void Focus ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Frames
  id: Frames
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Frames
  nameWithType: HtmlWindow.Frames
  fullName: System.Windows.Forms.HtmlWindow.Frames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个对每个引用`FRAME`在网页中定义的元素。"
  remarks: "A`FRAME`是一套中定义的 windows `FRAMESET`。 `FRAME`s 启用承载单个文档中的多个文档。 每个`FRAME`被定义为具有一定行和列宽度，并且是相对于其他页上的位置`FRAME`中定义的 s `FRAMESET`; 的位置`FRAME`固定的虽然用户有时可以使用鼠标光标若要扩大或收缩`FRAME`。 `IFRAME`是类似于的框架，但它不需要定位在固定位置。       框架将包含的一个实例<xref:System.Windows.Forms.HtmlWindow>每个`FRAME`或`IFRAME`在网页中定义。</xref:System.Windows.Forms.HtmlWindow>"
  example:
  - "The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public System.Windows.Forms.HtmlWindowCollection Frames { get; }
    return:
      type: System.Windows.Forms.HtmlWindowCollection
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindowCollection&quot;> </xref>的文档的`FRAME`和`IFRAME`对象。"
  overload: System.Windows.Forms.HtmlWindow.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HtmlWindow.GetHashCode()
  fullName: System.Windows.Forms.HtmlWindow.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "用作特定类型的哈希函数。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的哈希代码<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: GotFocus
  nameWithType: HtmlWindow.GotFocus
  fullName: System.Windows.Forms.HtmlWindow.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在当前窗口获得用户输入的焦点时发生。"
  remarks: "GotFocus，则会发生:-中的第一个窗口`FRAMESET`时`FRAMESET`首次加载。      - `FRAME` ，最后具有焦点时窗口包含<xref:System.Windows.Forms.WebBrowser>控件置于前台。</xref:System.Windows.Forms.WebBrowser>      -A`FRAME`单击用户，但只有当用户单击不会将焦点置于窗口内的元素。       无法取消的默认操作为 GotFocus 事件，或防止冒泡。 有关取消事件上传和取消事件的默认操作之间的差异的详细信息，请参阅[关于 DHTML 对象模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GotFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the GotFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#452](~/add/codesnippet/csharp/e-system.windows.forms.h_19_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#452](~/add/codesnippet/visualbasic/e-system.windows.forms.h_19_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler GotFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.History
  id: History
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: History
  nameWithType: HtmlWindow.History
  fullName: System.Windows.Forms.HtmlWindow.History
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取包含用户最近访问的 Url 的对象。"
  remarks: "历史记录包含在当前窗口中，这被称为导航到的所有 Url*导航堆栈*，并提供用于导航到这些文档的方法。"
  syntax:
    content: public System.Windows.Forms.HtmlHistory History { get; }
    return:
      type: System.Windows.Forms.HtmlHistory
      description: "<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;> </xref>当前窗口。"
  overload: System.Windows.Forms.HtmlWindow.History*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.IsClosed
  id: IsClosed
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
  fullName: System.Windows.Forms.HtmlWindow.IsClosed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示此窗口打开还是关闭。"
  remarks: "如果<xref:System.Windows.Forms.HtmlWindow>已由用户或通过调用关闭<xref:System.Windows.Forms.HtmlWindow.Close%2A>方法，尝试导航到新 URL 或访问窗口的文档将导致错误。</xref:System.Windows.Forms.HtmlWindow.Close%2A> </xref:System.Windows.Forms.HtmlWindow> 使用此属性以确定它是否是安全地在当前窗口对象上调用属性和方法。"
  example:
  - "The following code example opens a window, and closes it if the user has not used it in the past five minutes. The code example requires that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果窗口仍处于打开状态在屏幕上。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Load
  id: Load
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Load
  nameWithType: HtmlWindow.Load
  fullName: System.Windows.Forms.HtmlWindow.Load
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗口的文档及其所有元素都完成初始化时发生。"
  remarks: "加载事件工作原理类似于<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>上的事件<xref:System.Windows.Forms.WebBrowser>控件︰ 它发出信号，它是安全的访问 HTML 文档内的元素。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>       无法取消的 Load 事件的默认操作。       有关取消事件上传和取消事件的默认操作之间的差异的详细信息，请参阅[关于 DHTML 对象模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Load event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Load event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#453](~/add/codesnippet/csharp/e-system.windows.forms.h_34_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#453](~/add/codesnippet/visualbasic/e-system.windows.forms.h_34_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Load;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: LostFocus
  nameWithType: HtmlWindow.LostFocus
  fullName: System.Windows.Forms.HtmlWindow.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当用户输入的焦点离开窗口时发生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LostFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the LostFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#454](~/add/codesnippet/csharp/e-system.windows.forms.h_30_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#454](~/add/codesnippet/visualbasic/e-system.windows.forms.h_30_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LostFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  id: MoveTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: MoveTo(Point)
  nameWithType: HtmlWindow.MoveTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在屏幕上，将窗口移动到指定的坐标。"
  remarks: "你不能使用 MoveTo 移动从屏幕; 可见边缘中移出一个窗口此方法还可通过脚本在网页上，并且允许不受信任的脚本来呈现 windows 不可见被视为不安全。       将引发 MoveTo<xref:System.UnauthorizedAccessException>如果想要移动的窗口和其父窗口具有不同的顶级域。</xref:System.UnauthorizedAccessException> 例如，如果您要承载<xref:System.Windows.Forms.WebBrowser>控制指向 a.adatum.com，创建一个新窗口使用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>以显示 b.adatum.com。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.WebBrowser> 在这种情况下，这两个窗口被视为是相同的顶级域的一部分，不会引发异常。 但是，如果调用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>若要显示 www,microsoft.com，两个窗口，现在具有不同的顶级域，与<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>操作将导致要引发的异常。</xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> </xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>"
  syntax:
    content: public void MoveTo (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "窗口的左上角 x 和 y 坐标。"
  overload: System.Windows.Forms.HtmlWindow.MoveTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "尝试执行此操作的代码没有操作此窗口的权限。 请参阅备注部分，有关详细信息。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  id: MoveTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: MoveTo(Int32,Int32)
  nameWithType: HtmlWindow.MoveTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在屏幕上，将窗口移动到指定的坐标。"
  remarks: "不能使用<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>到移动从屏幕可见边缘中移出窗口; 此方法还可通过脚本在网页上，并且允许不受信任的脚本来呈现 windows 不可见被视为不安全。</xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>       <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>将引发<xref:System.UnauthorizedAccessException>如果想要移动的窗口和其父窗口具有不同的顶级域。</xref:System.UnauthorizedAccessException></xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 例如，如果您要承载<xref:System.Windows.Forms.WebBrowser>控制和它所指向的 a.adatum.com，创建新的窗口使用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>以显示 b.adatum.com。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.WebBrowser> 在这种情况下，这两个窗口被视为是相同的顶级域的一部分，不会引发异常。 但是，如果调用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>若要显示 www,microsoft.com，两个窗口现在具有不同的顶级域，并且 MoveTo 操作将导致要引发的异常。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>"
  syntax:
    content: public void MoveTo (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "窗口的左上角 x 坐标。"
    - id: y
      type: System.Int32
      description: "窗口的左上角的 y 坐标。"
  overload: System.Windows.Forms.HtmlWindow.MoveTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "尝试执行此操作的代码没有操作此窗口的权限。 请参阅备注部分，有关详细信息。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Name
  id: Name
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Name
  nameWithType: HtmlWindow.Name
  fullName: System.Windows.Forms.HtmlWindow.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗口的名称。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>表示的名称。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.String)
  id: Navigate(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Navigate(String)
  nameWithType: HtmlWindow.Navigate(String)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "显示或下载位于指定的 URL 的新内容。"
  remarks: "如果`url`参数指向 HTML 页，将销毁当前显示在窗口中的页面，并将其替换为新页面持有; 不能在旧的页中的托管 DOM 对象保存你的应用程序的任何引用。 如果`url`点到 Internet 资源管理器无法显示的资源，则用户将看到一个对话框，询问你是否要打开在应用程序，保存它以磁盘，或取消下载操作外部资源。"
  syntax:
    content: public void Navigate (string urlString);
    parameters:
    - id: urlString
      type: System.String
      description: "若要显示，资源所述的统一资源定位符。"
  overload: System.Windows.Forms.HtmlWindow.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: HtmlWindow.Navigate(Uri)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(Uri)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当前窗口中显示新文档。"
  syntax:
    content: public void Navigate (Uri url);
    parameters:
    - id: url
      type: System.Uri
      description: "为指定的位置<xref:System.Uri>、 文档或在当前窗口中显示的对象。</xref:System.Uri>"
  overload: System.Windows.Forms.HtmlWindow.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  id: op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: op_Equality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "测试两个<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>对象是否相等。"
  remarks: "相等运算符测试`IUnknown`包装由所提供的基础 COM 对象的指针<xref:System.Windows.Forms.HtmlWindow>类。</xref:System.Windows.Forms.HtmlWindow>"
  syntax:
    content: public static bool op_Equality (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlWindow
      description: "第一个<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>对象。"
    - id: right
      type: System.Windows.Forms.HtmlWindow
      description: "第二个<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个参数均<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或如果两个元素具有相同的基础 COM 接口; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  id: op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: op_Inequality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "测试两个<xref uid=&quot;langword_csharp_HtmlWindow&quot; name=&quot;HtmlWindow&quot; href=&quot;&quot;></xref>对象是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlWindow
      description: "第一个<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>对象。"
    - id: right
      type: System.Windows.Forms.HtmlWindow
      description: "第二个<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一个但不是将两个对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或基础 COM 指针不匹配; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  id: Open(System.String,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Open(String,String,String,Boolean)
  nameWithType: HtmlWindow.Open(String,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在已命名的窗口中显示文件。"
  remarks: "`target`参数可以打开的以前调用的结果作为创建窗口指定名称。 参数也可以指向通过单击超链接打开的窗口 (`A`元素) 或`FORM`用元素`TARGET`特性在新窗口中打开其 URL。 以下 HTML 代码将打开一个名为的新窗口`orderWindow`当用户单击它︰`<A HREF=&quot;/startOrder.aspx&quot; TARGET=&quot;orderWindow&quot;>Click to Start Order</a>`如果提供的任何选项`windowOptions`参数，不包含任何选项会自动禁用。 换而言之，如果您仅通过指定`windowOptions`要包含状态栏中，则菜单栏、 工具栏、 标题、 滚动条等将不会显示除非你显式启用它们通过`windowOptions`。       如果引用的文件`url`是某一 HTML 文件、 文本文件或其他可以在 Internet Explorer 内承载的文件类型它将在已命名的窗口中显示。 如果不能在 Internet Explorer 内显示的文件和名为的目标窗口不存在，则窗口将打开仅足够长的时间 Internet Explorer 下载资源;它将立即关闭之后。       当你创建使用打开的新 windows 或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，它将导致 HTML 文档对象模型，以便打开 Internet Explorer 的新实例。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 如果不调用<xref:System.Windows.Forms.HtmlWindow.Close%2A>上所有已创建的 windows，Internet Explorer 的此实例将保持运行状态即使你的应用程序已退出。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果你使用打开加载在现有窗口中，URL`windowOptions`将被忽略; 窗口中将保留维度、 外观和首先由对 Open 的初始调用的屏幕位置。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Open (string urlString, string target, string windowOptions, bool replaceEntry);
    parameters:
    - id: urlString
      type: System.String
      description: "描述要加载的文件的位置的统一资源定位器。"
    - id: target
      type: System.String
      description: "在其中打开资源的窗口的名称。 这可能是开发人员提供的名称，或下列特殊值之一︰ `_blank`︰ 打开`url`在新窗口中。 工作方式与调用<xref:System.Windows.Forms.HtmlWindow.OpenNew*>.</xref:System.Windows.Forms.HtmlWindow.OpenNew*>相同       `_media`︰ 打开`url`媒体栏中。       `_parent`︰ 打开`url`在创建当前窗口的窗口中。       `_search`︰ 打开`url`在搜索栏。       `_self`︰ 打开`url`当前窗口中。       `_top`︰ 如果属于窗口上调用`FRAME`元素中，打开`url`窗口托管其`FRAMESET`。 否则，充当与相同`_self`。"
    - id: windowOptions
      type: System.String
      description: "组成的零个或多个窗体中的下列选项以逗号分隔字符串`name=value`。 除`left`， `top`， `height`，和`width`选项，以接受任意整数，每个选项接受`yes`或<xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>，和`no`或<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>，作为有效的值。       `channelmode`︰ 与 Internet Explorer 4.0 版的不推荐使用的通道技术一起使用。 默认值是`no`。       `directories`︰ 是否该窗口将显示目录导航按钮。 默认值是`yes`。       `height`︰ 窗口的客户端区域，以像素为单位的高度。 最小值为 100;尝试打开小于这将导致此窗口将根据 Internet Explorer 默认设置打开窗口。       `left`︰ 以像素为单位的窗口中，相对于用户屏幕的左上角左边 （x 坐标） 位置。 必须是正整数。       `location`︰ 是否显示地址栏中，这使得用户能够将窗口导航到新 URL。 默认值是`yes`。       `menubar`︰ 是否在新窗口中显示菜单。 默认值是`yes`。       `resizable`︰ 是否可以由用户调整大小窗口。 默认值是`yes`。       `scrollbars`︰ 窗口是否具有水平和垂直滚动条。 默认值是`yes`。       `status`︰ 窗口是否具有状态栏底部。 默认值是`yes`。       `titlebar`︰ 是否显示当前页的标题。 将此选项设置为`no`程序内托管的应用程序; 无效的标题栏将始终显示。       `toolbar`︰ 工具栏按钮如**回**，**转发**，和**停止**可见。 默认值是`yes`。       `top`︰ 以像素为单位的窗口中，相对于用户屏幕的左上角上端 （y 坐标） 位置。 必须是正整数。       `width`︰ 窗口的客户端区域，以像素为单位的宽度。 最小值为 100;尝试打开小于这将导致此窗口将根据 Internet Explorer 默认设置打开窗口。"
    - id: replaceEntry
      type: System.Boolean
      description: "是否`url`替换导航历史记录中的当前窗口的 URL。 这将影响上的方法的操作的<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;></xref>类。"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>表示新窗口中或通过名为以前创建的窗口<code> target </code>参数。"
  overload: System.Windows.Forms.HtmlWindow.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  id: Open(System.Uri,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Open(Uri,String,String,Boolean)
  nameWithType: HtmlWindow.Open(Uri,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(Uri,String,String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在已命名的窗口中显示文件。"
  remarks: "`target`参数可以打开的以前调用的结果作为创建窗口指定名称。 参数也可以指向通过单击超链接打开的窗口 (`A`元素) 或`FORM`用元素`TARGET`特性在新窗口中打开其 URL。 以下 HTML 代码将打开一个名为的新窗口`orderWindow`当用户单击它︰`<A HREF=&quot;/startOrder.aspx&quot; TARGET=&quot;orderWindow&quot;>Click to Start Order</a>`如果提供的任何选项`windowOptions`参数，不包含任何选项会自动禁用。 换而言之，如果您仅通过指定`windowOptions`要包含状态栏中，则菜单栏、 工具栏、 标题、 滚动条等将不会显示除非你显式启用它们通过`windowOptions`。       如果引用的文件`url`是某一 HTML 文件、 文本文件或其他可以在 Internet Explorer 内承载的文件类型它将在已命名的窗口中显示。 如果不能在 Internet Explorer 内显示的文件和名为的目标窗口不存在，则窗口将打开仅足够长的时间 Internet Explorer 下载资源;它将立即关闭之后。       当你创建使用打开的新 windows 或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，它将导致 HTML 文档对象模型，以便打开 Internet Explorer 的新实例。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 如果不调用<xref:System.Windows.Forms.HtmlWindow.Close%2A>上所有已创建的 windows，Internet Explorer 的此实例将保持运行状态即使你的应用程序已退出。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果你使用打开加载在现有窗口中，URL`windowOptions`将被忽略; 窗口中将保留维度、 外观和首先由对 Open 的初始调用的屏幕位置。"
  example:
  - "The following code example contains two methods:  \n  \n-   The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed.  \n  \n-   The second opens another URL in the same window, but specifies that only the location bar should be displayed.  \n  \n Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first. The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Open (Uri url, string target, string windowOptions, bool replaceEntry);
    parameters:
    - id: url
      type: System.Uri
      description: "描述要加载的文件的位置的统一资源定位器。"
    - id: target
      type: System.String
      description: "在其中打开资源的窗口的名称。 这可以是开发人员提供的名称，或下列特殊值之一︰ `_blank`︰ 打开`url`在新窗口中。 工作方式与调用<xref:System.Windows.Forms.HtmlWindow.OpenNew*>.</xref:System.Windows.Forms.HtmlWindow.OpenNew*>相同       `_media`︰ 打开`url`媒体栏中。       `_parent`︰ 打开`url`在创建当前窗口的窗口中。       `_search`︰ 打开`url`在搜索栏。       `_self`︰ 打开`url`当前窗口中。       `_top`︰ 如果属于窗口上调用`FRAME`元素中，打开`url`窗口托管其`FRAMESET`。 否则，充当与相同`_self`。"
    - id: windowOptions
      type: System.String
      description: "组成的零个或多个窗体中的下列选项以逗号分隔字符串`name=value`。 除`left`， `top`， `height`，和`width`选项，以接受任意整数，每个选项接受`yes`或<xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>，和`no`或<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>，作为有效的值。       `channelmode`︰ 与 Internet Explorer 4.0 版的不推荐使用的通道技术一起使用。 默认值是`no`。       `directories`︰ 是否该窗口将显示目录导航按钮。 默认值是`yes`。       `height`︰ 窗口的客户端区域，以像素为单位的高度。 最小值为 100;尝试打开小于这将导致此窗口将根据 Internet Explorer 默认设置打开窗口。       `left`︰ 以像素为单位的窗口中，相对于用户屏幕的左上角左边 （x 坐标） 位置。 必须是正整数。       `location`︰ 是否显示地址栏中，这使得用户能够将窗口导航到新 URL。 默认值是`yes`。       `menubar`︰ 是否在新窗口中显示菜单。 默认值是`yes`。       `resizable`︰ 是否可以由用户调整大小窗口。 默认值是`yes`。       `scrollbars`︰ 窗口是否具有水平和垂直滚动条。 默认值是`yes`。       `status`︰ 窗口是否具有状态栏底部。 默认值是`yes`。       `titlebar`︰ 是否显示当前页的标题。 将此选项设置为`no`程序内托管的应用程序; 无效的标题栏将始终显示。       `toolbar`︰ 工具栏按钮如**回**，**转发**，和**停止**可见。 默认值是`yes`。       `top`︰ 以像素为单位的窗口中，相对于用户屏幕的左上角上端 （y 坐标） 位置。 必须是正整数。       `width`︰ 窗口的客户端区域，以像素为单位的宽度。 最小值为 100;尝试打开小于这将导致此窗口将根据 Internet Explorer 默认设置打开窗口。"
    - id: replaceEntry
      type: System.Boolean
      description: "是否`url`替换导航历史记录中的当前窗口的 URL。 这将影响上的方法的操作的<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;></xref>类。"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>表示新窗口中或通过名为以前创建的窗口<code> target </code>参数。"
  overload: System.Windows.Forms.HtmlWindow.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Opener
  id: Opener
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Opener
  nameWithType: HtmlWindow.Opener
  fullName: System.Windows.Forms.HtmlWindow.Opener
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取对打开当前窗口的窗口的引用。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Opener { get; }
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>通过调用创建<> *1> 或<> *1> 方法。 如果该窗口不创建使用这些方法之一，此属性返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Opener*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  id: OpenNew(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: OpenNew(String,String)
  nameWithType: HtmlWindow.OpenNew(String,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在新窗口中显示文件。"
  remarks: "如果引用的文件`url`是某一 HTML 文件、 文本文件或其他可以在 Internet Explorer 内承载的文件类型将在新窗口中显示。 如果文件不显示在 Internet Explorer 内，则将会打开窗口仅足够长的时间 Internet Explorer 下载资源;它将立即关闭之后。       当你创建新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或 OpenNew，它会导致 HTML 文档对象模型，以便打开 Internet Explorer 的新实例。</xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果不调用<xref:System.Windows.Forms.HtmlWindow.Close%2A>上所有已创建的 windows，Internet Explorer 的此实例将保持运行状态即使你的应用程序已退出。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果你想要将文档加载到先前打开的窗口，请参阅<xref:System.Windows.Forms.HtmlWindow.Open%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlWindow OpenNew (string urlString, string windowOptions);
    parameters:
    - id: urlString
      type: System.String
      description: "描述要加载的文件的位置的统一资源定位器。"
    - id: windowOptions
      type: System.String
      description: "组成的零个或多个窗体中的下列选项以逗号分隔字符串`name=value`。 请参阅<xref:System.Windows.Forms.HtmlWindow.Open*>有关的有效选项的完整说明。</xref:System.Windows.Forms.HtmlWindow.Open*>"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>表示新窗口。"
  overload: System.Windows.Forms.HtmlWindow.OpenNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  id: OpenNew(System.Uri,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: OpenNew(Uri,String)
  nameWithType: HtmlWindow.OpenNew(Uri,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(Uri,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在新窗口中显示文件。"
  remarks: "如果引用的文件`url`是某一 HTML 文件、 文本文件或其他可以在 Internet Explorer 内承载的文件类型将在新窗口中显示。 如果文件不显示在 Internet Explorer 内，则将会打开窗口仅足够长的时间 Internet Explorer 下载资源;它将立即关闭之后。       当你创建新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或 OpenNew，它会导致 HTML 文档对象模型，以便打开 Internet Explorer 的新实例。</xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果不调用<xref:System.Windows.Forms.HtmlWindow.Close%2A>上所有已创建的 windows，Internet Explorer 的此实例将保持运行状态即使你的应用程序已退出。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果你想要将文档加载到先前打开的窗口，请参阅<xref:System.Windows.Forms.HtmlWindow.Open%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlWindow OpenNew (Uri url, string windowOptions);
    parameters:
    - id: url
      type: System.Uri
      description: "描述要加载的文件的位置的统一资源定位器。"
    - id: windowOptions
      type: System.String
      description: "组成的零个或多个窗体中的下列选项以逗号分隔字符串`name=value`。 请参阅<xref:System.Windows.Forms.HtmlWindow.Open*>有关的有效选项的完整说明。</xref:System.Windows.Forms.HtmlWindow.Open*>"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>表示新窗口。"
  overload: System.Windows.Forms.HtmlWindow.OpenNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Parent
  id: Parent
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Parent
  nameWithType: HtmlWindow.Parent
  fullName: System.Windows.Forms.HtmlWindow.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取驻留在包含框架的页中当前的上面窗口的窗口。"
  remarks: "文档中包含的帧，每个`FRAME`内`FRAMESET`充当页上的单独的子窗口。 每个父`FRAME`是`FRAMESET`其中包含`FRAME`。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Parent { get; }
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>拥有当前窗口。 如果当前窗口不`FRAME`，或者没有嵌入内`FRAME`，它将返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Position
  id: Position
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Position
  nameWithType: HtmlWindow.Position
  fullName: System.Windows.Forms.HtmlWindow.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取屏幕上窗口工作区的位置。"
  remarks: "<xref:System.Windows.Forms.Control.Location%2A>属性<xref:System.Windows.Forms.WebBrowser>控件将返回相对于窗口左上角的窗体控件的位置。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.Control.Location%2A> 与此相反，位置将返回相对于用户的监视器的左上角的文档的显示区域的位置。"
  example:
  - "The following code example opens a new window directly over the <xref:System.Windows.Forms.WebBrowser> control on the form. The code example requires that your form contains an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#5](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#5)]\n [!code-cs[System.Windows.Forms.HtmlWindow#5](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#5)]"
  syntax:
    content: public System.Drawing.Point Position { get; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>描述 x-和屏幕中，以像素为单位的左上角的 y 坐标。"
  overload: System.Windows.Forms.HtmlWindow.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  id: Prompt(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Prompt(String,String)
  nameWithType: HtmlWindow.Prompt(String,String)
  fullName: System.Windows.Forms.HtmlWindow.Prompt(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向用户显示一个对话框，显示一条消息和一个文本框。"
  remarks: "提示符提供一种快速、 轻松的方法，以获得用户的简单文本输入。       虽然提示符接受 Unicode 文本作为输入，Internet Explorer 脚本提示符不会显示非拉丁语言文本相应地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 上由于操作系统限制。 有关详细信息，请参阅[信息︰ Internet Explorer 脚本将提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  syntax:
    content: public string Prompt (string message, string defaultInputValue);
    parameters:
    - id: message
      type: System.String
      description: "要向用户显示的消息。"
    - id: defaultInputValue
      type: System.String
      description: "在文本框中显示的默认值。"
    return:
      type: System.String
      description: "A<xref:System.String>表示用户输入的文本。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Prompt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus
  id: RemoveFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: RemoveFocus()
  nameWithType: HtmlWindow.RemoveFocus()
  fullName: System.Windows.Forms.HtmlWindow.RemoveFocus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将焦点从当前窗口中移出。"
  remarks: "在调用`FRAME`中的窗口`FRAMESET`，RemoveFocus 将导致该窗口来失去焦点，但它不会自动设置焦点在另一个窗口上。"
  syntax:
    content: public void RemoveFocus ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.RemoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Resize
  id: Resize
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Resize
  nameWithType: HtmlWindow.Resize
  fullName: System.Windows.Forms.HtmlWindow.Resize
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当用户使用鼠标更改窗口的尺寸时发生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Resize event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Resize event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#455](~/add/codesnippet/csharp/e-system.windows.forms.h_25_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#455](~/add/codesnippet/visualbasic/e-system.windows.forms.h_25_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Resize;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  id: ResizeTo(System.Drawing.Size)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ResizeTo(Size)
  nameWithType: HtmlWindow.ResizeTo(Size)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗口的大小更改为指定的尺寸。"
  remarks: ''
  example:
  - "The following code example opens a new window, and resizes it to fill the available screen area.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public void ResizeTo (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>描述的所需的宽度和高度的窗口中，以像素为单位。 必须等于 100 个像素达到或超过两个维度。"
  overload: System.Windows.Forms.HtmlWindow.ResizeTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "尝试调整大小的窗口位于不同域中比其父窗口。 此限制是跨框架脚本安全; 的一部分有关详细信息，请参阅[有关跨框架脚本和安全](http://msdn.microsoft.com/library/ms533028.aspx)。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  id: ResizeTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ResizeTo(Int32,Int32)
  nameWithType: HtmlWindow.ResizeTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "窗口的大小更改为指定的尺寸。"
  syntax:
    content: public void ResizeTo (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "描述窗口中，以像素为单位的所需的宽度。 必须大于 100 像素。"
    - id: height
      type: System.Int32
      description: "描述窗口中，以像素为单位的所需的高度。 必须大于 100 像素。"
  overload: System.Windows.Forms.HtmlWindow.ResizeTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "尝试调整大小的窗口位于不同域中比其父窗口。 此限制是跨框架脚本安全; 的一部分有关详细信息，请参阅[有关跨框架脚本和安全](http://msdn.microsoft.com/library/ms533028.aspx)。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Scroll
  id: Scroll
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Scroll
  nameWithType: HtmlWindow.Scroll
  fullName: System.Windows.Forms.HtmlWindow.Scroll
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "当用户滚动窗口以查看屏幕外的文本时发生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Scroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Scroll event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#456](~/add/codesnippet/csharp/e-system.windows.forms.h_8_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#456](~/add/codesnippet/visualbasic/e-system.windows.forms.h_8_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Scroll;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  id: ScrollTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ScrollTo(Point)
  nameWithType: HtmlWindow.ScrollTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将窗口移动到指定的坐标。"
  remarks: "ScrollTo 将导致要向下滚动，以便在文档上的指定的坐标位于文档的窗口的左上角的文档。 如果该文档不是长或不够宽，这种情况，ScrollTo 将按指定的方向尽可能文档中滚动。"
  example:
  - "The following code example scrolls through the document to the coordinate position clicked by the user.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public void ScrollTo (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "X 坐标和 y 坐标，相对于当前窗口，页面应该滚动的左上角。"
  overload: System.Windows.Forms.HtmlWindow.ScrollTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  id: ScrollTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ScrollTo(Int32,Int32)
  nameWithType: HtmlWindow.ScrollTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将窗口滚动到指定的位置。"
  remarks: "<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>将导致要向下滚动，以便在文档上的指定的坐标位于文档的窗口的左上角的文档。</xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 如果该文档不是长或不够宽，这种情况，<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>将按指定的方向尽可能文档中滚动。</xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>"
  syntax:
    content: public void ScrollTo (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "X 坐标，相对于当前窗口，页面应该滚动的左上角。"
    - id: y
      type: System.Int32
      description: "Y 坐标，相对于当前窗口，页面应该滚动的左上角。"
  overload: System.Windows.Forms.HtmlWindow.ScrollTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Size
  id: Size
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Size
  nameWithType: HtmlWindow.Size
  fullName: System.Windows.Forms.HtmlWindow.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置当前窗口的大小。"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>描述以像素为单位的窗口的大小。"
  overload: System.Windows.Forms.HtmlWindow.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.StatusBarText
  id: StatusBarText
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
  fullName: System.Windows.Forms.HtmlWindow.StatusBarText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置窗口的状态栏中显示的文本。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>控件不显示状态栏。</xref:System.Windows.Forms.WebBrowser> 使用打开任何新窗口<xref:System.Windows.Forms.HtmlWindow.Open%2A>或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>方法，但是，默认会显示状态栏。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public string StatusBarText { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含当前状态文本。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.StatusBarText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Unload
  id: Unload
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Unload
  nameWithType: HtmlWindow.Unload
  fullName: System.Windows.Forms.HtmlWindow.Unload
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "正在卸载当前页，并且新页即将显示时发生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Unload event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Unload event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#457](~/add/codesnippet/csharp/e-system.windows.forms.h_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#457](~/add/codesnippet/visualbasic/e-system.windows.forms.h_7_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Unload;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Url
  id: Url
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Url
  nameWithType: HtmlWindow.Url
  fullName: System.Windows.Forms.HtmlWindow.Url
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取对应于显示在窗口中的当前项的 URL。"
  remarks: "此属性是只读的。 若要导航到新文档窗口，请使用<xref:System.Windows.Forms.HtmlWindow.Navigate%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Navigate%2A>"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>描述 URL。</xref:System.Uri>"
  overload: System.Windows.Forms.HtmlWindow.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement
  id: WindowFrameElement
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
  fullName: System.Windows.Forms.HtmlWindow.WindowFrameElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取对应于此窗口的框架元素。"
  remarks: "当检索`FRAME`从<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合中，它将返回<xref:System.Windows.Forms.HtmlWindow>.</xref:System.Windows.Forms.HtmlWindow></xref:System.Windows.Forms.HtmlWindow.Frames%2A>元素 如果你需要访问的基础属性对此对象调用 WindowFrameElement`FRAME`元素，如`SRC`属性。"
  example:
  - "The following code example compares the `SRC` attribute of frames in a `FRAMESET` to the current location. If they are different, the frames are reset to their original URLs.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement WindowFrameElement { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>对应于此窗口`FRAME`元素。 如果此窗口不是框架，它将返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.WindowFrameElement*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.Windows.Forms.HtmlWindow.Alert(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Alert(String)
  nameWithType: HtmlWindow.Alert(String)
  fullName: System.Windows.Forms.HtmlWindow.Alert(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.AttachEventHandler(String,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.HtmlWindow.Close
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Close()
  nameWithType: HtmlWindow.Close()
  fullName: System.Windows.Forms.HtmlWindow.Close()
- uid: System.Windows.Forms.HtmlWindow.Confirm(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Confirm(String)
  nameWithType: HtmlWindow.Confirm(String)
  fullName: System.Windows.Forms.HtmlWindow.Confirm(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.DetachEventHandler(String,EventHandler)
- uid: System.Windows.Forms.HtmlWindow.Document
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Document
  nameWithType: HtmlWindow.Document
  fullName: System.Windows.Forms.HtmlWindow.Document
- uid: System.Windows.Forms.HtmlDocument
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: System.Windows.Forms.HtmlDocument
- uid: System.Windows.Forms.HtmlWindow.DomWindow
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
  fullName: System.Windows.Forms.HtmlWindow.DomWindow
- uid: System.Windows.Forms.HtmlWindow.Equals(System.Object)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Equals(Object)
  nameWithType: HtmlWindow.Equals(Object)
  fullName: System.Windows.Forms.HtmlWindow.Equals(Object)
- uid: System.Windows.Forms.HtmlWindow.Error
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Error
  nameWithType: HtmlWindow.Error
  fullName: System.Windows.Forms.HtmlWindow.Error
- uid: System.Windows.Forms.HtmlElementErrorEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementErrorEventHandler
  nameWithType: HtmlElementErrorEventHandler
  fullName: System.Windows.Forms.HtmlElementErrorEventHandler
- uid: System.Windows.Forms.HtmlWindow.Focus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Focus()
  nameWithType: HtmlWindow.Focus()
  fullName: System.Windows.Forms.HtmlWindow.Focus()
- uid: System.Windows.Forms.HtmlWindow.Frames
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Frames
  nameWithType: HtmlWindow.Frames
  fullName: System.Windows.Forms.HtmlWindow.Frames
- uid: System.Windows.Forms.HtmlWindowCollection
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlWindowCollection
  nameWithType: HtmlWindowCollection
  fullName: System.Windows.Forms.HtmlWindowCollection
- uid: System.Windows.Forms.HtmlWindow.GetHashCode
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GetHashCode()
  nameWithType: HtmlWindow.GetHashCode()
  fullName: System.Windows.Forms.HtmlWindow.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.HtmlWindow.GotFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GotFocus
  nameWithType: HtmlWindow.GotFocus
  fullName: System.Windows.Forms.HtmlWindow.GotFocus
- uid: System.Windows.Forms.HtmlElementEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementEventHandler
  nameWithType: HtmlElementEventHandler
  fullName: System.Windows.Forms.HtmlElementEventHandler
- uid: System.Windows.Forms.HtmlWindow.History
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: History
  nameWithType: HtmlWindow.History
  fullName: System.Windows.Forms.HtmlWindow.History
- uid: System.Windows.Forms.HtmlHistory
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlHistory
  nameWithType: HtmlHistory
  fullName: System.Windows.Forms.HtmlHistory
- uid: System.Windows.Forms.HtmlWindow.IsClosed
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
  fullName: System.Windows.Forms.HtmlWindow.IsClosed
- uid: System.Windows.Forms.HtmlWindow.Load
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Load
  nameWithType: HtmlWindow.Load
  fullName: System.Windows.Forms.HtmlWindow.Load
- uid: System.Windows.Forms.HtmlWindow.LostFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: LostFocus
  nameWithType: HtmlWindow.LostFocus
  fullName: System.Windows.Forms.HtmlWindow.LostFocus
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo(Point)
  nameWithType: HtmlWindow.MoveTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo(Int32,Int32)
  nameWithType: HtmlWindow.MoveTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Name
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Name
  nameWithType: HtmlWindow.Name
  fullName: System.Windows.Forms.HtmlWindow.Name
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate(String)
  nameWithType: HtmlWindow.Navigate(String)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(String)
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate(Uri)
  nameWithType: HtmlWindow.Navigate(Uri)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Equality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
- uid: System.Windows.Forms.HtmlWindow
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlWindow
  nameWithType: HtmlWindow
  fullName: System.Windows.Forms.HtmlWindow
- uid: System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Inequality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
- uid: System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open(String,String,String,Boolean)
  nameWithType: HtmlWindow.Open(String,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(String,String,String,Boolean)
- uid: System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open(Uri,String,String,Boolean)
  nameWithType: HtmlWindow.Open(Uri,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(Uri,String,String,Boolean)
- uid: System.Windows.Forms.HtmlWindow.Opener
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Opener
  nameWithType: HtmlWindow.Opener
  fullName: System.Windows.Forms.HtmlWindow.Opener
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew(String,String)
  nameWithType: HtmlWindow.OpenNew(String,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(String,String)
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew(Uri,String)
  nameWithType: HtmlWindow.OpenNew(Uri,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(Uri,String)
- uid: System.Windows.Forms.HtmlWindow.Parent
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Parent
  nameWithType: HtmlWindow.Parent
  fullName: System.Windows.Forms.HtmlWindow.Parent
- uid: System.Windows.Forms.HtmlWindow.Position
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Position
  nameWithType: HtmlWindow.Position
  fullName: System.Windows.Forms.HtmlWindow.Position
- uid: System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Prompt(String,String)
  nameWithType: HtmlWindow.Prompt(String,String)
  fullName: System.Windows.Forms.HtmlWindow.Prompt(String,String)
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: RemoveFocus()
  nameWithType: HtmlWindow.RemoveFocus()
  fullName: System.Windows.Forms.HtmlWindow.RemoveFocus()
- uid: System.Windows.Forms.HtmlWindow.Resize
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Resize
  nameWithType: HtmlWindow.Resize
  fullName: System.Windows.Forms.HtmlWindow.Resize
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo(Size)
  nameWithType: HtmlWindow.ResizeTo(Size)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo(Int32,Int32)
  nameWithType: HtmlWindow.ResizeTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Scroll
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Scroll
  nameWithType: HtmlWindow.Scroll
  fullName: System.Windows.Forms.HtmlWindow.Scroll
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo(Point)
  nameWithType: HtmlWindow.ScrollTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Point)
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo(Int32,Int32)
  nameWithType: HtmlWindow.ScrollTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Size
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Size
  nameWithType: HtmlWindow.Size
  fullName: System.Windows.Forms.HtmlWindow.Size
- uid: System.Windows.Forms.HtmlWindow.StatusBarText
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
  fullName: System.Windows.Forms.HtmlWindow.StatusBarText
- uid: System.Windows.Forms.HtmlWindow.Unload
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Unload
  nameWithType: HtmlWindow.Unload
  fullName: System.Windows.Forms.HtmlWindow.Unload
- uid: System.Windows.Forms.HtmlWindow.Url
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Url
  nameWithType: HtmlWindow.Url
  fullName: System.Windows.Forms.HtmlWindow.Url
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
  fullName: System.Windows.Forms.HtmlWindow.WindowFrameElement
- uid: System.Windows.Forms.HtmlElement
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
- uid: System.Windows.Forms.HtmlWindow.Alert*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Alert
  nameWithType: HtmlWindow.Alert
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: AttachEventHandler
  nameWithType: HtmlWindow.AttachEventHandler
- uid: System.Windows.Forms.HtmlWindow.Close*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Close
  nameWithType: HtmlWindow.Close
- uid: System.Windows.Forms.HtmlWindow.Confirm*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Confirm
  nameWithType: HtmlWindow.Confirm
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DetachEventHandler
  nameWithType: HtmlWindow.DetachEventHandler
- uid: System.Windows.Forms.HtmlWindow.Document*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Document
  nameWithType: HtmlWindow.Document
- uid: System.Windows.Forms.HtmlWindow.DomWindow*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
- uid: System.Windows.Forms.HtmlWindow.Equals*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Equals
  nameWithType: HtmlWindow.Equals
- uid: System.Windows.Forms.HtmlWindow.Focus*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Focus
  nameWithType: HtmlWindow.Focus
- uid: System.Windows.Forms.HtmlWindow.Frames*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Frames
  nameWithType: HtmlWindow.Frames
- uid: System.Windows.Forms.HtmlWindow.GetHashCode*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GetHashCode
  nameWithType: HtmlWindow.GetHashCode
- uid: System.Windows.Forms.HtmlWindow.History*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: History
  nameWithType: HtmlWindow.History
- uid: System.Windows.Forms.HtmlWindow.IsClosed*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
- uid: System.Windows.Forms.HtmlWindow.MoveTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo
  nameWithType: HtmlWindow.MoveTo
- uid: System.Windows.Forms.HtmlWindow.Name*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Name
  nameWithType: HtmlWindow.Name
- uid: System.Windows.Forms.HtmlWindow.Navigate*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate
  nameWithType: HtmlWindow.Navigate
- uid: System.Windows.Forms.HtmlWindow.op_Equality*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Equality
  nameWithType: HtmlWindow.op_Equality
- uid: System.Windows.Forms.HtmlWindow.op_Inequality*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Inequality
  nameWithType: HtmlWindow.op_Inequality
- uid: System.Windows.Forms.HtmlWindow.Open*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open
  nameWithType: HtmlWindow.Open
- uid: System.Windows.Forms.HtmlWindow.Opener*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Opener
  nameWithType: HtmlWindow.Opener
- uid: System.Windows.Forms.HtmlWindow.OpenNew*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew
  nameWithType: HtmlWindow.OpenNew
- uid: System.Windows.Forms.HtmlWindow.Parent*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Parent
  nameWithType: HtmlWindow.Parent
- uid: System.Windows.Forms.HtmlWindow.Position*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Position
  nameWithType: HtmlWindow.Position
- uid: System.Windows.Forms.HtmlWindow.Prompt*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Prompt
  nameWithType: HtmlWindow.Prompt
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: RemoveFocus
  nameWithType: HtmlWindow.RemoveFocus
- uid: System.Windows.Forms.HtmlWindow.ResizeTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo
  nameWithType: HtmlWindow.ResizeTo
- uid: System.Windows.Forms.HtmlWindow.ScrollTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo
  nameWithType: HtmlWindow.ScrollTo
- uid: System.Windows.Forms.HtmlWindow.Size*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Size
  nameWithType: HtmlWindow.Size
- uid: System.Windows.Forms.HtmlWindow.StatusBarText*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
- uid: System.Windows.Forms.HtmlWindow.Url*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Url
  nameWithType: HtmlWindow.Url
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
