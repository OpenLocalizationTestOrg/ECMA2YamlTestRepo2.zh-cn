### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement
  id: MsmqTransportBindingElement
  children:
  - System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor
  - System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MsmqTransportBindingElement.Clone
  - System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize
  - System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol
  - System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme
  - System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory
  langs:
  - csharp
  name: MsmqTransportBindingElement
  nameWithType: MsmqTransportBindingElement
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement
  type: Class
  summary: "表示用于指定队列通信属性的绑定元素[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]使用本机消息队列 (MSMQ) 协议的服务。"
  remarks: "MsmqTransportBindingElement 使用户能够设置排队的信道的属性。 排队的信道使用消息队列进行传输。       此绑定元素是由消息队列标准绑定的默认绑定元素 (<xref:System.ServiceModel.NetMsmqBinding>)。</xref:System.ServiceModel.NetMsmqBinding>"
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#0](~/add/codesnippet/csharp/t-system.servicemodel.ch_7_1.cs)]'
  syntax:
    content: 'public sealed class MsmqTransportBindingElement : System.ServiceModel.Channels.MsmqBindingElementBase'
  inheritance:
  - System.ServiceModel.Channels.TransportBindingElement
  - System.ServiceModel.Channels.MsmqBindingElementBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue
  - System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue
  - System.ServiceModel.Channels.MsmqBindingElementBase.Durable
  - System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce
  - System.ServiceModel.Channels.MsmqBindingElementBase.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles
  - System.ServiceModel.Channels.MsmqBindingElementBase.MsmqTransportSecurity
  - System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveContextEnabled
  - System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling
  - System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveRetryCount
  - System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay
  - System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  - System.ServiceModel.Channels.MsmqBindingElementBase.TimeToLive
  - System.ServiceModel.Channels.MsmqBindingElementBase.TransactedReceiveEnabled
  - System.ServiceModel.Channels.MsmqBindingElementBase.UseMsmqTracing
  - System.ServiceModel.Channels.MsmqBindingElementBase.UseSourceJournal
  - System.ServiceModel.Channels.MsmqBindingElementBase.ValidityDuration
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: MsmqTransportBindingElement()
  nameWithType: MsmqTransportBindingElement.MsmqTransportBindingElement()
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.MsmqTransportBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Channels.MsmqTransportBindingElement&quot;></xref>类。"
  remarks: ''
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#1](~/add/codesnippet/csharp/m-system.servicemodel.ch_5_1.cs)]'
  syntax:
    content: public MsmqTransportBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: MsmqTransportBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "要添加。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: MsmqTransportBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "要添加。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: MsmqTransportBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: MsmqTransportBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: MsmqTransportBindingElement.Clone()
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "返回绑定元素的复本。"
  remarks: ''
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#6](~/add/codesnippet/csharp/m-system.servicemodel.ch_2_1.cs)]'
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "绑定元素的复本。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize
  id: MaxPoolSize
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: MaxPoolSize
  nameWithType: MsmqTransportBindingElement.MaxPoolSize
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个整数，指定包含内部消息队列 (MSMQ) 消息对象的池的最大大小。"
  remarks: "内部消息队列消息对象池用于避免分配这些对象发送和接收消息时。 最大池大小是性能优化参数。 默认值为 8。"
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#2](~/add/codesnippet/csharp/p-system.servicemodel.ch_6_1.cs)]'
  syntax:
    content: public int MaxPoolSize { get; set; }
    return:
      type: System.Int32
      description: "一个整数，指定包含内部消息队列消息对象的池的最大大小。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值小于零。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol
  id: QueueTransferProtocol
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: QueueTransferProtocol
  nameWithType: MsmqTransportBindingElement.QueueTransferProtocol
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个枚举值，该值指示此绑定使用的排队的通信通道传输。"
  remarks: "消息队列 (MSMQ) 不支持 Active Directory 寻址时使用 SOAP 可靠消息传递协议 (SRMP)，因此未设置为而 QueueTransferProtocol<xref:System.ServiceModel.QueueTransferProtocol>或<xref:System.ServiceModel.QueueTransferProtocol>时<xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A>设置为`true`。</xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A> </xref:System.ServiceModel.QueueTransferProtocol> </xref:System.ServiceModel.QueueTransferProtocol>"
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#3](~/add/codesnippet/csharp/24687cdc-4ddc-44b2-926c-_1.cs)]'
  syntax:
    content: public System.ServiceModel.QueueTransferProtocol QueueTransferProtocol { get; set; }
    return:
      type: System.ServiceModel.QueueTransferProtocol
      description: "A <xref href=&quot;System.ServiceModel.QueueTransferProtocol&quot;> </xref>枚举值，该值指示用于队列管理器之间的消息传递的传输。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值不是之一<xref href=&quot;System.ServiceModel.QueueTransferProtocol&quot;></xref>值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: Scheme
  nameWithType: MsmqTransportBindingElement.Scheme
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "返回<xref:System.String>包含此传输绑定元素所用的寻址方案。</xref:System.String>"
  remarks: "方案属性将返回字符串&quot;net.msmq&quot;。       消息队列 (MSMQ) 排队传输支持多种寻址方案，包括 net.msmq。"
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#4](~/add/codesnippet/csharp/p-system.servicemodel.ch_4_1.cs)]'
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含此传输绑定元素所用的寻址方案。</xref:System.String>"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory
  id: UseActiveDirectory
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  langs:
  - csharp
  name: UseActiveDirectory
  nameWithType: MsmqTransportBindingElement.UseActiveDirectory
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "返回一个布尔值，该值指示是否应该使用 Active Directory 转换队列地址。"
  remarks: "消息队列 (MSMQ) 队列地址可由路径名或直接格式名组成。 对于直接格式名，MSMQ 会解析队列名称使用 DNS、 NetBIOS 或 IP。 对于路径名，MSMQ 会使用 Active Directory 的队列名称解析。       默认情况下，[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]排队的传输会将消息队列的 URI 转换为直接格式名。 通过将 UseActiveDirectory 属性设置为`true`，应用程序可以指定排队的传输应使用 Active Directory 而不是 DNS、 NetBIOS 或 IP 计算机名称解析。"
  example:
  - '[!code-cs[S_UE_ImperativeNetMsmq#5](~/add/codesnippet/csharp/p-system.servicemodel.ch_3_1.cs)]'
  syntax:
    content: public bool UseActiveDirectory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应该使用 Active Directory; 来转换队列地址否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.MsmqBindingElementBase
  isExternal: false
  name: System.ServiceModel.Channels.MsmqBindingElementBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: MsmqTransportBindingElement()
  nameWithType: MsmqTransportBindingElement.MsmqTransportBindingElement()
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.MsmqTransportBindingElement()
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: MsmqTransportBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: MsmqTransportBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: MsmqTransportBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: MsmqTransportBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: Clone()
  nameWithType: MsmqTransportBindingElement.Clone()
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: MaxPoolSize
  nameWithType: MsmqTransportBindingElement.MaxPoolSize
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: QueueTransferProtocol
  nameWithType: MsmqTransportBindingElement.QueueTransferProtocol
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol
- uid: System.ServiceModel.QueueTransferProtocol
  parent: System.ServiceModel
  isExternal: false
  name: QueueTransferProtocol
  nameWithType: QueueTransferProtocol
  fullName: System.ServiceModel.QueueTransferProtocol
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: MsmqTransportBindingElement.Scheme
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: UseActiveDirectory
  nameWithType: MsmqTransportBindingElement.UseActiveDirectory
  fullName: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: MsmqTransportBindingElement
  nameWithType: MsmqTransportBindingElement.MsmqTransportBindingElement
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: MsmqTransportBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: MsmqTransportBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: MsmqTransportBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: MsmqTransportBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Clone*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: Clone
  nameWithType: MsmqTransportBindingElement.Clone
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: MaxPoolSize
  nameWithType: MsmqTransportBindingElement.MaxPoolSize
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: QueueTransferProtocol
  nameWithType: MsmqTransportBindingElement.QueueTransferProtocol
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: MsmqTransportBindingElement.Scheme
- uid: System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory*
  parent: System.ServiceModel.Channels.MsmqTransportBindingElement
  isExternal: false
  name: UseActiveDirectory
  nameWithType: MsmqTransportBindingElement.UseActiveDirectory
