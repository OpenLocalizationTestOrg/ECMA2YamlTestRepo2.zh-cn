### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "显示按钮控件在网页上。"
  remarks: "本主题中:-[简介](#Introduction)      -   [按钮回发行为和服务器事件](#ButtonPostbackBehaviorandServerEvents)      -   [处理客户端脚本中的按钮事件](#HandlingButtonEventsinClientScript)      -   [按钮控件和验证](#ButtonControlsAndValidation)      -   [数据控件中的按钮](#ButtonsInDataControls)      -   [数据绑定到控件](#BindingDataToTheControls)      -   [带 UpdatePanel 控件使用按钮](#UsingButtonsWithUpdatePanelControls)      -   [声明性语法](#DeclarativeSyntax)<a name=&quot;Introduction&quot;> </a> # # 介绍使用按钮控件使用户能够发布到服务器的页面的 Web 页面上创建推送按钮。       控件触发可以处理以响应回发的服务器代码中的事件。 它还可能会引发发页面或，可以运行，并随后取消页面提交的之前可以处理的客户端脚本中的事件。      1> [!NOTE]&1;> ASP.NET 包括多种类型的按钮控件，其中每个在网页以不同方式显示。 它们是将呈现为一个下压按钮; 的按钮控件<xref:System.Web.UI.WebControls.LinkButton>控件，将呈现为链接; 与<xref:System.Web.UI.WebControls.ImageButton>控件，将呈现为图像; 与<xref:System.Web.UI.WebControls.ImageMap>控件，可以创建具有用户可单击的热点的图形，该控件。</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> 默认情况下，所有按钮控件都提交页面在单击时。 你还可以使用<xref:System.Web.UI.HtmlControls.HtmlButton>和<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件以创建页上的按钮是可编程的服务器代码中。</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> 有关 HTML 和 Web 服务器控件之间的差异的详细信息，请参阅[ASP.NET Web 服务器控件概述](~/add/includes/ajax-current-ext-md.md)。       默认情况下，一个按钮控件是一个提交按钮。 提交按钮没有命令名称 (通过指定<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性) 与关联的按钮以及只需网页回发到服务器的文章。</xref:System.Web.UI.WebControls.Button.CommandName%2A> 你可以提供的事件处理程序<xref:System.Web.UI.WebControls.Button.Click>事件以编程方式控制的操作执行时单击提交按钮。</xref:System.Web.UI.WebControls.Button.Click>       命令按钮有与该按钮，如关联的命令名称`Sort`，通过设置<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性。</xref:System.Web.UI.WebControls.Button.CommandName%2A> 这允许你创建在网页上的控件的多个按钮，并以编程方式确定单击的按钮控件。 你还可以使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>与命令按钮来提供有关要执行，如的命令的其他信息的属性`Ascending`。</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 你可以提供的事件处理程序<xref:System.Web.UI.WebControls.Button.Command>时该命令按钮单击事件以编程方式控制的操作执行。</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a># # 按钮回发行为和服务器事件当用户单击任何 Web 服务器控件按钮时，页发送到服务器。 这使得 Web 页后，可以处理，在基于服务器的代码中引发任何挂起的事件。 当完成所有页面和控件处理时，页面将呈现自身到浏览器试。       该按钮可以引发其自己<xref:System.Web.UI.WebControls.Button.Click>事件或<xref:System.Web.UI.WebControls.Button.Command>事件，你可以通过使用基于服务器的代码处理。</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> 此函数不同于事件在基于客户端的 Web 应用程序中，或传统的 HTML 页中其中一个按钮`onclick`通过在客户端中运行的 JavaScript 事件进行处理。 有关详细信息，请参阅[ASP.NET Web 窗体服务器控件事件模型](~/add/includes/ajax-current-ext-md.md)。       当用户单击按钮控件时，页回发到服务器。 默认情况下，页发送回其自身，您可以配置要发布到另一页的当前页的按钮。 这可用于创建多页窗体。 有关详细信息，请参阅[跨页发布 ASP.NET Web 窗体中](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a># # 客户端脚本按钮控件中处理按钮事件可能会发出服务器事件和客户端事件。 服务器事件发生回发后，并且它们不为页面编写服务器端代码中处理。 客户端事件会在客户端脚本，通常 ECMAScript (JavaScript) 中处理，并引发了然后提交页面。 通过将客户端事件添加到 ASP.NET 按钮控件，你可以执行任务，例如在提交页上之前, 显示确认对话框，并可能会取消提交。 有关详细信息，请参阅[客户端脚本中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)和[如何︰ 响应客户端脚本中的按钮 Web 服务器控件事件](~/add/includes/ajax-current-ext-md.md)。       你可能要按钮控件还使用客户端脚本来执行回发 （而不是只需执行 HTTP POST 操作）。 这很有用，如果你想要以编程方式操作回发，如将其附加到页面上的其他元素。 你可以先设置按钮控件<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性`true`会使按钮控件用于客户端-脚本基于回发。</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a># # 按钮控件和验证如果页同时包含 ASP.NET 验证控件的默认值，单击一个按钮控件将使验证程序控件执行其检查。 如果客户端验证已启用的验证程序控件，则不会提交页面，验证检查失败时。       下表介绍了由使您能够更精确地控制验证过程的按钮控件支持的属性。      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|指定是否单击按钮还会执行验证检查。</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 将此属性设置为`false`以防止验证检查。 |  |<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|使您能够指定时单击该按钮时，将调用的页上的验证程序。</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 如果不建立了任何验证组，单击按钮会调用所有该页上的验证。 |      有关详细信息，请参阅[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;ButtonsInDataControls&quot;></a># # 数据控件按钮 Web 服务器控件中的按钮通常用于在数据控件中，如中<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.GridView>，和<xref:System.Web.UI.WebControls.Repeater>列表控件。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> 在这些情况下，您通常不响应直接到按钮单击事件。 相反，数据控件中的按钮引发事件特定于数据控件。 例如，在<xref:System.Web.UI.WebControls.DataList>控件，一个按钮可能引发<xref:System.Web.UI.WebControls.DataList>控件的<xref:System.Web.UI.WebControls.DataList.ItemCommand>而不是引发按钮控件的事件<xref:System.Web.UI.WebControls.Button.Click>事件。</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       因为数据绑定列表控件可以包含多个按钮，你可以设置按钮的<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性来指定要为该事件的一部分传递的值。</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 你随后可以测试该参数以确定被单击的按钮。      <a name=&quot;BindingDataToTheControls&quot;></a># # 将数据绑定到控件你可以按钮 Web 服务器将控件绑定到数据源以便控制它们的属性设置动态。 例如，你可以设置按钮的<xref:System.Web.UI.WebControls.Button.Text%2A>通过使用数据绑定的属性。</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a># # 使用带有 UpdatePanel 控件局部页面呈现按钮使可以刷新不进行回发页面的部分。 <xref:System.Web.UI.UpdatePanel>控件使你将标记为参与局部页面呈现的页的部分。</xref:System.Web.UI.UpdatePanel> 默认情况下，在控件的行为<xref:System.Web.UI.UpdatePanel>控件，包括按钮控件将执行异步回发而不是回发。</xref:System.Web.UI.UpdatePanel> 这将刷新的内容<xref:System.Web.UI.UpdatePanel>控件从其回发的来源。</xref:System.Web.UI.UpdatePanel>       除了以下场景︰ 按钮控件位于<xref:System.Web.UI.UpdatePanel>控件，你可以使用的按钮控件<xref:System.Web.UI.UpdatePanel>以下方案中的控件:-定义之外的按钮控件<xref:System.Web.UI.UpdatePanel>控件用作<xref:System.Web.UI.AsyncPostBackTrigger>该面板的控件。</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 单击按钮时，它执行异步回发，并刷新面板的内容。      定义按钮控件位于<xref:System.Web.UI.UpdatePanel>控件用作<xref:System.Web.UI.PostBackTrigger>面板。</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> 当单击按钮时，它可以执行回发，即使它位于<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>       有关更多信息局部页面呈现和使用<xref:System.Web.UI.UpdatePanel>控件，请参阅[UpdatePanel 控件概述](~/add/includes/ajax-current-ext-md.md)和[局部页面呈现概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a># # 声明性语法```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>类。"
  remarks: "使用此构造函数来创建和初始化<xref:System.Web.UI.WebControls.Button>类</xref:System.Web.UI.WebControls.Button>的新实例"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "添加的特性<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件添加到客户端上呈现的输出流。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>包含要在客户端上呈现的输出流。"
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否执行验证时<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件被单击。"
  remarks: "默认情况下，执行页验证时<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> 页验证确定输入的控件是否与全部通过指定由验证控件的验证规则页上的验证控件。       你可以指定或确定是否在客户端和服务器上执行验证时<xref:System.Web.UI.WebControls.Button>控件被单击使用这属性。</xref:System.Web.UI.WebControls.Button> 若要阻止正在执行验证，请将这属性设置为`false`。      1> [!NOTE]&1;> 你应将这属性设置为`false`使用时<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性回发到不同的页。</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 在显式时应该检查验证回发到不同的页。 有关示例，请参阅备注部分的<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性。</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       此属性通常设置为`false`为`reset`或`clear`按钮，以防止在单击该按钮时执行验证。       如果这属性的值设置为`true`，你还可以使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.WebControls.Button>控件将导致验证。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果执行验证时<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件是单击; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件被单击。"
  remarks: "将引发单击事件时<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> 此事件通常用时与不关联任何命令名称<xref:System.Web.UI.WebControls.Button>控件 （例如，带有提交按钮）。</xref:System.Web.UI.WebControls.Button>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件被单击。"
  remarks: "命令事件引发时<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> 此事件通常用时的命令名称，如`Sort`，与关联<xref:System.Web.UI.WebControls.Button>控件。</xref:System.Web.UI.WebControls.Button> 此选项，可以创建多个<xref:System.Web.UI.WebControls.Button>在网站上的控件，并以编程方式确定哪些<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      1> [!NOTE]&1;> 通过控件层次结构中的窗体中引发的命令事件`BubbleEvent`。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置传递到的可选参数<xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;></xref>以及关联<xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>事件"
  remarks: "使用 CommandArgument 属性指定一个参数，补充<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性。</xref:System.Web.UI.WebControls.Button.CommandName%2A>      1> [!NOTE]&1;> 尽管通过本身，你可以将 CommandArgument 属性进行设置，但它是使用的时，通常情况下才<xref:System.Web.UI.WebControls.Button.CommandName%2A>也设置属性。</xref:System.Web.UI.WebControls.Button.CommandName%2A>       CommandArgument 属性补充<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性，它允许你提供有关要执行的命令的其他信息。</xref:System.Web.UI.WebControls.Button.CommandName%2A> 例如，如果你设置<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性`Sort`而 CommandArgument 属性设为`Ascending`，指定按升序排序的命令。</xref:System.Web.UI.WebControls.Button.CommandName%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "一个可选参数传递给<xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;></xref>以及关联<xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>事件 默认值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置与关联的命令名称<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件传递给<xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;></xref>事件。"
  remarks: "如果你具有多个<xref:System.Web.UI.WebControls.Button>控件在网页上，使用 CommandName 属性来指定或确定与每个关联的命令名称<xref:System.Web.UI.WebControls.Button>控件。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> 你可以设置与任何字符串，标识要执行的命令按钮控件。 然后，可以以编程方式确定的命令名称<xref:System.Web.UI.WebControls.Button>控件并执行相应的操作。</xref:System.Web.UI.WebControls.Button>       有关该命令的其他信息如`Ascending`，可通过使用指定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性。</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "命令名称<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件。 默认值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref>对象，表示<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件的回发行为。"
  remarks: "GetPostBackOptions 方法创建<xref:System.Web.UI.PostBackOptions>对象，表示<xref:System.Web.UI.WebControls.Button>控件的回发行为。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> <xref:System.Web.UI.PostBackOptions>对象通常然后传递给<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>方法，用于获取对客户端脚本函数的引用，调用时，会导致页回发到服务器。</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       在扩展<xref:System.Web.UI.WebControls.Button>类</xref:System.Web.UI.WebControls.Button>时，使用此方法主要由控件开发人员"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>表示<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件的回发行为。"
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.Button.Click>引发事件时<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> 此事件通常用时与不关联任何命令名称<xref:System.Web.UI.WebControls.Button>控件 （例如，带有提交按钮）。</xref:System.Web.UI.WebControls.Button>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnClick 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置时，会执行的客户端脚本<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件的<xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;></xref>引发事件。"
  remarks: "使用 OnClientClick 属性指定时，会执行的其他客户端脚本<xref:System.Web.UI.WebControls.Button>控件的<xref:System.Web.UI.WebControls.Button.Click>引发事件。</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> 为此属性呈现在指定的脚本<xref:System.Web.UI.WebControls.Button>控件的`OnClick`属性除了控件的预定义的客户端脚本。</xref:System.Web.UI.WebControls.Button>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "时，会执行的客户端脚本<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件的<xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;></xref>引发事件。"
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.Button.Command>引发事件时<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> 此事件通常用时的命令名称，如`Sort`，与关联<xref:System.Web.UI.WebControls.Button>控件。</xref:System.Web.UI.WebControls.Button> 此选项，可以创建多个<xref:System.Web.UI.WebControls.Button>在网站上的控件，并以编程方式确定哪些<xref:System.Web.UI.WebControls.Button>控件被单击。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.Button.Command>通过控件层次结构中的窗体中引发事件`BubbleEvent`。</xref:System.Web.UI.WebControls.Button.Command>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否在客户端上呈现之前单击该按钮。"
  remarks: "派生自定义类时，主要由控件开发人员使用 OnPreRender 方法<xref:System.Web.UI.WebControls.Button>控件。</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "事件数据。"
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置发送时从当前页的页 URL <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref>控件被单击。"
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "要从当前页时发送网页的 URL <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref>控件被单击。 默认值为空字符串 (&quot;&quot;)，这将导致页后，可以回发到自身。"
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发事件<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控制当回发到服务器。"
  remarks: "内部使用此事件<xref:System.Web.UI.WebControls.Button>控件，它被单击时，引发<xref:System.Web.UI.WebControls.Button.Click>事件，并定义，如果<xref:System.Web.UI.WebControls.Button.Command>事件。</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件自变量。"
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将控件内容呈现给指定的编写器。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>对象，表示要在客户端呈现 HTML 内容的输出流。"
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发事件<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控制当回发到服务器。"
  remarks: "内部使用此事件<xref:System.Web.UI.WebControls.Button>控件，它被单击时，引发<xref:System.Web.UI.WebControls.Button.Click>事件，并定义，如果<xref:System.Web.UI.WebControls.Button.Command>事件。</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件自变量。"
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中显示的文本标题<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件。"
  remarks: "使用文本属性来指定或确定要在中显示的标题<xref:System.Web.UI.WebControls.Button>控件。</xref:System.Web.UI.WebControls.Button>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "中显示的文本标题<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件。 默认值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件使用客户端浏览器的提交机制还是 ASP.NET 回发机制。"
  remarks: "UseSubmitBehavior 属性用于指定是否<xref:System.Web.UI.WebControls.Button>控件使用客户端浏览器的提交机制还是 ASP.NET 回发机制。</xref:System.Web.UI.WebControls.Button> 默认情况下此属性的值是`true`，从而导致<xref:System.Web.UI.WebControls.Button>控件以使用浏览器的提交机制。</xref:System.Web.UI.WebControls.Button> 如果指定`false`，ASP.NET 页框架会将客户端脚本添加到页后，可以窗体发布到服务器。       当 UseSubmitBehavior 属性是`false`，控件开发人员可以使用的<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法来返回客户端回发事件<xref:System.Web.UI.WebControls.Button>。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 返回的字符串<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法包含客户端函数调用的文本和可以插入到客户端事件处理程序。</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该控件使用客户端浏览器的，提交机制;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置控件组的其中<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件回发到服务器时要进行验证。"
  remarks: "验证组允许您将在页面上的验证控件分配给特定类别。 每个验证组都可以独立于其他页上的验证组进行验证。 使用 ValidationGroup 属性来为其指定的验证组名称<xref:System.Web.UI.WebControls.Button>控件回发到服务器时要进行验证。</xref:System.Web.UI.WebControls.Button>       此属性才起作用时，才的值<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 当指定 ValidationGroup 属性的值，只有的验证控件才是指定组的一部分时验证<xref:System.Web.UI.WebControls.Button>控件回发到服务器。</xref:System.Web.UI.WebControls.Button> 如果未指定此属性的值与<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`true`，该控件发回发到服务器时，该页上未分配给验证组的所有验证控件进行都验证。</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "为其控件组的<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>控件回发到服务器时要进行验证。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
