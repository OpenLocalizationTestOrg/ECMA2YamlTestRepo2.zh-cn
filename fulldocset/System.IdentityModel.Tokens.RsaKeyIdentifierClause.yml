### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  id: RsaKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)
  - System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)
  langs:
  - csharp
  name: RsaKeyIdentifierClause
  nameWithType: RsaKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  type: Class
  summary: "表示密钥标识符子句，它标识<xref href=&quot;System.IdentityModel.Tokens.RsaSecurityToken&quot;></xref>安全令牌。"
  remarks: "通常情况下，RsaKeyIdentifierClause 不需要时要使用，而不创建自定义安全令牌服务。 当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。 附加的引用指包含在 SOAP 消息的安全标头的安全令牌而未附加的引用是未包含在 SOAP 消息中的安全标头的安全令牌。 这些引用通常确认已颁发的安全令牌的真实性。 使用 RsaKeyIdentifierClause 类来引用<xref:System.IdentityModel.Tokens.RsaSecurityToken>安全令牌和访问 RSA 算法。</xref:System.IdentityModel.Tokens.RsaSecurityToken> 若要访问 RSA 算法，请获取的值<xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa%2A>属性。</xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa%2A>"
  syntax:
    content: 'public class RsaKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)
  id: '#ctor(System.Security.Cryptography.RSA)'
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: RsaKeyIdentifierClause(RSA)
  nameWithType: RsaKeyIdentifierClause.RsaKeyIdentifierClause(RSA)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.RsaKeyIdentifierClause(RSA)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.RsaKeyIdentifierClause&quot;></xref>类使用指定的 RSA 算法。"
  syntax:
    content: public RsaKeyIdentifierClause (System.Security.Cryptography.RSA rsa);
    parameters:
    - id: rsa
      type: System.Security.Cryptography.RSA
      description: "<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>表示 RSA 算法。 设置的值<xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa*>属性。</xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa*>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rsa</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: RsaKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示是否可以从密钥标识符子句创建密钥。"
  remarks: "若要创建密钥，调用<xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey%2A>方法。</xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey%2A>"
  syntax:
    content: public override bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: RsaKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建使用 RSA 算法的密钥。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.RsaSecurityKey&quot;> </xref> ，它是使用构造函数中指定的 RSA 算法创建密钥。"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent
  id: GetExponent
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: GetExponent()
  nameWithType: RsaKeyIdentifierClause.GetExponent()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取<xref uid=&quot;langword_csharp_Exponent&quot; name=&quot;Exponent&quot; href=&quot;&quot;> </xref> RSA 算法的参数。"
  syntax:
    content: public byte[] GetExponent ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>包含<xref uid=&quot;langword_csharp_Exponent&quot; name=&quot;Exponent&quot; href=&quot;&quot;> </xref> RSA 算法的参数。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus
  id: GetModulus
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: GetModulus()
  nameWithType: RsaKeyIdentifierClause.GetModulus()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取<xref uid=&quot;langword_csharp_Modulus&quot; name=&quot;Modulus&quot; href=&quot;&quot;> </xref> RSA 算法的参数。"
  syntax:
    content: public byte[] GetModulus ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>包含<xref uid=&quot;langword_csharp_Modulus&quot; name=&quot;Modulus&quot; href=&quot;&quot;> </xref> RSA 算法的参数。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: RsaKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。"
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>要进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> keyIdentifierClause </code>属于类型<xref href=&quot;System.IdentityModel.Tokens.RsaKeyIdentifierClause&quot;></xref>和返回的数组<> *1> 和<> *1> 方法<code> keyIdentifierClause </code>参数是与当前实例相同; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)
  id: Matches(System.Security.Cryptography.RSA)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: Matches(RSA)
  nameWithType: RsaKeyIdentifierClause.Matches(RSA)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(RSA)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否与指定的 RSA 算法相匹配。"
  syntax:
    content: public bool Matches (System.Security.Cryptography.RSA rsa);
    parameters:
    - id: rsa
      type: System.Security.Cryptography.RSA
      description: "<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>表示 RSA 算法。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Security.Cryptography.RSAParameters.Exponent&quot;></xref>和<xref href=&quot;System.Security.Cryptography.RSAParameters.Modulus&quot;></xref>字段<code> rsa </code>参数返回的值相匹配<> *1> 和<> *1> 方法对于当前实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa
  id: Rsa
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: Rsa
  nameWithType: RsaKeyIdentifierClause.Rsa
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与密钥标识符子句关联的 RSA 算法。"
  syntax:
    content: public System.Security.Cryptography.RSA Rsa { get; }
    return:
      type: System.Security.Cryptography.RSA
      description: "<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>表示 RSA 算法。"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: RsaKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回表示当前对象的字符串。"
  remarks: "ToString 方法将返回一个字符串，包含`Modulus`和`Exponent`的 RSA 算法的值。 `Modulus`和`Exponent`的值为返回的值<xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus%2A>和<xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent%2A>采用了 Base64 编码的方法。</xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent%2A> </xref:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，表示当前对象。</xref:System.String>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)
  id: WriteExponentAsBase64(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: WriteExponentAsBase64(XmlWriter)
  nameWithType: RsaKeyIdentifierClause.WriteExponentAsBase64(XmlWriter)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(XmlWriter)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入的 Base64 编码<xref uid=&quot;langword_csharp_Exponent&quot; name=&quot;Exponent&quot; href=&quot;&quot;></xref>写入指定的 XML 序列化程序的 RSA 算法的参数。"
  syntax:
    content: public void WriteExponentAsBase64 (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A<xref:System.Xml.XmlWriter>要写入的 Base64 编码<xref uid=&quot;langword_csharp_Exponent&quot; name=&quot;Exponent&quot; href=&quot;&quot;></xref>的 RSA 算法的参数。</xref:System.Xml.XmlWriter>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)
  id: WriteModulusAsBase64(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  langs:
  - csharp
  name: WriteModulusAsBase64(XmlWriter)
  nameWithType: RsaKeyIdentifierClause.WriteModulusAsBase64(XmlWriter)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(XmlWriter)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "写入的 Base64 编码<xref uid=&quot;langword_csharp_Modulus&quot; name=&quot;Modulus&quot; href=&quot;&quot;></xref>写入指定的 XML 序列化程序的 RSA 算法的参数。"
  syntax:
    content: public void WriteModulusAsBase64 (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A<xref:System.Xml.XmlWriter>要写入的 Base64 编码<xref uid=&quot;langword_csharp_Modulus&quot; name=&quot;Modulus&quot; href=&quot;&quot;></xref>的 RSA 算法的参数。</xref:System.Xml.XmlWriter>"
  overload: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: RsaKeyIdentifierClause(RSA)
  nameWithType: RsaKeyIdentifierClause.RsaKeyIdentifierClause(RSA)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.RsaKeyIdentifierClause(RSA)
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: RsaKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: RsaKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: GetExponent()
  nameWithType: RsaKeyIdentifierClause.GetExponent()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: GetModulus()
  nameWithType: RsaKeyIdentifierClause.GetModulus()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus()
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: RsaKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: Matches(RSA)
  nameWithType: RsaKeyIdentifierClause.Matches(RSA)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(RSA)
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: Rsa
  nameWithType: RsaKeyIdentifierClause.Rsa
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: RsaKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: WriteExponentAsBase64(XmlWriter)
  nameWithType: RsaKeyIdentifierClause.WriteExponentAsBase64(XmlWriter)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: WriteModulusAsBase64(XmlWriter)
  nameWithType: RsaKeyIdentifierClause.WriteModulusAsBase64(XmlWriter)
  fullName: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(XmlWriter)
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: RsaKeyIdentifierClause
  nameWithType: RsaKeyIdentifierClause.RsaKeyIdentifierClause
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: RsaKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: RsaKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: GetExponent
  nameWithType: RsaKeyIdentifierClause.GetExponent
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: GetModulus
  nameWithType: RsaKeyIdentifierClause.GetModulus
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: RsaKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: Rsa
  nameWithType: RsaKeyIdentifierClause.Rsa
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: RsaKeyIdentifierClause.ToString
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: WriteExponentAsBase64
  nameWithType: RsaKeyIdentifierClause.WriteExponentAsBase64
- uid: System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64*
  parent: System.IdentityModel.Tokens.RsaKeyIdentifierClause
  isExternal: false
  name: WriteModulusAsBase64
  nameWithType: RsaKeyIdentifierClause.WriteModulusAsBase64
