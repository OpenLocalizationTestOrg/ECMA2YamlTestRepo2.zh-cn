### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList
  id: XmlSchemaSimpleTypeList
  children:
  - System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor
  - System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType
  - System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType
  - System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName
  langs:
  - csharp
  name: XmlSchemaSimpleTypeList
  nameWithType: XmlSchemaSimpleTypeList
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList
  type: Class
  summary: "表示<xref uid=&quot;langword_csharp_list&quot; name=&quot;list&quot; href=&quot;&quot;></xref>从 XML 架构由万维网联合会 (W3C) 指定的元素。 此类可以用于定义<xref uid=&quot;langword_csharp_simpleType&quot; name=&quot;simpleType&quot; href=&quot;&quot;></xref>为指定的数据类型的值列表的元素。"
  remarks: "当从列表数据类型派生数据类型时，可以使用以下约束方面︰ `length`， `maxLength`， `minLength`， `enumeration`， `pattern`，和`whiteSpace`。       每个`length`， `maxLength`，和`minLength`，长度的单元的测量单位为列表项的数目。 值`whiteSpace`固定为`collapse`值。"
  example:
  - See <xref:System.Xml.Schema.XmlSchemaSimpleType> for an example using this class.
  syntax:
    content: 'public class XmlSchemaSimpleTypeList : System.Xml.Schema.XmlSchemaSimpleTypeContent'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaSimpleTypeContent
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  langs:
  - csharp
  name: XmlSchemaSimpleTypeList()
  nameWithType: XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList()
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新实例<xref href=&quot;System.Xml.Schema.XmlSchemaSimpleTypeList&quot;></xref>类。"
  syntax:
    content: public XmlSchemaSimpleTypeList ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType
  id: BaseItemType
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  langs:
  - csharp
  name: BaseItemType
  nameWithType: XmlSchemaSimpleTypeList.BaseItemType
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置<xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;></xref>表示的一种<xref uid=&quot;langword_csharp_simpleType&quot; name=&quot;simpleType&quot; href=&quot;&quot;></xref>元素基于<> *1> 和<> *1> 简单类型的值。"
  remarks: "此属性是后架构编译信息集属性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSimpleType BaseItemType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;> </xref>表示的一种<xref uid=&quot;langword_csharp_simpleType&quot; name=&quot;simpleType&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType
  id: ItemType
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  langs:
  - csharp
  name: ItemType
  nameWithType: XmlSchemaSimpleTypeList.ItemType
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置<xref uid=&quot;langword_csharp_simpleType&quot; name=&quot;simpleType&quot; href=&quot;&quot;></xref>派生自基值指定的类型的元素。"
  remarks: "基础值必须是 QName。 使用<xref:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName%2A>和`ItemType`是互相排斥。</xref:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSimpleType ItemType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "简单类型元素的项类型。"
  overload: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName
  id: ItemTypeName
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  langs:
  - csharp
  name: ItemTypeName
  nameWithType: XmlSchemaSimpleTypeList.ItemTypeName
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置内置数据类型的名称或<xref uid=&quot;langword_csharp_simpleType&quot; name=&quot;simpleType&quot; href=&quot;&quot;></xref>在此架构 （或指定命名空间指示的另一个架构） 中定义的元素。"
  remarks: "简单类型列表值必须是 QName。 使用`ItemTypeName`和<xref:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType%2A>是互相排斥。</xref:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType%2A>"
  syntax:
    content: public System.Xml.XmlQualifiedName ItemTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "简单类型列表的类型名称。"
  overload: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaSimpleTypeContent
  isExternal: false
  name: System.Xml.Schema.XmlSchemaSimpleTypeContent
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: XmlSchemaSimpleTypeList()
  nameWithType: XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList()
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList()
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: BaseItemType
  nameWithType: XmlSchemaSimpleTypeList.BaseItemType
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType
- uid: System.Xml.Schema.XmlSchemaSimpleType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSimpleType
  nameWithType: XmlSchemaSimpleType
  fullName: System.Xml.Schema.XmlSchemaSimpleType
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: ItemType
  nameWithType: XmlSchemaSimpleTypeList.ItemType
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: ItemTypeName
  nameWithType: XmlSchemaSimpleTypeList.ItemTypeName
  fullName: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor*
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: XmlSchemaSimpleTypeList
  nameWithType: XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType*
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: BaseItemType
  nameWithType: XmlSchemaSimpleTypeList.BaseItemType
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType*
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: ItemType
  nameWithType: XmlSchemaSimpleTypeList.ItemType
- uid: System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName*
  parent: System.Xml.Schema.XmlSchemaSimpleTypeList
  isExternal: false
  name: ItemTypeName
  nameWithType: XmlSchemaSimpleTypeList.ItemTypeName
