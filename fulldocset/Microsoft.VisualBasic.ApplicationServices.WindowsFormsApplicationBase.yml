### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  id: WindowsFormsApplicationBase
  children:
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  langs:
  - csharp
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  type: Class
  summary: "提供属性、 方法和与当前的应用程序相关的事件。"
  remarks: "公开的属性`My.Application`对象仅与当前应用程序或 DLL 相关联的返回数据。 没有系统级信息可以更改与`My.Application`。       `My.Application`对象由以下类组成:-<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>提供在所有项目中可用的成员。</xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>      -WindowsFormsApplicationBase 提供 Windows 窗体应用程序中可用的成员。      -<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>提供控制台应用程序中可用的成员。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>"
  example:
  - "This example uses a loop to iterate through the application's open forms, selects the forms that can be accessed directly by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. For information about how to access the open forms, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`."
  syntax:
    content: 'public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;></xref>类。"
  syntax:
    content: public WindowsFormsApplicationBase ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  id: '#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;></xref>与指定的身份验证模式的类。"
  remarks: "如果`authenticationMode`参数是<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>枚举值，则此构造函数尝试设置当前线程的<xref:System.Threading.Thread.CurrentPrincipal%2A>属性<xref:System.Security.Principal.WindowsPrincipal>为当前用户。</xref:System.Security.Principal.WindowsPrincipal> </xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>       如果`authenticationMode`参数是<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>枚举值，则此构造函数离开当前线程的<xref:System.Threading.Thread.CurrentPrincipal%2A>属性保持不变。</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>"
  syntax:
    content: public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);
    parameters:
    - id: authenticationMode
      type: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&quot;></xref>. 指定应用程序的身份验证模式。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  id: ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "获取<xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref>当前线程的 Windows 窗体应用程序的对象。"
  remarks: "这是一个高级的成员;它不会不会出现在 IntelliSense 除非你单击**所有**选项卡。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  syntax:
    content: public System.Windows.Forms.ApplicationContext ApplicationContext { get; }
    return:
      type: System.Windows.Forms.ApplicationContext
      description: "此属性返回<xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref>当前线程的对象。 该对象包含有关线程的上下文信息。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  id: DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "处理当前在消息队列中的所有 Windows 消息。"
  remarks: "`My.Application.DoEvents`方法允许你的应用程序处理其他代码运行时，可能会引发的事件。 `My.Application.DoEvents`方法具有相同的行为<xref:System.Windows.Forms.Application.DoEvents%2A>方法。</xref:System.Windows.Forms.Application.DoEvents%2A>       运行 Windows 窗体应用程序时，它会创建新的表单，然后等待要处理的事件。 每当窗体处理的事件，例如单击按钮; 它将处理所有与该事件关联的代码。 在队列中等待所有其他事件。 而你的代码来处理该事件，你的应用程序未响应。 例如，如果另一个窗口拖到顶部，也无法重新绘制窗口。       如果调用`My.Application.DoEvents`在代码中，你的应用程序可以处理其他事件。 例如，如果你的代码将数据添加到<xref:System.Windows.Forms.ListBox>在循环中，和它调用循环的每个步骤后`My.Application.DoEvents`，另一个窗口拖动到它。 上时，你的窗体重新绘制</xref:System.Windows.Forms.ListBox> 如果你删除`My.Application.DoEvents`从代码中，你的窗体不会重新绘制按钮的 click 事件处理程序完成之前执行。       通常情况下，在处理消息循环中使用此方法。      1> [!NOTE]&1;>`My.Application.DoEvents`窗体一样方法不完全相同的方式中处理事件。 使用多线程处理，以使表单直接处理的事件。 有关详细信息，请参阅[多线程应用程序](~/add/includes/ajax-current-ext-md.md)。      1> [!CAUTION]&1;> 如果处理用户界面 (UI) 事件的方法的调用`My.Application.DoEvents`方法，该方法之前，可能需要重新输入其完成。 这可能是由于`My.Application.DoEvents`方法处理 Windows 消息和 Windows 消息可以引发事件。       下表列出的任务涉及示例`My.Application.DoEvents`方法。      |||  |-|-|  |到 |请参阅 |  |允许窗体响应用户界面输入在忙时 |[演练︰ 处理事件](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example uses the `My.Application.DoEvents` method to allow the UI for `TextBox1` to update.  \n  \n [!code-vb[VbVbalrMyApplication#6](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#6)]  \n  \n This code should be in a form that has a `TextBox1` component with a `Text` property."
  syntax:
    content: public void DoEvents ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  id: EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定此应用程序是否将用于 windows 控件，以及等中的 Windows XP 样式。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法使用此属性以确定是调用<xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.</xref:System.Windows.Forms.Application.EnableVisualStyles%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected bool EnableVisualStyles { get; set; }
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值指示此应用程序是否将使用的 windows、 控件和等等的 XP 窗口样式。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  id: HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "隐藏应用程序的初始屏幕。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>类的单独线程上创建初始屏幕。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 此方法将对正确线程的调用封送。       完成主窗体后调用此方法加载。"
  syntax:
    content: protected void HideSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  id: IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定此应用程序是否为单实例应用程序。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>方法使用此属性来确定此应用程序是否为单实例应用程序。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>"
  syntax:
    content: protected bool IsSingleInstance { get; set; }
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值指示此应用程序是否为单实例应用程序。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  id: MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "获取或设置此应用程序的主窗体。"
  remarks: "使用`MainForm`属性来获取或设置<xref:System.Windows.Forms.Form>Visual Basic 应用程序启动/关闭模型中用作应用程序的主窗体的对象。</xref:System.Windows.Forms.Form>       此属性支持[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序启动/关闭模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       应用程序关闭时，不会保留更改此属性。 若要永久更改主窗体，你必须更改中的设置**项目设计器**。"
  syntax:
    content: protected System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "获取或设置此应用程序的主窗体。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  id: MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定时间 （毫秒），为其显示初始屏幕的最小长度。"
  remarks: "`My.Application.MinimumSplashScreenDisplayTime`属性允许你指定希望应用程序的初始屏幕，要显示的时间的最小长度。 如果主窗体完成初始化时间比此属性指定的内容更短之前的时间的推移，此时主窗体将显示请求的量, 一直处于初始屏幕。 如果你的应用程序采用长时间才能启动，初始屏幕已关闭后主窗体将变为活动状态。       当你将初始屏幕添加到使用项目设计器的应用程序时，它将设置`My.Application.MinimumSplashScreenDisplayTime`属性设置为 2000，从而指定的最小显示时间为两秒。       此属性支持[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       应设置`My.Application.MinimumSplashScreenDisplayTime`重写的方法中的属性<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>或<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 重写的方法的代码<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>类应输入在 ApplicationEvents.vb 文件中，默认情况下隐藏。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||  |-|  |若要访问代码编辑器窗口，重写成员 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br />     有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example demonstrates how to set the `My.Application.MinimumSplashScreenDisplayTime` property by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> property.  \n  \n [!code-vb[VbVbalrMyApplication#51](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#51)]  \n  \n This example requires that the project have a splash screen.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public int MinimumSplashScreenDisplayTime { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 时间 （毫秒），为其显示初始屏幕的最小长度。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当网络可用性更改时发生。"
  remarks: "应用程序引发的`NetworkAvailabilityChanged`事件每次更改网络的可用性时。 你可以使用<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>属性`e`参数，以获取网络连接的新状态。</xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 若要获取的网络连接的当前状态，请使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>       在与其他用户界面事件的应用程序的主线程上引发此事件。 这样，事件处理程序，可以直接访问应用程序的 UI。 但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件无法处理直到另一个事件处理程序完成或调<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>       <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>事件提供相同的功能，因为此事件但是可用于所有应用程序类型。</xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>       代码`NetworkAvailabilityChanged`事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。      ||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&1;。  在选择一个项目**解决方案资源管理器。** 单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br />     有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |    &1;> [!NOTE]&1;> 许多网络中心将提供网络连接，即使中心已断开的大型网络。 因此，对于有线连接，此事件指示计算机和中心之间的连接中的更改。      1> [!NOTE] 1>`NetworkAvailabilityChanged`应用程序在运行时在 Windows 95 和 Windows 98 上或在不由非管理员在 Windows 2000 上运行时则不引发事件。 如果你的应用程序可能会运行这些操作系统上，使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性来检查网络可用性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example calls the `SetConnectionStatus` method of the default `Form1` class when the network availability changes.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section.  \n  \n The project should have a form named `Form1`. It should have a method named `SetConnectionStatus` that takes a `Boolean` parameter.  \n  \n [!code-vb[VbVbalrMyApplication#9](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#9)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  id: OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许设计器发出配置初始屏幕和主窗体的代码。"
  remarks: "默认情况下，此方法没有任何影响。 但是，当你选择主窗体应用程序中[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**项目设计器**，设计器将重写此方法的设置方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>到主窗体的新实例的属性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>       调用此方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>"
  syntax:
    content: protected virtual void OnCreateMainForm ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  id: OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许设计器发出初始化初始屏幕的代码。"
  remarks: "默认情况下，此方法没有任何影响。 如果你选择为应用程序初始屏幕[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**项目设计器**，设计器将重写的方法设置 OnCreateSplashScreen 方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>属性设置为初始屏幕窗体的新实例。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>       调用此方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected virtual void OnCreateSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  id: OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "设置视觉样式、 文本显示样式和当前线程的主体主应用程序 （如果应用程序使用 Windows 身份验证），并初始化初始屏幕中，如果定义。"
  remarks: "默认情况下，此方法设置的视觉样式、 文本显示样式和当前线程的主体主应用程序 （如果应用程序使用 Windows 身份验证），并调用`ShowSplashScreen`如果既没有`/nosplash`也不`-nosplash`用作命令行参数。       此方法调用以下方法:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>"
  syntax:
    content: protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection<string> commandLineArgs);
    parameters:
    - id: commandLineArgs
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;的<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>，为当前应用程序的字符串中包含的命令行自变量。"
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示是否应继续进行应用程序启动。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  id: OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当主应用程序已准备好开始运行，在初始化完成后提供起始点。"
  remarks: "默认情况下，它将进入 Windows 窗体消息循环之前, 此方法调用`OnCreateMainForm`（用于创建应用程序的主窗体） 和`HideSplashScreen`（若要关闭初始屏幕） 方法:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> 提供为设计器发出初始化主窗体的代码的方法。           默认情况下，此方法没有任何影响。 但是，当你选择主窗体应用程序中[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**项目设计器**，设计器重写<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>方法与设置方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>到主窗体的新实例的属性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A> 如果应用程序具有定义的初始屏幕，并且它已打开，则此方法关闭初始屏幕。           默认情况下，此方法关闭初始屏幕。"
  syntax:
    content: protected virtual void OnRun ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  id: OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许在应用程序关闭时运行代码。"
  remarks: "如果在主应用程序中出现未经处理的异常，此方法不会运行。       默认情况下，此方法将引发<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>"
  syntax:
    content: protected virtual void OnShutdown ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  id: OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许应用程序启动时运行代码。"
  remarks: "默认情况下，此方法将引发<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 事件处理程序可以设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>事件自变量的属性。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 如果<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>是`True`，此方法返回`False`取消应用程序启动。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 否则，此方法返回`True`。"
  syntax:
    content: protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupEventArgs&quot;></xref>. 包含应用程序的命令行参数，指示是否应取消在应用程序启动。"
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>指示是否应继续应用程序进行启动。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  id: OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许单实例应用程序的后续实例启动时运行代码。"
  remarks: "默认情况下，此方法将引发<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 事件处理程序可以设置<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>事件自变量的属性。</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 如果<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>是`True`，方法将激活主窗体。</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 否则，主窗体处于其当前状态。"
  syntax:
    content: protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs&quot;></xref>. 包含在后续的应用程序实例的命令行参数，指示第一个应用程序实例是否应转到在退出异常处理程序时的前景。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  id: OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，允许代码运行时应用程序中发生未经处理的异常。"
  remarks: "默认情况下，此方法将引发<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException>事件前提是不连接调试器并处理用户`UnhandledException`事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> 事件处理程序可以设置<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>属性。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 如果<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>是`False`，或如果不处理该事件，从异常处理程序返回后退出应用程序。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 否则，应用程序控制返回到 Windows 窗体消息循环。"
  syntax:
    content: protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);
    parameters:
    - id: e
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs&quot;></xref>."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示是否<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&quot;></xref>事件被引发。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  id: OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "获取应用程序的所有打开窗体的集合。"
  remarks: "`My.Application.OpenForms`属性获取应用程序的所有打开窗体的集合。 行为等同于<xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>属性。</xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>      1> [!NOTE]&1;>`My.Application.OpenForms`属性返回所有已打开窗体，而不考虑由哪个线程打开它们。 应检查<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性的每个窗体，然后才能访问它; 否则，它可能会引发<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException> </xref:System.Windows.Forms.Control.InvokeRequired%2A>      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example loops over the application's open forms, selects the ones directly accessible by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example loops over the application's open forms and displays their titles in a <xref:System.Windows.Forms.ListBox> control.  \n  \n [!code-vb[VbVbalrMyApplication#11](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#11)]"
  syntax:
    content: public System.Windows.Forms.FormCollection OpenForms { get; }
    return:
      type: System.Windows.Forms.FormCollection
      description: "A <xref href=&quot;System.Windows.Forms.FormCollection&quot;> </xref>包含所有应用程序的已打开窗体的对象。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  id: Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "设置并启动 Visual Basic 应用程序模型。"
  remarks: "`My.Application.Run`方法提供对支持[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序模型。 此方法应仅从应用程序的调用`Sub Main`。 默认情况下， `Sub Main` Windows 窗体应用程序调用此方法。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  syntax:
    content: public void Run (string[] commandLine);
    parameters:
    - id: commandLine
      type: System.String[]
      description: "类型数组<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。 从命令行<xref uid=&quot;langword_csharp_Sub Main&quot; name=&quot;Sub Main&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  id: SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定应用程序是否在退出保存用户设置。"
  remarks: "`SaveMySettingsOnExit`属性允许用户更改应用程序将设置保存在运行时如何。 还可以通过使用显式保存设置更改<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法`My.Settings`对象。</xref:System.Configuration.ApplicationSettingsBase.Save%2A> 有关更改和保存设置的详细信息，请参阅[应用程序属性](~/add/includes/ajax-current-ext-md.md)。       应用程序关闭时，不会保留更改此属性。 若要更改`SaveMySettingsOnExit`属性永久，则必须更改中的设置**项目设计器**: | |  |-|  |若要更改项目设计器中的设置 |  |&1;。  在选择一个项目**解决方案资源管理器**。 单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.选择**上关闭保存 My.Settings**。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example has two parts.  \n  \n-   The `InitializeSaveMySettingsOnExit` subroutine, which initializes the checked state of a <xref:System.Windows.Forms.CheckBox> control to the current value of the `SaveMySettingsOnExit` property.  \n  \n-   The `SaveMySettingsOnExit_CheckedChanged` subroutine, which handles changes to a <xref:System.Windows.Forms.CheckBox> control to update the `My.Application.SaveMySettingsOnExit` property.  \n  \n [!code-vb[VbVbalrMyApplication#12](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#12)]  \n  \n For this example to work, your application must have a <xref:System.Windows.Forms.CheckBox> control named `SaveMySettingsOnExit`."
  syntax:
    content: public bool SaveMySettingsOnExit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>指示应用程序在退出保存用户设置。 否则，这些设置不隐式保存。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  id: ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定应用程序是否具有定义，初始屏幕，如果是这样，显示内容。"
  remarks: "默认情况下，此方法调用`OnCreateSplashScreen`以线程安全的方式。       ShowSplashScreen 方法包含代码，显示初始屏幕的至少由指定的毫秒数<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>属性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> 若要使用此功能，必须设置`My.Application.MinimumSplashScreenDisplayTime`替代 ShowSplashScreen 的方法中的属性或<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>方法，或将初始屏幕添加到你的应用程序使用**项目设计器**。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> 有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>       调用此方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected void ShowSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  id: Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "在应用程序关闭时发生。"
  remarks: "应用程序引发的`Shutdown`退出之前对其的事件。 这样，你可以控制应用程序关闭其资源的方式。 此事件是的一部分[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       代码`Shutdown`事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。      ||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br />     有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example logs messages when the application shuts down.  \n  \n [!code-vb[VbVbalrMyApplication#13](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#13)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [How to: Log Messages When the Application Starts or Shuts Down](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  id: ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "确定应用程序的主窗体关闭时，会发生什么情况。"
  remarks: "<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>方法检查此属性来确定是否应用程序应关闭时已关闭时主窗体或窗体是否将打开另一个应提升为新的主窗体的值。</xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: protected Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.ShutdownMode&quot;> </xref>枚举值，指示应用程序应执行的主窗体关闭时。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  id: SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "获取或设置此应用程序的初始屏幕。"
  remarks: "`My.Application.SplashScreen`属性允许您获取或设置<xref:System.Windows.Forms.Form>应用程序使用作为初始屏幕的对象，第一种图形形式启动应用程序时显示。</xref:System.Windows.Forms.Form>       此属性支持 Visual Basic 应用程序模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       应用程序关闭时，不会保留更改此属性。 若要永久更改初始屏幕，你必须更改中的设置**项目设计器**。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have a property named `Status` that updates its user interface.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Forms.Form SplashScreen { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>应用程序使用作为初始屏幕的对象。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "相同的值分配给此属性与<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>属性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  id: Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当应用程序开始时发生。"
  remarks: "正常 （非单实例） 应用程序引发`Startup`每次启动时的事件。 单实例应用程序引发`Startup`事件启动仅当应用程序尚不活动; 否则为它会引发时`StartupNextInstance`事件。 有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>       此事件是的一部分[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       你可以使用<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`e`参数，用于控制加载的应用程序的启动窗体。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 当<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性设置为`True`，启动窗体不会启动。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 在这种情况下，你的代码应调用其他启动代码路径。       你可以使用<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>属性`e`参数或<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>属性来访问应用程序的命令行自变量。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> </xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>       代码`Startup`事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。      ||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br /><br /> 有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have property named `Status` that updates its user interface.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  id: StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当尝试启动单实例应用程序和应用程序已处于活动状态时发生。"
  remarks: "单实例应用程序引发 StartupNextInstance 事件时尝试重新启动应用程序，它已处于活动状态时。 单实例应用程序启动时第一次，它会发出<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>       此事件是的一部分[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]应用程序模型。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       在与其他用户界面事件的应用程序的主线程上引发此事件。 这允许直接访问应用程序的用户界面的事件处理程序。 但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件无法处理直到另一个事件处理程序完成或调<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>      1> [!NOTE]&1;>`StartupNextInstance`仅在单实例应用程序中引发事件。 若要启用你的应用程序的单实例行为，必须检查**生成单个实例应用程序**项目设计器中的复选框。      ||  |-|  |若要使应用程序的单一实例 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.选择**生成单个实例应用程序**复选框。 |      必须使用<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>属性`e`参数访问后续尝试启动单实例应用程序的自变量。</xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>属性提供用来启动单实例应用程序的第一个实例的自变量。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>       StartupNextInstance 事件处理程序的代码存储在默认情况下隐藏的 ApplicationEvents.vb 文件。      ||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br />     有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |      下表列出了所涉及的任务的示例`My.Application.StartupNextInstance`事件。      |||  |-|-|  |到 |请参阅 |  |检查命令行参数的第一个应用程序实例 |<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |是 |  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |不 |</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>"
  example:
  - "This example uses the `e` parameter of the StartupNextInstance event handler to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#15](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#15)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  id: UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当应用程序遇到未经处理的异常时发生。"
  remarks: "应用程序引发的`UnhandledException`事件时遇到未经处理的异常。 此事件是 Visual Basic 应用程序模型的一部分。 有关详细信息，请参阅[Visual Basic 应用程序模型概述](~/add/includes/ajax-current-ext-md.md)。       你可以使用<xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>属性`e`参数访问未经处理的异常导致此事件。</xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>       你可以使用<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>属性`e`参数，用于控制是否在应用程序退出。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 默认情况下，<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>是`True`。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 因此，在完成后退出应用程序`UnhandledException`事件处理程序。 你可以将值设置为`False`中`UnhandledException`事件处理程序以保留应用程序运行，并让它返回到等待状态。       代码`UnhandledException`事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。      ||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。 |      有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> Visual Basic 编译器防止用于调试从引发此事件，以启用调试器以处理未经处理的异常构建的应用程序。 这意味着，如果你正在测试应用程序通过在 Visual Studio 集成开发环境调试器下运行它你`UnhandledException`将不会调用事件处理程序。 有关为调试生成应用程序的详细信息，请参阅[/debug (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。      ## 任务下表列出了涉及的任务的示例`My.Application.UnhandledException`事件。      |||  |-|-|  |到 |请参阅 |  |日志未经处理的异常 |[如何︰ 记录异常](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |**Yes**|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |"
  example:
  - "This example uses the `My.Application.UnhandledException` event to log any unhandled exceptions.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the procedure found in this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md).  \n  \n Because the `UnhandledException` event is not raised when a debugger is attached to the application, you have to run this example outside the Visual Studio Integrated Development Environment.  \n  \n [!code-vb[VbVbalrMyApplication#17](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#17)]"
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  id: UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "当在派生类中重写，则此属性允许设计器指定应用程序的窗体的默认文本呈现引擎。"
  remarks: "默认情况下，此属性返回`False`指示 GDI 文本呈现引擎[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]用于应用程序的窗体。 但是，你可以重写此属性以返回`True`和指定应用程序的窗体使用 GDI + 文本呈现引擎，该引擎在 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中使用。       此属性由<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>构造函数。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>       重写的方法的代码<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>类应输入在 ApplicationEvents.vb 文件中，默认情况下隐藏。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||  |-|  |若要访问代码编辑器窗口，重写成员 |  |&1;。  在选择了项目**解决方案资源管理器**，单击**属性**上**项目**菜单。<br />2.单击**应用程序**选项卡。<br />3.单击**查看应用程序事件**按钮以打开代码编辑器。<br />     有关详细信息，请参阅[应用程序页，项目设计器 (Visual Basic 中)](~/add/includes/ajax-current-ext-md.md)。 |"
  example:
  - "This example demonstrates how to set the GDI+ text rendering engine as the application's default rendering engine by overriding the UseCompatibleTextRendering property.  \n  \n```  \nProtected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  \n    Get  \n        ' Use the GDI+ text rendering engine.  \n        Return True  \n    End Get  \nEnd Property  \n```  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: protected static bool UseCompatibleTextRendering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. 值为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>指示应用程序应使用的默认文本呈现引擎[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]。 值为<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>指示应用程序应为 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中使用文本呈现引擎。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
- uid: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: AuthenticationMode
  nameWithType: AuthenticationMode
  fullName: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext
  parent: System.Windows.Forms
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventArgs
  nameWithType: StartupEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventArgs
  nameWithType: StartupNextInstanceEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventArgs
  nameWithType: UnhandledExceptionEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
- uid: System.Windows.Forms.FormCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FormCollection
  nameWithType: FormCollection
  fullName: System.Windows.Forms.FormCollection
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownEventHandler
  nameWithType: ShutdownEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownMode
  nameWithType: ShutdownMode
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventHandler
  nameWithType: StartupEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventHandler
  nameWithType: StartupNextInstanceEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventHandler
  nameWithType: UnhandledExceptionEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents
  nameWithType: WindowsFormsApplicationBase.DoEvents
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize
  nameWithType: WindowsFormsApplicationBase.OnInitialize
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun
  nameWithType: WindowsFormsApplicationBase.OnRun
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown
  nameWithType: WindowsFormsApplicationBase.OnShutdown
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup
  nameWithType: WindowsFormsApplicationBase.OnStartup
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run
  nameWithType: WindowsFormsApplicationBase.Run
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
