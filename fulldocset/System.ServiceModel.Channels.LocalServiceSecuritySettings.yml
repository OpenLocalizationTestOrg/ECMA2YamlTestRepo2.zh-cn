### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings
  id: LocalServiceSecuritySettings
  children:
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  langs:
  - csharp
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings
  type: Class
  summary: "提供可设置的本地服务安全属性。"
  remarks: "此类包含使用的本地安全设置<xref:System.ServiceModel.Channels.SecurityBindingElement>用于生成安全通道。</xref:System.ServiceModel.Channels.SecurityBindingElement> 这些设置仅用于服务，并不会出现在服务的安全策略。"
  example:
  - "This example shows how to use the LocalServiceSecuritySettings class to change the <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> setting.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#17)]\n [!code-cs[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#17)]"
  syntax:
    content: public sealed class LocalServiceSecuritySettings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: LocalServiceSecuritySettings()
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Channels.LocalServiceSecuritySettings&quot;></xref>类。"
  remarks: ''
  example:
  - "This example shows how to use the default constructor.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#1)]\n [!code-cs[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#1)]"
  syntax:
    content: public LocalServiceSecuritySettings ();
    parameters: []
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  id: Clone
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: Clone()
  nameWithType: LocalServiceSecuritySettings.Clone()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "从当前实例创建此类的新实例。"
  remarks: ''
  example:
  - "This example shows how to create a new instance of this class from the current instance.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#16)]\n [!code-cs[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#16)]"
  syntax:
    content: public System.ServiceModel.Channels.LocalServiceSecuritySettings Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.LocalServiceSecuritySettings
      description: "新实例<xref href=&quot;System.ServiceModel.Channels.LocalServiceSecuritySettings&quot;> </xref>。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  id: DetectReplays
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个值，该值指示是否在服务上启用重播检测。"
  remarks: ''
  example:
  - "This example shows how get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#2)]\n [!code-cs[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#2)]"
  syntax:
    content: public bool DetectReplays { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在该服务; 上启用重播检测否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置通道因处于非活动状态而关闭前等待的持续时间。"
  remarks: "In a secure conversation session, note that both this property and the `ReceiveTimeout` property on the binding affect session timeout. The shorter of the two determines when timeouts occur.  \n  \n Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the `InactivityTimeout` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#3)]\n [!code-cs[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#3)]"
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，表示与客户端的安全会话因处于非活动状态而关闭前等待的时间。</xref:System.TimeSpan> 默认值为 2 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  id: IssuedCookieLifetime
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置的生存时间<xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>服务颁发给客户端。"
  remarks: "当服务颁发安全对话 cookie 令牌向客户端时，此属性的值由确定其有效期。"
  example:
  - "This example shows how to get the `IssuedCookieLifetime` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#4)]\n [!code-cs[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#4)]"
  syntax:
    content: public TimeSpan IssuedCookieLifetime { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，它表示新安全 cookie 的生存期。</xref:System.TimeSpan> 默认值为 10 小时。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  id: MaxCachedCookies
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置的最大数目<xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>服务允许一次缓存的 s。"
  remarks: ''
  example:
  - "This example shows how to get the `MaxCachedCookies` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#5)]\n [!code-cs[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#5)]"
  syntax:
    content: public int MaxCachedCookies { get; set; }
    return:
      type: System.Int32
      description: "可以缓存由服务的安全对话 cookie 的最大数量。 当达到此限制服务会删除最旧的缓存安全对话 cookie，以便腾出空间供新的安全对话 cookie。 默认值为 1000年。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  id: MaxClockSkew
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置通信双方的系统时钟之间允许的最大时间差异。"
  remarks: "此属性的默认值为 5 分钟。       未通过发送时间测试的消息会被拒绝。       与消息时间戳验证结合使用此属性与<xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A>属性。</xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A>"
  example:
  - "This example shows how to get the `MaxClockSkew` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#6)]\n [!code-cs[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#6)]"
  syntax:
    content: public TimeSpan MaxClockSkew { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，表示进行通信双方的系统时钟之间的最大时间差异。</xref:System.TimeSpan> 默认值为 5 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  id: MaxPendingSessions
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置与为其颁发会话令牌但发送任何应用程序消息服务器建立的并发安全会话的最大数目。"
  remarks: ''
  example:
  - "This example shows how to get the `MaxPendingSessions` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#7)]\n [!code-cs[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#7)]"
  syntax:
    content: public int MaxPendingSessions { get; set; }
    return:
      type: System.Int32
      description: "最大并发安全会话数。 默认值为 128。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  id: MaxStatefulNegotiations
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置最大的与服务可参与的客户端的并发安全协商数。"
  remarks: "超出此限制的协商会话将被拒绝和 SOAP 错误发送回客户端。 客户端通常只能稍后重试，这样，在该服务完成上的现有协商才能一些时间。"
  example:
  - "This example shows how set the `MaxStatefulNegotiations` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#8)]\n [!code-cs[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#8)]"
  syntax:
    content: public int MaxStatefulNegotiations { get; set; }
    return:
      type: System.Int32
      description: "最大的与服务可参与的客户端的并发安全协商数。 默认值为 128。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  id: NegotiationTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置客户端和服务之间的安全协商阶段的最大持续时间。"
  remarks: "如果超出此限制，将引发异常。"
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#9)]\n [!code-cs[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#9)]"
  syntax:
    content: public TimeSpan NegotiationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，表示客户端和服务之间的安全协商阶段的最大时间。</xref:System.TimeSpan> 与服务 （例如在消息级别 SPNego 或 SSL 身份验证） 的任何协商必须在此时间内完成。 默认值为 1 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  id: NonceCache
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置缓存的本地服务安全设置。"
  syntax:
    content: public System.ServiceModel.Security.NonceCache NonceCache { get; set; }
    return:
      type: System.ServiceModel.Security.NonceCache
      description: "缓存中用于本地服务安全设置。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  id: ReconnectTransportOnFailure
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个值，该值指示是否尝试重新连接在传输失败后安全会话。"
  remarks: "如果此标志设置为`true`，该服务允许客户端到对应于单个安全会话通过多个传输连接发送消息。 这是在安全 Ws-reliablemessaging 的情况下有用，因为客户端要求会话容忍瞬态传输故障。"
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#10)]\n [!code-cs[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#10)]"
  syntax:
    content: public bool ReconnectTransportOnFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果安全会话尝试在传输失败; 后重新连接，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  id: ReplayCacheSize
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置用于重播检测的 nonce 缓存大小。"
  remarks: "Nonce 是&quot;只用一次&quot;。       如果超过 nonce 计数，则将拒绝传入消息和<xref:System.ServiceModel.Security.MessageSecurityException>引发。</xref:System.ServiceModel.Security.MessageSecurityException> 旧的 nonce 将被及时移除。"
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#11)]\n [!code-cs[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#11)]"
  syntax:
    content: public int ReplayCacheSize { get; set; }
    return:
      type: System.Int32
      description: "用于重播检测的 nonce 缓存大小。 默认值为 900000。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  id: ReplayWindow
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置的最大范围内，服务可以接受一条消息的时间量。"
  remarks: "Nonce 是&quot;只用一次&quot;。       该服务将拒绝发送多个 ReplayWindow 持续时间在过去的所有消息。 在到达的消息`ReplayWindow`具有检查其 nonce 的唯一性。"
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#12)]\n [!code-cs[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#12)]"
  syntax:
    content: public TimeSpan ReplayWindow { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>表示的最大范围内，服务可以接受一条消息的时间量。</xref:System.TimeSpan> 默认值为 5 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  id: SessionKeyRenewalInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置在安全会话中使用的密钥的生存期。 在此时间间隔到期时将自动续订密钥。"
  remarks: "Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#13)]\n [!code-cs[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#13)]"
  syntax:
    content: public TimeSpan SessionKeyRenewalInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "时间跨度之后服务要求发起方续订用于安全会话的密钥。 如果发起方在此时间内不续订密钥服务发回错误向发起程序。 默认值为 15 个小时。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  id: SessionKeyRolloverInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置密钥续订后为其先前的会话密钥对传入消息有效在密钥续订期间的时间间隔。"
  remarks: "After key renewal, the client and server should always send messages using the most current available key. Both parties can accept incoming messages secured with the previous session key until the rollover time expires.  \n  \n Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the `SessionKeyRolloverInterval` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#14)]\n [!code-cs[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#14)]"
  syntax:
    content: public TimeSpan SessionKeyRolloverInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "为其先前的会话密钥是对传入消息有效后密钥续订的密钥续订后的时间间隔。 默认值为 5 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  id: TimestampValidityDuration
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置消息是由服务发送时有效的时间的最大持续时间。 如果客户端在此期间后收到服务的消息，将丢弃该消息。"
  remarks: ''
  example:
  - "This example shows how to get the `TimestampValidityDuration` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#15)]\n [!code-cs[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#15)]"
  syntax:
    content: public TimeSpan TimestampValidityDuration { get; set; }
    return:
      type: System.TimeSpan
      description: "消息是由服务发送时有效的时间最长持续时间。 默认值为 5 分钟。"
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性设置为小于 0 的值。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: LocalServiceSecuritySettings()
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: Clone()
  nameWithType: LocalServiceSecuritySettings.Clone()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
- uid: System.ServiceModel.Security.NonceCache
  parent: System.ServiceModel.Security
  isExternal: false
  name: NonceCache
  nameWithType: NonceCache
  fullName: System.ServiceModel.Security.NonceCache
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: Clone
  nameWithType: LocalServiceSecuritySettings.Clone
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
