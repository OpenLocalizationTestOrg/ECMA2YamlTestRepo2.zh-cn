### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;></xref>事件。"
  remarks: "KeyPressEventArgs 指定当用户按下某个键时组成的字符。 例如，当用户按下 SHIFT + K，<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>属性将返回大写的 k。      A<xref:System.Windows.Forms.Control.KeyPress>事件在用户按下某个键时发生。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 与<xref:System.Windows.Forms.Control.KeyPress>事件是<xref:System.Windows.Forms.Control.KeyUp>和<xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyUp></xref:System.Windows.Forms.Control.KeyPress>密切相关的两个事件 <xref:System.Windows.Forms.Control.KeyDown>事件之前每<xref:System.Windows.Forms.Control.KeyPress>事件时用户按下某个键，和一个<xref:System.Windows.Forms.Control.KeyUp>用户释放某个键时发生事件。</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 当用户按住某个键时，重复<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyPress>字符重复每次发生的事件。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 一个<xref:System.Windows.Forms.Control.KeyUp>下达时生成事件。</xref:System.Windows.Forms.Control.KeyUp>       与每个<xref:System.Windows.Forms.Control.KeyPress>事件，传递 KeyPressEventArgs。</xref:System.Windows.Forms.Control.KeyPress> A<xref:System.Windows.Forms.KeyEventArgs>传递与每个<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyUp>事件。</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> A<xref:System.Windows.Forms.KeyEventArgs>指定任何修改键 （CTRL、 shift 键或 ALT） 是否已与另一个键一起按下。</xref:System.Windows.Forms.KeyEventArgs> (也可以通过获取此修饰符信息<xref:System.Windows.Forms.Control.ModifierKeys%2A>属性<xref:System.Windows.Forms.Control>类)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>     设置<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>到`true`取消`KeyPress`事件。</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 这可防止处理键按键控件。      1> [!NOTE]&1;> 某些控件将处理某些击键<xref:System.Windows.Forms.Control.KeyDown>。</xref:System.Windows.Forms.Control.KeyDown> 例如，<xref:System.Windows.Forms.RichTextBox>处理 Enter 键之前<xref:System.Windows.Forms.Control.KeyPress>称为。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> 在这种情况下，您无法取消<xref:System.Windows.Forms.Control.KeyPress>事件，并且必须取消从键击<xref:System.Windows.Forms.Control.KeyDown>相反。</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       有关事件模型的信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;></xref>类。"
  remarks: "使用<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>属性来获取修改键的当前状态。</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "键对应的 ASCII 字符用户按下。"
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;></xref>事件进行处理。"
  remarks: "如果不处理该事件，则将发送到默认处理操作系统中。 设置为 Handled`true`取消`KeyPress`事件。"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果处理该事件时;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置对应于按下的键的字符。"
  remarks: "使用示例击键 KeyChar 属性在运行时和修改在运行时的特殊情况下的键击。 例如，可以使用 KeyChar 要禁用非数字按键，在用户输入邮政编码时，请更改所有字母按键都改为在数据输入字段中，大写或监视键盘或特定组合键其他密钥输入的设备。       你可以获取或设置以下项:-a 到 z、 A 到 Z。      -CTRL。      -标点符号。      -数字键，同时横跨顶部的键盘和数字键盘上。      -输入。       无法获取或设置以下项:-TAB 键。      -插入和删除。      -主页。      -结束。      -PAGE UP 和 PAGE down 键。      -F1 F2。      -ALT。      箭头键。      1> [!NOTE]&1;> 有关如何检测到任何上面提到的非字符键的信息，请参阅<xref:System.Windows.Forms.KeyEventArgs>类。</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "ASCII 字符组成。 例如，如果用户按下 SHIFT + K，此属性将返回大写的 k。"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
