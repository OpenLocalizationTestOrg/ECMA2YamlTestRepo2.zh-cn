### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditorSheet
  id: ExpressionEditorSheet
  children:
  - System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  - System.Web.UI.Design.ExpressionEditorSheet.IsValid
  - System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  langs:
  - csharp
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
  type: Class
  summary: "表示自定义表达式的设计时编辑器表。 必须继承此类。"
  remarks: "自定义表达式编辑器表，开发人员使用设置设计时的自定义表达式的属性。 可以使用表达式字符串; 设置控件属性值表达式字符串将计算的表达式生成器通过在运行时和设计时表达式编辑器。       当您浏览<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>设计时属性网格中的控件的属性，可视化设计器显示一个对话框，设置为的控件属性提供值的表达式。</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 你可以选择基于表达式前缀的列表的表达式类型。 当从列表中选择表达式前缀时，可视化设计器将使用关联<xref:System.Web.UI.Design.ExpressionEditor>和 ExpressionEditorSheet 对象来计算和转换表达式字符串基于该类型的表达式的语法。</xref:System.Web.UI.Design.ExpressionEditor> 可视设计器中使用表达式编辑器表属性为提示输入将合并到自定义表达式字符串的一个或多个字符串。       通常情况下，若要在设计时提供新的表达式类型，请定义一个唯一的表达式前缀并提供自定义<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>实现。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder> 或者，您可以提供自定义的 ExpressionEditorSheet 实现，用于定义用于构成表达式的属性。 若要与表达式生成器和一个表达式编辑器相关联的表达式前缀，将应用<xref:System.Web.Compilation.ExpressionEditorAttribute>属性和<xref:System.Web.Compilation.ExpressionPrefixAttribute>到自定义属性<xref:System.Web.Configuration.ExpressionBuilder>类，并随后为中的表达式生成器中配置的表达式前缀`expressionBuilders`Web 配置文件中的元素。</xref:System.Web.Configuration.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       默认实现<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法返回一个基本编辑器表中，使用单个输入的字符串以形成的表达式。</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 派生自的自定义表达式编辑器<xref:System.Web.UI.Design.ExpressionEditor>可以重写<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法以返回表实现的自定义编辑器。</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> </xref:System.Web.UI.Design.ExpressionEditor> 通常情况下，自定义编辑器表包含用于生成表达式字符串的多个属性。 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>方法返回基于当前表达式属性生成的表达式字符串。</xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>       例如，<xref:System.Web.UI.Design.ResourceExpressionEditor>类派生自<xref:System.Web.UI.Design.ExpressionEditor>类并提供了评估和在设计时将资源字符串引用的控件属性与相关联的实现。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ResourceExpressionEditor> <xref:System.Web.Compilation.ResourceExpressionBuilder>类是与表达式前缀关联`Resources`和<xref:System.Web.UI.Design.ResourceExpressionEditor>实现。</xref:System.Web.UI.Design.ResourceExpressionEditor> </xref:System.Web.Compilation.ResourceExpressionBuilder> <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>方法返回<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>，后者定义了窗体资源引用表达式的各个属性。</xref:System.Web.UI.Design.ResourceExpressionEditorSheet> </xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>       当从 ExpressionEditorSheet 类继承时，你必须重写以下成员:-<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法以返回表实现的自定义编辑器。</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>      -<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>构造函数来实现您的表达式编辑器表实现的自定义初始化操作。</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>"
  syntax:
    content: public abstract class ExpressionEditorSheet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;></xref>类。"
  remarks: "因为<xref:System.Web.UI.Design.ExpressionEditorSheet>类为抽象类，你无法创建的实例<xref:System.Web.UI.Design.ExpressionEditorSheet>直接使用 ExpressionEditorSheet 构造函数。</xref:System.Web.UI.Design.ExpressionEditorSheet> </xref:System.Web.UI.Design.ExpressionEditorSheet>"
  syntax:
    content: protected ExpressionEditorSheet (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序实现提供的设计器宿主，用于获取附加的设计时服务。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  id: GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "当在派生类中重写，返回由表达式编辑器表属性值构成的表达式字符串。"
  remarks: "自定义表达式编辑器表包含多个表达式的属性，它们合并以形成一个表达式字符串的设计时设置。 可以使用表达式字符串; 设置控件属性值表达式字符串的表达式生成器在运行时计算。       GetExpression 方法从当前表达式属性返回生成的表达式字符串。 可视化设计器允许你设置表属性的表达式，然后调用 GetExpression 方法以获取在表达式字符串并将控件属性值设置。"
  syntax:
    content: public abstract string GetExpression ();
    parameters: []
    return:
      type: System.String
      description: "当前的属性值的的自定义表达式字符串。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  id: IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "获取一个值，该值指示在表达式字符串是否有效。"
  remarks: "此基实现始终返回`true`。"
  syntax:
    content: public virtual bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果表达式字符串是否有效，则为否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  id: ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "获取表达式编辑器表使用的服务提供程序实现。"
  remarks: "使用<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>构造函数来设置自定义表达式编辑器表的服务提供商处实现。</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>       服务提供商处属性可用来访问提供的设计器宿主的服务。 例如，调用<xref:System.IServiceProvider.GetService%2A>方法替换<xref:System.Web.UI.Design.IWebApplication>接口访问项目项、 文档或通过可视化设计器提供的配置文件详细信息。</xref:System.Web.UI.Design.IWebApplication> </xref:System.IServiceProvider.GetService%2A>"
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    return:
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>、 设计宿主，可用来获取其他的设计时服务通常提供。</xref:System.IServiceProvider>"
  overload: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression
  nameWithType: ExpressionEditorSheet.GetExpression
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
