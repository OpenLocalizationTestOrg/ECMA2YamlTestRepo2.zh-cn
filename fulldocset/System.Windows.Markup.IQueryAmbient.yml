### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.IQueryAmbient
  id: IQueryAmbient
  children:
  - System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  langs:
  - csharp
  name: IQueryAmbient
  nameWithType: IQueryAmbient
  fullName: System.Windows.Markup.IQueryAmbient
  type: Interface
  summary: "有关是否指定的属性应视为环境当前作用域中的查询。"
  remarks: "环境属性机制的用途是通过告知 XAML 对象编写器，以避免实例化某些对象，在其中已知的对象是临时的且不能用于典型的运行的时应用程序的值的情况下提高分析的时间。 通常情况下，XAML 查找或属性 get 访问器的 XAML 处理需要实例化此类对象来填充对象图表示形式与准备就绪，可以使用值。       IQueryAmbient 包含一个成员︰ <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>       IQueryAmbient 是到<xref:System.Windows.Markup.AmbientAttribute>。</xref:System.Windows.Markup.AmbientAttribute>并行机制 IQueryAmbient 是专用的机制，可避免使用反射来确定信息，并还可以 act 函数 (给定的对象无法选择报表`true`或`false`为<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>)，而该属性是实质上是静态分析)。</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A> <xref:System.Windows.Markup.AmbientAttribute>是常规的机制，可以使用由 XAML 对象编写器，并且通常关联到的专用 XAML 类型系统属性<xref:System.Xaml.XamlMember.IsAmbient%2A>和<xref:System.Xaml.XamlType.IsAmbient%2A>。</xref:System.Xaml.XamlType.IsAmbient%2A> </xref:System.Xaml.XamlMember.IsAmbient%2A></xref:System.Windows.Markup.AmbientAttribute>      ## WPF 实现的 IQueryAmbient WPF 中，IQueryAmbient 用于资源字典查找过程。 查找进程获取连续`Resources`整个 WPF 逻辑树的值，致力于资源作用域的根之前密钥找不到或确定键在作用域中不存在。 通常，此操作需要实例化<xref:System.Windows.ResourceDictionary>每次接收结果。</xref:System.Windows.ResourceDictionary> 声明的内容`Resources`只要为环境`Resources`存在来优化此查找过程。 在 WPF 中，实现此接口在以下情况下:-<xref:System.Windows.FrameworkElement>实现<xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>返回`true`对所有的属性名，如果它包含的现有<xref:System.Windows.ResourceDictionary>为<xref:System.Windows.FrameworkElement.Resources%2A>，并且只要查询不是针对<xref:System.Windows.FrameworkElement.Resources%2A>属性本身。</xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.ResourceDictionary> </xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> </xref:System.Windows.FrameworkElement>      -<xref:System.Windows.Style>实现其<xref:System.Windows.Style.Resources%2A>.</xref:System.Windows.Style.Resources%2A>的相同模式</xref:System.Windows.Style>      -<xref:System.Windows.Application>实现其<xref:System.Windows.Application.Resources%2A>.</xref:System.Windows.Application.Resources%2A>的相同模式</xref:System.Windows.Application>      -<xref:System.Windows.FrameworkContentElement>实现其<xref:System.Windows.FrameworkContentElement.Resources%2A>.</xref:System.Windows.FrameworkContentElement.Resources%2A>的相同模式</xref:System.Windows.FrameworkContentElement>      -<xref:System.Windows.FrameworkTemplate>实现其<xref:System.Windows.FrameworkTemplate.Resources%2A>.</xref:System.Windows.FrameworkTemplate.Resources%2A>的相同模式</xref:System.Windows.FrameworkTemplate> 它还报告<xref:System.Windows.FrameworkTemplate.Template%2A>内容与环境，但是返回`false`如果查询<xref:System.Windows.FrameworkTemplate.Template%2A>本身。</xref:System.Windows.FrameworkTemplate.Template%2A> </xref:System.Windows.FrameworkTemplate.Template%2A>      -在这些情况下，相关的每个`Resources`属性 (和<xref:System.Windows.FrameworkTemplate.Template%2A>) 特性化为<xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.FrameworkTemplate.Template%2A> 典型用法就是对查询不是属性<xref:System.Windows.Markup.AmbientAttribute>特性化的定义的接口的对象的属性。</xref:System.Windows.Markup.AmbientAttribute> 换而言之，处理程序，但前提是为了创建对象图时提供的潜在的运行的时间值存在的资源字典，除了资源字典属性容器以外的任何其他属性可视为环境。"
  syntax:
    content: public interface IQueryAmbient
  implements: []
  platform:
  - net462
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  id: IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  langs:
  - csharp
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "有关是否指定的命名的属性可视为环境属性在当前范围内的查询。"
  syntax:
    content: public bool IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "要检查其环境状态的属性名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果请求的属性可被视为环境;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable
