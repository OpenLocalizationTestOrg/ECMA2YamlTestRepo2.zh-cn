### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.TaskbarItemInfo
  id: TaskbarItemInfo
  children:
  - System.Windows.Shell.TaskbarItemInfo.#ctor
  - System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  - System.Windows.Shell.TaskbarItemInfo.Description
  - System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  - System.Windows.Shell.TaskbarItemInfo.Overlay
  - System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressState
  - System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressValue
  - System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  langs:
  - csharp
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo
  fullName: System.Windows.Shell.TaskbarItemInfo
  type: Class
  summary: "表示有关任务栏缩略图的显示方式的信息。"
  remarks: "TaskbarItemInfo 类提供的托管的包装[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏功能。 有关 Windows 外壳程序和本机任务栏 Api 的详细信息，请参阅[任务栏扩展](http://go.microsoft.com/fwlink/?LinkId=178479)。 作为<xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName>一种<xref:System.Windows.Window>。</xref:System.Windows.Window>依赖项属性</xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName>公开 TaskbarItemInfo       [!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏提供增强的功能，使你能够使用任务栏项目以传达给用户的状态，并且最小化的窗口或将其隐藏公开常见任务。 由 TaskbarItemInfo 类公开的功能不可在 Windows 的版本比[!INCLUDE[win7](~/add/includes/win7-md.md)]。 使用 TaskbarItemInfo 类应用程序仍然可以运行在早期版本的 Windows;但是，这些任务栏增强功能将在早期版本中不可用。       在[!INCLUDE[win7](~/add/includes/win7-md.md)]，任务栏的部分功能可能不可用，具体取决于用户的设置。 例如，任务栏功能将不可用如果[!INCLUDE[TLA#tla_aero](~/add/includes/tlasharptla-aero-md.md)]被禁用或如果启动应用程序使用提升的权限。 你的应用程序应提供的其他方式与用户交互，不依赖于中的增强的任务栏功能[!INCLUDE[win7](~/add/includes/win7-md.md)]。       在通知区域中，这是在任务栏最右侧，程序图标通常用于传达给用户的应用程序状态。 默认情况下，[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏隐藏通知区域中的程序图标。 但是，您可以设置<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>属性将图像添加到任务栏按钮以传达状态，如消息处理应用程序中的联机状态。</xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 将覆盖图像允许用户查看应用程序状态，即使它们不能看到的通知区域中的程序图标。 你也可以显示通过设置任务栏按钮中运行任务的进度<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>和<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> </xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>       [!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏显示应用程序的缩略图时你将鼠标指针移到任务栏按钮。 默认情况下显示整个应用程序窗口。 你可以指定窗口，以通过设置显示缩略图中的特定部分<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>属性。</xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> 你还可以指定<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>任务栏缩略图上方的工具提示中显示。</xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> 即使在由于用户设置而无法查看缩略图时，将显示工具提示。       可以将按钮添加到任务栏缩略图用于访问常见任务而无需切换到应用程序窗口。 例如，窗口媒体播放器提供，暂停，正向播放，并让你的后退按钮控制媒体从任务栏缩略图的播放应用程序最小化时。 在任务栏缩略图中的按钮都由<xref:System.Windows.Shell.ThumbButtonInfo>对象，并包含在<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>集合。</xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> </xref:System.Windows.Shell.ThumbButtonInfo>       下图显示的增强的功能[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏增强功能"
  example:
  - "The following example shows how to create a TaskbarItemInfo in markup. The TaskbarItemInfo contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]  \n  \n The following markup and code shows the previous example in its full context. The application uses a <xref:System.ComponentModel.BackgroundWorker> to count from 0 to 100 and displays its progress in the user interface. The task can be started and stopped from the taskbar preview. The progress is displayed in the taskbar button.  \n  \n [!code-xml[Shell_TaskbarItemSample#001](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#001)]  \n  \n [!code-cs[Shell_TaskbarItemSample#100](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#100)]\n [!code-vb[Shell_TaskbarItemSample#100](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#100)]"
  syntax:
    content: 'public sealed class TaskbarItemInfo : System.Windows.Freezable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: System.Windows.Shell.TaskbarItemInfo.TaskbarItemInfo()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "初始化的新实例<xref href=&quot;System.Windows.Shell.TaskbarItemInfo&quot;></xref>类。"
  syntax:
    content: public TaskbarItemInfo ();
    parameters: []
  overload: System.Windows.Shell.TaskbarItemInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  id: Description
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: System.Windows.Shell.TaskbarItemInfo.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置任务栏项工具提示的文本。"
  remarks: "当鼠标指针位于任务栏按钮上方时，将上面任务栏缩略图显示工具提示。 如果由于用户设置而未显示任务栏缩略图，仍将显示工具提示。       下图显示任务栏工具提示说明。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏说明"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the Description property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "任务栏项工具提示的文本。 默认值为一个空字符串。"
  overload: System.Windows.Shell.TaskbarItemInfo.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  id: DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.Description*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.Description*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DescriptionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  id: Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: System.Windows.Shell.TaskbarItemInfo.Overlay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置任务栏按钮中的程序图标上显示的图像。"
  remarks: "可以将映像添加到任务栏按钮传达给用户的应用程序状态中的程序图标。 在覆盖区上使用静态或动态<xref:System.Windows.Media.ImageSource>置于中任务栏按钮的图标的右下角。</xref:System.Windows.Media.ImageSource> 如果用户设置为显示小图标任务栏，不会显示在覆盖区。       在通知区域中，这是在任务栏最右侧，程序图标通常用于传达给用户的应用程序状态。 在[!INCLUDE[win7](~/add/includes/win7-md.md)]，程序图标的通知区域中默认情况下，隐藏，因此，很少用于传达状态。 你可以使用中的任务栏按钮覆盖[!INCLUDE[win7](~/add/includes/win7-md.md)]传达状态，当处于隐藏状态通知区域中的图标。 你的应用程序可以检测的 Windows 版本，并提供适合于操作系统的方式的通知。       覆盖图像呈现按适当的大小。 如果<xref:System.Windows.Media.ImageSource>表示<xref:System.Drawing.Icon>，还使用适当的位深度。</xref:System.Drawing.Icon> </xref:System.Windows.Media.ImageSource>       下图显示任务栏覆盖。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏覆盖"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the Overlay property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]  \n  \n The following example shows how to set the Overlay property in code.  \n  \n [!code-cs[Shell_TaskbarItemSample#121](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#121)]\n [!code-vb[Shell_TaskbarItemSample#121](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#121)]"
  syntax:
    content: public System.Windows.Media.ImageSource Overlay { get; set; }
    return:
      type: System.Windows.Media.ImageSource
      description: "任务栏按钮中的程序图标上方显示的图像。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.TaskbarItemInfo.Overlay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  id: OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.Overlay*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.Overlay*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty OverlayProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  id: ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示任务栏按钮的进度指示器的显示方式。"
  remarks: "你可以通过显示进度指示器中的传达的长时间运行任务的进度[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏按钮。 指示器的颜色由 ProgressState 属性，其中包含之一<xref:System.Windows.Shell.TaskbarItemProgressState>枚举值。</xref:System.Windows.Shell.TaskbarItemProgressState> ProgressState 时<xref:System.Windows.Shell.TaskbarItemProgressState>，该标记是绿色。</xref:System.Windows.Shell.TaskbarItemProgressState> 当<xref:System.Windows.Shell.TaskbarItemProgressState>，该标记是黄色。</xref:System.Windows.Shell.TaskbarItemProgressState> 时<xref:System.Windows.Shell.TaskbarItemProgressState>，该标记是 red.</xref:System.Windows.Shell.TaskbarItemProgressState> 对于这些状态，<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性确定的进度指示器的填充量任务栏按钮。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>对于 ProgressState 其他值，将忽略。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> <xref:System.Windows.Shell.TaskbarItemProgressState>显示跨整个任务栏按钮闪烁的绿色指示器。</xref:System.Windows.Shell.TaskbarItemProgressState> <xref:System.Windows.Shell.TaskbarItemProgressState>。</xref:System.Windows.Shell.TaskbarItemProgressState>显示没有指示器       下图显示中的任务栏进度指示器<xref:System.Windows.Shell.TaskbarItemProgressState>状态。</xref:System.Windows.Shell.TaskbarItemProgressState>       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏进度指示器"
  example:
  - "The following example shows how to set the ProgressState property in code. The state is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=fullName> event to indicate whether the background task was stopped by the user, ended with an error, or completed normally. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-cs[Shell_TaskbarItemSample#120](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#120)]\n [!code-vb[Shell_TaskbarItemSample#120](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#120)]"
  syntax:
    content: public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }
    return:
      type: System.Windows.Shell.TaskbarItemProgressState
      description: "一个枚举值，该值指示任务栏按钮的进度指示器的显示方式。 默认值是<xref href=&quot;System.Windows.Shell.TaskbarItemProgressState&quot;> </xref>。"
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  id: ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressState*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressStateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  id: ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示任务栏按钮中的进度指示器的填充度。"
  remarks: "ProgressValue 属性表示为介于 0.0 和 1.0 之间的值。 较小且更大的数字将被强制为这些边界内。 <xref:System.Double>被强制转换为 0。</xref:System.Double>       你可以通过显示进度指示器中的传达的长时间运行任务的进度[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏按钮。 指示器的颜色由<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>属性，其中包含之一<xref:System.Windows.Shell.TaskbarItemProgressState>枚举值。</xref:System.Windows.Shell.TaskbarItemProgressState> </xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 如果<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>属性是<xref:System.Windows.Shell.TaskbarItemProgressState>， <xref:System.Windows.Shell.TaskbarItemProgressState>，或<xref:System.Windows.Shell.TaskbarItemProgressState>，ProgressValue 属性确定的进度指示器的填充度。</xref:System.Windows.Shell.TaskbarItemProgressState> </xref:System.Windows.Shell.TaskbarItemProgressState> </xref:System.Windows.Shell.TaskbarItemProgressState> </xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 对于<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>.</xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>的某些值，将忽略 ProgressValue <xref:System.Windows.Shell.TaskbarItemProgressState>显示跨整个任务栏按钮闪烁的绿色指示器。</xref:System.Windows.Shell.TaskbarItemProgressState> <xref:System.Windows.Shell.TaskbarItemProgressState>。</xref:System.Windows.Shell.TaskbarItemProgressState>显示没有指示器       下图显示为 82 %progressvalue 任务栏进度指示器。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏进度指示器"
  example:
  - "The following example shows how to set the ProgressValue property in code. The value is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=fullName> event to indicate the current progress of the background task. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-cs[Shell_TaskbarItemSample#130](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#130)]\n [!code-vb[Shell_TaskbarItemSample#130](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#130)]"
  syntax:
    content: public double ProgressValue { get; set; }
    return:
      type: System.Double
      description: "一个值，该值指示任务栏按钮中的进度指示器的填充度。 默认值为 0。"
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  id: ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressValueProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  id: ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置的集合<xref href=&quot;System.Windows.Shell.ThumbButtonInfo&quot;></xref>与关联的对象<xref href=&quot;System.Windows.Window&quot;> </xref>。"
  remarks: "可以将按钮添加到任务栏缩略图，以允许用户访问的常见任务不需要他们切换到应用程序窗口。 例如，Windows Media Player 提供的应用程序最小化时让用户控制媒体的播放，从任务栏缩略图的播放、 暂停、 转发和后按钮。 在任务栏缩略图中的按钮都由<xref:System.Windows.Shell.ThumbButtonInfo>对象和 ThumbButtonInfos 集合中所含。</xref:System.Windows.Shell.ThumbButtonInfo>       [!INCLUDE[win7](~/add/includes/win7-md.md)] Shell 任务栏缩略图中允许的最大七个按钮。 如果超过七<xref:System.Windows.Shell.ThumbButtonInfo>对象添加到<xref:System.Windows.Shell.ThumbButtonInfoCollection>，其他对象被视为溢出。</xref:System.Windows.Shell.ThumbButtonInfoCollection> </xref:System.Windows.Shell.ThumbButtonInfo> 一个按钮时<xref:System.Windows.Visibility>，它不具有任何可见的元素，而且系统没有空间保留为其</xref:System.Windows.Visibility> 在此示例中为其他按钮中从<xref:System.Windows.Shell.ThumbButtonInfoCollection>显示溢出。</xref:System.Windows.Shell.ThumbButtonInfoCollection>       下图显示了任务栏预览的两个 thumb 按钮的集合。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏 Thumb 按钮"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }
    return:
      type: System.Windows.Shell.ThumbButtonInfoCollection
      description: "集合<xref href=&quot;System.Windows.Shell.ThumbButtonInfo&quot;></xref>与关联的对象<xref href=&quot;System.Windows.Window&quot;> </xref>。 默认值为空集合。"
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  id: ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  id: ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，指定在任务栏缩略图中显示的应用程序窗口的客户端区域的一部分。"
  remarks: "默认情况下，[!INCLUDE[win7](~/add/includes/win7-md.md)]任务栏显示应用程序窗口工作区的缩放缩略图。 你可以设置 ThumbnailClipMargin 属性来指定的缩略图中显示的客户端窗口裁剪的区域。 例如，如果你想要专注于的窗口内容的缩略图，而排除应用程序工具栏，则此属性可。 此属性不能用于在尚未显示在应用程序窗口中的缩略图中显示内容。       指定的区域设置显示缩略图中<xref:System.Windows.Thickness>区域的边框。</xref:System.Windows.Thickness> 边框开始客户端窗口的边缘，并指定的量向内扩展。 缩略图中将显示在边框内的内容。       下图显示定义 ThumbnailClipMargin 的边框。       ![缩略图剪辑边距](~/add/media/wpfshell-clipmargin.png &quot;缩略图剪辑边距&quot;)缩略图剪辑边距边框下图显示剪切的缩略图预览。       ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png &quot;任务栏项目信息示例&quot;)Windows 任务栏缩略图预览"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the ThumbnailClipMargin property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Thickness ThumbnailClipMargin { get; set; }
    return:
      type: System.Windows.Thickness
      description: "一个值，指定在任务栏缩略图中显示的应用程序窗口的客户端区域的一部分。 默认值为空<xref href=&quot;System.Windows.Thickness&quot;> </xref>。"
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  id: ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*>依赖项属性。</xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Freezable
  isExternal: false
  name: System.Windows.Freezable
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: System.Windows.Shell.TaskbarItemInfo.TaskbarItemInfo()
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore()
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: System.Windows.Shell.TaskbarItemInfo.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: System.Windows.Shell.TaskbarItemInfo.Overlay
- uid: System.Windows.Media.ImageSource
  parent: System.Windows.Media
  isExternal: false
  name: ImageSource
  nameWithType: ImageSource
  fullName: System.Windows.Media.ImageSource
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressState
- uid: System.Windows.Shell.TaskbarItemProgressState
  parent: System.Windows.Shell
  isExternal: false
  name: TaskbarItemProgressState
  nameWithType: TaskbarItemProgressState
  fullName: System.Windows.Shell.TaskbarItemProgressState
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValue
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
- uid: System.Windows.Shell.ThumbButtonInfoCollection
  parent: System.Windows.Shell
  isExternal: false
  name: ThumbButtonInfoCollection
  nameWithType: ThumbButtonInfoCollection
  fullName: System.Windows.Shell.ThumbButtonInfoCollection
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo.TaskbarItemInfo
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore
  nameWithType: TaskbarItemInfo.CreateInstanceCore
- uid: System.Windows.Shell.TaskbarItemInfo.Description*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
