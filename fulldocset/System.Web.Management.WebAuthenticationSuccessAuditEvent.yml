### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent
  id: WebAuthenticationSuccessAuditEvent
  children:
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent
  type: Class
  summary: "提供有关成功通过身份验证事件的信息。"
  remarks: "ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</xref:System.Web.Management> 它还包含在管理运行状况事件期间帮助的支持类型。       以下列表介绍用于 ASP.NET 将引发类型 WebAuthenticationSuccessAuditEvent 的事件的功能。      1> [!NOTE]&1;> 默认情况下，ASP.NET 配置为日志记录成功登录审核失败条件仅，条件会严重损害系统资源。  你始终可以配置系统记录成功的情况。      -窗体身份验证。 审核成功的条件。 成功审核包括经过身份验证的用户名称。 相反，失败审核不包括用户名称，因为它们通常来自解密或验证失败的票证。 同时包含客户端的 IP 地址。 相关的事件审核代码是<xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>      的成员身份。 审核成功的条件。 成功和失败审核包含试图的用户名。 审核任何一种形式将包含已尝试的密码，因为，将保留在日志中有效的密码的危险。 相关的事件审核代码是<xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       当引发 WebAuthenticationSuccessAuditEvent 时，默认情况下它会更新身份验证成功事件引发的性能计数器。 若要查看在系统监视器 (PerfMon)，此性能计数器中**添加计数器**窗口中选择**ASP.NET**中**性能对象**下拉列表中，选择身份验证成功事件引发的性能计数器，然后单击**添加**按钮。 有关详细信息，请参阅[与 ASP.NET 应用程序中使用系统监视器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) MSDN 上。      1> [!NOTE]&1;> 在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。 你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关示例的派生自<xref:System.Web.Management.WebBaseEvent>类，请参阅本主题中提供的示例。</xref:System.Web.Management.WebBaseEvent>"
  example:
  - "This code example has two parts: a configuration-file excerpt, followed by code that shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n This following is an excerpt of the configuration file's `provider` and `eventMappings` sections. They are already set by default. The only thing you need to do is to provide the setup for the `rules` element in the `healthMonitoring` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <providers>  \n      // Configure the provider to process   \n      // the health events.  \n      <add name=\"EventLogProvider\"  \n         type=\"System.Web.Management.EventLogWebEventProvider,  \n         System.Web,Version=2.0.3600.0,Culture=neutral,  \n         PublicKeyToken=b03f5f7f11d50a3a\"/>  \n    </providers>  \n  \n    <eventMappings>  \n       <clear />  \n       // Configure the custom event   \n       // to handle the audit events.   \n        <add name=\"SampleWebAuthenticationSuccessAuditEvent\"   \n          type=\"SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  \n          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   \n          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL\" />  \n  \n     </eventMappings>  \n     <rules>  \n       <clear/>  \n       // Establish the connection between custom event   \n       // and the provider that must process it.  \n      <add name=\"Log Authentication Success Audits\"   \n        eventName=\"SampleWebAuthenticationFailureAuditEvent\"  \n        provider=\"EventLogProvider\"   \n        profile=\"Custom\" />\\  \n     </rules>  \n  \n</healthMonitoring>  \n```  \n  \n The following code shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._10_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._10_1.cs)]"
  syntax:
    content: 'public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  - System.Web.Management.WebSuccessAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebAuthenticationSuccessAuditEvent&quot;></xref>类使用提供的参数。"
  remarks: "ASP.NET 运行状况监视系统在内部使用此构造函数。 你不应使用它来实例化的<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>对象，但你可以调用此构造函数时实现你自己的事件类型继承此类。</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      1> [!NOTE]&1;> WebAuthenticationSuccessAuditEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>类</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>派生时，可以调用 WebAuthenticationSuccessAuditEvent 构造函数"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/visualbasic/f06e0196-5c99-4ca7-a77b-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/csharp/f06e0196-5c99-4ca7-a77b-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "事件说明。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: nameToAuthenticate
      type: System.String
      description: "经过身份验证的用户的名称。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;></xref>类使用提供的参数。"
  remarks: "ASP.NET 运行状况监视系统在内部使用此构造函数。 你不应使用它来实例化的<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>对象，但你可以调用此构造函数时实现你自己的事件类型继承此类。</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      1> [!NOTE]&1;> WebAuthenticationSuccessAuditEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>类</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>派生时，可以调用 WebAuthenticationSuccessAuditEvent 构造函数"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/afac7708-6243-4126-b8c9-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/afac7708-6243-4126-b8c9-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "事件说明。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref>值，该值指定事件的详细的标识符。"
    - id: nameToAuthenticate
      type: System.String
      description: "经过身份验证的用户的名称。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  id: NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取经过身份验证的用户的名称。"
  remarks: "只有成功审核包括已经过身份验证的用户的名称。 失败审核不包括用户名称，因为它们通常来源于失败的解密或验证。"
  example:
  - "The following code example shows how to use the NameToAuthenticate property.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/p-system.web.management._21_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/p-system.web.management._21_1.cs)]"
  syntax:
    content: public string NameToAuthenticate { get; }
    return:
      type: System.String
      description: "经过身份验证的用户的名称。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: System.Web.Management.WebSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
