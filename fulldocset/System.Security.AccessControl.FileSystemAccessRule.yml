### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAccessRule
  id: FileSystemAccessRule
  children:
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
  type: Class
  summary: "表示定义的文件或目录的访问规则的访问控制项 (ACE) 的抽象。 此类不能被继承。"
  remarks: "FileSystemAccessRule 类表示基础访问控制项 (ACE)，指定的用户帐户，要提供 （读取、 写入和等等） 的访问的类型的抽象，以及是否允许或拒绝该权限。  此类还可以指定如何将访问规则传播到子对象。       FileSystemAccessRule 类用于创建新的访问规则。  您可以保留规则使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_4_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_4_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_4_1.cpp)]"
  syntax:
    content: 'public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>类使用对用户帐户、 一个值，指定访问规则，与关联的操作的类型和一个值，指定是允许还是拒绝该操作的引用。"
  remarks: "使用此构造函数创建访问控制规则，您可以保留使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  访问控制规则定义确定哪些操作是允许还是不允许在运行 Microsoft Windows 计算机上的用户帐户权限。"
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封装到用户帐户的引用的对象。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>参数不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> type </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>类使用的用户帐户、 一个值，指定访问规则，与关联的操作的类型和一个值，描述是允许还是拒绝该操作的名称。"
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/33a6ea58-04ff-40ef-bfcd-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/33a6ea58-04ff-40ef-bfcd-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/33a6ea58-04ff-40ef-bfcd-_1.cpp)]"
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "用户帐户的名称。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> type </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>类使用对用户帐户，一个值，指定与访问规则、 值，该值确定如何继承权限、 一个值，确定如何传播的权限和一个值，指定是允许还是拒绝该操作关联的操作类型的引用。"
  remarks: "使用此构造函数创建访问控制规则，您可以保留使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>类。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  访问控制规则定义确定哪些操作是允许还是不允许在运行 Microsoft Windows 计算机上的用户帐户权限。"
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封装到用户帐户的引用的对象。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何将访问掩码传播到子对象的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定访问控制项 (Ace) 如何传播到子对象的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>参数不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> type </code>参数。       -或-不正确枚举被传递给<code> inheritanceFlags </code>参数。       -或-不正确枚举被传递给<code> propagationFlags </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>类使用的用户帐户，一个值，指定与访问规则、 值，该值确定如何继承权限、 一个值，确定如何传播的权限和一个值，指定是允许还是拒绝该操作关联的操作类型的名称。"
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "用户帐户的名称。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "之一<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>指定与访问规则关联的操作类型的值。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>指定如何将访问掩码传播到子对象的值。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "之一<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>指定访问控制项 (Ace) 如何传播到子对象的值。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "之一<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，该值指定是允许还是拒绝该操作。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正确枚举被传递给<code> type </code>参数。       -或-不正确枚举被传递给<code> inheritanceFlags </code>参数。       -或-不正确枚举被传递给<code> propagationFlags </code>参数。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>与当前关联标志<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>对象。"
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>与当前关联标志<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>对象。"
  overload: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
