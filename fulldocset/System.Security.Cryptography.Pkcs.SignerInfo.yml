### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  id: SignerInfo
  children:
  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.Version
  langs:
  - csharp
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
  type: Class
  summary: 'SignerInfo 类表示与关联的签名者<xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;></xref>表示 CMS/PKCS #7 消息的对象。'
  remarks: "通过消息内容或签名，可以是由 SignerInfo 类表示的签名。 后一种签名称为*副署*。       此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。       此类没有公共构造函数;因此，它不能公开实例化。 它是只读的类可从访问<xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>属性。</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>"
  syntax:
    content: public sealed class SignerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  id: Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "证书属性检索与该签名者信息关联的签名证书。"
  remarks: "如果签名的证书不包括在签名时使用<xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>不会返回属性，则该证书。</xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>表示签名证书的对象。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'CheckHash 方法验证该 CMS/PKCS #7 消息签名者信息的数据完整性。 CheckHash 是专用的方法，用于在特定的安全基础结构应用程序中使用者使用**HashOnly**的成员<xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;></xref>枚举设置时<xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;></xref>对象。 CheckHash 不验证签署人的信息，因为此方法不涉及验证数字签名。 对于通用检查的完整性和 CMS/PKCS #7 消息签署人的信息和副署的身份验证，请使用&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt;或&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt;方法。'
  remarks: '此方法不提供身份验证的 CMS/PKCS #7 消息签署人的信息。'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 方法验证数字签名的消息，并 （可选） 验证证书。"
  remarks: "如果数字签名验证失败或不满足任何验证要求，此方法将引发异常。       如果需要更复杂的验证，调用方可以指定仅对签名进行验证，然后使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象来执行自定义验证。</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "一个布尔值，指定是否验证仅数字签名。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，仅对签名进行验证。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、 验证数字签名、 证书链已验证，和证书的用途进行验证。 如果证书有无使用密钥或密钥的使用情况工具支持数字签名或不可否认性，则认为有效证书的用途。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "不接受它作为有效自变量的方法传递空引用。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "方法调用对于对象的当前状态无效。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 方法通过使用指定的证书集合进行验证的消息的数字签名，并 （可选） 验证证书。"
  remarks: "如果数字签名验证失败或不满足任何验证要求，此方法将引发异常。       如果需要更复杂的验证，调用方可以指定仅对签名进行验证，然后使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象来执行自定义验证。</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref>可以用于验证链的对象。 如果没有其他证书，则可用于验证链，请使用&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt;而不是 CheckSignature。"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "一个布尔值，指定是否验证仅数字签名。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，仅对签名进行验证。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、 验证数字签名、 证书链已验证，和证书的用途进行验证。 如果证书有无使用密钥或密钥的使用情况工具支持数字签名或不可否认性，则认为有效证书的用途。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "不接受它作为有效自变量的方法传递空引用。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "方法调用对于对象的当前状态无效。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  id: ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 方法提示用户选择签名证书，创建副署，并将签名添加到 CMS/PKCS #7 消息。 副署仅限于一个级别。'
  remarks: "此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。       此方法会显示在其中选择为此消息的签名者的用户界面。 这要求当前进程是否正在*用户交互模式*，这意味着，<xref:System.Environment.UserInteractive%2A?displayProperty=fullName>属性设置为`true`。</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> 进程在用户交互模式中处于正常情况下，除非它为服务进程或在 Web 应用程序内部运行。       将列表中显示其证书满足以下条件的签名者:-证书具有关联的私钥。      -证书是在其有效期内。      -证书具有没有密钥用法或支持数字签名或不可否认性的密钥用法。       签名者的证书选择从 My 存储区。      ## 需要以下权限来显示用户界面的.NET framework 安全性:-<xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>访问的签名密钥所需的以下权限:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "不接受它作为有效自变量的方法传递空引用。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 方法创建使用指定的签名者的副署，并将签名添加到 CMS/PKCS #7 消息。 副署仅限于一个级别。'
  remarks: "此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。      ## .NET framework 安全访问签名密钥所需的以下权限:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref>表示副署签名者的对象。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "不接受它作为有效自变量的方法传递空引用。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  id: CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CounterSignerInfos 属性检索副署签名者签署人的信息与关联的集。"
  remarks: '此实现的 CMS/PKCS #7 仅支持一个级别的副署。 也就是说，可以签名的签名，形成副署，但不能重新签署该副署。'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref>表示副署的签名程序信息的集合。 如果不有任何副署签名者，该属性为空集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "DigestAlgorithm 属性检索<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>对象，表示用于计算签名的哈希算法。"
  syntax:
    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "<xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>对象，表示用于计算签名的哈希算法。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  id: RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 方法中删除的指定索引处的副署<xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>集合。</xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>"
  syntax:
    content: public void RemoveCounterSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "若要删除的副署的从零开始的索引。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 方法中删除指定的副署<xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;></xref>对象。"
  syntax:
    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);
    parameters:
    - id: counterSignerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref>对象，表示要删除的副署。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "不接受它作为有效自变量的方法传递空引用。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "自变量的值已超出允许的范围的值由调用的方法定义。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "无法完成加密操作。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  id: SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignedAttributes 属性检索<xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;></xref>签署人的信息与相关联的有符号的属性的集合。 签名的特性进行签名的其余部分的消息内容。"
  remarks: "可能包括在签名属性示例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>SignedAttributes 属性检索的集合是<xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>签名时间属性。</xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> </xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>       签名的特性进行签名的其余部分的<xref:System.Security.Cryptography.Pkcs.SignedCms>消息内容。</xref:System.Security.Cryptography.Pkcs.SignedCms> 这意味着，已成功验证签名的当事方可以确信的这些特性的内容可信的且未更改。       A<xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>对象和一个<xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>对象将自动生成并放入 SignedAttributes 属性每当<xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName>相应签名者的属性不为空。</xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> </xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> </xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>表示带符号的特性集合。 如果没有已签名的特性，该属性为空集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  id: SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignerIdentifier 属性检索签名者签署人的信息与关联的证书标识符。"
  syntax:
    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifier
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifier&quot;> </xref>唯一标识与该签名者信息关联的证书的对象。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  id: UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "UnsignedAttributes 属性检索<xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;></xref>的无符号与关联的属性集合<xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;></xref>内容。 无符号的属性可以修改不会导致无效签名。"
  remarks: "无符号的属性未签名的其余部分的<xref:System.Security.Cryptography.Pkcs.SignedCms>消息内容。</xref:System.Security.Cryptography.Pkcs.SignedCms> 即使当事方成功验证签名，未签名的特性将未修改，并且不应视为具有可靠性或完整性。       可能包括在无符号属性示例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>UnsignedAttributes 属性检索的集合是一个副署。</xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>表示的无符号的特性的集合。 如果不有任何无符号的属性，该属性为空集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "版本属性检索的签名者信息版本。"
  remarks: '版本确定消息是否是 PKCS #7 消息或加密消息语法 (CMS) 的消息。 CMS 是 PKCS #7 的较新超集。'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "Int 值，指定的签名者信息版本。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifier
  nameWithType: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash
  nameWithType: SignerInfo.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature
  nameWithType: SignerInfo.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature
  nameWithType: SignerInfo.ComputeCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature
  nameWithType: SignerInfo.RemoveCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
