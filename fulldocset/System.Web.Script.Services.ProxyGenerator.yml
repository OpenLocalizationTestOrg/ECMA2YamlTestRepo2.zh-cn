### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ProxyGenerator
  id: ProxyGenerator
  children:
  - System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)
  - System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)
  langs:
  - csharp
  name: ProxyGenerator
  nameWithType: ProxyGenerator
  fullName: System.Web.Script.Services.ProxyGenerator
  type: Class
  summary: "表示代理代码生成器。"
  remarks: "使用<xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>方法来检索用来生成 Web 服务的代理类的 ECMAScript (JavaScript) 代码[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]服务，或具有的静态页方法的<xref:System.Web.Services.WebMethodAttribute>应用的属性。</xref:System.Web.Services.WebMethodAttribute> </xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>"
  syntax:
    content: public static class ProxyGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)
  id: GetClientProxyScript(System.Type,System.String,System.Boolean)
  parent: System.Web.Script.Services.ProxyGenerator
  langs:
  - csharp
  name: GetClientProxyScript(Type,String,Boolean)
  nameWithType: ProxyGenerator.GetClientProxyScript(Type,String,Boolean)
  fullName: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(Type,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "检索指定类型的代理生成代码。"
  remarks: "GetClientProxyScript 方法返回 Web 服务时，代理生成 ECMAScript (JavaScript)[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]服务，或具有的静态页方法的<xref:System.Web.Services.WebMethodAttribute>应用的属性。</xref:System.Web.Services.WebMethodAttribute> `type`参数包含的类型的 Web 服务类、 WCF 服务类或 ASP.NET 页类。 当该类型为 WCF 服务类或接口、 类或接口必须具有<xref:System.ServiceModel.ServiceContractAttribute>应用的属性。</xref:System.ServiceModel.ServiceContractAttribute> 如果`debug`参数是`true`，生成的代码包含 XML 代码注释，可以用于 IntelliSense 支持中[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]或其他开发环境。 因此，生成的大小是脚本的更大。"
  syntax:
    content: public static string GetClientProxyScript (Type type, string path, bool debug);
    parameters:
    - id: type
      type: System.Type
      description: "要获取的脚本的对象类型。"
    - id: path
      type: System.String
      description: "终结点的位置。"
    - id: debug
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括 XML 代码注释;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "代理生成代码。"
  overload: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> or <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "为代理生成不支持指定的类型。"
  platform:
  - net462
- uid: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)
  id: GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.Web.Script.Services.ProxyGenerator
  langs:
  - csharp
  name: GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
  nameWithType: ProxyGenerator.GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
  fullName: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "检索使用路径和服务终结点的指定类型的代理生成代码。"
  remarks: "<xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>方法返回 Web 服务时，代理生成 ECMAScript (JavaScript)[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]服务，或具有的静态页方法的<xref:System.Web.Services.WebMethodAttribute>应用的属性。</xref:System.Web.Services.WebMethodAttribute> </xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A> `type`参数包含的类型的 Web 服务类、 WCF 服务类或 ASP.NET 页类。 当该类型为 WCF 服务类或接口、 类或接口必须具有<xref:System.ServiceModel.ServiceContractAttribute>应用的属性。</xref:System.ServiceModel.ServiceContractAttribute> 如果`debug`参数是`true`，生成的代码包含 XML 代码注释，可以用于 IntelliSense 支持中[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]或其他开发环境。 因此，生成的大小是脚本的更大。"
  syntax:
    content: public static string GetClientProxyScript (Type type, string path, bool debug, System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);
    parameters:
    - id: type
      type: System.Type
      description: "要获取的脚本的对象类型。"
    - id: path
      type: System.String
      description: "终结点的位置。"
    - id: debug
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括 XML 代码注释;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: serviceEndpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "服务终结点。"
    return:
      type: System.String
      description: "代理生成代码。"
  overload: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> or <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "为代理生成不支持指定的类型。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)
  parent: System.Web.Script.Services.ProxyGenerator
  isExternal: false
  name: GetClientProxyScript(Type,String,Boolean)
  nameWithType: ProxyGenerator.GetClientProxyScript(Type,String,Boolean)
  fullName: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(Type,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.Web.Script.Services.ProxyGenerator
  isExternal: false
  name: GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
  nameWithType: ProxyGenerator.GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
  fullName: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(Type,String,Boolean,ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Web.Script.Services.ProxyGenerator.GetClientProxyScript*
  parent: System.Web.Script.Services.ProxyGenerator
  isExternal: false
  name: GetClientProxyScript
  nameWithType: ProxyGenerator.GetClientProxyScript
