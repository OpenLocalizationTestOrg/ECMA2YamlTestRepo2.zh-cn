### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlMemberInvoker
  id: XamlMemberInvoker
  children:
  - System.Xaml.Schema.XamlMemberInvoker.#ctor
  - System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  - System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  - System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
  type: Class
  summary: "提供一个扩展点，它可以访问通过反射以外的技术的 XAML 成员的成员特征。"
  remarks: "XamlMemberInvoker 的目的是启用可扩展的 XAML 类型系统、 架构和一个有效的运行时不依赖于完全 CLR 功能，例如 CLR 特性，通过反射信息<xref:System.Type>和<xref:System.Reflection.MemberInfo>，依次类推。</xref:System.Reflection.MemberInfo> </xref:System.Type> XAML 的架构类，例如<xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>的备用构造函数的 XamlMemberInvoker 子类使用作为输入参数 你可以子类<xref:System.Xaml.XamlMember>并将通过 XamlMemberInvoker 传递到基构造函数。</xref:System.Xaml.XamlMember> 以及定义构造函数 XamlMemberInvoker，你还必须提供替代至少的一些`Lookup` <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>方法       XamlMemberInvoker 具有默认的实现。 默认实现到 XAML 架构类型的默认实现中遵循类似的模型<xref:System.Xaml.XamlType>和<xref:System.Xaml.XamlMember>: CLR 类型系统用于实例化、 值和查找操作，包括使用 CLR 特性<xref:System.Type>和<xref:System.Reflection.MemberInfo>，依次类推。</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlMemberInvoker 进行基本的 get 和 set 运算 (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; 提供的方法<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A></xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> 它还提供了属性<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>和<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>，但它们不是虚拟。</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>      1> [!NOTE]&1;> 有可能获取 XamlMemberInvoker 值表示 XAML 指令，它将作为 System.Xaml 实现中的专用类实现。 如果你尝试调用<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>或<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>上此调用程序会引发异常。</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>"
  syntax:
    content: public class XamlMemberInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新实例<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>类。"
  remarks: "默认实现为空。       内部调用此构造函数来为<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>提供值 有关<xref:System.Xaml.Schema.XamlMemberInvoker>子类化，请应或者使用<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>构造的签名或提供重写调用<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>作为基础。</xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker> 提供<xref:System.Xaml.XamlMember>实现的默认模式 where<xref:System.Xaml.Schema.XamlMemberInvoker>不可变。</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: protected XamlMemberInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  id: '#ctor(System.Xaml.XamlMember)'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新实例<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>类，基于所提供<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。"
  remarks: "此构造函数调用，内部根据<xref:System.Xaml.XamlMember>其中<xref:System.Xaml.Schema.XamlMemberInvoker>用于构造。</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public XamlMemberInvoker (System.Xaml.XamlMember member);
    parameters:
    - id: member
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>值与此相关的特定 XAML 成员<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>member</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "从实例中获取相关属性的值。"
  syntax:
    content: public virtual object GetValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "该成员的所有者类型的实例。"
    return:
      type: System.Object
      description: "请求的属性值中。"
  overload: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在调用此方法<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>基于为未知<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。       **-或-**只写的成员上调用此方法。       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "设置实例的相关属性的值。"
  syntax:
    content: public virtual void SetValue (object instance, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "该成员的所有者类型的实例。"
    - id: value
      type: System.Object
      description: "要设置的属性值。"
  overload: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在调用此方法<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>基于为未知<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。       **-或-**只读成员上调用此方法。       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "指示是否需要通过序列化过程中保留的值。"
  remarks: "默认实现返回<xref:System.Xaml.Schema.ShouldSerializeResult>XAML 成员是否<xref:System.Xaml.XamlMember.IsUnknown%2A>，或如果没有与 CLR 反射相关`ShouldSerialize`默认反射通过基础成员上找不到方法。</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.Schema.ShouldSerializeResult>"
  syntax:
    content: public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "要检查其持久性的属性具有的实例。"
    return:
      type: System.Xaml.Schema.ShouldSerializeResult
      description: "枚举的值。"
  overload: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  id: UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "获取<xref:System.Reflection.MethodInfo>为 CLR 属性获取值的方法是适用于这<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  remarks: "此属性依赖于<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>在构造<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember>上</xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>调用 对于未知<xref:System.Xaml.XamlMember>，或用例其中<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>返回`null`，此属性返回`null`。</xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingGetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>为 CLR 属性获取值的方法是适用于这<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  id: UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "获取<xref:System.Reflection.MethodInfo>CLR 进行设置的属性的值的方法是适用于这<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  remarks: "此属性依赖于<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>在构造<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember>上</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>调用 对于未知<xref:System.Xaml.XamlMember>，或用例其中<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>返回`null`，此属性返回`null`。</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingSetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>CLR 进行设置的属性的值的方法是适用于这<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供一个静态值，表示未完全实现的未知<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  remarks: "提供此值<xref:System.Xaml.Schema.XamlMemberInvoker>System.Xaml 参数定义 API 将通常会导致调用的代码引发异常。</xref:System.Xaml.Schema.XamlMemberInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "一个静态值，表示未完全实现的未知<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
- uid: System.Xaml.Schema.ShouldSerializeResult
  parent: System.Xaml.Schema
  isExternal: false
  name: ShouldSerializeResult
  nameWithType: ShouldSerializeResult
  fullName: System.Xaml.Schema.ShouldSerializeResult
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue
  nameWithType: XamlMemberInvoker.GetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue
  nameWithType: XamlMemberInvoker.SetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: XamlMemberInvoker.ShouldSerializeValue
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
