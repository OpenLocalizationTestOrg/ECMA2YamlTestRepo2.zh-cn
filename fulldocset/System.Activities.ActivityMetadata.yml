### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityMetadata
  id: ActivityMetadata
  children:
  - System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  - System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  - System.Activities.ActivityMetadata.AddValidationError(System.String)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  - System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.Environment
  - System.Activities.ActivityMetadata.Equals(System.Object)
  - System.Activities.ActivityMetadata.GetArgumentsWithReflection
  - System.Activities.ActivityMetadata.GetHashCode
  - System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  - System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  - System.Activities.ActivityMetadata.GetVariablesWithReflection
  - System.Activities.ActivityMetadata.HasViolations
  - System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.RequireExtension(System.Type)
  - System.Activities.ActivityMetadata.RequireExtension``1
  - System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  - System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  - System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  - System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  - System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  langs:
  - csharp
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
  type: Struct
  summary: "代表组的自变量、 子活动、 变量和委托，一个已配置<xref href=&quot;System.Activities.Activity&quot;></xref>引入执行环境。"
  syntax:
    content: public struct ActivityMetadata
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  id: AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将一个参数添加到活动的自变量的集合。"
  syntax:
    content: public void AddArgument (System.Activities.RuntimeArgument argument);
    parameters:
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "要添加到集合的参数。"
  overload: System.Activities.ActivityMetadata.AddArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  id: AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'
    parameters:
    - id: extensionProvider
      type: System.Func{T}
      description: "要添加。"
  overload: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  id: AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的活动添加到导入的子活动的元数据列表。"
  remarks: "导入的子活动是父活动不直接安排的子活动。 相反，之后父使用此活动配置一些其他子活动。"
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "要添加的活动。"
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  id: AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的活动添加到导入的子活动的元数据列表。"
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild, object origin);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "要添加的活动。"
    - id: origin
      type: System.Object
      description: "原点。"
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  id: AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的委托添加到导入的委托的元数据的列表。"
  remarks: "导入<xref:System.Activities.ActivityDelegate>是<xref:System.Activities.ActivityDelegate>，父活动不会直接调用。</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate> 相反，父使用这<xref:System.Activities.ActivityDelegate>配置一些其他子活动。</xref:System.Activities.ActivityDelegate>"
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "要添加的委托。"
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  id: AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的委托添加到导入的委托的元数据的列表。"
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "要添加的委托。"
    - id: origin
      type: System.Object
      description: "原点。"
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  id: AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的验证错误添加到验证错误的元数据集合。"
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][命令性代码基于验证](~/add/includes/ajax-current-ext-md.md)。'
  syntax:
    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);
    parameters:
    - id: validationError
      type: System.Activities.Validation.ValidationError
      description: "要添加的验证错误。"
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  id: AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将一个验证错误添加到使用指定的说明的验证错误的元数据集合。"
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][命令性代码基于验证](~/add/includes/ajax-current-ext-md.md)。'
  syntax:
    content: public void AddValidationError (string validationErrorMessage);
    parameters:
    - id: validationErrorMessage
      type: System.String
      description: "描述验证错误的消息。"
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  id: AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的变量添加到变量的元数据集合。"
  remarks: "使用此方法添加的变量被视为活动的公开配置图面的一部分，也就是说，它们将由活动的使用者提供。 例如，<xref:System.Activities.Statements.Sequence>添加中的变量其<xref:System.Activities.Statements.Sequence.Variables%2A>使用此方法的集合。</xref:System.Activities.Statements.Sequence.Variables%2A> </xref:System.Activities.Statements.Sequence> 活动的实现无法访问使用此方法添加的变量。 通过添加的活动<xref:System.Activities.ActivityMetadata.AddImportedChild%2A>（和它们的任何未实现子活动） 可以访问使用此方法添加的变量。</xref:System.Activities.ActivityMetadata.AddImportedChild%2A> 例如，<xref:System.Activities.Statements.Sequence>将添加其<xref:System.Activities.Statements.Sequence.Activities%2A>以这种方式的集合。</xref:System.Activities.Statements.Sequence.Activities%2A> </xref:System.Activities.Statements.Sequence>"
  syntax:
    content: public void AddVariable (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "要添加的变量。"
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  id: AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的变量添加到变量的元数据集合。"
  syntax:
    content: public void AddVariable (System.Activities.Variable variable, object origin);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "要添加的变量。"
    - id: origin
      type: System.Object
      description: "原点。"
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定绑定<xref href=&quot;System.Activities.Argument&quot;></xref>到指定<xref href=&quot;System.Activities.RuntimeArgument&quot;> </xref>。"
  syntax:
    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);
    parameters:
    - id: binding
      type: System.Activities.Argument
      description: "<xref href=&quot;System.Activities.Argument&quot;> </xref>绑定。"
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "<xref href=&quot;System.Activities.RuntimeArgument&quot;> </xref>绑定。"
  overload: System.Activities.ActivityMetadata.Bind*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Environment
  id: Environment
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取活动的<xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;></xref>的自变量、 变量、 委托自变量或符号引起<xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>。"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment Environment { get; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "活动的位置引用环境的自变量、 变量、 委托自变量或符号引起<xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>。"
  overload: System.Activities.ActivityMetadata.Environment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "确定指定的对象是否等于此元数据实例。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的对象是否等于此元数据实例;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.ActivityMetadata.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  id: GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回通过使用反射获取的自变量的集合。"
  remarks: "此方法使用某个活动的<xref:System.ComponentModel.TypeDescriptor>检查类型的所有公共属性<xref:System.Activities.Argument>并将它们返回集合中。</xref:System.Activities.Argument> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "自变量的集合。"
  overload: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetHashCode
  id: GetHashCode
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回此元数据实例的唯一标识符。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "一个整数，唯一标识此元数据实例。"
  overload: System.Activities.ActivityMetadata.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  id: GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "活动使用反射返回导入的子集合。"
  remarks: "此方法使用某个活动的<xref:System.ComponentModel.TypeDescriptor>检查类型的所有公共属性<xref:System.Activities.Activity>，或`IList<T>`或`ICollection<T>`其中`T`派生自<xref:System.Activities.Activity>，并将它们返回集合中。</xref:System.Activities.Activity> </xref:System.Activities.Activity> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> GetImportedChildrenWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "导入的子活动的集合。"
  overload: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  id: GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回使用反射的委托的集合。"
  remarks: "此方法使用某个活动的<xref:System.ComponentModel.TypeDescriptor>检查类型的所有公共属性<xref:System.Activities.ActivityDelegate>，或`IList<T>`或`ICollection<T>`其中`T`派生自<xref:System.Activities.ActivityDelegate>，并将它们返回集合中。</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> GetImportedDelegatesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "委托的集合。"
  overload: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  id: GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回使用反射的变量的集合。"
  remarks: "此方法使用某个活动的<xref:System.ComponentModel.TypeDescriptor>检查类型的所有公共属性<xref:System.Activities.Variable>，或`IList<T>`或`ICollection<T>`其中`T`派生自<xref:System.Activities.Variable>，并将它们返回集合中。</xref:System.Activities.Variable> </xref:System.Activities.Variable> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> GetVariablesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "变量的集合。"
  overload: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.HasViolations
  id: HasViolations
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取一个值，该值指示元数据中是否存在任何验证错误。"
  syntax:
    content: public bool HasViolations { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>验证错误是否存在;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.ActivityMetadata.HasViolations*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示两个指定的元数据实例是否相等。"
  syntax:
    content: public static bool op_Equality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "要比较的第一个项。"
    - id: right
      type: System.Activities.ActivityMetadata
      description: "要比较的第二个项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个项相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.ActivityMetadata.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示两个指定的元数据实例是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "要比较的第一个项。"
    - id: right
      type: System.Activities.ActivityMetadata
      description: "要比较的第二个项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两项是否不相等;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.ActivityMetadata.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  id: RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定活动需要在运行时指定的类型的扩展。"
  remarks: "如果主机无法提供指定类型的扩展，验证将失败。"
  syntax:
    content: public void RequireExtension (Type extensionType);
    parameters:
    - id: extensionType
      type: System.Type
      description: "扩展的类型。"
  overload: System.Activities.ActivityMetadata.RequireExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  id: RequireExtension``1
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void RequireExtension<T> () where T : class;'
    parameters: []
  overload: System.Activities.ActivityMetadata.RequireExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的参数集合添加到活动的自变量。"
  syntax:
    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);
    parameters:
    - id: arguments
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "要添加的参数。"
  overload: System.Activities.ActivityMetadata.SetArgumentsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  id: SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的集合添加为活动的活动的导入的子活动。"
  remarks: "这是调用的等效<xref:System.Activities.ActivityMetadata.AddImportedChild%2A>集合中每个项。</xref:System.Activities.ActivityMetadata.AddImportedChild%2A>"
  syntax:
    content: public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection<System.Activities.Activity> importedChildren);
    parameters:
    - id: importedChildren
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "要添加的活动。"
  overload: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  id: SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的集合添加为活动的导入委托。"
  remarks: "这是调用的等效<xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A>集合中每个项。</xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A>"
  syntax:
    content: public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> importedDelegates);
    parameters:
    - id: importedDelegates
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "要添加的委托。"
  overload: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的验证错误集合添加到验证错误的元数据集合。"
  syntax:
    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);
    parameters:
    - id: validationErrors
      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
      description: "要添加的验证错误。"
  overload: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  id: SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "将指定的变量集合添加到活动的变量。"
  syntax:
    content: public void SetVariablesCollection (System.Collections.ObjectModel.Collection<System.Activities.Variable> variables);
    parameters:
    - id: variables
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "要添加的变量。"
  overload: System.Activities.ActivityMetadata.SetVariablesCollection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
- uid: System.Activities.RuntimeArgument
  parent: System.Activities
  isExternal: false
  name: RuntimeArgument
  nameWithType: RuntimeArgument
  fullName: System.Activities.RuntimeArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
- uid: System.Activities.ActivityDelegate
  parent: System.Activities
  isExternal: false
  name: ActivityDelegate
  nameWithType: ActivityDelegate
  fullName: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
- uid: System.Activities.Validation.ValidationError
  parent: System.Activities.Validation
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Activities.Validation.ValidationError
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ActivityMetadata.Environment
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<RuntimeArgument>
  nameWithType: Collection<RuntimeArgument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.RuntimeArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.RuntimeArgument
    name: RuntimeArgument
    nameWithType: RuntimeArgument
    fullName: RuntimeArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetHashCode
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Activity>
  nameWithType: Collection<Activity>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ActivityDelegate>
  nameWithType: Collection<ActivityDelegate>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.ActivityDelegate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityDelegate
    name: ActivityDelegate
    nameWithType: ActivityDelegate
    fullName: ActivityDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.HasViolations
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationError>
  nameWithType: Collection<ValidationError>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Validation.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Validation.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
- uid: System.Activities.ActivityMetadata.AddArgument*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument
  nameWithType: ActivityMetadata.AddArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider<T>
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>
- uid: System.Activities.ActivityMetadata.AddImportedChild*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild
  nameWithType: ActivityMetadata.AddImportedChild
- uid: System.Activities.ActivityMetadata.AddImportedDelegate*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate
  nameWithType: ActivityMetadata.AddImportedDelegate
- uid: System.Activities.ActivityMetadata.AddValidationError*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError
  nameWithType: ActivityMetadata.AddValidationError
- uid: System.Activities.ActivityMetadata.AddVariable*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable
  nameWithType: ActivityMetadata.AddVariable
- uid: System.Activities.ActivityMetadata.Bind*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind
  nameWithType: ActivityMetadata.Bind
- uid: System.Activities.ActivityMetadata.Environment*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
- uid: System.Activities.ActivityMetadata.Equals*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals
  nameWithType: ActivityMetadata.Equals
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection
  nameWithType: ActivityMetadata.GetArgumentsWithReflection
- uid: System.Activities.ActivityMetadata.GetHashCode*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode
  nameWithType: ActivityMetadata.GetHashCode
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection
  nameWithType: ActivityMetadata.GetVariablesWithReflection
- uid: System.Activities.ActivityMetadata.HasViolations*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality
  nameWithType: ActivityMetadata.op_Equality
- uid: System.Activities.ActivityMetadata.op_Inequality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality
  nameWithType: ActivityMetadata.op_Inequality
- uid: System.Activities.ActivityMetadata.RequireExtension*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension
  nameWithType: ActivityMetadata.RequireExtension
- uid: System.Activities.ActivityMetadata.RequireExtension<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension<T>
  nameWithType: ActivityMetadata.RequireExtension<T>
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection
  nameWithType: ActivityMetadata.SetArgumentsCollection
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection
  nameWithType: ActivityMetadata.SetImportedChildrenCollection
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection
  nameWithType: ActivityMetadata.SetValidationErrorsCollection
- uid: System.Activities.ActivityMetadata.SetVariablesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection
  nameWithType: ActivityMetadata.SetVariablesCollection
