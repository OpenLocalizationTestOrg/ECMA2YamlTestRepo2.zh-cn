### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ZoneIdentityPermission
  id: ZoneIdentityPermission
  children:
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  - System.Security.Permissions.ZoneIdentityPermission.Copy
  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  - System.Security.Permissions.ZoneIdentityPermission.ToXml
  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission
  fullName: System.Security.Permissions.ZoneIdentityPermission
  type: Class
  summary: "定义标识权限的代码所源自的区域。 此类不能被继承。"
  remarks: "此权限可确定调用代码是否来自某特定区域。 区域根据 Microsoft Internet Explorer 选项中，配置和由 Internet Explorer IInternetSecurityManager 和相关的 Api 映射从 URL。 仅将确切的区域匹配项定义的权限;URL 只能属于一个区域。      -本地 intranet 区域︰ 本地 intranet 区域将用于位于公司的 intranet 上的内容。 由于服务器是公司的防火墙内，在 intranet 上的内容被分配更高级别的信任。      的受信任的站点区域︰ 受信任的站点区域将用于位于被视为多知名或可信比 Internet 上的其他站点的网站上的内容。 用户可以使用此区域分配给特定的 Internet 站点的更高级别的信任。 这些受信任的网站的 Url 需要用户映射到该区域。 默认情况下，受信任站点区域中的站点接收比 Internet 区域中没有更高的信任。 一个用户或公司需要更改它包含要提供更高级别的信任授予此区域，如果他们想在站点的信任级别。      -Internet 区域︰ Internet 区域用于 Internet 上不属于另一个区域的 Web 站点。 默认设置允许从这些站点仅最低访问权限用户的计算机上的资源下载的代码。 未映射到其他区域自动的网站都属于此区域。      -受限站点区域︰ 受限站点区域用于包含的内容可能会导致，或可能具有以前引起问题时下载的网站。 无法使用此区域，以防止从用户的计算机上运行这些站点下载的代码。 这些不受信任的网站的 Url 需要用户映射到该区域。      -本地计算机区域︰ 本地计算机区域是一个隐式区域是用于存在于用户的计算机的内容。 在用户的计算机，在本地系统上，由 Internet Explorer 缓存的内容除外上找到的内容被视为具有极高的信任级别。      1> [!IMPORTANT]&1;> 开头[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]，不使用标识权限。   >> 在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 从.NET Framework 2.0 版开始，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  remarks: "创建完全受限制 (`None`) 或`Unrestricted`权限。      1> [!NOTE] 1> 在.NET Framework 1.0 和 1.1 版中，标识权限不能具有<xref:System.Security.Permissions.PermissionState>权限状态值。</xref:System.Security.Permissions.PermissionState> 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着，在 2.0 及更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</xref:System.Security.Permissions.IUnrestrictedPermission> 也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。       在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 从.NET Framework 2.0 版开始，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。"
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/visualbasic/15a7f59e-a46d-4cbf-89a9-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/csharp/15a7f59e-a46d-4cbf-89a9-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "之一<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>参数不是有效的值的<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  id: '#ctor(System.Security.SecurityZone)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;></xref>类来表示指定的区域标识。"
  remarks: ''
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/visualbasic/66b125e0-a7cf-4ec2-89f3-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/csharp/66b125e0-a7cf-4ec2-89f3-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);
    parameters:
    - id: zone
      type: System.Security.SecurityZone
      description: "区域标识符。"
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回当前权限的相同副本。"
  remarks: "与原始权限情况下，一份权限表示对资源的相同的访问权限。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "当前权限的副本。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "重新构造具有指定状态的 XML 编码的权限。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "编码用于重新构造权限的 XML。"
  overload: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>参数不是有效的权限元素。       -或- <code> esd </code>参数的版本号无效。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回是当前权限和指定的权限的交集的权限。"
  remarks: "以下两个权限的交集是描述组的二者共同描述的操作的权限。 仅通过两个原始权限的请求将通过该交集。       两个相同的交集<xref:System.Security.Permissions.ZoneIdentityPermission>对象是相同的权限。</xref:System.Security.Permissions.ZoneIdentityPermission> 任何其他组合会导致的权限，则`null`。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要与当前权限相交的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示当前权限和指定的权限的交集的一个新权限。 此新权限为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集为空。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "确定当前权限是否为指定权限的子集。"
  remarks: "当前权限是指定权限的子集，如果两个权限相等或如果当前权限表示<xref:System.Security.SecurityZone>安全区域。</xref:System.Security.SecurityZone>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "将要测试子集关系的权限。 此权限必须是与当前权限属于同一类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限是指定权限; 的子集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，此权限不表示<xref href=&quot;System.Security.SecurityZone&quot;></xref>安全区域和指定的权限是否不等于当前的权限。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  id: SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置表示由当前的区域<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>。"
  syntax:
    content: public System.Security.SecurityZone SecurityZone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: "之一<xref href=&quot;System.Security.SecurityZone&quot;></xref>值。"
  overload: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "参数值不是有效的值的<xref href=&quot;System.Security.SecurityZone&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建权限及其当前状态的 XML 编码。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "权限，包括任何状态信息的 XML 编码。"
  overload: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建兼具当前权限和指定的权限的权限。"
  remarks: "对联合的调用的结果是由当前权限和指定的权限表示表示的安全区域的权限。 任何请求都会通过任一权限传递其联合。 两个相同的联合<xref:System.Security.Permissions.ZoneIdentityPermission>对象是相同的权限。</xref:System.Security.Permissions.ZoneIdentityPermission> Null 权限的并集和<xref:System.Security.Permissions.ZoneIdentityPermission>权限是不为 null 的权限。</xref:System.Security.Permissions.ZoneIdentityPermission>       请注意，<xref:System.Security.Permissions.ZoneIdentityPermission>对象，表示<xref:System.Security.SecurityZone>安全区域的视为 null 权限并作为一种特殊情况处理。</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> 联合<xref:System.Security.Permissions.ZoneIdentityPermission>对象，表示<xref:System.Security.SecurityZone>安全区域和 null 权限为 null。</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> 两个不同的区域标识权限的联合导致<xref:System.ArgumentException>的两个权限不表示时引发的异常<xref:System.Security.SecurityZone>安全区域。</xref:System.Security.SecurityZone> </xref:System.ArgumentException>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要与当前权限合并的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示同时兼具当前权限和指定的权限的新权限。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。       -或-这两个权限不相等且是当前权限不表示<xref href=&quot;System.Security.SecurityZone&quot;></xref>安全区域。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: ZoneIdentityPermission.Copy
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: ZoneIdentityPermission.FromXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: ZoneIdentityPermission.Intersect
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ZoneIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: ZoneIdentityPermission.ToXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Union*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union
  nameWithType: ZoneIdentityPermission.Union
