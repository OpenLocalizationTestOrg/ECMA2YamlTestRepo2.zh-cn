### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.TransactionFlowAttribute
  id: TransactionFlowAttribute
  children:
  - System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  - System.ServiceModel.TransactionFlowAttribute.Transactions
  langs:
  - csharp
  name: TransactionFlowAttribute
  nameWithType: TransactionFlowAttribute
  fullName: System.ServiceModel.TransactionFlowAttribute
  type: Class
  summary: "指定服务操作是否接受来自客户端的传入事务。"
  remarks: "TransactionFlowAttribute 是以声明方式用于将特定事务流策略与服务操作相关联的属性。 <xref:System.ServiceModel.TransactionFlowOption>的此属性的属性指定各个操作是否接受从客户端流入的事务，或如果该操作要求客户端始终流动事务。</xref:System.ServiceModel.TransactionFlowOption> TransactionFlowAttribute 还可作为操作行为来以编程方式将事务流策略与特定操作相关联。 在这种情况下，它应被添加到`Behaviors`上操作说明的集合。      1> [!NOTE]&1;>`OperationContract`为每个方法都使用 TransactionFlowAttribute 必须提供完全限定`Action`字符串。 值为&quot;*&quot;不支持。"
  example:
  - "The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \n  \n```  \nusing System;  \nusing System.ServiceModel;  \nusing System.Transactions;  \n  \nnamespace Microsoft.WCF.Documentation  \n{  \n  [ServiceContract(  \n    Namespace=\"http://microsoft.wcf.documentation\",   \n    SessionMode=SessionMode.Required  \n  )]  \n  public interface IBehaviorService  \n  {  \n    [OperationContract]  \n    [TransactionFlow(TransactionFlowOption.Mandatory)]  \n    string TxWork(string message);  \n  }  \n  \n  // Note: To use the TransactionIsolationLevel property, you   \n  // must add a reference to the System.Transactions.dll assembly.  \n  /* The following service implementation:  \n   *   -- Processes messages on one thread at a time  \n   *   -- Creates one service object per session  \n   *   -- Releases the service object when the transaction commits  \n   */  \n  [ServiceBehavior(  \n    ConcurrencyMode=ConcurrencyMode.Single,  \n    InstanceContextMode=InstanceContextMode.PerSession,  \n    ReleaseServiceInstanceOnTransactionComplete=true  \n  )]  \n  public class BehaviorService : IBehaviorService, IDisposable  \n  {  \n    Guid myID;  \n  \n    public BehaviorService()  \n    {  \n      myID = Guid.NewGuid();  \n      Console.WriteLine(  \n        \"Object \"  \n        + myID.ToString()  \n        + \" created.\");  \n    }  \n  \n    /*  \n    / * The following operation-level behaviors are specified:  \n    / * Always executes under a transaction scope.  \n    / * The transaction scope is completed when the operation  \n    / * terminates without an unhandled exception.  \n    /*  \n    [OperationBehavior(  \n      TransactionAutoComplete = true,  \n      TransactionScopeRequired = true  \n    )]  \n    public string TxWork(string message)  \n    {  \n      // Do some transactable work.  \n      Console.WriteLine(\"TxWork called with: \" + message);  \n      // Display transaction information.  \n  \n      TransactionInformation info = Transaction.Current.TransactionInformation;  \n      Console.WriteLine(\"The distributed tx ID: {0}.\", info.DistributedIdentifier);  \n      Console.WriteLine(\"The tx status: {0}.\", info.Status);  \n      return String.Format(\"Hello. This was object {0}.\",myID.ToString()) ;  \n    }  \n  \n    public void Dispose()  \n    {  \n      Console.WriteLine(  \n        \"Service \"  \n        + myID.ToString()  \n        + \" is being recycled.\"  \n      );  \n    }  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class TransactionFlowAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IOperationBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  id: '#ctor(System.ServiceModel.TransactionFlowOption)'
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: TransactionFlowAttribute(TransactionFlowOption)
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.TransactionFlowAttribute&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]"
  syntax:
    content: public TransactionFlowAttribute (System.ServiceModel.TransactionFlowOption transactions);
    parameters:
    - id: transactions
      type: System.ServiceModel.TransactionFlowOption
      description: "A <xref href=&quot;System.ServiceModel.TransactionFlowOption&quot;></xref>."
  overload: System.ServiceModel.TransactionFlowAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "向绑定上下文，以支持此操作的行为中添加额外的参数 （设置）。 此方法不能被继承。"
  remarks: "此方法提供额外的参数 （设置），可支持此操作所需的行为的绑定的上下文。 它在内部调用基础结构时创建的服务。"
  syntax:
    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "操作说明的属性中添加了额外的功能。"
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "绑定上下文的参数对象的集合。"
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "将属性功能附加到<xref uid=&quot;langword_csharp_ProxyOperation&quot; name=&quot;ProxyOperation&quot; href=&quot;&quot;></xref>属性标记的方法的对象。 此方法不能被继承。"
  remarks: "此方法允许你查看、 修改或将自定义扩展添加到客户端运行时，所有消息范围内或者针对某个特定操作。 请注意，对于<xref:System.ServiceModel.TransactionFlowAttribute>，此方法的实现为空。</xref:System.ServiceModel.TransactionFlowAttribute> 创建服务代理时，此方法是由基础结构内部进行调用。"
  syntax:
    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "到的操作的属性将附加功能。"
    - id: proxy
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: "<xref:System.ServiceModel.Dispatcher.ClientOperation>表示当前操作的对象。</xref:System.ServiceModel.Dispatcher.ClientOperation>"
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "将属性功能附加到<xref:System.ServiceModel.Dispatcher.DispatchOperation>属性标记的方法的对象。</xref:System.ServiceModel.Dispatcher.DispatchOperation> 此方法不能被继承。"
  remarks: "此方法允许你查看、 修改或将自定义扩展添加到客户端运行时，所有消息范围内或者针对某个特定操作。 请注意，对于<xref:System.ServiceModel.TransactionFlowAttribute>，此方法的实现为空。</xref:System.ServiceModel.TransactionFlowAttribute> 创建一个服务时，此方法是由基础结构内部进行调用。"
  syntax:
    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "此操作的说明。"
    - id: dispatch
      type: System.ServiceModel.Dispatcher.DispatchOperation
      description: "<xref:System.ServiceModel.Dispatcher.DispatchOperation>对于此操作的对象。</xref:System.ServiceModel.Dispatcher.DispatchOperation>"
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "验证该操作可以支持此行为。 此方法不能被继承。"
  remarks: "此方法验证操作说明是否足以支持事务流行为。 请注意，对于<xref:System.ServiceModel.TransactionFlowAttribute>，此方法的实现为空。</xref:System.ServiceModel.TransactionFlowAttribute> 创建一个服务时，此方法是由基础结构内部进行调用。"
  syntax:
    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "要验证的操作。"
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions
  id: Transactions
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "获取一个值，该值指示是否支持传入事务。"
  syntax:
    content: public System.ServiceModel.TransactionFlowOption Transactions { get; }
    return:
      type: System.ServiceModel.TransactionFlowOption
      description: "A <xref href=&quot;System.ServiceModel.TransactionFlowOption&quot;> </xref> ，该值指示是否支持传入事务。"
  overload: System.ServiceModel.TransactionFlowAttribute.Transactions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: TransactionFlowAttribute(TransactionFlowOption)
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
- uid: System.ServiceModel.TransactionFlowOption
  parent: System.ServiceModel
  isExternal: false
  name: TransactionFlowOption
  nameWithType: TransactionFlowOption
  fullName: System.ServiceModel.TransactionFlowOption
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
- uid: System.ServiceModel.Description.OperationDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
- uid: System.ServiceModel.Dispatcher.DispatchOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: DispatchOperation
  nameWithType: DispatchOperation
  fullName: System.ServiceModel.Dispatcher.DispatchOperation
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: TransactionFlowAttribute
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
