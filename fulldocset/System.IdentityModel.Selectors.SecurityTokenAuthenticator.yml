### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  id: SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  type: Class
  summary: "进行身份验证安全令牌。"
  remarks: "SecurityTokenAuthenticator 类和从它派生的类进行身份验证安全令牌。 通常情况下，你将仅从派生一个类直接 SecurityTokenAuthenticator 时创建自定义安全令牌。 如果你想要重写内置安全令牌的默认身份验证或授权行为，从 SecurityTokenAuthenticator，如<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>派生的类之一派生       当从 SecurityTokenAuthenticator 派生一个类时，重写以下两种方法︰<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>和<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>方法确定此安全令牌的身份验证器是否可以进行身份验证的特定安全令牌。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>方法进行身份验证安全令牌，并建立一组授权的授权策略。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 授权策略会将映射到应用程序所需的声明的安全令牌中找到的声明。"
  syntax:
    content: public abstract class SecurityTokenAuthenticator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;></xref>类。"
  syntax:
    content: protected SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "获取一个值，该值指示是否可以通过此安全令牌的身份验证器验证指定的安全令牌。"
  remarks: "CanValidateToken 方法检查令牌参数是否为`null`，然后调用<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>方法来确定此安全令牌的身份验证器是否可以进行身份验证的安全令牌类型`token`。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>"
  syntax:
    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当可以验证令牌;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "当在派生类中重写，获取一个值，该值指示是否可以通过此安全令牌的身份验证器验证指定的安全令牌。"
  remarks: "调用 CanValidateTokenCore 方法<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>方法来确定此安全令牌的身份验证器是否可以进行身份验证的安全令牌类型`token`。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 这不验证身份的安全令牌;由执行<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当<code> token </code>可验证; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "对指定的安全令牌进行身份验证并返回对安全令牌的授权策略集。"
  remarks: "ValidateToken 方法检查是否`token`参数是`null`，调用<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>方法以确定此安全令牌身份验证可以对此安全令牌进行身份验证，以及如果它知道如何操作，然后调用<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> ，包含对此应用程序生效的授权策略集。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>token</code>无法通过此安全令牌身份验证身份验证-或-<code>token</code>未经过身份验证。"
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "当在派生类中重写，对指定的安全令牌进行身份验证，并返回的安全令牌的授权策略集。"
  remarks: "重写 ValidateTokenCore 方法进行身份验证的特定安全令牌类型。       ValidateTokenCore 方法重写时，请遵循以下准则:-当安全令牌传递到`token`参数不能通过验证，引发<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>异常。</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -当没有任何对此应用程序生效的授权策略，则返回空<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的类型<xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       当`null`通过此方法返回[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]引发<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>异常。</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       调用 ValidateTokenCore 方法<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> ，包含对此应用程序生效的授权策略集。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken
  nameWithType: SecurityTokenAuthenticator.CanValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenAuthenticator.ValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
