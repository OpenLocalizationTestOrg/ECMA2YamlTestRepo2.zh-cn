### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymScope
  id: SymScope
  children:
  - System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  - System.Diagnostics.SymbolStore.SymScope.Dispose
  - System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymScope.EndOffset
  - System.Diagnostics.SymbolStore.SymScope.Finalize
  - System.Diagnostics.SymbolStore.SymScope.GetChildren
  - System.Diagnostics.SymbolStore.SymScope.GetLocals
  - System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  - System.Diagnostics.SymbolStore.SymScope.Method
  - System.Diagnostics.SymbolStore.SymScope.Parent
  - System.Diagnostics.SymbolStore.SymScope.StartOffset
  langs:
  - csharp
  name: SymScope
  nameWithType: SymScope
  fullName: System.Diagnostics.SymbolStore.SymScope
  type: Class
  summary: "表示内的词法范围<xref href=&quot;System.Diagnostics.SymbolStore.SymMethod&quot;> </xref>，提供访问开始和结束偏移量的范围，以及其子与父作用域。"
  remarks: "SymScope 类还提供对在当前作用域内定义的所有局部变量的访问。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymScopeBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolScope
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymScopeBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)'
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);
    parameters:
    - id: pScope
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*
      description: "要添加。"
  overload: System.Diagnostics.SymbolStore.SymScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "释放当前实例所使用的资源<xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;></xref>类。"
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "由调用<> *1> 和<> *1> 方法来释放使用的当前实例的托管和非托管资源<xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;></xref>类。"
  remarks: "此方法称为仅由公共<xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A>和<xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A>方法; 这些方法不直接调用此方法。</xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  id: EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前词法范围的结束偏移量。"
  syntax:
    content: public virtual int EndOffset { get; }
    return:
      type: System.Int32
      description: "结束的 Microsoft 中间语言 (MSIL) 偏移量。 偏移量是方法的从当前词法范围的开头。"
  overload: System.Diagnostics.SymbolStore.SymScope.EndOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "释放非托管的资源并执行其他清理操作之前<xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;></xref>通过垃圾回收回收。"
  remarks: "此方法将替代<xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> 应用程序代码不应调用此方法。对象的`Finalize`方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A>方法。</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymScope ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymScope.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  id: GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取的子词法范围的当前词法范围。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope[]
      description: "词法范围由当前词法范围封闭。"
  overload: System.Diagnostics.SymbolStore.SymScope.GetChildren*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来满足该请求。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  id: GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前词法范围内的局部变量。"
  remarks: "本地变量返回顺序不分先后。 如果本地变量更改了其当前范围内的地址，该变量被返回多次，每个都有不同的偏移量范围。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "当前词法范围内的局部变量。"
  overload: System.Diagnostics.SymbolStore.SymScope.GetLocals*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来满足该请求。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: "引发<xref:System.NotSupportedException>在所有情况下。</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  id: Method
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取包含当前词法范围的方法。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "包含当前词法范围的方法。"
  overload: System.Diagnostics.SymbolStore.SymScope.Method*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  id: Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取的父词法范围的当前作用域。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "在当前范围的封闭的词法范围。"
  overload: System.Diagnostics.SymbolStore.SymScope.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  id: StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前词法范围的起始偏移量。"
  syntax:
    content: public virtual int StartOffset { get; }
    return:
      type: System.Int32
      description: "起始的 Microsoft 中间语言 (MSIL) 偏移量。 偏移量是方法的从当前词法范围的开头。"
  overload: System.Diagnostics.SymbolStore.SymScope.StartOffset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymScopeBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymScopeBase
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
- uid: System.Diagnostics.SymbolStore.ISymbolScope[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolScope
    name: ISymbolScope
    nameWithType: ISymbolScope
    fullName: ISymbolScope[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace
    name: ISymbolNamespace
    nameWithType: ISymbolNamespace
    fullName: ISymbolNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: SymScope
  nameWithType: SymScope.SymScope
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose
  nameWithType: SymScope.Dispose
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: EndOffset
  nameWithType: SymScope.EndOffset
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Finalize
  nameWithType: SymScope.Finalize
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetChildren
  nameWithType: SymScope.GetChildren
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetLocals
  nameWithType: SymScope.GetLocals
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetNamespaces
  nameWithType: SymScope.GetNamespaces
- uid: System.Diagnostics.SymbolStore.SymScope.Method*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Method
  nameWithType: SymScope.Method
- uid: System.Diagnostics.SymbolStore.SymScope.Parent*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Parent
  nameWithType: SymScope.Parent
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: StartOffset
  nameWithType: SymScope.StartOffset
