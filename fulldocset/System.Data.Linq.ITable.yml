### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ITable
  id: ITable
  children:
  - System.Data.Linq.ITable.Attach(System.Object)
  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  - System.Data.Linq.ITable.Attach(System.Object,System.Object)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.ITable.Context
  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  - System.Data.Linq.ITable.IsReadOnly
  langs:
  - csharp
  name: ITable
  nameWithType: ITable
  fullName: System.Data.Linq.ITable
  type: Interface
  summary: "使用弱类型化的查询方案。"
  remarks: "有关方法的详细信息，请参阅<xref:System.Data.Linq.Table%601>。</xref:System.Data.Linq.Table%601>"
  syntax:
    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'
  implements:
  - System.Collections.IEnumerable
  - System.Linq.IQueryable
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将附加到实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>以未修改状态。"
  remarks: "有关如何使用此方法的详细信息，请参阅[数据检索和 CUD 操作在 N 层应用程序 (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要附加该实体。"
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  id: Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将附加到集合的所有实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>中修改或未修改的状态。"
  remarks: "有关如何使用此方法的详细信息，请参阅[数据检索和 CUD 操作在 N 层应用程序 (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: "实体的集合。"
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将实体附加为已修改。"
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  id: Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将附加到实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>以修改或未修改状态通过指定实体和其原始状态。"
  remarks: "有关如何使用此方法的详细信息，请参阅[数据检索和 CUD 操作在 N 层应用程序 (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: "要附加该实体。"
    - id: original
      type: System.Object
      description: "与包含原始值的数据成员相同的实体类型的实例。"
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  id: AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将附加到集合的所有实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>中修改或未修改的状态。"
  remarks: "有关如何使用此方法的详细信息，请参阅[数据检索和 CUD 操作在 N 层应用程序 (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "实体的集合。"
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将附加到集合的所有实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>中修改或未修改的状态。"
  remarks: "有关如何使用此方法的详细信息，请参阅[数据检索和 CUD 操作在 N 层应用程序 (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "实体的集合。"
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将实体附加为已修改。"
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Context
  id: Context
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "获取<xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> ，已使用来检索这个<xref href=&quot;System.Data.Linq.ITable&quot;> </xref>。"
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: "<xref href=&quot;System.Data.Linq.DataContext&quot;> </xref>用于检索<xref href=&quot;System.Data.Linq.ITable&quot;> </xref>。"
  overload: System.Data.Linq.ITable.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将集合中的所有实体<xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;></xref>状态。"
  remarks: "调用<xref:System.Data.Linq.DataContext.SubmitChanges%2A>以对数据库中执行实际的删除。</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "从中移除所有项的集合。"
  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  id: DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将实体放到此表中<xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;></xref>状态。"
  remarks: "必须连接已断开连接的实体，然后才能删除。 调用<xref:System.Data.Linq.DataContext.SubmitChanges%2A>以对数据库中执行实际的删除。</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要删除的实体。"
  overload: System.Data.Linq.ITable.DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  id: GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "返回已修改成员包含其当前值和原始值的数组。"
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "从其获取数组的实体。"
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "返回已修改成员包含其当前值和原始值的数组。"
  overload: System.Data.Linq.ITable.GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  id: GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "检索原始值。"
  remarks: "请注意以下事项:-实体自变量必须为非 null。 否则，会引发空参数异常。      -中的情况下的强类型化 (`TEntity`) 方法，类型必须映射，并且必须是实体类型。 也就是说，它必须在其映射具有对象 ID 信息。 否则，会引发错误的类型异常。"
  syntax:
    content: public object GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "其原始值要检索的实体。"
    return:
      type: System.Object
      description: "原始实体的副本。 值为传入的实体不跟踪的情况下为 null。 发回的客户端断开连接的实体必须以前附加<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>可以开始跟踪其状态。 将客户端提供的值为基础的建立新附加的实体的&quot;原始状态&quot;。 数据上下文不会跟踪断开连接的实体的状态。"
  overload: System.Data.Linq.ITable.GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  id: InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "将添加到集合的所有实体<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>中<xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;></xref>状态。"
  remarks: "调用<xref:System.Data.Linq.DataContext.SubmitChanges%2A>执行实际插入数据库。</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "要添加的实体。"
  overload: System.Data.Linq.ITable.InsertAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  id: InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "添加中的实体<xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;></xref>状态进入此表。"
  remarks: "调用<xref:System.Data.Linq.DataContext.SubmitChanges%2A>执行实际插入数据库。</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要添加的实体。"
  overload: System.Data.Linq.ITable.InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "该值指示是否实体的类型包含在此<xref href=&quot;System.Data.Linq.ITable&quot;></xref>实例具有主键。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果实体类型不具有主键; 否则为 false。"
  overload: System.Data.Linq.ITable.IsReadOnly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.ITable.Attach(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
- uid: System.Data.Linq.ITable.Context
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: ModifiedMemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.ITable.IsReadOnly
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
- uid: System.Data.Linq.ITable.Attach*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach
  nameWithType: ITable.Attach
- uid: System.Data.Linq.ITable.AttachAll*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll
  nameWithType: ITable.AttachAll
- uid: System.Data.Linq.ITable.Context*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit
  nameWithType: ITable.DeleteAllOnSubmit
- uid: System.Data.Linq.ITable.DeleteOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: ITable.DeleteOnSubmit
- uid: System.Data.Linq.ITable.GetModifiedMembers*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers
  nameWithType: ITable.GetModifiedMembers
- uid: System.Data.Linq.ITable.GetOriginalEntityState*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: ITable.GetOriginalEntityState
- uid: System.Data.Linq.ITable.InsertAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit
  nameWithType: ITable.InsertAllOnSubmit
- uid: System.Data.Linq.ITable.InsertOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit
  nameWithType: ITable.InsertOnSubmit
- uid: System.Data.Linq.ITable.IsReadOnly*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
