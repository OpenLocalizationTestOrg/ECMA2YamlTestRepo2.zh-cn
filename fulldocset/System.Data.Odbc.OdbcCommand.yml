### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommand
  id: OdbcCommand
  children:
  - System.Data.Odbc.OdbcCommand.#ctor
  - System.Data.Odbc.OdbcCommand.#ctor(System.String)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  - System.Data.Odbc.OdbcCommand.Cancel
  - System.Data.Odbc.OdbcCommand.CommandText
  - System.Data.Odbc.OdbcCommand.CommandTimeout
  - System.Data.Odbc.OdbcCommand.CommandType
  - System.Data.Odbc.OdbcCommand.Connection
  - System.Data.Odbc.OdbcCommand.CreateDbParameter
  - System.Data.Odbc.OdbcCommand.CreateParameter
  - System.Data.Odbc.OdbcCommand.DbConnection
  - System.Data.Odbc.OdbcCommand.DbParameterCollection
  - System.Data.Odbc.OdbcCommand.DbTransaction
  - System.Data.Odbc.OdbcCommand.DesignTimeVisible
  - System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  - System.Data.Odbc.OdbcCommand.ExecuteReader
  - System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteScalar
  - System.Data.Odbc.OdbcCommand.Parameters
  - System.Data.Odbc.OdbcCommand.Prepare
  - System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  - System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  - System.Data.Odbc.OdbcCommand.Transaction
  - System.Data.Odbc.OdbcCommand.UpdatedRowSource
  langs:
  - csharp
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
  type: Class
  summary: "表示一个 SQL 语句或存储的过程以对数据源执行。 此类不能被继承。"
  remarks: "OdbcCommand 类提供对数据源执行命令的以下方法: |项 |说明 |  |----------|-----------------|  |<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|执行返回行的命令。 |  |<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|执行命令，例如 SQL INSERT、 DELETE、 更新和一组语句。 |  |<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|从数据库中检索单个值，例如，一个聚合值。 |      你可以重置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性和重复使用 OdbcCommand 对象。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 但是，你必须关闭<xref:System.Data.Odbc.OdbcDataReader>便可以执行新的或以前的命令之前。</xref:System.Data.Odbc.OdbcDataReader>       如果执行此命令会导致严重<xref:System.Data.Odbc.OdbcException>SQL Server 严重级别为 20 或更多，例如<xref:System.Data.Odbc.OdbcConnection>可能会关闭。</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcException> 但是，用户可以重新打开连接并继续。"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  \n  \n [!code-cs[Classic WebData OdbcCommand#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_0_1.cs)]\n [!code-vb[Classic WebData OdbcCommand#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>类。"
  remarks: "基构造函数初始化为其默认值的所有字段。 下表显示<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| 空字符串 (&quot;&quot;) |  |<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  |<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|</xref:System.Data.Odbc.OdbcCommand.Connection%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>与文本的查询的类。"
  syntax:
    content: public OdbcCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>与文本的查询的类和<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>对象。"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>对象，表示与数据源的连接。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>类与文本的查询、 查询<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>对象和<xref:System.Data.Odbc.OdbcCommand.Transaction*>.</xref:System.Data.Odbc.OdbcCommand.Transaction*>"
  remarks: "下表显示<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>此实现的实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  |<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|即的值的新<xref:System.Data.Odbc.OdbcConnection>`connection`参数。 |      可以通过设置相关的属性中更改这些参数中的任何一个的值。</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>对象，表示与数据源的连接。"
    - id: transaction
      type: System.Data.Odbc.OdbcTransaction
      description: "在其中事务<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Cancel
  id: Cancel
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "尝试取消执行<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>。"
  remarks: "如果没有要取消内容，则不会。 但是，如果在过程中，命令，并且取消尝试失败，不会生成异常。       若要取消的查询在一个线程上，必须从另一个线程调用取消。 因为你无法使用执行命令，以异步方式<xref:System.Data.Odbc.OdbcCommand>; 要取消，从另一个线程，命令必须以同步方式运行一个线程。</xref:System.Data.Odbc.OdbcCommand> 这意味着，<xref:System.Data.Odbc.OdbcCommand>对象必须可从两个线程访问。</xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandText
  id: CommandText
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置的 SQL 语句或存储的过程以对数据源执行。"
  remarks: "当<xref:System.Data.IDbCommand.CommandType%2A>属性设置为`StoredProcedure`，应使用标准 ODBC 存储过程转义序列设置 CommandText 属性。</xref:System.Data.IDbCommand.CommandType%2A> 将 CommandText 设置为存储过程的名称不起作用的其他.NET Framework 数据提供程序一样。       通常由数据源实现许多语言功能，如外部联接和标量函数调用。 即使这些功能的语法通常是数据源特定。 因此，ODBC 定义包含以下语言功能的标准语法的转义序列:-日期、 时间、 时间戳，和日期时间间隔文本的标量函数，例如数字、 字符串和数据类型转换函数-如谓词转义字符的外部联接的过程调用，如下所示使用 ODBC 的转义序列是︰```   {extension}   ```识别和 ODBC 驱动程序通过分析此转义序列。 它们则将任何转义序列替换数据源特定的语法。       一个过程是在数据源中存储的可执行对象。 通常，它是一个或多个具有预编译的 SQL 语句。 调用过程的转义序列是```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ```其中`procedure-name`指定过程的名称和`parameter`指定过程参数。       在调用 Execute 方法之一时，该命令执行此存储的过程 (例如，<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>或<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>)。</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       无法设置<xref:System.Data.Odbc.OdbcCommand.Connection%2A>，<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>和 CommandText 属性，如果当前的连接执行的 execute 或提取操作。</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       ODBC.NET 提供程序不支持命名的参数，将参数传递给 SQL 语句或存储的过程由调用<xref:System.Data.Odbc.OdbcCommand>时<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>设置为`Text`。</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand> 在这种情况下，必须使用问号 （？） 占位符。 例如︰```   SELECT * FROM Customers WHERE CustomerID = ?   ```因此，在其中的顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接与对应参数的问号占位符的位置。</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>       如果参数包含一个 null 值，适用于 ODBC 的.NET Framework 数据提供程序仍将绑定该参数，但使用的默认参数，如果其中一个定义了使用 SQL_DEFAULT_PARAM，而不是 null 值。 例如， <xref:System.Data.Odbc.OdbcParameterCollection>:```   {1, null, 2}   ```传入 CommandText 属性︰```   {call sp(?, ?, ?)}   ```导致适用于绑定的第一个参数为值 1，第三个参数与值 2 和 SQL_DEFAULT_PARAM 作为第二个参数的 ODBC 的.NET Framework 数据提供程序。</xref:System.Data.Odbc.OdbcParameterCollection> 但是，此行为与驱动程序相关。 如果该驱动程序不支持此功能，只需不传递值的参数。 例如，使用<xref:System.Data.Odbc.OdbcParameterCollection>:```   {1, 2}   ```和将 CommandText 属性设置为以下︰ ```   {call sp(?, null, ?)}   ```       >  [!NOTE] 1> 如果省略一个参数，必须仍显示的逗号分隔该参数与其他参数。</xref:System.Data.Odbc.OdbcParameterCollection> 如果省略参数为输入或输入/输出，该过程将使用参数的默认值。 另一种方法指定的输入或输入/输出参数的默认值是设置的长度/指示器缓冲区值绑定到 SQL_DEFAULT_PARAM 的参数。"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 语句或要执行存储的过程。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Data.Odbc.OdbcCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置在终止尝试执行命令并生成错误之前的等待时间。"
  remarks: "值为零 (0) 指定的等待时间，而不是没有等待时间，没有限制，因此应当避免。"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "以秒为单位等待命令执行时间。 默认值为 30 秒。"
  overload: System.Data.Odbc.OdbcCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandType
  id: CommandType
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置一个值，该值指示如何<xref:System.Data.Odbc.OdbcCommand.CommandText*>解释属性。</xref:System.Data.Odbc.OdbcCommand.CommandText*>"
  remarks: "当 CommandType 属性设置为`StoredProcedure`，应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为完整的 ODBC 调用语法。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 该命令然后执行此存储的过程，在调用 Execute 方法之一时 (例如，<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>或<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>)。</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       <xref:System.Data.Odbc.OdbcCommand.Connection%2A>，CommandType 和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>无法设置属性，如果当前的连接执行的 execute 或提取操作。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       适用于 ODBC 的.NET Framework 数据提供程序不支持传递命名参数到 SQL 语句或存储过程由<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>调用 无论在哪种情况下，使用问号 （？） 占位符。 例如︰```   SELECT * FROM Customers WHERE CustomerID = ?   ```的顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接与对应参数的问号占位符的位置。</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      1> [!NOTE]&1;> 适用于 ODBC 的.NET Framework Data Provider 不支持<xref:System.Data.CommandType>设置`TableDirect`。</xref:System.Data.CommandType>"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "之一<xref href=&quot;System.Data.CommandType&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值不是有效<xref href=&quot;System.Data.CommandType&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Connection
  id: Connection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>的此实例所使用的<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>。"
  remarks: "无法设置该连接， <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>，和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>如果当前的连接执行的 execute 或提取操作的属性。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A>       如果在事务执行过程正在进行设置连接和<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性不为 null，<xref:System.InvalidOperationException>生成。</xref:System.InvalidOperationException> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 如果您将连接设置之后提交或回滚，事务和<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性不为 null，<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性设置为 null 值。</xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcConnection Connection { get; set; }
    return:
      type: System.Data.Odbc.OdbcConnection
      description: "到数据源的连接。 默认值为 null 值。"
  overload: System.Data.Odbc.OdbcCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在事务正在进行，发生了更改连接属性。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "创建的新实例<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;></xref>对象。"
  remarks: "CreateParameter 方法是<xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>的强类型版本"
  syntax:
    content: public System.Data.Odbc.OdbcParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcParameter
      description: "<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>对象。"
  overload: System.Data.Odbc.OdbcCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  id: DbConnection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置一个值，该值指示命令对象是否应在一个自定义的界面控件中可见。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: '**true**，如果命令对象应在控件中可见; 否则为**false**。 默认值是**true**。'
  overload: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "要添加。"
    return:
      type: System.Data.Common.DbDataReader
      description: "要添加。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "执行 SQL 语句针对<xref:System.Data.Odbc.OdbcCommand.Connection*>，并返回受影响的行数。</xref:System.Data.Odbc.OdbcCommand.Connection*>"
  remarks: "你可以使用 ExecuteNonQuery 执行目录操作 （例如，查询数据库的结构或创建数据库对象，如表）;或更改数据库中的数据，而无需使用<xref:System.Data.DataSet>、 通过执行 INSERT、 UPDATE 或 DELETE 语句。</xref:System.Data.DataSet>       ExecuteNonQuery 还可用于执行多个 SQL 语句，如果基础的 ODBC 驱动程序支持此功能。 在这种情况下，返回值是通过在命令中的所有语句影响的行数。       虽然 ExecuteNonQuery 不返回任何行，用数据填充任何输出参数或返回值映射到参数。       对于 UPDATE、 INSERT 和 DELETE 语句，返回值是通过该命令影响的行数。 对于所有其他类型的语句，则返回值为-1。 如果发生回滚，则返回值也为-1。       存在触发器表和数据是正在添加或更改表中，返回的值包括通过插入或更新操作并受或多个触发器的行数受影响的行数。"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "对于 UPDATE、 INSERT 和 DELETE 语句，返回值是通过该命令影响的行数。 对于所有其他类型的语句，则返回值为-1。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "连接不存在。       -或者-连接未打开。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "发送<> *1> 到<> *1> 并生成<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>。"
  remarks: "应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为存储过程的完整 ODBC 调用语法。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 在调用 ExecuteReader 时，该命令将执行此存储的过程。       虽然<xref:System.Data.Odbc.OdbcDataReader>使用时，关联的<xref:System.Data.Odbc.OdbcConnection>正忙于为服务<xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> 当处于此状态时，任何其他操作可以不执行上<xref:System.Data.Odbc.OdbcConnection>而不关闭它。</xref:System.Data.Odbc.OdbcConnection> 这是这种情况，直到<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法<xref:System.Data.Odbc.OdbcDataReader>称为。</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>对象。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "发送<> *1> 到<> *1>，并生成<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;></xref>使用之一<xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;></xref>值。"
  remarks: "如果希望 SQL 语句以返回单个行，指定`SingleRow`作为<xref:System.Data.CommandBehavior>值可能会提高应用程序性能。</xref:System.Data.CommandBehavior>       应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为存储过程的完整 ODBC 调用语法。</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 在调用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>时，该命令执行此存储的过程       <xref:System.Data.Odbc.OdbcDataReader>支持一种特殊的模式，使大型二进制值，以高效读取。</xref:System.Data.Odbc.OdbcDataReader> 有关详细信息，请参阅`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>设置      1> [!NOTE]&1;>`SequentialAccess`值<xref:System.Data.CommandBehavior>是，不限制设置; 它只意味着必须将至少顺序访问到<xref:System.Data.Odbc.OdbcDataReader>。</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> 例如，当使用中的 SQL Server ODBC 驱动程序`SequentialAccess`模式下，你仍然可以将移到的第一列<xref:System.Data.Odbc.OdbcDataReader>后具有读取按顺序处理所有其他列的行。</xref:System.Data.Odbc.OdbcDataReader>       虽然<xref:System.Data.Odbc.OdbcDataReader>使用时，关联的<xref:System.Data.Odbc.OdbcConnection>正忙于为服务<xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> 当处于此状态时，任何其他操作可以不执行上<xref:System.Data.Odbc.OdbcConnection>而不关闭它。</xref:System.Data.Odbc.OdbcConnection> 这是这种情况，直到你调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName>方法。</xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName> 如果<xref:System.Data.Odbc.OdbcDataReader>使用创建<xref:System.Data.CommandBehavior>设置为`CloseConnection`，正在关闭<xref:System.Data.Odbc.OdbcDataReader>自动关闭的连接。</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "之一<xref uid=&quot;langword_csharp_System.Data.CommandBehavior&quot; name=&quot;System.Data.CommandBehavior&quot; href=&quot;&quot;></xref>值。"
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>对象。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "执行查询，并返回由查询返回的结果集第一行的第一列。 其他列或行将被忽略。"
  remarks: "ExecuteScalar 方法用于从数据源中检索单个值 （例如，一个聚合值）。 这要求更少的代码比使用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>生成从<xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>返回的数据的单个值时所需的方法，，然后再执行操作</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "结果中的第一行的第一列设置，或者为空引用的结果集是否为空。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Parameters
  id: Parameters
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets the <xref href=&quot;System.Data.Odbc.OdbcParameterCollection&quot;></xref>."
  remarks: "当<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>设置为`Text`，适用于 ODBC 的.NET Framework 数据提供程序不支持传递命名参数到 SQL 语句或存储过程由<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 无论在哪种情况下，使用问号 （？） 占位符。 例如︰```   SELECT * FROM Customers WHERE CustomerID = ?   ```的顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接对应于命令文本中参数的问号占位符的位置。</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      1> [!NOTE]&1;> 如果集合中的参数不匹配的查询执行的要求，可能会产生错误。"
  syntax:
    content: public System.Data.Odbc.OdbcParameterCollection Parameters { get; }
    return:
      type: System.Data.Odbc.OdbcParameterCollection
      description: "SQL 语句或存储的过程的参数。 默认值为空集合。"
  overload: System.Data.Odbc.OdbcCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Prepare
  id: Prepare
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "在数据源创建命令的已准备或已编译版本。"
  remarks: "准备方法调用 ODBC`SQLPrepare`函数。 具体取决于基础 ODBC 驱动程序和数据源的功能，准备该语句，如果所有参数都具有已都绑定，或者执行它，如果不是所有参数都具有已都都绑定时，可能会检查参数信息，如数据类型。 最大互操作性，应用程序应取消绑定应用于以前的 SQL 语句在准备新的 SQL 语句的时间为<xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>之前的所有参数 这可以防止错误而引起以前被应用于新的 SQL 语句的参数信息。       如果调用的 Execute 方法之后调用 Prepare 时，任何参数值大于指定的值<xref:System.Data.Odbc.OdbcParameter.Size%2A>属性自动截断至原始指定的大小的参数，并且会返回任何截断错误。</xref:System.Data.Odbc.OdbcParameter.Size%2A>       输出参数 （无论是否已准备） 必须具有用户指定的数据类型。 如果指定可变长度数据类型，你还必须指定的最大<xref:System.Data.Odbc.OdbcParameter.Size%2A>.</xref:System.Data.Odbc.OdbcParameter.Size%2A>"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *1> 未设置。      -or-       The <>*> is not <xref:System.Data.Odbc.OdbcConnection.Open*>.</xref:System.Data.Odbc.OdbcConnection.Open*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "重置<xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>为默认值的属性。</xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>"
  remarks: "默认值<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>为 30 秒。</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "有关此成员的说明，请参阅&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Odbc.OdbcCommand>实例被强制转换为<xref:InterfaceName>接口。</xref:InterfaceName> </xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个新[T;System.Object](~/add/includes/ajax-current-ext-md.md) ，它是此实例的副本。"
  overload: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Transaction
  id: Transaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置<xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;></xref>其中<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>执行。"
  remarks: "如果它已被设置为特定值，并且该命令正在执行，不能设置事务属性。 如果事务属性设置为<xref:System.Data.Odbc.OdbcTransaction>未连接到相同的对象<xref:System.Data.Odbc.OdbcConnection>作为<xref:System.Data.Odbc.OdbcCommand>对象，你尝试执行语句，则下一步时将会引发异常。</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcTransaction>"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction Transaction { get; set; }
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "An <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;></xref>. 默认值为 null 值。"
  overload: System.Data.Odbc.OdbcCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置一个值，指定如何**更新**方法应该应用到的命令结果**DataRow**。"
  remarks: "默认值<xref:System.Data.UpdateRowSource>值是**同时**自动生成命令，除非与<xref:System.Data.Odbc.OdbcCommandBuilder>，默认值是在这种情况下**无**。</xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.UpdateRowSource>       有关如何使用 UpdatedRowSource 属性的详细信息，请参阅[DataAdapter 参数](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "之一<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  overload: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommand.#ctor
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcCommand.Cancel
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
- uid: System.Data.Odbc.OdbcCommand.CommandText
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommand.CommandType
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
- uid: System.Data.Odbc.OdbcParameter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
- uid: System.Data.Odbc.OdbcDataReader
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcCommand.Parameters
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcParameterCollection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameterCollection
  nameWithType: OdbcParameterCollection
  fullName: System.Data.Odbc.OdbcParameterCollection
- uid: System.Data.Odbc.OdbcCommand.Prepare
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcCommand.Transaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Odbc.OdbcCommand.#ctor*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand.OdbcCommand
- uid: System.Data.Odbc.OdbcCommand.Cancel*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel
  nameWithType: OdbcCommand.Cancel
- uid: System.Data.Odbc.OdbcCommand.CommandText*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
- uid: System.Data.Odbc.OdbcCommand.CommandType*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OdbcCommand.CreateDbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OdbcCommand.CreateParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
- uid: System.Data.Odbc.OdbcCommand.Dispose*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose
  nameWithType: OdbcCommand.Dispose
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OdbcCommand.ExecuteDbDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OdbcCommand.ExecuteNonQuery
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OdbcCommand.ExecuteReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OdbcCommand.ExecuteScalar
- uid: System.Data.Odbc.OdbcCommand.Parameters*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcCommand.Prepare*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare
  nameWithType: OdbcCommand.Prepare
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OdbcCommand.ResetCommandTimeout
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcCommand.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcCommand.Transaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
