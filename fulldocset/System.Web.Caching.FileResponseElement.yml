### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.FileResponseElement
  id: FileResponseElement
  children:
  - System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  - System.Web.Caching.FileResponseElement.Length
  - System.Web.Caching.FileResponseElement.Offset
  - System.Web.Caching.FileResponseElement.Path
  langs:
  - csharp
  name: FileResponseElement
  nameWithType: FileResponseElement
  fullName: System.Web.Caching.FileResponseElement
  type: Class
  summary: "表示作为文件存储的输出缓存项的一部分。"
  remarks: "FileResponseElement 类表示的输出缓存项 （而不是标头中） 的正文部分。 FileResponseElement 对象中的数据可以存储为部分或全部文件。 ASP.NET 和自定义输出缓存提供程序可以返回响应，在多个部分中，使用 FileResponseElement 对象的任意组合。 例如，提供程序可以将分段的响应返回到三个不同的 FileResponseElement 对象，而每个对象可以将检索从偏移量到不同的物理文件。"
  syntax:
    content: 'public class FileResponseElement : System.Web.Caching.ResponseElement'
  inheritance:
  - System.Object
  - System.Web.Caching.ResponseElement
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  id: '#ctor(System.String,System.Int64,System.Int64)'
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "初始化的新实例<xref href=&quot;System.Web.Caching.FileResponseElement&quot;></xref>类。"
  remarks: "如果完整的输出缓存响应包含在单个文件中，提供程序初始化<xref:System.Web.Caching.FileResponseElement>类通过使用偏移量为零，并且整个文件的大小相等的长度。</xref:System.Web.Caching.FileResponseElement> 如果完整的输出缓存响应包含在文件部分中，提供程序初始化<xref:System.Web.Caching.FileResponseElement>类通过使用中，可启动的输出缓存响应，文件和输出缓存响应，该文件中存储的大小相等长度的偏移量。</xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public FileResponseElement (string path, long offset, long length);
    parameters:
    - id: path
      type: System.String
      description: "文件的完全限定的路径。"
    - id: offset
      type: System.Int64
      description: "字符串的开头位置的文件中的位置。"
    - id: length
      type: System.Int64
      description: "定义数据的长度，位置表示文件中的输出缓存数据的偏移量开始`path`。"
  overload: System.Web.Caching.FileResponseElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>length</code>小于零。"
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Length
  id: Length
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取包含数据的偏移位置开始的数据的大小<xref href=&quot;System.Web.Caching.FileResponseElement&quot;></xref>实例。"
  remarks: "如果完整的输出缓存响应包含在单个文件中，输出缓存提供程序初始化<xref:System.Web.Caching.FileResponseElement>类使用的整个文件的大小相等的长度。</xref:System.Web.Caching.FileResponseElement> 如果完整的输出缓存响应包含在文件部分中，提供程序初始化<xref:System.Web.Caching.FileResponseElement>类使用的该文件中存储的输出缓存响应的大小相等的长度。</xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "数据的大小。"
  overload: System.Web.Caching.FileResponseElement.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Offset
  id: Offset
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取文件中的位置，从数据<xref href=&quot;System.Web.Caching.FileResponseElement&quot;></xref>实例启动。"
  remarks: "如果完整的输出缓存响应包含在单个文件中，提供程序初始化<xref:System.Web.Caching.FileResponseElement>中文件的一部分，仅包含通过使用偏移量为零，如果完整的输出缓存响应的类，提供程序初始化<xref:System.Web.Caching.FileResponseElement>类使用输出缓存响应的开始处的文件中的偏移量。</xref:System.Web.Caching.FileResponseElement> </xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: "文件中的数据的起始点。"
  overload: System.Web.Caching.FileResponseElement.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Path
  id: Path
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "获取包含中的数据的文件的位置<xref href=&quot;System.Web.Caching.FileResponseElement&quot;></xref>实例。"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "文件的完全限定的路径。"
  overload: System.Web.Caching.FileResponseElement.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Caching.ResponseElement
  isExternal: false
  name: System.Web.Caching.ResponseElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.FileResponseElement.Length
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
- uid: System.Web.Caching.FileResponseElement.#ctor*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement
  nameWithType: FileResponseElement.FileResponseElement
- uid: System.Web.Caching.FileResponseElement.Length*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
