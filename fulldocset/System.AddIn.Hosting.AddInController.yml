### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInController
  id: AddInController
  children:
  - System.AddIn.Hosting.AddInController.AddInEnvironment
  - System.AddIn.Hosting.AddInController.AppDomain
  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  - System.AddIn.Hosting.AddInController.Shutdown
  - System.AddIn.Hosting.AddInController.Token
  langs:
  - csharp
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
  type: Class
  summary: "提供对外接程序的各种任务的访问。"
  remarks: "此类用于执行以下任务:-使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性来获取<xref:System.AddIn.Hosting.AddInEnvironment>外接程序的对象</xref:System.AddIn.Hosting.AddInEnvironment></xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> 然后使用该对象激活相同的应用程序域和与原始外接程序的进程中的其他外接。      -使用<xref:System.AddIn.Hosting.AddInController.AppDomain%2A>属性来获取<xref:System.AppDomain>外接程序的对象</xref:System.AppDomain></xref:System.AddIn.Hosting.AddInController.AppDomain%2A> 然后使用该对象激活在与原始外接程序相同的应用程序域中的其他外接。 请注意，由于跨进程远程处理中的限制，这种情况下不会使用在单独的进程中激活的外接程序。      -使用<xref:System.AddIn.Hosting.AddInController.Token%2A>属性来获取一个<xref:System.AddIn.Hosting.AddInToken>对象，它表示外接程序</xref:System.AddIn.Hosting.AddInToken></xref:System.AddIn.Hosting.AddInController.Token%2A>      -关闭外接程序与<xref:System.AddIn.Hosting.AddInController.Shutdown%2A>方法。</xref:System.AddIn.Hosting.AddInController.Shutdown%2A>       若要获取外接程序中的控制器，请调用<xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>方法并传入实例的外接程序作为其参数。</xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>"
  example:
  - "The following example activates an add-in within the same environment as a previously activated add-in by using an AddInController object.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public sealed class AddInController
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  id: AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取<xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;></xref>对象。"
  remarks: "使用此属性来获取<xref:System.AddIn.Hosting.AddInEnvironment>外接程序的对象</xref:System.AddIn.Hosting.AddInEnvironment> 然后使用该对象激活相同的应用程序域和与原始外接程序的进程中的其他外接。"
  example:
  - "The following example activates a second add-in within the same environment as the first add-in.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }
    return:
      type: System.AddIn.Hosting.AddInEnvironment
      description: "一个用于激活的原始外接程序的相同环境中的其他外接的对象。"
  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AppDomain
  id: AppDomain
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取包含外接程序的应用程序域。"
  remarks: "此属性用于获取外接程序的<xref:System.AppDomain>对象并激活相同的应用程序域中其他外接。</xref:System.AppDomain>"
  example:
  - "The following example activates a second add-in in the same application domain as the first add-in.  \n  \n [!code-vb[AddInP3Host#9](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#9)]\n [!code-cs[AddInP3Host#9](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#9)]"
  syntax:
    content: public AppDomain AppDomain { get; }
    return:
      type: System.AppDomain
      description: "外接程序的应用程序域。"
  overload: System.AddIn.Hosting.AddInController.AppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  id: GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取外接程序中的控制器。"
  remarks: "<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法返回一个对象，表示该外接程序的宿主的视图</xref:System.AddIn.Hosting.AddInToken.Activate%2A>"
  syntax:
    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);
    parameters:
    - id: addIn
      type: System.Object
      description: "外接程序的主机视图中。"
    return:
      type: System.AddIn.Hosting.AddInController
      description: "外接程序控制器。"
  overload: System.AddIn.Hosting.AddInController.GetAddInController*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "禁用外接程序。"
  remarks: "此方法将中断外接程序与其主机之间的通信管道。 如果外接程序已激活，自动生成的应用程序域中使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>或<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29>方法，Shutdown 方法也将卸载应用程序域。</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> </xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>       如果外接程序加载到其自己的应用程序域，Shutdown 方法也将卸载应用程序域。       如果外接程序加载到现有的应用程序域，主机和管道段将不再具有对该外接程序的任何引用。 在这种情况下外, 接程序将有资格通过垃圾回收来回收。       此类还可用于关闭的情况下在外部进程激活的外接程序。"
  example:
  - "The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \n  \n [!code-vb[AddInCollectionPipelineHost#6](~/add/codesnippet/visualbasic/ListAdaptersHost/Program.vb#6)]\n [!code-cs[AddInCollectionPipelineHost#6](~/add/codesnippet/csharp/ListAdaptersHost/Program.cs#6)]"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.AddIn.Hosting.AddInController.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Token
  id: Token
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取表示外接程序的令牌。"
  remarks: "通常情况下，你可以使用此属性来获取用于在更高版本时激活外接程序的令牌。"
  syntax:
    content: public System.AddIn.Hosting.AddInToken Token { get; }
    return:
      type: System.AddIn.Hosting.AddInToken
      description: "一个表示外接程序的对象。"
  overload: System.AddIn.Hosting.AddInController.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
- uid: System.AddIn.Hosting.AddInController
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
- uid: System.AddIn.Hosting.AddInController.Token
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
- uid: System.AddIn.Hosting.AddInToken
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController
  nameWithType: AddInController.GetAddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown
  nameWithType: AddInController.Shutdown
- uid: System.AddIn.Hosting.AddInController.Token*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
