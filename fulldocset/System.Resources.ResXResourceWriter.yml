### YamlMime:ManagedReference
items:
- uid: System.Resources.ResXResourceWriter
  id: ResXResourceWriter
  children:
  - System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)
  - System.Resources.ResXResourceWriter.#ctor(System.String)
  - System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  - System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  - System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  - System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  - System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  - System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)
  - System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)
  - System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)
  - System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.ResXResourceWriter.AddResource(System.String,System.String)
  - System.Resources.ResXResourceWriter.BasePath
  - System.Resources.ResXResourceWriter.BinSerializedObjectMimeType
  - System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType
  - System.Resources.ResXResourceWriter.Close
  - System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType
  - System.Resources.ResXResourceWriter.Dispose
  - System.Resources.ResXResourceWriter.Dispose(System.Boolean)
  - System.Resources.ResXResourceWriter.Finalize
  - System.Resources.ResXResourceWriter.Generate
  - System.Resources.ResXResourceWriter.ResMimeType
  - System.Resources.ResXResourceWriter.ResourceSchema
  - System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType
  - System.Resources.ResXResourceWriter.Version
  langs:
  - csharp
  name: ResXResourceWriter
  nameWithType: ResXResourceWriter
  fullName: System.Resources.ResXResourceWriter
  type: Class
  summary: "将资源写入 XML 资源 (.resx) 文件或输出流。"
  remarks: "ResXResourceWriter 将资源写入 XML 格式。 若要编写的二进制资源文件，使用<xref:System.Resources.ResourceWriter>.</xref:System.Resources.ResourceWriter>       资源指定为使用的名称/值对<xref:System.Resources.ResXResourceWriter.AddResource%2A>方法。</xref:System.Resources.ResXResourceWriter.AddResource%2A> 资源名称是用于查找; 时，区分大小写但若要更轻松地支持创作工具，并帮助消除 bug，ResXResourceWriter 不允许一个.resx 文件具有仅因大小写的名称。       若要创建一个.resx 文件，使用唯一的文件名，调用创建 ResXResourceWriter<xref:System.Resources.ResXResourceWriter.AddResource%2A>至少一次，调用<xref:System.Resources.ResXResourceWriter.Generate%2A>以将资源文件写入到磁盘，然后调用<xref:System.Resources.ResXResourceWriter.Close%2A>关闭此文件。</xref:System.Resources.ResXResourceWriter.Close%2A> </xref:System.Resources.ResXResourceWriter.Generate%2A> </xref:System.Resources.ResXResourceWriter.AddResource%2A> 调用<xref:System.Resources.ResXResourceWriter.Close%2A>会隐式<xref:System.Resources.ResXResourceWriter.Generate%2A>如果所需的文件。</xref:System.Resources.ResXResourceWriter.Generate%2A> </xref:System.Resources.ResXResourceWriter.Close%2A>       不在相同的顺序添加一定写入资源。       格式一个.resx 文件的详细信息，请参阅[使用.resx 文件以编程方式](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 此类包含链接要求，并且在类级别应用于所有成员继承要求。 A<xref:System.Security.SecurityException>直接调用方或派生的类没有完全信任权限时，将引发。</xref:System.Security.SecurityException>"
  example:
  - "The following example creates a .resx file named `CarResources.resx` that stores six strings, an icon, and two application-defined objects (two `Automobile` objects). Note that the `Automobile` class, which is defined and instantiated in the example, is tagged with the <xref:System.SerializableAttribute> attribute.  \n  \n [!code-cs[conceptual.resources.resx#1](~/add/codesnippet/csharp/t-system.resources.resxr_2_1.cs)]\n [!code-vb[conceptual.resources.resx#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_2_1.vb)]"
  syntax:
    content: 'public class ResXResourceWriter : System.Resources.IResourceWriter'
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceWriter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(Stream)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(Stream)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>资源写入指定的流对象的类。"
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Resources.ResXResourceWriter.Close%2A> method closes the stream you specify as a parameter. To write the resource to the stream without closing the stream, you must use the <xref:System.Resources.ResXResourceWriter.Generate%2A> method.
  syntax:
    content: public ResXResourceWriter (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "输出流中。"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(TextWriter)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(TextWriter)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>写入指定的类<xref:System.IO.TextWriter>对象。</xref:System.IO.TextWriter>"
  syntax:
    content: public ResXResourceWriter (System.IO.TextWriter textWriter);
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>对象发送到的输出。</xref:System.IO.TextWriter>"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(String)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>将资源写入到指定的文件的类。"
  remarks: "此构造函数创建`filename`如果它不存在，如果是这样将覆盖它。 如果`filename`包括一个目录路径，必须存在的完整路径或构造函数引发<xref:System.IO.DirectoryNotFoundException>异常。</xref:System.IO.DirectoryNotFoundException>"
  syntax:
    content: public ResXResourceWriter (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "输出文件的名称。"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的目录<code> filename </code>不存在。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  id: '#ctor(System.IO.Stream,System.Func{System.Type,System.String})'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(Stream,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(Stream,Func<Type,String>)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>类，该类将资源写入到指定的流对象并设置转换器委托。 此委托允许资源程序集要写入该目标之前的.NET framework 的版本[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]通过使用限定的程序集名称。"
  remarks: "Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]。"
  syntax:
    content: public ResXResourceWriter (System.IO.Stream stream, Func<Type,string> typeNameConverter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "要将输出发送到的流。"
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
      description: "用于面向.NET Framework 的早期版本的委托。"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  id: '#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(TextWriter,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(TextWriter,Func<Type,String>)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>资源写入指定的类<xref:System.IO.TextWriter>对象并设置一个委托，可使资源程序集能够编写面向之前的.NET framework 的版本[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]通过使用限定的程序集名称。</xref:System.IO.TextWriter>"
  remarks: "Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]。"
  syntax:
    content: public ResXResourceWriter (System.IO.TextWriter textWriter, Func<Type,string> typeNameConverter);
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "要将输出发送到的对象。"
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
      description: "用于面向.NET Framework 的早期版本的委托。"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  id: '#ctor(System.String,System.Func{System.Type,System.String})'
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResXResourceWriter(String,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(String,Func<Type,String>)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "初始化的新实例<xref href=&quot;System.Resources.ResXResourceWriter&quot;></xref>资源写入指定的文件和设置一个委托，可使资源程序集能够编写面向之前的.NET framework 的版本的类[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]通过使用限定的程序集名称。"
  remarks: "Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]。"
  syntax:
    content: public ResXResourceWriter (string fileName, Func<Type,string> typeNameConverter);
    parameters:
    - id: fileName
      type: System.String
      description: "要将输出发送到的文件。"
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
      description: "用于面向.NET Framework 的早期版本的委托。"
  overload: System.Resources.ResXResourceWriter.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的目录<code> filename </code>不存在。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  id: AddAlias(System.String,System.Reflection.AssemblyName)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddAlias(String,AssemblyName)
  nameWithType: ResXResourceWriter.AddAlias(String,AssemblyName)
  fullName: System.Resources.ResXResourceWriter.AddAlias(String,AssemblyName)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "将指定的别名添加到别名列表。"
  remarks: "其值是从别名程序集的资源会自动添加到别名的列表。 资源不写入直到<xref:System.Resources.ResXResourceWriter.Generate%2A>称为。</xref:System.Resources.ResXResourceWriter.Generate%2A>"
  syntax:
    content: public virtual void AddAlias (string aliasName, System.Reflection.AssemblyName assemblyName);
    parameters:
    - id: aliasName
      type: System.String
      description: "别名的名称。"
    - id: assemblyName
      type: System.Reflection.AssemblyName
      description: "由程序集的名称`aliasName`。"
  overload: System.Resources.ResXResourceWriter.AddAlias*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  id: AddMetadata(System.String,System.Byte[])
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddMetadata(String,Byte[])
  nameWithType: ResXResourceWriter.AddMetadata(String,Byte[])
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,Byte[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "添加其值是指定到要写入的资源的列表的字节数组形式的设计时属性。"
  syntax:
    content: public void AddMetadata (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "属性的名称。"
    - id: value
      type: System.Byte[]
      description: "包含要添加的属性的值的字节数组。"
  overload: System.Resources.ResXResourceWriter.AddMetadata*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定的资源<code> name </code>已添加参数。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)
  id: AddMetadata(System.String,System.Object)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddMetadata(String,Object)
  nameWithType: ResXResourceWriter.AddMetadata(String,Object)
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "添加值指定为要写入的资源的列表对象的设计时属性。"
  syntax:
    content: public void AddMetadata (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "属性的名称。"
    - id: value
      type: System.Object
      description: "一个对象，它要添加的属性的值。"
  overload: System.Resources.ResXResourceWriter.AddMetadata*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定的资源<code> name </code>已添加参数。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)
  id: AddMetadata(System.String,System.String)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddMetadata(String,String)
  nameWithType: ResXResourceWriter.AddMetadata(String,String)
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "将添加其值指定为连接到要写入的资源的列表的字符串的设计时属性。"
  syntax:
    content: public void AddMetadata (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "属性的名称。"
    - id: value
      type: System.String
      description: "一个字符串，是要添加的属性的值。"
  overload: System.Resources.ResXResourceWriter.AddMetadata*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定的资源<code> name </code>属性已添加。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)
  id: AddResource(System.Resources.ResXDataNode)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddResource(ResXDataNode)
  nameWithType: ResXResourceWriter.AddResource(ResXDataNode)
  fullName: System.Resources.ResXResourceWriter.AddResource(ResXDataNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "添加中指定的已命名的资源<xref href=&quot;System.Resources.ResXDataNode&quot;></xref>到要写入的资源的列表对象。"
  syntax:
    content: public void AddResource (System.Resources.ResXDataNode node);
    parameters:
    - id: node
      type: System.Resources.ResXDataNode
      description: "A <xref href=&quot;System.Resources.ResXDataNode&quot;> </xref>包含资源名称/值对的对象。"
  overload: System.Resources.ResXResourceWriter.AddResource*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: ResXResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResXResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "添加命名的资源指定为字节数组到要写入的资源的列表。"
  remarks: "资源不写入直到<xref:System.Resources.ResXResourceWriter.Generate%2A>称为。</xref:System.Resources.ResXResourceWriter.Generate%2A>       资源被序列化，并以二进制格式存储。"
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.Byte[]
      description: "要添加为一个 8 位无符号的整数数组的资源的值。"
  overload: System.Resources.ResXResourceWriter.AddResource*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: ResXResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResXResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "将添加指定为到要写入的资源的列表对象的已命名的资源。"
  remarks: "资源不写入直到<xref:System.Resources.ResXResourceWriter.Generate%2A>称为。</xref:System.Resources.ResXResourceWriter.Generate%2A> 已添加的资源必须是可序列化。       如果正在添加的资源是一个字符串，则将其编写为一个字符串;否则为该资源的序列化，并以二进制格式存储中。"
  example:
  - "The following example creates a .resx file named `CarResources.resx` that stores six strings, an icon, and two application-defined objects (two `Automobile` objects). To store the icon and the `Automobile` objects, it calls the AddResource method. Note that the `Automobile` class, which is defined and instantiated in the example, is tagged with the <xref:System.SerializableAttribute> attribute.  \n  \n [!code-cs[conceptual.resources.resx#1](~/add/codesnippet/csharp/m-system.resources.resxr_5_1.cs)]\n [!code-vb[conceptual.resources.resx#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_5_1.vb)]"
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.Object
      description: "资源的值。"
  overload: System.Resources.ResXResourceWriter.AddResource*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: ResXResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResXResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "向资源添加字符串资源。"
  remarks: "资源不写入直到<xref:System.Resources.ResXResourceWriter.Generate%2A>称为。</xref:System.Resources.ResXResourceWriter.Generate%2A>"
  example:
  - "The following example creates a .resx file named `CarResources.resx` that stores six strings, an icon, and two application-defined objects (two `Automobile` objects). To store the strings, it calls the AddResource method.  \n  \n [!code-cs[conceptual.resources.resx#1](~/add/codesnippet/csharp/m-system.resources.resxr_3_1.cs)]\n [!code-vb[conceptual.resources.resx#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_3_1.vb)]  \n  \n Note that the `Automobile` class, which is defined and instantiated in the example, is tagged with the <xref:System.SerializableAttribute> attribute."
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "资源的名称。"
    - id: value
      type: System.String
      description: "资源的值。"
  overload: System.Resources.ResXResourceWriter.AddResource*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.BasePath
  id: BasePath
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: BasePath
  nameWithType: ResXResourceWriter.BasePath
  fullName: System.Resources.ResXResourceWriter.BasePath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "获取或设置中指定的相对文件路径的基路径<xref href=&quot;System.Resources.ResXFileRef&quot;></xref>对象。"
  syntax:
    content: public string BasePath { get; set; }
    return:
      type: System.String
      description: "一个路径，如果前面预置的相对文件路径中指定<xref href=&quot;System.Resources.ResXFileRef&quot;></xref>对象，产生到 XML 资源文件的绝对路径。"
  overload: System.Resources.ResXResourceWriter.BasePath*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.BinSerializedObjectMimeType
  id: BinSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: BinSerializedObjectMimeType
  nameWithType: ResXResourceWriter.BinSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.BinSerializedObjectMimeType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定二进制对象的默认内容类型。 此字段为只读的。"
  syntax:
    content: public static readonly string BinSerializedObjectMimeType;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType
  id: ByteArraySerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ByteArraySerializedObjectMimeType
  nameWithType: ResXResourceWriter.ByteArraySerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定的字节数组对象的默认内容类型。 此字段为只读的。"
  syntax:
    content: public static readonly string ByteArraySerializedObjectMimeType;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Close
  id: Close
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: ResXResourceWriter.Close()
  fullName: System.Resources.ResXResourceWriter.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "释放使用的所有资源<xref href=&quot;System.Resources.ResXResourceWriter&quot;> </xref>。"
  remarks: "调用此方法是调用<xref:System.Resources.ResXResourceWriter.Dispose%2A>.</xref:System.Resources.ResXResourceWriter.Dispose%2A>的等效项"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResXResourceWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType
  id: DefaultSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: DefaultSerializedObjectMimeType
  nameWithType: ResXResourceWriter.DefaultSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定对象的默认内容类型。 此字段为只读的。"
  syntax:
    content: public static readonly string DefaultSerializedObjectMimeType;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResXResourceWriter.Dispose()
  fullName: System.Resources.ResXResourceWriter.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "释放使用的所有资源<xref href=&quot;System.Resources.ResXResourceWriter&quot;> </xref>。"
  remarks: "Dispose 方法调用<xref:System.Resources.ResXResourceWriter.Generate%2A>方法，如有必要之前释放托管和非托管系统资源,。</xref:System.Resources.ResXResourceWriter.Generate%2A>       调用 Dispose 允许使用的系统资源<xref:System.Resources.ResXResourceWriter>可以重新分配用于其他目的。</xref:System.Resources.ResXResourceWriter> 有关释放的详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Resources.ResXResourceWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResXResourceWriter.Dispose(Boolean)
  fullName: System.Resources.ResXResourceWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "释放由非托管的资源<xref href=&quot;System.Resources.ResXResourceWriter&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "Dispose 方法调用<xref:System.Resources.ResXResourceWriter.Generate%2A>方法，如有必要之前释放托管和非托管系统资源,。</xref:System.Resources.ResXResourceWriter.Generate%2A>       此方法称为由公共<xref:System.Resources.ResXResourceWriter.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> </xref:System.Resources.ResXResourceWriter.Dispose%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数是`true`，此方法释放由任何托管对象持有的全部资源此<xref:System.Resources.ResXResourceWriter>引用。</xref:System.Resources.ResXResourceWriter> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Resources.ResXResourceWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Finalize
  id: Finalize
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: ResXResourceWriter.Finalize()
  fullName: System.Resources.ResXResourceWriter.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "此成员重写<xref:System.Object.Finalize*>方法。</xref:System.Object.Finalize*>"
  syntax:
    content: ~ResXResourceWriter ();
    parameters: []
  overload: System.Resources.ResXResourceWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Generate
  id: Generate
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: ResXResourceWriter.Generate()
  fullName: System.Resources.ResXResourceWriter.Generate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "将通过添加的所有资源都写入<xref:System.Resources.ResXResourceWriter.AddResource*>写入输出文件或流的方法。</xref:System.Resources.ResXResourceWriter.AddResource*>"
  remarks: "生成方法将资源写入到输出文件或流。 如果你想要将资源写入也尽可能接近输出文件或流，调用<xref:System.Resources.ResXResourceWriter.Close%2A>方法。</xref:System.Resources.ResXResourceWriter.Close%2A>       生成方法可以调用仅一次。 调用生成方法后，所有<xref:System.Resources.IResourceWriter>以外的其他方法<xref:System.Resources.ResXResourceWriter.Close%2A>将引发异常。</xref:System.Resources.ResXResourceWriter.Close%2A> </xref:System.Resources.IResourceWriter>"
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.ResXResourceWriter.Generate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已保存的资源。"
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.ResMimeType
  id: ResMimeType
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResMimeType
  nameWithType: ResXResourceWriter.ResMimeType
  fullName: System.Resources.ResXResourceWriter.ResMimeType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定的 XML 资源的内容类型。 此字段为只读的。"
  syntax:
    content: public static readonly string ResMimeType;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.ResourceSchema
  id: ResourceSchema
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: ResourceSchema
  nameWithType: ResXResourceWriter.ResourceSchema
  fullName: System.Resources.ResXResourceWriter.ResourceSchema
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定要在写入 XML 文件中使用的架构。 此字段为只读的。"
  remarks: "该架构提供有关如何进行编码基于正在写入的资源类型的资源的详细信息。"
  syntax:
    content: public static readonly string ResourceSchema;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType
  id: SoapSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: SoapSerializedObjectMimeType
  nameWithType: ResXResourceWriter.SoapSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定 SOAP 对象的内容类型。 此字段为只读的。"
  syntax:
    content: public static readonly string SoapSerializedObjectMimeType;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceWriter.Version
  id: Version
  parent: System.Resources.ResXResourceWriter
  langs:
  - csharp
  name: Version
  nameWithType: ResXResourceWriter.Version
  fullName: System.Resources.ResXResourceWriter.Version
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "指定 XML 输出所符合的架构的版本。 此字段为只读的。"
  syntax:
    content: public static readonly string Version;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(Stream)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(TextWriter)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Resources.ResXResourceWriter.#ctor(System.String)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(String)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(Stream,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(Stream,Func<Type,String>)
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(TextWriter,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(TextWriter,Func<Type,String>)
- uid: System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter(String,Func<Type,String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String,Func<Type,String>)
  fullName: System.Resources.ResXResourceWriter.ResXResourceWriter(String,Func<Type,String>)
- uid: System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddAlias(String,AssemblyName)
  nameWithType: ResXResourceWriter.AddAlias(String,AssemblyName)
  fullName: System.Resources.ResXResourceWriter.AddAlias(String,AssemblyName)
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddMetadata(String,Byte[])
  nameWithType: ResXResourceWriter.AddMetadata(String,Byte[])
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddMetadata(String,Object)
  nameWithType: ResXResourceWriter.AddMetadata(String,Object)
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,Object)
- uid: System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddMetadata(String,String)
  nameWithType: ResXResourceWriter.AddMetadata(String,String)
  fullName: System.Resources.ResXResourceWriter.AddMetadata(String,String)
- uid: System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddResource(ResXDataNode)
  nameWithType: ResXResourceWriter.AddResource(ResXDataNode)
  fullName: System.Resources.ResXResourceWriter.AddResource(ResXDataNode)
- uid: System.Resources.ResXDataNode
  parent: System.Resources
  isExternal: false
  name: ResXDataNode
  nameWithType: ResXDataNode
  fullName: System.Resources.ResXDataNode
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: ResXResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResXResourceWriter.AddResource(String,Byte[])
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: ResXResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResXResourceWriter.AddResource(String,Object)
- uid: System.Resources.ResXResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: ResXResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResXResourceWriter.AddResource(String,String)
- uid: System.Resources.ResXResourceWriter.BasePath
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceWriter.BasePath
  fullName: System.Resources.ResXResourceWriter.BasePath
- uid: System.Resources.ResXResourceWriter.BinSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: BinSerializedObjectMimeType
  nameWithType: ResXResourceWriter.BinSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.BinSerializedObjectMimeType
- uid: System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ByteArraySerializedObjectMimeType
  nameWithType: ResXResourceWriter.ByteArraySerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType
- uid: System.Resources.ResXResourceWriter.Close
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Close()
  nameWithType: ResXResourceWriter.Close()
  fullName: System.Resources.ResXResourceWriter.Close()
- uid: System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: DefaultSerializedObjectMimeType
  nameWithType: ResXResourceWriter.DefaultSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType
- uid: System.Resources.ResXResourceWriter.Dispose
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Dispose()
  nameWithType: ResXResourceWriter.Dispose()
  fullName: System.Resources.ResXResourceWriter.Dispose()
- uid: System.Resources.ResXResourceWriter.Dispose(System.Boolean)
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResXResourceWriter.Dispose(Boolean)
  fullName: System.Resources.ResXResourceWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResXResourceWriter.Finalize
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Finalize()
  nameWithType: ResXResourceWriter.Finalize()
  fullName: System.Resources.ResXResourceWriter.Finalize()
- uid: System.Resources.ResXResourceWriter.Generate
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: ResXResourceWriter.Generate()
  fullName: System.Resources.ResXResourceWriter.Generate()
- uid: System.Resources.ResXResourceWriter.ResMimeType
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResMimeType
  nameWithType: ResXResourceWriter.ResMimeType
  fullName: System.Resources.ResXResourceWriter.ResMimeType
- uid: System.Resources.ResXResourceWriter.ResourceSchema
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResourceSchema
  nameWithType: ResXResourceWriter.ResourceSchema
  fullName: System.Resources.ResXResourceWriter.ResourceSchema
- uid: System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: SoapSerializedObjectMimeType
  nameWithType: ResXResourceWriter.SoapSerializedObjectMimeType
  fullName: System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType
- uid: System.Resources.ResXResourceWriter.Version
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Version
  nameWithType: ResXResourceWriter.Version
  fullName: System.Resources.ResXResourceWriter.Version
- uid: System.Resources.ResXResourceWriter.#ctor*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: ResXResourceWriter
  nameWithType: ResXResourceWriter.ResXResourceWriter
- uid: System.Resources.ResXResourceWriter.AddAlias*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddAlias
  nameWithType: ResXResourceWriter.AddAlias
- uid: System.Resources.ResXResourceWriter.AddMetadata*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddMetadata
  nameWithType: ResXResourceWriter.AddMetadata
- uid: System.Resources.ResXResourceWriter.AddResource*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: ResXResourceWriter.AddResource
- uid: System.Resources.ResXResourceWriter.BasePath*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceWriter.BasePath
- uid: System.Resources.ResXResourceWriter.Close*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Close
  nameWithType: ResXResourceWriter.Close
- uid: System.Resources.ResXResourceWriter.Dispose*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Dispose
  nameWithType: ResXResourceWriter.Dispose
- uid: System.Resources.ResXResourceWriter.Finalize*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Finalize
  nameWithType: ResXResourceWriter.Finalize
- uid: System.Resources.ResXResourceWriter.Generate*
  parent: System.Resources.ResXResourceWriter
  isExternal: false
  name: Generate
  nameWithType: ResXResourceWriter.Generate
