### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInEnvironment
  id: AddInEnvironment
  children:
  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  - System.AddIn.Hosting.AddInEnvironment.Process
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
  type: Class
  summary: "提供对应用程序域和过程外接程序的访问。"
  remarks: "此类用于将外接程序加载到所需的环境，可以是下列项之一:-您对其具有现有应用程序域<xref:System.AppDomain>对象。</xref:System.AppDomain>      的自动生成激活外接程序应用程序域。      -现有外部的进程。       若要获取外接程序的 AddInEnvironment 对象，请将外接程序的应用程序域传递给 AddInEnvironment 类构造函数。 或者，可以使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性<xref:System.AddIn.Hosting.AddInController>若要获取外接程序的 AddInEnvironment 对象的类。</xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>       获取 AddInEnvironment 对象之后，你可以执行以下操作:-将该 AddInEnvironment 对象传递给相应<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</xref:System.AddIn.Hosting.AddInToken.Activate%2A> 外接程序将激活应用程序域和由 AddInEnvironment 对象表示的过程中。      -使用<xref:System.AddIn.Hosting.AddInEnvironment.Process%2A>属性来获取<xref:System.AddIn.Hosting.AddInProcess>对象。</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> 然后将该对象传递给相应<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</xref:System.AddIn.Hosting.AddInToken.Activate%2A> 外接程序将激活在由进程中<xref:System.AddIn.Hosting.AddInProcess>对象但新的应用程序域中。</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public sealed class AddInEnvironment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  id: '#ctor(System.AppDomain)'
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "初始化的新实例<xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;></xref>类。"
  remarks: "如果可以访问包含你需要的外接程序的应用程序域，你可以使用此构造函数获取外接程序的<xref:System.AddIn.Hosting.AddInEnvironment>对象。</xref:System.AddIn.Hosting.AddInEnvironment> 否则，你可以使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性<xref:System.AddIn.Hosting.AddInController>类来获取<xref:System.AddIn.Hosting.AddInEnvironment>对象。</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>"
  syntax:
    content: public AddInEnvironment (AppDomain appDomain);
    parameters:
    - id: appDomain
      type: System.AppDomain
      description: "包含外接程序的应用程序域。"
  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "需要完全信任权限。 中的调用链的调用方没有足够的权限。"
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  id: Process
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "获取<xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;></xref>表示在其中运行外接程序的进程的对象。"
  remarks: "此属性可用于激活多个外接程序在同一进程中但在不同的域。       传递<xref:System.AddIn.Hosting.AddInProcess>获取与此属性设置为相应的对象<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</xref:System.AddIn.Hosting.AddInToken.Activate%2A> </xref:System.AddIn.Hosting.AddInProcess>       如果你想要激活它们在相同域中外部进程应传递<xref:System.AddIn.Hosting.AddInEnvironment>对象直接<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName>方法重载。</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInEnvironment>"
  syntax:
    content: public System.AddIn.Hosting.AddInProcess Process { get; }
    return:
      type: System.AddIn.Hosting.AddInProcess
      description: "在其中运行外接程序的进程。"
  overload: System.AddIn.Hosting.AddInEnvironment.Process*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment.Process*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
