### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  id: CatalogPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  langs:
  - csharp
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  type: Class
  summary: "包含一套<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>控件用于提供最终用户可添加到网页上的 Web 服务器控件的目录。 此类不能被继承。"
  remarks: "CatalogPartCollection 类是只读集合的<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，通常由<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域用来跟踪的一套<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域包含的控件。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>       当 Web 部件页进入目录模式时，该区域创建新的 CatalogPartCollection 对象组成<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 每个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件的集合中可以包含零个或多个 Web 服务器控件，可用的服务器控件目录中的窗体中显示了这些对引用。</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       如果，例如，你需要执行大量操作的一组时，可以为你自己以编程方式使用创建的控件 CatalogPartCollection 集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 即使 CatalogPartCollection 对象是只读的你可以以编程方式更改集合中引用的基础控件。"
  example:
  - "The following code example demonstrates several uses of the CatalogPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a CatalogPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md). Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.  \n  \n [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_1.vb)]\n [!code-cs[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_1.cs)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. These controls become part of a custom CatalogPartCollection object that is created when the `Button1_Click` method executes. The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time. Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page. The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control. When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_2.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_2.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed now appears there. Clicking the **Display CatalogPart Properties** button accesses the CatalogPartCollection object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."
  syntax:
    content: 'public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化一个新的空实例<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;></xref>类。"
  remarks: "CatalogPartCollection 构造函数初始化<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>类</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>的空实例 内部使用此构造函数重载<xref:System.Web.UI.WebControls.WebParts.CatalogZone>类在其<xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>方法来创建一个空集合对象。</xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> </xref:System.Web.UI.WebControls.WebParts.CatalogZone> 然后，区域创建的所有实例<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件在子区域模板中，声明并使用集合的内部方法来添加它们。</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       你无法使用此重载 CatalogPartCollection 构造函数创建的新实例<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>并将<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件</xref:System.Web.UI.WebControls.WebParts.CatalogPart>添加到它。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 你必须改用的其他重载之一让 CatalogPartCollection 构造函数。"
  syntax:
    content: public CatalogPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;></xref>类通过传入<xref:System.Collections.ICollection>集合<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>控件。</xref:System.Collections.ICollection>"
  remarks: "CatalogPartCollection 构造函数初始化的实例<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>类，并传入的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 这是一个可用于创建新的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象，并将<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件</xref:System.Web.UI.WebControls.WebParts.CatalogPart>添加到它。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> CatalogPartCollection 构造函数重载       尽管<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>该构造函数创建的实例为只读，则仍可以访问个人<xref:System.Web.UI.WebControls.WebParts.CatalogPart>以编程方式控制集合中并调用其属性和方法。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       使用此构造函数的一个常见方案是如果你想要执行批处理操作时的整个集<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，如更改内容、 外观或一组相关的项的位置。</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the CatalogPartCollection constructor. It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only. The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/49bc6c07-48e8-4d4b-abba-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/49bc6c07-48e8-4d4b-abba-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip). If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description."
  syntax:
    content: public CatalogPartCollection (System.Collections.ICollection catalogParts);
    parameters:
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>的<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>控件。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;></xref>类通过传入<xref:System.Collections.ICollection>的现有集合<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>区域和一个其他的控件集合中的控件。</xref:System.Collections.ICollection>"
  syntax:
    content: public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);
    parameters:
    - id: existingCatalogParts
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "<xref:System.Collections.ICollection>现有<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>区域中的控件。</xref:System.Collections.ICollection>"
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>的其他<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>控件。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回一个值，该值指示集合中是否存在特定的控件。"
  remarks: "Contains 方法使您能够确定是否特定<xref:System.Web.UI.WebControls.WebParts.CatalogPart>对象属于<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Contains method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/2369b958-e1bb-44dd-9619-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/2369b958-e1bb-44dd-9619-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed has been added to it. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode. Click the verbs menu again on the control, and note that now the close verb is gone. It was removed by the code in the `Button1_Click` method, when it used the Contains method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>进行检查以确定它是否是集合中。"
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示集合是否是一个特定的控件。"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "将集合复制到的数组<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>对象。"
  remarks: "CopyTo 方法很有用，当你想要组合可以包含一个自定义数组<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中控制<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象或这些控件的子集。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.CatalogPart[]
      description: "数组<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>对象以包含所复制的集合。"
    - id: index
      type: System.Int32
      description: "在该位置将集合内容数组中的起始点。"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引用集合的静态、 只读的、 空实例。"
  remarks: "静态、 只读的、 空实例<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>可减少内存使用量情况下，要空集合的实例通过方法返回正确的对象类型或与另一个对象实例进行比较，但不是需要将成员添加到的实例。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回集合的特定成员的位置。"
  remarks: "如果你有多个 IndexOf 方法非常有用<xref:System.Web.UI.WebControls.WebParts.CatalogPart>上 Web 部件页，并且你的控件需要查找集合中的特定控件。</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its IndexOf property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the IndexOf property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/5504f26f-74ee-431e-9601-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/5504f26f-74ee-431e-9601-_1.aspx)]  \n  \n After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType> in the code that used the IndexOf property to retrieve the control."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>它应是集合的成员。"
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>它应是的成员<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置在集合中其位置上基于集合的成员。"
  remarks: "项的索引器允许你访问基础<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中控制<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象的索引，并更改其属性值或调用方法。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. Note that the method uses the Item indexer to retrieve information from the first member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1308_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1308_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "特定的索引<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>集合中。"
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>集合中的指定索引处。"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回基于的唯一字符串标识符的集合的成员。"
  remarks: "项的索引器允许你访问基础<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中控制<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象使用的字符串标识符。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> 尽管<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>对象是只读的你可以更改属性值或索引器访问的基础控件上调用方法。</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Item indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1244_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1244_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: "为特定的唯一标识符<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>集合中。"
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "第一个<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>集合中其 ID 等于的值<code> id </code>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.CatalogPart
    name: CatalogPart
    nameWithType: CatalogPart
    fullName: CatalogPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains
  nameWithType: CatalogPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: CatalogPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: CatalogPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item
  nameWithType: CatalogPartCollection.Item
