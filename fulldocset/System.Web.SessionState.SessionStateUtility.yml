### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateUtility
  id: SessionStateUtility
  children:
  - System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  - System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  - System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  langs:
  - csharp
  name: SessionStateUtility
  nameWithType: SessionStateUtility
  fullName: System.Web.SessionState.SessionStateUtility
  type: Class
  summary: "提供帮助器方法模块会话状态和会话状态使用的存储提供程序来管理 ASP.NET 应用程序的会话信息。 此类不能被继承。"
  remarks: "SessionStateUtility 类提供了会话状态模块或会话状态存储提供程序所使用的静态帮助器方法。 应用程序开发人员将不需要从其代码中调用这些方法。       下表介绍的会话状态模块和会话状态存储提供程序使用的方法的方法。      |方法 |使用 |  |------------|---------|  |<xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>方法 |自定义会话状态模块可以使用要检索现有会话的会话信息或创建新的会话的会话信息。 |  |<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法 |由会话状态模块添加到当前<xref:System.Web.HttpContext>会话数据并使其可供通过<xref:System.Web.HttpContext.Session%2A>属性的应用程序代码调用。 |  |<xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>方法 |在<xref:System.Web.HttpApplication.ReleaseRequestState>过程中调用由会话状态模块或<xref:System.Web.HttpApplication.EndRequest>事件在请求时，若要清除当前<xref:System.Web.HttpContext>中的会话数据末尾。 |  |<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法 |要获取对引用的会话状态模块由调用<xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>根据在 Global.asax 文件中定义的对象的集合。</xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> </xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A> <xref:System.Web.HttpStaticObjectsCollection>集合，则返回包含添加到当前<xref:System.Web.HttpContext>的会话数据。 |      传递给会话数据和将其从当前检索<xref:System.Web.HttpContext>作为<xref:System.Web.SessionState.HttpSessionStateContainer>对象或任何有效的实现的<xref:System.Web.SessionState.IHttpSessionState>接口。</xref:System.Web.SessionState.IHttpSessionState> </xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpStaticObjectsCollection>       有关实现的会话状态存储提供程序的信息，请参阅[实现会话状态存储提供程序](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows a custom session-state module implementation that stores session information in memory using a <xref:System.Collections.Hashtable>. The module uses the SessionStateUtility class to reference the current <xref:System.Web.HttpContext> and <xref:System.Web.SessionState.SessionIDManager>, retrieve the current <xref:System.Web.HttpStaticObjectsCollection>, and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application. This application does not prevent simultaneous Web requests from using the same session identifier.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_6_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/csharp/t-system.web.sessionstat_6_1.cs)]  \n  \n To use this custom session-state module in an ASP.NET application, you can replace the existing <xref:System.Web.SessionState.SessionStateModule> reference in the Web.config file, as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <remove name=\"Session\" />  \n      <add name=\"Session\"  \n      type=\"Samples.AspNet.SessionState.MySessionStateModule\" />  \n    </httpModules>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public static class SessionStateUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  id: AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "适用于当前请求的上下文的会话数据。"
  remarks: "会话状态模块使用 AddHttpSessionStateToContext 方法要应用于当前请求的会话数据。 时会出现此情况<xref:System.Web.HttpApplication.AcquireRequestState>请求的开始处的事件。</xref:System.Web.HttpApplication.AcquireRequestState> 为当前请求的会话数据检索现有会话，或者为新的会话创建。 会话数据随后将封装在<xref:System.Web.SessionState.IHttpSessionState>实现实例，将传递给以及当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> AddHttpSessionStateToContext 方法</xref:System.Web.SessionState.IHttpSessionState> 提供的会话数据然后将提供给应用程序代码中通过<xref:System.Web.HttpContext.Session%2A>当前上下文的属性。</xref:System.Web.HttpContext.Session%2A>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The custom module retrieves existing session information or creates new session information and uses the AddHttpSessionStateToContext method to add it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/5c9b7582-11c3-42e9-975d-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/5c9b7582-11c3-42e9-975d-_1.cs)]"
  syntax:
    content: public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>对象向其添加<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;></xref>对象。"
    - id: container
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>实现实例将添加到指定的 HTTP 上下文。"
  overload: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>对象当前会话已添加到指定<code> context </code>。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  id: GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "从当前请求的上下文中检索会话数据。"
  remarks: "GetHttpSessionStateFromContext 方法可以由会话状态模块，用于检索从当前请求的会话数据。 时会出现此情况<xref:System.Web.HttpApplication.ReleaseRequestState>末尾的请求的事件。</xref:System.Web.HttpApplication.ReleaseRequestState> 返回的会话数据然后可以写入会话数据存储区。 如果会话已被放弃，可以从数据存储中删除的会话数据和<xref:System.Web.HttpContext>，和**Session_OnEnd**可以执行事件。</xref:System.Web.HttpContext>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The module retrieves session data from the <xref:System.Web.HttpContext> for the current request using the GetHttpSessionStateFromContext method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/9c400b1a-e4b0-47ca-aaa3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/9c400b1a-e4b0-47ca-aaa3-_1.cs)]"
  syntax:
    content: public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>要从中检索会话数据。"
    return:
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>实现实例使用当前请求的会话数据填充。"
  overload: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  id: GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "获取指定上下文的静态对象集合的引用。"
  remarks: "GetSessionStaticObjects 方法用于检索在 ASP.NET 应用程序的 Global.asax 文件中定义的静态对象的集合。 会话状态模块实现将提供返回<xref:System.Web.HttpStaticObjectsCollection>集合到<xref:System.Web.SessionState.IHttpSessionState>添加到当前上下文使用的实现实例<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法。</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.SessionState.IHttpSessionState> </xref:System.Web.HttpStaticObjectsCollection>       A<xref:System.Web.SessionState.SessionStateStoreProviderBase>创建时，还可以使用 GetSessionStaticObjects 方法<xref:System.Web.SessionState.SessionStateStoreData>对象。</xref:System.Web.SessionState.SessionStateStoreData> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The module retrieves existing session information or creates new session information, including the <xref:System.Web.HttpStaticObjectsCollection> collection returned from the GetSessionStaticObjects method, and adds it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/ce95f35b-c097-49c6-952e-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/ce95f35b-c097-49c6-952e-_1.cs)]"
  syntax:
    content: public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>从中获取静态对象集合。"
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref>集合填充<xref:System.Web.SessionState.HttpSessionState.StaticObjects*>指定的属性值<xref href=&quot;System.Web.HttpContext&quot;> </xref>。</xref:System.Web.SessionState.HttpSessionState.StaticObjects*>"
  overload: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  id: IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "获取一个值，该值指示会话状态是否为只读的指定<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public static bool IsSessionStateReadOnly (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "指定<xref href=&quot;System.Web.HttpContext&quot;></xref>检查。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果会话状态是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  id: IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "获取一个值，该值指示是否需要指定的会话状态<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public static bool IsSessionStateRequired (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "指定<xref href=&quot;System.Web.HttpContext&quot;></xref>检查。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果会话状态是必需的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  id: RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "执行**Session_OnEnd**在 ASP.NET 应用程序的 Global.asax 文件中定义的事件。"
  remarks: "会话状态模块使用 RaiseSessionEnd 方法执行**Session_OnEnd**在 ASP.NET 应用程序的 Global.asax 文件中定义的事件。 会话已被放弃，或者如果会话过期时，会话状态模块将调用 RaiseSessionEnd 方法。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. If the session has been abandoned, the module executes the **Session_OnEnd** event defined in the Global.asax file for the application using the RaiseSessionEnd method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/cd86aefd-3df6-4b8a-826f-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/cd86aefd-3df6-4b8a-826f-_1.cs)]"
  syntax:
    content: public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);
    parameters:
    - id: session
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>已结束的会话的实现实例。"
    - id: eventSource
      type: System.Object
      description: "事件源对象，要提供给<xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;></xref>事件。"
    - id: eventArgs
      type: System.EventArgs
      description: "<xref:System.EventArgs>对象要提供给<xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;></xref>事件。</xref:System.EventArgs>"
  overload: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  id: RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "从指定的上下文中移除会话数据。"
  remarks: "RemoveHttpSessionStateFromContext 方法清除中指定的<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>会话数据 会话状态模块将处理程序中调用 RemoveHttpSessionStateFromContext 方法<xref:System.Web.HttpApplication.ReleaseRequestState>事件。</xref:System.Web.HttpApplication.ReleaseRequestState>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The event handler removes session data from the current <xref:System.Web.HttpContext>. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/db56662a-8b24-4084-9ec3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/db56662a-8b24-4084-9ec3-_1.cs)]"
  syntax:
    content: public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>要从中删除会话数据。"
  overload: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  id: SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "获取或设置用于会话序列化自定义序列化代理项选择器。"
  syntax:
    content: public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "序列化代理项选择器。"
  overload: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.IHttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects
  nameWithType: SessionStateUtility.GetSessionStaticObjects
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly
  nameWithType: SessionStateUtility.IsSessionStateReadOnly
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired
  nameWithType: SessionStateUtility.IsSessionStateRequired
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd
  nameWithType: SessionStateUtility.RaiseSessionEnd
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
