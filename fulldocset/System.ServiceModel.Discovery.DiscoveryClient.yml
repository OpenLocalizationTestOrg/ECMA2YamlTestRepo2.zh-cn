### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.DiscoveryClient
  id: DiscoveryClient
  children:
  - System.ServiceModel.Discovery.DiscoveryClient.#ctor
  - System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)
  - System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)
  - System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory
  - System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials
  - System.ServiceModel.Discovery.DiscoveryClient.Close
  - System.ServiceModel.Discovery.DiscoveryClient.Endpoint
  - System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.FindCompleted
  - System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged
  - System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)
  - System.ServiceModel.Discovery.DiscoveryClient.InnerChannel
  - System.ServiceModel.Discovery.DiscoveryClient.Open
  - System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable
  - System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted
  - System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)
  - System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)
  - System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  - System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State
  langs:
  - csharp
  name: DiscoveryClient
  nameWithType: DiscoveryClient
  fullName: System.ServiceModel.Discovery.DiscoveryClient
  type: Class
  summary: "可以发现可用的服务。"
  syntax:
    content: 'public sealed class DiscoveryClient : IDisposable, System.ServiceModel.ICommunicationObject'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.ICommunicationObject
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: DiscoveryClient()
  nameWithType: DiscoveryClient.DiscoveryClient()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "创建的新实例<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;></xref>类。"
  syntax:
    content: public DiscoveryClient ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)
  id: '#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)'
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: DiscoveryClient(DiscoveryEndpoint)
  nameWithType: DiscoveryClient.DiscoveryClient(DiscoveryEndpoint)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient(DiscoveryEndpoint)
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "创建的新实例<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;></xref>与指定的发现终结点的类。"
  syntax:
    content: public DiscoveryClient (System.ServiceModel.Discovery.DiscoveryEndpoint discoveryEndpoint);
    parameters:
    - id: discoveryEndpoint
      type: System.ServiceModel.Discovery.DiscoveryEndpoint
      description: "要发送发现消息时使用的发现终结点。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: DiscoveryClient(String)
  nameWithType: DiscoveryClient.DiscoveryClient(String)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "创建的新实例<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;></xref>使用指定的终结点配置的类。"
  syntax:
    content: public DiscoveryClient (string endpointConfigurationName);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "要使用的终结点配置名称。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: DiscoveryClient.CancelAsync(Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "取消一个挂起的异步操作。"
  remarks: "<xref:System.ArgumentNullException>如果引发`userState`是`null`。</xref:System.ArgumentNullException> 如果选择多个<xref:System.ServiceModel.Discovery.DiscoveryClient.FindAsync%2A>或<xref:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync%2A>具有相同调用操作`userState`值和 CancelAsync 称为与`userState`值，<xref:System.InvalidOperationException>引发。</xref:System.InvalidOperationException> </xref:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync%2A> </xref:System.ServiceModel.Discovery.DiscoveryClient.FindAsync%2A>"
  syntax:
    content: public void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "用户指定的状态对象传递给<> *1> 方法或之一<> *1> 方法。 它标识要取消的挂起异步操作。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory
  id: ChannelFactory
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ChannelFactory
  nameWithType: DiscoveryClient.ChannelFactory
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "获取通道的工厂<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;> </xref>。"
  syntax:
    content: public System.ServiceModel.ChannelFactory ChannelFactory { get; }
    return:
      type: System.ServiceModel.ChannelFactory
      description: "通道工厂。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials
  id: ClientCredentials
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ClientCredentials
  nameWithType: DiscoveryClient.ClientCredentials
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "获取凭据的客户端<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;> </xref>。"
  syntax:
    content: public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "客户端凭据<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;> </xref>。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.Close
  id: Close
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: Close()
  nameWithType: DiscoveryClient.Close()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Close()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "关闭发现客户端。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.Endpoint
  id: Endpoint
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: Endpoint
  nameWithType: DiscoveryClient.Endpoint
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Endpoint
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "获取用于发送发现消息的终结点。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Endpoint { get; }
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "用于发送发现消息的终结点。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.Endpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)
  id: Find(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: Find(FindCriteria)
  nameWithType: DiscoveryClient.Find(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Find(FindCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "发送请求以查找与指定的条件匹配的服务。"
  syntax:
    content: public System.ServiceModel.Discovery.FindResponse Find (System.ServiceModel.Discovery.FindCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.FindCriteria
      description: "有关查找服务的条件。"
    return:
      type: System.ServiceModel.Discovery.FindResponse
      description: "匹配的服务终结点可发现元数据。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)
  id: FindAsync(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindAsync(FindCriteria)
  nameWithType: DiscoveryClient.FindAsync(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(FindCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步查找操作使用指定的条件。"
  remarks: "查找无法取消通过调用此方法启动的操作。"
  syntax:
    content: public void FindAsync (System.ServiceModel.Discovery.FindCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.FindCriteria
      description: "有关查找服务的条件。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.FindAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)
  id: FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindAsync(FindCriteria,Object)
  nameWithType: DiscoveryClient.FindAsync(FindCriteria,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(FindCriteria,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步查找操作使用指定的条件和用户定义的状态对象。"
  remarks: "如果`userState`参数是`null`，查找操作不能取消。"
  syntax:
    content: public void FindAsync (System.ServiceModel.Discovery.FindCriteria criteria, object userState);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.FindCriteria
      description: "有关查找服务的条件。"
    - id: userState
      type: System.Object
      description: "用户指定用于标识异步查找操作的对象。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.FindAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindCompleted
  id: FindCompleted
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindCompleted
  nameWithType: DiscoveryClient.FindCompleted
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindCompleted
  type: Event
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "当整个查找操作完成时发生。"
  remarks: "<xref:System.ServiceModel.Discovery.FindCompletedEventArgs.Result%2A>属性包含所有匹配的服务有关的信息。</xref:System.ServiceModel.Discovery.FindCompletedEventArgs.Result%2A> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]请参阅此事件[异步查找](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler<System.ServiceModel.Discovery.FindCompletedEventArgs> FindCompleted;
    return:
      type: System.EventHandler{System.ServiceModel.Discovery.FindCompletedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged
  id: FindProgressChanged
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindProgressChanged
  nameWithType: DiscoveryClient.FindProgressChanged
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged
  type: Event
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "每次客户端接收来自特定服务的响应时发生。"
  remarks: "此事件非常有用，如果你要到达时处理结果。 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]请参阅此事件[异步查找](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler<System.ServiceModel.Discovery.FindProgressChangedEventArgs> FindProgressChanged;
    return:
      type: System.EventHandler{System.ServiceModel.Discovery.FindProgressChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)
  id: FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindTaskAsync(FindCriteria)
  nameWithType: DiscoveryClient.FindTaskAsync(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(FindCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步查找任务操作使用指定的条件。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Discovery.FindResponse> FindTaskAsync (System.ServiceModel.Discovery.FindCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.FindCriteria
      description: "有关查找服务的条件。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Discovery.FindResponse}
      description: "异步查找任务操作。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)
  id: FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: FindTaskAsync(FindCriteria,CancellationToken)
  nameWithType: DiscoveryClient.FindTaskAsync(FindCriteria,CancellationToken)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(FindCriteria,CancellationToken)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步查找任务操作使用指定的条件和取消令牌对象。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Discovery.FindResponse> FindTaskAsync (System.ServiceModel.Discovery.FindCriteria criteria, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.FindCriteria
      description: "有关查找服务的条件。"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "通知传播取消标记。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Discovery.FindResponse}
      description: "异步查找任务操作。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel
  id: InnerChannel
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: InnerChannel
  nameWithType: DiscoveryClient.InnerChannel
  fullName: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "获取用于发送发现消息的通道。"
  syntax:
    content: public System.ServiceModel.IClientChannel InnerChannel { get; }
    return:
      type: System.ServiceModel.IClientChannel
      description: "用于发送发现消息的通道。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.Open
  id: Open
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: Open()
  nameWithType: DiscoveryClient.Open()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Open()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "打开<xref href=&quot;System.ServiceModel.Discovery.DiscoveryClient&quot;> </xref>。"
  remarks: "此方法将转换到打开状态发现客户端。"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable
  id: ProxyAvailable
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ProxyAvailable
  nameWithType: DiscoveryClient.ProxyAvailable
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable
  type: Event
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "从在查找或解析操作响应中的发现代理收到多播的禁止消息时发生。"
  syntax:
    content: public event EventHandler<System.ServiceModel.Discovery.AnnouncementEventArgs> ProxyAvailable;
    return:
      type: System.EventHandler{System.ServiceModel.Discovery.AnnouncementEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)
  id: Resolve(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: Resolve(ResolveCriteria)
  nameWithType: DiscoveryClient.Resolve(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Resolve(ResolveCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步解析操作使用指定的条件。"
  syntax:
    content: public System.ServiceModel.Discovery.ResolveResponse Resolve (System.ServiceModel.Discovery.ResolveCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.ResolveCriteria
      description: "与匹配的服务终结点的条件。"
    return:
      type: System.ServiceModel.Discovery.ResolveResponse
      description: "位于指定的地址的服务终结点的可发现元数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果在指定的地址处不找到任何服务终结点。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.Resolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)
  id: ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ResolveAsync(ResolveCriteria)
  nameWithType: DiscoveryClient.ResolveAsync(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(ResolveCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步解析操作使用指定的条件。"
  remarks: "解决无法取消通过调用此方法启动的操作。"
  syntax:
    content: public void ResolveAsync (System.ServiceModel.Discovery.ResolveCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.ResolveCriteria
      description: "与匹配的服务终结点的条件。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)
  id: ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ResolveAsync(ResolveCriteria,Object)
  nameWithType: DiscoveryClient.ResolveAsync(ResolveCriteria,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(ResolveCriteria,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步解析操作使用指定的条件和用户定义的状态对象。"
  remarks: "如果`userState`参数为 null，则无法取消解析操作。"
  syntax:
    content: public void ResolveAsync (System.ServiceModel.Discovery.ResolveCriteria criteria, object userState);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.ResolveCriteria
      description: "与匹配的服务终结点的条件。"
    - id: userState
      type: System.Object
      description: "用户指定用于标识异步解析操作的对象。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted
  id: ResolveCompleted
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: DiscoveryClient.ResolveCompleted
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted
  type: Event
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "完成异步解析操作时发生。"
  syntax:
    content: public event EventHandler<System.ServiceModel.Discovery.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.ServiceModel.Discovery.ResolveCompletedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)
  id: ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ResolveTaskAsync(ResolveCriteria)
  nameWithType: DiscoveryClient.ResolveTaskAsync(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(ResolveCriteria)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步解析任务操作使用指定的条件。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Discovery.ResolveResponse> ResolveTaskAsync (System.ServiceModel.Discovery.ResolveCriteria criteria);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.ResolveCriteria
      description: "与匹配的服务终结点的条件。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Discovery.ResolveResponse}
      description: "Asynchronouos 解析任务操作。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)
  id: ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: ResolveTaskAsync(ResolveCriteria,CancellationToken)
  nameWithType: DiscoveryClient.ResolveTaskAsync(ResolveCriteria,CancellationToken)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(ResolveCriteria,CancellationToken)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始异步解析任务操作使用指定的条件和取消标记。"
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Discovery.ResolveResponse> ResolveTaskAsync (System.ServiceModel.Discovery.ResolveCriteria criteria, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: criteria
      type: System.ServiceModel.Discovery.ResolveCriteria
      description: "与匹配的服务终结点的条件。"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "通知传播取消标记。"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Discovery.ResolveResponse}
      description: "异步解析任务操作。"
  overload: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: DiscoveryClient.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "提供的实现<xref:System.IDisposable.Dispose*>方法。</xref:System.IDisposable.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort
  id: System#ServiceModel#ICommunicationObject#Abort
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Abort()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Abort()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Abort()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "使通信对象转换到立即从其当前状态到关闭状态。"
  syntax:
    content: void ICommunicationObject.Abort ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始一个异步操作以关闭通信对象。"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>可接收异步关闭操作完成通知的委托。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的对象，由应用程序，它包含与异步关闭操作相关联的状态信息。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用异步关闭操作。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始一个异步操作以关闭通信对象具有指定的超时值。"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定在超时前完成发送操作必须多长时间。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>可接收异步关闭操作完成通知的委托。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的对象，由应用程序，它包含与异步关闭操作相关联的状态信息。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用异步关闭操作。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始一个异步操作以打开通信对象。"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>可接收异步打开操作完成通知的委托。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的对象，由应用程序，它包含与异步打开操作关联的状态信息。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用异步打开操作。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "开始一个异步操作以在指定时间间隔内打开通信对象。"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定在超时前完成发送操作必须多长时间。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>可接收异步打开操作完成通知的委托。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的对象，由应用程序，它包含与异步打开操作关联的状态信息。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>引用异步打开操作。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close
  id: System#ServiceModel#ICommunicationObject#Close
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Close()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Close()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "使通信对象转换从其当前状态到关闭状态。"
  syntax:
    content: void ICommunicationObject.Close ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "使通信对象转换从其当前状态到关闭状态的时间在指定间隔内。"
  syntax:
    content: void ICommunicationObject.Close (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定在超时前完成发送操作必须多长时间。</xref:System.TimeSpan>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "完成一个异步操作以关闭通信对象。"
  syntax:
    content: void ICommunicationObject.EndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>ICommunicationObject.EndClose 方法的调用返回。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "完成一个异步操作以打开通信对象。"
  syntax:
    content: void ICommunicationObject.EndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>返回通过调用<xref:System.ServiceModel.ICommunicationObject.BeginOpen*>方法。</xref:System.ServiceModel.ICommunicationObject.BeginOpen*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open
  id: System#ServiceModel#ICommunicationObject#Open
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Open()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Open()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "使通信对象转换从已创建状态打开状态。"
  syntax:
    content: void ICommunicationObject.Open ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "使通信对象转换从已创建状态打开状态的时间在指定间隔内。"
  syntax:
    content: void ICommunicationObject.Open (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定在超时前完成发送操作必须多长时间。</xref:System.TimeSpan>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State
  id: System#ServiceModel#ICommunicationObject#State
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryClient
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.State
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.State
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "获取面向通信的对象的当前状态。"
  syntax:
    content: System.ServiceModel.CommunicationState System.ServiceModel.ICommunicationObject.State { get; }
    return:
      type: System.ServiceModel.CommunicationState
      description: "值<xref:System.ServiceModel.CommunicationState>的对象。</xref:System.ServiceModel.CommunicationState>"
  overload: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: DiscoveryClient()
  nameWithType: DiscoveryClient.DiscoveryClient()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient()
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: DiscoveryClient(DiscoveryEndpoint)
  nameWithType: DiscoveryClient.DiscoveryClient(DiscoveryEndpoint)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient(DiscoveryEndpoint)
- uid: System.ServiceModel.Discovery.DiscoveryEndpoint
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: DiscoveryEndpoint
  nameWithType: DiscoveryEndpoint
  fullName: System.ServiceModel.Discovery.DiscoveryEndpoint
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: DiscoveryClient(String)
  nameWithType: DiscoveryClient.DiscoveryClient(String)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.DiscoveryClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: DiscoveryClient.CancelAsync(Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(Object)
- uid: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ChannelFactory
  nameWithType: DiscoveryClient.ChannelFactory
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory
- uid: System.ServiceModel.ChannelFactory
  parent: System.ServiceModel
  isExternal: true
  name: ChannelFactory
  nameWithType: ChannelFactory
  fullName: System.ServiceModel.ChannelFactory
- uid: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ClientCredentials
  nameWithType: DiscoveryClient.ClientCredentials
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.Discovery.DiscoveryClient.Close
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Close()
  nameWithType: DiscoveryClient.Close()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Close()
- uid: System.ServiceModel.Discovery.DiscoveryClient.Endpoint
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Endpoint
  nameWithType: DiscoveryClient.Endpoint
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Endpoint
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Find(FindCriteria)
  nameWithType: DiscoveryClient.Find(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Find(FindCriteria)
- uid: System.ServiceModel.Discovery.FindResponse
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: FindResponse
  nameWithType: FindResponse
  fullName: System.ServiceModel.Discovery.FindResponse
- uid: System.ServiceModel.Discovery.FindCriteria
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: FindCriteria
  nameWithType: FindCriteria
  fullName: System.ServiceModel.Discovery.FindCriteria
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindAsync(FindCriteria)
  nameWithType: DiscoveryClient.FindAsync(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(FindCriteria)
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindAsync(FindCriteria,Object)
  nameWithType: DiscoveryClient.FindAsync(FindCriteria,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindAsync(FindCriteria,Object)
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindCompleted
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindCompleted
  nameWithType: DiscoveryClient.FindCompleted
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindCompleted
- uid: System.EventHandler{System.ServiceModel.Discovery.FindCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<FindCompletedEventArgs>
  nameWithType: EventHandler<FindCompletedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.Discovery.FindCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.Discovery.FindCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.FindCompletedEventArgs
    name: FindCompletedEventArgs
    nameWithType: FindCompletedEventArgs
    fullName: FindCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindProgressChanged
  nameWithType: DiscoveryClient.FindProgressChanged
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged
- uid: System.EventHandler{System.ServiceModel.Discovery.FindProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<FindProgressChangedEventArgs>
  nameWithType: EventHandler<FindProgressChangedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.Discovery.FindProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.Discovery.FindProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.FindProgressChangedEventArgs
    name: FindProgressChangedEventArgs
    nameWithType: FindProgressChangedEventArgs
    fullName: FindProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindTaskAsync(FindCriteria)
  nameWithType: DiscoveryClient.FindTaskAsync(FindCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(FindCriteria)
- uid: System.Threading.Tasks.Task{System.ServiceModel.Discovery.FindResponse}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<FindResponse>
  nameWithType: Task<FindResponse>
  fullName: System.Threading.Tasks.Task<System.ServiceModel.Discovery.FindResponse>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.ServiceModel.Discovery.FindResponse>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.FindResponse
    name: FindResponse
    nameWithType: FindResponse
    fullName: FindResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindTaskAsync(FindCriteria,CancellationToken)
  nameWithType: DiscoveryClient.FindTaskAsync(FindCriteria,CancellationToken)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(FindCriteria,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: InnerChannel
  nameWithType: DiscoveryClient.InnerChannel
  fullName: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Discovery.DiscoveryClient.Open
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Open()
  nameWithType: DiscoveryClient.Open()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Open()
- uid: System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ProxyAvailable
  nameWithType: DiscoveryClient.ProxyAvailable
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable
- uid: System.EventHandler{System.ServiceModel.Discovery.AnnouncementEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AnnouncementEventArgs>
  nameWithType: EventHandler<AnnouncementEventArgs>
  fullName: System.EventHandler<System.ServiceModel.Discovery.AnnouncementEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.Discovery.AnnouncementEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.AnnouncementEventArgs
    name: AnnouncementEventArgs
    nameWithType: AnnouncementEventArgs
    fullName: AnnouncementEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Resolve(ResolveCriteria)
  nameWithType: DiscoveryClient.Resolve(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.Resolve(ResolveCriteria)
- uid: System.ServiceModel.Discovery.ResolveResponse
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: ResolveResponse
  nameWithType: ResolveResponse
  fullName: System.ServiceModel.Discovery.ResolveResponse
- uid: System.ServiceModel.Discovery.ResolveCriteria
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: ResolveCriteria
  nameWithType: ResolveCriteria
  fullName: System.ServiceModel.Discovery.ResolveCriteria
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveAsync(ResolveCriteria)
  nameWithType: DiscoveryClient.ResolveAsync(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(ResolveCriteria)
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveAsync(ResolveCriteria,Object)
  nameWithType: DiscoveryClient.ResolveAsync(ResolveCriteria,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(ResolveCriteria,Object)
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveCompleted
  nameWithType: DiscoveryClient.ResolveCompleted
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted
- uid: System.EventHandler{System.ServiceModel.Discovery.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.Discovery.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.Discovery.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveTaskAsync(ResolveCriteria)
  nameWithType: DiscoveryClient.ResolveTaskAsync(ResolveCriteria)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(ResolveCriteria)
- uid: System.Threading.Tasks.Task{System.ServiceModel.Discovery.ResolveResponse}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<ResolveResponse>
  nameWithType: Task<ResolveResponse>
  fullName: System.Threading.Tasks.Task<System.ServiceModel.Discovery.ResolveResponse>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.ServiceModel.Discovery.ResolveResponse>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.ResolveResponse
    name: ResolveResponse
    nameWithType: ResolveResponse
    fullName: ResolveResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveTaskAsync(ResolveCriteria,CancellationToken)
  nameWithType: DiscoveryClient.ResolveTaskAsync(ResolveCriteria,CancellationToken)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(ResolveCriteria,CancellationToken)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: DiscoveryClient.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.IDisposable.Dispose()
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Abort()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Abort()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Abort()
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Close()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Close()
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Open()
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Open()
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.State
  fullName: System.ServiceModel.Discovery.DiscoveryClient.System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.CommunicationState
  parent: System.ServiceModel
  isExternal: true
  name: CommunicationState
  nameWithType: CommunicationState
  fullName: System.ServiceModel.CommunicationState
- uid: System.ServiceModel.Discovery.DiscoveryClient.#ctor*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: DiscoveryClient
  nameWithType: DiscoveryClient.DiscoveryClient
- uid: System.ServiceModel.Discovery.DiscoveryClient.CancelAsync*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: CancelAsync
  nameWithType: DiscoveryClient.CancelAsync
- uid: System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ChannelFactory
  nameWithType: DiscoveryClient.ChannelFactory
- uid: System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ClientCredentials
  nameWithType: DiscoveryClient.ClientCredentials
- uid: System.ServiceModel.Discovery.DiscoveryClient.Close*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Close
  nameWithType: DiscoveryClient.Close
- uid: System.ServiceModel.Discovery.DiscoveryClient.Endpoint*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Endpoint
  nameWithType: DiscoveryClient.Endpoint
- uid: System.ServiceModel.Discovery.DiscoveryClient.Find*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Find
  nameWithType: DiscoveryClient.Find
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindAsync*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindAsync
  nameWithType: DiscoveryClient.FindAsync
- uid: System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: FindTaskAsync
  nameWithType: DiscoveryClient.FindTaskAsync
- uid: System.ServiceModel.Discovery.DiscoveryClient.InnerChannel*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: InnerChannel
  nameWithType: DiscoveryClient.InnerChannel
- uid: System.ServiceModel.Discovery.DiscoveryClient.Open*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Open
  nameWithType: DiscoveryClient.Open
- uid: System.ServiceModel.Discovery.DiscoveryClient.Resolve*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: Resolve
  nameWithType: DiscoveryClient.Resolve
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveAsync
  nameWithType: DiscoveryClient.ResolveAsync
- uid: System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: ResolveTaskAsync
  nameWithType: DiscoveryClient.ResolveTaskAsync
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DiscoveryClient.System.IDisposable.Dispose
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Abort
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Abort
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginClose
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.BeginOpen
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Close
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndClose
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndClose
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndOpen
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.EndOpen
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.Open
- uid: System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State*
  parent: System.ServiceModel.Discovery.DiscoveryClient
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: DiscoveryClient.System.ServiceModel.ICommunicationObject.State
