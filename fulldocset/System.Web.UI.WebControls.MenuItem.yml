### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItem
  id: MenuItem
  children:
  - System.Web.UI.WebControls.MenuItem.#ctor
  - System.Web.UI.WebControls.MenuItem.#ctor(System.String)
  - System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.MenuItem.ChildItems
  - System.Web.UI.WebControls.MenuItem.DataBound
  - System.Web.UI.WebControls.MenuItem.DataItem
  - System.Web.UI.WebControls.MenuItem.DataPath
  - System.Web.UI.WebControls.MenuItem.Depth
  - System.Web.UI.WebControls.MenuItem.Enabled
  - System.Web.UI.WebControls.MenuItem.ImageUrl
  - System.Web.UI.WebControls.MenuItem.NavigateUrl
  - System.Web.UI.WebControls.MenuItem.Parent
  - System.Web.UI.WebControls.MenuItem.PopOutImageUrl
  - System.Web.UI.WebControls.MenuItem.Selectable
  - System.Web.UI.WebControls.MenuItem.Selected
  - System.Web.UI.WebControls.MenuItem.SeparatorImageUrl
  - System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone
  - System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.MenuItem.Target
  - System.Web.UI.WebControls.MenuItem.Text
  - System.Web.UI.WebControls.MenuItem.ToolTip
  - System.Web.UI.WebControls.MenuItem.Value
  - System.Web.UI.WebControls.MenuItem.ValuePath
  langs:
  - csharp
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
  type: Class
  summary: "表示在显示的菜单项<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。 此类不能被继承。"
  remarks: "A<xref:System.Web.UI.WebControls.Menu>控件组成的 MenuItem 对象所表示的菜单项的层次结构。</xref:System.Web.UI.WebControls.Menu> 每个菜单项包含一个只读的<xref:System.Web.UI.WebControls.MenuItem.Depth%2A>属性，用于指定在显示菜单项级别<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.Depth%2A> 在顶层 （级别 0） 不具有父菜单项的菜单项称为根菜单项。 具有父菜单项的菜单项称为子菜单项。 所有根菜单项都存储在<xref:System.Web.UI.WebControls.Menu.Items%2A>集合。</xref:System.Web.UI.WebControls.Menu.Items%2A> 子菜单项存储在父菜单项的<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合。</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 你可以通过访问菜单项的父菜单项<xref:System.Web.UI.WebControls.MenuItem.Parent%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Parent%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.Menu.Items%2A>和<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合包含仅下一个级别的菜单项下。</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu.Items%2A> 若要访问菜单项进一步菜单树向下的，使用<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>的子菜单项的属性。</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>       若要创建的菜单项<xref:System.Web.UI.WebControls.Menu>控制，请使用以下方法之一︰ 声明性语法，用于创建静态菜单项。</xref:System.Web.UI.WebControls.Menu>       使用构造函数动态创建的 MenuItem 类的新实例。 然后，这些 MenuItem 对象可以添加到<xref:System.Web.UI.WebControls.Menu.Items%2A>或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合。</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu.Items%2A>       将绑定<xref:System.Web.UI.WebControls.Menu>控件添加到数据源。</xref:System.Web.UI.WebControls.Menu> 当<xref:System.Web.UI.WebControls.Menu>控件绑定到<xref:System.Web.UI.WebControls.SiteMapDataSource>控件，MenuItem 对象将自动创建对应于数据源中的项。</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.Menu> 对于其他数据源，MenuItem 对象也会自动创建与匹配的数据源，则层次结构但是，你还必须使用<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合来定义指定菜单项和其相应的数据项目之间的绑定关系菜单项绑定。</xref:System.Web.UI.WebControls.Menu.DataBindings%2A>       在静态菜单或动态菜单中的，具体取决于其级别中显示的菜单项。 静态菜单会始终以显示<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> 默认情况下，在顶层 （级别 0） 的菜单项显示在静态菜单中。 可以通过设置静态菜单中显示更多菜单级别 （静态子菜单）<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>属性。</xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 菜单比指定的值以更高级别的项 （如果有）<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>属性显示在动态子菜单。</xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 动态子菜单显示仅当用户将鼠标指针定位在父菜单项包含动态子菜单。       当用户单击菜单项，<xref:System.Web.UI.WebControls.Menu>控件可以导航到链接的网页或只需将回发到服务器。</xref:System.Web.UI.WebControls.Menu> 如果<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>设置菜单项的属性，则<xref:System.Web.UI.WebControls.Menu>控件导航到链接页; 否则，它将页面回发到服务器进行处理。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 默认情况下，链接的页面显示在相同的窗口或框架的<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> 若要在不同的窗口或框架显示链接的内容，请使用<xref:System.Web.UI.WebControls.Menu.Target%2A>属性<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>属性会影响在控件中的每个菜单项。</xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName> 若要指定的窗口或框架的各个菜单项，设置<xref:System.Web.UI.WebControls.MenuItem.Target%2A>直接的 MenuItem 对象属性。</xref:System.Web.UI.WebControls.MenuItem.Target%2A>       每个菜单项包含<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 值<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性显示在<xref:System.Web.UI.WebControls.Menu>控件，而<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性用于存储有关菜单项中，任何其他数据如传递给与菜单项关联的回发事件数据。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 如果你设置<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性，但保留<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性未设置，<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性自动设置相同的值与<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 反过来也是如此。 如果你设置<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，但不是<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性，<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性自动设置相同的值与<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A>      1> [!NOTE]&1;> 同一级别的菜单的菜单项必须每个具有唯一值<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性;<xref:System.Web.UI.WebControls.Menu>控件无法区分具有相同的值的不同的菜单项在同一级别。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 在此方案中，如果用户单击菜单项具有重复的值，则选择菜单中第一个出现的菜单项。       若要显示工具提示，用户将鼠标指针在菜单项时，设置项的<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>       A<xref:System.Web.UI.WebControls.Menu>控件具有多种不同类型的菜单项。</xref:System.Web.UI.WebControls.Menu> 你可以使用下表中的属性来控制不同的菜单项类型 （如字体大小和颜色） 的样式。      |菜单项样式属性 |说明 |  |------------------------------|-----------------|  |<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|当鼠标指针置于动态菜单项的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|单个动态菜单项的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|动态菜单的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|当前所选动态菜单项的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|当鼠标指针置于静态菜单项的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|单个静态菜单项的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静态菜单的样式设置。 |  |<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|当前所选的静态菜单项的样式设置。 |      而不是设置的单个样式属性，可以指定应用于根据其级别，通过使用下表中所示的样式集合的菜单项的样式。</xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> </xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> </xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> </xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> </xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> </xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> </xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> </xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>      |级别样式集合 |说明 |  |-----------------------------|-----------------|  |<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|控件的菜单项的样式的<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合根据其级别。 |  |<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|控件的样式的<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合选择根据其级别的菜单项。 |  |<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|根据其级别的控制子菜单项的样式的<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合。 |      集合中的第一个样式对应于在菜单树中的第一个深度级别的菜单项的样式。</xref:System.Web.UI.WebControls.MenuItemStyle> </xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> </xref:System.Web.UI.WebControls.MenuItemStyle> </xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> </xref:System.Web.UI.WebControls.MenuItemStyle> </xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合中的第二个样式对应于在第二个深度级别菜单树中，依次类推的菜单项的样式。 这是最常用于生成表的内容样式导航菜单其中某一深度的菜单项应具有相同的外观，而不考虑是否具有子菜单。      1> [!NOTE]&1;> 如果使用上表中列出的级别样式任何的集合定义的样式<xref:System.Web.UI.WebControls.Menu>控件，这些样式设置替代的各个菜单项样式属性。</xref:System.Web.UI.WebControls.Menu>       除了自定义菜单项的样式，你还可以自定义其外观。 可以通过下表中设置的属性指定自定义映像的菜单项的不同部分。      |图像属性 |说明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|显示文本的菜单项旁边的可选图像。 |  |<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>|菜单项以指示该菜单项具有动态子菜单中显示的可选图像。 |  |<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>|要与其他菜单项隔开的菜单项底部显示的可选图像。 |      若要确定是否中当前选定菜单项<xref:System.Web.UI.WebControls.Menu>控制，请使用<xref:System.Web.UI.WebControls.MenuItem.Selected%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Selected%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 您还可以确定是否菜单项绑定到数据使用<xref:System.Web.UI.WebControls.MenuItem.DataBound%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> 如果菜单项绑定到数据，则可以使用<xref:System.Web.UI.WebControls.MenuItem.DataItem%2A>属性来访问数据项目的值绑定到的菜单项。</xref:System.Web.UI.WebControls.MenuItem.DataItem%2A>       MenuItem 类的实例的初始属性值的列表，请参阅<xref:System.Web.UI.WebControls.MenuItem.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.MenuItem.%23ctor%2A>"
  example:
  - "The following example demonstrates how to populate a <xref:System.Web.UI.WebControls.Menu> control with static MenuItem objects using declarative syntax.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_177_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_177_1.aspx)]  \n  \n The following example demonstrates how to bind a <xref:System.Web.UI.WebControls.Menu> control to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. When bound to a data source, the <xref:System.Web.UI.WebControls.Menu> control automatically creates the MenuItem objects. For this example to work correctly, you must copy the sample site map data below to a file named Web.sitemap.  \n  \n [!code-cs[MenuDataBind#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_177_2.aspx)]\n [!code-vb[MenuDataBind#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_177_2.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<siteMap>`  \n  \n `<siteMapNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<siteMapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<siteMapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<siteMapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<siteMapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</siteMapNode>`  \n  \n `<siteMapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<siteMapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<siteMapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<siteMapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</siteMapNode>`  \n  \n `</siteMapNode>`  \n  \n `</siteMap>`"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildItems")]

      public sealed class MenuItem : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>而无需菜单文本或值的类。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>而无需菜单文本或值的类。</xref:System.Web.UI.WebControls.MenuItem>      1> [!NOTE]&1;> 使用此构造函数时中的所有属性<xref:System.Web.UI.WebControls.MenuItem>对象设置为其默认值。</xref:System.Web.UI.WebControls.MenuItem> 请务必设置属性，如有必要，创建对象之后。       此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCtorDefault#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_173_1.aspx)]\n [!code-cs[MenuItemCtorDefault#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_173_1.aspx)]"
  syntax:
    content: public MenuItem ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>类使用指定的菜单文本。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>类使用指定的菜单文本`text`参数。</xref:System.Web.UI.WebControls.MenuItem>       下表显示<xref:System.Web.UI.WebControls.MenuItem>类</xref:System.Web.UI.WebControls.MenuItem>实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|文本参数的值。 |      此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_43_1.aspx)]\n [!code-vb[MenuItemCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_43_1.aspx)]"
  syntax:
    content: public MenuItem (string text);
    parameters:
    - id: text
      type: System.String
      description: "为菜单项中显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem(String,String)
  nameWithType: MenuItem.MenuItem(String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>类使用的指定的菜单文本和值。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>类使用的菜单文本和指定值`text`和`value`参数，分别。</xref:System.Web.UI.WebControls.MenuItem>       下表显示<xref:System.Web.UI.WebControls.MenuItem>类</xref:System.Web.UI.WebControls.MenuItem>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|值`text`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|值`value`参数。 |      此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCtor2Param#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_156_1.aspx)]\n [!code-vb[MenuItemCtor2Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_156_1.aspx)]"
  syntax:
    content: public MenuItem (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "为菜单项中显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
    - id: value
      type: System.String
      description: "菜单项，如用于处理回发事件数据与关联的补充数据。"
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem(String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>类向映像中使用指定的菜单文本、 值和 URL。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>类使用菜单文本、 值和图像指定 URL `text`， `value`，和`imageUrl`参数，分别。</xref:System.Web.UI.WebControls.MenuItem>       下表显示<xref:System.Web.UI.WebControls.MenuItem>类</xref:System.Web.UI.WebControls.MenuItem>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|值`text`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|值`value`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|值`imageUrl`参数。 |      此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCtor3Param#1](~/add/codesnippet/visualbasic/50183024-d9d9-4104-9a97-_1.aspx)]\n [!code-cs[MenuItemCtor3Param#1](~/add/codesnippet/csharp/50183024-d9d9-4104-9a97-_1.aspx)]"
  syntax:
    content: public MenuItem (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "为菜单项中显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
    - id: value
      type: System.String
      description: "菜单项，如用于处理回发事件数据与关联的补充数据。"
    - id: imageUrl
      type: System.String
      description: "在菜单项的文本旁边显示的图像 URL。"
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem(String,String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>类使用指定的菜单文本、 值、 图像 URL 和导航 URL。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>类使用菜单文本、 值、 图像 URL 和指定的导航 URL `text`， `value`， `imageUrl`，和`navigateUrl`参数，分别。</xref:System.Web.UI.WebControls.MenuItem>       下表显示<xref:System.Web.UI.WebControls.MenuItem>类</xref:System.Web.UI.WebControls.MenuItem>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|值`text`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|值`value`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|值`imageUrl`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|值`navigateUrl`参数。 |      此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCtor4Param#1](~/add/codesnippet/visualbasic/550462a6-7fba-41a4-a649-_1.aspx)]\n [!code-cs[MenuItemCtor4Param#1](~/add/codesnippet/csharp/550462a6-7fba-41a4-a649-_1.aspx)]"
  syntax:
    content: public MenuItem (string text, string value, string imageUrl, string navigateUrl);
    parameters:
    - id: text
      type: System.String
      description: "为菜单项中显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
    - id: value
      type: System.String
      description: "菜单项，如用于处理回发事件数据与关联的补充数据。"
    - id: imageUrl
      type: System.String
      description: "在菜单项的文本旁边显示的图像 URL。"
    - id: navigateUrl
      type: System.String
      description: "要时单击该菜单项链接到的 URL。"
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: MenuItem(String,String,String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>类使用指定的菜单文本、 值、 图像 URL、 导航 URL 和目标。"
  remarks: "使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItem>类使用菜单文本、 值、 图像 URL、 导航 URL 和指定的目标`text`， `value`， `imageUrl`， `navigateUrl`，和`target`参数，分别。</xref:System.Web.UI.WebControls.MenuItem>       下表显示<xref:System.Web.UI.WebControls.MenuItem>类</xref:System.Web.UI.WebControls.MenuItem>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|值`text`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|值`value`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|值`imageUrl`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|值`navigateUrl`参数。 |  |<xref:System.Web.UI.WebControls.MenuItem.Target%2A>|值`target`参数。 |      此构造函数通常用时动态填充<xref:System.Web.UI.WebControls.Menu.Items%2A>集合<xref:System.Web.UI.WebControls.Menu>控件或<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.MenuItem.Target%2A> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following example demonstrates how to use this constructor to create a new instance of the <xref:System.Web.UI.WebControls.MenuItem> class. The <xref:System.Web.UI.WebControls.MenuItem> object is then used to dynamically populate the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCtor5Param#1](~/add/codesnippet/csharp/d98f847f-9034-40d5-b483-_1.aspx)]\n [!code-vb[MenuItemCtor5Param#1](~/add/codesnippet/visualbasic/d98f847f-9034-40d5-b483-_1.aspx)]"
  syntax:
    content: public MenuItem (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "为菜单项中显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
    - id: value
      type: System.String
      description: "菜单项，如用于处理回发事件数据与关联的补充数据。"
    - id: imageUrl
      type: System.String
      description: "在菜单项的文本旁边显示的图像 URL。"
    - id: navigateUrl
      type: System.String
      description: "要时单击该菜单项链接到的 URL。"
    - id: target
      type: System.String
      description: "目标窗口或框架中显示网页内容的链接到的菜单项时单击该菜单项。"
  overload: System.Web.UI.WebControls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.ChildItems
  id: ChildItems
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: ChildItems
  nameWithType: MenuItem.ChildItems
  fullName: System.Web.UI.WebControls.MenuItem.ChildItems
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>对象，其中包含当前的菜单项的子菜单项。"
  remarks: "如果有，使用 ChildItems 属性 （集合） 访问当前的菜单项，这些子菜单项。 此集合包含的菜单项将在下一步的级别。 若要访问菜单项进一步菜单树向下的，使用子菜单项的 ChildItems 属性。 如果 ChildItems 属性为`null`，当前菜单不具有任何子菜单项。       此外可以使用 ChildItems 属性以编程方式管理当前的菜单项的子菜单项。 可以添加、 插入、 删除、 检索和修改<xref:System.Web.UI.WebControls.MenuItem>从集合的对象。</xref:System.Web.UI.WebControls.MenuItem> 对集合的任何更新将自动反映在<xref:System.Web.UI.WebControls.Menu>控制的下次刷新页面。</xref:System.Web.UI.WebControls.Menu>"
  example:
  - "The following example demonstrates how to use the ChildItems property to traverse the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItems#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1311_1.aspx)]\n [!code-cs[MenuItems#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1311_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemCollection ChildItems { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>其中包含子菜单项的当前的菜单项。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示此菜单项不包含任何子菜单项。"
  overload: System.Web.UI.WebControls.MenuItem.ChildItems*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: DataBound
  nameWithType: MenuItem.DataBound
  fullName: System.Web.UI.WebControls.MenuItem.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示菜单项是否已创建数据绑定。"
  remarks: "数据绑定属性用于以编程方式确定是否菜单项通过创建数据绑定。"
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果菜单项通过数据绑定，则创建否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItem.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: DataItem
  nameWithType: MenuItem.DataItem
  fullName: System.Web.UI.WebControls.MenuItem.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取绑定到的菜单项的数据项。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，如<xref:System.Web.UI.WebControls.XmlDataSource>对象，此属性设置为绑定到此特定菜单项的数据项。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.Menu> 此属性通常用于访问数据项的值。      1> [!NOTE]&1;> 仅在数据绑定发生后，此属性才可用。"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>表示绑定到的菜单项的数据项。</xref:System.Object> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示菜单项未绑定到任何数据项。"
  overload: System.Web.UI.WebControls.MenuItem.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: DataPath
  nameWithType: MenuItem.DataPath
  fullName: System.Web.UI.WebControls.MenuItem.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取绑定到的菜单项的数据的路径。"
  remarks: "数据路径属性值通常用时调用<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>方法以提供绑定到当前的菜单项的数据的路径。</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName> 此方法然后返回一个<xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>对象，其中包含的数据在指定的路径。</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>"
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "绑定到节点的数据路径。 此值来自层次结构的数据源控件与其<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件绑定。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.MenuItem.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Depth
  id: Depth
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Depth
  nameWithType: MenuItem.Depth
  fullName: System.Web.UI.WebControls.MenuItem.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取在其中显示菜单项的级别。"
  remarks: "使用深度属性来确定菜单项的深度。 深度指示菜单项将显示和表示当前的菜单项和根菜单项之间的层次结构的级别数级别。 例如，根菜单项具有的深度为 0。 根菜单项的子菜单项具有的深度为 1，依此类推。"
  example:
  - "The following example demonstrates how to use the Depth property to determine the depth of a menu item.  \n  \n [!code-vb[MenuItemDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_609_1.aspx)]\n [!code-cs[MenuItemDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_609_1.aspx)]"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "菜单项显示的级别。"
  overload: System.Web.UI.WebControls.MenuItem.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Web.UI.WebControls.MenuItem.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象被启用，允许该项以显示弹出图像和任何子菜单项。"
  remarks: "当此属性设置为`false`，菜单项被禁用，并且，该值指示子项目不弹出图像将显示。 此属性设置为`false`的菜单项就是使该菜单项的末尾该节点，其中任何进一步的级别会显示从该节点中移出。 默认值为 `true`。       如果你想要显示的任何子项，但不是会是&quot;可单击&quot;本身，使用的菜单项<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>属性并将其设置为`false`。</xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>"
  example:
  - "The following example demonstrates how a menu item with the Enabled property set to `false` appears and functions in a menu.  \n  \n [!code-cs[MenuSelectableEnabled#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_394_1.aspx)]\n [!code-vb[MenuSelectableEnabled#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_394_1.aspx)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了菜单项;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItem.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: ImageUrl
  nameWithType: MenuItem.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置菜单项中的文本旁边显示的图像的 URL。"
  remarks: "ImageUrl 属性用于指定中的当前菜单项的自定义映像<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> 此图像将显示菜单项文本的旁边，可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端的浏览器支持该格式。"
  example:
  - "The following example demonstrates how to use the ImageUrl property to display a custom image next to the text of a menu item.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_759_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_759_1.aspx)]"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "菜单项的文本旁边显示的自定义图像 URL。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItem.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: MenuItem.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItem.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要时单击该菜单项导航到的 URL。"
  remarks: "菜单项可以是在两种模式之一中︰ 选择模式或导航模式。 默认情况下，菜单项处于选择模式。 将菜单项置于导航模式，请将菜单项的 NavigateUrl 属性设置为一个空字符串以外的值 (&quot;&quot;)。       在导航模式下的菜单项时，将对该菜单项禁用所选内容的所有事件。 单击导航模式中的菜单项将用户带到指定的 URL。 你可以选择性地设置<xref:System.Web.UI.WebControls.MenuItem.Target%2A>属性指定的窗口或框架中显示的链接的内容。</xref:System.Web.UI.WebControls.MenuItem.Target%2A>"
  example:
  - "The following example demonstrates how to use the NavigateUrl property to specify the URL to navigate to when the user clicks a menu item.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_431_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_431_1.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "要导航到时单击该菜单项的 URL。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItem.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Parent
  id: Parent
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Web.UI.WebControls.MenuItem.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取当前的菜单项的菜单项的父级。"
  remarks: "使用父属性来确定父菜单项，或访问其属性。      1> [!NOTE]&1;> 根菜单项没有父菜单项。       若要访问当前的菜单项的子菜单项，使用<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>"
  example:
  - "The following example demonstrates how to use the Parent property to access the parent menu item of a child menu item.  \n  \n [!code-vb[MenuItemParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_461_1.aspx)]\n [!code-cs[MenuItemParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_461_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem Parent { get; }
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> ，表示当前的菜单项的父菜单项。"
  overload: System.Web.UI.WebControls.MenuItem.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.PopOutImageUrl
  id: PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: PopOutImageUrl
  nameWithType: MenuItem.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.PopOutImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置显示在菜单项以指示该菜单项具有动态子菜单的图像的 URL。"
  remarks: "如果<xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName>设置为`List`，或者如果<xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName>设置为`Default`和<xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=fullName>设置为`4.0`或更高版本，此属性不起作用。</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName> 使用<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A?displayProperty=fullName>属性或<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A?displayProperty=fullName>而不是此属性的属性。</xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A?displayProperty=fullName>       如果<xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName>设置为`Table`，或者如果<xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName>设置为`Default`和<xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=fullName>设置为`3.5`，此属性用于指定显示在菜单项以指示该菜单项具有动态子菜单的自定义映像。</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=fullName> 只要客户端的浏览器支持该格式，此映像可以是任何文件格式 （.jpg、.gif、.bmp、 等）。      1> [!NOTE]&1;> 设置此属性重写由指定的映像<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A?displayProperty=fullName>和<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A?displayProperty=fullName>       此外可以通过将此属性设置为空字符串，并设置来禁用该图像的静态菜单<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>属性`false`。</xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 同样，你可以通过将此属性设置为空字符串，并设置中禁用动态菜单中的此映像<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>属性`false`。</xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>"
  example:
  - "The following example demonstrates how to use the PopOutImageUrl property to specify a custom image to display in a menu item when the menu item has a dynamic submenu.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1079_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1079_1.aspx)]"
  syntax:
    content: public string PopOutImageUrl { get; set; }
    return:
      type: System.String
      description: "在菜单项以指示该菜单项具有动态子菜单显示的图像 URL。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItem.PopOutImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Selectable
  id: Selectable
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Selectable
  nameWithType: MenuItem.Selectable
  fullName: System.Web.UI.WebControls.MenuItem.Selectable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>可选择对象，或&quot;点&quot;。"
  remarks: "当此属性设置为`false`上一个菜单项，会执行任何操作的菜单项则单击 （或选择）。 如果一个，子菜单项的菜单项，该值指示弹出图像存在，仍然显示并可用。       如果您不希望任何子菜单项来显示菜单项，设置<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>属性`false`。</xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>       可选仅适用于可以选择，在意义上，单击菜单项回发并设置该项目中所选状态的菜单项。 请注意，不能选择菜单项仍已格式化为链接。 这是出于可访问性原因，以便菜单项可能会导致要发生的操作的不同而不同。 此外，一个菜单项，即使它不能同时选择，可能具有子菜单项可选择和需要显示。       如果你想要阻止的用户单击菜单项，执行下列操作之一:-未设置<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>并将可选设置为`false`。</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>      -将设置菜单项的<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>属性`false`。</xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>"
  example:
  - "The following example demonstrates how a menu item with the Selectable property set to `false` appears and functions in a menu.  \n  \n [!code-cs[MenuSelectableEnabled#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_598_1.aspx)]\n [!code-vb[MenuSelectableEnabled#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_598_1.aspx)]"
  syntax:
    content: public bool Selectable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以选定菜单项;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItem.Selectable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Selected
  id: Selected
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Selected
  nameWithType: MenuItem.Selected
  fullName: System.Web.UI.WebControls.MenuItem.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示当前的菜单项是否在选定<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
  remarks: "所选属性用于指定或确定是否选择了当前的菜单项。      1> [!NOTE]&1;> 虽然可以使用属性来确定菜单项是否处于选定状态，就更常见的是使用<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>属性。</xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>       只有一个菜单项可以在中的一次选择<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu>"
  example:
  - "The following example demonstrates how to use the Selected property to select a specific menu item in a <xref:System.Web.UI.WebControls.Menu> control when the page is first loaded. For this example to work correctly, you must copy the sample site map data below to a file named Web.sitemap.  \n  \n [!code-cs[MenuItemSelected#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_956_1.aspx)]\n [!code-vb[MenuItemSelected#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_956_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<siteMap>`  \n  \n `<siteMapNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<siteMapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<siteMapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<siteMapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<siteMapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</siteMapNode>`  \n  \n `<siteMapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<siteMapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<siteMapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<siteMapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</siteMapNode>`  \n  \n `</siteMapNode>`  \n  \n `</siteMap>`"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示当前的菜单项在选中<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件的指针; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItem.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl
  id: SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: SeparatorImageUrl
  nameWithType: MenuItem.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要与其他菜单项隔开的菜单项底部显示的图像的 URL。"
  remarks: "SeparatorImageUrl 属性用于指定要与其他菜单项隔开的菜单项底部显示的自定义映像 （通常的行）。 只要客户端的浏览器支持该格式，此映像可以是任何文件格式 （.jpg、.gif、.bmp、 等）。"
  example:
  - "The following example demonstrates how to use the SeparatorImageUrl property to specify a custom image to display at the bottom of a menu item to separate it from other menu items in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1119_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1119_1.aspx)]"
  syntax:
    content: public string SeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "用于分隔当前的菜单项与其他菜单项的图像 URL。"
  overload: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: MenuItem.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItem.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一份当前<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象。"
  remarks: "将使用 ICloneable.Clone 方法的<xref:System.Web.UI.WebControls.MenuItem>类中用于使自身的副本。</xref:System.Web.UI.WebControls.MenuItem>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>表示一份<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>。</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象是否保存对其视图状态的更改。"
  remarks: "通常，应使用 IStateManager.IsTrackingViewState 成员来确定是否<xref:System.Web.UI.WebControls.MenuItem>对象是否在跟踪视图状态更改。</xref:System.Web.UI.WebControls.MenuItem>       IStateManager.IsTrackingViewState 成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.MenuItem>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.MenuItem>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该控件标记为保存其状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItem.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载菜单项的以前保存的视图状态。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>包含保存的视图状态值。</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItem.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将视图状态更改保存到<xref:System.Object>.</xref:System.Object>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;包含视图状态更改。"
  overload: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItem.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象来跟踪其视图状态的更改。"
  remarks: "服务器控件，调用此方法后<xref:System.Web.UI.Control.IsTrackingViewState%2A>属性返回`true`。</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Target
  id: Target
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Target
  nameWithType: MenuItem.Target
  fullName: System.Web.UI.WebControls.MenuItem.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的目标窗口或框架中显示的菜单项的关联网页内容。"
  remarks: "目标属性用于指定的窗口或框架中显示的 Web 内容时，链接到的菜单项单击该菜单项。 值必须以字母 a 到 Z （区分大小写），但下表中所示，以下划线开头某些特殊值除外范围的开头。 请注意，设置此属性重写<xref:System.Web.UI.WebControls.Menu.Target%2A>属性<xref:System.Web.UI.WebControls.Menu>此菜单项的控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A>      |目标值 |说明 |  |------------------|-----------------|  |`_blank`|呈现在新窗口中没有框架的内容。 |  |`_parent`|呈现的即时框架集父代中的内容。 |  |`_search`|呈现搜索窗格中的内容。 |  |`_self`|呈现具有焦点的框架中的内容。 |  |`_top`|呈现没有框架的完整窗口中的内容。 |    &1;> [!NOTE]&1;> 检查你的浏览器文档以确定如果`_search`值受到支持。 例如，Microsoft Internet Explorer 5.0 和更高版本支持`_search`目标值。      1> [!NOTE]&1;> Target 属性呈现为`target`属性。 `target` XHTML 1.1 严格文档类型定义中不允许对定位标记元素的属性。 如果未设置目标属性的呈现的输出<xref:System.Web.UI.WebControls.HyperLink>必须是 XHTML 1.1 合规。</xref:System.Web.UI.WebControls.HyperLink> 有关详细信息，请参阅[在 Visual Studio 和 ASP.NET 的 XHTML 标准](~/add/includes/ajax-current-ext-md.md)。   >> 时创建可访问网页，强烈建议你避免使用的目标属性将另一个窗口作为目标。 有关详细信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates how to use the Target property to specify a window or frame in which to display the Web content linked to a menu item when that menu item is clicked.  \n  \n [!code-cs[MenuItemTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[MenuItemTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "目标窗口或框架，用于显示链接的网页内容。 默认值为空字符串 (&quot;&quot;)，该值刷新具有焦点的框架的窗口。"
  overload: System.Web.UI.WebControls.MenuItem.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Text
  id: Text
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Web.UI.WebControls.MenuItem.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置为中的菜单项显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。"
  remarks: "使用文本属性来指定或确定为中的菜单项显示的文本<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu>      1> [!NOTE]&1;> 如果文本属性包含`null`、`get`访问器返回的值<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> 如果<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，反过来，包含`null`，<xref:System.String.Empty>返回。</xref:System.String.Empty> </xref:System.Web.UI.WebControls.MenuItem.Value%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Text property to specify the text to display in each menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_246_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_246_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "为中的菜单项显示的文本<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.MenuItem.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: ToolTip
  nameWithType: MenuItem.ToolTip
  fullName: System.Web.UI.WebControls.MenuItem.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置菜单项的工具提示文本。"
  remarks: "工具提示属性用于指定菜单项的工具提示文本。 当鼠标指针位于菜单项时，会显示的工具提示文本。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the ToolTip property to specify a ToolTip for each menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_509_1.aspx)]\n [!code-cs[MenuItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_509_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "菜单项的工具提示文本。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.MenuItem.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.Value
  id: Value
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: Value
  nameWithType: MenuItem.Value
  fullName: System.Web.UI.WebControls.MenuItem.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用来存储有关菜单项，如用于处理回发事件数据的任何其他数据的非显示值。"
  remarks: "Value 属性用于补充<xref:System.Web.UI.WebControls.MenuItem.Text%2A>通过将存储与菜单项关联的任何其他数据的属性。</xref:System.Web.UI.WebControls.MenuItem.Text%2A> 此值不会显示在控件，通常用于存储用于处理回发事件数据。      1> [!NOTE]&1;> 如果 Value 属性包含`null`、`get`访问器返回的值<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性。</xref:System.Web.UI.WebControls.MenuItem.Text%2A> 如果<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性，反过来，包含`null`，<xref:System.String.Empty>返回。</xref:System.String.Empty> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>       值属性的值还可在中指定的值路径时<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>生成属性。</xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 值路径是一个分隔符分隔菜单项值的列表，构成了从根菜单项到当前的菜单项路径。 值路径用于指示的位置中的菜单项<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu>      1> [!NOTE]&1;> 同一级别的菜单的菜单项必须每个具有值属性中; 的唯一值<xref:System.Web.UI.WebControls.Menu>控件无法区分具有相同的值的不同的菜单项在同一级别。</xref:System.Web.UI.WebControls.Menu>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to display the Value for a menu item and its parent when the user selects a menu item.  \n  \n [!code-cs[MenuItemValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_424_1.aspx)]\n [!code-vb[MenuItemValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_424_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "有关不显示菜单项的补充数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.MenuItem.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItem.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.MenuItem
  langs:
  - csharp
  name: ValuePath
  nameWithType: MenuItem.ValuePath
  fullName: System.Web.UI.WebControls.MenuItem.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取当前的菜单项从根菜单项的路径。"
  remarks: "ValuePath 属性包含构成从根菜单项到当前的菜单项路径的菜单项值的分隔符分隔列表。 值路径用于指示的位置中的菜单项<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> 你可以指定用于分隔菜单项值使用的分隔符字符<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>属性。</xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 此值通常用时分析的列表中的单个值，或者将其作为自变量传递给<xref:System.Web.UI.WebControls.Menu.FindItem%2A>方法的<xref:System.Web.UI.WebControls.TreeView>类。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.Menu.FindItem%2A> 中显示的值根据<xref:System.Web.UI.WebControls.Menu>控件，分隔符字符可能需要更改以防止任何冲突。</xref:System.Web.UI.WebControls.Menu> 例如，如果设置为逗号分隔符字符，显示的值不能包含任何逗号;否则，你不能准确地分析 ValuePath 属性。      1> [!NOTE]&1;> 的值的<xref:System.Web.UI.WebControls.MenuItem.Value%2A>每个菜单项从根菜单项到当前的菜单项的属性用于生成值路径。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> 同一级别的菜单的菜单项必须每个具有唯一值<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性;<xref:System.Web.UI.WebControls.Menu>控件无法区分具有相同的值的不同的菜单项在同一级别。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem.Value%2A>"
  example:
  - "The following example demonstrates how to parse the value to the ValuePath property for the individual menu item values.  \n  \n [!code-cs[MenuItemValuePath#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1342_1.aspx)]\n [!code-vb[MenuItemValuePath#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1342_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "分隔符分隔菜单项值，它构成了从根菜单项到当前的菜单项路径的列表。"
  overload: System.Web.UI.WebControls.MenuItem.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.MenuItem.#ctor
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem()
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem(String,String)
  nameWithType: MenuItem.MenuItem(String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String)
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem(String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String)
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem(String,String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String,String)
- uid: System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem(String,String,String,String,String)
  nameWithType: MenuItem.MenuItem(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.MenuItem.MenuItem(String,String,String,String,String)
- uid: System.Web.UI.WebControls.MenuItem.ChildItems
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ChildItems
  nameWithType: MenuItem.ChildItems
  fullName: System.Web.UI.WebControls.MenuItem.ChildItems
- uid: System.Web.UI.WebControls.MenuItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemCollection
  nameWithType: MenuItemCollection
  fullName: System.Web.UI.WebControls.MenuItemCollection
- uid: System.Web.UI.WebControls.MenuItem.DataBound
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataBound
  nameWithType: MenuItem.DataBound
  fullName: System.Web.UI.WebControls.MenuItem.DataBound
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItem.DataItem
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataItem
  nameWithType: MenuItem.DataItem
  fullName: System.Web.UI.WebControls.MenuItem.DataItem
- uid: System.Web.UI.WebControls.MenuItem.DataPath
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataPath
  nameWithType: MenuItem.DataPath
  fullName: System.Web.UI.WebControls.MenuItem.DataPath
- uid: System.Web.UI.WebControls.MenuItem.Depth
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Depth
  nameWithType: MenuItem.Depth
  fullName: System.Web.UI.WebControls.MenuItem.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItem.Enabled
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Web.UI.WebControls.MenuItem.Enabled
- uid: System.Web.UI.WebControls.MenuItem.ImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItem.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.ImageUrl
- uid: System.Web.UI.WebControls.MenuItem.NavigateUrl
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItem.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItem.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItem.Parent
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Web.UI.WebControls.MenuItem.Parent
- uid: System.Web.UI.WebControls.MenuItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
- uid: System.Web.UI.WebControls.MenuItem.PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItem.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItem.Selectable
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Selectable
  nameWithType: MenuItem.Selectable
  fullName: System.Web.UI.WebControls.MenuItem.Selectable
- uid: System.Web.UI.WebControls.MenuItem.Selected
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Selected
  nameWithType: MenuItem.Selected
  fullName: System.Web.UI.WebControls.MenuItem.Selected
- uid: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItem.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: MenuItem.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItem.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItem.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItem.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItem.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItem.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItem.Target
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Target
  nameWithType: MenuItem.Target
  fullName: System.Web.UI.WebControls.MenuItem.Target
- uid: System.Web.UI.WebControls.MenuItem.Text
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Web.UI.WebControls.MenuItem.Text
- uid: System.Web.UI.WebControls.MenuItem.ToolTip
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ToolTip
  nameWithType: MenuItem.ToolTip
  fullName: System.Web.UI.WebControls.MenuItem.ToolTip
- uid: System.Web.UI.WebControls.MenuItem.Value
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Value
  nameWithType: MenuItem.Value
  fullName: System.Web.UI.WebControls.MenuItem.Value
- uid: System.Web.UI.WebControls.MenuItem.ValuePath
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ValuePath
  nameWithType: MenuItem.ValuePath
  fullName: System.Web.UI.WebControls.MenuItem.ValuePath
- uid: System.Web.UI.WebControls.MenuItem.#ctor*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem.MenuItem
- uid: System.Web.UI.WebControls.MenuItem.ChildItems*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ChildItems
  nameWithType: MenuItem.ChildItems
- uid: System.Web.UI.WebControls.MenuItem.DataBound*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataBound
  nameWithType: MenuItem.DataBound
- uid: System.Web.UI.WebControls.MenuItem.DataItem*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataItem
  nameWithType: MenuItem.DataItem
- uid: System.Web.UI.WebControls.MenuItem.DataPath*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: DataPath
  nameWithType: MenuItem.DataPath
- uid: System.Web.UI.WebControls.MenuItem.Depth*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Depth
  nameWithType: MenuItem.Depth
- uid: System.Web.UI.WebControls.MenuItem.Enabled*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
- uid: System.Web.UI.WebControls.MenuItem.ImageUrl*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItem.ImageUrl
- uid: System.Web.UI.WebControls.MenuItem.NavigateUrl*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItem.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItem.Parent*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
- uid: System.Web.UI.WebControls.MenuItem.PopOutImageUrl*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItem.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItem.Selectable*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Selectable
  nameWithType: MenuItem.Selectable
- uid: System.Web.UI.WebControls.MenuItem.Selected*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Selected
  nameWithType: MenuItem.Selected
- uid: System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItem.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: MenuItem.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItem.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.MenuItem.Target*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Target
  nameWithType: MenuItem.Target
- uid: System.Web.UI.WebControls.MenuItem.Text*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
- uid: System.Web.UI.WebControls.MenuItem.ToolTip*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ToolTip
  nameWithType: MenuItem.ToolTip
- uid: System.Web.UI.WebControls.MenuItem.Value*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: Value
  nameWithType: MenuItem.Value
- uid: System.Web.UI.WebControls.MenuItem.ValuePath*
  parent: System.Web.UI.WebControls.MenuItem
  isExternal: false
  name: ValuePath
  nameWithType: MenuItem.ValuePath
