### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "指定密钥派生函数<xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;></xref>类将用来将机密协议转换为密钥材料。"
  remarks: "ECDiffieHellmanKeyDerivationFunction 枚举定义的一种用于转换为密钥材料原始机密协议的算法。 机密协议是从私钥和另一方的公钥，作为密钥交换的一部分生成的值。 它是由生成的密钥材料的种子值<xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>方法。</xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>       <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>属性使用此枚举来获取<xref:System.Security.Cryptography.ECDiffieHellmanCng>类</xref:System.Security.Cryptography.ECDiffieHellmanCng>的密钥派生函数</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>"
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "哈希算法用于生成密钥材料。 <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>属性指定要使用的算法的名称。</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> 如果未指定的算法名称， <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref>用作默认的算法。"
  remarks: "你还可以指定<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>和<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>属性，但它们不是必需的。</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       生成的密钥材料的量相当于指定的算法的哈希值的大小。"
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "基于哈希的消息身份验证代码 (HMAC) 算法用于生成密钥材料。 <> </> *1> 属性指定要使用的密钥。必须设置此属性或者或<> *1> 属性必须设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; 否则为<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>使用 Hmac 时引发。 如果设置这两个属性，则机密协议用作 HMAC 密钥。"
  remarks: "你还可以指定<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>和<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>属性，但它们不是必需的。</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       生成的密钥材料的量相当于 HMAC 值的大小。"
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "传输层安全 (TLS) 协议用于生成密钥材料。 <> </> *1> 和<> *1> 属性必须设置; 否则为<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>使用 Tls 时引发。"
  remarks: "此值生成 160 位的密钥材料。"
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
