### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Clipboard
  id: Clipboard
  children:
  - System.Windows.Forms.Clipboard.Clear
  - System.Windows.Forms.Clipboard.ContainsAudio
  - System.Windows.Forms.Clipboard.ContainsData(System.String)
  - System.Windows.Forms.Clipboard.ContainsFileDropList
  - System.Windows.Forms.Clipboard.ContainsImage
  - System.Windows.Forms.Clipboard.ContainsText
  - System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)
  - System.Windows.Forms.Clipboard.GetAudioStream
  - System.Windows.Forms.Clipboard.GetData(System.String)
  - System.Windows.Forms.Clipboard.GetDataObject
  - System.Windows.Forms.Clipboard.GetFileDropList
  - System.Windows.Forms.Clipboard.GetImage
  - System.Windows.Forms.Clipboard.GetText
  - System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)
  - System.Windows.Forms.Clipboard.SetAudio(System.Byte[])
  - System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)
  - System.Windows.Forms.Clipboard.SetData(System.String,System.Object)
  - System.Windows.Forms.Clipboard.SetDataObject(System.Object)
  - System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)
  - System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)
  - System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)
  - System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)
  - System.Windows.Forms.Clipboard.SetText(System.String)
  - System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)
  langs:
  - csharp
  name: Clipboard
  nameWithType: Clipboard
  fullName: System.Windows.Forms.Clipboard
  type: Class
  summary: "提供方法以将数据置于并从系统剪贴板中检索数据。 此类不能被继承。"
  remarks: "若要使用剪贴板类的预定义格式的列表，请参阅<xref:System.Windows.Forms.DataFormats>类。</xref:System.Windows.Forms.DataFormats>       调用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>以将数据放在剪贴板上，取代其当前的内容。</xref:System.Windows.Forms.Clipboard.SetDataObject%2A> 若要将持久数据的副本放在剪贴板上，设置`copy`参数`true`。      1> [!NOTE]&1;> 若要将数据放到剪贴板上多个格式中，使用<xref:System.Windows.Forms.DataObject>类或<xref:System.Windows.Forms.IDataObject>实现。</xref:System.Windows.Forms.IDataObject> </xref:System.Windows.Forms.DataObject> 将数据放置在剪贴板中多种格式，以最大化目标应用程序，你可能不知道，其格式要求可以成功检索数据的可能性。       调用<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>从剪贴板检索数据。</xref:System.Windows.Forms.Clipboard.GetDataObject%2A> 为实现的对象返回的数据<xref:System.Windows.Forms.IDataObject>接口。</xref:System.Windows.Forms.IDataObject> 使用指定的方法<xref:System.Windows.Forms.IDataObject>和字段中<xref:System.Windows.Forms.DataFormats>从对象中提取数据。</xref:System.Windows.Forms.DataFormats> </xref:System.Windows.Forms.IDataObject> 如果不知道你检索的数据格式，调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的<xref:System.Windows.Forms.IDataObject>接口来获取该数据的所有格式的列表所存储</xref:System.Windows.Forms.IDataObject>的方法</xref:System.Windows.Forms.IDataObject.GetFormats%2A> 然后调用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法<xref:System.Windows.Forms.IDataObject>接口，并指定你的应用程序可以使用的格式。</xref:System.Windows.Forms.IDataObject> </xref:System.Windows.Forms.IDataObject.GetData%2A>       在[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]，剪贴板类提供了其他方法，它可以更轻松地使用系统剪贴板。 调用<xref:System.Windows.Forms.Clipboard.Clear%2A>方法从剪贴板中删除所有数据。</xref:System.Windows.Forms.Clipboard.Clear%2A> 若要将特定的格式的数据添加到剪贴板，替换现有数据，调用相应`Set`*格式*方法，如<xref:System.Windows.Forms.Clipboard.SetText%2A>，或调用<xref:System.Windows.Forms.Clipboard.SetData%2A>方法来指定格式。</xref:System.Windows.Forms.Clipboard.SetData%2A> </xref:System.Windows.Forms.Clipboard.SetText%2A> 若要从剪贴板中检索特定格式的数据，请先调用相应`Contains`*格式*方法 (如<xref:System.Windows.Forms.Clipboard.ContainsText%2A>) 方法来确定剪贴板是否包含中的数据，设置的格式，，然后调用相应`Get`*格式*方法 (如<xref:System.Windows.Forms.Clipboard.GetText%2A>) 来检索数据，如果剪贴板包含它。</xref:System.Windows.Forms.Clipboard.GetText%2A> </xref:System.Windows.Forms.Clipboard.ContainsText%2A> 若要在这些操作中指定的格式，调用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>和<xref:System.Windows.Forms.Clipboard.GetData%2A>方法相反。</xref:System.Windows.Forms.Clipboard.GetData%2A> </xref:System.Windows.Forms.Clipboard.ContainsData%2A>      1> [!NOTE]&1;> 基于所有 Windows 的应用程序共享系统剪贴板，因此内容可能会发生更改时切换到另一个应用程序。   >> 对象必须可序列化，才能将其放在剪贴板上。 如果将非可序列化对象传递给剪贴板方法时，该方法将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>有关序列化的详细信息。</xref:System.Runtime.Serialization> 如果目标应用程序需要一种非常具体的数据格式，标头添加到序列化过程中的数据可能会阻止应用程序不能识别你的数据。 若要保留数据格式，请添加你的数据作为<xref:System.Byte>数组到<xref:System.IO.MemoryStream>并将传递<xref:System.IO.MemoryStream>到<xref:System.Windows.Forms.DataObject.SetData%2A>方法。</xref:System.Windows.Forms.DataObject.SetData%2A> </xref:System.IO.MemoryStream> </xref:System.IO.MemoryStream> </xref:System.Byte>   >> 剪贴板类仅可在设置为单线程单元 (STA) 模式的线程。 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>   >> 使用剪贴板使用图元文件格式时，可能需要特殊注意事项。 由于在当前实现中的限制<xref:System.Windows.Forms.DataObject>使用较旧的图元文件格式的应用程序可能无法识别类，使用.NET Framework 的图元文件格式。</xref:System.Windows.Forms.DataObject> 在这种情况下，你必须进行互操作与 Win32 剪贴板应用程序编程接口 (Api)。 有关详细信息，请参阅文章 323530，&quot;图元文件上剪贴板是不可见对所有应用程序，&quot;http://support.microsoft.com 在 Microsoft 知识库。"
  example:
  - "The following code example uses Clipboard methods to place data on and retrieve it from the system Clipboard. This code assumes `button1`, `button2`, `textBox1`, and `textBox2` have been created and placed on the form.  \n  \n The `button1_Click` method calls <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> to take selected text from the text box and place it on the system Clipboard.  \n  \n The `button2_Click` method calls <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> to retrieve data from the system Clipboard. The code uses <xref:System.Windows.Forms.IDataObject> and <xref:System.Windows.Forms.DataFormats> to extract the data returned and displays the data in `textBox2`.  \n  \n [!code-cs[Classic Clipboard Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_22_1.cs)]\n [!code-vb[Classic Clipboard Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_22_1.vb)]\n [!code-cpp[Classic Clipboard Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_22_1.cpp)]"
  syntax:
    content: public sealed class Clipboard
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.Clear
  id: Clear
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: Clear()
  nameWithType: Clipboard.Clear()
  fullName: System.Windows.Forms.Clipboard.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从剪贴板中删除所有数据。"
  remarks: "由于剪贴板可由多个进程共享的则调用此方法可能会对这些进程的影响。      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_29_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#1](~/add/codesnippet/csharp/m-system.windows.forms.c_29_1.cs)]"
  syntax:
    content: public static void Clear ();
    parameters: []
  overload: System.Windows.Forms.Clipboard.Clear*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsAudio
  id: ContainsAudio
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsAudio()
  nameWithType: Clipboard.ContainsAudio()
  fullName: System.Windows.Forms.Clipboard.ContainsAudio()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示在剪贴板上是否存在数据<xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref>格式。"
  remarks: "使用此方法来确定是否剪贴板中检索之前包含音频数据<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。</xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following code example demonstrates the use of this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#20](~/add/codesnippet/visualbasic/m-system.windows.forms.c_10_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#20](~/add/codesnippet/csharp/m-system.windows.forms.c_10_1.cs)]"
  syntax:
    content: public static bool ContainsAudio ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在剪贴板上; 音频数据否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsAudio*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsData(System.String)
  id: ContainsData(System.String)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsData(String)
  nameWithType: Clipboard.ContainsData(String)
  fullName: System.Windows.Forms.Clipboard.ContainsData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示指定的格式或可以转换为该格式到剪贴板上是否存在数据。"
  remarks: "<xref:System.Windows.Forms.DataFormats>类包含可以使用此方法使用的预定义的格式名。</xref:System.Windows.Forms.DataFormats>       使用此方法来确定剪贴板中是否包含指定的格式或兼容的格式中的数据检索之前<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。</xref:System.Windows.Forms.Clipboard.GetData%2A>      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。   >><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#10](~/add/codesnippet/visualbasic/m-system.windows.forms.c_64_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#10](~/add/codesnippet/csharp/m-system.windows.forms.c_64_1.cs)]"
  syntax:
    content: public static bool ContainsData (string format);
    parameters:
    - id: format
      type: System.String
      description: "要查找的数据的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在指定到剪贴板上是否存在数据<code> format </code> ，也可以是转换为该格式; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsData*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsFileDropList
  id: ContainsFileDropList
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsFileDropList()
  nameWithType: Clipboard.ContainsFileDropList()
  fullName: System.Windows.Forms.Clipboard.ContainsFileDropList()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示在剪贴板上是否存在数据<xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref>格式化，或者可以转换为该格式。"
  remarks: "文件下拉列表是一个包含文件的路径信息的字符串集合。       使用此方法来确定剪贴板中是否包含文件下拉列表中检索之前<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。</xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#30](~/add/codesnippet/visualbasic/m-system.windows.forms.c_61_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#30](~/add/codesnippet/csharp/m-system.windows.forms.c_61_1.cs)]"
  syntax:
    content: public static bool ContainsFileDropList ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在剪贴板; 上没有文件下拉列表否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsFileDropList*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsImage
  id: ContainsImage
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsImage()
  nameWithType: Clipboard.ContainsImage()
  fullName: System.Windows.Forms.Clipboard.ContainsImage()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示在剪贴板上是否存在数据<xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref>格式化，或者可以转换为该格式。"
  remarks: "使用此方法来确定是否剪贴板中检索之前包含映像数据<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。</xref:System.Windows.Forms.Clipboard.GetImage%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#40](~/add/codesnippet/visualbasic/m-system.windows.forms.c_22_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#40](~/add/codesnippet/csharp/m-system.windows.forms.c_22_1.cs)]"
  syntax:
    content: public static bool ContainsImage ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在剪贴板; 上没有图像数据否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsImage*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsText
  id: ContainsText
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsText()
  nameWithType: Clipboard.ContainsText()
  fullName: System.Windows.Forms.Clipboard.ContainsText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示在剪贴板上是否存在数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>或<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>格式，具体取决于操作系统。"
  remarks: "此方法检查中的数据的存在<xref:System.Windows.Forms.TextDataFormat>格式[!INCLUDE[WinXpFamily](~/add/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]。</xref:System.Windows.Forms.TextDataFormat> 否则，此方法检查中数据的存在<xref:System.Windows.Forms.TextDataFormat>格式。</xref:System.Windows.Forms.TextDataFormat>       使用此方法来确定是否剪贴板中检索之前包含文本数据<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。</xref:System.Windows.Forms.Clipboard.GetText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates an overload of the ContainsText method that is similar to this overload.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/m-system.windows.forms.c_67_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/m-system.windows.forms.c_67_1.cs)]"
  syntax:
    content: public static bool ContainsText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在剪贴板; 上没有文本数据否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)
  id: ContainsText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: ContainsText(TextDataFormat)
  nameWithType: Clipboard.ContainsText(TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.ContainsText(TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指示是否存在文本数据在剪贴板上指示由指定的格式<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  remarks: "使用此方法来确定是否剪贴板中检索之前包含文本数据<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。</xref:System.Windows.Forms.Clipboard.GetText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/c6982ca9-6e12-4fb8-b25d-_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/c6982ca9-6e12-4fb8-b25d-_1.cs)]"
  syntax:
    content: public static bool ContainsText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "之一<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有文本数据在剪贴板上指定的值中<code> format </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.ContainsText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code>不是有效<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetAudioStream
  id: GetAudioStream
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetAudioStream()
  nameWithType: Clipboard.GetAudioStream()
  fullName: System.Windows.Forms.Clipboard.GetAudioStream()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从剪贴板检索的音频流。"
  remarks: "使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法来确定剪贴板是否包含使用此方法进行检索之前音频数据。</xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>       使用<xref:System.Windows.Forms.Clipboard.SetAudio%2A>方法将音频数据添加到剪贴板。</xref:System.Windows.Forms.Clipboard.SetAudio%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#20](~/add/codesnippet/visualbasic/m-system.windows.forms.c_28_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#20](~/add/codesnippet/csharp/m-system.windows.forms.c_28_1.cs)]"
  syntax:
    content: public static System.IO.Stream GetAudioStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>包含音频数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果剪贴板不包含中的任何数据<xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref>格式。</xref:System.IO.Stream>"
  overload: System.Windows.Forms.Clipboard.GetAudioStream*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetData(String)
  nameWithType: Clipboard.GetData(String)
  fullName: System.Windows.Forms.Clipboard.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从指定的格式在剪贴板中检索数据。"
  remarks: "使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法来确定剪贴板是否包含使用此方法进行检索之前指定的格式或兼容的格式中的数据。</xref:System.Windows.Forms.Clipboard.ContainsData%2A>       如果此方法找不到指定的格式中的数据，它将尝试将数据转换为格式。 如果数据无法转换为指定的格式，或使用自动转换设置为存储数据`false`，此方法返回`null`。      1> [!NOTE]&1;> 数据可以转换为另一种格式，如果它已存储指定允许转换，并且请求的格式是与存储格式兼容。 例如，存储为 Unicode 可以转换为文本的数据。   >><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>       使用<xref:System.Windows.Forms.Clipboard.SetData%2A>方法将数据添加到剪贴板中特定的格式。</xref:System.Windows.Forms.Clipboard.SetData%2A>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#10](~/add/codesnippet/visualbasic/m-system.windows.forms.c_4_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#10](~/add/codesnippet/csharp/m-system.windows.forms.c_4_1.cs)]"
  syntax:
    content: public static object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "要检索的数据的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    return:
      type: System.Object
      description: "<xref:System.Object>表示剪贴板数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果剪贴板不包含任何数据，则指定<code> format </code>或可以转换为该格式。</xref:System.Object>"
  overload: System.Windows.Forms.Clipboard.GetData*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetDataObject
  id: GetDataObject
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetDataObject()
  nameWithType: Clipboard.GetDataObject()
  fullName: System.Windows.Forms.Clipboard.GetDataObject()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索当前系统剪贴板上的数据。"
  remarks: "此方法从剪贴板返回的对象的数据类型可能不同，因为返回<xref:System.Windows.Forms.IDataObject>.</xref:System.Windows.Forms.IDataObject>中的数据 然后，你可以使用的方法<xref:System.Windows.Forms.IDataObject>接口提取其正确的数据类型中的数据。</xref:System.Windows.Forms.IDataObject>       此方法尝试获取 100 毫秒的时间间隔，在十次数据，则引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。</xref:System.Runtime.InteropServices.ExternalException>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.Clipboard> methods to place data on and retrieve it from the system Clipboard. This code assumes `button1`, `button2`, `textBox1`, and `textBox2` have been placed on the form.  \n  \n The `button1_Click` method calls <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> to take selected text from the text box and place it on the system Clipboard.  \n  \n The `button2_Click` method calls GetDataObject to retrieve data from the system Clipboard. The code uses <xref:System.Windows.Forms.IDataObject> and <xref:System.Windows.Forms.DataFormats> to extract the data returned. The data is displayed in `textBox2`.  \n  \n [!code-cs[Classic Clipboard Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_31_1.cs)]\n [!code-vb[Classic Clipboard Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_31_1.vb)]\n [!code-cpp[Classic Clipboard Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_31_1.cpp)]"
  syntax:
    content: public static System.Windows.Forms.IDataObject GetDataObject ();
    parameters: []
    return:
      type: System.Windows.Forms.IDataObject
      description: "<xref href=&quot;System.Windows.Forms.IDataObject&quot;> </xref>表示当前在剪贴板上的数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果在剪贴板上没有任何数据。"
  overload: System.Windows.Forms.Clipboard.GetDataObject*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法从剪贴板中检索数据。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式和&lt;xref:System.Windows.Forms.Application.MessageLoop%2A?displayProperty=fullName&gt;属性值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetFileDropList
  id: GetFileDropList
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetFileDropList()
  nameWithType: Clipboard.GetFileDropList()
  fullName: System.Windows.Forms.Clipboard.GetFileDropList()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从剪贴板检索的文件名称的集合。"
  remarks: "文件下拉列表是一个包含文件的路径信息的字符串集合。       文件放置列表存储在剪贴板上<xref:System.String>数组。</xref:System.String> 此方法将此数组转换<xref:System.Collections.Specialized.StringCollection>并返回该集合。</xref:System.Collections.Specialized.StringCollection>       使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法来确定剪贴板是否包含使用此方法进行检索之前文件下拉列表。</xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>       使用<xref:System.Windows.Forms.Clipboard.SetFileDropList%2A>方法将文件放置列表添加到剪贴板。</xref:System.Windows.Forms.Clipboard.SetFileDropList%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#30](~/add/codesnippet/visualbasic/m-system.windows.forms.c_94_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#30](~/add/codesnippet/csharp/m-system.windows.forms.c_94_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringCollection GetFileDropList ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>包含文件的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果剪贴板不包含任何数据，则<xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref>格式化，或者可以转换为该格式。"
  overload: System.Windows.Forms.Clipboard.GetFileDropList*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetImage
  id: GetImage
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetImage()
  nameWithType: Clipboard.GetImage()
  fullName: System.Windows.Forms.Clipboard.GetImage()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从剪贴板中检索映像。"
  remarks: "使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法来确定剪贴板是否包含使用此方法进行检索之前图像数据。</xref:System.Windows.Forms.Clipboard.ContainsImage%2A>       使用<xref:System.Windows.Forms.Clipboard.SetImage%2A>方法将图像数据添加到剪贴板。</xref:System.Windows.Forms.Clipboard.SetImage%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#40](~/add/codesnippet/visualbasic/m-system.windows.forms.c_110_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#40](~/add/codesnippet/csharp/m-system.windows.forms.c_110_1.cs)]"
  syntax:
    content: public static System.Drawing.Image GetImage ();
    parameters: []
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>表示剪贴板图像数据或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果剪贴板不包含任何数据，则<xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref>格式化，或者可以转换为该格式。"
  overload: System.Windows.Forms.Clipboard.GetImage*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetText
  id: GetText
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetText()
  nameWithType: Clipboard.GetText()
  fullName: System.Windows.Forms.Clipboard.GetText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "从剪贴板中检索文本数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>或<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>格式，具体取决于操作系统。"
  remarks: "此方法返回中的文本数据<xref:System.Windows.Forms.TextDataFormat>格式[!INCLUDE[WinXpFamily](~/add/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]。</xref:System.Windows.Forms.TextDataFormat> 否则，此方法返回中的文本数据<xref:System.Windows.Forms.TextDataFormat>格式。</xref:System.Windows.Forms.TextDataFormat>       使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法来确定剪贴板是否使用此方法进行检索之前包含文本数据。</xref:System.Windows.Forms.Clipboard.ContainsText%2A>       使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法将文本数据添加到剪贴板。</xref:System.Windows.Forms.Clipboard.SetText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates an overload of the GetText method that is similar to this overload.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/m-system.windows.forms.c_12_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/m-system.windows.forms.c_12_1.cs)]"
  syntax:
    content: public static string GetText ();
    parameters: []
    return:
      type: System.String
      description: "剪贴板文本数据或&lt;xref:System.String?displayProperty=fullName&gt;如果剪贴板不包含中的数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>或<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>格式，具体取决于操作系统。"
  overload: System.Windows.Forms.Clipboard.GetText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)
  id: GetText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: GetText(TextDataFormat)
  nameWithType: Clipboard.GetText(TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.GetText(TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "检索从剪贴板中指示由指定的格式的文本数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  remarks: "使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法来确定剪贴板是否使用此方法进行检索之前包含文本数据。</xref:System.Windows.Forms.Clipboard.ContainsText%2A>       使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法将文本数据添加到剪贴板。</xref:System.Windows.Forms.Clipboard.SetText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/m-system.windows.forms.c_80_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/m-system.windows.forms.c_80_1.cs)]"
  syntax:
    content: public static string GetText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "之一<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
    return:
      type: System.String
      description: "剪贴板文本数据或&lt;xref:System.String?displayProperty=fullName&gt;如果剪贴板不包含指定的格式中的数据。"
  overload: System.Windows.Forms.Clipboard.GetText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code>不是有效<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetAudio(System.Byte[])
  id: SetAudio(System.Byte[])
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetAudio(Byte[])
  nameWithType: Clipboard.SetAudio(Byte[])
  fullName: System.Windows.Forms.Clipboard.SetAudio(Byte[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加<xref:System.Byte>数组中<xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref>格式后将其转换为一种<xref:System.IO.Stream>。</xref:System.IO.Stream> </xref:System.Byte>"
  remarks: "若要从剪贴板检索音频数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法来确定是否剪贴板中检索之前包含音频数据<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。</xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> </xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates an overload of the SetAudio method that is similar to this overload.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#20](~/add/codesnippet/visualbasic/m-system.windows.forms.c_98_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#20](~/add/codesnippet/csharp/m-system.windows.forms.c_98_1.cs)]"
  syntax:
    content: public static void SetAudio (byte[] audioBytes);
    parameters:
    - id: audioBytes
      type: System.Byte[]
      description: "A<xref:System.Byte>包含音频数据数组。</xref:System.Byte>"
  overload: System.Windows.Forms.Clipboard.SetAudio*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>audioBytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)
  id: SetAudio(System.IO.Stream)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetAudio(Stream)
  nameWithType: Clipboard.SetAudio(Stream)
  fullName: System.Windows.Forms.Clipboard.SetAudio(Stream)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加<xref:System.IO.Stream>中<xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref>格式。</xref:System.IO.Stream>"
  remarks: "若要从剪贴板检索音频数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法来确定是否剪贴板中检索之前包含音频数据<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。</xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> </xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#20](~/add/codesnippet/visualbasic/m-system.windows.forms.c_65_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#20](~/add/codesnippet/csharp/m-system.windows.forms.c_65_1.cs)]"
  syntax:
    content: public static void SetAudio (System.IO.Stream audioStream);
    parameters:
    - id: audioStream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>包含音频数据。</xref:System.IO.Stream>"
  overload: System.Windows.Forms.Clipboard.SetAudio*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>audioStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: Clipboard.SetData(String,Object)
  fullName: System.Windows.Forms.Clipboard.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加指定的格式中的数据。"
  remarks: "如果不知道的目标应用程序的格式，你可以在使用此方法的多种格式存储数据。       它检索时，可将数据存储使用此方法转换兼容的格式。       若要从剪贴板中的特定的格式中检索数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法来确定剪贴板是否包含该格式的数据检索之前<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。</xref:System.Windows.Forms.Clipboard.GetData%2A> </xref:System.Windows.Forms.Clipboard.ContainsData%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#10](~/add/codesnippet/visualbasic/m-system.windows.forms.c_55_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#10](~/add/codesnippet/csharp/m-system.windows.forms.c_55_1.cs)]"
  syntax:
    content: public static void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "要设置的数据的格式。 请参阅<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>对预定义的格式。"
    - id: data
      type: System.Object
      description: "<xref:System.Object>表示添加数据</xref:System.Object>"
  overload: System.Windows.Forms.Clipboard.SetData*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object)
  id: SetDataObject(System.Object)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetDataObject(Object)
  nameWithType: Clipboard.SetDataObject(Object)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，并在其上将非持久性数据。"
  remarks: "当应用程序退出时，数据将从系统剪贴板中删除。       此方法尝试在 100 毫秒的时间间隔，十倍中设置数据，则引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。</xref:System.Runtime.InteropServices.ExternalException>      1> [!NOTE]&1;> 对象必须可序列化，才能将其放在剪贴板上。 如果将非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>有关序列化的详细信息。</xref:System.Runtime.Serialization>   >><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following code example uses SetDataObject to place nonpersistent text data onto the system Clipboard. In the `button1_Click` method, the selected text is copied from `textBox1` and pasted on the Clipboard. In the `button2_Click` method, the information is retrieved from the Clipboard and displayed in `textBox2`. This code assumes `button1`, `button2`, `textBox1`, and `textBox2` have been created and placed on a form.  \n  \n [!code-cs[Classic Clipboard Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_102_1.cs)]\n [!code-vb[Classic Clipboard Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_102_1.vb)]\n [!code-cpp[Classic Clipboard Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_102_1.cpp)]"
  syntax:
    content: public static void SetDataObject (object data);
    parameters:
    - id: data
      type: System.Object
      description: "要将放在剪贴板上的数据。"
  overload: System.Windows.Forms.Clipboard.SetDataObject*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法在剪贴板上放置数据。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value of <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)
  id: SetDataObject(System.Object,System.Boolean)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetDataObject(Object,Boolean)
  nameWithType: Clipboard.SetDataObject(Object,Boolean)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后将数据置于它并指定在应用程序退出后是否保留数据。"
  remarks: "如果`copy`参数是`false`，将从系统剪贴板中的应用程序退出时删除数据。       此方法尝试在 100 毫秒的时间间隔，十倍中设置数据，则引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。</xref:System.Runtime.InteropServices.ExternalException>      1> [!NOTE]&1;> 对象必须可序列化，才能将其放在剪贴板上。 如果将非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>有关序列化的详细信息。</xref:System.Runtime.Serialization>   >><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following method is run in an application. It places a persistent copy of the selected text data in the text box on the system Clipboard. This code assumes `button1`, `textBox1`, and `textBox2` have been created and placed on a form.  \n  \n [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_56_1.cpp)]\n [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_56_1.vb)]\n [!code-cs[Classic Clipboard.SetDataObject1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_56_1.cs)]  \n  \n In a different application, the following method retrieves the text from the system Clipboard and pastes the text into `textBox2`. This code assumes `button2` and `textBox2` have been created and placed on a form.  \n  \n [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/add/codesnippet/cpp/m-system.windows.forms.c_56_2.cpp)]\n [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_56_2.vb)]\n [!code-cs[Classic Clipboard.SetDataObject1 Example#2](~/add/codesnippet/csharp/m-system.windows.forms.c_56_2.cs)]"
  syntax:
    content: public static void SetDataObject (object data, bool copy);
    parameters:
    - id: data
      type: System.Object
      description: "要将放在剪贴板上的数据。"
    - id: copy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果你想要退出此应用程序; 后将保留在剪贴板数据否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.Clipboard.SetDataObject*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法在剪贴板上放置数据。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value of <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)
  id: SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetDataObject(Object,Boolean,Int32,Int32)
  nameWithType: Clipboard.SetDataObject(Object,Boolean,Int32,Int32)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后尝试在其上指定的数目的次数和与指定尝试的时间间隔，（可选） 将数据保留在剪贴板在应用程序退出后放置数据。"
  remarks: "如果剪贴板正忙于处理另一个线程或应用程序，可以偶尔也会失败将数据添加到剪贴板。 此方法很有用，若要解决此问题的大量使用剪贴板的环境。       如果`copy`参数是`false`，将从系统剪贴板中的应用程序退出时删除数据。      1> [!NOTE]&1;> 对象必须可序列化，才能将其放在剪贴板上。 如果将非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>有关序列化的详细信息。</xref:System.Runtime.Serialization>   >><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  syntax:
    content: public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);
    parameters:
    - id: data
      type: System.Object
      description: "要将放在剪贴板上的数据。"
    - id: copy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果你想要退出此应用程序; 后将保留在剪贴板数据否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: retryTimes
      type: System.Int32
      description: "尝试将数据放在剪贴板上的次数。"
    - id: retryDelay
      type: System.Int32
      description: "尝试之间的暂停的毫秒数。"
  overload: System.Windows.Forms.Clipboard.SetDataObject*
  exceptions:
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>retryTimes</code>小于零。       -或-<code>retryDelay</code>小于零。"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法在剪贴板上放置数据。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)
  id: SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetFileDropList(StringCollection)
  nameWithType: Clipboard.SetFileDropList(StringCollection)
  fullName: System.Windows.Forms.Clipboard.SetFileDropList(StringCollection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加集合中的文件名<xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref>格式。"
  remarks: "文件下拉列表是一个包含文件的路径信息的字符串集合。       文件放置列表存储在剪贴板上<xref:System.String>数组。</xref:System.String> 此方法将转换`filePaths`到<xref:System.String>之前将其添加到剪贴板的数组。</xref:System.String>       若要从剪贴板中检索文件下拉列表，请先使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法来确定剪贴板是否包含该格式的数据检索之前<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。</xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> </xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#30](~/add/codesnippet/visualbasic/4fd8eb57-3f6c-4e04-8932-_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#30](~/add/codesnippet/csharp/4fd8eb57-3f6c-4e04-8932-_1.cs)]"
  syntax:
    content: public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>包含文件名称。"
  overload: System.Windows.Forms.Clipboard.SetFileDropList*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>不包含任何字符串。       -至少一个中的字符串<code>filePaths</code>是<xref:System.String.Empty>，仅包含空白，通过定义包含一个或多个无效字符<xref:System.IO.Path.InvalidPathChars>，是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，包含冒号 （:），或超过了系统定义的最大长度。       请参阅<xref:System.Exception.InnerException*>属性<xref:System.ArgumentException>有关详细信息。"
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)
  id: SetImage(System.Drawing.Image)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetImage(Image)
  nameWithType: Clipboard.SetImage(Image)
  fullName: System.Windows.Forms.Clipboard.SetImage(Image)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加<xref href=&quot;System.Drawing.Image&quot;></xref>中<xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref>格式。"
  remarks: "若要从剪贴板检索图像数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法来确定是否剪贴板中检索之前包含映像数据<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。</xref:System.Windows.Forms.Clipboard.GetImage%2A> </xref:System.Windows.Forms.Clipboard.ContainsImage%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#40](~/add/codesnippet/visualbasic/m-system.windows.forms.c_83_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#40](~/add/codesnippet/csharp/m-system.windows.forms.c_83_1.cs)]"
  syntax:
    content: public static void SetImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>将添加到剪贴板。"
  overload: System.Windows.Forms.Clipboard.SetImage*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetText(System.String)
  id: SetText(System.String)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetText(String)
  nameWithType: Clipboard.SetText(String)
  fullName: System.Windows.Forms.Clipboard.SetText(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加中的文本数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>或<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>格式，具体取决于操作系统。"
  remarks: "此方法将添加中的文本数据<xref:System.Windows.Forms.TextDataFormat>格式[!INCLUDE[WinXpFamily](~/add/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]。</xref:System.Windows.Forms.TextDataFormat> 否则，此方法将添加中的文本数据<xref:System.Windows.Forms.TextDataFormat>格式。</xref:System.Windows.Forms.TextDataFormat>       若要从剪贴板中检索文本数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法来确定是否剪贴板中检索之前包含文本数据<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。</xref:System.Windows.Forms.Clipboard.GetText%2A> </xref:System.Windows.Forms.Clipboard.ContainsText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates an overload of the SetText method that is similar to this overload.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/m-system.windows.forms.c_95_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/m-system.windows.forms.c_95_1.cs)]"
  syntax:
    content: public static void SetText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要添加到剪贴板的文本。"
  overload: System.Windows.Forms.Clipboard.SetText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <xref:System.String.Empty>."
  platform:
  - net462
- uid: System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)
  id: SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  langs:
  - csharp
  name: SetText(String,TextDataFormat)
  nameWithType: Clipboard.SetText(String,TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.SetText(String,TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除剪贴板，然后添加表示由指定的格式文本数据<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  remarks: "若要从剪贴板中检索文本数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法来确定是否剪贴板中检索之前包含文本数据<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。</xref:System.Windows.Forms.Clipboard.GetText%2A> </xref:System.Windows.Forms.Clipboard.ContainsText%2A>      1> [!NOTE]&1;><xref:System.Windows.Forms.Clipboard>类仅在设置为单线程单元 (STA) 模式的线程中使用。</xref:System.Windows.Forms.Clipboard> 若要使用此类，请确保你`Main`方法标记为<xref:System.STAThreadAttribute>属性。</xref:System.STAThreadAttribute>"
  example:
  - "The following example demonstrates this member.  \n  \n [!code-vb[System.Windows.Forms.Clipboard#50](~/add/codesnippet/visualbasic/57a24dcf-dc30-466d-87ea-_1.vb)]\n [!code-cs[System.Windows.Forms.Clipboard#50](~/add/codesnippet/csharp/57a24dcf-dc30-466d-87ea-_1.cs)]"
  syntax:
    content: public static void SetText (string text, System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: text
      type: System.String
      description: "要添加到剪贴板的文本。"
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "之一<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  overload: System.Windows.Forms.Clipboard.SetText*
  exceptions:
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "无法清除剪贴板。 另一个进程正在使用剪贴板时通常会发生这种情况。"
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "当前线程未处于单线程单元 (STA) 模式。 添加<xref:System.STAThreadAttribute>到你的应用程序<xref uid=&quot;langword_csharp_Main&quot; name=&quot;Main&quot; href=&quot;&quot;></xref>方法。</xref:System.STAThreadAttribute>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <xref:System.String.Empty>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code>不是有效<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>值。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Threading.ThreadStateException
  parent: System.Threading
  isExternal: false
  name: ThreadStateException
  nameWithType: ThreadStateException
  fullName: System.Threading.ThreadStateException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.Clipboard.Clear
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: Clear()
  nameWithType: Clipboard.Clear()
  fullName: System.Windows.Forms.Clipboard.Clear()
- uid: System.Windows.Forms.Clipboard.ContainsAudio
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsAudio()
  nameWithType: Clipboard.ContainsAudio()
  fullName: System.Windows.Forms.Clipboard.ContainsAudio()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Clipboard.ContainsData(System.String)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsData(String)
  nameWithType: Clipboard.ContainsData(String)
  fullName: System.Windows.Forms.Clipboard.ContainsData(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Clipboard.ContainsFileDropList
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsFileDropList()
  nameWithType: Clipboard.ContainsFileDropList()
  fullName: System.Windows.Forms.Clipboard.ContainsFileDropList()
- uid: System.Windows.Forms.Clipboard.ContainsImage
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsImage()
  nameWithType: Clipboard.ContainsImage()
  fullName: System.Windows.Forms.Clipboard.ContainsImage()
- uid: System.Windows.Forms.Clipboard.ContainsText
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsText()
  nameWithType: Clipboard.ContainsText()
  fullName: System.Windows.Forms.Clipboard.ContainsText()
- uid: System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsText(TextDataFormat)
  nameWithType: Clipboard.ContainsText(TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.ContainsText(TextDataFormat)
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: false
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: System.Windows.Forms.Clipboard.GetAudioStream
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetAudioStream()
  nameWithType: Clipboard.GetAudioStream()
  fullName: System.Windows.Forms.Clipboard.GetAudioStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Forms.Clipboard.GetData(System.String)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetData(String)
  nameWithType: Clipboard.GetData(String)
  fullName: System.Windows.Forms.Clipboard.GetData(String)
- uid: System.Windows.Forms.Clipboard.GetDataObject
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetDataObject()
  nameWithType: Clipboard.GetDataObject()
  fullName: System.Windows.Forms.Clipboard.GetDataObject()
- uid: System.Windows.Forms.IDataObject
  parent: System.Windows.Forms
  isExternal: false
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
- uid: System.Windows.Forms.Clipboard.GetFileDropList
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetFileDropList()
  nameWithType: Clipboard.GetFileDropList()
  fullName: System.Windows.Forms.Clipboard.GetFileDropList()
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.Windows.Forms.Clipboard.GetImage
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetImage()
  nameWithType: Clipboard.GetImage()
  fullName: System.Windows.Forms.Clipboard.GetImage()
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.Clipboard.GetText
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetText()
  nameWithType: Clipboard.GetText()
  fullName: System.Windows.Forms.Clipboard.GetText()
- uid: System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetText(TextDataFormat)
  nameWithType: Clipboard.GetText(TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.GetText(TextDataFormat)
- uid: System.Windows.Forms.Clipboard.SetAudio(System.Byte[])
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetAudio(Byte[])
  nameWithType: Clipboard.SetAudio(Byte[])
  fullName: System.Windows.Forms.Clipboard.SetAudio(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetAudio(Stream)
  nameWithType: Clipboard.SetAudio(Stream)
  fullName: System.Windows.Forms.Clipboard.SetAudio(Stream)
- uid: System.Windows.Forms.Clipboard.SetData(System.String,System.Object)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetData(String,Object)
  nameWithType: Clipboard.SetData(String,Object)
  fullName: System.Windows.Forms.Clipboard.SetData(String,Object)
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetDataObject(Object)
  nameWithType: Clipboard.SetDataObject(Object)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object)
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetDataObject(Object,Boolean)
  nameWithType: Clipboard.SetDataObject(Object,Boolean)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object,Boolean)
- uid: System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetDataObject(Object,Boolean,Int32,Int32)
  nameWithType: Clipboard.SetDataObject(Object,Boolean,Int32,Int32)
  fullName: System.Windows.Forms.Clipboard.SetDataObject(Object,Boolean,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetFileDropList(StringCollection)
  nameWithType: Clipboard.SetFileDropList(StringCollection)
  fullName: System.Windows.Forms.Clipboard.SetFileDropList(StringCollection)
- uid: System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetImage(Image)
  nameWithType: Clipboard.SetImage(Image)
  fullName: System.Windows.Forms.Clipboard.SetImage(Image)
- uid: System.Windows.Forms.Clipboard.SetText(System.String)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetText(String)
  nameWithType: Clipboard.SetText(String)
  fullName: System.Windows.Forms.Clipboard.SetText(String)
- uid: System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetText(String,TextDataFormat)
  nameWithType: Clipboard.SetText(String,TextDataFormat)
  fullName: System.Windows.Forms.Clipboard.SetText(String,TextDataFormat)
- uid: System.Windows.Forms.Clipboard.Clear*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: Clear
  nameWithType: Clipboard.Clear
- uid: System.Windows.Forms.Clipboard.ContainsAudio*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsAudio
  nameWithType: Clipboard.ContainsAudio
- uid: System.Windows.Forms.Clipboard.ContainsData*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsData
  nameWithType: Clipboard.ContainsData
- uid: System.Windows.Forms.Clipboard.ContainsFileDropList*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsFileDropList
  nameWithType: Clipboard.ContainsFileDropList
- uid: System.Windows.Forms.Clipboard.ContainsImage*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsImage
  nameWithType: Clipboard.ContainsImage
- uid: System.Windows.Forms.Clipboard.ContainsText*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: ContainsText
  nameWithType: Clipboard.ContainsText
- uid: System.Windows.Forms.Clipboard.GetAudioStream*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetAudioStream
  nameWithType: Clipboard.GetAudioStream
- uid: System.Windows.Forms.Clipboard.GetData*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetData
  nameWithType: Clipboard.GetData
- uid: System.Windows.Forms.Clipboard.GetDataObject*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetDataObject
  nameWithType: Clipboard.GetDataObject
- uid: System.Windows.Forms.Clipboard.GetFileDropList*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetFileDropList
  nameWithType: Clipboard.GetFileDropList
- uid: System.Windows.Forms.Clipboard.GetImage*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetImage
  nameWithType: Clipboard.GetImage
- uid: System.Windows.Forms.Clipboard.GetText*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: GetText
  nameWithType: Clipboard.GetText
- uid: System.Windows.Forms.Clipboard.SetAudio*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetAudio
  nameWithType: Clipboard.SetAudio
- uid: System.Windows.Forms.Clipboard.SetData*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetData
  nameWithType: Clipboard.SetData
- uid: System.Windows.Forms.Clipboard.SetDataObject*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetDataObject
  nameWithType: Clipboard.SetDataObject
- uid: System.Windows.Forms.Clipboard.SetFileDropList*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetFileDropList
  nameWithType: Clipboard.SetFileDropList
- uid: System.Windows.Forms.Clipboard.SetImage*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetImage
  nameWithType: Clipboard.SetImage
- uid: System.Windows.Forms.Clipboard.SetText*
  parent: System.Windows.Forms.Clipboard
  isExternal: false
  name: SetText
  nameWithType: Clipboard.SetText
