### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  id: WebPartDescription
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  - System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  langs:
  - csharp
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
  type: Class
  summary: "相关信息提供<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>而无需创建控件的实例可以显示在目录中的 Web 部件控件的控件。"
  remarks: "当<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在目录中的用户可以添加到页面的控件，有关每个控件的一些基本信息是必需。</xref:System.Web.UI.WebControls.WebParts.WebPart> 例如，它是一些有用的标题控件，并输入说明，以便用户查看目录具有足够的信息来决定是否将控件添加到页。 但是的目录<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可能包含很多控件，以及它将影响应用程序的性能的实例时，如果每个<xref:System.Web.UI.WebControls.WebParts.WebPart>必须创建控件以提取要在目录中显示的信息。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Web 部件说明类存在，以便不需要创建的实例<xref:System.Web.UI.WebControls.WebParts.WebPart>控件检索有关控件的目录中是否显示控件的信息。</xref:System.Web.UI.WebControls.WebParts.WebPart> Web 部件控件集，在 web 部件说明对象还使用与各种结合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件在目录页时显示模式。</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Web 部件说明类具有其构造函数，另一个采用两个重载<xref:System.Web.UI.WebControls.WebParts.WebPart>作为参数实例时可用的控件 (<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数)，和另一个采用多个字符串用作参数控件有关的信息 (<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数)。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       此 web 部件说明类还具有几个属性设计为包含的说明信息<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 下表总结了 web 部件说明属性，并且每个属性一个对应于在<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>      |Description 属性 |相关部件控件属性 |  |--------------------------|-----------------------------------|  |<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>|<xref:System.Web.UI.Control.ID%2A>|  |<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|  |<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|  |<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>|<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.Part.Description%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A></xref:System.Web.UI.WebControls.WebParts.Part.Title%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A></xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>"
  example:
  - "The following code example demonstrates programmatic use of the WebPartDescription class. Ordinarily, this type is used primarily by the Web Parts control set, but this code example is simply showing basic programmatic usage of the main description properties.  \n  \n The code example has four parts:  \n  \n-   A user control that enables users to change display modes on a Web page.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page to host the other controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For more details about the user control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_1.ascx)]\n [!code-vb[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_1.ascx)]  \n  \n The second part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the approach of dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_2.cs)]\n [!code-vb[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_2.vb)]  \n  \n The third part of the code example is the Web page. Near the top are two `Register` directives: one that registers the user control, and the other to register the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control whose source file is located in the App_Code folder of your site. The page contains an `<asp:catalogzone>` element, which in turn contains declarative references to two controls: the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, and a <xref:System.Web.UI.WebControls.BulletedList> Web server control that will be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control will wrap it with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Note that in the code for the `Button1_Click` method, the available WebPartDescription objects for the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog are retrieved using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then the description details are all written out to the page.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_3.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_3.aspx)]  \n  \n After you load the page in a browser, use the **Display Mode** drop-down list control and select **Catalog** to change the page to catalog display mode. In the catalog, you should see the two controls that are available to be added to the page. Click the **List WebPartDescription Information** button, and the code writes out the values of all available WebPartDescription objects to the page. This demonstrates that you can retrieve description details for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a catalog without having to create instances of the controls themselves."
  syntax:
    content: public class WebPartDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  id: '#ctor(System.Web.UI.WebControls.WebParts.WebPart)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化类的新实例时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>均提供控件实例。"
  remarks: "Web 部件说明构造函数用于创建新<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象基于现有<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 此构造函数只调用另一个重载，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>构造函数，获取从属性的所需的参数值上`part`参数。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>"
  syntax:
    content: public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);
    parameters:
    - id: part
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>获取其信息包含在控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Web.UI.Control.ID*>属性<code> part </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;)。</xref:System.Web.UI.Control.ID*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "通过使用包含说明信息的多个字符串初始化类的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "Web 部件说明构造函数用于创建的新实例<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件不可用。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 例如，这发生的情况下<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制导入的描述文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 它获取创建所需的信息<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>直接从描述文件中，对象和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>实例不存在。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription>"
  syntax:
    content: public WebPartDescription (string id, string title, string description, string imageUrl);
    parameters:
    - id: id
      type: System.String
      description: "要分配到<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>的值"
    - id: title
      type: System.String
      description: "要分配到<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>的值"
    - id: description
      type: System.String
      description: "要分配到<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>的值"
    - id: imageUrl
      type: System.String
      description: "要分配到<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>的值"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>或<code>title</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取包含用作一个图标的图像的路径的 URL <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控件。"
  remarks: "CatalogIconImageUrl 属性直接对应<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName> 如果该属性设置上<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，然后在相应的属性<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象也将具有一个值。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       CatalogIconImageUrl 属性适用页面时才在目录显示模式下，和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在控件的目录。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如果控件具有在属性值分配给它的图标，该图标将显示在控件旁边目录中。"
  example:
  - "The following code example demonstrates programmatic use of the CatalogIconImageUrl property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the CatalogIconImageUrl property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1296_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1296_1.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; }
    return:
      type: System.String
      description: "一个字符串，包含 URL;默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取的说明的文本<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "Description 属性直接对应<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName> 如果该属性设置上<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，然后在相应的属性<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象也将具有一个值。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Description 属性适用页面时才在目录显示模式下，和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在控件的目录。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如果控件具有分配给它的说明，则说明显示在目录中为该控件的工具提示。"
  example:
  - "The following code example demonstrates programmatic use of the Description property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Description property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_697_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_697_1.aspx)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "一个字符串，包含的说明<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件; 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取对应的 ID <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控件。"
  remarks: "ID 属性的值不能为`null`; 它必须始终具有一个值。 ID 属性直接对应<xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>属性。</xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>       ID 属性适用页面时才在目录显示模式下，和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在控件的目录。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the ID property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the ID property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_441_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_441_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "包含控件的 ID 的字符串。"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取相应的标题文本<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "Title 属性的值直接对应<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName> 任何对应<xref:System.Web.UI.WebControls.WebParts.WebPart>控件具有为其<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>属性，该按钮将变为标题属性的值; 否则，标题为计算得出的值。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Title 属性适用页面时才在目录显示模式下，和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在控件的目录。</xref:System.Web.UI.WebControls.WebParts.WebPart> 任何标题分配给<xref:System.Web.UI.WebControls.WebParts.WebPart>控件出现在目录中的控件旁边。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the Title property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Title property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_732_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_732_1.aspx)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "一个字符串，包含相应的控件的标题。 默认值为.NET framework 提供的计算的字符串。"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
