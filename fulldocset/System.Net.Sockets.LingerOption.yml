### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "指定是否<xref:System.Net.Sockets.Socket>到调用后将保持连接<> *1> 或<> *1> 连接的方法和它将保持的时间长度，如果仍然要发送数据。</xref:System.Net.Sockets.Socket>"
  remarks: "可能仍有数据可用传出的网络缓冲区中后应用程序调用<xref:System.Net.Sockets.Socket>或<xref:System.Net.Sockets.TcpClient>方法。</xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket> 如果你想要指定的量时间<xref:System.Net.Sockets.Socket>将尝试关闭之后传输未发送的数据，创建与 LingerOption`enable`参数设置为`true`，和`seconds`参数设置为所需的时间量。</xref:System.Net.Sockets.Socket> `seconds`参数用于指示你希望如何时间<xref:System.Net.Sockets.Socket>以保持在超时前的连接。</xref:System.Net.Sockets.Socket> 如果不希望<xref:System.Net.Sockets.Socket>继续保持连接任何长度的时间关闭之后，创建一个具有 LingerOption 实例`enable`参数设置为`true`和`seconds`参数设置为零。</xref:System.Net.Sockets.Socket> 在这种情况下，<xref:System.Net.Sockets.Socket>将立即关闭，并且任何未发送的数据将会丢失。</xref:System.Net.Sockets.Socket> 创建后，将传递到 LingerOption<xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>方法。</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> 如果你发送和接收的数据与<xref:System.Net.Sockets.TcpClient>，然后在中设置 LingerOption 实例<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>属性。</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient>       IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。 在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。 这是默认行为<xref:System.Net.Sockets.Socket>时<xref:System.Net.Sockets.Socket.LingerState%2A>未设置属性和<xref:System.Net.Sockets.TcpClient>时<xref:System.Net.Sockets.TcpClient.LingerState%2A>未设置属性。</xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.Socket>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "初始化的新实例<xref href=&quot;System.Net.Sockets.LingerOption&quot;></xref>类。"
  remarks: "可能仍有数据可用传出的网络缓冲区中关闭<xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>之后 使用`enable`参数来指定你是否希望<xref:System.Net.Sockets.Socket>继续在调用 close 方法后传输未发送的数据。</xref:System.Net.Sockets.Socket> 使用`seconds`参数以指示你希望如何时间<xref:System.Net.Sockets.Socket>尝试传输在超时前的未发送的数据。</xref:System.Net.Sockets.Socket> 如果指定`true`为`enable`参数，使用 0 表示`seconds`参数，<xref:System.Net.Sockets.Socket>会尝试将数据发送传出的网络缓冲区中没有剩余数据之前。</xref:System.Net.Sockets.Socket> 如果指定`false`为`enable`参数，<xref:System.Net.Sockets.Socket>将立即关闭，并且任何未发送的数据将会丢失。</xref:System.Net.Sockets.Socket>       下表介绍上行为<xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>和<xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>方法上的可能的值基于`enable`和`seconds`参数，请实例时创建，并在中设置<xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>或<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>属性。</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>      |`enable`|`seconds`|行为 |  |--------------|---------------|--------------|  |`false` （禁用），默认值 |超时不适用，（默认值）。 |尝试发送挂起的数据对于面向连接的套接字 (例如 TCP) 直到默认 IP 协议超时过期。 |  |`true` （启用） |一个非零的超时值 |尝试发送数据挂起，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。 |  |`true` （启用） |零超时。 |丢弃所有挂起的数据。 对于面向连接的套接字 (例如 TCP)，Winsock 重置连接。 |      IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。 在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。 这是一个套接字的默认行为时<xref:System.Net.Sockets.Socket.LingerState%2A>未设置属性。</xref:System.Net.Sockets.Socket.LingerState%2A>       当<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.Socket.LingerState%2A>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保持连接后&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;方法是调用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: seconds
      type: System.Int32
      description: "若要保持的秒数之后连接&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;调用方法。"
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "获取或设置一个值，该值指示是否后 linger<xref:System.Net.Sockets.Socket>已关闭。</xref:System.Net.Sockets.Socket>"
  remarks: "你可以使用的 Enabled 属性以确定是否<xref:System.Net.Sockets.Socket>关闭之后将逗留。</xref:System.Net.Sockets.Socket> 将该值更改为`true`或`false`并传递更改<xref:System.Net.Sockets.LingerOption>到<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一组<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>属性，以禁用或启用逗留。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       下表描述了可能的值的 Enabled 属性的行为和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.Socket.LingerState%2A>属性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>      |`enable`|`seconds`|行为 |  |--------------|---------------|--------------|  |`false` （禁用），默认值 |超时不适用，（默认值）。 |尝试发送挂起的数据对于面向连接的套接字 (例如 TCP) 直到默认 IP 协议超时过期。 |  |`true` （启用） |一个非零的超时值 |尝试发送数据挂起，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。 |  |`true` （启用） |零超时。 |丢弃所有挂起的数据。 对于面向连接的套接字 (例如 TCP)，Winsock 重置连接。 |      IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。 在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。 这是一个套接字的默认行为时<xref:System.Net.Sockets.Socket.LingerState%2A>未设置属性。</xref:System.Net.Sockets.Socket.LingerState%2A>       当<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.Socket.LingerState%2A>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Net.Sockets.Socket>之后将逗留&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;调用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Net.Sockets.Socket>"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "获取或设置要在调用后保持连接的时间量&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;如果仍然要发送数据的方法。"
  remarks: "使用此值，如果你想要确定如何长时间关闭<xref:System.Net.Sockets.Socket>将尝试传输在超时前的未发送的数据。</xref:System.Net.Sockets.Socket> 你还可以将此值设置为所需的超时时段，以秒为单位。       如果<xref:System.Net.Sockets.LingerOption.Enabled%2A>属性是`true`，并将 LingerTime 设置为 0，<xref:System.Net.Sockets.Socket>丢弃所有挂起的传出的网络缓冲区中发送的数据。</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.LingerOption.Enabled%2A> 如果更改此值，则必须传递更改<xref:System.Net.Sockets.LingerOption>到实例<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一组<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>属性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       下表描述的可能值的行为<xref:System.Net.Sockets.LingerOption.Enabled%2A>属性和 LingerTime 属性存储在<xref:System.Net.Sockets.Socket.LingerState%2A>属性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.Enabled%2A>      |`enable`|`seconds`|行为 |  |--------------|---------------|--------------|  |`false` （禁用），默认值 |超时不适用，（默认值）。 |尝试发送挂起的数据对于面向连接的套接字 (例如 TCP) 直到默认 IP 协议超时过期。 |  |`true` （启用） |一个非零的超时值 |尝试发送数据挂起，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。 |  |`true` （启用） |零超时。 |丢弃所有挂起的数据。 对于面向连接的套接字 (例如 TCP)，Winsock 重置连接。 |      IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。 在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。 这是一个套接字的默认行为时<xref:System.Net.Sockets.Socket.LingerState%2A>未设置属性。</xref:System.Net.Sockets.Socket.LingerState%2A>       当 LingerTime 属性存储在<xref:System.Net.Sockets.Socket.LingerState%2A>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</xref:System.Net.Sockets.Socket.LingerState%2A>"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "时间，以秒为单位，以调用之后保持连接&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;。"
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
