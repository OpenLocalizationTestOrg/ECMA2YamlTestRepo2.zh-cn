### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataSection
  id: MetadataSection
  children:
  - System.ServiceModel.Description.MetadataSection.#ctor
  - System.ServiceModel.Description.MetadataSection.#ctor(System.String,System.String,System.Object)
  - System.ServiceModel.Description.MetadataSection.Attributes
  - System.ServiceModel.Description.MetadataSection.CreateFromPolicy(System.Xml.XmlElement,System.String)
  - System.ServiceModel.Description.MetadataSection.CreateFromSchema(System.Xml.Schema.XmlSchema)
  - System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)
  - System.ServiceModel.Description.MetadataSection.Dialect
  - System.ServiceModel.Description.MetadataSection.Identifier
  - System.ServiceModel.Description.MetadataSection.Metadata
  - System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect
  - System.ServiceModel.Description.MetadataSection.PolicyDialect
  - System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect
  - System.ServiceModel.Description.MetadataSection.XmlSchemaDialect
  langs:
  - csharp
  name: MetadataSection
  nameWithType: MetadataSection
  fullName: System.ServiceModel.Description.MetadataSection
  type: Class
  summary: "表示 XML 元数据或对 XML 元数据引用。"
  remarks: "MetadataSection 类符合的定义`wsx:Metadata/wsx:MetadataSection`Ws-metadata Exchange 规范中的元素并包含 XML 元数据或对 XML 元数据引用。       MetadataSection 对象包含一种方言 （如 Web 服务描述语言或 WSDL 文件中） 的 XML 格式的元数据。 你可以向所表示的 XML 元数据的集合添加 MetadataSection<xref:System.ServiceModel.Description.MetadataSet>对象。</xref:System.ServiceModel.Description.MetadataSet> 大部分[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]元数据系统，如<xref:System.ServiceModel.Description.MetadataExchangeClient>类，而使用<xref:System.ServiceModel.Description.MetadataSet>类导入或导出的 XML 格式的服务元数据。</xref:System.ServiceModel.Description.MetadataSet> </xref:System.ServiceModel.Description.MetadataExchangeClient>       例如，若要导出[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]协定或终结点的对象添加到<xref:System.ServiceModel.Description.MetadataSet>包含 XML 格式的等效元数据的对象上调用适当的导出方法<xref:System.ServiceModel.Description.WsdlExporter>类，传递<xref:System.ServiceModel.Description.ContractDescription>或<xref:System.ServiceModel.Description.ServiceEndpoint>对象，然后调用<xref:System.ServiceModel.Description.WsdlExporter.GetGeneratedMetadata%2A>方法。</xref:System.ServiceModel.Description.WsdlExporter.GetGeneratedMetadata%2A> </xref:System.ServiceModel.Description.ServiceEndpoint> </xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.WsdlExporter> </xref:System.ServiceModel.Description.MetadataSet>       若要导入基于 XML 的元数据从<xref:System.ServiceModel.Description.MetadataSet>对象插入[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Description.ContractDescription>， <xref:System.ServiceModel.Description.ServiceEndpoint>，和<xref:System.ServiceModel.Channels.Binding>对象，将传递<xref:System.ServiceModel.Description.MetadataSet>的构造函数的对象<xref:System.ServiceModel.Description.WsdlImporter>类并调用其中一个导入方法。</xref:System.ServiceModel.Description.WsdlImporter> </xref:System.ServiceModel.Description.MetadataSet> </xref:System.ServiceModel.Channels.Binding> </xref:System.ServiceModel.Description.ServiceEndpoint> </xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.MetadataSet>"
  example:
  - "The following code example shows how to retrieve the MetadataSection objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> and <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> properties to the console.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlRoot(ElementName="MetadataSection", Namespace="http://schemas.xmlsoap.org/ws/2004/09/mex")]

      public class MetadataSection
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: MetadataSection()
  nameWithType: MetadataSection.MetadataSection()
  fullName: System.ServiceModel.Description.MetadataSection.MetadataSection()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;></xref>类没有方言、 标识符或 XML 元数据。"
  syntax:
    content: public MetadataSection ();
    parameters: []
  overload: System.ServiceModel.Description.MetadataSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: MetadataSection(String,String,Object)
  nameWithType: MetadataSection.MetadataSection(String,String,Object)
  fullName: System.ServiceModel.Description.MetadataSection.MetadataSection(String,String,Object)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;></xref>类使用指定的方言、 标识符和 XML 元数据。"
  remarks: "使用 MetadataSection 构造函数来指定要包含在该元数据<xref:System.ServiceModel.Description.MetadataSection>，其方言和标识符。</xref:System.ServiceModel.Description.MetadataSection> 元数据对象必须是可序列化使用<xref:System.Xml.Serialization.XmlSerializer>类，以便<xref:System.ServiceModel.Description.MetadataSection>可以序列化对象。</xref:System.ServiceModel.Description.MetadataSection> </xref:System.Xml.Serialization.XmlSerializer> 如果不是可序列化的该对象进行序列化时，是引发异常。 使用<xref:System.ServiceModel.Description.MetadataLocation>或<xref:System.ServiceModel.Description.MetadataReference>对象`metadata`参数，如果你想要包含的元数据，而不是元数据本身的引用。</xref:System.ServiceModel.Description.MetadataReference> </xref:System.ServiceModel.Description.MetadataLocation>"
  syntax:
    content: public MetadataSection (string dialect, string identifier, object metadata);
    parameters:
    - id: dialect
      type: System.String
      description: "元数据的方言。"
    - id: identifier
      type: System.String
      description: "元数据的标识符。"
    - id: metadata
      type: System.Object
      description: "XML 元数据。"
  overload: System.ServiceModel.Description.MetadataSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.Attributes
  id: Attributes
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: Attributes
  nameWithType: MetadataSection.Attributes
  fullName: System.ServiceModel.Description.MetadataSection.Attributes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取可用于添加或删除的元数据中的属性扩展的 XML 特性的集合。"
  remarks: "Attributes 属性用于添加或移除属性扩展。      1> [!NOTE]&1;> 此集合中未包括方言和标识符的属性。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlAttribute> Attributes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.XmlAttribute}
      description: "属性的 XML 集合<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref>。 默认集合为空。"
  overload: System.ServiceModel.Description.MetadataSection.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.CreateFromPolicy(System.Xml.XmlElement,System.String)
  id: CreateFromPolicy(System.Xml.XmlElement,System.String)
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: CreateFromPolicy(XmlElement,String)
  nameWithType: MetadataSection.CreateFromPolicy(XmlElement,String)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromPolicy(XmlElement,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "创建<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;></xref>从指定的策略信息。"
  remarks: "使用 CreateFromPolicy 方法创建<xref:System.ServiceModel.Description.MetadataSection>Ws-policy 策略表达式。</xref:System.ServiceModel.Description.MetadataSection> <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A>属性设置为<xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A>和`identifier`分配给<xref:System.ServiceModel.Description.MetadataSection.Identifier%2A>属性。</xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> </xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> 建议的标识符是`wsp:Name`策略表达式的属性。"
  syntax:
    content: public static System.ServiceModel.Description.MetadataSection CreateFromPolicy (System.Xml.XmlElement policy, string identifier);
    parameters:
    - id: policy
      type: System.Xml.XmlElement
      description: "Ws-policy 中定义的策略的 XML 表示形式。"
    - id: identifier
      type: System.String
      description: "该策略标识符。"
    return:
      type: System.ServiceModel.Description.MetadataSection
      description: "A <xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref> ，其中包含具有指定标识符指定的策略表达式。"
  overload: System.ServiceModel.Description.MetadataSection.CreateFromPolicy*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XML 元素不是策略元素。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "该策略将<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.CreateFromSchema(System.Xml.Schema.XmlSchema)
  id: CreateFromSchema(System.Xml.Schema.XmlSchema)
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: CreateFromSchema(XmlSchema)
  nameWithType: MetadataSection.CreateFromSchema(XmlSchema)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromSchema(XmlSchema)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "创建<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;></xref>从指定&lt;xref:System.Xml.Schema.XmlSchema?displayProperty=fullName&gt;对象。"
  remarks: "使用此静态工厂方法可快速创建<xref:System.ServiceModel.Description.MetadataSection>XML 架构文档。</xref:System.ServiceModel.Description.MetadataSection> <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A>属性分配的值<xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A>和<xref:System.ServiceModel.Description.MetadataSection.Identifier%2A>属性分配 XML 架构文档的目标命名空间值。</xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> </xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.Dialect%2A>"
  syntax:
    content: public static System.ServiceModel.Description.MetadataSection CreateFromSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "XML 架构文档。"
    return:
      type: System.ServiceModel.Description.MetadataSection
      description: "A <xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref>包含指定的 XML 架构。"
  overload: System.ServiceModel.Description.MetadataSection.CreateFromSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "架构是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)
  id: CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: CreateFromServiceDescription(ServiceDescription)
  nameWithType: MetadataSection.CreateFromServiceDescription(ServiceDescription)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(ServiceDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "返回<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref> ，该字符串包含指定<xref href=&quot;System.Web.Services.Description.ServiceDescription&quot;> </xref>。"
  remarks: "使用此静态工厂方法可快速创建<xref:System.ServiceModel.Description.MetadataSection>WSDL 文档。</xref:System.ServiceModel.Description.MetadataSection> <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A>属性分配的值<xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A>和<xref:System.ServiceModel.Description.MetadataSection.Identifier%2A>属性分配 WSDL 文档的目标命名空间值。</xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> </xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.Dialect%2A>"
  syntax:
    content: public static System.ServiceModel.Description.MetadataSection CreateFromServiceDescription (System.Web.Services.Description.ServiceDescription serviceDescription);
    parameters:
    - id: serviceDescription
      type: System.Web.Services.Description.ServiceDescription
      description: "<xref href=&quot;System.Web.Services.Description.ServiceDescription&quot;> </xref>用于创建<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;></xref>对象。"
    return:
      type: System.ServiceModel.Description.MetadataSection
      description: "A <xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref> ，该字符串包含指定<xref href=&quot;System.Web.Services.Description.ServiceDescription&quot;> </xref>。"
  overload: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>serviceDescription</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.Dialect
  id: Dialect
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: Dialect
  nameWithType: MetadataSection.Dialect
  fullName: System.ServiceModel.Description.MetadataSection.Dialect
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置一个值，指示元数据的类型。"
  remarks: "方言指示此<xref:System.ServiceModel.Description.MetadataSection>。</xref:System.ServiceModel.Description.MetadataSection>中的元数据的类型 使用受支持的对象模型的方言字符串是:- <xref:System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect%2A>- <xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A>- <xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A>- <xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A></xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A> </xref:System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect%2A>"
  example:
  - "The following code example shows how to retrieve the <xref:System.ServiceModel.Description.MetadataSection> objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> and Dialect properties to the console.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public string Dialect { get; set; }
    return:
      type: System.String
      description: "元数据方言。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Description.MetadataSection.Dialect*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.Identifier
  id: Identifier
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: Identifier
  nameWithType: MetadataSection.Identifier
  fullName: System.ServiceModel.Description.MetadataSection.Identifier
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置元数据的标识符。"
  remarks: "元数据中此<xref:System.ServiceModel.Description.MetadataSection>。</xref:System.ServiceModel.Description.MetadataSection>标识符 值取决于元数据的类型。"
  example:
  - "The following code example shows how to retrieve the <xref:System.ServiceModel.Description.MetadataSection> objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the Identifier and <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> properties to the console.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public string Identifier { get; set; }
    return:
      type: System.String
      description: "元数据的标识符。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Description.MetadataSection.Identifier*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.Metadata
  id: Metadata
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: Metadata
  nameWithType: MetadataSection.Metadata
  fullName: System.ServiceModel.Description.MetadataSection.Metadata
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "获取或设置包含的元数据对象。"
  remarks: "使用元数据属性来访问或修改<xref:System.ServiceModel.Description.MetadataSection>.</xref:System.ServiceModel.Description.MetadataSection>中包含的元数据内容 元数据对象可以是<xref:System.ServiceModel.Description.MetadataReference>或<xref:System.ServiceModel.Description.MetadataLocation>作为元数据内容的引用。</xref:System.ServiceModel.Description.MetadataLocation> </xref:System.ServiceModel.Description.MetadataReference> 当<xref:System.ServiceModel.Description.MetadataSection>是反序列化，元数据对象的类型由 XML 内容。</xref:System.ServiceModel.Description.MetadataSection> 下表描述了可能的返回值。      |类型的 XML 元数据 |返回类型。 |  |--------------------------|-------------------|  |WSDL 文档 |<xref:System.Web.Services.Description.ServiceDescription?displayProperty=fullName>|  |XML 架构 |<xref:System.Xml.Schema.XmlSchema?displayProperty=fullName>|  |元数据引用 |<xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName>|  |元数据位置 |<xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>|  |策略和所有其他 XML 内容 |<xref:System.Xml.XmlElement?displayProperty=fullName>|</xref:System.Xml.XmlElement?displayProperty=fullName></xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName></xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName></xref:System.Xml.Schema.XmlSchema?displayProperty=fullName></xref:System.Web.Services.Description.ServiceDescription?displayProperty=fullName>"
  syntax:
    content: public object Metadata { get; set; }
    return:
      type: System.Object
      description: "此元数据内容<xref href=&quot;System.ServiceModel.Description.MetadataSection&quot;> </xref>。"
  overload: System.ServiceModel.Description.MetadataSection.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect
  id: MetadataExchangeDialect
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: MetadataExchangeDialect
  nameWithType: MetadataSection.MetadataExchangeDialect
  fullName: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "包含元数据交换方言的值。"
  remarks: "Ws-metadata Exchange 文档的方言。"
  syntax:
    content: public static string MetadataExchangeDialect { get; }
    return:
      type: System.String
      description: "Ws-metadata Exchange 文档的方言。"
  overload: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.PolicyDialect
  id: PolicyDialect
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: PolicyDialect
  nameWithType: MetadataSection.PolicyDialect
  fullName: System.ServiceModel.Description.MetadataSection.PolicyDialect
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "包含 Ws-policy 方言的值。"
  remarks: "Ws-policy 策略表达式的方言。"
  syntax:
    content: public static string PolicyDialect { get; }
    return:
      type: System.String
      description: "Ws-policy 策略表达式的方言。"
  overload: System.ServiceModel.Description.MetadataSection.PolicyDialect*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect
  id: ServiceDescriptionDialect
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: ServiceDescriptionDialect
  nameWithType: MetadataSection.ServiceDescriptionDialect
  fullName: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "包含 Web 服务描述语言 (WSDL) 方言的值。"
  remarks: "方言。"
  syntax:
    content: public static string ServiceDescriptionDialect { get; }
    return:
      type: System.String
      description: "WSDL 文档的方言。"
  overload: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect
  id: XmlSchemaDialect
  parent: System.ServiceModel.Description.MetadataSection
  langs:
  - csharp
  name: XmlSchemaDialect
  nameWithType: MetadataSection.XmlSchemaDialect
  fullName: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "包含 XML 架构方言的值。"
  remarks: "XML 架构文档的方言。"
  syntax:
    content: public static string XmlSchemaDialect { get; }
    return:
      type: System.String
      description: "XML 架构文档的方言。"
  overload: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Description.MetadataSection.#ctor
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: MetadataSection()
  nameWithType: MetadataSection.MetadataSection()
  fullName: System.ServiceModel.Description.MetadataSection.MetadataSection()
- uid: System.ServiceModel.Description.MetadataSection.#ctor(System.String,System.String,System.Object)
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: MetadataSection(String,String,Object)
  nameWithType: MetadataSection.MetadataSection(String,String,Object)
  fullName: System.ServiceModel.Description.MetadataSection.MetadataSection(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.MetadataSection.Attributes
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Attributes
  nameWithType: MetadataSection.Attributes
  fullName: System.ServiceModel.Description.MetadataSection.Attributes
- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlAttribute}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XmlAttribute>
  nameWithType: Collection<XmlAttribute>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlAttribute>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.XmlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    nameWithType: XmlAttribute
    fullName: XmlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataSection.CreateFromPolicy(System.Xml.XmlElement,System.String)
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromPolicy(XmlElement,String)
  nameWithType: MetadataSection.CreateFromPolicy(XmlElement,String)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromPolicy(XmlElement,String)
- uid: System.ServiceModel.Description.MetadataSection
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataSection
  nameWithType: MetadataSection
  fullName: System.ServiceModel.Description.MetadataSection
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.ServiceModel.Description.MetadataSection.CreateFromSchema(System.Xml.Schema.XmlSchema)
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromSchema(XmlSchema)
  nameWithType: MetadataSection.CreateFromSchema(XmlSchema)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromServiceDescription(ServiceDescription)
  nameWithType: MetadataSection.CreateFromServiceDescription(ServiceDescription)
  fullName: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(ServiceDescription)
- uid: System.Web.Services.Description.ServiceDescription
  parent: System.Web.Services.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.Web.Services.Description.ServiceDescription
- uid: System.ServiceModel.Description.MetadataSection.Dialect
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Dialect
  nameWithType: MetadataSection.Dialect
  fullName: System.ServiceModel.Description.MetadataSection.Dialect
- uid: System.ServiceModel.Description.MetadataSection.Identifier
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Identifier
  nameWithType: MetadataSection.Identifier
  fullName: System.ServiceModel.Description.MetadataSection.Identifier
- uid: System.ServiceModel.Description.MetadataSection.Metadata
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Metadata
  nameWithType: MetadataSection.Metadata
  fullName: System.ServiceModel.Description.MetadataSection.Metadata
- uid: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: MetadataExchangeDialect
  nameWithType: MetadataSection.MetadataExchangeDialect
  fullName: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect
- uid: System.ServiceModel.Description.MetadataSection.PolicyDialect
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: PolicyDialect
  nameWithType: MetadataSection.PolicyDialect
  fullName: System.ServiceModel.Description.MetadataSection.PolicyDialect
- uid: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: ServiceDescriptionDialect
  nameWithType: MetadataSection.ServiceDescriptionDialect
  fullName: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect
- uid: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: XmlSchemaDialect
  nameWithType: MetadataSection.XmlSchemaDialect
  fullName: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect
- uid: System.ServiceModel.Description.MetadataSection.#ctor*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: MetadataSection
  nameWithType: MetadataSection.MetadataSection
- uid: System.ServiceModel.Description.MetadataSection.Attributes*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Attributes
  nameWithType: MetadataSection.Attributes
- uid: System.ServiceModel.Description.MetadataSection.CreateFromPolicy*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromPolicy
  nameWithType: MetadataSection.CreateFromPolicy
- uid: System.ServiceModel.Description.MetadataSection.CreateFromSchema*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromSchema
  nameWithType: MetadataSection.CreateFromSchema
- uid: System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: CreateFromServiceDescription
  nameWithType: MetadataSection.CreateFromServiceDescription
- uid: System.ServiceModel.Description.MetadataSection.Dialect*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Dialect
  nameWithType: MetadataSection.Dialect
- uid: System.ServiceModel.Description.MetadataSection.Identifier*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Identifier
  nameWithType: MetadataSection.Identifier
- uid: System.ServiceModel.Description.MetadataSection.Metadata*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: Metadata
  nameWithType: MetadataSection.Metadata
- uid: System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: MetadataExchangeDialect
  nameWithType: MetadataSection.MetadataExchangeDialect
- uid: System.ServiceModel.Description.MetadataSection.PolicyDialect*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: PolicyDialect
  nameWithType: MetadataSection.PolicyDialect
- uid: System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: ServiceDescriptionDialect
  nameWithType: MetadataSection.ServiceDescriptionDialect
- uid: System.ServiceModel.Description.MetadataSection.XmlSchemaDialect*
  parent: System.ServiceModel.Description.MetadataSection
  isExternal: false
  name: XmlSchemaDialect
  nameWithType: MetadataSection.XmlSchemaDialect
