### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementCommitAttribute
  id: ManagementCommitAttribute
  children:
  - System.Management.Instrumentation.ManagementCommitAttribute.#ctor
  langs:
  - csharp
  name: ManagementCommitAttribute
  nameWithType: ManagementCommitAttribute
  fullName: System.Management.Instrumentation.ManagementCommitAttribute
  type: Class
  summary: "该 ManagementCommit 特性标记需要更新的一组在一个原子操作中的读写属性时调用的方法。       注意︰ WMI.NET 库都被视为在最终状态，不进一步开发、 增强功能，或更新将可供影响这些库的非安全相关问题。 [MI Api](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)应将用于所有新的开发。"
  remarks: "类的读写属性标记有<xref:System.Management.Instrumentation.ManagementConfigurationAttribute>属性。</xref:System.Management.Instrumentation.ManagementConfigurationAttribute> 此外，每个读 / 写属性可以是两种类型之一︰<xref:System.Management.Instrumentation.ManagementConfigurationType>或<xref:System.Management.Instrumentation.ManagementConfigurationType>。</xref:System.Management.Instrumentation.ManagementConfigurationType> </xref:System.Management.Instrumentation.ManagementConfigurationType> 如果类具有配置为 OnCommit 的读写属性，此类应该具有用 ManagementCommit 特性标记的方法。 已设置了所有 OnCommit 属性时，将调用关联的方法。       标记的方法不是线程安全。       如果没有方法将标有 ManagementCommit 属性，该类管理本身具有而无需任何更新已完成的指示配置更新。       用 ManagementCommit 特性标记的方法不采用任何参数，它具有 void 返回类型。"
  example:
  - "[C#]  \n  \n```  \npublic class Process  \n{  \n    /// Key attribute marks a key property. Keys are not changeable.  \n    /// Keys have to be unique information.  \n    [ManagementKey]  \n    public int Id   \n    {  \n        get {    }  \n    }  \n  \n    /// ManagementConfiguration stands for read/write manageable  \n    /// property from a read/write field.  \n    [ManagementConfiguration]  \n    public string UserDefinedString;  \n  \n    [ManagementCommit]  \n    void SaveOnDevice();  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ManagementCommitAttribute : System.Management.Instrumentation.ManagementMemberAttribute
  inheritance:
  - System.Attribute
  - System.Management.Instrumentation.ManagementMemberAttribute
  implements: []
  inheritedMembers:
  - System.Management.Instrumentation.ManagementMemberAttribute.Name
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementCommitAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementCommitAttribute
  langs:
  - csharp
  name: ManagementCommitAttribute()
  nameWithType: ManagementCommitAttribute.ManagementCommitAttribute()
  fullName: System.Management.Instrumentation.ManagementCommitAttribute.ManagementCommitAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "初始化<xref:System.Management.ManagementCommitAttribute>类</xref:System.Management.ManagementCommitAttribute>的新实例 这是默认构造函数。"
  syntax:
    content: public ManagementCommitAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementCommitAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Management.Instrumentation.ManagementMemberAttribute
  isExternal: false
  name: System.Management.Instrumentation.ManagementMemberAttribute
- uid: System.Management.Instrumentation.ManagementCommitAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementCommitAttribute
  isExternal: false
  name: ManagementCommitAttribute()
  nameWithType: ManagementCommitAttribute.ManagementCommitAttribute()
  fullName: System.Management.Instrumentation.ManagementCommitAttribute.ManagementCommitAttribute()
- uid: System.Management.Instrumentation.ManagementCommitAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementCommitAttribute
  isExternal: false
  name: ManagementCommitAttribute
  nameWithType: ManagementCommitAttribute.ManagementCommitAttribute
