### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PublisherIdentityPermission
  id: PublisherIdentityPermission
  children:
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.PublisherIdentityPermission.Certificate
  - System.Security.Permissions.PublisherIdentityPermission.Copy
  - System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.ToXml
  - System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission
  fullName: System.Security.Permissions.PublisherIdentityPermission
  type: Class
  summary: "表示软件发布者的标识。 此类不能被继承。"
  remarks: "> [!IMPORTANT]1> 第一页为[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]，不使用标识权限。   >> 在.NET framework 1.0 和 1.1 版中，标识权限不能有<xref:System.Security.Permissions.PermissionState>权限状态值。</xref:System.Security.Permissions.PermissionState> 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着，在 2.0 及更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</xref:System.Security.Permissions.IUnrestrictedPermission> 也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。   >> 在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 从.NET Framework 2.0 版开始，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。      1> [!NOTE]&1;> 默认情况下，代码访问安全性不会检查<xref:System.Security.Policy.Publisher>证据。</xref:System.Security.Policy.Publisher> 除非你的计算机拥有基于的自定义代码组<xref:System.Security.Policy.PublisherMembershipCondition>类，你可以通过跳过验证码签名验证提高性能。</xref:System.Security.Policy.PublisherMembershipCondition> 这通过配置运行时不提供实现<xref:System.Security.Policy.Publisher>代码访问安全性的证据。</xref:System.Security.Policy.Publisher> 有关如何配置此选项以及详细信息的应用程序可以使用它，请参阅元素。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PublisherIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;></xref>与指定的验证码 X.509v3 证书的类。"
  remarks: "X.509 证书定义指定的软件发行者中，的标识由 Authenticode 代码签名。"
  syntax:
    content: public PublisherIdentityPermission (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "表示软件发布者的标识 X.509 证书。"
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> certificate </code>参数不是有效的证书。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  remarks: "创建完全受限制 (`None`) 或`Unrestricted`权限。      1> [!NOTE] 1> 在.NET Framework 1.0 和 1.1 版中，标识权限不能具有<xref:System.Security.Permissions.PermissionState>权限状态值。</xref:System.Security.Permissions.PermissionState> 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着，在 2.0 及更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</xref:System.Security.Permissions.IUnrestrictedPermission> 也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。       在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 从.NET Framework 2.0 版开始，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。"
  example:
  - "The following example shows how to use the PublisherIdentityPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/csharp/1a39ce0c-6535-46dd-bd5f-_1.cs)]\n [!code-vb[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/visualbasic/1a39ce0c-6535-46dd-bd5f-_1.vb)]\n [!code-cpp[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/cpp/1a39ce0c-6535-46dd-bd5f-_1.cpp)]"
  syntax:
    content: public PublisherIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "之一<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>参数不是有效的值的<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  id: Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置表示软件发行者的身份的 Authenticode X.509v3 证书。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "表示软件发行者的身份的 X.509 证书。"
  overload: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "证书<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "证书不是有效的证书。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "无法设置属性，因为其标识不明确。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回当前权限的相同副本。"
  remarks: "与原始权限情况下，一份权限表示对资源的相同的访问权限。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "当前权限的副本。"
  overload: System.Security.Permissions.PublisherIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "重新构造具有指定状态的 XML 编码的权限。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "编码用于重新构造权限的 XML。"
  overload: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>参数不是有效的权限元素。       -或- <code> esd </code>参数的版本号无效。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回是当前权限和指定的权限的交集的权限。"
  remarks: "以下两个权限的交集是描述组的二者共同描述的操作的权限。 仅通过两个原始权限的请求将通过该交集。       <xref:System.Security.Permissions.PublisherIdentityPermission>仅支持 set 操作 (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>，Intersect 和<xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) 时当前权限等同于指定的权限。</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要与当前权限相交的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示当前权限和指定的权限的交集的一个新权限。 此新权限为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集为空。"
  overload: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "确定当前权限是否为指定权限的子集。"
  remarks: "如果两个权限相等，则当前权限是指定权限的子集。 如果此方法返回`true`，当前的权限表示对与指定权限的受保护资源的相同的访问权限。       <xref:System.Security.Permissions.PublisherIdentityPermission>支持 set 操作 (IsSubsetOf， <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>，和<xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) 仅当当前权限是否等于指定的权限时。</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "将要测试子集关系的权限。 此权限必须是与当前权限属于同一类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限是指定权限; 的子集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建权限及其当前状态的 XML 编码。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "权限，包括任何状态信息的 XML 编码。"
  overload: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建兼具当前权限和指定的权限的权限。"
  remarks: "对联合方法的结果是调用的由当前权限和指定的权限表示所表示的所有操作的权限。 任何请求都会通过任一权限传递其联合。       <xref:System.Security.Permissions.PublisherIdentityPermission>类仅支持一组操作 (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>， <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>，和联合) 时当前权限等同于指定的权限。</xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要与当前权限合并的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示同时兼具当前权限和指定的权限的新权限。"
  overload: System.Security.Permissions.PublisherIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。       -或者-这两个权限不相等。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: PublisherIdentityPermission.Copy
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: PublisherIdentityPermission.FromXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: PublisherIdentityPermission.Intersect
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PublisherIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: PublisherIdentityPermission.ToXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Union*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union
  nameWithType: PublisherIdentityPermission.Union
