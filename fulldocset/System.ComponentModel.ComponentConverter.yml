### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ComponentConverter
  id: ComponentConverter
  children:
  - System.ComponentModel.ComponentConverter.#ctor(System.Type)
  - System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ComponentConverter
  nameWithType: ComponentConverter
  fullName: System.ComponentModel.ComponentConverter
  type: Class
  summary: "提供用于与其他各种表示形式转换组件的类型转换器。"
  remarks: "此类将实现<xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>和<xref:System.ComponentModel.ComponentConverter.GetProperties%2A>通过返回通过<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A><xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>方法</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>的属性</xref:System.ComponentModel.ComponentConverter.GetProperties%2A></xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>       有关类型转换器的详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基类和[如何︰ 实现类型转换器](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter>      1> [!NOTE]&1;> 决不要创建的 ComponentConverter 实例。 而应调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A><xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>方法</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 有关详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基的类</xref:System.ComponentModel.TypeConverter>中的示例       此转换器转换的对象实现<xref:System.ComponentModel.IComponent>并在属性窗口中显示其属性。</xref:System.ComponentModel.IComponent>"
  syntax:
    content: 'public class ComponentConverter : System.ComponentModel.ReferenceConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ReferenceConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.ComponentConverter&quot;></xref>类。"
  syntax:
    content: public ComponentConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>，它表示要与此组件转换器关联的类型。</xref:System.Type>"
  overload: System.ComponentModel.ComponentConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取由值参数指定的组件的类型的属性集合。"
  remarks: "`context`参数可用于提取有关从中调用该转换器的环境的附加信息。 这可以是`null`，因此总是需要检查。 同样，上下文对象上的属性可以返回`null`。       `attributes`数组将用于筛选数组。 `attributes`可以具有多种<xref:System.Type>和<xref:System.Attribute>对象。</xref:System.Attribute> </xref:System.Type> 筛选由以下规则定义:-<xref:System.Type>对象将被视为通配符; 它将与匹配的任何属性都具有<xref:System.Type>属性其集中。</xref:System.Type> </xref:System.Type>      -如果属性不具有<xref:System.Attribute>的同一个类，将不包含属性返回的数组中。</xref:System.Attribute>      -如果属性是实例<xref:System.Attribute>，该属性必须是完全匹配，或它不包括在返回的数组。</xref:System.Attribute>      -如果<xref:System.Attribute>指定实例和它是默认属性，它将包括在返回的数组即使不没有的任何实例<xref:System.Attribute>属性中。</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>指定要获取属性为组件的类型</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "类型的数组<xref:System.Attribute>，将用作筛选器。</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>与该组件公开的属性或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果没有属性。"
  overload: System.ComponentModel.ComponentConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示此对象是否支持使用指定的上下文的属性。"
  remarks: "`context`参数可用于提取有关从中调用该转换器的环境的附加信息。 这可以是`null`，因此总是需要检查。 同样，上下文对象上的属性可以返回`null`。"
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>因为<xref:System.ComponentModel.TypeConverter.GetProperties*>应调用以查找此对象的属性。</xref:System.ComponentModel.TypeConverter.GetProperties*> 此方法从不返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: System.ComponentModel.ReferenceConverter
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ComponentConverter.#ctor*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter
  nameWithType: ComponentConverter.ComponentConverter
- uid: System.ComponentModel.ComponentConverter.GetProperties*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties
  nameWithType: ComponentConverter.GetProperties
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ComponentConverter.GetPropertiesSupported
