### YamlMime:ManagedReference
items:
- uid: System.Globalization.PersianCalendar
  id: PersianCalendar
  children:
  - System.Globalization.PersianCalendar.#ctor
  - System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.PersianCalendar.AlgorithmType
  - System.Globalization.PersianCalendar.Eras
  - System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.GetEra(System.DateTime)
  - System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.GetMonth(System.DateTime)
  - System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.GetYear(System.DateTime)
  - System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.MaxSupportedDateTime
  - System.Globalization.PersianCalendar.MinSupportedDateTime
  - System.Globalization.PersianCalendar.PersianEra
  - System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.PersianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: PersianCalendar
  nameWithType: PersianCalendar
  fullName: System.Globalization.PersianCalendar
  type: Class
  summary: "表示波斯历。"
  remarks: "尽管某些区域使用不同的月份名称，在大多数国家/地区讲波斯语，使用波斯历。 波斯历官方日历伊朗和阿富汗，而是一个可选日历处于哈萨克斯坦塔吉克斯坦等区域。      1> [!NOTE]&1;> 在.NET Framework 中使用的波斯历类和其他日历类的信息，请参阅[使用日历](~/add/includes/ajax-current-ext-md.md)。       从的 Hijra，对应于 622 年开始日期与波斯历日期公元 和当穆罕默德 (PBUH) 从麦加迁移到麦地那的年份。 例如，日期公元 2002 年 3 月 21 日 对应于月的年份中的第一天 1381 Anno Persico。       波斯历基于太阳年，并为大约为 365 天长。 每一年循环访问四个季节，并为新一年开始到北半球时从地球的中心从南半球半球越过赤道太阳出现。 新的一年标记月，这是在北半球 spring 的第一天的第一天中。       每个与波斯历前六个月有 31 天、 每个接下来的五个月有 30 天，和上个月有 29 天在平 30 年天闰年中。 闰年是每一年，被 33 除时，具有余数为 1、 5、 9、 13、 17、 22、 26 或 30。 例如，1370 年是闰年，因为它被 33 除时余数为 17。 在每个 33 年周期中有大约为 8 个闰年。      ## 波斯历类和.NET Framework 版本开头[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]，波斯历类都使用回历太阳能天文算法而不是见习算法用于计算日期。 这可使波斯历实现与波斯历一致在伊朗和阿富汗，波斯历处于最广泛使用的两个国家/地区中使用。 此更改将影响所有在.NET Framework 4 或更高版本的 if 上运行的应用[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]安装。       由于已更改的算法:-转换 1800年和公历日历中的 2123年之间的日期时，这两种算法应返回相同的结果。      当转换日期 1800年之前和之后 2123 公历日历中，-两种算法可能会返回不同的结果。      -<xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A>属性值已更改从 0622 年 3 月 21，公历日历中为 0622 年 3 月 22，以公历。</xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A>      -<xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A>属性值已从与波斯历 9378 年 10 月的第 10 天更改为与波斯历 9378 年 10 月的 13 天。</xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A>      -<xref:System.Globalization.PersianCalendar.IsLeapYear%2A>方法可能返回不同的结果，比以前。</xref:System.Globalization.PersianCalendar.IsLeapYear%2A>      ## 使用的波斯历类应用程序使用的波斯历对象计算日期与波斯历日期或将公历日期与波斯日期相互转换。       波斯历对象不能用作区域性的默认日历。 指定的默认日历<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName>属性，并且必须返回的日历之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName>属性。</xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> </xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> 目前，波斯历类不支持任何区域性的可选日历<xref:System.Globalization.CultureInfo>类，因此不能为默认日历。</xref:System.Globalization.CultureInfo>"
  example:
  - "The following example instantiates <xref:System.DateTime> objects by using the <xref:System.DateTime.Now%2A?displayProperty=fullName> property, a <xref:System.DateTime> constructor, and the Persian calendar's <xref:System.Globalization.Calendar.ToDateTime%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> method. It then displays these dates in both the Gregorian and Persian calendars. It also displays the date range of the Persian calendar.  \n  \n [!code-vb[sys.glob.PersianCal#3](~/add/codesnippet/visualbasic/t-system.globalization.p_1.vb)]\n [!code-cs[sys.glob.PersianCal#3](~/add/codesnippet/csharp/t-system.globalization.p_1.cs)]  \n  \n The following example demonstrates the field, property, and method members of the PersianCalendar class.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/t-system.globalization.p_2.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/t-system.globalization.p_2.cs)]"
  syntax:
    content: 'public class PersianCalendar : System.Globalization.Calendar'
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: PersianCalendar()
  nameWithType: PersianCalendar.PersianCalendar()
  fullName: System.Globalization.PersianCalendar.PersianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新实例<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the constructor for the <xref:System.Globalization.PersianCalendar> class.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_0_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_0_1.cs)]"
  syntax:
    content: public PersianCalendar ();
    parameters: []
  overload: System.Globalization.PersianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: PersianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.PersianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回<xref:System.DateTime>对象，该对象偏移指定从指定的月份数<xref:System.DateTime>对象。</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "<xref:System.DateTime.Kind%2A>属性的返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如以下示例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.p_7_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.p_7_1.cs)]"
  example:
  - "The following code example demonstrates the use of the AddMonths method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_7_2.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_7_2.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>向其添加月数。</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "正或负的要添加的月份数。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>对象，表示通过将添加指定的月数所得的日期<code> months </code>参数指定的日期<code> time </code>参数。</xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "生成<xref:System.DateTime>超出支持的范围。</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>小于-120,000 或大于 120,000。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: PersianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.PersianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回<xref:System.DateTime>对象，该对象偏移指定的从指定的年数<xref:System.DateTime>对象。</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "<xref:System.DateTime.Kind%2A>属性的返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如以下示例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.p_11_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.p_11_1.cs)]"
  example:
  - "The following code example demonstrates the use of the AddYears method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_11_2.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_11_2.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>向其添加年。</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "正或负要添加的年数。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>源于将指定的年数添加到指定的对象<xref:System.DateTime>对象。</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "生成<xref:System.DateTime>超出支持的范围。</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>years</code>小于-10000 或大于 10000。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: PersianCalendar.AlgorithmType
  fullName: System.Globalization.PersianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取一个值，该值指示当前日历阳历、 阴历还是二者的组合。"
  remarks: "为特定日历日期计算依赖于日历是阳历、 阴历还是二者的组合。"
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.p_4_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.p_4_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "始终返回<xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>。"
  overload: System.Globalization.PersianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.Eras
  id: Eras
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: PersianCalendar.Eras
  fullName: System.Globalization.PersianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取中的纪元列表<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the Eras property.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/p-system.globalization.p_2_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/p-system.globalization.p_2_1.cs)]"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "表示中的纪元的整数的数组<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>对象。 该数组包含单个元素的值<xref href=&quot;System.Globalization.PersianCalendar.PersianEra&quot;> </xref>。"
  overload: System.Globalization.PersianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: PersianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定的每月天数<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDayOfMonth method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_6_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_6_1.cs)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "从指定的月的某一天表示的 1 到 31 之间的整数<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.GetDayOfMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> time </code>参数表示的日期不超过<> *1> 或大于<> *1>。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: PersianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定的日期是星期几<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDayOfWeek method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_5_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_5_1.cs)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "A<xref:System.DayOfWeek>值，该值表示在指定星期几<xref:System.DateTime>对象。</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.PersianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: PersianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定的年的某一天<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDayOfYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_9_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_9_1.cs)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个介于 1 到 366 之间，用于表示的年份中指定的天<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> time </code>参数表示的日期不超过<> *1> 或大于<> *1>。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: PersianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定月份的指定的年和纪元中的天数。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDaysInMonth method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/b5b297c0-fc11-456b-85ba-_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/b5b297c0-fc11-456b-85ba-_1.cs)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: month
      type: System.Int32
      description: "一个整数，表示的月份和范围从 1 到 12，如果`year`不是 9378，则 1 到 10，如果`year`是 9378，则。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Int32
      description: "在指定月份的指定的年和纪元的天数。"
  overload: System.Globalization.PersianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code><code>month</code>，或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: PersianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元的指定年份中的天数。"
  remarks: ''
  example:
  - "The following code example demonstrates use of the GetDaysInYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_4_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_4_1.cs)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Int32
      description: "指定的纪元年份中天数。 天数为 365，在中为 366 闰年中。"
  overload: System.Globalization.PersianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: PersianCalendar.GetEra(DateTime)
  fullName: System.Globalization.PersianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetEra method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_12_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_12_1.cs)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "始终返回<xref href=&quot;System.Globalization.PersianCalendar.PersianEra&quot;> </xref>。"
  overload: System.Globalization.PersianCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> time </code>参数表示的日期不超过<> *1> 或大于<> *1>。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: PersianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定的年和纪元的闰月。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetLeapMonth method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_2_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_2_1.cs)]"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示要转换的年份的 1 到 9378 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Int32
      description: "返回值始终是 0。"
  overload: System.Globalization.PersianCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: PersianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.PersianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定的月份<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetMonth method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_10_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_10_1.cs)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "表示在指定的月份的 1 到 12 之间的整数<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> time </code>参数表示的日期不超过<> *1> 或大于<> *1>。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: PersianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元的指定年份中的月数。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetMonthsInYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/89929b85-84ab-4e38-8626-_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/89929b85-84ab-4e38-8626-_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Int32
      description: "如果返回 10 <code> year </code>参数为 9378; 否则，始终返回 12。"
  overload: System.Globalization.PersianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: PersianCalendar.GetYear(DateTime)
  fullName: System.Globalization.PersianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回年份中指定<xref:System.DateTime>对象。</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_8_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_8_1.cs)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "指定<xref:System.DateTime>.</xref:System.DateTime>中表示年份的 1 到 9378 之间的整数"
  overload: System.Globalization.PersianCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> time </code>参数表示的日期不超过<> *1> 或大于<> *1>。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: PersianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定的日期是否为闰日。"
  remarks: "闰日是仅在闰年中发生了一天。"
  example:
  - "The following code example demonstrates the use of the IsLeapDay method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/578f5015-6fee-4f17-be31-_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/578f5015-6fee-4f17-be31-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: month
      type: System.Int32
      description: "一个整数，表示月和范围从 1 到 12 如果`year`不是 9378，则 1 到 10，如果`year`是 9378，则。"
    - id: day
      type: System.Int32
      description: "一个表示一天的 1 到 31 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的日期是闰日，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.PersianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code><code>month</code>， <code>day</code>，或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: PersianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定的纪元年份中指定的月份是否为闰月。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the IsLeapMonth method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/5f03e7bc-ffba-416d-8e3a-_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/5f03e7bc-ffba-416d-8e3a-_1.cs)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: month
      type: System.Int32
      description: "一个整数，表示月和范围从 1 到 12 如果`year`不是 9378，则 1 到 10，如果`year`是 9378，则。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>因为<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类不支持闰月这一概念。"
  overload: System.Globalization.PersianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code><code>month</code>，或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: PersianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定纪元中的指定的年份是否为闰年。"
  remarks: "从开始[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]的实现<xref:System.Globalization.PersianCalendar>类已从见习算法更改为回历太阳能算法。</xref:System.Globalization.PersianCalendar> 因此，IsLeapYear 方法可能会返回在上运行时的不同值[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]比以前版本的.NET Framework 上运行时。"
  example:
  - "The following code example demonstrates the use of the IsLeapYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_1_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_1_1.cs)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的年是闰年，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.PersianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: PersianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.PersianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取最新的日期和时间受<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类。"
  remarks: "MaxSupportedDateTime 属性的值是的那一刻年 12 月 31 日公元 9999 年 在公历日历中。 在[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]，此值相当于与波斯历 9378 年 10 月的 13 天。 在以前版本的.NET Framework 中，它相当于与波斯历 9378 年 10 月的第 10 天。 有关详细信息，请参阅&quot;波斯历类和.NET Framework 版本&quot;中<xref:System.Globalization.PersianCalendar>主题。</xref:System.Globalization.PersianCalendar>       公元&9999; 年 相当于 9378 年与波斯历。"
  example:
  - "The following code example demonstrates the use of the MaxSupportedDateTime property.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/p-system.globalization.p_1_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/p-system.globalization.p_1_1.cs)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最新的日期和时间受<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类。 请参阅备注部分以了解更多信息。"
  overload: System.Globalization.PersianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: PersianCalendar.MinSupportedDateTime
  fullName: System.Globalization.PersianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取最早的日期和时间受<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类。"
  remarks: "从开始[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]，MinSupportedDateTime 属性的值等效于公元 622 年 3 月 22 日的那一刻 在公历日历中。 在以前版本的详细信息，NET Framework，它相当于公元 622 年 3 月 21 日的那一刻 在公历日历中。 有关详细信息，请参阅&quot;波斯历类和.NET Framework 版本&quot;中<xref:System.Globalization.PersianCalendar>主题。</xref:System.Globalization.PersianCalendar>       622 公元 等效于与波斯历 0001 年。"
  example:
  - "The following code example demonstrates the use of the MinSupportedDateTime property.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/p-system.globalization.p_3_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/p-system.globalization.p_3_1.cs)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最早的日期和时间受<xref href=&quot;System.Globalization.PersianCalendar&quot;></xref>类。 请参阅备注部分以了解更多信息。"
  overload: System.Globalization.PersianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.PersianEra
  id: PersianEra
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: PersianEra
  nameWithType: PersianCalendar.PersianEra
  fullName: System.Globalization.PersianCalendar.PersianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "表示当前纪元。 此字段为常数。"
  remarks: "PersianEra 的值为 1。"
  example:
  - "The following code example demonstrates the use of the PersianEra property.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/f-system.globalization.p_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/f-system.globalization.p_1.cs)]"
  syntax:
    content: public static readonly int PersianEra;
    return:
      type: System.Int32
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: PersianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回<xref:System.DateTime>对象设置为指定的日期、 时间和纪元。</xref:System.DateTime>"
  remarks: "都传递很有用，因为它可以将当前日历中的任何日期转换为公历日期。 公历日期可以随后用于，例如，比较不同日历中的日期或在特定日历中创建等效的日期。"
  example:
  - "The following code example demonstrates the use of the ToDateTime method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/a09fd379-8dd2-4307-8654-_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/a09fd379-8dd2-4307-8654-_1.cs)]"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示的年份的 1 到 9378 之间的整数。"
    - id: month
      type: System.Int32
      description: "一个表示月份的 1 到 12 之间的整数。"
    - id: day
      type: System.Int32
      description: "一个表示一天的 1 到 31 之间的整数。"
    - id: hour
      type: System.Int32
      description: "一个整数，表示小时的 0 到 23 之间。"
    - id: minute
      type: System.Int32
      description: "表示分钟的 0 到 59 之间的一个整数。"
    - id: second
      type: System.Int32
      description: "一个表示秒的 0 到 59 之间的整数。"
    - id: millisecond
      type: System.Int32
      description: "一个表示毫秒的 0 到 999 之间的整数。"
    - id: era
      type: System.Int32
      description: "一个介于 0 和 1 表示纪元的整数。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>设置为指定的日期和时间当前纪元中的对象。</xref:System.DateTime>"
  overload: System.Globalization.PersianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code><code>month</code>， <code>day</code>， <code>hour</code>， <code>minute</code>， <code>second</code>， <code>millisecond</code>，或<code>era</code>超出了此日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: PersianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.PersianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "将指定的年份转换为四位数年份表示形式。"
  remarks: "此方法将转换`year`四位数年份表示形式中使用的参数<xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A>属性。</xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A> 返回值是允许将两位数年份正确转换为四位数年份的 100 年范围内的上限。 例如，如果 100 年范围是从 1930 到 2029年，然后两位数字值为 30 被解释为 1930 而 29 两位数字值解释为 2029年。       ToFourDigitYear 支持两位数年份或四位数年份。 将两位数年份值 (小于 100) 传递会导致方法的值转换为一个四位数字值根据<xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A> 如果应用程序提供在 ToFourDigitYear 到了受支持的日历的范围内的四位数年份值，该方法将返回实际的输入的值。 如果应用程序提供一个四位数字值超出了支持的日历，或者它提供了负值，则该方法将引发异常。"
  example:
  - "The following code example demonstrates the use of the ToFourDigitYear method.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/m-system.globalization.p_3_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/m-system.globalization.p_3_1.cs)]"
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "一个表示要转换的年份的 1 到 9378 之间的整数。"
    return:
      type: System.Int32
      description: "一个整数，包含的四位数字表示形式<code> year </code>。"
  overload: System.Globalization.PersianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>小于 0 或大于 9378。"
  platform:
  - net462
- uid: System.Globalization.PersianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.PersianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: PersianCalendar.TwoDigitYearMax
  fullName: System.Globalization.PersianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取或设置可以用两位数年份表示的 100 年范围内的最后一年。"
  remarks: "此属性允许两位数年份，要正确转换为 4 位数年份。 例如，如果此属性设置为 2029年，100 年范围是从 1930年为 2029年。 因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。       此属性的初始值源自在控制面板中的区域和语言选项中的设置。 但是，该信息可以更改<xref:System.AppDomain>.</xref:System.AppDomain>的生命周期内 <xref:System.Globalization.PersianCalendar>类不会检测系统设置中的更改自动。</xref:System.Globalization.PersianCalendar> 如果在区域和语言选项不支持这种日历，此属性的初始值是由日历类定义的默认值。       应用程序应将此值设置为 99，以指示按字面解释 2 位数字的年份。 例如，如果此属性设置为 99，100 年范围为 0 （不是有效值对于大多数日历而言） 和 99 之间。 因此，为 30 的 2 位值被解释为 30。"
  example:
  - "The following code example demonstrates the use of the TwoDigitYearMax property.  \n  \n [!code-vb[sys.glob.PersianCal#1](~/add/codesnippet/visualbasic/p-system.globalization.p_0_1.vb)]\n [!code-cs[sys.glob.PersianCal#1](~/add/codesnippet/csharp/p-system.globalization.p_0_1.cs)]"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "可以用两位数年份表示的 100 年范围内的最后一年。"
  overload: System.Globalization.PersianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此日历是只读的。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "在集运算中的值是小于 100 或大于 9378。"
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.PersianCalendar.#ctor
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: PersianCalendar()
  nameWithType: PersianCalendar.PersianCalendar()
  fullName: System.Globalization.PersianCalendar.PersianCalendar()
- uid: System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: PersianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.PersianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: PersianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.PersianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.PersianCalendar.AlgorithmType
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: PersianCalendar.AlgorithmType
  fullName: System.Globalization.PersianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.PersianCalendar.Eras
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: Eras
  nameWithType: PersianCalendar.Eras
  fullName: System.Globalization.PersianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: PersianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: PersianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: PersianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.PersianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: PersianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: PersianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.PersianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: PersianCalendar.GetEra(DateTime)
  fullName: System.Globalization.PersianCalendar.GetEra(DateTime)
- uid: System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: PersianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.PersianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: PersianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.PersianCalendar.GetMonth(DateTime)
- uid: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: PersianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.PersianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: PersianCalendar.GetYear(DateTime)
  fullName: System.Globalization.PersianCalendar.GetYear(DateTime)
- uid: System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: PersianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: PersianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: PersianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.PersianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.PersianCalendar.MaxSupportedDateTime
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: PersianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.PersianCalendar.MaxSupportedDateTime
- uid: System.Globalization.PersianCalendar.MinSupportedDateTime
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: PersianCalendar.MinSupportedDateTime
  fullName: System.Globalization.PersianCalendar.MinSupportedDateTime
- uid: System.Globalization.PersianCalendar.PersianEra
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: PersianEra
  nameWithType: PersianCalendar.PersianEra
  fullName: System.Globalization.PersianCalendar.PersianEra
- uid: System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: PersianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.PersianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: PersianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.PersianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.PersianCalendar.TwoDigitYearMax
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: PersianCalendar.TwoDigitYearMax
  fullName: System.Globalization.PersianCalendar.TwoDigitYearMax
- uid: System.Globalization.PersianCalendar.#ctor*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: PersianCalendar
  nameWithType: PersianCalendar.PersianCalendar
- uid: System.Globalization.PersianCalendar.AddMonths*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: PersianCalendar.AddMonths
- uid: System.Globalization.PersianCalendar.AddYears*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AddYears
  nameWithType: PersianCalendar.AddYears
- uid: System.Globalization.PersianCalendar.AlgorithmType*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: PersianCalendar.AlgorithmType
- uid: System.Globalization.PersianCalendar.Eras*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: Eras
  nameWithType: PersianCalendar.Eras
- uid: System.Globalization.PersianCalendar.GetDayOfMonth*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: PersianCalendar.GetDayOfMonth
- uid: System.Globalization.PersianCalendar.GetDayOfWeek*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: PersianCalendar.GetDayOfWeek
- uid: System.Globalization.PersianCalendar.GetDayOfYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: PersianCalendar.GetDayOfYear
- uid: System.Globalization.PersianCalendar.GetDaysInMonth*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: PersianCalendar.GetDaysInMonth
- uid: System.Globalization.PersianCalendar.GetDaysInYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: PersianCalendar.GetDaysInYear
- uid: System.Globalization.PersianCalendar.GetEra*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetEra
  nameWithType: PersianCalendar.GetEra
- uid: System.Globalization.PersianCalendar.GetLeapMonth*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: PersianCalendar.GetLeapMonth
- uid: System.Globalization.PersianCalendar.GetMonth*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: PersianCalendar.GetMonth
- uid: System.Globalization.PersianCalendar.GetMonthsInYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: PersianCalendar.GetMonthsInYear
- uid: System.Globalization.PersianCalendar.GetYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: GetYear
  nameWithType: PersianCalendar.GetYear
- uid: System.Globalization.PersianCalendar.IsLeapDay*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: PersianCalendar.IsLeapDay
- uid: System.Globalization.PersianCalendar.IsLeapMonth*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: PersianCalendar.IsLeapMonth
- uid: System.Globalization.PersianCalendar.IsLeapYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: PersianCalendar.IsLeapYear
- uid: System.Globalization.PersianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: PersianCalendar.MaxSupportedDateTime
- uid: System.Globalization.PersianCalendar.MinSupportedDateTime*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: PersianCalendar.MinSupportedDateTime
- uid: System.Globalization.PersianCalendar.ToDateTime*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: PersianCalendar.ToDateTime
- uid: System.Globalization.PersianCalendar.ToFourDigitYear*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: PersianCalendar.ToFourDigitYear
- uid: System.Globalization.PersianCalendar.TwoDigitYearMax*
  parent: System.Globalization.PersianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: PersianCalendar.TwoDigitYearMax
