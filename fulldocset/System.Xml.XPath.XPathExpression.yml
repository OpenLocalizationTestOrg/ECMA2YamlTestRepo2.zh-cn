### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.XPathExpression
  id: XPathExpression
  children:
  - System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)
  - System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)
  - System.Xml.XPath.XPathExpression.Clone
  - System.Xml.XPath.XPathExpression.Compile(System.String)
  - System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathExpression.Expression
  - System.Xml.XPath.XPathExpression.ReturnType
  - System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)
  langs:
  - csharp
  name: XPathExpression
  nameWithType: XPathExpression
  fullName: System.Xml.XPath.XPathExpression
  type: Class
  summary: "提供一个类型化的类，表示已编译的 XPath 表达式。"
  remarks: "此类返回作为<xref:System.Xml.XPath.XPathNavigator.Compile%2A><xref:System.Xml.XPath.XPathNavigator>类</xref:System.Xml.XPath.XPathNavigator>的方法</xref:System.Xml.XPath.XPathNavigator.Compile%2A>的结果 它是到参数<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>， <xref:System.Xml.XPath.XPathNavigator.Matches%2A>，<xref:System.Xml.XPath.XPathNavigator.Select%2A>的<xref:System.Xml.XPath.XPathNavigator>类</xref:System.Xml.XPath.XPathNavigator>和<xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法</xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A></xref:System.Xml.XPath.XPathNavigator.Select%2A></xref:System.Xml.XPath.XPathNavigator.Matches%2A></xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>"
  example:
  - "The following example shows how to use the XPath return type to determine how to process the XPath expression.  \n  \n [!code-cs[XPathExpression.ReturnType#1](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_0_1.cs)]\n [!code-cpp[XPathExpression.ReturnType#1](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_0_1.cpp)]\n [!code-vb[XPathExpression.ReturnType#1](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract class XPathExpression
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)
  id: AddSort(System.Object,System.Collections.IComparer)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: AddSort(Object,IComparer)
  nameWithType: XPathExpression.AddSort(Object,IComparer)
  fullName: System.Xml.XPath.XPathExpression.AddSort(Object,IComparer)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，根据指定的 XPath 表达式所选的节点进行排序<xref:System.Collections.IComparer>对象。</xref:System.Collections.IComparer>"
  remarks: "AddSort 方法使用户能够通过而不是其数据类型的对象进行排序的字符串或数字。 <xref:System.Collections.IComparer>对象提供的实现<xref:System.Collections.IComparer.Compare%2A>支持用户定义的类的排序的方法。</xref:System.Collections.IComparer.Compare%2A> </xref:System.Collections.IComparer>       在下面的示例中，丛书按 ISBN 编号，其中`isbn`是一个对象，实现<xref:System.Collections.IComparer>接口。</xref:System.Collections.IComparer>      ```vb#   Dim expression As XPathExpression = navigator.Compile(&quot;bookstore/book&quot;)   Dim isbn As ISBN = New ISBN()   expression.AddSort(&quot;@ISBN&quot;, (IComparer)isbn)   ```      ```c#   XPathExpression expression = navigator.Compile(&quot;bookstore/book&quot;);   ISBN isbn = new ISBN();   expression.AddSort(&quot;@ISBN&quot;, (IComparer)isbn);   ```以下是使用 AddSort 方法时要考虑的重要说明。      -在其中添加排序的顺序提供排序关键字的使用顺序。      -如果<xref:System.Xml.XPath.XPathExpression>或排序键需要命名空间解析，则必须使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法以提供<xref:System.Xml.XmlNamespaceManager>用于命名空间解析。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression.SetContext%2A> </xref:System.Xml.XPath.XPathExpression>      -如果<xref:System.Xml.XPath.XPathExpression>不包括前缀，则假定命名空间统一资源标识符 (URI) 是空的命名空间。</xref:System.Xml.XPath.XPathExpression> 如果 XML 包含默认命名空间，你仍必须使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法并提供<xref:System.Xml.XmlNamespaceManager>，其中包含的前缀和命名空间 URI 以处理默认命名空间。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression.SetContext%2A>"
  syntax:
    content: public abstract void AddSort (object expr, System.Collections.IComparer comparer);
    parameters:
    - id: expr
      type: System.Object
      description: "表示排序键的对象。 这可以是<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>节点的值或<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>具有已编译的 XPath 表达式的对象。"
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>提供用于比较两个对象的相等性的特定数据类型比较的对象。</xref:System.Collections.IComparer>"
  overload: System.Xml.XPath.XPathExpression.AddSort*
  exceptions:
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>或排序关键字包括前缀，<xref:System.Xml.XmlNamespaceManager>未提供，或在提供<xref:System.Xml.XmlNamespaceManager>。</xref:System.Xml.XmlNamespaceManager>中找不到前缀</xref:System.Xml.XmlNamespaceManager>"
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)
  id: AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
  nameWithType: XPathExpression.AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
  fullName: System.Xml.XPath.XPathExpression.AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，根据提供的参数对 XPath 表达式所选的节点进行排序。"
  remarks: "-   添加排序的顺序提供排序关键字的使用顺序。      -如果<xref:System.Xml.XPath.XPathExpression>或排序键需要命名空间解析，则必须使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法以提供<xref:System.Xml.XmlNamespaceManager>用于命名空间解析。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression.SetContext%2A> </xref:System.Xml.XPath.XPathExpression>      -如果<xref:System.Xml.XPath.XPathExpression>不包括前缀，则假定命名空间统一资源标识符 (URI) 是空的命名空间。</xref:System.Xml.XPath.XPathExpression> 如果 XML 包含默认命名空间，你仍必须使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法并提供<xref:System.Xml.XmlNamespaceManager>，其中包含的前缀和命名空间 URI 以处理默认命名空间。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression.SetContext%2A>"
  example:
  - "The following example shows how to sort the books document by price in descending order.  \n  \n [!code-vb[XPathXMLExamples#4](~/add/codesnippet/visualbasic/018cc22b-ec54-467d-9a7f-_1.vb)]  \n  \n [!code-cs[XPathXMLExamples#5](~/add/codesnippet/csharp/018cc22b-ec54-467d-9a7f-_2.cs)]  \n  \n The example takes the `books.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract void AddSort (object expr, System.Xml.XPath.XmlSortOrder order, System.Xml.XPath.XmlCaseOrder caseOrder, string lang, System.Xml.XPath.XmlDataType dataType);
    parameters:
    - id: expr
      type: System.Object
      description: "表示排序键的对象。 这可以是<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>节点的值或<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>具有已编译的 XPath 表达式的对象。"
    - id: order
      type: System.Xml.XPath.XmlSortOrder
      description: "<xref href=&quot;System.Xml.XPath.XmlSortOrder&quot;> </xref>值，该值指示排序顺序。"
    - id: caseOrder
      type: System.Xml.XPath.XmlCaseOrder
      description: "<xref href=&quot;System.Xml.XPath.XmlCaseOrder&quot;> </xref>值，该值指示如何进行排序大写和小写字母。"
    - id: lang
      type: System.String
      description: "要用于比较的语言。 使用<xref:System.Globalization.CultureInfo>类，可以传递到<xref:System.String.Compare*>语言类型，例如，&quot;美式英语适用于美国方法</xref:System.String.Compare*></xref:System.Globalization.CultureInfo>英语。 如果指定一个空字符串，用于确定<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>系统环境"
    - id: dataType
      type: System.Xml.XPath.XmlDataType
      description: "<xref href=&quot;System.Xml.XPath.XmlDataType&quot;> </xref>值，该值指示数据类型的排序顺序。"
  overload: System.Xml.XPath.XPathExpression.AddSort*
  exceptions:
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>或排序关键字包括前缀，<xref:System.Xml.XmlNamespaceManager>未提供，或在提供<xref:System.Xml.XmlNamespaceManager>。</xref:System.Xml.XmlNamespaceManager>中找不到前缀</xref:System.Xml.XmlNamespaceManager>"
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.Clone
  id: Clone
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: Clone()
  nameWithType: XPathExpression.Clone()
  fullName: System.Xml.XPath.XPathExpression.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，返回此克隆<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>。"
  remarks: "当在派生类中重写，克隆方法会返回此克隆<xref:System.Xml.XPath.XPathExpression>具有与此相同的状态对象<xref:System.Xml.XPath.XPathExpression>对象。</xref:System.Xml.XPath.XPathExpression> </xref:System.Xml.XPath.XPathExpression>"
  syntax:
    content: public abstract System.Xml.XPath.XPathExpression Clone ();
    parameters: []
    return:
      type: System.Xml.XPath.XPathExpression
      description: "一个新<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>对象。"
  overload: System.Xml.XPath.XPathExpression.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.Compile(System.String)
  id: Compile(System.String)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: Compile(String)
  nameWithType: XPathExpression.Compile(String)
  fullName: System.Xml.XPath.XPathExpression.Compile(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "编译指定的 XPath 表达式并返回<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>表示 XPath 表达式的对象。"
  remarks: "XPath 表达式进行计算以产生以下结果类型之一。      - <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>1> [!NOTE]&1;> 如果 XPath 表达式中指定用户定义函数与无效数量的自变量 （或未实现的用户定义函数），则仅在运行时中发生异常。</xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> 在编译时不检查用户定义的函数和用户定义函数因异常时执行计算的表达式时，才发生。"
  example:
  - "The following example shows how to use the XPath return type to determine how to process the XPath expression. The example uses the Compile method to return the new <xref:System.Xml.XPath.XPathExpression> objects.  \n  \n [!code-cs[XPathExpression.ReturnType#1](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_24_1.cs)]\n [!code-cpp[XPathExpression.ReturnType#1](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_24_1.cpp)]\n [!code-vb[XPathExpression.ReturnType#1](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_24_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public static System.Xml.XPath.XPathExpression Compile (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "XPath 表达式。"
    return:
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>对象。"
  overload: System.Xml.XPath.XPathExpression.Compile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 表达式参数不是有效的 XPath 表达式。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 表达式不是有效的。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)
  id: Compile(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: Compile(String,IXmlNamespaceResolver)
  nameWithType: XPathExpression.Compile(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathExpression.Compile(String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "使用编译指定的 XPath 表达式，<xref:System.Xml.IXmlNamespaceResolver>对象指定的命名空间解析，并返回用于<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>表示 XPath 表达式的对象。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "XPath 表达式进行计算以产生以下结果类型之一。      - <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>- <xref:System.Xml.XPath.XPathResultType>1> [!NOTE]&1;> 仅在运行时在 XPath 表达式中指定与无效数量的自变量 （或未实现的用户定义函数），则如果发生异常。</xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> </xref:System.Xml.XPath.XPathResultType> 在编译时不检查用户定义的函数和用户定义函数导致的异常时执行计算的表达式时，才发生。      1> [!NOTE]&1;> 不能编译<xref:System.Xml.XPath.XPathExpression>通过传递的一个步骤中的自定义上下文<xref:System.Xml.Xsl.XsltContext>，该类实现<xref:System.Xml.IXmlNamespaceResolver>，作为此方法的自变量。</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.Xsl.XsltContext> </xref:System.Xml.XPath.XPathExpression> 若要使用<xref:System.Xml.XPath.XPathExpression>与自定义上下文，必须调用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法之后编译表达式。</xref:System.Xml.XPath.XPathExpression.SetContext%2A> </xref:System.Xml.XPath.XPathExpression>"
  syntax:
    content: public static System.Xml.XPath.XPathExpression Compile (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: xpath
      type: System.String
      description: "XPath 表达式。"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "实现的对象<xref:System.Xml.IXmlNamespaceResolver>命名空间解析的接口。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>对象。"
  overload: System.Xml.XPath.XPathExpression.Compile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 表达式参数不是有效的 XPath 表达式。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 表达式不是有效的。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.Expression
  id: Expression
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: Expression
  nameWithType: XPathExpression.Expression
  fullName: System.Xml.XPath.XPathExpression.Expression
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>表示形式<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>。"
  syntax:
    content: public abstract string Expression { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>表示形式<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>。"
  overload: System.Xml.XPath.XPathExpression.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.ReturnType
  id: ReturnType
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: ReturnType
  nameWithType: XPathExpression.ReturnType
  fullName: System.Xml.XPath.XPathExpression.ReturnType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取 XPath 表达式的结果类型。"
  remarks: ''
  example:
  - "The following example shows how to use the XPath return type to determine how to process the XPath expression.  \n  \n [!code-cs[XPathExpression.ReturnType#1](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_3_1.cs)]\n [!code-cpp[XPathExpression.ReturnType#1](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_3_1.cpp)]\n [!code-vb[XPathExpression.ReturnType#1](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_3_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract System.Xml.XPath.XPathResultType ReturnType { get; }
    return:
      type: System.Xml.XPath.XPathResultType
      description: "<xref href=&quot;System.Xml.XPath.XPathResultType&quot;> </xref>值，该值表示 XPath 表达式的结果类型。"
  overload: System.Xml.XPath.XPathExpression.ReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)
  id: SetContext(System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: SetContext(IXmlNamespaceResolver)
  nameWithType: XPathExpression.SetContext(IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathExpression.SetContext(IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，指定<xref:System.Xml.IXmlNamespaceResolver>对象要用于命名空间解析。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "使用实现<xref:System.Xml.IXmlNamespaceResolver>接口，如<xref:System.Xml.XmlNamespaceManager>类</xref:System.Xml.XmlNamespaceManager></xref:System.Xml.IXmlNamespaceResolver>的类支持 Namespace 解析 <xref:System.Xml.XmlNamespaceManager>存储前缀和命名空间统一资源标识符 (URI) 的映射。</xref:System.Xml.XmlNamespaceManager> 如果<xref:System.Xml.XPath.XPathExpression>需要命名空间解析，前缀和命名空间 URI 对必须添加到对象，如<xref:System.Xml.XmlNamespaceManager>类，该类实现<xref:System.Xml.IXmlNamespaceResolver>必须调用接口，并且 SetContext 方法以指定<xref:System.Xml.IXmlNamespaceResolver>接口对象要用于命名空间解析。</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression>       以下是使用 SetContext 方法时要考虑的重要说明。      -如果<xref:System.Xml.XPath.XPathExpression>不包括前缀，则假定命名空间 URI 是空的命名空间。</xref:System.Xml.XPath.XPathExpression> 如果 XML 包含默认命名空间，仍必须使用 SetContext 方法中，并提供一个对象，包含的前缀和命名空间 URI 以处理默认命名空间中。      -你也可以提供<xref:System.Xml.IXmlNamespaceResolver>到命名空间解析的接口对象<xref:System.Xml.XPath.XPathExpression.Compile%2A>方法创建时你<xref:System.Xml.XPath.XPathExpression>对象。</xref:System.Xml.XPath.XPathExpression> </xref:System.Xml.XPath.XPathExpression.Compile%2A> </xref:System.Xml.IXmlNamespaceResolver>      -SetContext 接受<xref:System.Xml.Xsl.XsltContext>为命名空间解析程序，因此可以实现自定义上下文，并使用函数和变量基于<xref:System.Xml.Xsl.IXsltContextFunction>和<xref:System.Xml.Xsl.IXsltContextVariable>.</xref:System.Xml.Xsl.IXsltContextVariable> </xref:System.Xml.Xsl.IXsltContextFunction> </xref:System.Xml.Xsl.XsltContext> XPath 表达式将执行它们。 有关详细信息，请参阅[用户定义函数和变量](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to use the XPath return type to determine how to process the XPath expression, and how to use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method to provide an <xref:System.Xml.XmlNamespaceManager> object for namespace resolution.  \n  \n [!code-cs[XPathExpression.ReturnType#1](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_26_1.cs)]\n [!code-cpp[XPathExpression.ReturnType#1](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_26_1.cpp)]\n [!code-vb[XPathExpression.ReturnType#1](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_26_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract void SetContext (System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "实现的对象<xref:System.Xml.IXmlNamespaceResolver>接口以用于命名空间解析。</xref:System.Xml.IXmlNamespaceResolver>"
  overload: System.Xml.XPath.XPathExpression.SetContext*
  exceptions:
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "<xref:System.Xml.IXmlNamespaceResolver>对象参数不被派生自<xref:System.Xml.IXmlNamespaceResolver>.</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.IXmlNamespaceResolver>"
  platform:
  - net462
- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)
  id: SetContext(System.Xml.XmlNamespaceManager)
  parent: System.Xml.XPath.XPathExpression
  langs:
  - csharp
  name: SetContext(XmlNamespaceManager)
  nameWithType: XPathExpression.SetContext(XmlNamespaceManager)
  fullName: System.Xml.XPath.XPathExpression.SetContext(XmlNamespaceManager)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，指定<xref:System.Xml.XmlNamespaceManager>对象要用于命名空间解析。</xref:System.Xml.XmlNamespaceManager>"
  remarks: "使用支持 Namespace 解析<xref:System.Xml.XmlNamespaceManager>存储前缀和命名空间统一资源标识符 (URI) 映射的类。</xref:System.Xml.XmlNamespaceManager> 如果<xref:System.Xml.XPath.XPathExpression>需要命名空间解析，前缀和命名空间 URI 对必须添加到<xref:System.Xml.XmlNamespaceManager>必须调用对象和 SetContext 方法以指定<xref:System.Xml.XmlNamespaceManager>对象要用于命名空间解析。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XPath.XPathExpression>       以下是使用 SetContext 方法时要考虑的重要说明。      -如果<xref:System.Xml.XPath.XPathExpression>不包括前缀，则假定命名空间 URI 是空的命名空间。</xref:System.Xml.XPath.XPathExpression> 如果 XML 包含默认命名空间，你仍必须使用 SetContext 方法并且提供<xref:System.Xml.XmlNamespaceManager>对象，其中包含的前缀和命名空间 URI 以处理默认命名空间。</xref:System.Xml.XmlNamespaceManager>      -你也可以提供<xref:System.Xml.IXmlNamespaceResolver>到命名空间解析的对象<xref:System.Xml.XPath.XPathExpression.Compile%2A>方法创建时你<xref:System.Xml.XPath.XPathExpression>对象。</xref:System.Xml.XPath.XPathExpression> </xref:System.Xml.XPath.XPathExpression.Compile%2A> </xref:System.Xml.IXmlNamespaceResolver>      -<xref:System.Xml.XPath.XPathExpression.SetContext%2A>接受<xref:System.Xml.Xsl.XsltContext>为命名空间解析程序，因此可以实现自定义上下文，并使用函数和变量基于<xref:System.Xml.Xsl.IXsltContextFunction>和<xref:System.Xml.Xsl.IXsltContextVariable>.</xref:System.Xml.Xsl.IXsltContextVariable> </xref:System.Xml.Xsl.IXsltContextFunction> </xref:System.Xml.Xsl.XsltContext> </xref:System.Xml.XPath.XPathExpression.SetContext%2A> XPath 表达式将执行它们。 有关详细信息，请参阅[用户定义函数和变量](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to use the XPath return type to determine how to process the XPath expression, and how to use the SetContext method to provide an <xref:System.Xml.XmlNamespaceManager> object for namespace resolution.  \n  \n [!code-cs[XPathExpression.ReturnType#1](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_39_1.cs)]\n [!code-cpp[XPathExpression.ReturnType#1](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_39_1.cpp)]\n [!code-vb[XPathExpression.ReturnType#1](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_39_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract void SetContext (System.Xml.XmlNamespaceManager nsManager);
    parameters:
    - id: nsManager
      type: System.Xml.XmlNamespaceManager
      description: "<xref:System.Xml.XmlNamespaceManager>对象要用于命名空间解析。</xref:System.Xml.XmlNamespaceManager>"
  overload: System.Xml.XPath.XPathExpression.SetContext*
  exceptions:
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "<xref:System.Xml.XmlNamespaceManager>对象参数不被派生自<xref:System.Xml.XmlNamespaceManager>类。</xref:System.Xml.XmlNamespaceManager> </xref:System.Xml.XmlNamespaceManager>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XPath.XPathException
  parent: System.Xml.XPath
  isExternal: false
  name: XPathException
  nameWithType: XPathException
  fullName: System.Xml.XPath.XPathException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: AddSort(Object,IComparer)
  nameWithType: XPathExpression.AddSort(Object,IComparer)
  fullName: System.Xml.XPath.XPathExpression.AddSort(Object,IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
  nameWithType: XPathExpression.AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
  fullName: System.Xml.XPath.XPathExpression.AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
- uid: System.Xml.XPath.XmlSortOrder
  parent: System.Xml.XPath
  isExternal: false
  name: XmlSortOrder
  nameWithType: XmlSortOrder
  fullName: System.Xml.XPath.XmlSortOrder
- uid: System.Xml.XPath.XmlCaseOrder
  parent: System.Xml.XPath
  isExternal: false
  name: XmlCaseOrder
  nameWithType: XmlCaseOrder
  fullName: System.Xml.XPath.XmlCaseOrder
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XPath.XmlDataType
  parent: System.Xml.XPath
  isExternal: false
  name: XmlDataType
  nameWithType: XmlDataType
  fullName: System.Xml.XPath.XmlDataType
- uid: System.Xml.XPath.XPathExpression.Clone
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Clone()
  nameWithType: XPathExpression.Clone()
  fullName: System.Xml.XPath.XPathExpression.Clone()
- uid: System.Xml.XPath.XPathExpression
  parent: System.Xml.XPath
  isExternal: false
  name: XPathExpression
  nameWithType: XPathExpression
  fullName: System.Xml.XPath.XPathExpression
- uid: System.Xml.XPath.XPathExpression.Compile(System.String)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Compile(String)
  nameWithType: XPathExpression.Compile(String)
  fullName: System.Xml.XPath.XPathExpression.Compile(String)
- uid: System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Compile(String,IXmlNamespaceResolver)
  nameWithType: XPathExpression.Compile(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathExpression.Compile(String,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XPath.XPathExpression.Expression
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Expression
  nameWithType: XPathExpression.Expression
  fullName: System.Xml.XPath.XPathExpression.Expression
- uid: System.Xml.XPath.XPathExpression.ReturnType
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: ReturnType
  nameWithType: XPathExpression.ReturnType
  fullName: System.Xml.XPath.XPathExpression.ReturnType
- uid: System.Xml.XPath.XPathResultType
  parent: System.Xml.XPath
  isExternal: false
  name: XPathResultType
  nameWithType: XPathResultType
  fullName: System.Xml.XPath.XPathResultType
- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: SetContext(IXmlNamespaceResolver)
  nameWithType: XPathExpression.SetContext(IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathExpression.SetContext(IXmlNamespaceResolver)
- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: SetContext(XmlNamespaceManager)
  nameWithType: XPathExpression.SetContext(XmlNamespaceManager)
  fullName: System.Xml.XPath.XPathExpression.SetContext(XmlNamespaceManager)
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Xml.XPath.XPathExpression.AddSort*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: AddSort
  nameWithType: XPathExpression.AddSort
- uid: System.Xml.XPath.XPathExpression.Clone*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Clone
  nameWithType: XPathExpression.Clone
- uid: System.Xml.XPath.XPathExpression.Compile*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Compile
  nameWithType: XPathExpression.Compile
- uid: System.Xml.XPath.XPathExpression.Expression*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: Expression
  nameWithType: XPathExpression.Expression
- uid: System.Xml.XPath.XPathExpression.ReturnType*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: ReturnType
  nameWithType: XPathExpression.ReturnType
- uid: System.Xml.XPath.XPathExpression.SetContext*
  parent: System.Xml.XPath.XPathExpression
  isExternal: false
  name: SetContext
  nameWithType: XPathExpression.SetContext
