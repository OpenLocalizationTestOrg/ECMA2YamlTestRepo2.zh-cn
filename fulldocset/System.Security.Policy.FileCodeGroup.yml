### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.FileCodeGroup
  id: FileCodeGroup
  children:
  - System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)
  - System.Security.Policy.FileCodeGroup.AttributeString
  - System.Security.Policy.FileCodeGroup.Copy
  - System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.FileCodeGroup.Equals(System.Object)
  - System.Security.Policy.FileCodeGroup.GetHashCode
  - System.Security.Policy.FileCodeGroup.MergeLogic
  - System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.FileCodeGroup.PermissionSetName
  - System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: FileCodeGroup
  nameWithType: FileCodeGroup
  fullName: System.Security.Policy.FileCodeGroup
  type: Class
  summary: "授予操作中对匹配的成员资格条件的代码程序集的代码程序集的文件的权限。 此类不能被继承。"
  remarks: "代码组是代码访问安全性策略的构建基块。 每个策略级别包含可以有子代码组的根代码组。 每个子代码组可以具有它们自己的子代码组;此行为扩展到任意数量的级别，从而形成一个树。 每个代码组有一个确定是否给定的程序集属于基于该程序集的证据的成员资格条件。 其成员资格条件匹配给定的程序集的唯一代码组和它们的子代码组应用策略。       FileCodeGroup 具有为<xref:System.Security.Policy.UnionCodeGroup>。</xref:System.Security.Policy.UnionCodeGroup>相同的子匹配语义 但是，FileCodeGroup 返回到从中运行代码; 的目录中包含动态计算<xref:System.Security.Permissions.FileIOPermission>授予文件访问的权限集<xref:System.Security.Policy.UnionCodeGroup>仅返回一个静态的权限集。</xref:System.Security.Policy.UnionCodeGroup> </xref:System.Security.Permissions.FileIOPermission> 文件访问权限授予的类型作为参数传递给构造函数。       此代码组仅匹配运行通过文件协议，即，具有指向文件或 UNC 路径的 Url 的程序集的程序集。"
  example:
  - "The following example shows the use of members of the FileCodeGroup class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#1](~/add/codesnippet/cpp/t-system.security.policy_4_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#1](~/add/codesnippet/csharp/t-system.security.policy_4_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#1](~/add/codesnippet/visualbasic/t-system.security.policy_4_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)
  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)'
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
  nameWithType: FileCodeGroup.FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
  fullName: System.Security.Policy.FileCodeGroup.FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新实例<xref href=&quot;System.Security.Policy.FileCodeGroup&quot;></xref>类。"
  remarks: "此构造函数创建的基本代码组。 可以使用添加子代码组<xref:System.Security.Policy.CodeGroup.AddChild%2A>方法。</xref:System.Security.Policy.CodeGroup.AddChild%2A>       <xref:System.Security.Policy.FileCodeGroup>返回包含动态计算的权限集<xref:System.Security.Permissions.FileIOPermission>授予文件访问权限从中运行代码的目录。</xref:System.Security.Permissions.FileIOPermission></xref:System.Security.Policy.FileCodeGroup> 授予的访问的类型由`access`参数。"
  example:
  - "The following code shows the use of the FileCodeGroup constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#2](~/add/codesnippet/cpp/eda2e720-d916-4448-957f-_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#2](~/add/codesnippet/csharp/eda2e720-d916-4448-957f-_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#2](~/add/codesnippet/visualbasic/eda2e720-d916-4448-957f-_1.vb)]"
  syntax:
    content: public FileCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Permissions.FileIOPermissionAccess access);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "测试以确定此代码组是否应用策略的证据成员资格条件。"
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "之一<xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;></xref>值。 此值用于构造<xref href=&quot;System.Security.Permissions.FileIOPermission&quot;></xref>所授予。"
  overload: System.Security.Policy.FileCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "一种<code> membershipCondition </code>参数无效。       -的一种<code> access </code>参数无效。"
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: FileCodeGroup.AttributeString
  fullName: System.Security.Policy.FileCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取的字符串表示形式的代码组的策略语句的属性。"
  remarks: "<xref:System.Security.Policy.FileCodeGroup>不使用 AttributeString，因此此属性始终是`null`。</xref:System.Security.Policy.FileCodeGroup>"
  example:
  - "The following code shows the use of the AttributeString property to get the attributes for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#5](~/add/codesnippet/cpp/p-system.security.policy_14_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#5](~/add/codesnippet/csharp/p-system.security.policy_14_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#5](~/add/codesnippet/visualbasic/p-system.security.policy_14_1.vb)]"
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.FileCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: FileCodeGroup.Copy()
  fullName: System.Security.Policy.FileCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "生成当前代码组的深层副本。"
  remarks: "此方法使代码组的深层副本，使还进行代码组所包含的所有对象的副本。"
  example:
  - "The following code shows the use of the Copy method to make a deep copy of the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#18](~/add/codesnippet/cpp/m-system.security.policy_29_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#18](~/add/codesnippet/csharp/m-system.security.policy_29_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#18](~/add/codesnippet/visualbasic/m-system.security.policy_29_1.vb)]"
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "当前代码组，包括其成员资格条件和子代码组等效副本。"
  overload: System.Security.Policy.FileCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: FileCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.FileCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "要添加。"
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "要添加。"
  overload: System.Security.Policy.FileCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FileCodeGroup.Equals(Object)
  fullName: System.Security.Policy.FileCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "确定指定的代码组是否等效于当前代码组。"
  remarks: ''
  example:
  - "The following code shows the use of the Equals method to determine if two code groups are equal. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#20](~/add/codesnippet/cpp/m-system.security.policy_23_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#20](~/add/codesnippet/csharp/m-system.security.policy_23_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#20](~/add/codesnippet/visualbasic/m-system.security.policy_23_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要与当前代码组进行比较的代码组。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的代码组等效于当前代码组;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.FileCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FileCodeGroup.GetHashCode()
  fullName: System.Security.Policy.FileCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取当前代码组的哈希代码。"
  remarks: ''
  example:
  - "The following code shows the use of the GetHashCode method to get the hash code of the current code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#14](~/add/codesnippet/cpp/m-system.security.policy_28_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#14](~/add/codesnippet/csharp/m-system.security.policy_28_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#14](~/add/codesnippet/visualbasic/m-system.security.policy_28_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前代码组的哈希代码。"
  overload: System.Security.Policy.FileCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: FileCodeGroup.MergeLogic
  fullName: System.Security.Policy.FileCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取合并逻辑。"
  remarks: ''
  example:
  - "The following code shows the use of the MergeLogic property to get the merge logic for this code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#15](~/add/codesnippet/cpp/p-system.security.policy_4_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#15](~/add/codesnippet/csharp/p-system.security.policy_4_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#15](~/add/codesnippet/visualbasic/p-system.security.policy_4_1.vb)]"
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "字符串&quot;联合&quot;。"
  overload: System.Security.Policy.FileCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: FileCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.FileCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "要添加。"
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "要添加。"
  overload: System.Security.Policy.FileCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: FileCodeGroup.PermissionSetName
  fullName: System.Security.Policy.FileCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "代码组获取的命名的权限集的名称。"
  remarks: ''
  example:
  - "The following code shows the use of the PermissionSetName property to get the name of the named permission set for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#13](~/add/codesnippet/cpp/p-system.security.policy_6_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#13](~/add/codesnippet/csharp/p-system.security.policy_6_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#13](~/add/codesnippet/visualbasic/p-system.security.policy_6_1.vb)]"
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "字符串&quot;相同 directory FileIO-&quot;concatenatation 和访问类型。"
  overload: System.Security.Policy.FileCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: FileCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.FileCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "代码组的策略以及及其子代的证据集的解析。"
  remarks: "给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。 如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。       .NET Framework 安全系统使用的策略级别上的解析，来确定要从生成的策略语句和程序集上的代码请求为加载代码授予哪些权限。       <xref:System.Security.Policy.FileCodeGroup>窗体基于的权限集和使用联合语义<xref:System.Security.Policy.Url>指定的`evidence`。</xref:System.Security.Policy.Url></xref:System.Security.Policy.FileCodeGroup>"
  example:
  - "The following code shows the use of the Resolve method to resolve policy for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#19](~/add/codesnippet/cpp/m-system.security.policy_18_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#19](~/add/codesnippet/csharp/m-system.security.policy_18_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#19](~/add/codesnippet/visualbasic/m-system.security.policy_18_1.vb)]"
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "程序集的证据。"
    return:
      type: System.Security.Policy.PolicyStatement
      description: "包含具有可选属性的代码组授予的权限的策略语句或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果代码组不适用 （成员资格条件不匹配指定的证据）。"
  overload: System.Security.Policy.FileCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "当前的策略是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       -或-标记 （包括父代码组和所有子代码组） 的多个代码组<xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FileCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "解析匹配的代码组。"
  remarks: "给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。 如果没有匹配项，则此方法返回的根代码组。 返回的代码组包含子代码组，因而也就可以有子代码组，根据需要以反映由提供的证据相匹配的代码组的完整集合。       <xref:System.Security.Policy.FileCodeGroup>窗体基于的权限集和使用联合语义<xref:System.Security.Policy.Url>指定的`evidence`。</xref:System.Security.Policy.Url></xref:System.Security.Policy.FileCodeGroup>"
  example:
  - "The following code shows the use of the ResolveMatchingCodeGroups method to resolve matching code groups. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#9](~/add/codesnippet/cpp/32f9a6fa-fac5-452b-b486-_1.cpp)]\n [!code-cs[System.Security.Policy.FileCodeGroup_Evt#9](~/add/codesnippet/csharp/32f9a6fa-fac5-452b-b486-_1.cs)]\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#9](~/add/codesnippet/visualbasic/32f9a6fa-fac5-452b-b486-_1.vb)]"
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "程序集的证据。"
    return:
      type: System.Security.Policy.CodeGroup
      description: "A <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> ，它是匹配的代码组的树的根。"
  overload: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
  nameWithType: FileCodeGroup.FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
  fullName: System.Security.Policy.FileCodeGroup.FileCodeGroup(IMembershipCondition,FileIOPermissionAccess)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Policy.FileCodeGroup.AttributeString
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: FileCodeGroup.AttributeString
  fullName: System.Security.Policy.FileCodeGroup.AttributeString
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.FileCodeGroup.Copy
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: FileCodeGroup.Copy()
  fullName: System.Security.Policy.FileCodeGroup.Copy()
- uid: System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: FileCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.FileCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.FileCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: FileCodeGroup.Equals(Object)
  fullName: System.Security.Policy.FileCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.FileCodeGroup.GetHashCode
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: FileCodeGroup.GetHashCode()
  fullName: System.Security.Policy.FileCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.FileCodeGroup.MergeLogic
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: FileCodeGroup.MergeLogic
  fullName: System.Security.Policy.FileCodeGroup.MergeLogic
- uid: System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: FileCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.FileCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.FileCodeGroup.PermissionSetName
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: FileCodeGroup.PermissionSetName
  fullName: System.Security.Policy.FileCodeGroup.PermissionSetName
- uid: System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: FileCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.FileCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.FileCodeGroup.#ctor*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: FileCodeGroup
  nameWithType: FileCodeGroup.FileCodeGroup
- uid: System.Security.Policy.FileCodeGroup.AttributeString*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: FileCodeGroup.AttributeString
- uid: System.Security.Policy.FileCodeGroup.Copy*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Copy
  nameWithType: FileCodeGroup.Copy
- uid: System.Security.Policy.FileCodeGroup.CreateXml*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: FileCodeGroup.CreateXml
- uid: System.Security.Policy.FileCodeGroup.Equals*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Equals
  nameWithType: FileCodeGroup.Equals
- uid: System.Security.Policy.FileCodeGroup.GetHashCode*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: FileCodeGroup.GetHashCode
- uid: System.Security.Policy.FileCodeGroup.MergeLogic*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: FileCodeGroup.MergeLogic
- uid: System.Security.Policy.FileCodeGroup.ParseXml*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: FileCodeGroup.ParseXml
- uid: System.Security.Policy.FileCodeGroup.PermissionSetName*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: FileCodeGroup.PermissionSetName
- uid: System.Security.Policy.FileCodeGroup.Resolve*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: FileCodeGroup.Resolve
- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.FileCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups
