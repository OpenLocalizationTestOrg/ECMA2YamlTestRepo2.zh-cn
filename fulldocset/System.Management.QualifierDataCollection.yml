### YamlMime:ManagedReference
items:
- uid: System.Management.QualifierDataCollection
  id: QualifierDataCollection
  children:
  - System.Management.QualifierDataCollection.Add(System.String,System.Object)
  - System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  - System.Management.QualifierDataCollection.Count
  - System.Management.QualifierDataCollection.GetEnumerator
  - System.Management.QualifierDataCollection.IsSynchronized
  - System.Management.QualifierDataCollection.Item(System.String)
  - System.Management.QualifierDataCollection.Remove(System.String)
  - System.Management.QualifierDataCollection.SyncRoot
  - System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: QualifierDataCollection
  nameWithType: QualifierDataCollection
  fullName: System.Management.QualifierDataCollection
  type: Class
  summary: "表示一套<xref href=&quot;System.Management.QualifierData&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following example lists qualifier information about the **Win32_Service** class using the <xref:System.Management.QualifierData> class. For more information about **Win32_Service**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_QualifierDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.qual_0_1.vb)]\n [!code-cs[wminet_QualifierDataCollection#1](~/add/codesnippet/csharp/t-system.management.qual_0_1.cs)]"
  syntax:
    content: 'public class QualifierDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: QualifierDataCollection.Add(String,Object)
  fullName: System.Management.QualifierDataCollection.Add(String,Object)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.QualifierData&quot;></xref> to the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>. 此重载指定限定符名称和值。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void Add (string qualifierName, object qualifierValue);
    parameters:
    - id: qualifierName
      type: System.String
      description: "名称<xref href=&quot;System.Management.QualifierData&quot;></xref>要添加到<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
    - id: qualifierValue
      type: System.Object
      description: "新限定符值。"
  overload: System.Management.QualifierDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  nameWithType: QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Management.QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.QualifierData&quot;></xref> to the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>. 此重载指定的所有属性值<xref href=&quot;System.Management.QualifierData&quot;> </xref>。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void Add (string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);
    parameters:
    - id: qualifierName
      type: System.String
      description: "限定符名称中。"
    - id: qualifierValue
      type: System.Object
      description: "限定符的值。"
    - id: isAmended
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定此限定符已修正 (`flavor`); 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: propagatesToInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要传播到实例; 此限定符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: propagatesToSubclass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要传播到子类; 此限定符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isOverridable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定此限定符的值是可重写子类; 的实例中否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Management.QualifierDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: QualifierDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "副本<xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>到一个数组。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "要将复制到数组<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "从其开始复制的索引。"
  overload: System.Management.QualifierDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  id: CopyTo(System.Management.QualifierData[],System.Int32)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: CopyTo(QualifierData[],Int32)
  nameWithType: QualifierDataCollection.CopyTo(QualifierData[],Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(QualifierData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "副本<xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>到一个专用<xref href=&quot;System.Management.QualifierData&quot;></xref>数组。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void CopyTo (System.Management.QualifierData[] qualifierArray, int index);
    parameters:
    - id: qualifierArray
      type: System.Management.QualifierData[]
      description: "专用的数组<xref href=&quot;System.Management.QualifierData&quot;></xref>要将复制到的对象<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "从其开始复制的索引。"
  overload: System.Management.QualifierDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Count
  id: Count
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: QualifierDataCollection.Count
  fullName: System.Management.QualifierDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取数<xref href=&quot;System.Management.QualifierData&quot;></xref>中的对象<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
  remarks: "##属性值集合中的对象的数。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "返回<xref:System.Int32>值，该值表示在集合中的对象的数目。</xref:System.Int32>"
  overload: System.Management.QualifierDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: QualifierDataCollection.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回的枚举数<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。 此方法是强类型。"
  remarks: "仅可以循环 (如 Visual Basic.NET 中所示`For Each`语句或 C#`For`语句) 通过一个只进的枚举一次。 WMI 会释放包含这些实例的内存，以使无法回退枚举数。 因此，<xref:System.Management.QualifierDataCollection.Count%2A>方法不能使用，因为它要求不用倒带枚举数。</xref:System.Management.QualifierDataCollection.Count%2A>       只进的枚举器通常速度更快，并使用的内存少于传统枚举器，但它们不允许对<xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>.</xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>调用       如果枚举数就可倒回，集合中的对象将保留可用于多个枚举。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Management.QualifierDataCollection.QualifierDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.QualifierDataCollection.QualifierDataEnumerator
      description: "<xref:System.Collections.IEnumerator>可用于循环访问集合。</xref:System.Collections.IEnumerator>"
  overload: System.Management.QualifierDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
  fullName: System.Management.QualifierDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取一个值，该值指示是否同步对象。"
  remarks: "##属性值`true`的对象是否已同步; 否则为`false`。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "返回<xref:System.Boolean>值，该值指示对象是否已同步。</xref:System.Boolean>"
  overload: System.Management.QualifierDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: QualifierDataCollection.Item(String)
  fullName: System.Management.QualifierDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取指定<xref href=&quot;System.Management.QualifierData&quot;></xref>从<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
  remarks: "##属性值 A <xref:System.Management.QualifierData>、 根据指定的名称。</xref:System.Management.QualifierData>      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual System.Management.QualifierData this[string qualifierName] { get; }
    parameters:
    - id: qualifierName
      type: System.String
      description: "名称<xref href=&quot;System.Management.QualifierData&quot;></xref>中访问<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。"
    return:
      type: System.Management.QualifierData
      description: "返回<xref href=&quot;System.Management.QualifierData&quot;></xref>包含集合中的指定限定符的数据。"
  overload: System.Management.QualifierDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: QualifierDataCollection.Remove(String)
  fullName: System.Management.QualifierDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "删除<xref href=&quot;System.Management.QualifierData&quot;></xref>从<xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>按名称。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void Remove (string qualifierName);
    parameters:
    - id: qualifierName
      type: System.String
      description: "名称<xref href=&quot;System.Management.QualifierData&quot;></xref>删除。"
  overload: System.Management.QualifierDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
  fullName: System.Management.QualifierDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取要用于同步的对象。"
  remarks: "##属性值要用于同步的对象。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "返回<xref:System.Object>值要用于同步。</xref:System.Object>"
  overload: System.Management.QualifierDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回<xref:System.Collections.IEnumerator>，它循环访问<xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>。</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic、 C#]      `foreach` C# 语言的语句 (`for each`在 Visual Basic 中) 隐藏了枚举数的复杂性。  因此，使用`foreach`建议，而不是直接操作枚举数。       枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。       最初，枚举数定位在集合中的第一个元素之前。 <xref:System.Collections.IEnumerator.Reset%2A>此外会回此位置的枚举数。</xref:System.Collections.IEnumerator.Reset%2A> 在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</xref:System.Collections.IEnumerator.Current%2A> 因此，你必须调用<xref:System.Collections.IEnumerator.MoveNext%2A>的第一个元素的集合，然后再读取<xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A>的值枚举器向前移动</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>返回相同的对象之前<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>称为。</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>设置<xref:System.Collections.IEnumerator.Current%2A>到下一个元素。</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> 当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</xref:System.Collections.IEnumerator.MoveNext%2A> 如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> 若要设置<xref:System.Collections.IEnumerator.Current%2A>可以再次，集合的第一个元素调用<xref:System.Collections.IEnumerator.Reset%2A>后, 跟<xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       只要集合保持不变，枚举数就保持有效。 如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>到 如果之间修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回到，设置的元素，即使枚举数已经无效。</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是线程安全的过程。 即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。 若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。       此方法为 o （1） 运算。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add(String,Object)
  nameWithType: QualifierDataCollection.Add(String,Object)
  fullName: System.Management.QualifierDataCollection.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  nameWithType: QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Management.QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: QualifierDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo(QualifierData[],Int32)
  nameWithType: QualifierDataCollection.CopyTo(QualifierData[],Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(QualifierData[],Int32)
- uid: System.Management.QualifierData[]
  parent: System.Management
  isExternal: false
  name: QualifierData
  nameWithType: QualifierData
  fullName: System.Management.QualifierData[]
  spec.csharp:
  - uid: System.Management.QualifierData
    name: QualifierData
    nameWithType: QualifierData
    fullName: QualifierData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.QualifierDataCollection.Count
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Count
  nameWithType: QualifierDataCollection.Count
  fullName: System.Management.QualifierDataCollection.Count
- uid: System.Management.QualifierDataCollection.GetEnumerator
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: QualifierDataCollection.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.GetEnumerator()
- uid: System.Management.QualifierDataCollection.QualifierDataEnumerator
  parent: System.Management
  isExternal: false
  name: QualifierDataCollection+QualifierDataEnumerator
  nameWithType: QualifierDataCollection+QualifierDataEnumerator
  fullName: System.Management.QualifierDataCollection+QualifierDataEnumerator
- uid: System.Management.QualifierDataCollection.IsSynchronized
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
  fullName: System.Management.QualifierDataCollection.IsSynchronized
- uid: System.Management.QualifierDataCollection.Item(System.String)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: QualifierDataCollection.Item(String)
  fullName: System.Management.QualifierDataCollection.Item(String)
- uid: System.Management.QualifierData
  parent: System.Management
  isExternal: false
  name: QualifierData
  nameWithType: QualifierData
  fullName: System.Management.QualifierData
- uid: System.Management.QualifierDataCollection.Remove(System.String)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: QualifierDataCollection.Remove(String)
  fullName: System.Management.QualifierDataCollection.Remove(String)
- uid: System.Management.QualifierDataCollection.SyncRoot
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
  fullName: System.Management.QualifierDataCollection.SyncRoot
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.QualifierDataCollection.Add*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add
  nameWithType: QualifierDataCollection.Add
- uid: System.Management.QualifierDataCollection.CopyTo*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: QualifierDataCollection.CopyTo
- uid: System.Management.QualifierDataCollection.Count*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Count
  nameWithType: QualifierDataCollection.Count
- uid: System.Management.QualifierDataCollection.GetEnumerator*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: QualifierDataCollection.GetEnumerator
- uid: System.Management.QualifierDataCollection.IsSynchronized*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
- uid: System.Management.QualifierDataCollection.Item*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Item
  nameWithType: QualifierDataCollection.Item
- uid: System.Management.QualifierDataCollection.Remove*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Remove
  nameWithType: QualifierDataCollection.Remove
- uid: System.Management.QualifierDataCollection.SyncRoot*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator
