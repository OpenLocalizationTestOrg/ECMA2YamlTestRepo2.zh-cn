### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.MenuCommand
  id: MenuCommand
  children:
  - System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.MenuCommand.Checked
  - System.ComponentModel.Design.MenuCommand.CommandChanged
  - System.ComponentModel.Design.MenuCommand.CommandID
  - System.ComponentModel.Design.MenuCommand.Enabled
  - System.ComponentModel.Design.MenuCommand.Invoke
  - System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  - System.ComponentModel.Design.MenuCommand.OleStatus
  - System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  - System.ComponentModel.Design.MenuCommand.Properties
  - System.ComponentModel.Design.MenuCommand.Supported
  - System.ComponentModel.Design.MenuCommand.ToString
  - System.ComponentModel.Design.MenuCommand.Visible
  langs:
  - csharp
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
  type: Class
  summary: "表示 Windows 菜单或工具栏命令项。"
  remarks: "MenuCommand 类表示有关 Windows 菜单或工具栏命令的信息。 <xref:System.ComponentModel.Design.IMenuCommandService>接口，您可以将 MenuCommand 对象添加到 Visual Studio 菜单。</xref:System.ComponentModel.Design.IMenuCommandService>       此类提供了以下成员:-可以在其中附加的事件处理程序命令的事件处理程序属性。      -A<xref:System.ComponentModel.Design.CommandID>唯一标识该命令的属性。</xref:System.ComponentModel.Design.CommandID>      -An<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>执行命令的方法。</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      -An<xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>可以重写以处理在选择新的命令时发生该事件的方法。</xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>      -布尔型标志状态指示该命令是否<xref:System.ComponentModel.Design.MenuCommand.Checked%2A>， <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>， <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>，或<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>。</xref:System.ComponentModel.Design.MenuCommand.Visible%2A> </xref:System.ComponentModel.Design.MenuCommand.Supported%2A> </xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Checked%2A>      -An<xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>属性，该值指示 OLE 命令的命令的状态代码。</xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>      -的替代<xref:System.ComponentModel.Design.MenuCommand.ToString%2A>方法。</xref:System.ComponentModel.Design.MenuCommand.ToString%2A>"
  example:
  - "The following code example creates a MenuCommand object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio. Press the F1 key to invoke the MenuCommand.  \n  \n [!code-cpp[MenuCommand Example#10](~/add/codesnippet/cpp/t-system.componentmodel._8_1.cpp)]\n [!code-cs[MenuCommand Example#10](~/add/codesnippet/csharp/t-system.componentmodel._8_1.cs)]\n [!code-vb[MenuCommand Example#10](~/add/codesnippet/visualbasic/t-system.componentmodel._8_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MenuCommand
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  id: '#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)'
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/0d01c3a9-eede-4f5b-b9c2-_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/0d01c3a9-eede-4f5b-b9c2-_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/0d01c3a9-eede-4f5b-b9c2-_1.vb)]"
  syntax:
    content: public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);
    parameters:
    - id: handler
      type: System.EventHandler
      description: "要在用户选择菜单项或工具栏按钮时会引发的事件。"
    - id: command
      type: System.ComponentModel.Design.CommandID
      description: "此菜单命令链接到环境的菜单唯一命令 ID。"
  overload: System.ComponentModel.Design.MenuCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Checked
  id: Checked
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取或设置一个值，该值指示是否选中此菜单项。"
  syntax:
    content: public virtual bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果选中项;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.MenuCommand.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  id: CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "菜单命令更改时发生。"
  remarks: "如果将成为检查或禁用它，可以更改命令。"
  syntax:
    content: public event EventHandler CommandChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  id: CommandID
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取<xref href=&quot;System.ComponentModel.Design.CommandID&quot;></xref>与此菜单命令关联。"
  syntax:
    content: public virtual System.ComponentModel.Design.CommandID CommandID { get; }
    return:
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>与菜单命令相关联。"
  overload: System.ComponentModel.Design.MenuCommand.CommandID*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取一个值，该值指示此菜单项是否可用。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._15_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._15_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._15_1.vb)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了项;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.MenuCommand.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "调用该命令。"
  syntax:
    content: public virtual void Invoke ();
    parameters: []
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  id: Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "调用该命令与给定的参数。"
  syntax:
    content: public virtual void Invoke (object arg);
    parameters:
    - id: arg
      type: System.Object
      description: "可选的参数以供该命令。"
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  id: OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取此菜单项的 OLE 命令状态代码。"
  syntax:
    content: public virtual int OleStatus { get; }
    return:
      type: System.Int32
      description: "一个整数，它包含反映此菜单项的状态的状态标志的组合。"
  overload: System.ComponentModel.Design.MenuCommand.OleStatus*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  id: OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "引发<xref href=&quot;System.ComponentModel.Design.MenuCommand.CommandChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnCommandChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnCommandChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Properties
  id: Properties
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取与关联的公共属性<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>。"
  remarks: "所有菜单命令属性集合中都存储其公共属性。 属性字典中的键是属性名称。 这使泛型枚举的属性，并提供一致的基底，从中可以将新属性添加而无需修改的类定义。"
  syntax:
    content: public virtual System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>包含的公共属性<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.Design.MenuCommand.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Supported
  id: Supported
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取或设置一个值，该值指示是否支持此菜单项。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._20_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._20_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._20_1.vb)]"
  syntax:
    content: public virtual bool Supported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该项目，则这是默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.MenuCommand.Supported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.ToString
  id: ToString
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "返回的字符串表示形式此菜单命令。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "包含的值的字符串<> *1> 用竖线 (|) 分隔的属性的设置，任何标志的名称后追加。这些标志属性包括<> *1>， <> </> *1>， <> </> *1>，和<xref:System.ComponentModel.Design.MenuCommand.Visible*>。</xref:System.ComponentModel.Design.MenuCommand.Visible*>"
  overload: System.ComponentModel.Design.MenuCommand.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Visible
  id: Visible
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "获取或设置一个值，该值指示此菜单项是否可见。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._26_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._26_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._26_1.vb)]"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该项是可见的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.MenuCommand.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Checked
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.MenuCommand.Properties
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.MenuCommand.Supported
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.MenuCommand.Visible
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
- uid: System.ComponentModel.Design.MenuCommand.#ctor*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand.MenuCommand
- uid: System.ComponentModel.Design.MenuCommand.Checked*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
- uid: System.ComponentModel.Design.MenuCommand.CommandID*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke
  nameWithType: MenuCommand.Invoke
- uid: System.ComponentModel.Design.MenuCommand.OleStatus*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged
  nameWithType: MenuCommand.OnCommandChanged
- uid: System.ComponentModel.Design.MenuCommand.Properties*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
- uid: System.ComponentModel.Design.MenuCommand.Supported*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString
  nameWithType: MenuCommand.ToString
- uid: System.ComponentModel.Design.MenuCommand.Visible*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
