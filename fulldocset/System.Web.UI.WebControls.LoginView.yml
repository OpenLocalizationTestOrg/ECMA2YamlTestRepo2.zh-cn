### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LoginView
  id: LoginView
  children:
  - System.Web.UI.WebControls.LoginView.#ctor
  - System.Web.UI.WebControls.LoginView.AnonymousTemplate
  - System.Web.UI.WebControls.LoginView.Controls
  - System.Web.UI.WebControls.LoginView.CreateChildControls
  - System.Web.UI.WebControls.LoginView.DataBind
  - System.Web.UI.WebControls.LoginView.EnableTheming
  - System.Web.UI.WebControls.LoginView.Focus
  - System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.LoginView.LoggedInTemplate
  - System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)
  - System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)
  - System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.LoginView.RoleGroups
  - System.Web.UI.WebControls.LoginView.SaveControlState
  - System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LoginView.SkinID
  - System.Web.UI.WebControls.LoginView.ViewChanged
  - System.Web.UI.WebControls.LoginView.ViewChanging
  langs:
  - csharp
  name: LoginView
  nameWithType: LoginView
  fullName: System.Web.UI.WebControls.LoginView
  type: Class
  summary: "显示指定用户，根据用户的身份验证状态和角色成员身份的适当的内容模板。"
  remarks: "本主题中:-[简介](#introduction)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 LoginView 控件显示不同网站内容模板 （或&quot;视图&quot;） 为不同的用户，基于是否对用户进行身份验证，并且，如果哪些 Web 站点角色，因此，他或她所属。            1> [!NOTE]&1;> 如果你不熟悉的 ASP.NET 提供的登录控件集，请参阅[ASP.NET 登录控件概述](~/add/includes/ajax-current-ext-md.md)才能继续。 有关与登录控件和成员资格相关的其他主题的列表，请参阅[使用成员资格管理用户](~/add/includes/ajax-current-ext-md.md)。       存储在中的<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>属性显示到网站，用户未登录单元任何访问者</xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>模板 一旦用户注册后，该站点会显示与中的用户的角色之一相关联的任一模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>属性或在指定的默认模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> </xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>       LoginView 控件管理后将模板分配给任何 LoginView 类的三个模板属性，在各种模板之间切换:- <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>-指定要显示给用户未登录到网站的模板。</xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 在登录的用户将不会看到此模板。      - <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>-指定要向登录到网站，但不是属于任何角色组具有已定义模板的用户显示的默认模板。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>      - <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>-指定要向登录的用户作为成员的角色定义的角色组模板与显示的模板。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 内容模板是与某一组中的角色相关联<xref:System.Web.UI.WebControls.RoleGroup>实例。</xref:System.Web.UI.WebControls.RoleGroup>       在源中定义的顺序搜索角色组模板。 第一个匹配的角色组模板是向用户显示。 如果用户是多个角色的成员，则使用与任何用户的角色匹配的第一个角色组模板。 如果多个模板是与单个角色关联，则使用仅第一个定义的模板。       使用模板的各种组合时下, 表介绍 LoginView 控件的行为。      |LoggedIn 模板属性 |匿名模板属性 |RoleGroups 属性 |LoginView 行为 |  |--------------------------------|---------------------------------|-------------------------|------------------------|  |未设置 |未设置 |未设置 |不显示任何内容。 |  |设置 |未设置 |未设置 |仅当用户登录时显示内容。 |  |未设置 |设置 |未设置 |仅在用户未登录时，才显示内容。 |  |未设置 |未设置 |设置 |显示中的第一个模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>与用户的角色之一相匹配的集合。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 如果不找到任何匹配项，则不显示任何内容。 |  |设置 |设置 |未设置 |如果用户已登录，将显示在指定的模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 如果在用户未登录，将显示在<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>属性中指定的模板。 |  |设置 |设置 |设置 |如果用户已登录，将显示中的第一个模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>与用户的角色之一相匹配的集合。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> </xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 如果不找到任何匹配项，则显示在指定的模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 如果用户未登录，将显示在<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>属性中指定的模板。 |  |设置 |未设置 |设置 |如果用户已登录，将显示中的第一个模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>与用户的角色之一相匹配的集合。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> </xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 如果不找到任何匹配项，则显示在指定的模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 如果用户未登录，将不会显示。 |  |未设置 |设置 |设置 |如果用户已登录，将显示中的第一个模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>与用户的角色之一相匹配的集合。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 如果不找到任何匹配项，则不会显示。 如果用户未登录，将显示在<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>属性中指定的模板。 |      <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>和<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>可以用于设置任何身份验证方案<xref:System.Security.Principal.IIdentity.Name%2A>属性<xref:System.Web.UI.Page>对象的<xref:System.Web.UI.Page.User%2A>属性。</xref:System.Web.UI.Page.User%2A> </xref:System.Web.UI.Page> </xref:System.Security.Principal.IIdentity.Name%2A> </xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> </xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> </xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 你必须配置要使用的角色管理<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>属性可以在网站上的用户的角色上定义基模板。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 有关详细信息，请参阅[了解角色管理](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.Control.Focus%2A>方法不未设置 Web 页的最初关注点为 LoginView 控件，或任何其子控件。</xref:System.Web.UI.Control.Focus%2A> LoginView 控件中所包含创建后<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender> 若要将焦点设置到 LoginView 所包含的子控件，处理`On_PreRender`并调用其<xref:System.Web.UI.Control.Focus%2A>方法。</xref:System.Web.UI.Control.Focus%2A>  你还可以使用<xref:System.Web.UI.WebControls.LoginView.ViewChanging>和<xref:System.Web.UI.WebControls.LoginView.ViewChanged>事件以编程方式访问的控件中 LoginView 控件模板。</xref:System.Web.UI.WebControls.LoginView.ViewChanged> </xref:System.Web.UI.WebControls.LoginView.ViewChanging>      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:LoginView       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnViewChanged=&quot;ViewChanged event handler&quot;       OnViewChanging=&quot;ViewChanging event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Visible=&quot;True|False&quot;   >           <AnonymousTemplate>               <!-- child controls -->           </AnonymousTemplate>           <LoggedInTemplate>               <!-- child controls -->           </LoggedInTemplate>           <RoleGroups>                   <asp:RoleGroup                       Roles=&quot;string&quot;                   >                           <ContentTemplate>                               <!-- child controls -->                           </ContentTemplate>                   </asp:RoleGroup>           </RoleGroups>   </asp:LoginView>   ```"
  example:
  - "The following code example shows how to set templates for each of the three template types supported by the LoginView control.  \n  \n [!code-vb[LoginViewClass#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_335_1.aspx)]\n [!code-cs[LoginViewClass#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_335_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.DefaultEvent("ViewChanged")]

      [System.ComponentModel.DefaultProperty("CurrentView")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.Themeable(true)]

      public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: LoginView()
  nameWithType: LoginView.LoginView()
  fullName: System.Web.UI.WebControls.LoginView.LoginView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  syntax:
    content: public LoginView ();
    parameters: []
  overload: System.Web.UI.WebControls.LoginView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.AnonymousTemplate
  id: AnonymousTemplate
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: AnonymousTemplate
  nameWithType: LoginView.AnonymousTemplate
  fullName: System.Web.UI.WebControls.LoginView.AnonymousTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要显示给用户未登录到网站的模板。"
  remarks: "AnonymousTemplate 属性指定的内容的模板，它们未登录到网站时，向网站用户显示。 此时会显示此模板时<xref:System.Security.Principal.IIdentity.Name%2A>属性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>属性是`null`。</xref:System.Web.UI.Page.User%2A></xref:System.Web.UI.Page> </xref:System.Security.Principal.IIdentity.Name%2A>       向经过身份验证的用户永远不会显示 AnonymousTemplate 模板。 如果 AnonymousTemplate 属性为空，则会向未登录的用户不显示任何内容。"
  example:
  - "The following code example uses the template specified in the AnonymousTemplate template to display an invitation to sign up for personalized services.  \n  \n [!code-vb[LoginViewAnonymousTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_899_1.aspx)]\n [!code-cs[LoginViewAnonymousTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_899_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>以显示。"
  overload: System.Web.UI.WebControls.LoginView.AnonymousTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.Controls
  id: Controls
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: Controls
  nameWithType: LoginView.Controls
  fullName: System.Web.UI.WebControls.LoginView.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象，其中包含子控件<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "子控件集合<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.LoginView.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: LoginView.CreateChildControls()
  fullName: System.Web.UI.WebControls.LoginView.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建子控件组成<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  remarks: "CreateChildControls 方法创建的各个控件，构成<xref:System.Web.UI.WebControls.LoginView>控件。</xref:System.Web.UI.WebControls.LoginView> 创建的控件集而异的用户显示的内容模板。 例如，当用户未登录到网站，仅包含在模板中的控件中指定的<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>创建属性。</xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.LoginView.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: DataBind()
  nameWithType: LoginView.DataBind()
  fullName: System.Web.UI.WebControls.LoginView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到数据源<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>及其所有子控件。"
  remarks: "数据绑定方法用于将数据绑定到源中<xref:System.Web.UI.WebControls.LoginView>控件及其子级。</xref:System.Web.UI.WebControls.LoginView> 此方法会解析中的所有数据绑定表达式<xref:System.Web.UI.WebControls.LoginView>控件和任何子控件的活动模板中。</xref:System.Web.UI.WebControls.LoginView>"
  syntax:
    content: public override void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.LoginView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: EnableTheming
  nameWithType: LoginView.EnableTheming
  fullName: System.Web.UI.WebControls.LoginView.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否可以对应用主题<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  remarks: "EnableTheming 属性指示是否为启用主题<xref:System.Web.UI.WebControls.LoginView>控件。</xref:System.Web.UI.WebControls.LoginView> 是否为中包含的控件启用主题 EnableTheming 属性还会影响其<xref:System.Web.UI.WebControls.LoginView.Controls%2A>集合。</xref:System.Web.UI.WebControls.LoginView.Controls%2A> 当 EnableTheming 属性是`true`，应用程序的主题目录中搜索要应用的控件外观。 如果用于特定的控件中的主题目录存在，则不会应用的外观。 当 EnableTheming 属性是`false`，则不搜索主题目录和内容<xref:System.Web.UI.WebControls.LoginView.SkinID%2A>不使用属性。</xref:System.Web.UI.WebControls.LoginView.SkinID%2A>       控件可以重写由其父控件或包含的页设置的 EnableTheming 值。 例如，如果父控件 EnableTheming 设置为`false`，您可以有选择地应用于 EnableTheming 属性设置为父项中包含的子控件的主题`true`上各个子控件。"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用主题;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LoginView.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.Focus
  id: Focus
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: Focus()
  nameWithType: LoginView.Focus()
  fullName: System.Web.UI.WebControls.LoginView.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置输入到控件的焦点。"
  remarks: "焦点方法不会设置到网页的最初关注点<xref:System.Web.UI.WebControls.LoginView>控件或任何其子控件。</xref:System.Web.UI.WebControls.LoginView> 中包含的控件<xref:System.Web.UI.WebControls.LoginView>后创建控件<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.WebControls.LoginView> 若要将焦点设置到所包含的子控件<xref:System.Web.UI.WebControls.LoginView>，处理`On_PreRender`并调用其<xref:System.Web.UI.Control.Focus%2A>方法。</xref:System.Web.UI.Control.Focus%2A> </xref:System.Web.UI.WebControls.LoginView>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.LoginView.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "调用焦点方法。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: LoginView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.LoginView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "此方法实现<xref:System.Web.UI.Control.LoadControlState*>.</xref:System.Web.UI.Control.LoadControlState*>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>，它表示要还原的控件状态。</xref:System.Object>"
  overload: System.Web.UI.WebControls.LoginView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.LoggedInTemplate
  id: LoggedInTemplate
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: LoggedInTemplate
  nameWithType: LoginView.LoggedInTemplate
  fullName: System.Web.UI.WebControls.LoginView.LoggedInTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要向网站用户登录到网站，但不是一个在指定的角色组的成员显示模板<xref:System.Web.UI.WebControls.LoginView.RoleGroups*>属性。</xref:System.Web.UI.WebControls.LoginView.RoleGroups*>"
  remarks: "两个以下条件满足时，向网站用户显示的 LoggedInTemplate 属性:-<xref:System.Security.Principal.IIdentity.Name%2A>属性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>属性不是`null`-用户不属于中定义的角色组<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>属性。</xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> </xref:System.Web.UI.Page.User%2A></xref:System.Web.UI.Page> </xref:System.Security.Principal.IIdentity.Name%2A>       LoggedInTemplate 属性指定用于身份验证的网站用户的默认模板。 如果你尚未配置角色管理，LoggedInTemplate 是唯一的模板可供身份验证的用户。 有关配置角色管理的详细信息，请参阅[了解角色管理](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example uses the LoggedInTemplate template to display links to personalized information for logged-in users.  \n  \n [!code-vb[LoginViewAnonymousTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_127_1.aspx)]\n [!code-cs[LoginViewAnonymousTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_127_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>以显示。"
  overload: System.Web.UI.WebControls.LoginView.LoggedInTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: LoginView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "OnInit 方法执行初始化<xref:System.Web.UI.WebControls.LoginView>控件。</xref:System.Web.UI.WebControls.LoginView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LoginView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: LoginView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定哪些角色组模板，以显示，基于登录的用户的角色。"
  remarks: "OnPreRender 方法调用期间<xref:System.Web.UI.Control.PreRender>事件，以确定要向用户显示的内容模板。</xref:System.Web.UI.Control.PreRender> 如果<xref:System.Security.Principal.IIdentity.Name%2A>属性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>属性是`null`中, 指定的模板<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>显示属性; 否则，将显示与用户的角色关联的模板。</xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> </xref:System.Web.UI.Page.User%2A></xref:System.Web.UI.Page> </xref:System.Security.Principal.IIdentity.Name%2A> 如果用户不属于一个定义的角色组，或如果你尚未配置角色管理<xref:System.Web.UI.WebControls.LoginView>控件将显示在指定的模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> </xref:System.Web.UI.WebControls.LoginView> 有关配置角色管理的详细信息，请参阅[角色管理提供程序](~/add/includes/ajax-current-ext-md.md)。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPreRender 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LoginView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)
  id: OnViewChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: OnViewChanged(EventArgs)
  nameWithType: LoginView.OnViewChanged(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LoginView.ViewChanged&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件切换视图。"
  remarks: "当<xref:System.Web.UI.WebControls.LoginView>控件切换视图，它将从上一模板中移除的控件并从新的模板创建新的子控件。</xref:System.Web.UI.WebControls.LoginView> 创建新的子控件后调用 OnViewChanged 方法。       使用 OnViewChanged 方法来执行任何处理，如数据绑定，需要初始化新的视图上的控件。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnViewChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LoginView.OnViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)
  id: OnViewChanging(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: OnViewChanging(EventArgs)
  nameWithType: LoginView.OnViewChanging(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnViewChanging(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.LoginView.ViewChanging&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件切换视图。"
  remarks: "当<xref:System.Web.UI.WebControls.LoginView>控件切换视图，它从上一模板中删除控件，并从新的模板创建新的子控件。</xref:System.Web.UI.WebControls.LoginView> 删除以前的控件之前调用 OnViewChanging 方法。       使用 OnViewChanging 方法来执行任何必要的处理，如控件会被删除之前保存控制信息。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnViewChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnViewChanging (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LoginView.OnViewChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: LoginView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LoginView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用指定的客户端的浏览器到 Web 服务器控件内容呈现<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象。"
  remarks: "Render 方法用于呈现客户端的浏览器使用指定的服务器控件内容<xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>对象。</xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>       **请注意**此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.LoginView>控件。</xref:System.Web.UI.WebControls.LoginView>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>用于呈现服务器控件内容在客户端的浏览器上。"
  overload: System.Web.UI.WebControls.LoginView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.RoleGroups
  id: RoleGroups
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: RoleGroups
  nameWithType: LoginView.RoleGroups
  fullName: System.Web.UI.WebControls.LoginView.RoleGroups
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取与特定角色关联内容的模板的角色组的集合。"
  remarks: "RoleGroups 属性包含与 Web 站点上的各种角色关联的内容模板。 在源中定义模板的顺序搜索 RoleGroups 属性中的集合。 第一个匹配的角色组模板是向用户显示。 如果用户是多个角色的成员，则使用与任何用户的角色匹配的第一个角色组模板。 如果多个模板与单个角色关联，则将使用的第一个定义的模板。       如果登录的用户不属于任何角色组集合中包含的角色，该站点会显示在指定的内容模板<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性。</xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 匿名用户永远不会显示 RoleGroups 集合中包含任何模板。       你必须配置为使用 RoleGroups 属性来定义模板基于 Web 站点上的用户的角色的角色管理。 有关详细信息，请参阅[了解角色管理](~/add/includes/ajax-current-ext-md.md)。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates using the RoleGroups collection. Because the <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> and <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> properties are not set, the content is displayed only to users who belong to roles with a defined content template.  \n  \n [!code-vb[LoginViewRoleGroups#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_566_1.aspx)]\n [!code-cs[LoginViewRoleGroups#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_566_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }
    return:
      type: System.Web.UI.WebControls.RoleGroupCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.RoleGroupCollection&quot;> </xref>对象，其中包含定义的角色组模板。"
  overload: System.Web.UI.WebControls.LoginView.RoleGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: LoginView.SaveControlState()
  fullName: System.Web.UI.WebControls.LoginView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将所有服务器控件都保存自页回发到服务器的时间以来发生的状态更改。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "返回服务器控件的当前状态。 如果没有与控件关联的状态，则此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LoginView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)
  id: SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: SetDesignModeState(IDictionary)
  nameWithType: LoginView.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.WebControls.LoginView.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置控件的设计时数据。"
  syntax:
    content: protected override void SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>包含控件的设计时数据。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.LoginView.SetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: SkinID
  nameWithType: LoginView.SkinID
  fullName: System.Web.UI.WebControls.LoginView.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要应用于外观<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。"
  remarks: "可以使用控件的外观包含在主题目录中的一个或多个外观文件中。 SkinID 属性指定哪些这些将应用于控件的外观。 外观是特定于特定的控件;不能共享之间的不同类型的控件的外观设置。       如果未设置 SkinID 属性，控件将使用的默认外观，如果已定义。 例如，如果而无需外观 ID 为定义<xref:System.Web.UI.WebControls.Image>控制，则该外观适用于所有<xref:System.Web.UI.WebControls.Image>控件，不显式引用它按 ID 的外观和，未设置为禁用主题。</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image> 如果具有 ID 的外观定义<xref:System.Web.UI.WebControls.Image>控件，然后，外观仅适用于<xref:System.Web.UI.WebControls.Image>控制其<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>设置为该 id。</xref:System.Web.UI.WebControls.WebControl.SkinID%2A> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image>       如果主题目录中的外观文件不包含具有指定 SkinID，外观<xref:System.ArgumentException>在运行时引发异常。</xref:System.ArgumentException>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "要应用于外观的名称<xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.LoginView.SkinID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "主题中不存在 SkinID 属性中指定的外观。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.ViewChanged
  id: ViewChanged
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: ViewChanged
  nameWithType: LoginView.ViewChanged
  fullName: System.Web.UI.WebControls.LoginView.ViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更改视图后发生。"
  remarks: "当<xref:System.Web.UI.WebControls.LoginView>控件切换视图，它将从上一模板中移除的控件并从新的模板创建新的子控件。</xref:System.Web.UI.WebControls.LoginView> 在创建新的子控件后，将引发 ViewChanged 事件。       使用 ViewChanged 事件执行任何处理，如数据绑定，需要初始化新的视图上的控件。      1> [!NOTE]&1;> ViewChanged 事件仅当用户的登录状态更改到页回发期间。 如果使用登录用户不会引发 ViewChanged 事件<xref:System.Web.UI.WebControls.Login>控件，或如果使用在用户注销<xref:System.Web.UI.WebControls.LoginStatus>控件。</xref:System.Web.UI.WebControls.LoginStatus> </xref:System.Web.UI.WebControls.Login> 如果用户在登录或注销后执行一个重定向，ViewChanged 事件还将不会发生。 ViewChanged 事件发生的一个示例是当用户已注销上，通过调用<xref:System.Web.Security.FormsAuthentication.SignOut%2A>无需重定向到另一页的方法。</xref:System.Web.Security.FormsAuthentication.SignOut%2A> 在页上，向下一步回发期间<xref:System.Web.UI.WebControls.LoginView>控件将检测用户的登录状态中的更改，然后引发 ViewChanged 事件。</xref:System.Web.UI.WebControls.LoginView>       有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler ViewChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LoginView.ViewChanging
  id: ViewChanging
  parent: System.Web.UI.WebControls.LoginView
  langs:
  - csharp
  name: ViewChanging
  nameWithType: LoginView.ViewChanging
  fullName: System.Web.UI.WebControls.LoginView.ViewChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更改视图之前发生。"
  remarks: "当<xref:System.Web.UI.WebControls.LoginView>控件切换视图，它将从上一模板中移除的控件并从新的模板创建新的子控件。</xref:System.Web.UI.WebControls.LoginView> 删除以前的控件之前，将引发 ViewChanging 事件。       使用 ViewChanging 事件执行任何处理，如保存所需的控件信息之前控件会被删除。      1> [!NOTE]&1;> ViewChanging 事件仅当用户的登录状态更改到页回发期间。 如果使用登录用户不会引发 ViewChanging 事件<xref:System.Web.UI.WebControls.Login>控件，或如果使用在用户注销<xref:System.Web.UI.WebControls.LoginStatus>控件。</xref:System.Web.UI.WebControls.LoginStatus> </xref:System.Web.UI.WebControls.Login> 如果用户在登录或注销后执行一个重定向，ViewChanging 事件还将不会发生。 ViewChanging 事件发生的一个示例是当用户已注销上，通过调用<xref:System.Web.Security.FormsAuthentication.SignOut%2A>无需重定向到另一页的方法。</xref:System.Web.Security.FormsAuthentication.SignOut%2A> 在页上，向下一步回发期间<xref:System.Web.UI.WebControls.LoginView>控件将检测用户的登录状态中的更改，然后引发 ViewChanging 事件。</xref:System.Web.UI.WebControls.LoginView>       有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler ViewChanging;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.LoginView.#ctor
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoginView()
  nameWithType: LoginView.LoginView()
  fullName: System.Web.UI.WebControls.LoginView.LoginView()
- uid: System.Web.UI.WebControls.LoginView.AnonymousTemplate
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: AnonymousTemplate
  nameWithType: LoginView.AnonymousTemplate
  fullName: System.Web.UI.WebControls.LoginView.AnonymousTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.LoginView.Controls
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Controls
  nameWithType: LoginView.Controls
  fullName: System.Web.UI.WebControls.LoginView.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.LoginView.CreateChildControls
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: CreateChildControls()
  nameWithType: LoginView.CreateChildControls()
  fullName: System.Web.UI.WebControls.LoginView.CreateChildControls()
- uid: System.Web.UI.WebControls.LoginView.DataBind
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: DataBind()
  nameWithType: LoginView.DataBind()
  fullName: System.Web.UI.WebControls.LoginView.DataBind()
- uid: System.Web.UI.WebControls.LoginView.EnableTheming
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: EnableTheming
  nameWithType: LoginView.EnableTheming
  fullName: System.Web.UI.WebControls.LoginView.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LoginView.Focus
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Focus()
  nameWithType: LoginView.Focus()
  fullName: System.Web.UI.WebControls.LoginView.Focus()
- uid: System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: LoginView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.LoginView.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LoginView.LoggedInTemplate
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoggedInTemplate
  nameWithType: LoginView.LoggedInTemplate
  fullName: System.Web.UI.WebControls.LoginView.LoggedInTemplate
- uid: System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: LoginView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: LoginView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnViewChanged(EventArgs)
  nameWithType: LoginView.OnViewChanged(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnViewChanged(EventArgs)
- uid: System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnViewChanging(EventArgs)
  nameWithType: LoginView.OnViewChanging(EventArgs)
  fullName: System.Web.UI.WebControls.LoginView.OnViewChanging(EventArgs)
- uid: System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: LoginView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LoginView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.LoginView.RoleGroups
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: RoleGroups
  nameWithType: LoginView.RoleGroups
  fullName: System.Web.UI.WebControls.LoginView.RoleGroups
- uid: System.Web.UI.WebControls.RoleGroupCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RoleGroupCollection
  nameWithType: RoleGroupCollection
  fullName: System.Web.UI.WebControls.RoleGroupCollection
- uid: System.Web.UI.WebControls.LoginView.SaveControlState
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SaveControlState()
  nameWithType: LoginView.SaveControlState()
  fullName: System.Web.UI.WebControls.LoginView.SaveControlState()
- uid: System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SetDesignModeState(IDictionary)
  nameWithType: LoginView.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.WebControls.LoginView.SetDesignModeState(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.LoginView.SkinID
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SkinID
  nameWithType: LoginView.SkinID
  fullName: System.Web.UI.WebControls.LoginView.SkinID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LoginView.ViewChanged
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: ViewChanged
  nameWithType: LoginView.ViewChanged
  fullName: System.Web.UI.WebControls.LoginView.ViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.LoginView.ViewChanging
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: ViewChanging
  nameWithType: LoginView.ViewChanging
  fullName: System.Web.UI.WebControls.LoginView.ViewChanging
- uid: System.Web.UI.WebControls.LoginView.#ctor*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoginView
  nameWithType: LoginView.LoginView
- uid: System.Web.UI.WebControls.LoginView.AnonymousTemplate*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: AnonymousTemplate
  nameWithType: LoginView.AnonymousTemplate
- uid: System.Web.UI.WebControls.LoginView.Controls*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Controls
  nameWithType: LoginView.Controls
- uid: System.Web.UI.WebControls.LoginView.CreateChildControls*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: CreateChildControls
  nameWithType: LoginView.CreateChildControls
- uid: System.Web.UI.WebControls.LoginView.DataBind*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: DataBind
  nameWithType: LoginView.DataBind
- uid: System.Web.UI.WebControls.LoginView.EnableTheming*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: EnableTheming
  nameWithType: LoginView.EnableTheming
- uid: System.Web.UI.WebControls.LoginView.Focus*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Focus
  nameWithType: LoginView.Focus
- uid: System.Web.UI.WebControls.LoginView.LoadControlState*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoadControlState
  nameWithType: LoginView.LoadControlState
- uid: System.Web.UI.WebControls.LoginView.LoggedInTemplate*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: LoggedInTemplate
  nameWithType: LoginView.LoggedInTemplate
- uid: System.Web.UI.WebControls.LoginView.OnInit*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnInit
  nameWithType: LoginView.OnInit
- uid: System.Web.UI.WebControls.LoginView.OnPreRender*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnPreRender
  nameWithType: LoginView.OnPreRender
- uid: System.Web.UI.WebControls.LoginView.OnViewChanged*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnViewChanged
  nameWithType: LoginView.OnViewChanged
- uid: System.Web.UI.WebControls.LoginView.OnViewChanging*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: OnViewChanging
  nameWithType: LoginView.OnViewChanging
- uid: System.Web.UI.WebControls.LoginView.Render*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: Render
  nameWithType: LoginView.Render
- uid: System.Web.UI.WebControls.LoginView.RoleGroups*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: RoleGroups
  nameWithType: LoginView.RoleGroups
- uid: System.Web.UI.WebControls.LoginView.SaveControlState*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SaveControlState
  nameWithType: LoginView.SaveControlState
- uid: System.Web.UI.WebControls.LoginView.SetDesignModeState*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SetDesignModeState
  nameWithType: LoginView.SetDesignModeState
- uid: System.Web.UI.WebControls.LoginView.SkinID*
  parent: System.Web.UI.WebControls.LoginView
  isExternal: false
  name: SkinID
  nameWithType: LoginView.SkinID
