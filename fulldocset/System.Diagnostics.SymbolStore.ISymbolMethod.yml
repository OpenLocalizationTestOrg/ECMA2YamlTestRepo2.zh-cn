### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  id: ISymbolMethod
  children:
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  - System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  - System.Diagnostics.SymbolStore.ISymbolMethod.Token
  langs:
  - csharp
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
  type: Interface
  summary: "表示符号存储区内的方法。"
  remarks: "ISymbolMethod 接口提供仅可访问的方法，如序列点、 词法作用域和参数信息与符号相关的属性。 将它与<xref:System.Reflection>类可读取的一种方法与类型相关的属性。</xref:System.Reflection>      1> [!NOTE]&1;> 此接口是托管的副本的`ISymUnmanagedMethod`接口，提供一种替代方式读取和写入调试符号信息的非托管的符号存储区接口之一。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISymbolMethod
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  id: GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取在其中定义当前方法的命名空间。"
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace
      description: "在其中定义当前方法的命名空间。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取 Microsoft 中间语言 (MSIL) 偏移量对应于指定位置的方法内。"
  remarks: "参数在方法签名中定义的顺序返回。"
  syntax:
    content: public int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "为其请求偏移量的文档。"
    - id: line
      type: System.Int32
      description: "与偏移量对应的文档行。"
    - id: column
      type: System.Int32
      description: "与偏移量对应的文档列。"
    return:
      type: System.Int32
      description: "指定的文档内的偏移量。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  id: GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前方法的参数。"
  remarks: "参数在方法签名中定义的顺序返回。"
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "当前方法的参数的数组。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取 Microsoft 中间语言 (MSIL)，给定的位置在此方法内包括的范围对应的开始和结束偏移量对的数组。"
  remarks: "数组是格式的整数的数组 {{开始时间&1;，end1}，{开始时间&2;，end2}...}。 范围对的数目是数组的除以 2 的长度。"
  syntax:
    content: public int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "为其请求偏移量的文档。"
    - id: line
      type: System.Int32
      description: "与范围对应的文档行。"
    - id: column
      type: System.Int32
      description: "与范围对应的文档列。"
    return:
      type: System.Int32[]
      description: "数组的开始和结束偏移量对。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  id: GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "返回的最封闭的词法范围，在给定方法内的偏移量。"
  remarks: "GetScope 方法可用于启动局部变量搜索。"
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "在方法中的词法范围的字节偏移量。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "在方法内给定的字节偏移量最封闭的词法范围。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前方法的序列点。"
  remarks: "序列点按偏移量排序，用于在方法中的所有文档。 使用<xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>来检索所有序列点的计数，并创建相应大小的数组。</xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>       GetSequencePoints 验证每个数组的大小，并将放到每个序列点信息。 如果任何数组是`null`，则不返回该数组的数据。"
  syntax:
    content: public void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: offsets
      type: System.Int32[]
      description: "字节数组的偏移量从序列点方法的开头。"
    - id: documents
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "序列点位于的文档的数组。"
    - id: lines
      type: System.Int32[]
      description: "序列点所在的文档中的行的数组。"
    - id: columns
      type: System.Int32[]
      description: "序列点所在的文档中的列的数组。"
    - id: endLines
      type: System.Int32[]
      description: "序列点结束的文档中的行的数组。"
    - id: endColumns
      type: System.Int32[]
      description: "序列点结束的文档中的列的数组。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前方法的源的开始和结束位置。"
  remarks: "第一个数组位置开始，且第二个结束。"
  syntax:
    content: public bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);
    parameters:
    - id: docs
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "起始和结束源文档。"
    - id: lines
      type: System.Int32[]
      description: "起始和结束行中相应的源文档。"
    - id: columns
      type: System.Int32[]
      description: "起始和结束列在相应的源文档。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果定义了位置，;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  id: RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取当前方法的根词法范围。 此范围包括整个方法。"
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "包括整个方法的根词法范围。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  id: SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取方法中序列点的计数。"
  syntax:
    content: public int SequencePointCount { get; }
    return:
      type: System.Int32
      description: "在方法中序列点的计数。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  id: Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "获取<xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;></xref>包含当前方法的元数据。"
  syntax:
    content: public System.Diagnostics.SymbolStore.SymbolToken Token { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "当前方法的元数据标记。"
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace
  nameWithType: ISymbolMethod.GetNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset
  nameWithType: ISymbolMethod.GetOffset
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters
  nameWithType: ISymbolMethod.GetParameters
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges
  nameWithType: ISymbolMethod.GetRanges
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope
  nameWithType: ISymbolMethod.GetScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints
  nameWithType: ISymbolMethod.GetSequencePoints
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd
  nameWithType: ISymbolMethod.GetSourceStartEnd
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
