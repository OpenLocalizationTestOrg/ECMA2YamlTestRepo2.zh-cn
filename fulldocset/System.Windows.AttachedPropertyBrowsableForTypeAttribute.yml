### YamlMime:ManagedReference
items:
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  id: AttachedPropertyBrowsableForTypeAttribute
  children:
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  langs:
  - csharp
  name: AttachedPropertyBrowsableForTypeAttribute
  nameWithType: AttachedPropertyBrowsableForTypeAttribute
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  type: Class
  summary: "指定附加的属性是仅供派生自指定类型的元素浏览。"
  remarks: "术语的含义`browsable`此说明中使用[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]类似于为提供的说明<xref:System.ComponentModel.BrowsableAttribute>，但附加的属性的可浏览状态是专门针对的属性信息[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，因为附加的属性是主要[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]概念。</xref:System.ComponentModel.BrowsableAttribute>       如果将多个类型指定为 AttachedPropertyBrowsableForTypeAttribute [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]，该属性是任何指定的类型匹配的情况下可浏览 (逻辑或)。  类型也可以是一个接口。       这[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]指定<xref:System.AttributeUsageAttribute.AllowMultiple%2A>`true`。</xref:System.AttributeUsageAttribute.AllowMultiple%2A>       这[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]仅应在附加的属性定义了 get 访问器上应用。 不适用于此[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]到 set 访问器。 尽管它是正在进行的可浏览的设置操作的直观地[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]相关元素，它是存在性和 get 访问器上定义控制 true 行为的元素的属性的特性。       有关声明的附加属性的常规信息，请参阅[附加属性概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class AttachedPropertyBrowsableForTypeAttribute : System.Windows.AttachedPropertyBrowsableAttribute
  inheritance:
  - System.Attribute
  - System.Windows.AttachedPropertyBrowsableAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: AttachedPropertyBrowsableForTypeAttribute(Type)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;></xref>类，使用提供<code> targetType </code>。"
  syntax:
    content: public AttachedPropertyBrowsableForTypeAttribute (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "附加属性的使用范围的预期的类型其中这[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]适用。"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "确定是否当前<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]是否与指定对象相等。"
  remarks: "此实现支持的此公开的一个可能的设置值的值是否相等[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]， <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>.</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>要与当前<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;></xref>等同于当前<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  id: GetHashCode
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "返回此哈希代码<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]。"
  remarks: "此实现支持基于此公开的一个可能的设置值的多个可能的哈希值[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]， <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>.</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "一个 32 位无符号的整数值。"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  id: TargetType
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "获取的基类型的附加属性的使用范围，其中这[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]适用。"
  remarks: "此属性是可以仅通过设置[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]声明通过公开<xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>构造函数。</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>"
  syntax:
    content: public Type TargetType { get; }
    return:
      type: System.Type
      description: "请求<xref:System.Type>。</xref:System.Type>"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  id: TypeId
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "获取此唯一类型标识符<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]。"
  remarks: "此实现返回一个唯一的值为每个[!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]，这是必需的因为这[!INCLUDE[TLA2#tla_netframewkattr](~/add/includes/tla2sharptla-netframewkattr-md.md)]允许存在多种用法。"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "一个对象，它的唯一标识符<xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>。"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.AttachedPropertyBrowsableAttribute
  isExternal: false
  name: System.Windows.AttachedPropertyBrowsableAttribute
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: AttachedPropertyBrowsableForTypeAttribute(Type)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: AttachedPropertyBrowsableForTypeAttribute
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: Equals
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
