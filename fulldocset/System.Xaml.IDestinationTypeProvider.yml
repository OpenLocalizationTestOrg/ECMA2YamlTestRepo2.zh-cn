### YamlMime:ManagedReference
items:
- uid: System.Xaml.IDestinationTypeProvider
  id: IDestinationTypeProvider
  children:
  - System.Xaml.IDestinationTypeProvider.GetDestinationType
  langs:
  - csharp
  name: IDestinationTypeProvider
  nameWithType: IDestinationTypeProvider
  fullName: System.Xaml.IDestinationTypeProvider
  type: Interface
  summary: "表示一种服务，可以返回目标类型的 CLR 类型系统标识符。 当反射或其他机制间接报告属性设置操作的目标类型时，目标类型是相关。"
  remarks: "通过返回的类型<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>从 XAML 节点流的当前位置使用当前的 XAML 架构上下文解析。</xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>       如果你使用的 XAML 类型系统，.NET Framework XAML 服务和访问服务上下文，在这些情况下的实施方式<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>返回<xref:System.Xaml.XamlType.UnderlyingType%2A>基于可用的 XAML 类型系统信息和基于 CLR 的 XAML 架构上下文。</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>       此服务是适用于其中纯 CLR 反射或其他机制可能会提供足够的信息的目标类型相关的情况。 以下是一些相关 IDestinationTypeProvider 用于方案的列表:-的 CLR 类型系统报告间接类型由于 CLR 如何定义和使用类型，而您希望真实的目标类型。 例如，在.NET Framework XAML 服务 Api 使用此服务内部时在处理事件成员。 通过为一种<xref:System.Delegate>。</xref:System.Delegate>纯 CLR 反射报告事件      -你想要确保目标类型的类型转换器用法匹配可以生成类型转换器的预期的类型。 这种情况下是适合于在参数化的目标类型或泛型。      -从嵌套在另一个值转换器的用法中调用的您值转换器。 在这种情况下，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>展开嵌套，并返回实际的属性设置，而不是返回任何干预的值转换器的输出类型的目标类型。</xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>       类型转换器和标记扩展可以查询 IDestinationTypeProvider 作为上由 XAML 对象编写器，XAML 对象编写器调用值转换行为时提供的服务上下文的服务。 有关详细信息，请参阅[类型转换器和 XAML 的标记扩展](~/add/includes/ajax-current-ext-md.md)和[可供类型转换器和标记扩展的上下文服务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public interface IDestinationTypeProvider
  implements: []
  platform:
  - net462
- uid: System.Xaml.IDestinationTypeProvider.GetDestinationType
  id: GetDestinationType
  parent: System.Xaml.IDestinationTypeProvider
  langs:
  - csharp
  name: GetDestinationType()
  nameWithType: IDestinationTypeProvider.GetDestinationType()
  fullName: System.Xaml.IDestinationTypeProvider.GetDestinationType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返回 CLR<xref:System.Type>标识相关的类型转换器或标记扩展的目标类型。</xref:System.Type>"
  remarks: "此方法没有任何输入的参数。 要返回的内容 (以及是否不返回任何内容`null`) 由 XAML 节点流中的当前节点位置。      ## 服务实施者如果你重新实现此服务，GetDestinationType 方法应返回的标记扩展或类型转换器预期检查时要对照其最特定的转换或输出类型的类型。"
  syntax:
    content: public Type GetDestinationType ();
    parameters: []
    return:
      type: System.Type
      description: "CLR<xref:System.Type>目标类型的值。</xref:System.Type>"
  overload: System.Xaml.IDestinationTypeProvider.GetDestinationType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.IDestinationTypeProvider.GetDestinationType
  parent: System.Xaml.IDestinationTypeProvider
  isExternal: false
  name: GetDestinationType()
  nameWithType: IDestinationTypeProvider.GetDestinationType()
  fullName: System.Xaml.IDestinationTypeProvider.GetDestinationType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.IDestinationTypeProvider.GetDestinationType*
  parent: System.Xaml.IDestinationTypeProvider
  isExternal: false
  name: GetDestinationType
  nameWithType: IDestinationTypeProvider.GetDestinationType
