### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ComponentChangedEventHandler
  id: ComponentChangedEventHandler
  langs:
  - csharp
  name: ComponentChangedEventHandler
  nameWithType: ComponentChangedEventHandler
  fullName: System.ComponentModel.Design.ComponentChangedEventHandler
  type: Delegate
  summary: "表示将处理的方法<xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;></xref>事件。"
  remarks: "当创建 ComponentChangedEventHandler 委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，添加到事件的委托的一个实例。 除非移除了该委托，称为每当发生该事件时，事件处理程序。 有关事件处理程序委托的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。       A<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>事件在加载或卸载的窗体，因为在这些操作期间需要进行更改将会发生。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>"
  example:
  - "This example demonstrates registering a ComponentChangedEventHandler and handling the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.  \n  \n [!code-cs[ComponentChangedEventHandlerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._106_1.cs)]\n [!code-vb[ComponentChangedEventHandlerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._106_1.vb)]\n [!code-cpp[ComponentChangedEventHandlerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._106_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ComponentChangedEventHandler(object sender, ComponentChangedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
