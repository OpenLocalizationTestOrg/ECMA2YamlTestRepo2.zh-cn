### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.CipherData
  id: CipherData
  children:
  - System.Security.Cryptography.Xml.CipherData.#ctor
  - System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  - System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  - System.Security.Cryptography.Xml.CipherData.CipherReference
  - System.Security.Cryptography.Xml.CipherData.CipherValue
  - System.Security.Cryptography.Xml.CipherData.GetXml
  - System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
  type: Class
  summary: "表示<xref uid=&quot;langword_csharp_&lt;CipherData&gt;&quot; name=&quot;&lt;CipherData&gt;&quot; href=&quot;&quot;> </xref> XML 加密中的元素。 此类不能被继承。"
  remarks: "CipherData 类表示`<CipherData>`XML 加密中的元素。 它是提供加密的数据的必需的元素。 它必须包含加密的数据的 base64 编码的文本作为`<CipherValue>`元素，或者提供对外部位置包含加密的数据使用的引用`<CipherReference>`元素。       在许多情况下，你不需要直接创建 CipherData 类的新实例。  <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>， <xref:System.Security.Cryptography.Xml.EncryptedData>，和<xref:System.Security.Cryptography.Xml.EncryptedKey>类为你创建实例。</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> </xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>      1> [!NOTE]&1;> CipherData 对象可以具有<xref:System.Security.Cryptography.Xml.CipherReference>属性或<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>属性，但不是能同时。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> </xref:System.Security.Cryptography.Xml.CipherReference> A<xref:System.Security.Cryptography.CryptographicException>同时分配给 CipherData 对象时引发。</xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.EncryptedData> class to create an <`EncryptedData`> element that contains a <`CipherData`> element, and then writes the XML to an XML file.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/cpp/t-system.security.crypto_27_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_27_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/csharp/t-system.security.crypto_27_1.cs)]"
  syntax:
    content: public sealed class CipherData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData()
  nameWithType: CipherData.CipherData()
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>类。"
  remarks: "此构造函数创建<xref:System.Security.Cryptography.Xml.CipherData>对象，表示`<CipherData>`XML 加密中的元素。</xref:System.Security.Cryptography.Xml.CipherData> `<CipherData>`元素是 XML 加密中的必需的元素。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class. The entire sample can be found in the <xref:System.Security.Cryptography.Xml.CipherData> class topic.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/cpp/m-system.security.crypto_12_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/visualbasic/m-system.security.crypto_12_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/csharp/m-system.security.crypto_12_1.cs)]"
  syntax:
    content: public CipherData ();
    parameters: []
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData(Byte[])
  nameWithType: CipherData.CipherData(Byte[])
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(Byte[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>类使用一个字节数组作为<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>值。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>"
  remarks: "此构造函数创建<xref:System.Security.Cryptography.Xml.CipherData>对象，表示`<CipherData>`XML 加密中的元素。</xref:System.Security.Cryptography.Xml.CipherData> 构造函数将分配`cipherValue`值赋给<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>属性作为实际加密数据。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>      1> [!NOTE]&1;>`<CipherData>`元素可以具有<xref:System.Security.Cryptography.Xml.CipherReference>或<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>子元素，但不是能同时。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> </xref:System.Security.Cryptography.Xml.CipherReference> A<xref:System.Security.Cryptography.CryptographicException>如果同时分配给引发<xref:System.Security.Cryptography.Xml.CipherData>对象。</xref:System.Security.Cryptography.Xml.CipherData> </xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class.  \n  \n [!code-cs[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/csharp/m-system.security.crypto_56_1.cs)]\n [!code-cpp[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/cpp/m-system.security.crypto_56_1.cpp)]\n [!code-vb[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_56_1.vb)]"
  syntax:
    content: public CipherData (byte[] cipherValue);
    parameters:
    - id: cipherValue
      type: System.Byte[]
      description: "要用于加密的数据<xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>cipherValue</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>属性已设置。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  id: '#ctor(System.Security.Cryptography.Xml.CipherReference)'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData(CipherReference)
  nameWithType: CipherData.CipherData(CipherReference)
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(CipherReference)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>类使用<xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref>对象。"
  remarks: "此构造函数创建<xref:System.Security.Cryptography.Xml.CipherData>对象，表示`<CipherData>`中 XML 加密，并将分配元素`cipherReference`值赋给<xref:System.Security.Cryptography.Xml.CipherReference>属性。</xref:System.Security.Cryptography.Xml.CipherReference> </xref:System.Security.Cryptography.Xml.CipherData> <xref:System.Security.Cryptography.Xml.CipherReference>对象所表示`<CipherReference>`元素，它提供加密数据的位置。</xref:System.Security.Cryptography.Xml.CipherReference>      1> [!NOTE]&1;> A<xref:System.Security.Cryptography.Xml.CipherData>对象可以具有<xref:System.Security.Cryptography.Xml.CipherReference>属性或<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>属性，但不是能同时。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> </xref:System.Security.Cryptography.Xml.CipherReference> </xref:System.Security.Cryptography.Xml.CipherData> A<xref:System.Security.Cryptography.CryptographicException>如果同时分配给引发<xref:System.Security.Cryptography.Xml.CipherData>对象。</xref:System.Security.Cryptography.Xml.CipherData> </xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class using <xref:System.Security.Cryptography.Xml.CipherReference> information.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/05ff695b-fd83-4697-9e55-_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/05ff695b-fd83-4697-9e55-_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/05ff695b-fd83-4697-9e55-_1.cpp)]"
  syntax:
    content: public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);
    parameters:
    - id: cipherReference
      type: System.Security.Cryptography.Xml.CipherReference
      description: "<xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>要使用对象。"
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>cipherValue</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>属性已设置。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference
  id: CipherReference
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherReference
  nameWithType: CipherData.CipherReference
  fullName: System.Security.Cryptography.Xml.CipherData.CipherReference
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "获取或设置<xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;></xref>元素。"
  remarks: "`<CipherReference>`元素标识源，处理，就可以得到加密的数据。 有关此元素的详细信息，请参阅<xref:System.Security.Cryptography.Xml.CipherReference>。</xref:System.Security.Cryptography.Xml.CipherReference>      1> [!NOTE]&1;> A<xref:System.Security.Cryptography.Xml.CipherData>对象可以具有<xref:System.Security.Cryptography.Xml.CipherReference>属性或<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>属性，但不是能同时。</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> </xref:System.Security.Cryptography.Xml.CipherReference> </xref:System.Security.Cryptography.Xml.CipherData> A<xref:System.Security.Cryptography.CryptographicException>如果同时分配给引发<xref:System.Security.Cryptography.Xml.CipherData>对象。</xref:System.Security.Cryptography.Xml.CipherData> </xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class using <xref:System.Security.Cryptography.Xml.CipherReference> information.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/p-system.security.crypto_76_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/p-system.security.crypto_76_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/p-system.security.crypto_76_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherReference
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.CipherData.CipherReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CipherReference 属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "不止一次设置 CipherReference 属性。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue
  id: CipherValue
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherValue
  nameWithType: CipherData.CipherValue
  fullName: System.Security.Cryptography.Xml.CipherData.CipherValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "获取或设置<xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;></xref>元素。"
  remarks: "值为加密的数据。      1> [!NOTE]&1;>`<CipherData>`元素可以具有<xref:System.Security.Cryptography.Xml.CipherReference>或 CipherValue 子元素，但不要同时。</xref:System.Security.Cryptography.Xml.CipherReference> A<xref:System.Security.Cryptography.CryptographicException>如果同时分配给引发<xref:System.Security.Cryptography.Xml.CipherData>对象。</xref:System.Security.Cryptography.Xml.CipherData> </xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class.  \n  \n [!code-cs[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/csharp/p-system.security.crypto_77_1.cs)]\n [!code-cpp[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/cpp/p-system.security.crypto_77_1.cpp)]\n [!code-vb[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/visualbasic/p-system.security.crypto_77_1.vb)]"
  syntax:
    content: public byte[] CipherValue { get; set; }
    return:
      type: System.Byte[]
      description: "一个字节数组，表示<xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Security.Cryptography.Xml.CipherData.CipherValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CipherValue 属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "不止一次设置 CipherValue 属性。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: GetXml()
  nameWithType: CipherData.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherData.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "获取的 XML 值<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>对象。"
  remarks: "使用此方法输出 XML for<xref:System.Security.Cryptography.Xml.CipherData>对象。</xref:System.Security.Cryptography.Xml.CipherData>"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> object.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/cpp/m-system.security.crypto_32_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/visualbasic/m-system.security.crypto_32_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/csharp/m-system.security.crypto_32_1.cs)]"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A <xref href=&quot;System.Xml.XmlElement&quot;> </xref>表示的 XML 信息的对象<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>对象。"
  overload: System.Security.Cryptography.Xml.CipherData.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *1> 属性和<> *1> 属性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: CipherData.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherData.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "中的 XML 数据加载<xref href=&quot;System.Xml.XmlElement&quot;></xref>到<xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref>对象。"
  remarks: "LoadXml 方法会覆盖现有 XML 元素，其中元素`value`参数。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> ，它表示要加载的 XML 数据。"
  overload: System.Security.Cryptography.Xml.CipherData.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *1> 属性和<> *1> 属性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.CipherData.#ctor
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData()
  nameWithType: CipherData.CipherData()
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData()
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData(Byte[])
  nameWithType: CipherData.CipherData(Byte[])
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData(CipherReference)
  nameWithType: CipherData.CipherData(CipherReference)
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(CipherReference)
- uid: System.Security.Cryptography.Xml.CipherReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherReference
  nameWithType: CipherReference
  fullName: System.Security.Cryptography.Xml.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherReference
  nameWithType: CipherData.CipherReference
  fullName: System.Security.Cryptography.Xml.CipherData.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherValue
  nameWithType: CipherData.CipherValue
  fullName: System.Security.Cryptography.Xml.CipherData.CipherValue
- uid: System.Security.Cryptography.Xml.CipherData.GetXml
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: GetXml()
  nameWithType: CipherData.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherData.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: CipherData.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherData.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.CipherData.#ctor*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData
  nameWithType: CipherData.CipherData
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherReference
  nameWithType: CipherData.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherValue
  nameWithType: CipherData.CipherValue
- uid: System.Security.Cryptography.Xml.CipherData.GetXml*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: GetXml
  nameWithType: CipherData.GetXml
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: LoadXml
  nameWithType: CipherData.LoadXml
