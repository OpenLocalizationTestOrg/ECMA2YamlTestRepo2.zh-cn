### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Mouse
  id: Mouse
  children:
  - System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  - System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  - System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)
  - System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  - System.Windows.Input.Mouse.Captured
  - System.Windows.Input.Mouse.DirectlyOver
  - System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])
  - System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.Mouse.GotMouseCaptureEvent
  - System.Windows.Input.Mouse.LeftButton
  - System.Windows.Input.Mouse.LostMouseCaptureEvent
  - System.Windows.Input.Mouse.MiddleButton
  - System.Windows.Input.Mouse.MouseDownEvent
  - System.Windows.Input.Mouse.MouseEnterEvent
  - System.Windows.Input.Mouse.MouseLeaveEvent
  - System.Windows.Input.Mouse.MouseMoveEvent
  - System.Windows.Input.Mouse.MouseUpEvent
  - System.Windows.Input.Mouse.MouseWheelDeltaForOneLine
  - System.Windows.Input.Mouse.MouseWheelEvent
  - System.Windows.Input.Mouse.OverrideCursor
  - System.Windows.Input.Mouse.PreviewMouseDownEvent
  - System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent
  - System.Windows.Input.Mouse.PreviewMouseMoveEvent
  - System.Windows.Input.Mouse.PreviewMouseUpEvent
  - System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent
  - System.Windows.Input.Mouse.PreviewMouseWheelEvent
  - System.Windows.Input.Mouse.PrimaryDevice
  - System.Windows.Input.Mouse.QueryCursorEvent
  - System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  - System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  - System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  - System.Windows.Input.Mouse.RightButton
  - System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)
  - System.Windows.Input.Mouse.Synchronize
  - System.Windows.Input.Mouse.UpdateCursor
  - System.Windows.Input.Mouse.XButton1
  - System.Windows.Input.Mouse.XButton2
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: System.Windows.Input.Mouse
  type: Class
  summary: "将鼠标设备表示为特定线程。"
  remarks: "鼠标类提供鼠标相关的事件、 方法和属性，提供有关鼠标状态的信息。       鼠标定义由基元素类还重新公开附加的事件的每个事件<xref:System.Windows.UIElement>和<xref:System.Windows.ContentElement>为新的路由事件。</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> 通常情况下，会更方便，若要处理的应用程序的鼠标事件<xref:System.Windows.UIElement>和<xref:System.Windows.ContentElement>，而不是使用鼠标事件。</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> 有关详细信息，请参阅[输入概述](~/add/includes/ajax-current-ext-md.md)。       鼠标类的静态成员委托给主<xref:System.Windows.Input.MouseDevice>调用线程的输入管理器。</xref:System.Windows.Input.MouseDevice>"
  syntax:
    content: public static class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.GotMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.GotMouseCapture>"
  syntax:
    content: public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddGotMouseCaptureHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.LostMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.LostMouseCapture>"
  syntax:
    content: public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddLostMouseCaptureHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseDown>附加事件。</xref:System.Windows.Input.Mouse.MouseDown>"
  syntax:
    content: public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseDownHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseEnterHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseEnterHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseEnterHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseEnter>附加事件。</xref:System.Windows.Input.Mouse.MouseEnter>"
  syntax:
    content: public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseEnterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseLeave>附加事件。</xref:System.Windows.Input.Mouse.MouseLeave>"
  syntax:
    content: public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseLeaveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseMoveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseMove>附加事件。</xref:System.Windows.Input.Mouse.MouseMove>"
  syntax:
    content: public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseMoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseUp>附加事件。</xref:System.Windows.Input.Mouse.MouseUp>"
  syntax:
    content: public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseUpHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  id: AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.MouseWheel>附加事件。</xref:System.Windows.Input.Mouse.MouseWheel>"
  syntax:
    content: public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseWheelEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddMouseWheelHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseDown>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>"
  syntax:
    content: public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseDownHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>"
  syntax:
    content: public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseMove>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseMove>"
  syntax:
    content: public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseUp>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUp>"
  syntax:
    content: public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseUpHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>"
  syntax:
    content: public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  id: AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseWheel>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseWheel>"
  syntax:
    content: public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseWheelEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  id: AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  nameWithType: Mouse.AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  fullName: System.Windows.Input.Mouse.AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "添加的处理程序<xref:System.Windows.Input.Mouse.QueryCursor>附加事件。</xref:System.Windows.Input.Mouse.QueryCursor>"
  syntax:
    content: public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.QueryCursorEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.AddQueryCursorHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)
  id: Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: Capture(IInputElement)
  nameWithType: Mouse.Capture(IInputElement)
  fullName: System.Windows.Input.Mouse.Capture(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "鼠标输入捕获到指定的元素。"
  remarks: "在元素捕获鼠标，它会接收鼠标输入，指示光标在其边框内。       如果<xref:System.Windows.Input.CaptureMode>未指定，默认值<xref:System.Windows.Input.CaptureMode>为<xref:System.Windows.Input.CaptureMode>。</xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode>       若要释放鼠标捕获，请调用捕获传递`null`作为要捕获的元素。       如果捕获了鼠标时<xref:System.Windows.Input.Mouse.MouseDown>或<xref:System.Windows.Input.Mouse.MouseUp>引发事件并输入不转到下鼠标，元素<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>和<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>首先引发。</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> </xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>  这可使捕获的元素有机会前释放捕获<xref:System.Windows.Input.Mouse.MouseDown>和<xref:System.Windows.Input.Mouse.MouseUp>路由事件。</xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>"
  example:
  - "The following example shows how to capture the mouse to a specific element by using the Capture method.  \n  \n [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/add/codesnippet/visualbasic/mousecapturesample/window1.xaml.vb#mousecaptursamplecaptureelement)]\n [!code-cs[MouseCaptureSample#MouseCapturSampleCaptureElement](~/add/codesnippet/csharp/MouseCaptureSample/Window1.xaml.cs#mousecaptursamplecaptureelement)]"
  syntax:
    content: public static bool Capture (System.Windows.IInputElement element);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "要捕获鼠标的元素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果元素能够捕获鼠标;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.Mouse.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: Capture(IInputElement,CaptureMode)
  nameWithType: Mouse.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.Mouse.Capture(IInputElement,CaptureMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "鼠标输入捕获到指定的元素使用指定<xref href=&quot;System.Windows.Input.CaptureMode&quot;> </xref>。"
  remarks: "在元素捕获鼠标，它会接收鼠标输入，光标是否在其边框内。       若要释放鼠标捕获，请调用<xref:System.Windows.Input.Mouse.Capture%2A>传递`null`作为要捕获的元素。</xref:System.Windows.Input.Mouse.Capture%2A>       如果捕获了鼠标时<xref:System.Windows.Input.Mouse.MouseDown>或<xref:System.Windows.Input.Mouse.MouseUp>引发事件并输入不转到下鼠标，元素<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>和<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>首先引发。</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> </xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>  这可使捕获的元素有机会前释放捕获<xref:System.Windows.Input.Mouse.MouseDown>和<xref:System.Windows.Input.Mouse.MouseUp>路由事件。</xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>"
  example:
  - "The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.  \n  \n [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/add/codesnippet/visualbasic/mousecapturesample/window1.xaml.vb#mousecaptursamplecaptureelement)]\n [!code-cs[MouseCaptureSample#MouseCapturSampleCaptureElement](~/add/codesnippet/csharp/MouseCaptureSample/Window1.xaml.cs#mousecaptursamplecaptureelement)]"
  syntax:
    content: public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "要捕获鼠标的元素。"
    - id: captureMode
      type: System.Windows.Input.CaptureMode
      description: "要使用的捕获策略。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果元素能够捕获鼠标;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.Mouse.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.Captured
  id: Captured
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: Captured
  nameWithType: Mouse.Captured
  fullName: System.Windows.Input.Mouse.Captured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取已捕获鼠标的元素。"
  remarks: "在元素捕获鼠标，它会接收鼠标输入，指示光标在其边框内。 鼠标仅在拖放操作过程通常在这种方式中捕获和捕获之前发生拖放操作的状态将保持。"
  example:
  - "The follow example shows how to obtain the element that has mouse capture.  \n  \n [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/add/codesnippet/visualbasic/mousecapturesample/window1.xaml.vb#mousecapturemousecaptured)]\n [!code-cs[mousecapturesample#MouseCaptureMouseCaptured](~/add/codesnippet/csharp/MouseCaptureSample/Window1.xaml.cs#mousecapturemousecaptured)]"
  syntax:
    content: public static System.Windows.IInputElement Captured { get; }
    return:
      type: System.Windows.IInputElement
      description: "用鼠标捕获的元素。"
  overload: System.Windows.Input.Mouse.Captured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.DirectlyOver
  id: DirectlyOver
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: DirectlyOver
  nameWithType: Mouse.DirectlyOver
  fullName: System.Windows.Input.Mouse.DirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取鼠标指针位于正上方的元素。"
  remarks: "控件可由多个元素构成。 DirectlyOver 报告中鼠标指针位于复合控件和控件本身的特定元素。 例如，具体情况取决于哪个部分的<xref:System.Windows.Controls.Button>鼠标指针位于、 DirectlyOver 属性可能会报告<xref:System.Windows.Controls.TextBox>的<xref:System.Windows.Controls.ContentControl.Content%2A>属性或<xref:Microsoft.Windows.Themes.ButtonChrome>.</xref:Microsoft.Windows.Themes.ButtonChrome> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button>       使用<xref:System.Windows.IInputElement.IsMouseOver%2A>属性<xref:System.Windows.UIElement>和<xref:System.Windows.ContentElement>确定鼠标是否位于元素，包括其可视子元素或控件复合元素。</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> </xref:System.Windows.IInputElement.IsMouseOver%2A>       如果元素具有鼠标捕获，鼠标指针被视为直接通过该元素中，而不考虑 where 鼠标指针位于。"
  syntax:
    content: public static System.Windows.IInputElement DirectlyOver { get; }
    return:
      type: System.Windows.IInputElement
      description: "元素在鼠标指针位于。"
  overload: System.Windows.Input.Mouse.DirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])
  id: GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: GetIntermediatePoints(IInputElement,Point[])
  nameWithType: Mouse.GetIntermediatePoints(IInputElement,Point[])
  fullName: System.Windows.Input.Mouse.GetIntermediatePoints(IInputElement,Point[])
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "自上一个鼠标移动事件以来检索最多为 64 以前鼠标指针坐标。"
  syntax:
    content: public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "元素`points`所关联的。"
    - id: points
      type: System.Windows.Point[]
      description: "对象的数组。"
    return:
      type: System.Int32
      description: "返回的点数。"
  overload: System.Windows.Input.Mouse.GetIntermediatePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: Mouse.GetPosition(IInputElement)
  fullName: System.Windows.Input.Mouse.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取与指定元素相对的鼠标位置。"
  remarks: "鼠标指针的位置将相对于元素的起点，0，0 的左上角的指定元素计算。       在拖放操作期间的鼠标位置不能可靠地确定通过 GetPosition。 这是因为在放置操作完成，其中许多由基础控制行为之前，鼠标 （可能包括捕获） 的控制由拖动的原始元素[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]调用。 改为尝试以下方法:-调用<xref:System.Windows.DragEventArgs.GetPosition%2A>方法<xref:System.Windows.DragEventArgs>传递给拖动事件 (<xref:System.Windows.ContentElement.DragEnter>， <xref:System.Windows.ContentElement.DragOver>， <xref:System.Windows.ContentElement.DragLeave>)。</xref:System.Windows.ContentElement.DragLeave> </xref:System.Windows.ContentElement.DragOver> </xref:System.Windows.ContentElement.DragEnter> </xref:System.Windows.DragEventArgs> </xref:System.Windows.DragEventArgs.GetPosition%2A>      -调用[解决](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)，使用 P/Invoke。"
  example:
  - "The following example shows how to use GetPosition to determine the position of the mouse pointer.  The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.  The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetspositionmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]"
  syntax:
    content: public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "中要计算的鼠标位置的坐标空间。"
    return:
      type: System.Windows.Point
      description: "相对于参数的鼠标位置<code> relativeTo </code>。"
  overload: System.Windows.Input.Mouse.GetPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.GotMouseCaptureEvent
  id: GotMouseCaptureEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: GotMouseCaptureEvent
  nameWithType: Mouse.GotMouseCaptureEvent
  fullName: System.Windows.Input.Mouse.GotMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.GotMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.GotMouseCapture>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.LeftButton
  id: LeftButton
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: LeftButton
  nameWithType: Mouse.LeftButton
  fullName: System.Windows.Input.Mouse.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取鼠标左键的状态。"
  remarks: ''
  example:
  - "The following example shows how to determine whether the left mouse button is pressed by checking if the state of the LeftButton is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState>.  If the button is pressed, a method is called which updates display elements in the sample.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]"
  syntax:
    content: public static System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "鼠标左键的状态。"
  overload: System.Windows.Input.Mouse.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.LostMouseCaptureEvent
  id: LostMouseCaptureEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: LostMouseCaptureEvent
  nameWithType: Mouse.LostMouseCaptureEvent
  fullName: System.Windows.Input.Mouse.LostMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.LostMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.LostMouseCapture>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MiddleButton
  nameWithType: Mouse.MiddleButton
  fullName: System.Windows.Input.Mouse.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取鼠标中键的鼠标的状态。"
  remarks: ''
  example:
  - "The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the MiddleButton is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState>.  If the button is pressed, a method is called which updates display elements in the sample.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]"
  syntax:
    content: public static System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "鼠标中键的状态。"
  overload: System.Windows.Input.Mouse.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseDownEvent
  id: MouseDownEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseDownEvent
  nameWithType: Mouse.MouseDownEvent
  fullName: System.Windows.Input.Mouse.MouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseDown>附加事件。</xref:System.Windows.Input.Mouse.MouseDown>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseEnterEvent
  nameWithType: Mouse.MouseEnterEvent
  fullName: System.Windows.Input.Mouse.MouseEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseEnter>附加事件。</xref:System.Windows.Input.Mouse.MouseEnter>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseLeaveEvent
  nameWithType: Mouse.MouseLeaveEvent
  fullName: System.Windows.Input.Mouse.MouseLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseLeave>附加事件。</xref:System.Windows.Input.Mouse.MouseLeave>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseMoveEvent
  nameWithType: Mouse.MouseMoveEvent
  fullName: System.Windows.Input.Mouse.MouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseMove>附加事件。</xref:System.Windows.Input.Mouse.MouseMove>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseUpEvent
  id: MouseUpEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseUpEvent
  nameWithType: Mouse.MouseUpEvent
  fullName: System.Windows.Input.Mouse.MouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseUp>附加事件。</xref:System.Windows.Input.Mouse.MouseUp>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine
  id: MouseWheelDeltaForOneLine
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseWheelDeltaForOneLine
  nameWithType: Mouse.MouseWheelDeltaForOneLine
  fullName: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "表示鼠标滚轮转动的单位数滚动一行。"
  remarks: "在当前[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]，此字段的值为 120 个。 公开此字段的目的是为了让供应商以生成更好地解析鼠标轮将来，可能会包含不带齿格自由地旋转滚轮。 应当是此类设备将每条消息中发送更多的消息，每次旋转，但具有较小值。 支持这种可能性，则应将添加的传入的增量值直至 MouseWheelDeltaForOneLine 量达到 （因此的增量旋转你收到相同的响应），或向下滚动到更频繁的消息的响应中的部分行。 你还可以选择自己滚动粒度并聚合的你自己选择增量，直到该增量，为止，或可能引用鼠标敏感度的用户可以控制系统参数并推断这些到鼠标滚轮增量阈值。"
  syntax:
    content: public const int MouseWheelDeltaForOneLine = 120;
    return:
      type: System.Int32
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.MouseWheelEvent
  id: MouseWheelEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: MouseWheelEvent
  nameWithType: Mouse.MouseWheelEvent
  fullName: System.Windows.Input.Mouse.MouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.MouseWheel>附加事件。</xref:System.Windows.Input.Mouse.MouseWheel>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.OverrideCursor
  id: OverrideCursor
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: OverrideCursor
  nameWithType: Mouse.OverrideCursor
  fullName: System.Windows.Input.Mouse.OverrideCursor
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取或设置整个应用程序的光标。"
  remarks: "<xref:System.Windows.Input.Cursor>OverrideCursor 设置为将应用于整个应用程序。</xref:System.Windows.Input.Cursor>       若要清除重写<xref:System.Windows.Input.Cursor>，设置为 OverrideCursor `null`。</xref:System.Windows.Input.Cursor>       设置为 OverrideCursor<xref:System.Windows.Input.Cursors.None%2A>将强制的鼠标光标不显示，但仍然处理鼠标事件。</xref:System.Windows.Input.Cursors.None%2A>"
  example:
  - "The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.  If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and OverrideCursor is set to `null`.  If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and OverrideCursor is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.  \n  \n [!code-cs[cursors#CursorsSampleOverrideCursor](~/add/codesnippet/csharp/cursors/Window1.xaml.cs#cursorssampleoverridecursor)]\n [!code-vb[cursors#CursorsSampleOverrideCursor](~/add/codesnippet/visualbasic/cursors/Window1.xaml.vb#cursorssampleoverridecursor)]"
  syntax:
    content: public static System.Windows.Input.Cursor OverrideCursor { get; set; }
    return:
      type: System.Windows.Input.Cursor
      description: "重写的光标或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果 OverrideCursor 未设置。"
  overload: System.Windows.Input.Mouse.OverrideCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseDownEvent
  id: PreviewMouseDownEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseDownEvent
  nameWithType: Mouse.PreviewMouseDownEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseDown>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent
  id: PreviewMouseDownOutsideCapturedElementEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseDownOutsideCapturedElementEvent
  nameWithType: Mouse.PreviewMouseDownOutsideCapturedElementEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseMoveEvent
  id: PreviewMouseMoveEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseMoveEvent
  nameWithType: Mouse.PreviewMouseMoveEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseMove>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseMove>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseUpEvent
  id: PreviewMouseUpEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseUpEvent
  nameWithType: Mouse.PreviewMouseUpEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseUp>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUp>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent
  id: PreviewMouseUpOutsideCapturedElementEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseUpOutsideCapturedElementEvent
  nameWithType: Mouse.PreviewMouseUpOutsideCapturedElementEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PreviewMouseWheelEvent
  id: PreviewMouseWheelEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PreviewMouseWheelEvent
  nameWithType: Mouse.PreviewMouseWheelEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.PreviewMouseWheel>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseWheel>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.PrimaryDevice
  id: PrimaryDevice
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: PrimaryDevice
  nameWithType: Mouse.PrimaryDevice
  fullName: System.Windows.Input.Mouse.PrimaryDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取主鼠标设备。"
  remarks: "此属性支持的 Windows Presentation Foundation 基础结构，不宜在代码中直接使用。"
  syntax:
    content: public static System.Windows.Input.MouseDevice PrimaryDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "设备。"
  overload: System.Windows.Input.Mouse.PrimaryDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.QueryCursorEvent
  id: QueryCursorEvent
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: QueryCursorEvent
  nameWithType: Mouse.QueryCursorEvent
  fullName: System.Windows.Input.Mouse.QueryCursorEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "标识<xref:System.Windows.Input.Mouse.QueryCursor>附加事件。</xref:System.Windows.Input.Mouse.QueryCursor>"
  remarks: "路由的事件标识符是在注册路由的事件，并将结果存储为注册路由的事件的类上的字段时创建的。 这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用程序方法。 你通常使用这些标识符作为事件系统方法的参数来标识特定的路由的事件。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.GotMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.GotMouseCapture>"
  syntax:
    content: public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.LostMouseCapture>附加事件。</xref:System.Windows.Input.Mouse.LostMouseCapture>"
  syntax:
    content: public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseDown>附加事件。</xref:System.Windows.Input.Mouse.MouseDown>"
  syntax:
    content: public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseDownHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseEnter>附加事件。</xref:System.Windows.Input.Mouse.MouseEnter>"
  syntax:
    content: public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseEnterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseLeave>附加事件。</xref:System.Windows.Input.Mouse.MouseLeave>"
  syntax:
    content: public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseLeaveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseMove>附加事件。</xref:System.Windows.Input.Mouse.MouseMove>"
  syntax:
    content: public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseMoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseUp>附加事件。</xref:System.Windows.Input.Mouse.MouseUp>"
  syntax:
    content: public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseUpHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  id: RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.MouseWheel>附加事件。</xref:System.Windows.Input.Mouse.MouseWheel>"
  syntax:
    content: public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseWheelEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveMouseWheelHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseDown>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>"
  syntax:
    content: public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>"
  syntax:
    content: public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  id: RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseMove>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseMove>"
  syntax:
    content: public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseUp>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUp>"
  syntax:
    content: public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  id: RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>"
  syntax:
    content: public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseButtonEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  id: RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.PreviewMouseWheel>附加事件。</xref:System.Windows.Input.Mouse.PreviewMouseWheel>"
  syntax:
    content: public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.MouseWheelEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  id: RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  nameWithType: Mouse.RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "删除的处理程序<xref:System.Windows.Input.Mouse.QueryCursor>附加事件。</xref:System.Windows.Input.Mouse.QueryCursor>"
  syntax:
    content: public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>或<xref href=&quot;System.Windows.ContentElement&quot;></xref>侦听此事件。"
    - id: handler
      type: System.Windows.Input.QueryCursorEventHandler
      description: "事件处理程序。"
  overload: System.Windows.Input.Mouse.RemoveQueryCursorHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.RightButton
  id: RightButton
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: RightButton
  nameWithType: Mouse.RightButton
  fullName: System.Windows.Input.Mouse.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取右侧的按钮的状态。"
  remarks: ''
  example:
  - "The following example shows how to determine whether the right mouse button is pressed by checking if the state of the RightButton is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState>.  If the button is pressed, a method is called which updates display elements in the sample.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]"
  syntax:
    content: public static System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "鼠标右键按钮的状态。"
  overload: System.Windows.Input.Mouse.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)
  id: SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: SetCursor(Cursor)
  nameWithType: Mouse.SetCursor(Cursor)
  fullName: System.Windows.Input.Mouse.SetCursor(Cursor)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "将鼠标指针设置为指定<xref href=&quot;System.Windows.Input.Cursor&quot;> </xref>。"
  remarks: "要设置的光标不适用于任何特定的元素，但它而是适用于整个应用程序。  因此，如果在设置后鼠标指针移过的对象设置光标的光标，光标将再次更改。       若要强制鼠标指针指向特定<xref:System.Windows.Input.Cursor>以及强制这<xref:System.Windows.Input.Cursor>上所有元素，设置<xref:System.Windows.Input.Mouse.OverrideCursor%2A>属性。</xref:System.Windows.Input.Mouse.OverrideCursor%2A> </xref:System.Windows.Input.Cursor> </xref:System.Windows.Input.Cursor>       若要设置的特定元素的光标，使用<xref:System.Windows.FrameworkElement.Cursor%2A>其中一种<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>。</xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement>属性</xref:System.Windows.FrameworkElement.Cursor%2A>  基元素的详细信息，请参阅[基元素概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static bool SetCursor (System.Windows.Input.Cursor cursor);
    parameters:
    - id: cursor
      type: System.Windows.Input.Cursor
      description: "要将鼠标指针设置到的光标。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果设置游标;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.Mouse.SetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.Synchronize
  id: Synchronize
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: Synchronize()
  nameWithType: Mouse.Synchronize()
  fullName: System.Windows.Input.Mouse.Synchronize()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "强制同步鼠标重新。"
  syntax:
    content: public static void Synchronize ();
    parameters: []
  overload: System.Windows.Input.Mouse.Synchronize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.UpdateCursor
  id: UpdateCursor
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: UpdateCursor()
  nameWithType: Mouse.UpdateCursor()
  fullName: System.Windows.Input.Mouse.UpdateCursor()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "强制更新鼠标光标。"
  syntax:
    content: public static void UpdateCursor ();
    parameters: []
  overload: System.Windows.Input.Mouse.UpdateCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.XButton1
  id: XButton1
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: XButton1
  nameWithType: Mouse.XButton1
  fullName: System.Windows.Input.Mouse.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取第一个扩展按钮的状态。"
  remarks: ''
  example:
  - "The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of XButton1 is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState>.  If the button is pressed, a method is called which updates display elements in the sample.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]"
  syntax:
    content: public static System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "第一个鼠标扩展的按钮的状态。"
  overload: System.Windows.Input.Mouse.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Mouse.XButton2
  id: XButton2
  parent: System.Windows.Input.Mouse
  langs:
  - csharp
  name: XButton2
  nameWithType: Mouse.XButton2
  fullName: System.Windows.Input.Mouse.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取第二个扩展按钮的状态。"
  remarks: ''
  example:
  - "The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of XButton2 is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState>.  If the button is pressed, a method is called which updates display elements in the sample.  \n  \n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/add/codesnippet/visualbasic/mouserelatedsnippets/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]\n [!code-cs[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/add/codesnippet/csharp/MouseRelatedSnippets/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]"
  syntax:
    content: public static System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "第二个鼠标扩展的按钮的状态。"
  overload: System.Windows.Input.Mouse.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseDownHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseEnterHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseEnterHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseEnterHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseLeaveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseMoveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseUpHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.AddMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
- uid: System.Windows.Input.MouseWheelEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventHandler
  nameWithType: MouseWheelEventHandler
  fullName: System.Windows.Input.MouseWheelEventHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
- uid: System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  nameWithType: Mouse.AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  fullName: System.Windows.Input.Mouse.AddQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
- uid: System.Windows.Input.QueryCursorEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventHandler
  nameWithType: QueryCursorEventHandler
  fullName: System.Windows.Input.QueryCursorEventHandler
- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Capture(IInputElement)
  nameWithType: Mouse.Capture(IInputElement)
  fullName: System.Windows.Input.Mouse.Capture(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Capture(IInputElement,CaptureMode)
  nameWithType: Mouse.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.Mouse.Capture(IInputElement,CaptureMode)
- uid: System.Windows.Input.CaptureMode
  parent: System.Windows.Input
  isExternal: false
  name: CaptureMode
  nameWithType: CaptureMode
  fullName: System.Windows.Input.CaptureMode
- uid: System.Windows.Input.Mouse.Captured
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Captured
  nameWithType: Mouse.Captured
  fullName: System.Windows.Input.Mouse.Captured
- uid: System.Windows.Input.Mouse.DirectlyOver
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: DirectlyOver
  nameWithType: Mouse.DirectlyOver
  fullName: System.Windows.Input.Mouse.DirectlyOver
- uid: System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: GetIntermediatePoints(IInputElement,Point[])
  nameWithType: Mouse.GetIntermediatePoints(IInputElement,Point[])
  fullName: System.Windows.Input.Mouse.GetIntermediatePoints(IInputElement,Point[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Point[]
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point[]
  spec.csharp:
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: Mouse.GetPosition(IInputElement)
  fullName: System.Windows.Input.Mouse.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Input.Mouse.GotMouseCaptureEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: GotMouseCaptureEvent
  nameWithType: Mouse.GotMouseCaptureEvent
  fullName: System.Windows.Input.Mouse.GotMouseCaptureEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.Mouse.LeftButton
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: LeftButton
  nameWithType: Mouse.LeftButton
  fullName: System.Windows.Input.Mouse.LeftButton
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.Mouse.LostMouseCaptureEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: LostMouseCaptureEvent
  nameWithType: Mouse.LostMouseCaptureEvent
  fullName: System.Windows.Input.Mouse.LostMouseCaptureEvent
- uid: System.Windows.Input.Mouse.MiddleButton
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MiddleButton
  nameWithType: Mouse.MiddleButton
  fullName: System.Windows.Input.Mouse.MiddleButton
- uid: System.Windows.Input.Mouse.MouseDownEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseDownEvent
  nameWithType: Mouse.MouseDownEvent
  fullName: System.Windows.Input.Mouse.MouseDownEvent
- uid: System.Windows.Input.Mouse.MouseEnterEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseEnterEvent
  nameWithType: Mouse.MouseEnterEvent
  fullName: System.Windows.Input.Mouse.MouseEnterEvent
- uid: System.Windows.Input.Mouse.MouseLeaveEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseLeaveEvent
  nameWithType: Mouse.MouseLeaveEvent
  fullName: System.Windows.Input.Mouse.MouseLeaveEvent
- uid: System.Windows.Input.Mouse.MouseMoveEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseMoveEvent
  nameWithType: Mouse.MouseMoveEvent
  fullName: System.Windows.Input.Mouse.MouseMoveEvent
- uid: System.Windows.Input.Mouse.MouseUpEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseUpEvent
  nameWithType: Mouse.MouseUpEvent
  fullName: System.Windows.Input.Mouse.MouseUpEvent
- uid: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseWheelDeltaForOneLine
  nameWithType: Mouse.MouseWheelDeltaForOneLine
  fullName: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine
- uid: System.Windows.Input.Mouse.MouseWheelEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MouseWheelEvent
  nameWithType: Mouse.MouseWheelEvent
  fullName: System.Windows.Input.Mouse.MouseWheelEvent
- uid: System.Windows.Input.Mouse.OverrideCursor
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: OverrideCursor
  nameWithType: Mouse.OverrideCursor
  fullName: System.Windows.Input.Mouse.OverrideCursor
- uid: System.Windows.Input.Cursor
  parent: System.Windows.Input
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Input.Cursor
- uid: System.Windows.Input.Mouse.PreviewMouseDownEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseDownEvent
  nameWithType: Mouse.PreviewMouseDownEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseDownEvent
- uid: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseDownOutsideCapturedElementEvent
  nameWithType: Mouse.PreviewMouseDownOutsideCapturedElementEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent
- uid: System.Windows.Input.Mouse.PreviewMouseMoveEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseMoveEvent
  nameWithType: Mouse.PreviewMouseMoveEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseMoveEvent
- uid: System.Windows.Input.Mouse.PreviewMouseUpEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseUpEvent
  nameWithType: Mouse.PreviewMouseUpEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseUpEvent
- uid: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseUpOutsideCapturedElementEvent
  nameWithType: Mouse.PreviewMouseUpOutsideCapturedElementEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent
- uid: System.Windows.Input.Mouse.PreviewMouseWheelEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PreviewMouseWheelEvent
  nameWithType: Mouse.PreviewMouseWheelEvent
  fullName: System.Windows.Input.Mouse.PreviewMouseWheelEvent
- uid: System.Windows.Input.Mouse.PrimaryDevice
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PrimaryDevice
  nameWithType: Mouse.PrimaryDevice
  fullName: System.Windows.Input.Mouse.PrimaryDevice
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Windows.Input.Mouse.QueryCursorEvent
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: QueryCursorEvent
  nameWithType: Mouse.QueryCursorEvent
  fullName: System.Windows.Input.Mouse.QueryCursorEvent
- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseDownHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseEnterHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseMoveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseUpHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  nameWithType: Mouse.RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(DependencyObject,MouseEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject,MouseButtonEventHandler)
- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  nameWithType: Mouse.RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
  fullName: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(DependencyObject,MouseWheelEventHandler)
- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  nameWithType: Mouse.RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
  fullName: System.Windows.Input.Mouse.RemoveQueryCursorHandler(DependencyObject,QueryCursorEventHandler)
- uid: System.Windows.Input.Mouse.RightButton
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RightButton
  nameWithType: Mouse.RightButton
  fullName: System.Windows.Input.Mouse.RightButton
- uid: System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: SetCursor(Cursor)
  nameWithType: Mouse.SetCursor(Cursor)
  fullName: System.Windows.Input.Mouse.SetCursor(Cursor)
- uid: System.Windows.Input.Mouse.Synchronize
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Synchronize()
  nameWithType: Mouse.Synchronize()
  fullName: System.Windows.Input.Mouse.Synchronize()
- uid: System.Windows.Input.Mouse.UpdateCursor
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: UpdateCursor()
  nameWithType: Mouse.UpdateCursor()
  fullName: System.Windows.Input.Mouse.UpdateCursor()
- uid: System.Windows.Input.Mouse.XButton1
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: XButton1
  nameWithType: Mouse.XButton1
  fullName: System.Windows.Input.Mouse.XButton1
- uid: System.Windows.Input.Mouse.XButton2
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: XButton2
  nameWithType: Mouse.XButton2
  fullName: System.Windows.Input.Mouse.XButton2
- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddGotMouseCaptureHandler
  nameWithType: Mouse.AddGotMouseCaptureHandler
- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddLostMouseCaptureHandler
  nameWithType: Mouse.AddLostMouseCaptureHandler
- uid: System.Windows.Input.Mouse.AddMouseDownHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseDownHandler
  nameWithType: Mouse.AddMouseDownHandler
- uid: System.Windows.Input.Mouse.AddMouseEnterHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseEnterHandler
  nameWithType: Mouse.AddMouseEnterHandler
- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseLeaveHandler
  nameWithType: Mouse.AddMouseLeaveHandler
- uid: System.Windows.Input.Mouse.AddMouseMoveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseMoveHandler
  nameWithType: Mouse.AddMouseMoveHandler
- uid: System.Windows.Input.Mouse.AddMouseUpHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseUpHandler
  nameWithType: Mouse.AddMouseUpHandler
- uid: System.Windows.Input.Mouse.AddMouseWheelHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddMouseWheelHandler
  nameWithType: Mouse.AddMouseWheelHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseDownHandler
  nameWithType: Mouse.AddPreviewMouseDownHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseDownOutsideCapturedElementHandler
  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseMoveHandler
  nameWithType: Mouse.AddPreviewMouseMoveHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseUpHandler
  nameWithType: Mouse.AddPreviewMouseUpHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseUpOutsideCapturedElementHandler
  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler
- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddPreviewMouseWheelHandler
  nameWithType: Mouse.AddPreviewMouseWheelHandler
- uid: System.Windows.Input.Mouse.AddQueryCursorHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: AddQueryCursorHandler
  nameWithType: Mouse.AddQueryCursorHandler
- uid: System.Windows.Input.Mouse.Capture*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Capture
  nameWithType: Mouse.Capture
- uid: System.Windows.Input.Mouse.Captured*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Captured
  nameWithType: Mouse.Captured
- uid: System.Windows.Input.Mouse.DirectlyOver*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: DirectlyOver
  nameWithType: Mouse.DirectlyOver
- uid: System.Windows.Input.Mouse.GetIntermediatePoints*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: GetIntermediatePoints
  nameWithType: Mouse.GetIntermediatePoints
- uid: System.Windows.Input.Mouse.GetPosition*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: GetPosition
  nameWithType: Mouse.GetPosition
- uid: System.Windows.Input.Mouse.LeftButton*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: LeftButton
  nameWithType: Mouse.LeftButton
- uid: System.Windows.Input.Mouse.MiddleButton*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: MiddleButton
  nameWithType: Mouse.MiddleButton
- uid: System.Windows.Input.Mouse.OverrideCursor*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: OverrideCursor
  nameWithType: Mouse.OverrideCursor
- uid: System.Windows.Input.Mouse.PrimaryDevice*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: PrimaryDevice
  nameWithType: Mouse.PrimaryDevice
- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveGotMouseCaptureHandler
  nameWithType: Mouse.RemoveGotMouseCaptureHandler
- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveLostMouseCaptureHandler
  nameWithType: Mouse.RemoveLostMouseCaptureHandler
- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseDownHandler
  nameWithType: Mouse.RemoveMouseDownHandler
- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseEnterHandler
  nameWithType: Mouse.RemoveMouseEnterHandler
- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseLeaveHandler
  nameWithType: Mouse.RemoveMouseLeaveHandler
- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseMoveHandler
  nameWithType: Mouse.RemoveMouseMoveHandler
- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseUpHandler
  nameWithType: Mouse.RemoveMouseUpHandler
- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveMouseWheelHandler
  nameWithType: Mouse.RemoveMouseWheelHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseDownHandler
  nameWithType: Mouse.RemovePreviewMouseDownHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseDownOutsideCapturedElementHandler
  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseMoveHandler
  nameWithType: Mouse.RemovePreviewMouseMoveHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseUpHandler
  nameWithType: Mouse.RemovePreviewMouseUpHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseUpOutsideCapturedElementHandler
  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler
- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemovePreviewMouseWheelHandler
  nameWithType: Mouse.RemovePreviewMouseWheelHandler
- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RemoveQueryCursorHandler
  nameWithType: Mouse.RemoveQueryCursorHandler
- uid: System.Windows.Input.Mouse.RightButton*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: RightButton
  nameWithType: Mouse.RightButton
- uid: System.Windows.Input.Mouse.SetCursor*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: SetCursor
  nameWithType: Mouse.SetCursor
- uid: System.Windows.Input.Mouse.Synchronize*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: Synchronize
  nameWithType: Mouse.Synchronize
- uid: System.Windows.Input.Mouse.UpdateCursor*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: UpdateCursor
  nameWithType: Mouse.UpdateCursor
- uid: System.Windows.Input.Mouse.XButton1*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: XButton1
  nameWithType: Mouse.XButton1
- uid: System.Windows.Input.Mouse.XButton2*
  parent: System.Windows.Input.Mouse
  isExternal: false
  name: XButton2
  nameWithType: Mouse.XButton2
