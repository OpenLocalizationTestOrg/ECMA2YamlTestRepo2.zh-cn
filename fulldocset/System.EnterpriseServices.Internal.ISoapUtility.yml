### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ISoapUtility
  id: ISoapUtility
  children:
  - System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.ISoapUtility.Present
  langs:
  - csharp
  name: ISoapUtility
  nameWithType: ISoapUtility
  fullName: System.EnterpriseServices.Internal.ISoapUtility
  type: Interface
  summary: "提供实用工具，支持在启用 COM + SOAP 的应用程序代理服务器和客户端代理的导入的导出。"
  remarks: "从在 COM + 中; 中的多个位置调用 ISoapUtility 提供的实用工具函数但是，它们的主要目的是支持的导出和导入的客户端代理。       请参阅<xref:System.EnterpriseServices.Internal.SoapUtility>的默认实现。</xref:System.EnterpriseServices.Internal.SoapUtility>       ISoapUtility 由.NET Framework 在内部使用。 不需要在代码中直接使用它。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("5AC4CB7E-F89F-429b-926B-C7F940936BF4")]

      public interface ISoapUtility
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)
  id: GetServerBinPath(System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapUtility
  langs:
  - csharp
  name: GetServerBinPath(String,String,String,String)
  nameWithType: ISoapUtility.GetServerBinPath(String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "返回 SOAP 虚拟根目录的 bin 目录的路径。"
  syntax:
    content: public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "根 Web 服务器。"
    - id: inBaseUrl
      type: System.String
      description: "基 URL 地址。"
    - id: inVirtualRoot
      type: System.String
      description: "虚拟根目录的名称。"
    - id: binPath
      type: System.String
      description: "此方法返回时，此参数将包含 SOAP 虚拟根目录的 bin 目录的文件路径。"
  overload: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "中的调用链的调用方没有访问非托管的代码的权限。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "SOAP 实用程序不可用。"
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "用于获取系统目录的调用失败。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)
  id: GetServerPhysicalPath(System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapUtility
  langs:
  - csharp
  name: GetServerPhysicalPath(String,String,String,String)
  nameWithType: ISoapUtility.GetServerPhysicalPath(String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "返回的 SOAP 虚拟根目录的路径。"
  syntax:
    content: public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "根 Web 服务器。"
    - id: inBaseUrl
      type: System.String
      description: "基 URL 地址。"
    - id: inVirtualRoot
      type: System.String
      description: "虚拟根目录的名称。"
    - id: physicalPath
      type: System.String
      description: "此方法返回时，此参数将包含 SOAP 虚拟根目录的文件路径。"
  overload: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "中的调用链的调用方没有访问非托管的代码的权限。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "SOAP 实用程序不可用。"
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "用于获取系统目录的调用失败。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapUtility.Present
  id: Present
  parent: System.EnterpriseServices.Internal.ISoapUtility
  langs:
  - csharp
  name: Present()
  nameWithType: ISoapUtility.Present()
  fullName: System.EnterpriseServices.Internal.ISoapUtility.Present()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "确定是否经过身份验证，加密的 SOAP 接口存在。"
  syntax:
    content: public void Present ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ISoapUtility.Present*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "中的调用链的调用方没有访问非托管的代码的权限。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "SOAP 实用程序不可用。"
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: GetServerBinPath(String,String,String,String)
  nameWithType: ISoapUtility.GetServerBinPath(String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: GetServerPhysicalPath(String,String,String,String)
  nameWithType: ISoapUtility.GetServerPhysicalPath(String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(String,String,String,String)
- uid: System.EnterpriseServices.Internal.ISoapUtility.Present
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: Present()
  nameWithType: ISoapUtility.Present()
  fullName: System.EnterpriseServices.Internal.ISoapUtility.Present()
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath*
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: GetServerBinPath
  nameWithType: ISoapUtility.GetServerBinPath
- uid: System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath*
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: GetServerPhysicalPath
  nameWithType: ISoapUtility.GetServerPhysicalPath
- uid: System.EnterpriseServices.Internal.ISoapUtility.Present*
  parent: System.EnterpriseServices.Internal.ISoapUtility
  isExternal: false
  name: Present
  nameWithType: ISoapUtility.Present
