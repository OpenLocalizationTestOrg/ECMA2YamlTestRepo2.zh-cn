### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreRights
  id: SemaphoreRights
  children:
  - System.Security.AccessControl.SemaphoreRights.ChangePermissions
  - System.Security.AccessControl.SemaphoreRights.Delete
  - System.Security.AccessControl.SemaphoreRights.FullControl
  - System.Security.AccessControl.SemaphoreRights.Modify
  - System.Security.AccessControl.SemaphoreRights.ReadPermissions
  - System.Security.AccessControl.SemaphoreRights.Synchronize
  - System.Security.AccessControl.SemaphoreRights.TakeOwnership
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
  type: Enum
  summary: "指定可应用于的访问控制权限命名系统信号量对象。"
  remarks: "使用 SemaphoreRights 枚举指定访问控制权限，在创建时<xref:System.Security.AccessControl.SemaphoreSecurity>对象。</xref:System.Security.AccessControl.SemaphoreSecurity> 若要应用到已命名的系统信号量的访问权限，请使用<xref:System.Security.AccessControl.SemaphoreSecurity>对象与<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName>构造函数和<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>方法。</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>       基础 Windows 访问权限的数字值，请参阅[同步对象安全和访问权限 (Windows)](http://go.microsoft.com/fwlink/p/?LinkId=243073) MSDN 库中。      1> [!NOTE] 1> Windows 98 或 Windows Millennium Edition 不支持同步对象的安全性。"
  example:
  - "The following code example demonstrates the use of SemaphoreRights values when creating and using <xref:System.Security.AccessControl.SemaphoreAccessRule> objects. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType?displayProperty=fullName>rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to an <xref:System.Threading.Semaphore> object; see <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> method, and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_10_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_10_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(false)]

      public enum SemaphoreRights
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  id: ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "若要更改安全和审核规则与命名信号量关联权限。"
  syntax:
    content: ChangePermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  id: Delete
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "删除名称为信号量的权限。"
  syntax:
    content: Delete
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  id: FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "若要对名称为信号量，进行完全控制，并将修改其访问规则和审核规则的权限。"
  syntax:
    content: FullControl
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  id: Modify
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "若要释放命名信号量中的权限。"
  syntax:
    content: Modify
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  id: ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "打开和复制的访问规则和审核权限的规则的名称为信号量。"
  syntax:
    content: ReadPermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  id: Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "在名称为信号量上等待的权限。"
  syntax:
    content: Synchronize
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  id: TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "若要更改名称为信号量的所有者权限。"
  syntax:
    content: TakeOwnership
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
