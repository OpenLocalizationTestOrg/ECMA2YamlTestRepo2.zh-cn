### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StorePermission
  id: StorePermission
  children:
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  - System.Security.Permissions.StorePermission.Copy
  - System.Security.Permissions.StorePermission.Flags
  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsUnrestricted
  - System.Security.Permissions.StorePermission.ToXml
  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: StorePermission
  nameWithType: StorePermission
  fullName: System.Security.Permissions.StorePermission
  type: Class
  summary: "控制对访问存储包含 X.509 证书。 此类不能被继承。"
  remarks: "StorePermission 控制的代码的访问权限授予到 X.509 存储。 权限取决于表示将应用到每个存储的访问级别的标志。"
  syntax:
    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.StorePermission&quot;></xref>类任一完全限制或不受限制的权限状态。"
  remarks: "权限对象提供完全受限制 (`None`) 或`Unrestricted`对 X.509 存储区的访问。 如果完全受限制 (`None`)，则<xref:System.Security.Permissions.StorePermission.Flags%2A>然后可以将属性设置为指定的允许访问的类型。</xref:System.Security.Permissions.StorePermission.Flags%2A>"
  syntax:
    content: public StorePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "之一<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>不是有效<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.StorePermission&quot;></xref>的指定访问权限的类。"
  remarks: "`flag`参数指定对 X.509 存储区的允许访问权限。 指定的允许访问情况适用于所有存储区。 不能指定对各个商店的访问。"
  syntax:
    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.StorePermissionFlags
      description: "按位组合<xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;></xref>值。"
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flag</code>不是有效的组合<xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;></xref>值。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Copy
  id: Copy
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "创建并返回当前权限的相同副本。"
  remarks: "与原始权限情况下，一份权限表示对资源的相同的访问权限。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "当前权限的副本。"
  overload: System.Security.Permissions.StorePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Flags
  id: Flags
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "获取或设置的一种<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Store&quot;></xref>当前权限允许访问。"
  remarks: "Flags 属性指定对 X.509 存储区的允许访问权限。 X.509 存储是用于持久保存和管理 X.509 证书的物理存储。"
  syntax:
    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.StorePermissionFlags
      description: "按位组合<xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;></xref>值。"
  overload: System.Security.Permissions.StorePermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "尝试将此属性设置为无效值。 请参阅<xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;></xref>为有效的值。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "重新构造具有指定状态的 XML 编码的权限。"
  remarks: "FromXml 方法重新构造<xref:System.Security.Permissions.StorePermission>从 XML 编码的对象定义的<xref:System.Security.SecurityElement>类。</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.StorePermission> 使用<xref:System.Security.Permissions.StorePermission.ToXml%2A>方法进行 XML 编码<xref:System.Security.Permissions.StorePermission>，包括状态信息。</xref:System.Security.Permissions.StorePermission> </xref:System.Security.Permissions.StorePermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>包含的 XML 编码要用于重新构造权限。"
  overload: System.Security.Permissions.StorePermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>不是有效的权限元素。       -中的版本号<code>securityElement</code>无效。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "创建并返回是当前权限和指定的权限的交集的权限。"
  remarks: "以下两个权限的交集是描述的一组共同描述这两个权限的操作的权限。 仅通过两个原始权限的请求将通过该交集。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要与当前权限相交的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示当前权限和指定的权限的交集的一个新权限。 此新权限为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集为空。"
  overload: System.Security.Permissions.StorePermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>s 不<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "确定当前权限是否为指定权限的子集。"
  remarks: "如果当前权限指定一组完全包含在指定权限的操作，当前权限是指定权限的子集。 例如，表示对 C:\\example.txt 访问权限的权限是到 c︰ 表示访问权限的子集\\\\。 如果此方法返回`true`，当前的权限表示对受保护资源的访问权限不超过指定的权限。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "将要测试子集关系的权限。 此权限必须是与当前权限属于同一类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限是指定权限; 的子集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.StorePermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "返回一个值，该值指示当前权限是否不受限制。"
  remarks: "无限制的权限表示对权限所保护的所有资源的访问权限。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限不受限制;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.StorePermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "创建权限及其当前状态的 XML 编码。"
  remarks: "使用<xref:System.Security.Permissions.StorePermission.FromXml%2A>要还原状态信息从一种<xref:System.Security.SecurityElement>。</xref:System.Security.SecurityElement>方法</xref:System.Security.Permissions.StorePermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>包含的权限，包括任何状态信息的 XML 编码。"
  overload: System.Security.Permissions.StorePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "创建兼具当前权限和指定的权限的权限。"
  remarks: "对联合的调用的结果是由当前权限和指定的权限表示所表示的所有操作的权限。 任何请求都会通过任一权限传递其联合。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要与当前权限合并的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示同时兼具当前权限和指定的权限的新权限。"
  overload: System.Security.Permissions.StorePermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>并且不是与当前权限属于同一类型。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
- uid: System.Security.Permissions.StorePermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: StorePermissionFlags
  nameWithType: StorePermissionFlags
  fullName: System.Security.Permissions.StorePermissionFlags
- uid: System.Security.Permissions.StorePermission.Copy
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StorePermission.Flags
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
- uid: System.Security.Permissions.StorePermission.ToXml
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
- uid: System.Security.Permissions.StorePermission.#ctor*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission
  nameWithType: StorePermission.StorePermission
- uid: System.Security.Permissions.StorePermission.Copy*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy
  nameWithType: StorePermission.Copy
- uid: System.Security.Permissions.StorePermission.Flags*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml
  nameWithType: StorePermission.FromXml
- uid: System.Security.Permissions.StorePermission.Intersect*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect
  nameWithType: StorePermission.Intersect
- uid: System.Security.Permissions.StorePermission.IsSubsetOf*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StorePermission.IsSubsetOf
- uid: System.Security.Permissions.StorePermission.IsUnrestricted*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: StorePermission.IsUnrestricted
- uid: System.Security.Permissions.StorePermission.ToXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml
  nameWithType: StorePermission.ToXml
- uid: System.Security.Permissions.StorePermission.Union*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union
  nameWithType: StorePermission.Union
