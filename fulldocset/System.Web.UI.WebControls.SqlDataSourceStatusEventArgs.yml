### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  id: SqlDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  type: Class
  summary: "由引发的事件提供数据<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>控制数据操作完成后。"
  remarks: "中使用 SqlDataSourceStatusEventArgs 类<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，和<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件传递有关数据库操作的信息之后执行的数据, 源控件。</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Selected> 此信息包括的操作，所影响的行数<xref:System.Data.Common.DbCommand>数据源用来执行此操作，以及导致的任何异常信息的对象。</xref:System.Data.Common.DbCommand> 通过添加要处理的事件处理程序委托<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件，你可以检查此数据并执行任何所需的其他文章处理。</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Selected>       <xref:System.Web.UI.WebControls.SqlDataSource>控件可公开可以处理数据操作的过程期间使用基础数据对象的多个事件。</xref:System.Web.UI.WebControls.SqlDataSource> 下表列出的事件和关联<xref:System.EventArgs>和事件处理程序类，以更好地引导您找到对应的数据操作使用生命周期的各种事件<xref:System.Web.UI.WebControls.SqlDataSource>控件。</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.EventArgs>      |事件 |EventArgs |EventHandler |  |-----------|---------------|------------------|  |<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>发生之前检索的数据。 |<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>， <xref:System.Web.UI.WebControls.SqlDataSource.Updating>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>发生之前插入、 更新或删除操作执行。 |<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>晚数据检索、 插入、 更新或删除操作完成。 |SqlDataSourceStatusEventArgs |<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to use the SqlDataSourceStatusEventArgs class to examine the return value and values of output parameters that are returned when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure to populate a <xref:System.Web.UI.WebControls.GridView> control. The stored procedure selects data that is displayed in the <xref:System.Web.UI.WebControls.GridView>, but also passes other information back to the caller, such as an integer output parameter and a return value. The parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure are contained by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection, and consist of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. The <xref:System.Web.UI.WebControls.Parameter.Direction%2A> property of these parameters is set to <xref:System.Data.ParameterDirection> and <xref:System.Data.ParameterDirection>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  id: '#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;></xref>类，使用指定的输出参数、 返回值和数据库操作所影响的行数。"
  syntax:
    content: public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>对数据库所表示的数据库查询、 命令或提交的存储的过程<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>控件。"
    - id: affectedRows
      type: System.Int32
      description: "如果适用，数据库操作中，受影响的行数。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>操作引发的数据库，有可能的话。</xref:System.Exception>"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数据库操作所影响的行数。"
  remarks: "所有操作都返回操作影响的行的数。 AffectedRows 属性具有相同的值的返回值<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>， <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>，和<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>方法。</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       当<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>调用方法和数据源设置为<xref:System.Web.UI.WebControls.SqlDataSourceMode>模式时，返回值是在所有情况下均为 0。</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "数据库操作所影响的行数。 默认值为 -1。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取提交到数据库的数据库命令。"
  remarks: "你可以处理<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件来检查和操作的属性<xref:System.Data.Common.DbCommand>通过提交后<xref:System.Web.UI.WebControls.SqlDataSource>控件添加到数据库。</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Selected> 命令属性使您能够访问返回的值和在任何输出参数中的值，通过执行数据库操作后其<xref:System.Data.Common.DbCommand.Parameters%2A>属性，以及<xref:System.Data.Common.DbCommand.CommandText%2A>属性，它表示对数据库的 SQL 查询、 命令或已提交的存储的过程名称。</xref:System.Data.Common.DbCommand.CommandText%2A> </xref:System.Data.Common.DbCommand.Parameters%2A>       任何输出参数都来自参数具有特定的<xref:System.Data.ParameterDirection>或<xref:System.Data.ParameterDirection>值<xref:System.Web.UI.WebControls.Parameter.Direction%2A>属性<xref:System.Web.UI.WebControls.Parameter>对象。</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.Data.ParameterDirection> </xref:System.Data.ParameterDirection> 一个返回值是从参数具有<xref:System.Data.ParameterDirection>值。</xref:System.Data.ParameterDirection>"
  example:
  - "The following code example demonstrates how to examine the values of output parameters when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contains the parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure, and consists of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> class.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_542_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_542_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>对象，表示数据库命令提交到数据库。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数据操作期间数据库引发任何异常包装器。"
  remarks: "<xref:System.Exception>属性不表示实际由数据库操作引发的异常。</xref:System.Exception> 引发的异常使用可以访问<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A>"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>包装中的数据库所引发的任何异常及其<xref:System.Exception.InnerException*>属性。</xref:System.Exception.InnerException*> </xref:System.Exception>"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否已处理数据库所引发的异常。"
  remarks: "如果数据库引发了异常，ExceptionHandled 属性设置为`false`和异常由包装<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>属性。</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> 如果你使用<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>，你可以检查<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>属性并处理该异常。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler> 如果处理异常，则将 ExceptionHandled 属性设置为`true`或<xref:System.Web.UI.WebControls.SqlDataSource>控件将引发异常。</xref:System.Web.UI.WebControls.SqlDataSource>"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据库引发的异常已处理，并且不应由引发<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>控件的指针; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
