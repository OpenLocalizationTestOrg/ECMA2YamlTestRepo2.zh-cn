### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.SearchExpression
  id: SearchExpression
  children:
  - System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  - System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  - System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  - System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  langs:
  - csharp
  name: SearchExpression
  nameWithType: SearchExpression
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression
  type: Class
  summary: "使您能够搜索的字段或字段的字符串值，并将它们为指定的字符串值。"
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>控件提供了通过使用 SearchExpression 类网页中的筛选器数据的功能</xref:System.Web.UI.WebControls.QueryExtender> SearchExpression 类比较中的字段或为你提供的值的字段的指定的字符串。 表达式执行&quot;开头为&quot;、&quot;包含&quot;结尾为&quot;搜索。 必须指定值<xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A>和<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A>以指示你想要执行的搜索和您想要搜索的数据字段的类型的属性。</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> </xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> 如果你在中使用 LINQ 提供程序<xref:System.Web.UI.WebControls.QueryExtender>控件支持区分大小写，则可以使用<xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A>属性来启用或不区分大小写。</xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> </xref:System.Web.UI.WebControls.QueryExtender>       要搜索的值可以由[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]控件。 若要指定此参数，将设置<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>属性<xref:System.Web.UI.WebControls.ControlParameter>SearchExpression 对象的 id 中的类[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]控件。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 例如，如果在文本框中，输入要搜索的值<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>属性必须设置为在文本框控件的 ID。</xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 你可以与其他表达式结合使用 SearchExpression 类，<xref:System.Web.UI.WebControls.QueryExtender>支持，如<xref:System.Web.UI.WebControls.Expressions.RangeExpression>筛选器。</xref:System.Web.UI.WebControls.Expressions.RangeExpression> </xref:System.Web.UI.WebControls.QueryExtender> 例如，你可以搜索包含字符串&quot;tea&quot;和定价介于 100 和 200 之间的产品名称。"
  example:
  - "The following example shows how to search the Name column in the Products table of the AdventureWorks database for products whose that start with the string that is specified in the `SearchTextBox` control. The result that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref>类。"
  syntax:
    content: public SearchExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  id: ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置要执行的字符串比较的类型。"
  remarks: "此属性使您能够使用<xref:System.StringComparison>枚举来指定如何执行搜索。</xref:System.StringComparison> <xref:System.StringComparison>枚举用于指定字符串比较是否使用当前区域性或固定区域性，以及其是否使用文本或序号排序规则。</xref:System.StringComparison> 如果数据提供程序，<xref:System.Web.UI.WebControls.QueryExtender>使用支持区分大小写，可以使用比较类型属性之一来启用或不区分大小写。</xref:System.Web.UI.WebControls.QueryExtender>"
  syntax:
    content: public StringComparison ComparisonType { get; set; }
    return:
      type: System.StringComparison
      description: "若要执行的字符串比较的类型。"
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  id: DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取和设置的单个字段或要搜索的字段以逗号分隔列表。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression>类中指定的表中的一个或多个数据字段执行搜索。</xref:System.Web.UI.WebControls.Expressions.SearchExpression> 必须指定至少一个数据字段<xref:System.Web.UI.WebControls.Expressions.SearchExpression>实例。</xref:System.Web.UI.WebControls.Expressions.SearchExpression> 如果指定多个数据字段，请使用逗号分隔的字段。"
  example:
  - "The following example shows how to search the Name and the ProductNumber data fields in the Products table of the AdventureWorks database for products that have names that start with a specified string. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:SearchExpression SearchType=\"StartsWith\"   \n      DataFields=\"Name\",\"ProductNumber\" >  \n  <asp:ControlParameter ControlID=\"SearchTextBox\" />  \n</asp:SearchExpression>  \n```"
  syntax:
    content: public string DataFields { get; set; }
    return:
      type: System.String
      description: "字段或要搜索字段。"
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "DataFields 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "适用<xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref>到指定的对象<xref:System.Linq.IQueryable>对象基于<xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;></xref>对象。</xref:System.Linq.IQueryable>"
  remarks: "此属性的计算结果中使用的参数的集合<xref:System.Web.UI.WebControls.Expressions.SearchExpression>对象，并将表达式应用于<xref:System.Linq.IQueryable>对象。</xref:System.Linq.IQueryable> </xref:System.Web.UI.WebControls.Expressions.SearchExpression> 如果指定了多个数据字段，`AND`运算符应用于数据字段。"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "要使用的对象。"
    return:
      type: System.Linq.IQueryable
      description: "实例<xref:System.Linq.IQueryable>对象<xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref>已应用于。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  id: SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置<xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;></xref>值，该值确定在字符串中搜索出现的位置。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.SearchType>属性使用<xref:System.Web.UI.WebControls.Expressions.SearchType>枚举，其中包含要使用的<xref:System.Web.UI.WebControls.Expressions.SearchExpression>类</xref:System.Web.UI.WebControls.Expressions.SearchExpression>实例中的搜索类型</xref:System.Web.UI.WebControls.Expressions.SearchType></xref:System.Web.UI.WebControls.Expressions.SearchType>       下表列出可能的枚举值。      |枚举 |说明 |  |-----------------|-----------------|  |<xref:System.Web.UI.WebControls.Expressions.SearchType>|指示在字段中的任意位置开始的搜索。 |  |<xref:System.Web.UI.WebControls.Expressions.SearchType>|指示在字段的开头开始搜索。 |  |<xref:System.Web.UI.WebControls.Expressions.SearchType>|指示的搜索，而这些字段的结尾。 |</xref:System.Web.UI.WebControls.Expressions.SearchType> </xref:System.Web.UI.WebControls.Expressions.SearchType> </xref:System.Web.UI.WebControls.Expressions.SearchType>"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.SearchType
      description: "要执行的搜索类型。"
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchType
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: SearchType
  nameWithType: SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression
  nameWithType: SearchExpression.SearchExpression
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable
  nameWithType: SearchExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
