### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializerFactory
  id: XmlSerializerFactory
  children:
  - System.Xml.Serialization.XmlSerializerFactory.#ctor
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  langs:
  - csharp
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory
  fullName: System.Xml.Serialization.XmlSerializerFactory
  type: Class
  summary: "创建类型化的版本<xref:System.Xml.Serialization.XmlSerializer>更高效序列化。</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public class XmlSerializerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;></xref>类。"
  syntax:
    content: public XmlSerializerFactory ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  id: CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;></xref>用于序列化指定的类型的类。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生<xref:System.Xml.Serialization.XmlSerializer>专为进行序列化指定的类型创建的类。</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  id: CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;></xref>类使用映射到另一种类型的对象。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);
    parameters:
    - id: xmlTypeMapping
      type: System.Xml.Serialization.XmlTypeMapping
      description: "<xref:System.Xml.Serialization.XmlTypeMapping>一种类型映射到另一个。</xref:System.Xml.Serialization.XmlTypeMapping>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生<xref:System.Xml.Serialization.XmlSerializer>专为进行序列化的映射的类型创建的类。</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;></xref>用于序列化指定的类型和命名空间的类。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    - id: defaultNamespace
      type: System.String
      description: "要使用的所有 XML 元素的默认命名空间。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生<xref:System.Xml.Serialization.XmlSerializer>专为进行序列化指定的类型创建的类。</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  id: CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;></xref>用于序列化指定的类型的类。 如果属性或字段返回一个数组， <code> extraTypes </code>参数指定可以插入到数组的对象。"
  remarks: "调用此重载是类似于调用[XmlSerializer (Type，Type\\[\\])](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])?qualifyHint=False&autoUpgrade=False)来创建实例的<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, Type[] extraTypes);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>要序列化的其他对象类型的数组。</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref:System.Xml.Serialization.XmlSerializer>类可以序列化的 XML 文档，将指定类型的对象，反之亦然。</xref:System.Xml.Serialization.XmlSerializer> 要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。"
  remarks: "调用此重载是类的类似于调用<xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>要创建其实例<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>包含重写默认序列化行为的字段。</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref:System.Xml.Serialization.XmlSerializer>类可以序列化的 XML 文档，将指定类型的对象，反之亦然。</xref:System.Xml.Serialization.XmlSerializer> 指定表示的 XML 根元素的对象。"
  remarks: "调用此重载是类的类似于调用<xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>要创建其实例<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>表示的 XML 根元素。</xref:System.Xml.Serialization.XmlRootAttribute>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref:System.Xml.Serialization.XmlSerializer>类可以序列化的 XML 文档实例，将指定类型的对象，反之亦然。</xref:System.Xml.Serialization.XmlSerializer> 要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。 此重载还指定所有 XML 元素和类以用作 XML 根元素的默认命名空间。"
  remarks: "调用此重载是类似于调用[XmlSerializer (类型，XmlAttributeOverrides，Type\\[\\]，XmlRootAttribute、 字符串)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)?qualifyHint=False&autoUpgrade=False)来创建实例的<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要序列化。</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>包含重写默认序列化行为的字段。</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>要序列化的其他对象类型的数组。</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>表示的 XML 根元素。</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 文档中的所有 XML 元素的默认命名空间中。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref:System.Xml.Serialization.XmlSerializer>类可以序列化的 XML 文档实例，将指定类型的对象，反之亦然。</xref:System.Xml.Serialization.XmlSerializer> 要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。 此重载还指定所有 XML 元素和类以用作 XML 根元素的默认命名空间。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>对象的此<xref:System.Xml.Serialization.XmlSerializer>可以序列化。</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>，它扩展或重写的类型参数中指定的类的行为。</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>要序列化的其他对象类型的数组。</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>，它定义的 XML 根元素属性。</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 文档中的所有 XML 元素的默认命名空间中。"
    - id: location
      type: System.String
      description: "指定类型的位置的路径。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回的派生<xref:System.Xml.Serialization.XmlSerializer>类可以序列化的 XML 文档实例，将指定类型的对象，反之亦然。</xref:System.Xml.Serialization.XmlSerializer> 要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。 此重载还指定所有 XML 元素和类以用作 XML 根元素的默认命名空间。"
  remarks: "调用此重载是类似于调用[XmlSerializer (类型，XmlAttributeOverrides，Type\\[\\]，XmlRootAttribute、 字符串、 字符串、 证据)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)?qualifyHint=False&autoUpgrade=False)来创建实例的<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>对象的此<xref:System.Xml.Serialization.XmlSerializer>可以序列化。</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>，它扩展或重写的类型参数中指定的类的行为。</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>要序列化的其他对象类型的数组。</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>，它定义的 XML 根元素属性。</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 文档中的所有 XML 元素的默认命名空间中。"
    - id: location
      type: System.String
      description: "指定类型的位置的路径。"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "实例<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>类，其中包含访问类型所需的凭据。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>派生类型"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
- uid: System.Xml.Serialization.XmlSerializer
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
- uid: System.Xml.Serialization.XmlTypeMapping
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlTypeMapping
  nameWithType: XmlTypeMapping
  fullName: System.Xml.Serialization.XmlTypeMapping
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
- uid: System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory.XmlSerializerFactory
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer
  nameWithType: XmlSerializerFactory.CreateSerializer
