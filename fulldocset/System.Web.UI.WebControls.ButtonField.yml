### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "表示为数据绑定控件中的按钮显示的字段。"
  remarks: "数据绑定控件使用 ButtonField 类 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 以显示将显示每个记录的按钮。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 根据使用它的数据绑定控件以不同方式显示该 ButtonField 对象。 例如，<xref:System.Web.UI.WebControls.GridView>控件显示为一列，ButtonField 对象时<xref:System.Web.UI.WebControls.DetailsView>控件将其显示为一行。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       单击按钮字段中的按钮引发命令事件的父数据绑定控件。 你可以提供要执行的命令按钮单击通过提供用于命令事件的事件处理程序时的自定义例程。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.GridView>控件都将引发<xref:System.Web.UI.WebControls.GridView.RowCommand>事件，而<xref:System.Web.UI.WebControls.DetailsView>控件都将引发<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.RowCommand> </xref:System.Web.UI.WebControls.GridView>       若要确定引发命令事件的记录的索引，请使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>事件自变量传递给命令事件的数据绑定控件的属性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> ButtonField 类自动填充<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有适当的索引值的属性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>       若要指定要显示的按钮的类型，使用<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性。</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 在显示链接或命令按钮，使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性来指定要显示在按钮的标题。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      1> [!NOTE]&1;> 如果你设置<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性、 ButtonField 共享相同的标题中的所有按钮。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       或者，你可以将 ButtonField 对象绑定到数据源中的字段。 这使你可以 ButtonField 对象中显示不同的按钮的标题。 指定字段中的值用于按钮的文本标题。 设置<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性将 ButtonField 对象绑定到数据源中的字段。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       当显示图像按钮时，使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>属性来指定要显示 ButtonField 对象中的按钮的图像。</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>      1> [!NOTE]&1;> ButtonField 对象中的所有按钮在都共享同一个映像。       你可以通过设置隐藏数据绑定控件中的 ButtonField 对象<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>属性`false`。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>       ButtonField 对象允许你自定义其页眉和页脚部分。 若要在页眉或页脚部分中显示标题，将设置<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>属性，分别。</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 而不是在标头部分中显示文本，你可以通过设置内显示图像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>属性。</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 若要隐藏 ButtonField 对象中的标头部分，设置<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>属性`false`。</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>      1> [!NOTE]&1;> 一些数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>控件) 可显示或隐藏控件的整个标头部分。</xref:System.Web.UI.WebControls.GridView> 这些数据绑定控件不支持<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>单个按钮字段的属性。</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> 若要显示或隐藏的数据绑定控件的整个标头部分 （如果可用），请使用`ShowHeader`控件的属性。       你还可以自定义 ButtonField 对象 （如字体颜色、 背景色等） 的外观的设置的字段的不同部分的样式属性。 下表列出不同的样式属性。      |样式属性 |样式设置 |  |--------------------|----------------------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子 Web 服务器控件的 ButtonField。 |  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|ButtonField 页脚部分。 |  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|标头一部分 ButtonField。 |  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|ButtonField 中的数据项。 |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>类。"
  remarks: "ButtonField 构造函数用于初始化<xref:System.Web.UI.WebControls.ButtonField>类</xref:System.Web.UI.WebControls.ButtonField>的新实例 此构造函数通常用时将字段添加到的动态创建的数据绑定控件。       若要添加<xref:System.Web.UI.WebControls.ButtonField>动态对象的数据绑定控件，创建一个新<xref:System.Web.UI.WebControls.ButtonField>对象、 设置其属性，并将其添加到数据绑定控件的字段集合。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> 例如，如果你使用<xref:System.Web.UI.WebControls.GridView>控件中，添加<xref:System.Web.UI.WebControls.ButtonField>对象传递给<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 尽管您可以添加字段动态到数据绑定控件，应声明为静态，字段，以及然后能显示或隐藏，为相应。 静态声明所有你字段会减小父数据绑定控件的视图状态的大小。"
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个字符串，表示要执行中的按钮时的操作<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>单击对象。"
  remarks: "CommandName 属性用于将相关联的命令名称，如`&quot;Add&quot;`或`&quot;Remove&quot;`，与中的按钮<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> 你可以将 CommandName 属性设置为任何字符串，标识要在单击该命令按钮时执行的操作。 你可以随后以编程方式确定事件处理程序中的命令名称并执行相应的操作。      1> [!NOTE]&1;> 中的所有按钮<xref:System.Web.UI.WebControls.ButtonField>对象共享相同的命令名称。</xref:System.Web.UI.WebControls.ButtonField>       数据绑定控件识别某些命令名称和自动引发以及处理控件的相应事件。 下面的命令名称识别:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;`要调用分页，请将 CommandName 设置为`&quot;Page&quot;`和<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>所包含的<xref:System.Web.UI.WebControls.Button>控制转移到`&quot;First&quot;`， `&quot;Last&quot;`， `&quot;Prev&quot;`， `&quot;Next&quot;`，或页码。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 但是，由于<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>为<xref:System.Web.UI.WebControls.ButtonField>控件始终是整数行索引，<xref:System.Web.UI.WebControls.ButtonField>控件不适合调用分页。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 同样，尽管你可以调用排序通过设置为 CommandName `&quot;Sort&quot;`、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.ButtonField>控件始终是整数行索引。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 为此，<xref:System.Web.UI.WebControls.ButtonField>控件不适合调用排序。</xref:System.Web.UI.WebControls.ButtonField> 对于自定义命令名称，如`&quot;Add&quot;`和`&quot;Remove&quot;`，你需要编写事件代码以检查的命令名称并执行某些自定义操作。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.DataControlCommands>。</xref:System.Web.UI.WebControls.DataControlCommands>      1> [!NOTE]&1;> 并非所有的命令名称所识别的每个数据绑定控件。 例如，`&quot;New&quot;`无法识别的<xref:System.Web.UI.WebControls.GridView>控件和`&quot;Select&quot;`无法识别的<xref:System.Web.UI.WebControls.DetailsView>控件。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "中的按钮时执行的操作的名称<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>单击。"
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将当前的属性复制<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>到指定的对象<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>对象。"
  remarks: "<xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法复制当前的属性<xref:System.Web.UI.WebControls.ButtonFieldBase>-派生对象转换<xref:System.Web.UI.WebControls.DataControlField>对象由<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法。</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>要将当前的属性复制到<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建并返回的新实例<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>类。"
  remarks: "CreateField 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>方法的基类，来创建一个空<xref:System.Web.UI.WebControls.ButtonField>要将当前的属性复制到的对象<xref:System.Web.UI.WebControls.ButtonField>-派生对象。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新实例<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>类。"
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置为其值将绑定到数据字段的名称<xref:System.Web.UI.WebControls.Button.Text*>属性<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>由呈现的控件<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象。</xref:System.Web.UI.WebControls.Button.Text*>"
  remarks: "当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性<xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType>或<xref:System.Web.UI.WebControls.ButtonType>值时，请使用 DataTextField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 字段的值将显示为中的按钮的文本<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> （可选） 可以设置显示的文本格式通过设置<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>       而不是使用 DataTextField 属性将绑定<xref:System.Web.UI.WebControls.ButtonField>对象移到一个字段从数据源，你可以使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性显示的文本中的按钮的静态文本<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.Text%2A> </xref:System.Web.UI.WebControls.ButtonField> 当<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性时，每个按钮共享相同的标题。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      1> [!NOTE]&1;> 如果 DataTextField 和<xref:System.Web.UI.WebControls.ButtonField.Text%2A>都设置属性、 DataTextField 属性优先。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)，指示未设置 DataTextField 属性。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定字段的值的显示格式的字符串。"
  remarks: "使用 DataTextFormatString 属性指定的值中显示的自定义显示格式<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> 如果未设置 DataTextFormatString 属性，该字段的值将显示不带任何特殊格式。      1> [!NOTE]&1;> 应用格式字符串，则仅当<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性设置。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       格式字符串可以是任意文本字符串，并且通常包含字段的值的占位符。 例如，在格式字符串`&quot;Item Value: {0}&quot;`、`{0}`占位符将被替换的字段的值，在显示时<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> 格式字符串的其余部分将显示为文字文本。      1> [!NOTE]&1;> 如果格式字符串不包含一个占位符，数据源的字段的值不包括在最终的显示文本。       占位符包含两个部分，以冒号分隔，在大括号，在窗体中进行包装 { `A` : `Bxx` }。 冒号前的值 (`A`常规示例中) 从零开始的参数列表中，指定的字段值的索引。      1> [!NOTE]&1;> 这`A`参数是格式设置的语法的一部分。 由于每个单元中只有一个字段值，此值只能设置为 0。       冒号和冒号后面的值是可选的。 冒号后面的字符 (`B`常规示例中) 指定要在其中显示值的格式。 下表列出了常见的格式。      |格式字符 |说明 |  |----------------------|-----------------|  |`C`|以货币格式显示数字值。 |  |`D`|以十进制格式显示数字值。 |  |`E`|以科学记数 （指数） 格式显示数值。 |  |`F`|固定格式显示数字值。 |  |`G`|常规格式显示数字值。 |  |`N`|采用数字格式显示数字值。 |  |`X`|以十六进制格式显示数字值。 |    &1;> [!NOTE]&1;> 除`X`，格式字符不区分大小写。 `X`格式字符在指定的情况下显示的十六进制字符。       格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。 例如，在格式字符串`&quot;{0:F2}&quot;`显示一个带两位小数定点数。       设置字符串格式的详细信息，请参阅[格式化类型](~/add/includes/ajax-current-ext-md.md)。       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "一个格式字符串，指定字段的值的显示格式。 默认值为空字符串 (&quot;&quot;)，表示尚无特殊格式设置应用于该字段值。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "格式中的单元格的指定的字段值<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象。"
  remarks: "FormatDataTextValue 方法是用于转换字段值由指定的格式与帮助器方法<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "要设置格式的字段值。"
    return:
      type: System.String
      description: "字段值转换为指定的格式<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>属性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要显示在每个按钮的图像<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象。"
  remarks: "当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性<xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType>值时，请使用 ImageUrl 属性来指定要显示每个按钮的图像。</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 只要客户端浏览器支持该格式，此映像可以是任何文件格式 （.jpg、.gif、.bmp、 等）。       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "要显示在每个按钮的图像<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)，指示未设置 ImageUrl 属性。"
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化当前<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象。"
  remarks: "Initialize 方法调用由数据控件与其<xref:System.Web.UI.WebControls.ButtonField>对象所关联以执行基本的对象初始化的字段，该字段添加到行集合之前的实例。</xref:System.Web.UI.WebControls.ButtonField> 数据控件，如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>，调用<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>方法在其`CreateChildControls`方法之前的其他方法，如`CreateRow`，调用来使用数据创建特定行。</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       在编写使用的自定义数据绑定控件时调用 Initialize 方法<xref:System.Web.UI.WebControls.TableCell>对象执行基本初始化<xref:System.Web.UI.WebControls.ButtonField>对象。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.TableCell> 实现此方法，如果你<xref:System.Web.UI.WebControls.ButtonField>-派生的类型要求任何对象初始化之前它将填充<xref:System.Web.UI.WebControls.TableCell>对象与数据或控件的<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法。</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要启用排序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: control
      type: System.Web.UI.Control
      description: "数据控件拥有<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指示该控件不需要重新绑定到数据。"
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref>到指定的行状态的对象。"
  remarks: "InitializeCell 方法创建指定按钮类型<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性并将其添加到<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.DataControlFieldCell>对象。</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.Button>控件设置为`rowIndex`。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>初始化。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref>值，该值指示行 （页眉、 页脚或数据） 的类型。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: rowIndex
      type: System.Int32
      description: "行的从零开始索引。"
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置显示在每个按钮的静态标题<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象。"
  remarks: "当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A><xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType>或<xref:System.Web.UI.WebControls.ButtonType>值，请使用要显示在<xref:System.Web.UI.WebControls.ButtonField>。</xref:System.Web.UI.WebControls.ButtonField>按钮标题的静态文本的文本属性</xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonField>的属性</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 每个按钮共享相同的标题。       而不是使用文本属性来显示中的静态文本<xref:System.Web.UI.WebControls.ButtonField>对象时，可以使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonField>给数据源中的字段。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField> 字段的值将显示为按钮的标题。      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>和同时设置文本属性，则<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性优先。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "为每个按钮中显示的标题<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定控件是否包含在<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>对象支持回调。"
  remarks: "ValidateSupportsCallback 方法是一个帮助器方法，用于确定控件是否包含在<xref:System.Web.UI.WebControls.ButtonField>对象支持回调。</xref:System.Web.UI.WebControls.ButtonField> 此方法被实现为空的方法 （不包含任何代码的方法） 以指示支持回调。      1> [!NOTE]&1;> ValidateSupportsCallback 方法主要由控件开发人员使用。"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
