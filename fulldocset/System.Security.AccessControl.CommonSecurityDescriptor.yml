### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  id: CommonSecurityDescriptor
  children:
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  - System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  - System.Security.AccessControl.CommonSecurityDescriptor.Group
  - System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  - System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.Owner
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  langs:
  - csharp
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
  type: Class
  summary: "表示一个安全描述符。 安全描述符包括所有者、 主要组、 自定义访问控制列表 (DACL) 和系统访问控制列表 (SACL)。"
  syntax:
    content: 'public sealed class CommonSecurityDescriptor : System.Security.AccessControl.GenericSecurityDescriptor'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericSecurityDescriptor
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  - System.Security.AccessControl.GenericSecurityDescriptor.Revision
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>从指定的类<xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;></xref>对象。"
  remarks: "如果从中的基础安全描述符新<xref:System.Security.AccessControl.RawSecurityDescriptor>创建对象包含`null`其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</xref:System.Security.AccessControl.RawSecurityDescriptor> 如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。       这可能导致无意中允许主体访问应用程序。 因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。"
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.RawSecurityDescriptor rawSecurityDescriptor);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与容器对象关联。"
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与 directory 对象关联。"
    - id: rawSecurityDescriptor
      type: System.Security.AccessControl.RawSecurityDescriptor
      description: "<xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;> </xref>从中创建新对象<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.Boolean,System.String)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>类从指定的安全描述符定义语言 (SDDL) 字符串。"
  remarks: "如果从中的基础安全描述符新<xref:System.Security.AccessControl.RawSecurityDescriptor>创建对象包含`null`其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</xref:System.Security.AccessControl.RawSecurityDescriptor> 如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。       这可能导致无意中允许主体访问应用程序。 因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。"
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, string sddlForm);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与容器对象关联。"
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与 directory 对象关联。"
    - id: sddlForm
      type: System.String
      description: "从中创建新的 SDDL 字符串<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>来自指定数组的字节值的类。"
  remarks: "如果从中的基础安全描述符新<xref:System.Security.AccessControl.RawSecurityDescriptor>创建对象包含`null`其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</xref:System.Security.AccessControl.RawSecurityDescriptor> 如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。       这可能导致无意中允许主体访问应用程序。 因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。"
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, byte[] binaryForm, int offset);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与容器对象关联。"
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与 directory 对象关联。"
    - id: binaryForm
      type: System.Byte[]
      description: "从中创建新的字节值数组<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
    - id: offset
      type: System.Int32
      description: "中的偏移量`binaryForm`从此处开始复制的数组。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新实例<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>从指定的信息的类。"
  remarks: "如果从中的基础安全描述符新<xref:System.Security.AccessControl.RawSecurityDescriptor>创建对象包含`null`其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</xref:System.Security.AccessControl.RawSecurityDescriptor> 如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。       这可能导致无意中允许主体访问应用程序。 因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。"
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.ControlFlags flags, System.Security.Principal.SecurityIdentifier owner, System.Security.Principal.SecurityIdentifier group, System.Security.AccessControl.SystemAcl systemAcl, System.Security.AccessControl.DiscretionaryAcl discretionaryAcl);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与容器对象关联。"
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新的安全描述符是否与 directory 对象关联。"
    - id: flags
      type: System.Security.AccessControl.ControlFlags
      description: "指定新的行为的标志<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
    - id: owner
      type: System.Security.Principal.SecurityIdentifier
      description: "新的所有者<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
    - id: group
      type: System.Security.Principal.SecurityIdentifier
      description: "新的主要组<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
    - id: systemAcl
      type: System.Security.AccessControl.SystemAcl
      description: "系统访问控制列表 (SACL) 新<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
    - id: discretionaryAcl
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "新自由访问控制列表 (DACL) <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  id: AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "设置<xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*>此属性<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>实例并设置<xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref>标志。</xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*>"
  remarks: "有关<xref:System.Security.AccessControl.DiscretionaryAcl>使用<xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A>和<xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A>的属性。 此<xref:System.Security.AccessControl.CommonSecurityDescriptor></xref:System.Security.AccessControl.CommonSecurityDescriptor></xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A></xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A></xref:System.Security.AccessControl.DiscretionaryAcl>构造函数"
  syntax:
    content: public void AddDiscretionaryAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "新的修订级别<xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;></xref>对象。"
    - id: trusted
      type: System.Int32
      description: "访问控制项 (Ace) 数这<xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;></xref>对象可以包含。 此数值可用于仅作为提示。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  id: AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "设置<xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*>此属性<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>实例并设置<xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref>标志。</xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*>"
  remarks: "有关<xref:System.Security.AccessControl.SystemAcl>使用<xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A>和<xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A>的属性。 此<xref:System.Security.AccessControl.CommonSecurityDescriptor></xref:System.Security.AccessControl.CommonSecurityDescriptor></xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A></xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A></xref:System.Security.AccessControl.SystemAcl>构造函数"
  syntax:
    content: public void AddSystemAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "新的修订级别<xref href=&quot;System.Security.AccessControl.SystemAcl&quot;></xref>对象。"
    - id: trusted
      type: System.Int32
      description: "要添加。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  id: ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取指定的行为的值<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  syntax:
    content: public override System.Security.AccessControl.ControlFlags ControlFlags { get; }
    return:
      type: System.Security.AccessControl.ControlFlags
      description: "一个或多个值<xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref>枚举结合逻辑或运算。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  id: DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取或设置此自定义访问控制列表 (DACL) <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象。 DACL 包含访问规则。"
  remarks: "如果此属性设置为`null`，允许每个人完全访问权限 (AEFA) 添加到 DACL 单一访问控制项 (ACE)。 如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。       这可能导致无意中允许主体访问应用程序。 因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。"
  syntax:
    content: public System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl { get; set; }
    return:
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "此 DACL <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  id: Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取或设置此的主要组<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Group { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "这的主要组<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取一个布尔值，指定与此关联的对象是否<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象是容器对象。"
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果与此相关的对象<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象是容器对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  id: IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取一个布尔值，指定与此关联的自由访问控制列表 (DACL) 是否<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象处于规范顺序。"
  syntax:
    content: public bool IsDiscretionaryAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果与此关联的 DACL <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象处于规范顺序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取一个布尔值，指定与此关联的对象是否<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象是目录对象。"
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果与此相关的对象<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象是目录对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  id: IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取一个布尔值，指定与此关联的系统访问控制列表 (SACL) 是否<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象处于规范顺序。"
  syntax:
    content: public bool IsSystemAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果与此关联的 SACL <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象处于规范顺序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  id: Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取或设置与此关联的对象的所有者<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Owner { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "与此关联的对象的所有者<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  id: PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "与此关联的指定的安全标识符从自由访问控制列表 (DACL) 中移除所有访问规则<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  remarks: "若要避免无意中允许主体访问，应用程序应检查是否存在的允许每个人都完全访问 (AEFA) 访问控制项 (ACE)，并将其删除之前修改 DACL。"
  syntax:
    content: public void PurgeAccessControl (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "个要删除其访问规则的安全标识符。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  id: PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "与此关联的指定的安全标识符从系统访问控制列表 (SACL) 中移除所有审核规则<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。"
  syntax:
    content: public void PurgeAudit (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "个要删除其审核规则的安全标识符。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  id: SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "与此关联的自由访问控制列表 (DACL) 设置继承保护<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。 受保护的 Dacl 不继承父容器的访问规则。"
  syntax:
    content: public void SetDiscretionaryAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要防止继承 DACL。"
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保留继承 DACL; 中的访问规则<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>从 DACL 删除继承的访问规则。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  id: SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "与此关联的系统访问控制列表 (SACL) 设置继承保护<xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref>对象。 受保护的 Sacl 不继承父容器的审核规则。"
  syntax:
    content: public void SetSystemAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要防止继承 SACL。"
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要在 SACL; 中保留继承的审核规则<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>从 SACL 删除继承的审核规则。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  id: SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "获取或设置此系统访问控制列表 (SACL) <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象。 SACL 包含审核规则。"
  syntax:
    content: public System.Security.AccessControl.SystemAcl SystemAcl { get; set; }
    return:
      type: System.Security.AccessControl.SystemAcl
      description: "此 SACL <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>对象。"
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: System.Security.AccessControl.GenericSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.RawSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: RawSecurityDescriptor
  nameWithType: RawSecurityDescriptor
  fullName: System.Security.AccessControl.RawSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
- uid: System.Security.AccessControl.ControlFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ControlFlags
  nameWithType: ControlFlags
  fullName: System.Security.AccessControl.ControlFlags
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.SystemAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: SystemAcl
  nameWithType: SystemAcl
  fullName: System.Security.AccessControl.SystemAcl
- uid: System.Security.AccessControl.DiscretionaryAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl
  fullName: System.Security.AccessControl.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl
  nameWithType: CommonSecurityDescriptor.AddSystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit
  nameWithType: CommonSecurityDescriptor.PurgeAudit
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
