### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  id: Peer
  children:
  - System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.Invite
  - System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.ToString
  langs:
  - csharp
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
  type: Class
  summary: "此类表示远程对等方。"
  remarks: "抽象对等类的用途是提供可由派生类，例如<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>和<xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>共享的通用基类定义 它无法直接构造，因为它是抽象。 开发人员应改为使用子类子类。       联系人、 对等、 远程对等方， <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>， <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>，和<xref:System.Net.PeerToPeer.Collaboration.PeerContact>都是同义词，根据上下文。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>       &quot;调用对等方&quot;和&quot;远程对等&quot;是通常同义词。  调用对等方未引用调用给定的方法的应用程序。"
  syntax:
    content: 'public abstract class Peer : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.Peer>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.Peer>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "初始化的新实例<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>类型。"
  remarks: "返回一个类型<xref:System.Net.PeerToPeer.Collaboration.Peer>对象，<xref:System.Net.PeerToPeer.Collaboration.PeerContact>或<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>上子类化</xref:System.Net.PeerToPeer.Collaboration.Peer> 子类<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>或 PeerNearMe<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A>包含对新的对等对象的名称的唯一引用。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>"
  syntax:
    content: protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "对承载要反序列化此实例所需的数据的对象的引用。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "提供了一种用于反序列化数据的上下文。 也称为序列化的数据源。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "释放使用的所有资源<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>对象。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "释放由非托管的资源<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>对象，还可以释放托管的资源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  id: Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "执行当前的区分大小写比较<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>和指定的对等方。"
  remarks: "两个对等节点被视为相等，如果它们具有相同的终结点集合，而不考虑中的值及其<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>属性。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 使用方案不涉及此类直接，但包括派生<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>或<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.Peer
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>实例要与此实例进行比较。"
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提供<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>实例具有相同<xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*>与此对等实例，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*> 此方法也返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果等参数为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>对象序列化目标所需的数据<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>要填充数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "此序列化的目标。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  id: GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "从本地缓存中获取的数据对象的集合。"
  remarks: "此功能仅公开<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。</xref:System.Net.PeerToPeer.Collaboration.PeerContact>  上任何其他类型的对等出于安全原因未公开此功能。       如果对等协作会话未与实例化<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>，此方法无法访问本地计算机上的对象。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>  这同样适用的应用程序注册到协作会话。       对等对象的集合组成应用程序、 数据对象和对等方或此实例所指定的终结点的状态信息。 如果终结点不找到任何对象，一个大小的集合被返回零 (0)。 如果调用的对等订阅，则此终结点，会自动更新缓存;否则为<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       调用方不需要登录到此方法成功完成的协作基础结构。  成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方已登录，然后才能调用此方法。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       注意︰ 在<xref:System.Net.PeerToPeer.Collaboration.Peer>类而不是子类<xref:System.Net.PeerToPeer.Collaboration.PeerContact>和<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.Peer>上定义其他重载"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>对等方或此实例所指定的终结点的集合。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "调用方未订阅到终结点，或不调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "此方法是无法完成由于基础的对等协作基础结构中的错误。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "获取<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>关联与所提供对象<xref:System.Guid>从<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;> </xref>。</xref:System.Guid>"
  remarks: "此功能仅公开<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> 上任何其他类型的对等出于安全原因未公开此功能。       对等对象的集合组成应用程序、 数据对象和对等方或此实例所指定的终结点的状态信息。 如果终结点不找到任何对象，一个大小的集合被返回零 (0)。 当调用的对等订阅到此终结点后时，会自动更新缓存;否则为<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       调用方不需要登录到此方法成功完成的协作基础结构。  成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方已登录，然后才能调用此方法。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 协作会话开始时，将创建此状态。       注意︰ 在<xref:System.Net.PeerToPeer.Collaboration.Peer>类而不是派生的类<xref:System.Net.PeerToPeer.Collaboration.PeerContact>和<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.Peer>上定义其他重载"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);
    parameters:
    - id: objectId
      type: System.Guid
      description: "<xref:System.Guid>的<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>要从集合中检索对象</xref:System.Guid>"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>与提供的<xref:System.Guid>.</xref:System.Guid>关联的对象 如果未找到的对象，一个大小的集合被返回零 (0)。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "对象 ID 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "调用方未订阅<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>或尚未调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>针对它。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "从对等方获取对象的信息时出错。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "获取的可用状态信息<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>。"
  remarks: "状态信息包括如联机、 脱机和离开的状态描述符。       调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>为其检索状态信息。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "返回<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;></xref>对象，其中包含可用的终结点的状态信息，如果可用; 否则为它是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerEndPoint</code>不包含有效的终结点。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerEndPoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此对象已释放，并不能用于在当前对等操作。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "从对等方检索状态信息时出错。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "将发送到邀请<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>以启动特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 当对等协作会话开始时，将创建此状态。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>从收到邀请对等方。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   在邀请过程中出错。      -当前正在执行的应用程序未注册到对等协作基础结构。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "将发送到邀请<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>以启动特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 当对等协作会话开始时，将创建此状态。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>为发送的邀请。"
    - id: message
      type: System.String
      description: "要发送到应用程序邀请以及远程对等方的消息。  该消息可以是不超过 255 个 Unicode 字符。"
    - id: invitationData
      type: System.Byte[]
      description: "用户定义数据 blob 要邀请相关联。  其大小可以为不能超过 16384 个字节。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>从收到邀请对等方。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "应用程序未注册用于协作。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>将大于 16384 个字节。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   在邀请过程中出错。      -当前正在执行的应用程序未注册到对等协作基础结构。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "开始一个异步邀请操作，它将发送到邀请<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>以启动特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 当对等协作会话开始时，将创建此状态。"
  syntax:
    content: public abstract void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "要传递给用于标识异步操作的回调的用户定义的对象。 此必需的参数必须是唯一的正在进行的所有异步邀请操作。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   在邀请过程中出错。      -当前正在执行的应用程序未注册到协作基础结构。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "开始一个异步邀请操作，它将发送到邀请<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>以启动特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 当对等协作会话开始时，将创建此状态。"
  syntax:
    content: public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>为发送的邀请。"
    - id: message
      type: System.String
      description: "要发送到应用程序邀请以及远程对等方的消息。 此消息的最大大小为 255 个 Unicode 字符。"
    - id: invitationData
      type: System.Byte[]
      description: "用户定义数据 blob 要邀请相关联。  其大小可以为不能超过 16384 个字节。"
    - id: userToken
      type: System.Object
      description: "要传递给用于标识异步操作的回调的用户定义的对象。 此必需的参数必须是唯一的正在进行的所有异步邀请操作。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "应用程序未注册到协作基础结构。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>将大于 16384 个字节。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   在邀请过程中出错。      -当前正在执行的应用程序未注册到协作基础结构。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  id: InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取消邀请已发送<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>方法。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>"
  remarks: "调用此方法可保证系统将会停止等待<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从 InviteAsync 请求关联的对等方。</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       在任何给定时间，多个邀请可能未完成。  如果在异步操作由标识时，调用 InviteAsyncCancel 方法`userToken`是不中是否存在，将引发异常。 `userToken`必须提供对象，因为它用于跟踪特定的异步调用。 此主机应用程序提供的对象是唯一的每个邀请请求。       当使用此方法时，<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>仍然可以引发事件，但关联的已取消属性<xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>对象将被设置为`true.`调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> </xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> </xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: public void InviteAsyncCancel (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "用户定义的对象要传递给回调的<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>标识的操作。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*> 此必需的参数必须是唯一的正在进行的所有异步邀请操作。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code>参数不能为<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "异步邀请不是未完成的。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  id: InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "当远程对等方的邀请过程已完成时引发。"
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>指定邀请操作的结果。</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> InviteCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
      description: "要添加。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "这<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>已释放对象。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  id: IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "获取一个值，指定如果<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>当前联机。"
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>联机在任何与之关联的终结点; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       除非指定，此属性的默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>已释放对象。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  id: OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "引发<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref>事件。"
  remarks: "从此类继承的类可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>引发事件。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>对象，其中包含要传递给委托与关联的事件数据<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref>事件。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  id: PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "获取<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;></xref>与关联<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  remarks: "远程对等方时主机对等，中介<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>中所含对象<xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>与远程对等节点的本地联系人相关联。</xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> </xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>"
  syntax:
    content: public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>与关联<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>已释放对象。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "当设置此属性的值时，不激发作为异步操作的结果的所有事件都将都具有创建特定<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>的线程上回调的关联的事件处理程序"
  remarks: "此属性的默认值是`null`，它指示系统线程池线程上调用所有事件处理程序。       此属性通常设置为 UI 元素如<xref:System.Windows.Forms.Form>实例。</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "实现对象<xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;></xref>接口，并由创建它的线程上的事件处理程序同步此类型的实例。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放调用对象。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>具有数据序列化指定所需的类实例<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>实例。 派生的类型必须调用基类型<xref:System.Runtime.Serialization.ISerializable.GetObjectData*>方法。</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>要填充数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "序列化的目标。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "返回<xref:System.String>表示<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>与关联<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>表示<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*></xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
- uid: System.Net.PeerToPeer.Collaboration.Peer
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InviteCompletedEventArgs>
  nameWithType: EventHandler<InviteCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
    name: InviteCompletedEventArgs
    nameWithType: InviteCompletedEventArgs
    fullName: InviteCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: InviteCompletedEventArgs
  nameWithType: InviteCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPointCollection
  nameWithType: PeerEndPointCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer
  nameWithType: Peer.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose
  nameWithType: Peer.Dispose
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals
  nameWithType: Peer.Equals
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData
  nameWithType: Peer.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects
  nameWithType: Peer.GetObjects
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo
  nameWithType: Peer.GetPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite
  nameWithType: Peer.Invite
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync
  nameWithType: Peer.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel
  nameWithType: Peer.InviteAsyncCancel
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted
  nameWithType: Peer.OnInviteCompleted
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString
  nameWithType: Peer.ToString
