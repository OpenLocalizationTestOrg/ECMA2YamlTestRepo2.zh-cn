### YamlMime:ManagedReference
items:
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor
  id: CodeActivityPublicEnvironmentAccessor
  children:
  - System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  - System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)
  - System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)
  - System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode
  - System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  - System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  - System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)
  - System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)
  langs:
  - csharp
  name: CodeActivityPublicEnvironmentAccessor
  nameWithType: CodeActivityPublicEnvironmentAccessor
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor
  type: Struct
  summary: "指定公共环境访问器有关的信息。"
  syntax:
    content: public struct CodeActivityPublicEnvironmentAccessor
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  id: ActivityMetadata
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: ActivityMetadata
  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取活动的自变量、 变量、 子活动和活动委托。"
  syntax:
    content: public System.Activities.CodeActivityMetadata ActivityMetadata { get; }
    return:
      type: System.Activities.CodeActivityMetadata
      description: "活动的自变量、 变量、 子活动和活动委托。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)
  id: Create(System.Activities.CodeActivityMetadata)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: Create(CodeActivityMetadata)
  nameWithType: CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "创建自变量、 子活动、 变量和活动委托的说明。"
  syntax:
    content: public static System.Activities.CodeActivityPublicEnvironmentAccessor Create (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "封装活动的自变量、 变量、 子活动和活动委托的活动的元数据。"
    return:
      type: System.Activities.CodeActivityPublicEnvironmentAccessor
      description: "自变量、 子活动、 变量和活动委托的说明。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals(Object)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "确定指定的对象是否等于公共环境访问器。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定的对象是否等于公共环境访问器;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode
  id: GetHashCode
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode()
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回此公共环境访问器的唯一标识符。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "此公共环境存取器的唯一标识符。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  id: op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示两个指定的元数据实例是否相等。"
  syntax:
    content: public static bool op_Equality (System.Activities.CodeActivityPublicEnvironmentAccessor left, System.Activities.CodeActivityPublicEnvironmentAccessor right);
    parameters:
    - id: left
      type: System.Activities.CodeActivityPublicEnvironmentAccessor
      description: "要比较的第一个项。"
    - id: right
      type: System.Activities.CodeActivityPublicEnvironmentAccessor
      description: "要比较的第二个项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果两个指定的元数据实例是否相等。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  id: op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示两个指定的元数据实例是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.Activities.CodeActivityPublicEnvironmentAccessor left, System.Activities.CodeActivityPublicEnvironmentAccessor right);
    parameters:
    - id: left
      type: System.Activities.CodeActivityPublicEnvironmentAccessor
      description: "要比较的第一个项。"
    - id: right
      type: System.Activities.CodeActivityPublicEnvironmentAccessor
      description: "要比较的第二个项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果两个指定的元数据实例是否不相等;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)
  id: TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示活动是否将尝试获取对公共位置的访问。"
  syntax:
    content: public bool TryGetAccessToPublicLocation (System.Activities.LocationReference publicLocation, System.Activities.ArgumentDirection accessDirection, out System.Activities.LocationReference equivalentLocation);
    parameters:
    - id: publicLocation
      type: System.Activities.LocationReference
      description: "公共位置引用。"
    - id: accessDirection
      type: System.Activities.ArgumentDirection
      description: "访问方向参考。"
    - id: equivalentLocation
      type: System.Activities.LocationReference
      description: "中的相同位置引用。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果活动尝试将有权访问公共位置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)
  id: TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  langs:
  - csharp
  name: TryGetReferenceToPublicLocation(LocationReference,LocationReference)
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "返回一个值，该值指示活动是否将尝试获取的公共位置的引用。"
  syntax:
    content: public bool TryGetReferenceToPublicLocation (System.Activities.LocationReference publicReference, out System.Activities.LocationReference equivalentReference);
    parameters:
    - id: publicReference
      type: System.Activities.LocationReference
      description: "公共引用位置。"
    - id: equivalentReference
      type: System.Activities.LocationReference
      description: "等效的引用位置中。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果该活动将尝试获取的公共位置; 的引用否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: ActivityMetadata
  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: Create(CodeActivityMetadata)
  nameWithType: CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor
  parent: System.Activities
  isExternal: false
  name: CodeActivityPublicEnvironmentAccessor
  nameWithType: CodeActivityPublicEnvironmentAccessor
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals(Object)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode()
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)
- uid: System.Activities.LocationReference
  parent: System.Activities
  isExternal: false
  name: LocationReference
  nameWithType: LocationReference
  fullName: System.Activities.LocationReference
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: TryGetReferenceToPublicLocation(LocationReference,LocationReference)
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)
  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: ActivityMetadata
  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: Create
  nameWithType: CodeActivityPublicEnvironmentAccessor.Create
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: Equals
  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: GetHashCode
  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: op_Equality
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: op_Inequality
  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: TryGetAccessToPublicLocation
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation
- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation*
  parent: System.Activities.CodeActivityPublicEnvironmentAccessor
  isExternal: false
  name: TryGetReferenceToPublicLocation
  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation
