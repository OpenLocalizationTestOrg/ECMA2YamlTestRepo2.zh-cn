### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.RotateTransform
  id: RotateTransform
  children:
  - System.Windows.Media.RotateTransform.#ctor
  - System.Windows.Media.RotateTransform.#ctor(System.Double)
  - System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  - System.Windows.Media.RotateTransform.Angle
  - System.Windows.Media.RotateTransform.AngleProperty
  - System.Windows.Media.RotateTransform.CenterX
  - System.Windows.Media.RotateTransform.CenterXProperty
  - System.Windows.Media.RotateTransform.CenterY
  - System.Windows.Media.RotateTransform.CenterYProperty
  - System.Windows.Media.RotateTransform.Clone
  - System.Windows.Media.RotateTransform.CloneCurrentValue
  - System.Windows.Media.RotateTransform.CreateInstanceCore
  - System.Windows.Media.RotateTransform.Value
  langs:
  - csharp
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
  type: Class
  summary: "旋转有关中的指定点顺时针旋转某个对象[!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)]x，y 坐标系统。"
  remarks: "Rotatetransform 旋转通过指定<xref:System.Windows.Media.RotateTransform.Angle%2A>有关点<xref:System.Windows.Media.RotateTransform.CenterX%2A>、 <xref:System.Windows.Media.RotateTransform.CenterY%2A>.</xref:System.Windows.Media.RotateTransform.CenterY%2A></xref:System.Windows.Media.RotateTransform.CenterX%2A></xref:System.Windows.Media.RotateTransform.Angle%2A>旋转某个对象       当使用 rotatetransform 旋转时，请注意转换旋转的点 （0，0） 有关的特定对象坐标系统。 因此，具体取决于对象的位置，可能不会就地 （围绕其中心） 旋转。 例如，如果对象是从 0 沿 x 轴位于 200 个单位，旋转 30 度可以将该对象 30 度沿一个半径为 200 的绘制沿原点的圆圈。 若要旋转就地对象，设置<xref:System.Windows.Media.RotateTransform.CenterX%2A>和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的对象的中心到 rotatetransform 旋转旋转。</xref:System.Windows.Media.RotateTransform.CenterY%2A> </xref:System.Windows.Media.RotateTransform.CenterX%2A>       **可冻结功能︰**从继承，因此<xref:System.Windows.Freezable>类，rotatetransform 旋转类提供了一些特殊功能︰ 可以声明为在多个对象之间共享，使只读的以提高性能，克隆，并进行线程安全 rotatetransform 旋转对象。</xref:System.Windows.Freezable> 有关提供的不同功能的详细信息<xref:System.Windows.Freezable>对象，请参阅[可冻结对象概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Freezable>"
  syntax:
    content: 'public sealed class RotateTransform : System.Windows.Media.Transform'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.GeneralTransform
  - System.Windows.Media.Transform
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.ToString
  - System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)
  - System.Windows.Media.Transform.Identity
  - System.Windows.Media.Transform.Inverse
  - System.Windows.Media.Transform.Parse(System.String)
  - System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)
  - System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor
  id: '#ctor'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>类。"
  syntax:
    content: public RotateTransform ();
    parameters: []
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>具有以度为单位顺时针旋转指定的角度的类。 旋转中心的来源，(0，0)。"
  syntax:
    content: public RotateTransform (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "顺时针旋转的角度，以度为单位。"
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>具有指定的角度和中心点的类。"
  syntax:
    content: public RotateTransform (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "顺时针旋转的角度，以度为单位。 有关详细信息，请参阅<xref:System.Windows.Media.RotateTransform.Angle*>属性。</xref:System.Windows.Media.RotateTransform.Angle*>"
    - id: centerX
      type: System.Double
      description: "中心点的 x 坐标<xref href=&quot;System.Windows.Media.RotateTransform&quot;> </xref>。 有关详细信息，请参阅<xref:System.Windows.Media.RotateTransform.CenterX*>属性。</xref:System.Windows.Media.RotateTransform.CenterX*>"
    - id: centerY
      type: System.Double
      description: "中心点的 y 坐标<xref href=&quot;System.Windows.Media.RotateTransform&quot;> </xref>。 有关详细信息，请参阅<xref:System.Windows.Media.RotateTransform.CenterY*>属性。</xref:System.Windows.Media.RotateTransform.CenterY*>"
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Angle
  id: Angle
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置的角度，以度数 （顺时针旋转）。"
  remarks: "当你使用<xref:System.Windows.Media.RotateTransform>，认识到转换旋转的点 （0，0） 有关的特定对象坐标系统。</xref:System.Windows.Media.RotateTransform> 因此，具体取决于对象的位置，可能不会就地 （围绕其中心） 旋转。 例如，如果对象是从 0 沿 x 轴位于 200 个单位，旋转 30 度可以将该对象 30 度沿一个半径为 200 的绘制沿原点的圆圈。 若要旋转就地对象，设置<xref:System.Windows.Media.RotateTransform.CenterX%2A>和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>到要旋转的对象的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterY%2A> </xref:System.Windows.Media.RotateTransform.CenterX%2A>      <a name=&quot;dependencyPropertyInfo_Angle&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.RotateTransform.AngleProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.RotateTransform.AngleProperty>"
  syntax:
    content: public double Angle { get; set; }
    return:
      type: System.Double
      description: "角度 （以度为单位，顺时针旋转）。 默认值为 0。"
  overload: System.Windows.Media.RotateTransform.Angle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.AngleProperty
  id: AngleProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.RotateTransform.Angle*>依赖项属性。</xref:System.Windows.Media.RotateTransform.Angle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterX
  id: CenterX
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置旋转中心点的 x 坐标。"
  remarks: "当你使用<xref:System.Windows.Media.RotateTransform>，认识到转换旋转的点 （0，0） 有关的特定对象坐标系统。</xref:System.Windows.Media.RotateTransform> 因此，具体取决于对象的位置，可能不会就地 （围绕其中心） 旋转。 例如，如果对象是从 0 沿 x 轴位于 200 个单位，旋转 30 度可以将该对象 30 度沿一个半径为 200 的绘制沿原点的圆圈。 若要旋转就地对象，设置 CenterX 和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>到要旋转的对象的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterY%2A>      <a name=&quot;dependencyPropertyInfo_CenterX&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.RotateTransform.CenterXProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.RotateTransform.CenterXProperty>"
  syntax:
    content: public double CenterX { get; set; }
    return:
      type: System.Double
      description: "旋转中心的 x 坐标。 默认值是`0`。"
  overload: System.Windows.Media.RotateTransform.CenterX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  id: CenterXProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.RotateTransform.CenterX*>依赖项属性。</xref:System.Windows.Media.RotateTransform.CenterX*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterXProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterY
  id: CenterY
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置旋转中心点的 y 坐标。"
  remarks: "当你使用<xref:System.Windows.Media.RotateTransform>，认识到转换旋转的点 （0，0） 有关的特定对象坐标系统。</xref:System.Windows.Media.RotateTransform> 因此，具体取决于对象的位置，可能不会就地 （围绕其中心） 旋转。 例如，如果对象是从 0 沿 x 轴位于 200 个单位，旋转 30 度可以将该对象 30 度沿一个半径为 200 的绘制沿原点的圆圈。 若要旋转就地对象，设置<xref:System.Windows.Media.RotateTransform.CenterX%2A>和的 CenterY<xref:System.Windows.Media.RotateTransform>到要旋转的对象的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterX%2A>      <a name=&quot;dependencyPropertyInfo_CenterY&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.RotateTransform.CenterYProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.RotateTransform.CenterYProperty>"
  syntax:
    content: public double CenterY { get; set; }
    return:
      type: System.Double
      description: "旋转中心的 y 坐标。 默认值是`0`。"
  overload: System.Windows.Media.RotateTransform.CenterY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  id: CenterYProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.RotateTransform.CenterY*>依赖项属性。</xref:System.Windows.Media.RotateTransform.CenterY*>"
  remarks: "标识符<xref:System.Windows.Media.RotateTransform.CenterY%2A>依赖项属性。</xref:System.Windows.Media.RotateTransform.CenterY%2A>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterYProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Clone
  id: Clone
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建的可修改副本<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>通过深层复制其值。"
  remarks: "使用此方法生成的只读的可修改副本<xref:System.Windows.Freezable>对象。</xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       当此方法复制依赖项属性时，会复制资源引用和数据绑定，但它们可能不再解析。 它不会复制动画或其当前值。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.RotateTransform Clone ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "当前对象的可修改深层副本。 <> </> *1> 克隆对象的属性返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使<> *1> 的源属性是<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.RotateTransform.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建的可修改副本<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>通过深层复制其值的对象。 此方法不会复制资源引用、 数据绑定或动画，但复制其当前值。"
  remarks: "使用此方法生成的只读的可修改副本<xref:System.Windows.Freezable>对象。</xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.RotateTransform CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "当前对象的可修改深层副本。 <> </> *1> 克隆对象的属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使<> *1> 的源属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.RotateTransform.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.RotateTransform.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Value
  id: Value
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取作为当前旋转转换<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>对象。"
  syntax:
    content: public override System.Windows.Media.Matrix Value { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "为当前的旋转转换<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.RotateTransform.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Transform
  isExternal: false
  name: System.Windows.Media.Transform
- uid: System.Windows.Media.RotateTransform.#ctor
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
- uid: System.Windows.Media.RotateTransform.Angle
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.AngleProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.RotateTransform.CenterX
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
- uid: System.Windows.Media.RotateTransform.CenterY
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
- uid: System.Windows.Media.RotateTransform.Clone
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
- uid: System.Windows.Media.RotateTransform
  parent: System.Windows.Media
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.RotateTransform.Value
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.RotateTransform.#ctor*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform.RotateTransform
- uid: System.Windows.Media.RotateTransform.Angle*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.CenterX*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterY*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.Clone*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone
  nameWithType: RotateTransform.Clone
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue
  nameWithType: RotateTransform.CloneCurrentValue
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore
  nameWithType: RotateTransform.CreateInstanceCore
- uid: System.Windows.Media.RotateTransform.Value*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
