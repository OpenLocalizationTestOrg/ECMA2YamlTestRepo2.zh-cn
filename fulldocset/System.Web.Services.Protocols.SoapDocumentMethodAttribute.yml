### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  id: SoapDocumentMethodAttribute
  children:
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  langs:
  - csharp
  name: SoapDocumentMethodAttribute
  nameWithType: SoapDocumentMethodAttribute
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  type: Class
  summary: "将 SoapDocumentMethodAttribute 应用到方法指定 SOAP 消息与其他方法使用<xref uid=&quot;langword_csharp_Document&quot; name=&quot;Document&quot; href=&quot;&quot;></xref>格式设置。"
  remarks: "Web Services Description Language (WSDL) defines two styles for how an XML Web service method, which it calls an operation, can be formatted in a SOAP message: `RPC` and `Document`. `Document` refers to formatting the XML Web service method according to an XSD schema. The `Document` style refers to formatting the `Body` element as a series of one or more message parts following the `Body` element. Exactly how the individual message parts is determined by the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A> and <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> properties. The <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A> property determines whether parameters are formatted `Encoded` or `Literal`. The <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> determines whether the parameters are encapsulated within a single message part following the `Body` element or whether each parameter is an individual message part.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952)  \n  \n This attribute can be applied to both an XML Web service method on the server and a method of the proxy class on the client."
  example:
  - "The following code example sets the message style to `Document` for the `GetUserName` XML Web service method. Additionally, the XML element with the `Body` element for the SOAP request and SOAP response are set to `GetUserNameRequest` and `GetUserNameResponse`, respectively.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class SoapDocumentMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: SoapDocumentMethodAttribute()
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;></xref>类。"
  syntax:
    content: public SoapDocumentMethodAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: SoapDocumentMethodAttribute(String)
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;></xref>类，设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>属性的值<code> action </code>参数。</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>"
  syntax:
    content: public SoapDocumentMethodAttribute (string action);
    parameters:
    - id: action
      type: System.String
      description: "<xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 请求的 HTTP 标头字段。 集<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>属性。</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置<xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 请求的 HTTP 标头字段。"
  remarks: "通常情况下，操作属性是，该值指示请求的意图的 URI。 但是，SOAP 规范提出的 uri 格式的任何限制，或者任何规则的 URI 是可解析。 存在性和内容的 Action 属性可由 Web 服务器，如防火墙，以相应地筛选 HTTP 中的 SOAP 请求消息。       默认情况下，.NET Framework 1.1 版发布中的 Action 属性`soapAction`属性`soap:operation`每个元素支持为 XML Web 服务生成的 WSDL 文档中 SOAP 绑定。 SOAP 规范的详细信息，请参阅 W3C 网站 (http://www.w3.org/TR/SOAP)。"
  example:
  - "The following code example sets the Action property to `http://www.contoso.com/GetUserName`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 请求的 HTTP 标头字段。 默认值为 http://tempuri.org/MethodName，其中 MethodName 是 XML Web service 方法的名称。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  id: Binding
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置 XML Web 服务方法正在实现的操作的绑定。"
  remarks: "一个绑定，如所定义的 Web 服务描述语言 (WSDL)，是类似于一个接口，因为它定义一组具体的操作。 对于使用 ASP.NET 创建的 XML Web 服务，每个 XML Web service 方法的绑定内的运算。 XML Web 服务方法是 XML Web 服务的默认绑定或中指定的绑定的成员<xref:System.Web.Services.WebServiceBindingAttribute>应用于 XML Web 服务。</xref:System.Web.Services.WebServiceBindingAttribute> XML Web 服务可以实现多个绑定时多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用到 XML Web 服务。</xref:System.Web.Services.WebServiceBindingAttribute>       一次一个或多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用到 XML Web 服务，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可应用于单个 XML Web 服务方法，以便指示由特定的 XML Web 服务方法实现的绑定操作。</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.WebServiceBindingAttribute> 设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>指定的绑定 XML Web 服务方法正在实现操作为</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute></xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>的绑定属性 只有一个<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可应用于 XML Web 服务方法。</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 因此，XML Web 服务方法只能实现一个绑定的操作。       WSDL 规范的详细信息，请参阅 W3C 网站 (http://www.w3.org/TR/wsdl)。"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "XML Web 服务方法正在实现的操作的绑定。 默认值为&quot;Soap&quot;追加的 XML Web 服务的名称。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置是否 XML Web 服务客户端等待要完成处理 XML Web service 方法的 Web 服务器。"
  remarks: "XML Web 服务方法时已 OneWay 属性设置为`true`，XML Web 服务客户端没有等待要完成处理 XML Web service 方法的 Web 服务器。 Web 服务器消息反序列化时，就会立即<xref:System.Web.Services.Protocols.SoapServerMessage>，但方法之前调用 XML Web 服务，服务器将返回 HTTP 状态码为 202。</xref:System.Web.Services.Protocols.SoapServerMessage> HTTP 202 状态代码指示客户端到 Web 服务器已开始处理消息。 因此，XML Web 服务客户端接收任何 Web 服务器已成功处理了消息的确认。       单向方法不能有返回值或任何 out 参数。       如果你使用具有.NET Framework 1.0 版 XML Web 服务方法<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>属性设置为的 OneWay 属性应用于它们`true`，的确可以访问其<xref:System.Web.HttpContext>使用静态<xref:System.Web.HttpContext.Current%2A>属性。</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 访问<xref:System.Web.HttpContext>，派生类实现中的 XML Web 服务方法<xref:System.Web.Services.WebService>和访问<xref:System.Web.Services.WebService.Context%2A>属性。</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The following code example is an XML Web service method that does not require the client to wait for the XML Web service method to complete. Therefore, the sample sets the OneWay property to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool OneWay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML Web 服务客户端不会等待 Web 服务器来完全处理 XML Web 服务方法。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  id: ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置是否参数将封装在单个 XML 元素下<xref uid=&quot;langword_csharp_Body&quot; name=&quot;Body&quot; href=&quot;&quot;> </xref> SOAP 消息的 XML 部分中的元素。"
  remarks: ''
  example:
  - "The following code example specifies that parameters sent in the SOAP messages sent to and from the `PlaceOrder` XML Web service method are not encapsulated within one XML element.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapParameterStyle ParameterStyle { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapParameterStyle
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;> </xref> SOAP 消息发送到和从 XML Web 服务方法。 默认值是<xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  id: RequestElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置与 XML Web 服务方法，以操作的服务说明中所定义的 SOAP 请求关联的 XML 元素。"
  remarks: "RequestElementName 定义用于包装下的参数的 XML 元素`Body`元素的 SOAP 请求时<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>为<xref:System.Web.Services.Protocols.SoapParameterStyle>。</xref:System.Web.Services.Protocols.SoapParameterStyle> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> 这将反映在表示对 XML Web 服务服务说明中的 XML Web 服务方法的 SOAP 请求的 XSD 架构。"
  example:
  - "The following code example sets the name of the XML element associated with the XML Web service method in the SOAP request to `MyCustomElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestElementName { get; set; }
    return:
      type: System.String
      description: "与 XML Web 服务方法，以操作的服务说明中所定义的 SOAP 请求关联的 XML 元素。 默认值为 XML Web service 方法的名称。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  id: RequestNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置与 XML Web service 方法的 SOAP 请求关联的命名空间。"
  remarks: "RequestNamespace 用于在 XSD 架构中其服务说明中的 XML Web 服务方法。"
  example:
  - "The following code example sets the RequestNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestNamespace { get; set; }
    return:
      type: System.String
      description: "与 XML Web service 方法的 SOAP 请求 XML 命名空间。 默认值为 http://tempuri.org/。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  id: ResponseElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置与 XML Web service 方法的 SOAP 响应关联的 XML 元素。"
  remarks: "ResponseElementName 定义用于包装下的参数的 XML 元素`Body`元素的 SOAP 响应时<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>为<xref:System.Web.Services.Protocols.SoapParameterStyle>。</xref:System.Web.Services.Protocols.SoapParameterStyle> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> 这将反映在表示 XML Web 服务的服务说明中的 XML Web 服务方法的 SOAP 响应的 XSD 架构。"
  example:
  - "The following code example sets the name of the XML element associated with the XML Web service method in the SOAP response to `MyCustomResponseElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseElementName { get; set; }
    return:
      type: System.String
      description: "与 XML Web service 方法的 SOAP 请求关联的 XML 元素。 默认值为的 WebServiceNameResult，其中 WebServiceName 是 XML Web service 方法的名称。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  id: ResponseNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置与 XML Web service 方法的 SOAP 响应关联的 XML 命名空间。"
  remarks: "ResponseNamespace 属性用于在 XSD 架构中其服务说明中的 XML Web 服务方法。"
  example:
  - "The following code example sets the ResponseNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseNamespace { get; set; }
    return:
      type: System.String
      description: "XML Web service 方法的 SOAP 响应关联的 XML 命名空间。 默认值为 http://tempuri.org/。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  id: Use
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "获取或设置格式设置的 SOAP 消息的 XML 部分中的 XML Web 服务方法的参数。"
  remarks: "The Web Services Description Language (WSDL) defines two methods for formatting parameters: <xref:System.Web.Services.Description.SoapBindingUse> and <xref:System.Web.Services.Description.SoapBindingUse>. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting parameters using SOAP encoding, as outlined in the SOAP specification in section 5. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting the parameters using a pre-defined XSD schema for each parameter.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952)."
  example:
  - "The following code example specifies that `Document` / `Encoded` SOAP messages must be sent to the `PlaceOrder` XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Services.Description.SoapBindingUse Use { get; set; }
    return:
      type: System.Web.Services.Description.SoapBindingUse
      description: "<xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref> XML Web 服务方法。 默认值是<xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute()
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute(String)
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapParameterStyle
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapParameterStyle
  nameWithType: SoapParameterStyle
  fullName: System.Web.Services.Protocols.SoapParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
- uid: System.Web.Services.Description.SoapBindingUse
  parent: System.Web.Services.Description
  isExternal: false
  name: SoapBindingUse
  nameWithType: SoapBindingUse
  fullName: System.Web.Services.Description.SoapBindingUse
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
