### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FieldTemplateFactory
  id: FieldTemplateFactory
  children:
  - System.Web.DynamicData.FieldTemplateFactory.#ctor
  - System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  - System.Web.DynamicData.FieldTemplateFactory.Model
  - System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory
  fullName: System.Web.DynamicData.FieldTemplateFactory
  type: Class
  summary: "创建字段的模板。"
  remarks: "默认情况下，此类实现<xref:System.Web.DynamicData.IFieldTemplateFactory>接口，并使用<xref:System.Web.UI.UserControl>类来创建字段模板。</xref:System.Web.UI.UserControl> </xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: 'public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory'
  inheritance:
  - System.Object
  implements:
  - System.Web.DynamicData.IFieldTemplateFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的实例<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>类。"
  syntax:
    content: public FieldTemplateFactory ();
    parameters: []
  overload: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "生成基于字段模板的名称和模式的字段模板的虚拟路径。"
  remarks: "默认情况下，此方法使用的模板名称、 追加模式，然后添加.ascx 扩展可生成字段模板的虚拟路径。 例如，如果`templateName`是 MyFieldTemplate 和`mode`是编辑，则虚拟路径将 MyFieldTemplate_Edit.ascx，在指定的模板文件夹虚拟路径的文件夹中。"
  syntax:
    content: public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: templateName
      type: System.String
      description: "要使用的模板的名称。"
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的字段模板应用于数据列。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的字段模板的显示模式。"
    return:
      type: System.String
      description: "字段模板的虚拟路径。"
  overload: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>templateName</code>为 null。"
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "创建的字段模板使用实例<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>类， <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>类和<xref:System.Web.DynamicData.MetaColumn.UIHint*>属性。</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  syntax:
    content: public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的字段模板应用于数据列。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的字段模板的显示模式。"
    - id: uiHint
      type: System.String
      description: "指定要使用的字段模板。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "接口的实例， <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>类实现。"
  overload: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "确定字段模板的虚拟的路径。"
  remarks: "DynamicData/FieldTemplates 中创建了动态数据字段模板/文件夹，但你可以为你的字段模板创建新的文件夹。 此方法确定包含使用指定的参数的字段模板的文件夹的虚拟路径。"
  syntax:
    content: public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的字段模板应用于数据列。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定显示模式的字段模板-Read Only、 编辑或插入。"
    - id: uiHint
      type: System.String
      description: "指定要使用的字段模板。 此参数将影响的字段模板查找。"
    return:
      type: System.String
      description: "字段模板的虚拟路径。"
  overload: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "将相关联<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>与<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  syntax:
    content: public virtual void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "指定要将与相关联的数据模型<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  id: Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>关联<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>类"
  remarks: "<xref:System.Web.DynamicData.MetaModel>类是一个抽象类，表示数据库和域的对象之间的映射。</xref:System.Web.DynamicData.MetaModel> 动态数据提供了一组表示模型的类 （数据模型）。 通过对象关系设计器 （O/R 设计器） 生成的类。 LINQ to SQL 类模板可用于生成这些类。 此属性用于获取和设置与<xref:System.Web.DynamicData.FieldTemplateFactory>类</xref:System.Web.DynamicData.FieldTemplateFactory>关联的数据模型"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "与关联模型<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "更改数据列的模式。"
  remarks: "动态数据呈现在 Read Only，Insert、 数据或编辑模式。 此方法控制列中呈现的模式。 例如，编辑模式请求更改为 Read Only 如果列是主键列。 无法编辑的是主键的一部分的自动生成和外键列。"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "，它需要的字段模板的列。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "模式 （Read Only、 编辑或 Insert） 更改为。"
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "列呈现模式。"
  overload: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  id: TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "获取或设置要在其中创建字段模板的文件夹。"
  remarks: "在其中创建字段模板的默认文件夹是 /DynamicData/FieldTemplates /。 此文件夹包含默认字段模板以及你创建的自定义字段模板。 如果你创建和指定的字段模板的其他文件夹，动态数据将在你指定的文件夹中创建的字段模板。 有关字段模板的详细信息，请参阅[ASP.NET 动态数据基架](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string TemplateFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "包含的字段模板的文件夹路径。"
  overload: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory.FieldTemplateFactory
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath
  nameWithType: FieldTemplateFactory.BuildVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: FieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: FieldTemplateFactory.Initialize
- uid: System.Web.DynamicData.FieldTemplateFactory.Model*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode
  nameWithType: FieldTemplateFactory.PreprocessMode
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
