### YamlMime:ManagedReference
items:
- uid: System.Security.XmlSyntaxException
  id: XmlSyntaxException
  children:
  - System.Security.XmlSyntaxException.#ctor
  - System.Security.XmlSyntaxException.#ctor(System.Int32)
  - System.Security.XmlSyntaxException.#ctor(System.String)
  - System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)
  - System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: XmlSyntaxException
  nameWithType: XmlSyntaxException
  fullName: System.Security.XmlSyntaxException
  type: Class
  summary: "XML 分析中存在语法错误时引发的异常。 此类不能被继承。"
  remarks: "XmlSyntaxException 使用默认<xref:System.Object.Equals%2A>支持引用相等性的实现。</xref:System.Object.Equals%2A>       XmlSyntaxException 的实例的初始属性值的列表，请参阅构造函数。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class XmlSyntaxException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.XmlSyntaxException.#ctor
  id: '#ctor'
  parent: System.Security.XmlSyntaxException
  langs:
  - csharp
  name: XmlSyntaxException()
  nameWithType: XmlSyntaxException.XmlSyntaxException()
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新实例<xref href=&quot;System.Security.XmlSyntaxException&quot;></xref>使用默认属性的类。"
  remarks: "下表显示<xref:System.Security.XmlSyntaxException>.</xref:System.Security.XmlSyntaxException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|&quot;语法无效。&quot;|</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public XmlSyntaxException ();
    parameters: []
  overload: System.Security.XmlSyntaxException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.XmlSyntaxException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.XmlSyntaxException
  langs:
  - csharp
  name: XmlSyntaxException(Int32)
  nameWithType: XmlSyntaxException.XmlSyntaxException(Int32)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新实例<xref href=&quot;System.Security.XmlSyntaxException&quot;></xref>类异常检测到的行号。"
  remarks: "当检测到换行字符时，将更新的 XML 流的行号。 从 1 开始编号的第一行。       下表显示<xref:System.Security.XmlSyntaxException>.</xref:System.Security.XmlSyntaxException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|&quot;在行上的无效语法`lineNumber`。&quot;|</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public XmlSyntaxException (int lineNumber);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "XML 流中检测到的 XML 语法错误的行号。"
  overload: System.Security.XmlSyntaxException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.XmlSyntaxException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.XmlSyntaxException
  langs:
  - csharp
  name: XmlSyntaxException(String)
  nameWithType: XmlSyntaxException.XmlSyntaxException(String)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新实例<xref href=&quot;System.Security.XmlSyntaxException&quot;></xref>与指定的错误消息的类。"
  remarks: "下表显示<xref:System.Security.XmlSyntaxException>.</xref:System.Security.XmlSyntaxException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public XmlSyntaxException (string message);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
  overload: System.Security.XmlSyntaxException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Security.XmlSyntaxException
  langs:
  - csharp
  name: XmlSyntaxException(Int32,String)
  nameWithType: XmlSyntaxException.XmlSyntaxException(Int32,String)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(Int32,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新实例<xref href=&quot;System.Security.XmlSyntaxException&quot;></xref>使用指定的错误消息和异常检测到的行号的类。"
  remarks: "当检测到换行字符时，将更新的 XML 流的行号。 从 1 开始编号的第一行。       下表显示<xref:System.Security.XmlSyntaxException>.</xref:System.Security.XmlSyntaxException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|&quot;在行上的无效语法`lineNumber`  -  `message` &quot;|</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public XmlSyntaxException (int lineNumber, string message);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "XML 流中检测到的 XML 语法错误的行号。"
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
  overload: System.Security.XmlSyntaxException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.XmlSyntaxException
  langs:
  - csharp
  name: XmlSyntaxException(String,Exception)
  nameWithType: XmlSyntaxException.XmlSyntaxException(String,Exception)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新实例<xref href=&quot;System.Security.XmlSyntaxException&quot;></xref>使用指定的错误消息和对导致此异常的内部异常的引用的类。"
  remarks: "前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回相同的值传递到构造函数中，或`null`如果<xref:System.Exception.InnerException%2A>属性不会提供给构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表显示<xref:System.Security.XmlSyntaxException>.</xref:System.Security.XmlSyntaxException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部异常引用。 |  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public XmlSyntaxException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
    - id: inner
      type: System.Exception
      description: "导致当前异常的异常。 如果`inner`参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中, 引发当前异常<xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;></xref>处理内部异常的块。"
  overload: System.Security.XmlSyntaxException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Security.XmlSyntaxException.#ctor
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException()
  nameWithType: XmlSyntaxException.XmlSyntaxException()
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException()
- uid: System.Security.XmlSyntaxException.#ctor(System.Int32)
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException(Int32)
  nameWithType: XmlSyntaxException.XmlSyntaxException(Int32)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.XmlSyntaxException.#ctor(System.String)
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException(String)
  nameWithType: XmlSyntaxException.XmlSyntaxException(String)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException(Int32,String)
  nameWithType: XmlSyntaxException.XmlSyntaxException(Int32,String)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(Int32,String)
- uid: System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException(String,Exception)
  nameWithType: XmlSyntaxException.XmlSyntaxException(String,Exception)
  fullName: System.Security.XmlSyntaxException.XmlSyntaxException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.XmlSyntaxException.#ctor*
  parent: System.Security.XmlSyntaxException
  isExternal: false
  name: XmlSyntaxException
  nameWithType: XmlSyntaxException.XmlSyntaxException
