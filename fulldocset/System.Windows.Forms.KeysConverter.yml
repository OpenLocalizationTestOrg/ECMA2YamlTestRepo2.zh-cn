### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeysConverter
  id: KeysConverter
  children:
  - System.Windows.Forms.KeysConverter.#ctor
  - System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: KeysConverter
  nameWithType: KeysConverter
  fullName: System.Windows.Forms.KeysConverter
  type: Class
  summary: "提供<xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>要转换<xref href=&quot;System.Windows.Forms.Keys&quot;></xref>对象与其他表示形式之间。"
  remarks: "通常情况下，KeysConverter 类型转换器用于将转换<xref:System.Windows.Forms.Keys>实例与及其相应的本地化<xref:System.String>表示形式。</xref:System.String> </xref:System.Windows.Forms.Keys>"
  example:
  - "The following code example demonstrates how to use the KeysConverter class to convert a <xref:System.Windows.Forms.Keys> to a <xref:System.String>. This example assumes that you have a <xref:System.Windows.Forms.TextBox> named `TextBox1` on a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SystemWindowsFormsKeys#1](~/add/codesnippet/csharp/KeysConverterCS/Form1.cs#1)]\n [!code-vb[SystemWindowsFormsKeys#1](~/add/codesnippet/visualbasic/KeysConverterVB/Form1.vb#1)]"
  syntax:
    content: 'public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements:
  - System.Collections.IComparer
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的实例<xref href=&quot;System.Windows.Forms.KeysConverter&quot;></xref>类。"
  remarks: "这是默认的、<xref:System.Windows.Forms.KeysConverter>类</xref:System.Windows.Forms.KeysConverter>的编译器提供构造函数       通常情况下，你并不直接创建一种<xref:System.Windows.Forms.KeysConverter>。</xref:System.Windows.Forms.KeysConverter>的实例 而应调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的<xref:System.ComponentModel.TypeDescriptor>类。</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 有关详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基的类</xref:System.ComponentModel.TypeConverter>中的示例"
  syntax:
    content: public KeysConverter ();
    parameters: []
  overload: System.Windows.Forms.KeysConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回一个值，该值指示此转换器是否可以将指定的源类型的对象转换为使用指定的上下文的转换器的本机类型。"
  remarks: "CanConvertFrom 方法专用于返回`true`如果`sourceType`形参属于类型<xref:System.String>或<xref:System.Enum>数组; 否则，它将遵从基实现此方法的评估。</xref:System.Enum> </xref:System.String>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或此参数的属性可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: sourceType
      type: System.Type
      description: "<xref:System.Type>将从转换。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以执行转换;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeysConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回一个值，该值指示此转换器是否可以将指定的源类型的对象转换为使用指定的上下文的转换器的本机类型。"
  remarks: "CanConvertTo 方法专用于返回`true`如果`destinationType`形参属于类型<xref:System.Enum>数组; 否则，它将遵从基实现此方法的评估。</xref:System.Enum>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或此参数的属性可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>将转换为。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以执行转换;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeysConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "比较两个键值相等。"
  remarks: "此方法使用<xref:System.String.Compare%2A?displayProperty=fullName>要比较两个对象。</xref:System.String.Compare%2A?displayProperty=fullName>"
  syntax:
    content: public int Compare (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "<xref:System.Object>，表示要比较的第一个键。</xref:System.Object>"
    - id: b
      type: System.Object
      description: "<xref:System.Object>，表示要比较的第二个键。</xref:System.Object>"
    return:
      type: System.Int32
      description: "一个整数，指示两个参数之间的关系。       <table><thead><tr><th> 值类型       </th><th> 条件       </th></tr></thead><tbody><tr><td> 负整数。       </td><td><code>a</code>is less than <code>b</code>.       </td></tr><tr><td> 零       </td><td><code>a</code>equals <code>b</code>.       </td></tr><tr><td> 一个正整数。       </td><td><code>a</code>大于<code> b </code>。       </td></tr></tbody></table>"
  overload: System.Windows.Forms.KeysConverter.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将指定的对象转换为转换器的本机类型。"
  remarks: "ConvertFrom 方法专用于类型的对象转换<xref:System.String>或<xref:System.Enum>数组。</xref:System.Enum> </xref:System.String> 在这种情况下，它将返回类型<xref:System.Windows.Forms.Keys>.</xref:System.Windows.Forms.Keys>的对象 否则，它将遵从基实现此方法的评估。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref uid=&quot;langword_csharp_ITypeDescriptorContext&quot; name=&quot;ITypeDescriptorContext&quot; href=&quot;&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或其属性的此参数可以为 null。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>对象以提供区域设置信息。"
    - id: value
      type: System.Object
      description: "要转换的对象。"
    return:
      type: System.Object
      description: "一个对象，表示转换后<code> value </code>。"
  overload: System.Windows.Forms.KeysConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "提供了无效的键组合。       -或者-提供了一个无效的键名称。"
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "将指定的对象转换为指定的目标类型。"
  remarks: "ConvertTo 方法专用于转换的类型<xref:System.Windows.Forms.Keys>或<xref:System.Int32>。</xref:System.Int32></xref:System.Windows.Forms.Keys>对象 在这种情况下，它将返回类型<xref:System.String>.</xref:System.String>的对象 否则，它将遵从基实现此方法的评估。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或此参数的属性可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>提供区域设置信息。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要转换。</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>要转换到的对象。</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>，它表示转换后<code> value </code>。</xref:System.Object>"
  overload: System.Windows.Forms.KeysConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返回用于提供格式上下文适用于此类型转换器的数据类型的标准值集合。"
  remarks: "返回的集合包含可以转换的键的值。"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或此参数的属性可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>保存一组标准的有效的值，如果数据类型不支持标准值集可以为空。</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Windows.Forms.KeysConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "确定从是否返回的标准值列表<xref uid=&quot;langword_csharp_GetStandardValues&quot; name=&quot;GetStandardValues&quot; href=&quot;&quot;></xref>为独占列表使用指定<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>。"
  remarks: "`context`此方法的标准实现中未使用参数。       如果该列表是独占的则任何其他值不都无效，如在<xref:System.Enum>数据类型。</xref:System.Enum> 如果该列表不是独占的则说明有的标准值列表之外的其他有效值<xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A>提供。</xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "格式化程序上下文。 此对象可用于提取有关从中调用该转换器的环境的附加信息。 这可能是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，因此应始终对其进行检查。 同样，上下文对象上的属性也可能返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果从返回的集合<xref:System.Windows.Forms.KeysConverter.GetStandardValues*>是可能值的穷举列表; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果还可能有其他值。</xref:System.Windows.Forms.KeysConverter.GetStandardValues*> 此方法的默认实现始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取一个值，该值指示此对象是否支持可以从列表中选取的值的标准集。"
  remarks: "`context`此方法的标准实现中未使用参数。"
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文，用于提取有关从中调用该转换器的环境的附加信息。 此参数或此参数的属性可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.KeysConverter.#ctor
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.#ctor*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter
  nameWithType: KeysConverter.KeysConverter
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: KeysConverter.CanConvertFrom
- uid: System.Windows.Forms.KeysConverter.CanConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: KeysConverter.CanConvertTo
- uid: System.Windows.Forms.KeysConverter.Compare*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare
  nameWithType: KeysConverter.Compare
- uid: System.Windows.Forms.KeysConverter.ConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: KeysConverter.ConvertFrom
- uid: System.Windows.Forms.KeysConverter.ConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo
  nameWithType: KeysConverter.ConvertTo
- uid: System.Windows.Forms.KeysConverter.GetStandardValues*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: KeysConverter.GetStandardValues
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: KeysConverter.GetStandardValuesExclusive
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: KeysConverter.GetStandardValuesSupported
