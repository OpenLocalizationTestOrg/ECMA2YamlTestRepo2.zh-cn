### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  id: FormViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件都将引发<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件时的插入按钮 (带有按钮其`CommandName`属性设置为&quot;插入&quot;) 在控件内单击时，但之后<xref:System.Web.UI.WebControls.FormView>控件插入记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，例如检查插入操作的结果，每次此事件发生时的事件处理方法。       FormViewInsertedEventArgs 对象传递给事件处理方法，可用于确定受影响的记录数以及可能发生的任何异常。 若要确定受 insert 操作的记录数，请使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>属性以确定是否发生任何异常。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 如果你需要访问插入的记录的值，请使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       默认情况下，<xref:System.Web.UI.WebControls.FormView>控件返回到所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>后插入操作的属性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 如果在插入操作期间发生异常，则可以保留<xref:System.Web.UI.WebControls.FormView>控件在插入模式下设置<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>属性`true`。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       有关的实例的初始属性值的列表<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>类，请参阅<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>"
  example:
  - "The following example demonstrates how to use the FormViewInsertedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>类</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>的新实例       下表显示<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|值`affectedRows`参数。 |  |<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|中包含的<xref:System.Exception?displayProperty=fullName>对象`e`参数。 |  |<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|初始化为`false`。 |  |<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|初始化为`false`。 |    &1;> [!NOTE]&1;> 在引发事件时，主要由控件开发人员使用此构造函数。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "插入操作所影响的行数。"
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>，表示执行插入操作时引发的异常。</xref:System.Exception> 如果未不引发任何异常，则使用<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>为此参数。"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取插入操作所影响的行的数。"
  remarks: "AffectedRows 属性用于确定的插入操作所影响的记录数。 此属性通常用于验证是否在以下情况下插入了正确的记录数:-验证是否已插入单个记录。 有时，编写不当 insert 语句可以插入多个记录。      -验证在不会引发异常的插入操作期间发生错误时已插入一条记录。      -验证时数据源控件的支持冲突检测 （乐观并发），如已插入一条记录<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>控制，具有其<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>属性设置为`ConflictOptions.CompareAllValues`枚举值。</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 在此设置，则可能无法插入同时具有相同的密钥值作为由另一个用户记录的记录。"
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was inserted during the insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_880_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_880_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "插入操作所影响的行数。"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的异常 （如果有） 插入操作过程中引发。"
  remarks: "使用异常属性以确定异常 （如果有） 插入操作过程中引发。 如果未引发异常，此属性返回`null`。      1> [!NOTE]&1;> 如果引发了异常，并且你决定要处理的事件处理程序中的异常，请务必设置<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>属性`true`; 否则为<xref:System.Web.UI.WebControls.FormView>控件重新引发的异常。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception was raised during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_372_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_372_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>，表示插入操作过程中引发的异常。</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否在插入操作期间引发的异常在事件处理程序中处理。"
  remarks: "在插入操作期间引发异常时，请使用 ExceptionHandled 属性指示是否处理了该异常在事件处理程序。 当此属性设置为`true`，将异常认为是进行处理并且不会重新引发。 如果此属性设置为`false`、<xref:System.Web.UI.WebControls.FormView>控件重新引发的异常。</xref:System.Web.UI.WebControls.FormView> 若要确定引发哪个异常，请使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_826_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_826_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果异常已处理在事件处理程序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件插入操作完成后应保留在插入模式。"
  remarks: "默认情况下，<xref:System.Web.UI.WebControls.FormView>控件返回到所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>属性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> KeepInInsertMode 属性用于指定是否<xref:System.Web.UI.WebControls.FormView>控件插入操作完成后应保留在插入模式。</xref:System.Web.UI.WebControls.FormView> 若要保留<xref:System.Web.UI.WebControls.FormView>控制在插入模式下，将此属性设置为`true`。</xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;> 仅当 （如正在引发的异常） 发生的情况下需要与往常一样行为不同的控件时，应使用此属性。 如果<xref:System.Web.UI.WebControls.FormView>控件需要保持在插入模式下，默认情况下，设置<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>属性改为。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInInsertMode property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_181_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_181_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要插入操作; 完成后仍保持插入模式否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个字典，其中包含插入的记录的字段名称/值对。"
  remarks: "值属性用于访问插入的记录的字段的值。 例如，可以使用这些值来记录插入的记录。       值属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>接口。</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry?displayProperty=fullName>表示插入的记录的字段的对象。</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      1> [!NOTE]&1;> 作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>对象来访问该字段值直接。</xref:System.Collections.Specialized.OrderedDictionary> 使用索引器的优点是它直接返回字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the items in the Values collection.  \n  \n [!code-vb[FormViewInsertedEventArgsValues#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1339_1.aspx)]\n [!code-cs[FormViewInsertedEventArgsValues#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1339_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>对象，其中包含已插入记录的键字段名称/值对的字典。"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
