### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  id: LinqDataSourceDeleteEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleting&quot;></xref>事件。"
  remarks: "LinqDataSourceDeleteEventArgs 对象传递给任何处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>属性包含的数据将被删除。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>       如果表示数据源的对象引发验证异常，然后再删除<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>属性包含的<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>类</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>实例</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>的数据 你可以检索通过所有验证异常<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 如果不验证引发异常，<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>属性包含`null`。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 如果你处理验证异常，同时不想要重新引发的异常，设置<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>       创建的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，以便验证数据，若要检查的数据类中，验证错误或取消删除操作。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 通过设置取消删除操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       默认情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件原始视图中值从数据源状态的存储在 Web 页中，除其<xref:System.Data.Linq.Mapping.ColumnAttribute>属性标记为`UpdateCheck.Never`。</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> LINQ to SQL 会自动删除数据之前检查数据的完整性。 通过比较中的数据源视图状态中存储的原始值的当前值执行此操作。 可以通过创建的处理程序中执行其他数据验证<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_255_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_255_1.cs)]"
  syntax:
    content: 'public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;></xref>类。"
  syntax:
    content: public LinqDataSourceDeleteEventArgs (object originalObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "中指定的类型的对象<xref:System.Web.UI.WebControls.LinqDataSource.TableName*>属性，它包含要删除的数据。</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;></xref>使用指定异常类。"
  syntax:
    content: public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "验证要删除的数据时出现异常。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取在执行删除操作之前验证数据时引发的异常。"
  remarks: "如果执行删除操作之前，将引发验证异常，该异常存储在异常属性。 中的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，你可以检索通过异常属性的异常。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "异常，如果出现错误;否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否处理了该异常并，它应不会再次引发。"
  remarks: "你可以创建的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件来检查在删除操作之前引发验证异常。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 如果你处理的异常，并且不希望它再次引发，ExceptionHandled 属性设置为`true`。 如果你未设置为 ExceptionHandled 属性`true`，该异常将传播到调用堆栈中的下一步事件处理程序。"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果处理了该异常;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取表示要删除的数据的对象。"
  remarks: "OriginalObject 属性可用于之前就会删除与数据交互。 你可以验证数据，也可以通过设置取消事件<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 你可以修改通过更改值或 OriginalObject 属性中对象的值删除哪些记录。"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the OriginalObject property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_196_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_196_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "中指定的类型的对象<xref:System.Web.UI.WebControls.LinqDataSource.TableName*>属性，它包含要删除的数据。</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
