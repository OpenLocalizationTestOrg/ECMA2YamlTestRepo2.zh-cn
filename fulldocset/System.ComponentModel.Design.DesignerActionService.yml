### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionService
  id: DesignerActionService
  children:
  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Clear
  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  - System.ComponentModel.Design.DesignerActionService.Dispose
  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  langs:
  - csharp
  name: DesignerActionService
  nameWithType: DesignerActionService
  fullName: System.ComponentModel.Design.DesignerActionService
  type: Class
  summary: "建立管理的集合的设计时服务<xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;></xref>组件的对象。"
  remarks: "DesignerActionService 类负责管理集合<xref:System.ComponentModel.Design.DesignerActionItem>在设计时存在窗体的组件的每个实例的对象。</xref:System.ComponentModel.Design.DesignerActionItem> 此类提供了直接推送模型项创建的并主要用于通过设计时工具开发人员，但它还可以使用的组件和自定义控件开发人员。       设计时工具开发人员将需要确定要显示的组件和确定何时更改此列表项的列表。 他们还可能与智能标记面板对象结合使用来创建操作的外接程序。       高级开发人员可能需要动态控制的项关联的组件，从而替换或补充标准拉取模式的组件。 例如，可以根据其使用和组件的设计时状态的上下文更改面板命令。      1> [!NOTE]&1;> DesignerActionService 实际上是推送和拉取模型背后的推动服务; 但是，在后一种情况中它的操作隐式。       DesignerActionService 提供了一个简单的界面，用于访问和操作对于每个组件，包括以下方法和事件的项:-<xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>方法确定是否 DesignerActionService 当前正在管理特定组件。</xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>      -<xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>方法支持的项列表的枚举。</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      -<xref:System.ComponentModel.Design.DesignerActionService.Add%2A>方法允许将添加<xref:System.ComponentModel.Design.DesignerActionList>或<xref:System.ComponentModel.Design.DesignerActionListCollection>到组件实例的现有项集。</xref:System.ComponentModel.Design.DesignerActionListCollection> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 与此相反，<xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>方法中删除一个或多个与组件关联的项列表。</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>          1> [!NOTE]&1;><xref:System.ComponentModel.Design.DesignerActionService.Add%2A>方法表示将控制面板项与组件相关联的直推技术模型。</xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 与此相反，请求模型依赖于重写<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>为该组件的设计器类的属性。</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 在设计环境负责将这些项添加到当前 DesignerActionService，设计图面上创建一个组件时。          1> [!IMPORTANT]&1;> <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>， <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>， <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>，和<xref:System.ComponentModel.Design.DesignerActionService.Clear%2A>方法只考虑，或会影响推送模型项。</xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> </xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> </xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A>      -<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件指示当组件更改的项的集合。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>       因为它通常需要将一些组件的设计时快捷菜单和其面板中相同的控制面板项，之间存在很大程度的互操作性<xref:System.ComponentModel.Design.DesignerActionItem>对象和设计器谓词。</xref:System.ComponentModel.Design.DesignerActionItem>       如果组件设计器不显式指定<xref:System.ComponentModel.Design.DesignerActionList>(即，它不包含被重写<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>属性)，则列表将创建从现有的设计器谓词。</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionList> 指定这些谓词<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>属性。</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> 在这种情况下，内部的谓词列表类用于放置的谓词项面板项的集合。       如果你想<xref:System.ComponentModel.Design.DesignerActionMethodItem>用于同时用作面板条目和设计时快捷菜单项，则可以设置`includeAsDesignerVerb`该项的构造函数中的参数。</xref:System.ComponentModel.Design.DesignerActionMethodItem>       使用<xref:System.ComponentModel.Design.DesignerActionUIService>以控制您的设计器的<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>的显示</xref:System.ComponentModel.Design.DesignerActionUIService>"
  syntax:
    content: 'public class DesignerActionService : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;></xref>类。"
  remarks: "服务提供程序是必需的监视所选内容和组件的更改。 它应支持<xref:System.ComponentModel.Design.IDesignerHost>和<xref:System.ComponentModel.Design.IComponentChangeService>类型。</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IDesignerHost> <xref:System.ComponentModel.Design.DesignerActionService>类使用内部表来管理组件和其关联<xref:System.ComponentModel.Design.DesignerActionList>智能标记。</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService>       通常情况下，组件开发人员不需要创建此类; 的实例相反，它们能够获取现有实例通过调用<xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>"
  syntax:
    content: public DesignerActionService (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "服务提供程序当前的设计时环境中。"
  overload: System.ComponentModel.Design.DesignerActionService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "将添加<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;></xref>到当前集合的托管的智能标记。"
  remarks: "Add 方法表示添加智能标记项推送模型。 备用请求模型依赖于重写<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>相应组件的设计器中的属性。</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       当调用此方法时，扫描要添加的列表中是否有任何<xref:System.ComponentModel.Design.DesignerActionMethodItem>与<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>属性设置为`true`。</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> 这些项添加到此组件，通过调用的设计器谓词的列表<xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       在组件实例的基础上管理智能标记。 托管的集合可能包含重复条目。       此方法将引发<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>关联与智能标记。"
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>其中包含新的智能标记项，要添加。"
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "将添加<xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;></xref>到当前集合的托管的智能标记。"
  remarks: "Add 方法表示添加智能标记项推送模型。 备用请求模型依赖于重写<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>相应组件的设计器中的属性。</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       当调用此方法时，扫描要添加的列表中是否有任何<xref:System.ComponentModel.Design.DesignerActionMethodItem>与<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>属性设置为`true`。</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> 这些项添加到此组件，通过调用的设计器谓词的列表<xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       在组件实例的基础上管理智能标记。 托管的集合可能包含重复条目。       此方法将引发<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>关联与智能标记。"
    - id: designerActionListCollection
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref>其中包含新的智能标记项，要添加。"
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  id: Clear
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放从管理的所有组件并清除所有推送模型智能标记列表。"
  remarks: "Clear 方法清空内部表用于存储有关组件和它们推送模型智能标记的列表的信息。      1> [!CAUTION]&1;> 由于此方法会影响管理当前服务，并不只是当前组件的所有组件，此方法应谨慎地使用。 通常情况下，设计时工具开发人员使用它时重置设计图面。 组件开发人员应使用一种<xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>方法改为删除单个智能标记项或列出。</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       A<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>每个组件的以前由当前的服务引发事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  id: Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "确定是否当前的智能标记服务管理指定组件的操作列表。"
  remarks: "Contains 方法只识别推送模型智能标记，与具有的组件相关联<xref:System.ComponentModel.Design.DesignerActionService.Add%2A>方法。</xref:System.ComponentModel.Design.DesignerActionService.Add%2A>       尽管没有结构限制的并发数量<xref:System.ComponentModel.Design.DesignerActionService>设计时工具创建的实例，通常只能运行一个服务实例创建每个设计图面。</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public bool Contains (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>搜索。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该组件由当前的服务;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.DesignerActionService.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  id: DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "发生时<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;></xref>是删除或添加任何组件。"
  remarks: "下表显示的一套与 DesignerActionListsChanged 事件相关联的专用类。      |专用类型 |说明 |  |----------------------|-----------------|  |<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|将特定的信息添加到智能标记列表管理。</xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> 此类的专用化时从<xref:System.EventArgs>。 |  |<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|连接<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>与其处理程序。 |  |<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|表示是否已添加或删除列表。 |      有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</xref:System.ComponentModel.Design.DesignerActionListsChangedType> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler> </xref:System.EventArgs>"
  syntax:
    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;
    return:
      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放使用的所有资源<xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;></xref>类。"
  remarks: "Dispose 方法是由规定的唯一方法的实现<xref:System.IDisposable>接口。</xref:System.IDisposable> 在完成使用<xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService>时调用此方法 它执行两个主要操作:-从通过调用在设计环境中的可用服务列表中删除当前服务<xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>方法。</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -取消订阅组件更改事件从关联<xref:System.ComponentModel.Design.IComponentChangeService>接口。</xref:System.ComponentModel.Design.IComponentChangeService>       在完成使用<xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService>时调用的 Dispose Dispose 方法离开<xref:System.ComponentModel.Design.DesignerActionService>中不可用状态。</xref:System.ComponentModel.Design.DesignerActionService> 调用 Dispose 后，必须释放对所有引用<xref:System.ComponentModel.Design.DesignerActionService>以便垃圾回收器才能回收的内存，<xref:System.ComponentModel.Design.DesignerActionService>占用。</xref:System.ComponentModel.Design.DesignerActionService> </xref:System.ComponentModel.Design.DesignerActionService> 有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.ComponentModel.Design.DesignerActionService>。</xref:System.ComponentModel.Design.DesignerActionService>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.ComponentModel.Design.DesignerActionService>对象的`Finalize`方法。</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "释放由非托管的资源<xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "<xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>方法是由规定的唯一方法的实现<xref:System.IDisposable>接口。</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> 在完成使用<xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService>时调用此方法 它执行两个主要操作:-从通过调用在设计环境中的可用服务列表中删除当前服务<xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>方法。</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -取消订阅组件更改事件从关联<xref:System.ComponentModel.Design.IComponentChangeService>接口。</xref:System.ComponentModel.Design.IComponentChangeService>       此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数是`true`，此方法释放由任何托管对象持有的全部资源此<xref:System.ComponentModel.Design.DesignerActionService>引用。</xref:System.ComponentModel.Design.DesignerActionService> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  id: GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "返回与组件相关联的智能标记项列表的集合。"
  remarks: "GetComponentActions 方法等效于调用<xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29>方法使用`type` <xref:System.ComponentModel.Design.ComponentActionsType>.</xref:System.ComponentModel.Design.ComponentActionsType>参数</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> 因此，返回的集合将包含推送和拉取智能标记列表。       返回<xref:System.ComponentModel.Design.DesignerActionListCollection>是通过添加的项列表的并集<xref:System.ComponentModel.Design.DesignerActionService.Add%2A>方法以及列表从获取<xref:System.ComponentModel.Design.DesignerCommandSet>实例获取从组件的站点。</xref:System.ComponentModel.Design.DesignerCommandSet> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> </xref:System.ComponentModel.Design.DesignerActionListCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "与之关联的智能标记该组件。"
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "指定组件的智能标记的集合。"
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "返回的智能标记的集合关联的组件的指定类型的项列表。"
  remarks: "此版本的重载<xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>方法筛选`type`参数，它可以具有以下值之一。</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      |值 |说明 |  |-----------|-----------------|  |<xref:System.ComponentModel.Design.ComponentActionsType>|所有关联的智能标记。 |  |<xref:System.ComponentModel.Design.ComponentActionsType>|拉出模型智能标记仅。 |  |<xref:System.ComponentModel.Design.ComponentActionsType>|推送模型智能标记仅。 |      如果组件的关联设计器不提供的拉出模型智能标记列表中，则 GetComponentActions 方法将改为使用设计器的设计时快捷菜单项从<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>属性。</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "与之关联的智能标记该组件。"
    - id: type
      type: System.ComponentModel.Design.ComponentActionsType
      description: "<xref href=&quot;System.ComponentModel.Design.ComponentActionsType&quot;> </xref>来筛选与关联的智能标记。"
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "指定组件的指定类型的智能标记的集合。"
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "检索与组件相关联的拉出模型智能标记。"
  remarks: "GetComponentDesignerActions 方法是为帮助器方法<xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>方法。</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 拉出模型的 GetComponentDesignerActions 搜索智能标记的类型<xref:System.ComponentModel.Design.ComponentActionsType>，然后将它们添加到所提供`actionLists`集合。</xref:System.ComponentModel.Design.ComponentActionsType>       如果组件的开发人员未显式提供通过智能标记的集合<xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>及其设计器的属性，此方法将重复使用的设计时快捷菜单项，通过获取<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>设计器的属性。</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>"
  syntax:
    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "与之关联的智能标记该组件。"
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "要添加到关联的智能标记的集合。"
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "检索与组件相关联的推送模型智能标记。"
  remarks: "GetComponentServiceActions 方法是为帮助器方法<xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>方法。</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 搜索推送模型的类型的智能标记<xref:System.ComponentModel.Design.ComponentActionsType>，然后将它们添加到所提供`actionLists`集合。</xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "与之关联的智能标记该组件。"
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "要添加到关联的智能标记的集合。"
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "从管理当前服务的所有组件中移除指定的智能标记列表。"
  remarks: "此版本的<xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>设计工具开发人员通常使用方法，因为组件开发人员通常不知道哪些其他组件存在于当前设计空间。</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       如果成功，此方法将引发<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "要删除的智能标记的列表。"
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>actionList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "移除与指定组件关联的所有智能标记列表。"
  remarks: "如果成功，删除方法将引发<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "要取消从的智能标记关联的组件。"
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "从指定的组件中移除指定的智能标记列表。"
  remarks: "如果成功，删除方法将引发<xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>事件。</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "要取消从的智能标记关联的组件。"
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "要删除的智能标记列表。"
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或两个参数<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionListCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListCollection
  nameWithType: DesignerActionListCollection
  fullName: System.ComponentModel.Design.DesignerActionListCollection
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListsChangedEventHandler
  nameWithType: DesignerActionListsChangedEventHandler
  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
- uid: System.ComponentModel.Design.ComponentActionsType
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentActionsType
  nameWithType: ComponentActionsType
  fullName: System.ComponentModel.Design.ComponentActionsType
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.#ctor*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService
  nameWithType: DesignerActionService.DesignerActionService
- uid: System.ComponentModel.Design.DesignerActionService.Add*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add
  nameWithType: DesignerActionService.Add
- uid: System.ComponentModel.Design.DesignerActionService.Clear*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear
  nameWithType: DesignerActionService.Clear
- uid: System.ComponentModel.Design.DesignerActionService.Contains*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains
  nameWithType: DesignerActionService.Contains
- uid: System.ComponentModel.Design.DesignerActionService.Dispose*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose
  nameWithType: DesignerActionService.Dispose
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions
  nameWithType: DesignerActionService.GetComponentActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions
  nameWithType: DesignerActionService.GetComponentDesignerActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions
  nameWithType: DesignerActionService.GetComponentServiceActions
- uid: System.ComponentModel.Design.DesignerActionService.Remove*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove
  nameWithType: DesignerActionService.Remove
