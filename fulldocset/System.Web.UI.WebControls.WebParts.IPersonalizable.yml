### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable
  id: IPersonalizable
  children:
  - System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  langs:
  - csharp
  name: IPersonalizable
  nameWithType: IPersonalizable
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable
  type: Interface
  summary: "定义用于应用程序和提取的个性化设置状态的其他管理功能。"
  remarks: "除了使用`Personalizable`属性上的控件属性，控件还可以实现 IPersonalizable 对应用程序和提取的个性化设置状态的其他管理功能。 例如，需要管理的私有状态信息的控件应实现此接口。 复杂的机制，例如自定义缓存解决方案，数据暂留到大型机或 XML Web 服务，通过访问个性化的数据的控件还应实现此接口。      1> [!IMPORTANT]&1;> 不应添加基于在 App_Code 目录中定义的类的类型，并且然后依赖于默认二进制序列化机制。 因为，它们可以及时更改随机点在其程序集名称，则不一致的二进制文件的可序列化 App_Code 基于工件。"
  example:
  - "The following code example demonstrates how to use the IPersonalizable interface. The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`. The following code is the .aspx file for the example.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_1.aspx)]  \n  \n The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. This file should be placed in the App_Code directory.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public interface IPersonalizable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  id: IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否已更改自定义控件管理的数据。"
  remarks: "时管理控件的数据已更改，控件才被视为&quot;脏&quot;。 控件应返回`true`如果自定义数据它管理通过<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>接口已更改。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 如果控件返回`true`从该属性，该控件的<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>在属性值提取过程中调用接口方法的实现。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>      1> [!NOTE]&1;> 此属性会自动检查个性化基础结构的处理 POST 请求的后期阶段。 但是，对于 GET 请求中，不检查从 IsDirty 属性返回的值。 某些其他事件必须导致控件被视为&quot;脏&quot;的任何控件状态-不只是数据由<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>-要保存。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 如果控件可以将自身标记为&quot;脏&quot;GET 请求过程，或在某些非常特定的边界条件下的个性化基础结构中将控件视为&quot;脏&quot;期间 GET 请求中，然后<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>将始终调用。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>       控件可以引用其关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，并检查<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>属性来确定当前作用域。</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件的自定义数据的&quot;脏&quot;状态应该适用于当前作用域。"
  example:
  - "The following code example demonstrates use of the IsDirty property. The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_1.aspx)]  \n  \n The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`. This file should be placed in the App_Code directory to run the example. Note that the source code implements the IsDirty property.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用自定义数据管理<xref href=&quot;System.Web.UI.WebControls.WebParts.IPersonalizable&quot;></xref>接口已更改; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "将自定义数据加载到控件。"
  remarks: "允许它加载到其自身的自定义数据的控件上调用此方法。 它还可以返回一个值，该值指示是否必须重新写入控件的自定义状态到基础数据存储区，无论是否已更改的页上的任何其他个性化数据。 控件可以设置其自己的自定义属性，并执行其他内部逻辑基于个性化字典中包含的值。 由 Web 部件控件集应用到控件的个性化数据时调用此方法。       你还应注意的合并行为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-与作用域<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>的作用域中包含属性<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>对象。</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> `state`参数包含从基础数据存储区加载的自定义数据的合并表示形式。 在<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>作用域，请在页本身时以前添加的所有值<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>作用都域将可用。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 中<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>作用域，请与关联的值如果<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>个性化设置作用域具有一个值时在页面处于添加<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>作用域和不同的值时在页面处于<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>作用域，则将仅包括个性化基础结构<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-范围值 (相对于<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>确定值的范围) 内`state`参数。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>"
  example:
  - "The following code example demonstrates an implementation of the Load method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/cca5cab3-402e-4f93-9a4b-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/cca5cab3-402e-4f93-9a4b-_1.vb)]"
  syntax:
    content: public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref>包含从基础数据存储区加载的自定义指定了作用域的数据。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "将自定义属性和内部状态信息保存在控件的<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;></xref>对象。"
  remarks: "服务器控件可以存储其自己的自定义属性和内部状态信息<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>中指定`state`参数。</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> 信息存储为一系列名称/值对。 要使用它可以识别对通过该控件所做的后续调用的过程的名称/值对的控件负责<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>方法。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>       控件可以引用其关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，并检查<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>对象来确定当前作用域。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 自定义状态信息应该适用于当前作用域。 请注意，每个<xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>值添加到<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>对象应为适当的作用域值，与关联，因为合并时，个性化基础结构依赖于此<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>的作用域之前将其传递给自定义数据<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>方法。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> </xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>       在使用 Web 部件的标准 ASP.NET 实现时，控件必须确保放置在状态字典的对象可以进行序列化 ASP.NET<xref:System.Web.UI.ObjectStateFormatter>类。</xref:System.Web.UI.ObjectStateFormatter> 在实践中，这意味着以下:-是自动序列化的.NET Framework 基元类型、 字符串和集合面向.NET Framework 的类型，如数组、 数组列表、 哈希表和混合字典。      的提供其自己自定义类型<xref:System.ComponentModel.TypeConverter>类可以为序列化和反序列化从字符串被视为可序列化。</xref:System.ComponentModel.TypeConverter>      -可以通过序列化的自定义类型<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>类被视为可序列化。</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>      1> [!IMPORTANT]&1;> 不应添加基于在 App_Code 目录中定义的类的类型，并且然后依赖于默认二进制序列化机制。 因为，它们可以及时更改随机点在其程序集名称，则不一致的二进制文件的可序列化 App_Code 基于工件。"
  example:
  - "The following code example demonstrates implementing the Save method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/9094b1c1-dbad-4f97-8b12-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/9094b1c1-dbad-4f97-8b12-_1.vb)]"
  syntax:
    content: public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref>包含从基础数据存储区加载的自定义指定了作用域的数据。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load
  nameWithType: IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save
  nameWithType: IPersonalizable.Save
