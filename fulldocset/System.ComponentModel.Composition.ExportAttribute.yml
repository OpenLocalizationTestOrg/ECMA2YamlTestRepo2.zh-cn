### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportAttribute
  id: ExportAttribute
  children:
  - System.ComponentModel.Composition.ExportAttribute.#ctor
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ExportAttribute.ContractName
  - System.ComponentModel.Composition.ExportAttribute.ContractType
  langs:
  - csharp
  name: ExportAttribute
  nameWithType: ExportAttribute
  fullName: System.ComponentModel.Composition.ExportAttribute
  type: Class
  summary: "指定的类型、 属性、 字段或方法提供特定的导出。"
  remarks: "在特性化编程模型中，ExportAttribute 声明部件导出，或提供到撰写容器，该类会满足特定协定的对象。 在组合，其导入具有匹配协定的部件将具有由导出对象填写这些依赖关系。       ExportAttribute 可以修饰引发整个类或属性，字段或方法的类。 如果整个类进行修饰，类的实例是导出的对象。 如果进行了修饰类的成员，导出的对象将修饰的成员的值。       协定的匹配由主要由协定名称和协定类型。 有关详细信息，请参阅<xref:System.ComponentModel.Composition.ImportAttribute>。</xref:System.ComponentModel.Composition.ImportAttribute>"
  example:
  - "The following example shows three classes decorated with the ExportAttribute, and three imports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)]

      public class ExportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref>类，导出该类型或成员使用在默认协定名称下此特性标记。"
  remarks: "默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法上的属性或字段的类型，或使用此特性标记的类型。</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       使用此特性标记的方法必须通过使用其中一种<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29></xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>指定协定名称或类型       通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref>类，导出该类型或成员标记有指定的协定名称下不具有此属性。"
  remarks: "默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法上的属性或字段的类型，或这使用此特性标记的类型。</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       使用此特性标记的方法必须通过使用 ExportAttribute 或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>指定协定名称或类型       通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "用于导出的类型或成员使用此特性标记的协定名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;) 以使用默认协定名称。"
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref>类，导出该类型或成员使用派生自指定类型的协定名称下不具有此属性标记。"
  remarks: "协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法`contractType`。</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法上的属性或字段的类型，或使用此特性标记的类型。</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       使用此特性标记的方法必须通过使用指定的协定名称或类型<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或 ExportAttribute。</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "从中派生的用于导出的类型或成员使用此特性标记的协定名称的类型或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用默认协定名称。"
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref>类，导出指定的协定名称下指定的类型。"
  syntax:
    content: public ExportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "用于导出的类型或成员使用此特性标记的协定名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;) 以使用默认协定名称。"
    - id: contractType
      type: System.Type
      description: "要导出的类型。"
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "获取用于导出的类型或成员使用此特性标记的协定名称。"
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "使用此特性标记用于导出的类型或成员的协定名称。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.ComponentModel.Composition.ExportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "获取此属性附加到的成员由导出的协定类型。"
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "提供的导出的类型。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，这意味着，将通过查看在此导出中附加到成员上的类型获取类型。"
  overload: System.ComponentModel.Composition.ExportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute
  nameWithType: ExportAttribute.ExportAttribute
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
