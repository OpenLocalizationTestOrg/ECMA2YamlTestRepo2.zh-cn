### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBindingExpression
  id: MultiBindingExpression
  children:
  - System.Windows.Data.MultiBindingExpression.BindingExpressions
  - System.Windows.Data.MultiBindingExpression.HasError
  - System.Windows.Data.MultiBindingExpression.HasValidationError
  - System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  - System.Windows.Data.MultiBindingExpression.UpdateSource
  - System.Windows.Data.MultiBindingExpression.UpdateTarget
  - System.Windows.Data.MultiBindingExpression.ValidationError
  langs:
  - csharp
  name: MultiBindingExpression
  nameWithType: MultiBindingExpression
  fullName: System.Windows.Data.MultiBindingExpression
  type: Class
  summary: "包含有关的单个实例的实例信息<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>。"
  remarks: "MultiBindingExpression 描述一种<xref:System.Windows.Data.MultiBinding>。</xref:System.Windows.Data.MultiBinding>的单个运行时实例 因此，它描述的集合<xref:System.Windows.Data.BindingExpression>对象附加到单个绑定目标属性。</xref:System.Windows.Data.BindingExpression>       有关绑定表达式的信息，请参阅中的绑定和 BindingExpression 部分[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。       转换器的属性值使用<xref:System.Windows.Data.BindingExpression>MultiBindingExpression 中的对象生成一个最终值的目标属性。</xref:System.Windows.Data.BindingExpression> 按反方向，目标属性值转换为一组值反馈到<xref:System.Windows.Data.BindingExpression>对象。</xref:System.Windows.Data.BindingExpression> 有关详细信息，请参阅<xref:System.Windows.Data.MultiBinding>。</xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: 'public sealed class MultiBindingExpression : System.Windows.Data.BindingExpressionBase'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements: []
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: MultiBindingExpression.BindingExpressions
  fullName: System.Windows.Data.MultiBindingExpression.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的集合<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>的此实例中的对象<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref>。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
      description: "只读集合<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>对象。 即使返回类型是一套<xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;></xref>对象返回的集合将只包含<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>对象，因为<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>类当前仅支持<xref href=&quot;System.Windows.Data.Binding&quot;></xref>对象。"
  overload: System.Windows.Data.MultiBindingExpression.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.HasError
  id: HasError
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: HasError
  nameWithType: MultiBindingExpression.HasError
  fullName: System.Windows.Data.MultiBindingExpression.HasError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个值，该值指示是否有任何内部<xref href=&quot;System.Windows.Data.Binding&quot;></xref>对象或<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>自身是否存在无效验证规则。"
  remarks: "你可以上都设置验证规则<xref:System.Windows.Data.MultiBinding>对象和个人<xref:System.Windows.Data.Binding>中的对象<xref:System.Windows.Data.MultiBinding>对象。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.MultiBinding> 绑定引擎将计算<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>上<xref:System.Windows.Data.MultiBinding>对象时的值移到的绑定目标属性从<xref:System.Windows.Data.IMultiValueConverter>对象 （多值转换器）。</xref:System.Windows.Data.IMultiValueConverter> </xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 之后，当从转换器移到单个绑定的绑定源属性的值绑定引擎将计算<xref:System.Windows.Data.Binding.ValidationRules%2A>上<xref:System.Windows.Data.Binding>对象。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A>"
  syntax:
    content: public override bool HasError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果至少一个内部的<xref href=&quot;System.Windows.Data.Binding&quot;></xref>对象或<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>自身存在无效的验证规则; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBindingExpression.HasError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: HasValidationError
  nameWithType: MultiBindingExpression.HasValidationError
  fullName: System.Windows.Data.MultiBindingExpression.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示父绑定是否具有失败的验证规则。"
  remarks: "此属性等同于<xref:System.Windows.Data.MultiBindingExpression.HasError%2A>属性。</xref:System.Windows.Data.MultiBindingExpression.HasError%2A>"
  syntax:
    content: public override bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果父绑定具有失败的验证规则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBindingExpression.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  id: ParentMultiBinding
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: ParentMultiBinding
  nameWithType: MultiBindingExpression.ParentMultiBinding
  fullName: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>中此对象<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>创建。"
  syntax:
    content: public System.Windows.Data.MultiBinding ParentMultiBinding { get; }
    return:
      type: System.Windows.Data.MultiBinding
      description: "<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>中此对象<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>创建。"
  overload: System.Windows.Data.MultiBindingExpression.ParentMultiBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: MultiBindingExpression.UpdateSource()
  fullName: System.Windows.Data.MultiBindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将当前的绑定目标值发送到中的绑定源属性<xref href=&quot;System.Windows.Data.BindingMode&quot;></xref>或<xref href=&quot;System.Windows.Data.BindingMode&quot;></xref>绑定。"
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.MultiBindingExpression.UpdateSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: MultiBindingExpression.UpdateTarget()
  fullName: System.Windows.Data.MultiBindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "强制将数据从绑定源属性传输到绑定目标属性。"
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.MultiBindingExpression.UpdateTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBindingExpression.ValidationError
  id: ValidationError
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  name: ValidationError
  nameWithType: MultiBindingExpression.ValidationError
  fullName: System.Windows.Data.MultiBindingExpression.ValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>导致的此实例的对象<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>无效。"
  remarks: "你可以上都设置验证规则<xref:System.Windows.Data.MultiBinding>对象和个人<xref:System.Windows.Data.Binding>中的对象<xref:System.Windows.Data.MultiBinding>对象。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.MultiBinding> 绑定引擎将计算<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>上<xref:System.Windows.Data.MultiBinding>对象时的值移到的绑定目标属性从<xref:System.Windows.Data.IMultiValueConverter>对象 （多值转换器）。</xref:System.Windows.Data.IMultiValueConverter> </xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 之后，当从转换器移到单个绑定的绑定源属性的值绑定引擎将计算<xref:System.Windows.Data.Binding.ValidationRules%2A>上<xref:System.Windows.Data.Binding>对象。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A>"
  syntax:
    content: public override System.Windows.Controls.ValidationError ValidationError { get; }
    return:
      type: System.Windows.Controls.ValidationError
      description: "<xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>导致的此实例的对象<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>无效。"
  overload: System.Windows.Data.MultiBindingExpression.ValidationError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.Windows.Data.MultiBindingExpression.BindingExpressions
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: BindingExpressions
  nameWithType: MultiBindingExpression.BindingExpressions
  fullName: System.Windows.Data.MultiBindingExpression.BindingExpressions
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BindingExpressionBase>
  nameWithType: ReadOnlyCollection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBindingExpression.HasError
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: HasError
  nameWithType: MultiBindingExpression.HasError
  fullName: System.Windows.Data.MultiBindingExpression.HasError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.MultiBindingExpression.HasValidationError
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: HasValidationError
  nameWithType: MultiBindingExpression.HasValidationError
  fullName: System.Windows.Data.MultiBindingExpression.HasValidationError
- uid: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: ParentMultiBinding
  nameWithType: MultiBindingExpression.ParentMultiBinding
  fullName: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
- uid: System.Windows.Data.MultiBinding
  parent: System.Windows.Data
  isExternal: false
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
- uid: System.Windows.Data.MultiBindingExpression.UpdateSource
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: MultiBindingExpression.UpdateSource()
  fullName: System.Windows.Data.MultiBindingExpression.UpdateSource()
- uid: System.Windows.Data.MultiBindingExpression.UpdateTarget
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: MultiBindingExpression.UpdateTarget()
  fullName: System.Windows.Data.MultiBindingExpression.UpdateTarget()
- uid: System.Windows.Data.MultiBindingExpression.ValidationError
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: ValidationError
  nameWithType: MultiBindingExpression.ValidationError
  fullName: System.Windows.Data.MultiBindingExpression.ValidationError
- uid: System.Windows.Controls.ValidationError
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
- uid: System.Windows.Data.MultiBindingExpression.BindingExpressions*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: BindingExpressions
  nameWithType: MultiBindingExpression.BindingExpressions
- uid: System.Windows.Data.MultiBindingExpression.HasError*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: HasError
  nameWithType: MultiBindingExpression.HasError
- uid: System.Windows.Data.MultiBindingExpression.HasValidationError*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: HasValidationError
  nameWithType: MultiBindingExpression.HasValidationError
- uid: System.Windows.Data.MultiBindingExpression.ParentMultiBinding*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: ParentMultiBinding
  nameWithType: MultiBindingExpression.ParentMultiBinding
- uid: System.Windows.Data.MultiBindingExpression.UpdateSource*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: MultiBindingExpression.UpdateSource
- uid: System.Windows.Data.MultiBindingExpression.UpdateTarget*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: MultiBindingExpression.UpdateTarget
- uid: System.Windows.Data.MultiBindingExpression.ValidationError*
  parent: System.Windows.Data.MultiBindingExpression
  isExternal: false
  name: ValidationError
  nameWithType: MultiBindingExpression.ValidationError
