### YamlMime:ManagedReference
items:
- uid: System.Data.IDbDataAdapter
  id: IDbDataAdapter
  children:
  - System.Data.IDbDataAdapter.DeleteCommand
  - System.Data.IDbDataAdapter.InsertCommand
  - System.Data.IDbDataAdapter.SelectCommand
  - System.Data.IDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: IDbDataAdapter
  nameWithType: IDbDataAdapter
  fullName: System.Data.IDbDataAdapter
  type: Interface
  summary: "表示一组命令相关的属性，用于填充<xref href=&quot;System.Data.DataSet&quot;></xref>和更新数据源，以及访问关系数据库的.NET Framework 数据提供程序实现。"
  remarks: "The IDbDataAdapter interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/add/includes/ajax-current-ext-md.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."
  example:
  - "The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.idbdataada_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.idbdataada_1.cs)]"
  syntax:
    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'
  implements:
  - System.Data.IDataAdapter
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取或设置一条 SQL 语句，用于从数据集中删除记录。"
  remarks: "期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>，如果你设置可以自动生成 DeleteCommand `SelectCommand` .NET Framework 数据提供程序的属性。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 然后，由 CommandBuilder 生成未设置任何其他命令。 此生成的逻辑需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。       当分配 DeleteCommand 到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> DeleteCommand 保留以前创建的引用<xref:System.Data.IDbCommand>对象。</xref:System.Data.IDbCommand>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_2_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>过程中使用<xref:System.Data.Common.DbDataAdapter.Update*>若要删除已删除的行在数据集中的数据源中的记录。</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取或设置用于将新记录插入到数据源的 SQL 语句。"
  remarks: "期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>，如果你设置可以自动生成 InsertCommand `SelectCommand` .NET Framework 数据提供程序的属性。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 然后，由 CommandBuilder 生成未设置任何其他命令。 此生成的逻辑需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。       当分配 InsertCommand 到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> InsertCommand 保留以前创建的引用<xref:System.Data.IDbCommand>对象。</xref:System.Data.IDbCommand>      1> [!NOTE]&1;> 如果执行此命令返回行，这些行可能添加到<xref:System.Data.DataSet>具体取决于你如何设置<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性<xref:System.Data.IDbCommand>对象。</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_3_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>过程中使用<xref:System.Data.Common.DbDataAdapter.Update*>以插入新行在数据集中的数据源中的记录。</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取或设置用于选择记录在数据源中的 SQL 语句。"
  remarks: "当分配 SelectCommand 到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> SelectCommand 保留以前创建的引用<xref:System.Data.IDbCommand>对象。</xref:System.Data.IDbCommand>       如果 SelectCommand 不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_0_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>过程中使用<xref:System.Data.Common.DbDataAdapter.Update*>从放置在数据集中的数据源选择记录。</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "获取或设置用于更新数据源中的记录的 SQL 语句。"
  remarks: "期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>，如果你设置可以自动生成 UpdateCommand `SelectCommand` .NET Framework 数据提供程序的属性。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 然后，由 CommandBuilder 生成未设置任何其他命令。 此生成的逻辑需要要<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中存在的键列信息 有关详细信息请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。       当分配 UpdateCommand 到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> 限于 UpdateCommand 保留以前创建的引用<xref:System.Data.IDbCommand>对象。</xref:System.Data.IDbCommand>      1> [!NOTE]&1;> 如果执行此命令返回行，这些行添加到<xref:System.Data.DataSet>。</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_1_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>过程中使用<xref:System.Data.Common.DbDataAdapter.Update*>以更新已修改的行在数据集中的数据源中的记录。</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbDataAdapter.DeleteCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbDataAdapter.InsertCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.IDbDataAdapter.DeleteCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbDataAdapter.InsertCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
