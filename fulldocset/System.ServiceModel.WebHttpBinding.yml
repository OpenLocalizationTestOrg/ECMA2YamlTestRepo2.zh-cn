### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebHttpBinding
  id: WebHttpBinding
  children:
  - System.ServiceModel.WebHttpBinding.#ctor
  - System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  - System.ServiceModel.WebHttpBinding.#ctor(System.String)
  - System.ServiceModel.WebHttpBinding.AllowCookies
  - System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WebHttpBinding.ContentTypeMapper
  - System.ServiceModel.WebHttpBinding.CreateBindingElements
  - System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  - System.ServiceModel.WebHttpBinding.EnvelopeVersion
  - System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WebHttpBinding.MaxBufferSize
  - System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WebHttpBinding.ProxyAddress
  - System.ServiceModel.WebHttpBinding.ReaderQuotas
  - System.ServiceModel.WebHttpBinding.Scheme
  - System.ServiceModel.WebHttpBinding.Security
  - System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  - System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WebHttpBinding.TransferMode
  - System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  - System.ServiceModel.WebHttpBinding.WriteEncoding
  langs:
  - csharp
  name: WebHttpBinding
  nameWithType: WebHttpBinding
  fullName: System.ServiceModel.WebHttpBinding
  type: Class
  summary: "用于配置终结点的绑定[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]Web 服务公开通过而不是 SOAP 消息的 HTTP 请求。"
  remarks: "[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Web 编程模型允许开发人员公开[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]Web 服务通过 HTTP 请求使用&quot;plain old XML&quot;(POX) 样式消息，而不基于 SOAP 的消息。 对于与使用 HTTP 请求的服务进行通信的客户端，必须使用具有<xref:System.ServiceModel.Description.WebHttpBehavior>相连。</xref:System.ServiceModel.Description.WebHttpBehavior> WebHttpBinding 配置服务的终结点 WCF Web 编程模型还要求对各个服务操作进行批注与<xref:System.ServiceModel.Web.WebGetAttribute>或<xref:System.ServiceModel.Web.WebInvokeAttribute>属性。</xref:System.ServiceModel.Web.WebInvokeAttribute> </xref:System.ServiceModel.Web.WebGetAttribute> 这会定义从 URI 和 HTTP 方法到服务操作，以及用来调用该操作并返回结果的消息的格式的映射。 中支持[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]联合和 ASP。AJAX 集成都建立在基础于 WCF Web 编程模型之上。"
  syntax:
    content: 'public class WebHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref>类。"
  remarks: "默认安全模式是<xref:System.ServiceModel.WebHttpSecurityMode>，它指定未使用任何安全性。</xref:System.ServiceModel.WebHttpSecurityMode>       若要对终结点配置了此绑定使用传输级安全性<xref:System.ServiceModel.WebHttpSecurityMode>必须作为中的参数指定值<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>构造函数。</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode>       若要使用 HTTP 身份验证而不是 HTTPS，<xref:System.ServiceModel.WebHttpSecurityMode>必须作为中的参数指定值<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>构造函数。</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode>       值<xref:System.ServiceModel.WebHttpSecurityMode>创建绑定实例之后无法再次设置。</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public WebHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WebHttpSecurityMode)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref>类使用由显式指定的绑定的安全类型。"
  remarks: "若要对终结点配置了此绑定使用传输级安全性<xref:System.ServiceModel.WebHttpSecurityMode>必须作为 WebHttpBinding 构造函数中的参数指定值。</xref:System.ServiceModel.WebHttpSecurityMode>       若要使用 HTTP 身份验证而不是 HTTPS，<xref:System.ServiceModel.WebHttpSecurityMode>必须作为 WebHttpBinding 构造函数中的参数指定值。</xref:System.ServiceModel.WebHttpSecurityMode>       值<xref:System.ServiceModel.WebHttpSecurityMode>创建绑定实例之后无法再次设置。</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public WebHttpBinding (System.ServiceModel.WebHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WebHttpSecurityMode
      description: "值<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref> ，它指定的用于配置服务终结点可接收 HTTP 请求的安全类型。"
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> securityMode </code>指定不是有效<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref>由配置名称指定的绑定的类。"
  syntax:
    content: public WebHttpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "绑定配置名称<xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "具有名称的绑定元素<code> configurationName </code>找不到。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，指示客户端是否接受 cookie 并根据今后的请求中传播这些。"
  remarks: "此属性被提供为了便于使用包括在 HTTP 头中的 cookie。 通过将属性设置为客户端接受 cookie 时`true`，从服务器返回的 cookie 自动复制到该服务的所有将来的客户端请求。"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允许使用 cookie;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "要添加。"
  overload: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，该值指示是否跳过本地地址的代理服务器。"
  remarks: "如果它具有本地地址本地 Internet 资源。 本地地址是指位于同一台计算机、 本地 LAN 或 intranet 上和标识，语法上通过省略句点 （.） 如下所示的 Uri&quot;http://webserver/&quot;和&quot;http://localhost/&quot;。       属性设置 BypassProxyOnLocal 确定终结点是否配置了<xref:System.ServiceModel.WebHttpBinding>访问本地资源时使用代理服务器。</xref:System.ServiceModel.WebHttpBinding>       如果 BypassProxyOnLocal `true`，对本地 Internet 资源请求不使用代理服务器。 BypassProxyOnLocal 时`false`，所有 Internet 请求都都通过代理服务器。"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要绕过本地地址; 的代理服务器否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  id: ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置内容类型映射器。"
  syntax:
    content: public System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper { get; set; }
    return:
      type: System.ServiceModel.Channels.WebContentTypeMapper
      description: "内容类型映射器。"
  overload: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "返回绑定元素包含在当前绑定中的有序的集合。"
  remarks: "绑定元素的顺序很重要。 它反映了构造和堆栈协议以及传输通道的顺序。"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A<xref:System.ServiceModel.Channels.BindingElementCollection>包含<xref:System.ServiceModel.Channels.BindingElement>绑定的对象。</xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Channels.BindingElementCollection>"
  overload: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  id: CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，确定是否跨域脚本启用访问权限。"
  syntax:
    content: public bool CrossDomainScriptAccessEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果跨域启用了脚本功能;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取信封版本，用于通过此绑定可接收 HTTP 请求配置的终结点。"
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "<xref:System.ServiceModel.EnvelopeVersion>与<xref:System.ServiceModel.EnvelopeVersion.None*>用于与此绑定配置的终结点可接收 HTTP 请求的属性。</xref:System.ServiceModel.EnvelopeVersion.None*> </xref:System.ServiceModel.EnvelopeVersion>"
  overload: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，该值指示是否使用主机名来访问服务时对 URI 进行匹配。"
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>值，该值指示是否使用主机名来访问服务，在对 URI 进行匹配时。</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> 默认值是<xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>，表示忽略匹配项中的主机名。"
  overload: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "设置的值不是有效<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>值。</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置最大分配，以字节为单位，管理使用此绑定的终结点所需的缓冲区的缓冲区管理器的内存量。"
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>尝试利用缓冲池将使用缓冲区的成本降至最低。</xref:System.ServiceModel.Channels.BufferManager> 离开通道时使用缓冲区来处理这些消息按服务所需。 如果在缓冲池中无法处理消息负载中，没有足够的内存<xref:System.ServiceModel.Channels.BufferManager>必须从 CLR 堆，这会增加垃圾回收的系统开销分配更多内存。</xref:System.ServiceModel.Channels.BufferManager> 从 CLR 垃圾堆大量分配是的指示缓冲池大小是太小，通过增加 MaxBufferPoolSize 限制可以使用的更大的分配来提高性能。"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "以字节为单位，使用与此绑定配置的终结点的缓冲池的最大大小。 默认值为 65,536 字节。"
  overload: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置最大内存量，以字节为单位，从通道接收消息的消息缓冲区管理器分配的使用。"
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>使用通过使用缓冲池的缓冲区的成本降至最低。</xref:System.ServiceModel.Channels.BufferManager> 离开通道时使用缓冲区来处理这些消息按服务所需。 如果在缓冲池中无法处理消息负载中，没有足够的内存<xref:System.ServiceModel.Channels.BufferManager>必须从 CLR 堆，这会增加垃圾回收的系统开销分配更多内存。</xref:System.ServiceModel.Channels.BufferManager> 从 CLR 垃圾堆大量分配是指示缓冲池大小太小，并且性能可以使用的更大的分配改进通过增加<xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>限制。</xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>"
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: "最大内存，以字节为单位，可供消息缓冲区管理器使用量。 默认值为 524,288 (0x80000) 字节。"
  overload: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "设置的值小于或等于零。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置的最大大小，以字节为单位，可以由绑定处理的消息。"
  remarks: "可以通过使用服务在网络上接收的消息大小<xref:System.ServiceModel.WebHttpBinding>受为每个消息分配的内存量。</xref:System.ServiceModel.WebHttpBinding> 对消息大小的此限制旨在降低遭受拒绝服务 (DoS) 攻击。"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "最大大小，以字节为单位，由绑定处理的消息。 默认值为 65,536 字节。"
  overload: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值小于零。"
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "消息超出分配的最大大小。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置 HTTP 代理的 URI 地址。"
  remarks: "如果<xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>设置为`true`，忽略 ProxyAddress 的值。</xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>充当 HTTP 代理的地址。</xref:System.Uri> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置可由配置了此绑定的终结点处理的 SOAP 消息的复杂性约束。"
  remarks: "复杂性约束可以抵御某种类型的拒绝服务 (DOS) 攻击试图利用消息复杂性来占用终结点处理资源。 表示这些约束及其默认值 （以字节为单位） 的属性如下所示:- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>= 32- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A>= 8192- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A>= 16384- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A>= 4096- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A>= 16384</xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "<xref:System.Xml.XmlDictionaryReaderQuotas>指定复杂性约束。</xref:System.Xml.XmlDictionaryReaderQuotas>"
  overload: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "设置的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "配额值<xref:System.Xml.XmlDictionaryReaderQuotas>只读字段。</xref:System.Xml.XmlDictionaryReaderQuotas>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "设置的配额必须是正数。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取的通道和用此绑定配置的侦听器的 URI 传输方案。"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "如果<xref:System.ServiceModel.WebHttpBinding.Security*>设置为&quot;https&quot; <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>;&quot;http&quot;; 如果设置为<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>。</xref:System.ServiceModel.WebHttpBinding.Security*>"
  overload: System.ServiceModel.WebHttpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取与此绑定一起使用的安全设置。"
  remarks: "若要使用非默认的安全类型，使用<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>构造函数。</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>      1> [!NOTE]&1;> 如果将此属性设置为<xref:System.ServiceModel.WebHttpSecurityMode>且使用 HTTP，请注意将通过网络在纯文本中发送凭据。</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public System.ServiceModel.WebHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WebHttpSecurity
      description: "<xref href=&quot;System.ServiceModel.WebHttpSecurity&quot;> </xref> ，与此绑定一起使用。 默认值是<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "确定是否应序列化读取器配额。"
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应序列化读取器配额;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "确定是否应序列化安全设置。"
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应序列化安全设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  id: ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "确定是否应序列用于序列化的编码。"
  syntax:
    content: public bool ShouldSerializeWriteEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应序列的编码;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取一个值，该值指示是否同步还是异步处理传入请求。"
  remarks: "此运行时用于接收消息的行为在服务或客户端应用程序可以使用更改[ \\&lt; v e\\&gt;](../Topic/%3CsynchronousReceive%3E%20element.md)。"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果同步进行; 处理传入请求<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果异步处理传入请求。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  id: TransferMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，指示使用此绑定配置的服务是使用流处理模式还是缓冲 （或两者） 的消息传输模式。"
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "<xref:System.ServiceModel.TransferMode>值，该值指示此服务是否使用绑定使用流处理模式还是缓冲配置 （或两者） 的消息传输模式。</xref:System.ServiceModel.TransferMode> 默认值为<xref:System.ServiceModel.TransferMode>。</xref:System.ServiceModel.TransferMode>"
  overload: System.ServiceModel.WebHttpBinding.TransferMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "设置的值不是有效<xref:System.ServiceModel.TransferMode>值。</xref:System.ServiceModel.TransferMode>"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置一个值，该值指示是否应使用系统的自动配置 HTTP 代理，如果可用。"
  remarks: "它是为了使它更错误`true`和<xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>为非`null`。</xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应使用系统的自动配置 HTTP 代理，如果可用;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  id: WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "获取或设置用于消息文本的字符编码。"
  syntax:
    content: public System.Text.Encoding WriteEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>，该值指示使用的字符编码。</xref:System.Text.Encoding> 默认值为<xref:System.Text.UTF8Encoding>。</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.WebHttpBinding.WriteEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "设置的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.WebHttpBinding.#ctor
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
- uid: System.ServiceModel.WebHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurityMode
  nameWithType: WebHttpSecurityMode
  fullName: System.ServiceModel.WebHttpSecurityMode
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.Channels.WebContentTypeMapper
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebContentTypeMapper
  nameWithType: WebContentTypeMapper
  fullName: System.ServiceModel.Channels.WebContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity
  fullName: System.ServiceModel.WebHttpSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WebHttpBinding.#ctor*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding
  nameWithType: WebHttpBinding.WebHttpBinding
- uid: System.ServiceModel.WebHttpBinding.AllowCookies*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WebHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WebHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WebHttpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
