### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer
  id: ChartSerializer
  children:
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  langs:
  - csharp
  name: ChartSerializer
  nameWithType: ChartSerializer
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer
  type: Class
  summary: "使序列化<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>控件。"
  remarks: "此类公开为<xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A>属性的根<xref:System.Web.UI.DataVisualization.Charting.Chart>类。</xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A>       序列化保存图表的状态，并还提供用于加载到图表的序列化的数据的选项。 可以保留所有图表属性，包括图表的数据。 此外，可以重置所有图表属性标记为序列化。       管理用户定义的视图状态时，可以根据需要使用此类。 其中一个其`Load`方法可以用于加载视图状态，以及之一`Save`时设置的视图状态，可以使用方法。       可序列化的存储数据的 XML 或二进制格式。 默认情况下，使用 XML，但你可以更改与格式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       图表属性来保存和加载使用`Save`和`Load`方法，分别。 请注意，将保存仅使用非默认值的属性。 数据可以保存和/或加载使用文件，流处理时， <xref:System.IO.TextWriter>， <xref:System.IO.TextReader>，<xref:System.Xml.XmlWriter>和<xref:System.Xml.XmlReader>对象。</xref:System.Xml.XmlReader> </xref:System.Xml.XmlWriter> </xref:System.IO.TextReader> </xref:System.IO.TextWriter> 从保存和/或加载数据使用对象的派生时<xref:System.IO.TextReader>， <xref:System.IO.TextWriter>，<xref:System.Xml.XmlReader>或<xref:System.Xml.XmlWriter>类，数据的格式必须为 XML。</xref:System.Xml.XmlWriter> </xref:System.Xml.XmlReader> </xref:System.IO.TextWriter> </xref:System.IO.TextReader>       以下列表介绍这三种技术，从基本配置到高级，用于定义可序列化数据。 请注意，它也可以定义非可序列化数据。 下一步的段落中介绍了此技术。      的序列化<xref:System.Web.UI.DataVisualization.Charting.Chart>使用`Save`和`Load`方法，而无需指定任何可序列化的属性。</xref:System.Web.UI.DataVisualization.Charting.Chart> 使用非默认值，其中包括图表数据，所有图表属性会序列都化。      的序列化指定的图表属性<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性进行分组的图表属性序列化为类别，如数据、 外观和等。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 请注意，名称<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象将自动序列化; 序列化的数据随后会应用于现有图表区和系列时加载。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>      1> [!IMPORTANT]&1;><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性实现内部<xref:System.Web.UI.DataVisualization.Charting.Chart>控件用作<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性-通过指定的图表属性的序列化<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 这是可序列化的所有图表属性的逗号分隔列表。 此属性设置为一个显式值之后，它负责的开发人员可以指定要保存的所有属性。 换而言之，与不同<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性时，图表区和系列的名称不会自动保留。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性还可结合使用。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 但是，请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>时设置，否则由指定的图表属性与自身连接<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>将重写属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>       若要禁止在正在序列化的某些属性，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 当一个属性设置为可序列化和不可序列化时使用通配符，即常见<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性的优先级。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 但是，优先又依赖于时指定属性使用了多少通配符。       默认情况下，序列化属性重置为各自的默认值之前进行加载。 可以使用更改此行为<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A>方法还可以用于显式将图表属性重置为其默认值。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Format")]

      public class ChartSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  id: Content
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Content
  nameWithType: ChartSerializer.Content
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置的图表内容要序列化的类型。"
  remarks: "默认情况下，所有图表属性会进行序列都化任何`Save`和`Load`调用方法。 若要提供更好地控制序列化的内容，使用内容的属性。 请注意，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性还可以使用以及内容的属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>       **重要**内容属性确定类型的图表特征，如&quot;外观&quot;，要序列化，并作为内部实际实施<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 这意味着，将设置的内容的属性，然后设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性将导致重写，内容的属性值，除非<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>串联在一起。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 请参阅此过程的示例下面的示例代码。       如果设置了内容的属性，所有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象名称将自动进行序列化; 这意味着与图表区和系列的序列化的数据，将应用于加载时的现有对象。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>       设置此属性将影响所有负载，保存和重置操作。"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }
    return:
      type: System.Web.UI.DataVisualization.Charting.SerializationContents
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.SerializationContents&quot;> </xref>枚举值，该值表示在加载期间，会进行序列化的图表内容保存或重置操作。 默认情况下，所有的非默认图表属性，包括数据，则保留。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  id: Format
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Format
  nameWithType: ChartSerializer.Format
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置图表序列化时使用的格式。"
  remarks: "数据可以进行序列化 XML 或二进制格式。 二进制格式非常简洁，并采用更少的存储比 XML。 XML，但是，是为用户可读文本格式。       当你保存或加载序列化的数据时，格式必须为 XML。"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }
    return:
      type: System.Web.UI.DataVisualization.Charting.SerializationFormat
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.SerializationFormat&quot;> </xref>枚举值，表示序列化数据的格式。 默认值为 XML。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  id: GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: GetContentString(SerializationContents,Boolean)
  nameWithType: ChartSerializer.GetContentString(SerializationContents,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(SerializationContents,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "返回一个可序列化或非可序列化的类和/或属性名称，具体取决于特定的标志值。"
  syntax:
    content: protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);
    parameters:
    - id: content
      type: System.Web.UI.DataVisualization.Charting.SerializationContents
      description: "可序列化的内容。"
    - id: serializable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True &quot; name=&quot;True &quot; href=&quot;&quot;></xref>若要获取的可序列化的字符串;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以获取非 serializaable 字符串。"
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>值，该值表示可序列化或非可序列化的类和/或属性名称。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  id: IsResetWhenLoading
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置一个标志，指示是否将对象属性重置为默认值在加载前。"
  syntax:
    content: public bool IsResetWhenLoading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果对象属性重置为默认值之前加载;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  id: IsTemplateMode
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置一个标志，指示是否在模板创建模式下工作的图表序列化程序。"
  syntax:
    content: public bool IsTemplateMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果图表序列化程序使用的模板创建模式;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  id: IsUnknownAttributeIgnored
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置一个标志，指示是否忽略未知的 XML 属性和元素而不引发异常。"
  syntax:
    content: public bool IsUnknownAttributeIgnored { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果忽略未知的 XML 属性和元素而不引发异常;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: ChartSerializer.Load(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(Stream)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将序列化数据加载到该控件中的对象派生自<xref:System.IO.Stream>类。</xref:System.IO.Stream>"
  remarks: "调用此方法以序列化的数据加载到<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</xref:System.Web.UI.DataVisualization.Charting.Chart>       加载操作发生时，序列化属性，默认情况下，第一次重置为其默认值之前它们将设置为持久的值，如果保存。 若要更改此行为，请使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       默认情况下，将加载所有序列化的图表属性。 若要加载特定的序列化的属性，设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>加载数据前的属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       请注意，使用保存数据时`Save`方法，具有非默认值的那些属性实际序列化。"
  syntax:
    content: public void Load (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "一个对象派生自<xref:System.IO.Stream>类，例如，<xref:System.IO.MemoryStream>对象。</xref:System.IO.MemoryStream> </xref:System.IO.Stream>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  id: Load(System.IO.TextReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(TextReader)
  nameWithType: ChartSerializer.Load(TextReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(TextReader)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将序列化数据加载到该控件中的读取器对象，派生自<xref:System.IO.TextReader>类。</xref:System.IO.TextReader>"
  remarks: "调用此方法以序列化的数据加载到<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</xref:System.Web.UI.DataVisualization.Charting.Chart>       加载操作发生时，默认情况下可序列化的属性是第一次重置为其默认值之前它们将设置为持久的值，如果保存。 若要更改此行为，请使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       默认情况下，将加载所有序列化的图表属性。 通过设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>可以加载属性，一组特定的属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       如果你使用此定义，请注意，格式，这将由<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性，必须为 XML。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       如果<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>属性<xref:System.Web.UI.DataVisualization.Charting.Chart>控件用于保持状态，此方法可以用于加载序列化数据的客户端发布回<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>"
  syntax:
    content: public void Load (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "读取器，如<xref:System.IO.StringReader>、 派生自抽象<xref:System.IO.TextReader>类。</xref:System.IO.TextReader> </xref:System.IO.StringReader>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  id: Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(String)
  nameWithType: ChartSerializer.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "加载序列化数据保存到磁盘到<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>控件。"
  remarks: "调用此方法以序列化的数据加载到<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</xref:System.Web.UI.DataVisualization.Charting.Chart>       加载操作发生时，序列化属性，默认情况下，第一次重置为其默认值之前它们将设置为持久的值，如果保存。 若要更改此行为，请使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       默认情况下，将加载所有序列化的图表属性。 若要加载特定的序列化的属性，设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>加载数据前的属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       请注意，使用保存数据时`Save`方法，具有非默认值的那些属性实际序列化。"
  syntax:
    content: public void Load (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "使用存储的序列化的数据的文件的相对或绝对路径。 如果指定了相对路径，则路径将相对于当前目录。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: ChartSerializer.Load(XmlReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(XmlReader)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将序列化数据加载到该控件中的对象派生自<xref:System.Xml.XmlReader>类。</xref:System.Xml.XmlReader>"
  remarks: "调用此方法以序列化的数据加载到<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</xref:System.Web.UI.DataVisualization.Charting.Chart>       加载操作发生时，默认情况下可序列化的属性是第一次重置为其默认值之前它们将设置为持久的值，如果保存。 若要更改此行为，请使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       默认情况下，将加载所有序列化的图表属性。 如果你设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>可以加载属性，一组特定的属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       当你使用此定义时，格式必须为 XML;它可以更改与<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       当你使用 XML 格式的文本文件，为了简单起见用于<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A>方法相反。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A>"
  syntax:
    content: public void Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "从中进行读取所保留的数据对象。 对象派生自<xref:System.Xml.XmlReader>类，并可以是.NET Framework 对象或用户定义的对象。</xref:System.Xml.XmlReader>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  id: NonSerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置将不进行序列化的图表属性。"
  remarks: "By default all chart properties will be serialized when the `Save` and `Load` methods are called. You can use the NonSerializableContent property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.  \n  \n This property determines which chart characteristics will not be serialized. Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property. For example, to exclude all chart `BackColor` properties from serialization, set this property to \"*.BackColor\".  \n  \n Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used. The NonSerializableContent expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression. However, note that less weight is given to string expressions that use wildcards. For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to \"*.BackColor\" and the NonSerializableContent property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.  \n  \n If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property has been set, the priority depends on how many wild cards are used in the NonSerializableContent expression. For example, setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property to <xref:System.Web.UI.DataVisualization.Charting.SerializationContents> will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property containing a \"*.Back\\*\" expression. If the NonSerializableContent property is set to \"\\*.Back\\*\", all `Back*` chart properties such as `BackColor`, `BackGradient`, and so forth, will still be serialized. This is because the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property value has higher priority when compared to the NonSerializableContent property.  \n  \n This property affects all save, load and reset operations."
  syntax:
    content: public string NonSerializableContent { get; set; }
    return:
      type: System.String
      description: "以逗号分隔<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>表示不进行序列化的图表属性的表达式。 语法是&quot;Class.Property[,Class.Property]&quot;。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  id: Reset
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Reset()
  nameWithType: ChartSerializer.Reset()
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset()
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将标记为序列化的所有图表属性重都置。"
  remarks: "默认情况下，此方法将所有图表属性重都置为其默认值。       若要限制重置为各自的默认值的图表属性，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       请注意，此方法也称为自动当`Load`使用方法和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性设置为`true`。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: ChartSerializer.Save(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(Stream)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "保存图表数据和具有非默认值为派生自<xref:System.IO.Stream>类</xref:System.IO.Stream>的对象的属性"
  remarks: "默认情况下，所有图表属性的非默认值，其中包括数据点，将进行序列都化，当调用此方法。 若要控制图表特征要序列化，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       如果此方法用于保存为模板的外观属性，请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>属性<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer>首先将对象设置为`true`之前调用此方法。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>       为模板的图表的序列化从序列化非模板; 以不同的方式发生模板序列化重点介绍外观属性。       当模板被序列化时，<xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>方法可以用于加载模板，以提供有关图表的外观属性。</xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>       模板可以用于模拟自定义调色板。"
  syntax:
    content: public void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "一个对象派生自<xref:System.IO.Stream>类，如<xref:System.IO.MemoryStream>，即用于保存图表属性。</xref:System.IO.MemoryStream> </xref:System.IO.Stream>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(TextWriter)
  nameWithType: ChartSerializer.Save(TextWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(TextWriter)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将图表数据和属性保存使用非默认值与给定的对象派生的<xref:System.IO.TextWriter>类。</xref:System.IO.TextWriter>"
  remarks: "默认情况下，所有图表属性的非默认值，其中包括数据点，将进行序列都化，当调用此方法。 来控制序列化的图表特征，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       当你使用此定义时，格式必须为 XML;可以用来设置格式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       如果<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>属性<xref:System.Web.UI.DataVisualization.Charting.Chart>控件用来持久化保存状态，可以使用此方法将序列化的数据保存到一个派生自<xref:System.IO.TextWriter>，然后用于将数据写入<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> </xref:System.IO.TextWriter> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>"
  syntax:
    content: public void Save (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "一个对象派生自<xref:System.IO.TextWriter>类，例如， <xref:System.IO.StringWriter>，即用于保存图表属性。</xref:System.IO.StringWriter> </xref:System.IO.TextWriter>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  id: Save(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(String)
  nameWithType: ChartSerializer.Save(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "使用非默认值为给定文件将保存图表数据和属性。"
  remarks: "默认情况下使用非默认值，其中包括数据点，所有图表属性将进行序列都化，当调用此方法。 若要控制图表特征要序列化使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       默认情况下以 XML 格式保存数据。 若要将数据保存为二进制格式，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       请注意，必须在其中存储该文件的目录启用写入权限。 默认情况下，这是应用程序的 Bin 文件夹。       如果此方法用于保存为模板的外观属性，请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>首先将属性设置为`true`之前调用此方法。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>       为模板的图表的序列化从序列化非模板，继续以不同的方式，主要是因为模板序列化重点介绍外观属性。       当模板被序列化时，<xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>方法可以用于加载模板，以提供有关图表的外观属性。</xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>       模板可以用于模拟自定义调色板。"
  syntax:
    content: public void Save (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "使用存储的序列化的数据的文件的相对或绝对路径。 请注意，如果指定了相对路径，则路径将相对于当前目录。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(XmlWriter)
  nameWithType: ChartSerializer.Save(XmlWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(XmlWriter)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "将图表数据和属性保存使用非默认值与给定的对象派生的<xref:System.Xml.XmlWriter>类。</xref:System.Xml.XmlWriter>"
  remarks: "默认情况下，所有图表属性的非默认值，其中包括数据点，将进行序列都化，当调用此方法。 来控制序列化的图表特征，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       当你使用此定义时，格式必须为 XML;格式可以更改与<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       当你使用 XML 格式的文本文件，为了简单起见用于<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A>方法相反。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A>"
  syntax:
    content: public void Save (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "一个对象派生自<xref:System.Xml.XmlWriter>用于保存<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>属性。</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  id: SerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "获取或设置可以序列化的图表属性。"
  remarks: "默认情况下所有图表属性将都被序列化时`Save`和`Load`调用方法。 你可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性可限制要序列化，以及 SerializableContent 的图表特征和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>       SerializableContent 属性确定将序列化的图表特征。 可以在与相同的方式在字符串表达式中，使用通配符<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 例如，要序列化所有图表`BackColor`属性，将此属性设置为&quot;*。背景色&quot;。     如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和/或<xref:System.Web.UI.DataVisualization.Charting.Series>子未指定属性，然后的所有名称<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象必须还指定以启用持久化的数据要应用于现有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象; 即，你必须指定&quot;Series.Name&quot;和&quot;ChartArea.Name&quot;表达式。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>请参阅此过程的示例下面的示例代码。同样，如果正在使用多个图表区，<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>属性的所有绘制<xref:System.Web.UI.DataVisualization.Charting.Series>还必须保存。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>     有时，一个属性可以设置同时序列化和不序列化，这在使用通配符时很常见。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>表达式具有较低的优先级相比 SerializableContent 表达式时。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>但请注意权重较低赋予使用通配符的字符串表达式。例如，如果 SerializableContent 属性设置为&quot;*。背景色&quot;和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>，所有 B`ackColor`以外的属性<xref:System.Web.UI.DataVisualization.Charting.ChartArea>会序列化对象。</xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>       如果你设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性，SerializableContent 属性将内部设置。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 如果<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性已设置，但需要进行序列化，请确保要连接的 SerializableContent 属性，指定该额外属性时另一个属性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 请参阅此过程的示例下面的示例代码。       此属性将影响所有保存、 加载和重置操作。"
  syntax:
    content: public string SerializableContent { get; set; }
    return:
      type: System.String
      description: "以逗号分隔<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>表示要序列化的图表属性的表达式。 语法是&quot;Class.Property[,Class.Property]&quot;。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Content
  nameWithType: ChartSerializer.Content
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
- uid: System.Web.UI.DataVisualization.Charting.SerializationContents
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: SerializationContents
  nameWithType: SerializationContents
  fullName: System.Web.UI.DataVisualization.Charting.SerializationContents
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Format
  nameWithType: ChartSerializer.Format
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
- uid: System.Web.UI.DataVisualization.Charting.SerializationFormat
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: SerializationFormat
  nameWithType: SerializationFormat
  fullName: System.Web.UI.DataVisualization.Charting.SerializationFormat
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: GetContentString(SerializationContents,Boolean)
  nameWithType: ChartSerializer.GetContentString(SerializationContents,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(SerializationContents,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(Stream)
  nameWithType: ChartSerializer.Load(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(TextReader)
  nameWithType: ChartSerializer.Load(TextReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(String)
  nameWithType: ChartSerializer.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(String)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(XmlReader)
  nameWithType: ChartSerializer.Load(XmlReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Reset()
  nameWithType: ChartSerializer.Reset()
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset()
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(Stream)
  nameWithType: ChartSerializer.Save(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(Stream)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(TextWriter)
  nameWithType: ChartSerializer.Save(TextWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(String)
  nameWithType: ChartSerializer.Save(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(String)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(XmlWriter)
  nameWithType: ChartSerializer.Save(XmlWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Content
  nameWithType: ChartSerializer.Content
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Format
  nameWithType: ChartSerializer.Format
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: GetContentString
  nameWithType: ChartSerializer.GetContentString
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load
  nameWithType: ChartSerializer.Load
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Reset
  nameWithType: ChartSerializer.Reset
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save
  nameWithType: ChartSerializer.Save
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
