### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IBindableTemplate
  id: IBindableTemplate
  children:
  - System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  langs:
  - csharp
  name: IBindableTemplate
  nameWithType: IBindableTemplate
  fullName: System.Web.UI.IBindableTemplate
  type: Interface
  summary: "ASP.NET 数据绑定控件，如提供一种<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>和<xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>，以自动绑定到 ASP.NET 数据源控件模板化的内容节内。"
  remarks: "IBindableTemplate 接口提供一种 ASP.NET 数据绑定控件，如<xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.GridView>，和<xref:System.Web.UI.WebControls.FormView>，用于绑定到数据由 ASP.NET 数据源控件提供，如<xref:System.Web.UI.WebControls.ObjectDataSource>或<xref:System.Web.UI.WebControls.SqlDataSource>，当数据绑定控件包括模板化的内容。</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>      1> [!NOTE]&1;> 页开发人员不实现 IBindableTemplate 接口。 创建自定义数据绑定控件的开发人员可能操作的实现中的 IBindableTemplate 对象<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A>和<xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A>方法，但不是会实现其自己 IBindableTemplate 对象。</xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> </xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A>       数据绑定控件，如<xref:System.Web.UI.WebControls.GridView>通常知道其子控件树，和可以因此绑定到它们的值、 从提取值，并每次数据绑定发生时，数据绑定控件和数据源控件之间传递这些值。</xref:System.Web.UI.WebControls.GridView> 但是，如果页开发人员定义的数据绑定控件的模板化内容，在模板中的子控件不会对父数据绑定控件可见︰ 父级可以呈现子内容 （因为控件可以有效地呈现自身），但它不能提取要传递到关联的数据源控件的更新、 插入或删除操作这些子控件的值。 在数据绑定方案中，模板化的内容是不透明的父数据绑定控件。 `Bind`语法使得要从控件 IBindableTemplate 实例内部的数据绑定中提取值的数据绑定控件。       数据绑定可以是单向或双向。 (由定义这些绑定指示<xref:System.ComponentModel.BindingDirection>枚举。)</xref:System.ComponentModel.BindingDirection>单向数据绑定是在出站方向，从数据绑定控件，则到数据源控件中执行的任何数据绑定例如，任何数据读取方案涉及单向数据绑定。 对于单向数据绑定，可以使用单向数据绑定语法 (`<%# Eval(&quot;fieldname&quot;) %>`) 内模板化的内容，且不需要使用双向 ASP.NET 数据绑定语法。 双向数据绑定描述的入站方向，从数据绑定控件绑定到数据源控件中的数据绑定。 自动编辑、 插入和删除方案使用 ASP.NET 数据绑定和数据源控件是双向数据绑定方案。 这些方案使用双向数据绑定表达式 (`<%# Bind(&quot;fieldname&quot;) %>`)。 IBindableTemplate 接口和 ASP.NET 基础结构支持 ASP.NET 数据源控件和模板化的内容之间的自动、 声明性的双向数据绑定。 有关 ASP.NET 数据绑定表达式和语法的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)和[数据绑定表达式概述](~/add/includes/ajax-current-ext-md.md)。       最常以声明方式定义的数据绑定控件模板化内容。 下表描述了最常用于将模板化数据绑定到数据绑定控件的过程。      |数据绑定控件 |进程 |  |-------------------------|-------------|  |<xref:System.Web.UI.WebControls.DetailsView>|数据绑定控件绑定到数据使用`DataSourceID`<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>中定义的数据源控件和模板化的内容的属性<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>或<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>属性。 |  |<xref:System.Web.UI.WebControls.GridView>|数据绑定控件绑定到数据使用`DataSourceID`中定义的数据源控件和模板化的内容的属性<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>或<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>属性。</xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView>控件不支持插入操作。 |  |<xref:System.Web.UI.WebControls.FormView>|数据绑定控件绑定到数据使用`DataSourceID`<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>中定义属性和模板化的内容<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>，或<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性或<xref:System.Web.UI.WebControls.TemplateField>对象中。 |      <xref:System.Web.UI.WebControls.DataList>和<xref:System.Web.UI.WebControls.Repeater>控件不支持自动双向数据绑定方案。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView>       分析将绑定到的模板中的 ASP.NET 数据源控件的模板化内容时，ASP.NET 隐式创建的 IBindableTemplate 对象。 具体而言，ASP.NET 分析器将创建的实例<xref:System.Web.UI.CompiledBindableTemplateBuilder>类时它会分析使用 ASP.NET 数据绑定语法，并包含支持数据绑定的 ASP.NET Web 服务器控件的模板化内容。</xref:System.Web.UI.CompiledBindableTemplateBuilder> 这些 ASP.NET 服务器控件标记<xref:System.ComponentModel.BindableAttribute>属性。</xref:System.ComponentModel.BindableAttribute>       IBindableTemplate 接口定义一个方法， <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>.</xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 此方法定义为双向数据绑定，以便数据绑定控件可以自动从模板化的内容中提取名称/值对，并在运行时将对传递给数据源控件。 为了成功的自动数据绑定，从通过模板化内容中提取的字段名称<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>方法必须与关联的数据源控件中的参数名称匹配。</xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 控制开发人员调用<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>方法显式仅在其实现的<xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A>或通过某些其他类似的方法的自定义的数据绑定控件。</xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> </xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.FormView> control can declaratively define templated content, bind to data provided by a <xref:System.Web.UI.WebControls.SqlDataSource> control, and display and edit existing records. The ASP.NET parser parses the templated content and creates an IBindableTemplate object at run time that is able to bind values from the <xref:System.Web.UI.WebControls.SqlDataSource> control to the data-binding areas defined in the template by both one-way ASP.NET data-binding syntax (`<%# Eval(\"fieldname\") %>`) and two-way data-binding syntax (`<%# Bind(\"fieldname\") %>`).  \n  \n> [!IMPORTANT]\n>  This control has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.ibindabl_1.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.ibindabl_1.aspx)]"
  syntax:
    content: 'public interface IBindableTemplate : System.Web.UI.ITemplate'
  implements:
  - System.Web.UI.ITemplate
  platform:
  - net462
- uid: System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  id: ExtractValues(System.Web.UI.Control)
  parent: System.Web.UI.IBindableTemplate
  langs:
  - csharp
  name: ExtractValues(Control)
  nameWithType: IBindableTemplate.ExtractValues(Control)
  fullName: System.Web.UI.IBindableTemplate.ExtractValues(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "由类实现时，检索一组的名称/值对的值绑定使用在模板化的内容中的双向 ASP.NET 数据绑定语法。"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);
    parameters:
    - id: container
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>要从中提取名称/值对，后者按传递的数据绑定控件到双向数据绑定方案中的关联的数据源控件。"
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>的名称/值对。 名称表示在模板化的内容中控件的名称和值是使用双向 ASP.NET 数据绑定语法绑定的属性值的当前值。"
  overload: System.Web.UI.IBindableTemplate.ExtractValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  parent: System.Web.UI.IBindableTemplate
  isExternal: false
  name: ExtractValues(Control)
  nameWithType: IBindableTemplate.ExtractValues(Control)
  fullName: System.Web.UI.IBindableTemplate.ExtractValues(Control)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.IBindableTemplate.ExtractValues*
  parent: System.Web.UI.IBindableTemplate
  isExternal: false
  name: ExtractValues
  nameWithType: IBindableTemplate.ExtractValues
