### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA512
  id: SHA512
  children:
  - System.Security.Cryptography.SHA512.#ctor
  - System.Security.Cryptography.SHA512.Create
  - System.Security.Cryptography.SHA512.Create(System.String)
  langs:
  - csharp
  name: SHA512
  nameWithType: SHA512
  fullName: System.Security.Cryptography.SHA512
  type: Class
  summary: "计算输入数据的 SHA512 哈希。"
  remarks: "哈希用作表示大量的数据的固定大小的唯一值。 当且仅当相应的数据还将匹配，则应与匹配的两个数据集的哈希值。 中大型不可预测的哈希变化的数据结果的小改动。       SHA512 算法的哈希大小为 512 位。       这是一个抽象类。 此类的唯一实现为<xref:System.Security.Cryptography.SHA512Managed>。</xref:System.Security.Cryptography.SHA512Managed>"
  example:
  - "The following example computes the SHA512 hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA512 Example#1](~/add/codesnippet/cpp/t-system.security.crypto_48_1.cpp)]\n [!code-cs[Classic SHA512 Example#1](~/add/codesnippet/csharp/t-system.security.crypto_48_1.cs)]\n [!code-vb[Classic SHA512 Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_48_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SHA512 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA512
  langs:
  - csharp
  name: SHA512()
  nameWithType: SHA512.SHA512()
  fullName: System.Security.Cryptography.SHA512.SHA512()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref>。"
  remarks: "无法创建抽象类的实例。 应用程序代码创建派生类的新实例。"
  syntax:
    content: protected SHA512 ();
    parameters: []
  overload: System.Security.Cryptography.SHA512.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512.Create
  id: Create
  parent: System.Security.Cryptography.SHA512
  langs:
  - csharp
  name: Create()
  nameWithType: SHA512.Create()
  fullName: System.Security.Cryptography.SHA512.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建的默认实现的实例<xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref>。"
  syntax:
    content: public static System.Security.Cryptography.SHA512 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.SHA512
      description: "新实例<xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref>。"
  overload: System.Security.Cryptography.SHA512.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "该算法在使用了美国联邦信息处理标准 (FIPS) 模式启用，但 FIPS 不兼容。"
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.SHA512
  langs:
  - csharp
  name: Create(String)
  nameWithType: SHA512.Create(String)
  fullName: System.Security.Cryptography.SHA512.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建的指定实现的实例<xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref>。"
  remarks: "可能的值有`hashName`是 SHA512、 System.Security.Cryptography.SHA51、 System.Security.Cryptography.SHA512Managed 和 System.Security.Cryptography.SHA512CryptoServiceProvider。"
  syntax:
    content: public static System.Security.Cryptography.SHA512 Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "特定实现的名称<xref href=&quot;System.Security.Cryptography.SHA512&quot;></xref>使用。"
    return:
      type: System.Security.Cryptography.SHA512
      description: "新实例<xref href=&quot;System.Security.Cryptography.SHA512&quot;></xref>使用指定的实现。"
  overload: System.Security.Cryptography.SHA512.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "所描述的算法<code> hashName </code>参数在使用了美国联邦信息处理标准 (FIPS) 模式启用，但与 fips 不兼容。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.SHA512.#ctor
  parent: System.Security.Cryptography.SHA512
  isExternal: false
  name: SHA512()
  nameWithType: SHA512.SHA512()
  fullName: System.Security.Cryptography.SHA512.SHA512()
- uid: System.Security.Cryptography.SHA512.Create
  parent: System.Security.Cryptography.SHA512
  isExternal: false
  name: Create()
  nameWithType: SHA512.Create()
  fullName: System.Security.Cryptography.SHA512.Create()
- uid: System.Security.Cryptography.SHA512
  parent: System.Security.Cryptography
  isExternal: false
  name: SHA512
  nameWithType: SHA512
  fullName: System.Security.Cryptography.SHA512
- uid: System.Security.Cryptography.SHA512.Create(System.String)
  parent: System.Security.Cryptography.SHA512
  isExternal: false
  name: Create(String)
  nameWithType: SHA512.Create(String)
  fullName: System.Security.Cryptography.SHA512.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SHA512.#ctor*
  parent: System.Security.Cryptography.SHA512
  isExternal: false
  name: SHA512
  nameWithType: SHA512.SHA512
- uid: System.Security.Cryptography.SHA512.Create*
  parent: System.Security.Cryptography.SHA512
  isExternal: false
  name: Create
  nameWithType: SHA512.Create
