### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeParameter
  id: CodeTypeParameter
  children:
  - System.CodeDom.CodeTypeParameter.#ctor
  - System.CodeDom.CodeTypeParameter.#ctor(System.String)
  - System.CodeDom.CodeTypeParameter.Constraints
  - System.CodeDom.CodeTypeParameter.CustomAttributes
  - System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  - System.CodeDom.CodeTypeParameter.Name
  langs:
  - csharp
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter
  fullName: System.CodeDom.CodeTypeParameter
  type: Class
  summary: "表示泛型类型或方法的类型参数。"
  remarks: "CodeTypeParameter 类表示泛型类型或方法声明中的类型参数。       泛型类型或方法声明包含一个或多个未指定名为类型参数的类型。 类型参数名称代表泛型声明主体中的类型。 例如，为该泛型声明<xref:System.Collections.Generic.List%601>类包含类型参数`T`。</xref:System.Collections.Generic.List%601>       有关泛型的详细信息，请参阅[.NET Framework 类库中的泛型](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows the use of the CodeTypeParameter class to create a CodeDOM graph to generate an application containing generics code.  \n  \n [!code-vb[System.CodeDom.Generics.1#1](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_8_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#1](~/add/codesnippet/csharp/t-system.codedom.codetyp_8_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeParameter : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CodeTypeParameter()
  nameWithType: CodeTypeParameter.CodeTypeParameter()
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeTypeParameter&quot;></xref>类。"
  remarks: "如果你使用此构造函数，则应设置<xref:System.CodeDom.CodeTypeParameter.Name%2A>属性。</xref:System.CodeDom.CodeTypeParameter.Name%2A>"
  syntax:
    content: public CodeTypeParameter ();
    parameters: []
  overload: System.CodeDom.CodeTypeParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CodeTypeParameter(String)
  nameWithType: CodeTypeParameter.CodeTypeParameter(String)
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeTypeParameter&quot;></xref>初始化具有指定的类型参数名称。"
  remarks: ''
  example:
  - "The following code example shows the use of CodeTypeParameter constructor to add a type parameter.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#10](~/add/codesnippet/visualbasic/m-system.codedom.codetyp_4_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#10](~/add/codesnippet/csharp/m-system.codedom.codetyp_4_1.cs)]"
  syntax:
    content: public CodeTypeParameter (string name);
    parameters:
    - id: name
      type: System.String
      description: "类型参数的名称。"
  overload: System.CodeDom.CodeTypeParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.Constraints
  id: Constraints
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
  fullName: System.CodeDom.CodeTypeParameter.Constraints
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取类型参数的约束。"
  remarks: "约束规定类型参数必须派生自或实现的类型。"
  example:
  - "The following code example shows the use of the Constraints property to add a new constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#4](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_1_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#4](~/add/codesnippet/csharp/p-system.codedom.codetyp_1_1.cs)]"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection Constraints { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref>对象，其中包含的类型参数约束。"
  overload: System.CodeDom.CodeTypeParameter.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes
  id: CustomAttributes
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取类型参数的自定义属性。"
  remarks: "此属性可以用于将元数据属性添加到类型参数的声明。      1> [!CAUTION]&1;> 此属性是`null`默认情况下，应检查其在引用之前。"
  example:
  - "The following code example shows the use of the CustomAttributes property to add a new custom attribute.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#5](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_3_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#5](~/add/codesnippet/csharp/p-system.codedom.codetyp_3_1.cs)]"
  syntax:
    content: public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; }
    return:
      type: System.CodeDom.CodeAttributeDeclarationCollection
      description: "A <xref href=&quot;System.CodeDom.CodeAttributeDeclarationCollection&quot;> </xref> ，该值指示类型参数的自定义属性。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.CodeDom.CodeTypeParameter.CustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  id: HasConstructorConstraint
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置一个值，该值指示类型参数是否具有构造函数约束。"
  remarks: "构造函数约束向编译器指示类型参数公开的默认公共构造函数 （不带任何参数的公共构造函数）。"
  example:
  - "The following code example shows the use of the HasConstructorConstraint property in determining if the type parameter has a constructor constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#3](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_0_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#3](~/add/codesnippet/csharp/p-system.codedom.codetyp_0_1.cs)]"
  syntax:
    content: public bool HasConstructorConstraint { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果类型参数具有构造函数约束;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.Name
  id: Name
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: Name
  nameWithType: CodeTypeParameter.Name
  fullName: System.CodeDom.CodeTypeParameter.Name
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置类型参数的名称。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "类型参数的名称。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.CodeDom.CodeTypeParameter.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.CodeDom.CodeTypeParameter.#ctor
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter()
  nameWithType: CodeTypeParameter.CodeTypeParameter()
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()
- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter(String)
  nameWithType: CodeTypeParameter.CodeTypeParameter(String)
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeParameter.Constraints
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
  fullName: System.CodeDom.CodeTypeParameter.Constraints
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes
- uid: System.CodeDom.CodeAttributeDeclarationCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeAttributeDeclarationCollection
  nameWithType: CodeAttributeDeclarationCollection
  fullName: System.CodeDom.CodeAttributeDeclarationCollection
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeTypeParameter.Name
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Name
  nameWithType: CodeTypeParameter.Name
  fullName: System.CodeDom.CodeTypeParameter.Name
- uid: System.CodeDom.CodeTypeParameter.#ctor*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter.CodeTypeParameter
- uid: System.CodeDom.CodeTypeParameter.Constraints*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
- uid: System.CodeDom.CodeTypeParameter.Name*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Name
  nameWithType: CodeTypeParameter.Name
