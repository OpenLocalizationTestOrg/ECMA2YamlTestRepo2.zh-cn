### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.BackEase
  id: BackEase
  children:
  - System.Windows.Media.Animation.BackEase.#ctor
  - System.Windows.Media.Animation.BackEase.Amplitude
  - System.Windows.Media.Animation.BackEase.AmplitudeProperty
  - System.Windows.Media.Animation.BackEase.CreateInstanceCore
  - System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: BackEase
  nameWithType: BackEase
  fullName: System.Windows.Media.Animation.BackEase
  type: Class
  summary: "表示开始进行动画处理指定的路径中之前略有收回动画的动画的缓动函数。"
  remarks: "你可以控制当&quot;备份&quot;行为发生在动画通过指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>上动画的属性值。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 下图演示的不同值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>，其中*f*(*t*) 表示的动画进度和*t*表示时间。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![BackEase EasingMode 图。] (~/add/media/backease-graph.png &quot;BackEase EasingMode 图。&quot;)       用于此函数的公式如下所示。       ![BackEase 公式。] (~/add/media/backease-formula.png &quot;BackEase 公式。&quot;)      > [!NOTE] 1> 由于此动画可使值进展之前收回，动画可能会意外插入到负数中。 不支持负数的属性进行动画处理时，这可能导致错误。 例如，如果将应用到此动画<xref:System.Windows.FrameworkElement.Height%2A>的对象 (例如从 0 到 200<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>的<xref:System.Windows.Media.Animation.EasingMode>)，动画将尝试插入负数为<xref:System.Windows.FrameworkElement.Height%2A>这将引发错误。</xref:System.Windows.FrameworkElement.Height%2A> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> </xref:System.Windows.FrameworkElement.Height%2A>       还有一些其他缓动函数除了 BackEase 其中你可以使用下面的 Silverlight 示例。       [运行此示例](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)除了使用运行时中附带的缓动函数，您可以通过从<xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>继承创建您自己的自定义缓动函数      <a name=&quot;xamlObjectElementUsage_BackEase&quot;></a># # XAML 对象元素用法```   <BackEase .../>   ```"
  example:
  - "The following example applies a BackEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \n  \n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/backease_scale/window1.xaml#backease_scale)]\n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/t-system.windows.media.a_28_1.xaml)]"
  syntax:
    content: 'public class BackEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: BackEase()
  nameWithType: BackEase.BackEase()
  fullName: System.Windows.Media.Animation.BackEase.BackEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>类。"
  syntax:
    content: public BackEase ();
    parameters: []
  overload: System.Windows.Media.Animation.BackEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.Amplitude
  id: Amplitude
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: Amplitude
  nameWithType: BackEase.Amplitude
  fullName: System.Windows.Media.Animation.BackEase.Amplitude
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取或设置与关联的收回的波幅<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>动画。"
  remarks: "[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>越大波幅、 之前和/或后面动画的越大收回。</xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>       ![演示不同的 aplitude 值。](~/add/media/backease-amplitude.png &quot;演示不同的 aplitude 值。&quot;)      <a name=&quot;xamlAttributeUsage_Opacity&quot;></a># # XAML 属性用法```   <object Amplitude=&quot;double&quot; .../>   ```"
  example:
  - "The following example applies a <xref:System.Windows.Media.Animation.BackEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \n  \n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/backease_scale/window1.xaml#backease_scale)]\n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/p-system.windows.media.a_2_1.xaml)]"
  syntax:
    content: public double Amplitude { get; set; }
    return:
      type: System.Double
      description: "收回与关联的波幅<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>动画。 此值必须大于或等于 0。       默认值为 1。"
  overload: System.Windows.Media.Animation.BackEase.Amplitude*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  id: AmplitudeProperty
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: AmplitudeProperty
  nameWithType: BackEase.AmplitudeProperty
  fullName: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "标识<xref:System.Windows.Media.Animation.BackEase.Amplitude*>依赖项属性。</xref:System.Windows.Media.Animation.BackEase.Amplitude*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AmplitudeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BackEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.BackEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "创建的新实例<xref href=&quot;System.Windows.Freezable&quot;></xref>派生类。 在创建派生的类时，必须重写此方法。"
  remarks: "动画类间接继承<xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> 因此，你需要重写 CreateInstanceCore 方法来构造自定义的动画对象。"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新实例。"
  overload: System.Windows.Media.Animation.BackEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: BackEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.BackEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "提供可以重写以生成的缓动函数的逻辑部分<xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;></xref>模式的自定义缓动函数。"
  remarks: "此方法转换规范化的时间，以控制节奏的<xref:System.Windows.Media.Animation.EasingMode>用例的<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A></xref:System.Windows.Media.Animation.EasingMode>动画       只需指定你缓动函数<xref:System.Windows.Media.Animation.EasingMode>种情况下，因为的实现<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法转换`normalizedTime`为<xref:System.Windows.Media.Animation.EasingMode>和<xref:System.Windows.Media.Animation.EasingMode>情况。</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "动画的标准化的时间 （进度）。"
    return:
      type: System.Double
      description: "双精度值，该值表示已转换的进度。"
  overload: System.Windows.Media.Animation.BackEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.BackEase.#ctor
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: BackEase()
  nameWithType: BackEase.BackEase()
  fullName: System.Windows.Media.Animation.BackEase.BackEase()
- uid: System.Windows.Media.Animation.BackEase.Amplitude
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: Amplitude
  nameWithType: BackEase.Amplitude
  fullName: System.Windows.Media.Animation.BackEase.Amplitude
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: AmplitudeProperty
  nameWithType: BackEase.AmplitudeProperty
  fullName: System.Windows.Media.Animation.BackEase.AmplitudeProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BackEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.BackEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: BackEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.BackEase.EaseInCore(Double)
- uid: System.Windows.Media.Animation.BackEase.#ctor*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: BackEase
  nameWithType: BackEase.BackEase
- uid: System.Windows.Media.Animation.BackEase.Amplitude*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: Amplitude
  nameWithType: BackEase.Amplitude
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BackEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.BackEase.EaseInCore*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: EaseInCore
  nameWithType: BackEase.EaseInCore
