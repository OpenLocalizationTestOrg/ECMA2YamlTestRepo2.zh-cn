### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElement
  id: AutomationElement
  children:
  - System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  - System.Windows.Automation.AutomationElement.AccessKeyProperty
  - System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  - System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  - System.Windows.Automation.AutomationElement.AutomationIdProperty
  - System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  - System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  - System.Windows.Automation.AutomationElement.Cached
  - System.Windows.Automation.AutomationElement.CachedChildren
  - System.Windows.Automation.AutomationElement.CachedParent
  - System.Windows.Automation.AutomationElement.ClassNameProperty
  - System.Windows.Automation.AutomationElement.ClickablePointProperty
  - System.Windows.Automation.AutomationElement.ControlTypeProperty
  - System.Windows.Automation.AutomationElement.CultureProperty
  - System.Windows.Automation.AutomationElement.Current
  - System.Windows.Automation.AutomationElement.Equals(System.Object)
  - System.Windows.Automation.AutomationElement.Finalize
  - System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FocusedElement
  - System.Windows.Automation.AutomationElement.FrameworkIdProperty
  - System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  - System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  - System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  - System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetClickablePoint
  - System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetHashCode
  - System.Windows.Automation.AutomationElement.GetRuntimeId
  - System.Windows.Automation.AutomationElement.GetSupportedPatterns
  - System.Windows.Automation.AutomationElement.GetSupportedProperties
  - System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  - System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  - System.Windows.Automation.AutomationElement.HelpTextProperty
  - System.Windows.Automation.AutomationElement.IsContentElementProperty
  - System.Windows.Automation.AutomationElement.IsControlElementProperty
  - System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsEnabledProperty
  - System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  - System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsOffscreenProperty
  - System.Windows.Automation.AutomationElement.IsPasswordProperty
  - System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  - System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.ItemStatusProperty
  - System.Windows.Automation.AutomationElement.ItemTypeProperty
  - System.Windows.Automation.AutomationElement.LabeledByProperty
  - System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  - System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  - System.Windows.Automation.AutomationElement.MenuClosedEvent
  - System.Windows.Automation.AutomationElement.MenuOpenedEvent
  - System.Windows.Automation.AutomationElement.NameProperty
  - System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  - System.Windows.Automation.AutomationElement.NotSupported
  - System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.OrientationProperty
  - System.Windows.Automation.AutomationElement.ProcessIdProperty
  - System.Windows.Automation.AutomationElement.RootElement
  - System.Windows.Automation.AutomationElement.RuntimeIdProperty
  - System.Windows.Automation.AutomationElement.SetFocus
  - System.Windows.Automation.AutomationElement.StructureChangedEvent
  - System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  - System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  - System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  - System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  - System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  langs:
  - csharp
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
  type: Class
  summary: "表示[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]中的元素[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]树，并包含由 UI 自动化客户端应用程序用作标识符的值。"
  remarks: "AutomationElement 对应于一种[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]，不管基础实现 (如[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]或[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)])。"
  syntax:
    content: public sealed class AutomationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  id: AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       快捷键组合调用动作。 例如，CTRL + O 通常用于调用**打开**文件通用对话框。 <xref:System.Windows.Automation.AutomationElement>具有快捷键的 key 属性设置始终实现<xref:System.Windows.Automation.InvokePattern>类。</xref:System.Windows.Automation.InvokePattern> </xref:System.Windows.Automation.AutomationElement>       返回值的属性属于类型<xref:System.String>.</xref:System.String> 属性的默认值为一个空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#124](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#124)]\n [!code-vb[UIAClient_snip#124](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#124)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#125](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#125)]\n [!code-vb[UIAClient_snip#125](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#125)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  id: AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       访问键是中的菜单、 菜单项或如激活附加的菜单函数的按钮控件标签的文本的字符。 例如，字母&quot;O&quot;通常用于调用**文件打开**从通用对话框**文件**菜单。       访问密钥值属于类型<xref:System.String>和包含注册为元素的访问键的字符。</xref:System.String> 字符串的默认值为一个空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#127](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#127)]\n [!code-vb[UIAClient_snip#127](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#127)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#128](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#128)]\n [!code-vb[UIAClient_snip#128](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#128)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  id: AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识在异步加载内容过程中引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此事件主要由提供程序用于表示发生了异步加载内容事件。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  id: AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识已更改焦点时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  id: AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>属性，用于标识元素。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.String>.</xref:System.String> 属性的默认值为一个空字符串。       它可用时的某个元素 AutomationIdProperty 应始终是相同的应用程序而不考虑本地语言的任何实例中。 值应该是唯一的而同级元素但不是一定是唯一跨整个桌面。 例如，应用程序的多个实例或在 Microsoft Windows 资源管理器的多个文件夹视图可能包含具有相同的 AutomationIdProperty，如&quot;SystemMenuBar&quot;元素。       尽管支持<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>始终在此属性不强制性更好的可测试性，建议。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 只要它受支持，<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>创建测试自动化脚本，而不考虑 UI 语言运行时很有用。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 客户端应进行任何假设有关<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>由其他应用程序公开的 s。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>不一定能保证跨不同版本保持不变或生成的应用程序。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>       实例[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]元素唯一标识的桌面上通过其<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>属性。</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>      1> [!NOTE]&1;> AutomationIdProperty 支持由所有 UI 自动化元素除顶级应用程序窗口的控件视图中，UI 自动化元素派生自[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]没有 ID 或 X:uid，以及派生自的 UI 自动化元素的控件[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]控件没有控件 id。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#129](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#129)]\n [!code-vb[UIAClient_snip#129](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#129)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#130](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#130)]\n [!code-vb[UIAClient_snip#130](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#130)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  id: AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识 property-changed 事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  id: BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       边界矩形属于类型<xref:System.Windows.Rect>.</xref:System.Windows.Rect> 返回的矩形是物理屏幕坐标。 默认值为<xref:System.Windows.Rect.Empty%2A>。</xref:System.Windows.Rect.Empty%2A> <xref:System.Windows.Rect.Empty%2A>如果不当前正在显示项返回[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]。</xref:System.Windows.Rect.Empty%2A>       返回的矩形可以包含不是可单击的点。 实例可能发生这种情况包括时[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]项具有不规则形状或可单击区域，或由其他模糊[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#131](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#131)]\n [!code-vb[UIAClient_snip#131](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#131)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#132](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#132)]\n [!code-vb[UIAClient_snip#132](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#132)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Cached
  id: Cached
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取已缓存[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]参数的属性值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象。"
  remarks: "访问[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]属性表示为返回缓存的结构的属性。 不需要检索此结构;以下示例所示，你可以直接访问其成员。 有关可用的属性和其使用的特定信息，请参阅<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>       若要获取的当前值[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]在此元素使用属性<xref:System.Windows.Automation.AutomationElement.Current%2A>属性。</xref:System.Windows.Automation.AutomationElement.Current%2A>"
  example:
  - "The following example shows how the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> property can be cached and then retrieved by using the Cached property.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "结构，它包含缓存的属性值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "没有缓存的属性。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  id: CachedChildren
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取此元素的缓存的子<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "返回的集合的视图由<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>条件<xref:System.Windows.Automation.CacheRequest>，处于活动状态时这<xref:System.Windows.Automation.AutomationElement>获取对象。</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>       仅当缓存子级的作用域<xref:System.Windows.Automation.CacheRequest>包含<xref:System.Windows.Automation.TreeScope>， <xref:System.Windows.Automation.TreeScope>，或<xref:System.Windows.Automation.TreeScope>。</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.CacheRequest>       如果<xref:System.Windows.Automation.CacheRequest>指定，子级已缓存在此级别，但没有子节点，则此属性的值为 0。</xref:System.Windows.Automation.CacheRequest> 但是，如果不会发出请求，已在此级别的缓存子级，尝试检索该属性将引发异常。"
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the CachedChildren of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "子元素的集合。 此集合可以为该元素没有任何子级的情况下为空。"
  overload: System.Windows.Automation.AutomationElement.CachedChildren*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "未请求缓存此元素的子级。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedParent
  id: CachedParent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取此的已缓存的父级<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> properties of a list box and its list items are cached. The list box element is available in the CachedParent property of each list item element.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement CachedParent { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "父元素。 返回值可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果指定的元素没有父级 — 例如，如果此元素是根节点。"
  overload: System.Windows.Automation.AutomationElement.CachedParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "将缓存没有父元素。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  id: ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       类名称取决于 UI 自动化提供程序实现，并因此不能指望采用标准格式。 但是，如果您知道类名称，你可以使用它以验证你的应用程序是否使用所需工作[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]元素。       返回值的属性属于类型<xref:System.String>.</xref:System.String> 默认值为空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#133](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#133)]\n [!code-vb[UIAClient_snip#133](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#133)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#134](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#134)]\n [!code-vb[UIAClient_snip#134](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#134)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  id: ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识可单击的点属性。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       <xref:System.Windows.Automation.AutomationElement>不是完全遮盖住的另一个窗口的情况下可单击。</xref:System.Windows.Automation.AutomationElement>       返回值的属性属于类型<xref:System.Windows.Point>.</xref:System.Windows.Point> 默认值为 `null`。       返回的值是物理屏幕坐标。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#135](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#135)]\n [!code-vb[UIAClient_snip#135](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#135)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#166](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#166)]\n [!code-vb[UIAClient_snip#166](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#166)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  id: ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       属性的默认值为<xref:System.Windows.Automation.ControlType.Custom></xref:System.Windows.Automation.ControlType.Custom>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#136](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#136)]\n [!code-vb[UIAClient_snip#136](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#136)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#137](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#137)]\n [!code-vb[UIAClient_snip#137](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#137)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  id: CultureProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识区域性属性。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       在[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]框架中，报告的默认值将始终为`en-US`因为[!INCLUDE[TLA#tla_winfx](~/add/includes/ajax-current-ext-md.md)]框架自动默认为英语。 对于其他[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]框架此属性必须显式设置或它不会公开。       此属性可以存在基于每个控件，但是通常只可用在应用程序级别上。       返回值的属性属于类型<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#138](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#138)]\n [!code-vb[UIAClient_snip#138](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#138)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CultureProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Current
  id: Current
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取当前的属性值的<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "访问[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]属性表示为返回由当前的结构的属性。 不需要检索此结构;以下示例所示，你可以直接访问其成员。 有关可用的属性和其使用的特定信息，请参阅<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>       若要获取的缓存的值[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]针对此元素的属性，可以使用<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A>"
  example:
  - "The following example shows how the Current property is used to retrieve the name of an item that has been selected in a list.  \n  \n [!code-vb[UIAClient_snip#106](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#106)]\n [!code-cs[UIAClient_snip#106](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#106)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "一个包含当前属性值的结构。"
  overload: System.Windows.Automation.AutomationElement.Current*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "确定是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>具有相同的值与此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "比较结果为相等的两个元素可能包含来自不同点的时间的不同缓存的信息。 相等性检查仅测试<xref:System.Windows.Automation.AutomationElement>对象是否引用相同的基础用户界面元素; 也就是说，它们具有相同的运行时标识符。</xref:System.Windows.Automation.AutomationElement>       此方法相当于相等运算符，也比较运行时标识符。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>是否等同于此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Finalize
  id: Finalize
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "允许该对象尝试释放资源并在被垃圾回收回收之前执行其他清理操作。"
  syntax:
    content: ~AutomationElement ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "返回所有<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>满足指定的条件的对象。"
  remarks: "搜索的作用域是相对于元素在其调用方法。 元素出现在树中的顺序返回。       在搜索时针对在桌面上的顶级窗口，请务必指定<xref:System.Windows.Automation.TreeScope>中`scope`，而不<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 通过桌面的整个子树的搜索可能循环访问数千个项，并导致堆栈溢出。       如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。"
  example:
  - "The following example shows how to use FindAll to locate all enabled buttons in a window.  \n  \n [!code-vb[UIAClient_snip#116](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#116)]\n [!code-cs[UIAClient_snip#116](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#116)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "值的按位组合，用于指定搜索范围。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "包含要匹配的条件的对象。"
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "满足指定的条件的对象集合。 如果没有匹配项，则返回空集合。"
  overload: System.Windows.Automation.AutomationElement.FindAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "返回与指定的条件匹配的第一个子节点或子代元素。"
  remarks: "搜索的作用域是相对于元素在其调用方法。       在搜索时在桌面上的顶级窗口，请务必指定<xref:System.Windows.Automation.TreeScope>中`scope`，而不<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 通过桌面的整个子树的搜索可能循环访问数千个项，并导致堆栈溢出。       如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。"
  example:
  - "The following example shows how to find a child window from its identifier.  \n  \n [!code-vb[UIAClient_snip#110](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#110)]\n [!code-cs[UIAClient_snip#110](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#110)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "值的按位组合，用于指定搜索范围。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "包含要匹配的条件的对象。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "满足该条件的第一个元素或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到匹配。"
  overload: System.Windows.Automation.AutomationElement.FindFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  id: FocusedElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>当前具有焦点。"
  remarks: "如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FocusedElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "已设定焦点[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素。"
  overload: System.Windows.Automation.AutomationElement.FocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  id: FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.String>.</xref:System.String> 默认值为空字符串。       此属性使应用程序要应用于整个 UI 框架的特殊情况。 属性值的示例包括&quot;Win32&quot;、&quot;WinForm&quot;和&quot;DirectUI&quot;。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#139](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#139)]\n [!code-vb[UIAClient_snip#139](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#139)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]由指定的窗口句柄引用的项。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "句柄[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "An <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> for the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] item identified by <code>hwnd</code>."
  overload: System.Windows.Automation.AutomationElement.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  id: FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象从本地<xref href=&quot;System.Windows.Automation.Provider.IRawElementProviderSimple&quot;></xref>实现。"
  remarks: "此方法可能由客户端帮助程序库，用于使其调用方可以访问其自己的本机元素类型。 例如，[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]内部使用此方法，以便它可以返回<xref:System.Windows.Automation.AutomationElement>到想要获取的客户端[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]元素直接从一种<xref:System.Windows.UIElement>。</xref:System.Windows.UIElement> </xref:System.Windows.Automation.AutomationElement>"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);
    parameters:
    - id: localImpl
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "提供程序对象中。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> ，表示由提供程序对象的元素。"
  overload: System.Windows.Automation.AutomationElement.FromLocalProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  id: FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]在桌面上指定点处的项。"
  remarks: "FromPoint 中是最接近的根元素的逻辑树中返回的元素。       如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。       虽然点返回的边界矩形中<xref:System.Windows.Automation.AutomationElement>，它不一定是包含可单击的控件上。</xref:System.Windows.Automation.AutomationElement> 例如，圆形按钮可能不是矩形的一个其边界的角附近可单击。"
  example:
  - "The following example retrieves the <xref:System.Windows.Automation.AutomationElement> at the system cursor location.  \n  \n [!code-vb[UIAClient_snip#181](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#181)]\n [!code-cs[UIAClient_snip#181](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#181)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "在桌面上定位所依据的物理屏幕坐标[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]指定点处的项。"
  overload: System.Windows.Automation.AutomationElement.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  id: GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "此缓存中检索指定的模式<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "GetCachedPattern 缓存中检索指定的模式。 若要检索指定的模式的当前对象，调用<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>       如果以前未缓存的请求的模式，此方法将引发异常。"
  example:
  - "The following example shows how to cache and retrieve a pattern.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要检索的模式的标识符。"
    return:
      type: System.Object
      description: "表示指定的模式的对象。 如果没有匹配的模式， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>返回。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "请求的模式不在缓存中或不支持元素。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "此缓存中检索指定属性的值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。 属性类型的相应默认值返回未显式支持的目标属性[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]元素。"
  remarks: "如果元素本身的 UI 自动化提供程序支持该属性，则返回属性的值。 否则，默认属性指定[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]返回。 有关默认属性的信息，请参阅的属性标识符字段<xref:System.Windows.Automation.AutomationElement>，如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       GetCachedPropertyValue 检索从指定的属性<xref:System.Windows.Automation.AutomationElement>的缓存。</xref:System.Windows.Automation.AutomationElement> 若要检索的指定的属性调用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>当前对象       如果以前未缓存请求的属性，此方法将引发异常。"
  example:
  - "The following shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "要检索的属性的标识符。"
    return:
      type: System.Object
      description: "一个包含指定属性的值的对象。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "请求的属性不在缓存中。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]为<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "此缓存中检索指定属性的值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>，还可以选择忽略任何默认属性。"
  remarks: "<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A><xref:System.Windows.Automation.AutomationElement>。</xref:System.Windows.Automation.AutomationElement>缓存中检索指定的属性</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 若要检索当前的属性，请调用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       传递`false`中`ignoreDefaultValue`等效于调用<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>       如果元素本身的 UI 自动化提供程序支持该属性，则返回属性的值。 否则为如果`ignoreDefaultValue`是`false`，指定的默认属性[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]返回。 有关默认属性的信息，请参阅的属性标识符字段<xref:System.Windows.Automation.AutomationElement>，如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       如果以前未缓存请求的属性，此方法将引发异常。"
  example:
  - "The following example shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "要检索的属性的标识符。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "一个值，指定是否不支持指定的属性是否应忽略默认值。"
    return:
      type: System.Object
      description: "一个包含指定属性的值的对象或<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>如果该元素不会提供一个值和<code> ignoreDefaultValue </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "请求的属性不在缓存中。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  id: GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索一个点上<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>上可以单击。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>不是完全遮盖住的另一个窗口的情况下可单击。</xref:System.Windows.Automation.AutomationElement>       <xref:System.Windows.Automation.AutomationElement>满足以下所有条件时可单击:-它是以编程方式可见的且适用于[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]树。</xref:System.Windows.Automation.AutomationElement>      -它完全滚动到视图中其父容器，如果有的话。 如果元素剪辑，则它是可单击不能保证。      -元素不被遮盖任何其他 UI 元素。 如果此元素部分遮盖由其祖先以外一些 UI 元素，则可能不是可单击。      的必须可单击本身包含该元素窗口。 例如，如果包含窗口是完全透明，则不可单击的窗口。 鼠标单击将透过它单击到下面的窗口，因此透明窗口内的任何控件不会返回可单击的点。      -如果元素是一个容器 （如列表或树视图），它必须有一个点，当单击将导致控件获得焦点的背景。 如果容器控件的每个部分占用遭到一个子元素，它不是可单击。       存在是没有保证的控件将执行任何操作时单击的点定义为可单击由 UI 自动化提供程序。 请考虑改为使用控件模式来对控件执行操作。"
  example:
  - "The following code retrieves a clickable point for a control and moves the system cursor to that point.  \n  \n [!code-vb[UIAClient_snip#179](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#179)]\n [!code-cs[UIAClient_snip#179](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#179)]"
  syntax:
    content: public System.Windows.Point GetClickablePoint ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "客户端可以用于在此元素单击点的物理屏幕坐标。"
  overload: System.Windows.Automation.AutomationElement.GetClickablePoint*
  exceptions:
  - type: System.Windows.Automation.NoClickablePointException
    commentId: T:System.Windows.Automation.NoClickablePointException
    description: "没有可单击的点。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  id: GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索上的指定的模式对象<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "GetCurrentPattern 获取在调用时根据其可用性的指定的模式。       对于某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，此方法将产生跨进程性能开销。 应用程序可以通过缓存模式，然后检索它们的方式使用<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>"
  example:
  - "The following example shows how to use this method to retrieve a <xref:System.Windows.Automation.SelectionItemPattern>, which is then used to select an item in a list box.  \n  \n [!code-vb[UIAClient_snip#103](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#103)]\n [!code-cs[UIAClient_snip#103](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#103)]  \n  \n> [!NOTE]\n>  For often-repeated tasks such as the one in the example, it would be more efficient to cache the pattern and use <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>."
  syntax:
    content: public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要检索的模式的标识符。"
    return:
      type: System.Object
      description: "模式对象，如果目前支持指定的模式<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "元素不支持模式。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索指定此属性的值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。 属性类型的相应默认值返回未显式支持的目标属性[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]元素。"
  remarks: "GetCurrentPropertyValue 方法返回的值是当前在次调用时。 值随后可以更改由其他应用程序与之进行交互[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       如果元素本身的 UI 自动化提供程序支持该属性，则返回属性的值。 否则，默认属性指定[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]返回。 有关默认属性的信息，请参阅的属性标识符字段<xref:System.Windows.Automation.AutomationElement>，如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       对于某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，此方法将产生跨进程性能开销。 通过缓存属性，然后检索它们的方式使用<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>来集中系统开销"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]属性标识符，用于指定要检索的属性。"
    return:
      type: System.Object
      description: "一个包含指定属性的值的对象。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索指定此属性的值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>，还可以选择忽略任何默认属性。"
  remarks: "传递`false`中`ignoreDefaultValue`等效于调用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>       如果元素本身的 UI 自动化提供程序支持该属性，则返回属性的值。 否则为如果`ignoreDefaultValue`是`false`，指定的默认属性[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]返回。 有关默认属性的信息，请参阅的属性标识符字段<xref:System.Windows.Automation.AutomationElement>，如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       GetCurrentPropertyValue 方法返回的值是当前在次调用时。 值随后可以更改由其他应用程序与之进行交互[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]。       对于某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，此方法将产生跨进程性能开销。 应用程序可以通过缓存属性，然后检索它们的方式使用<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]属性标识符，用于指定要检索的属性。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "一个值，指定是否支持指定的属性是否应忽略默认值。"
    return:
      type: System.Object
      description: "一个包含指定属性的值的对象或<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>如果该元素不会提供一个值和<code> ignoreDefaultValue </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索此哈希代码<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.Windows.Automation.AutomationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  id: GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索分配给的唯一标识符[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]项。"
  remarks: "只能保证该标识符是唯一的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]已生成的桌面。 随着时间的推移，可以重用标识符。       运行时标识符的格式可能会更改在将来的版本。 返回的标识符应视为不透明值，并仅用于比较;例如，若要确定是否<xref:System.Windows.Automation.AutomationElement>位于缓存。</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example shows how to retrieve the run-time identifier of an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#111](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#111)]\n [!code-cs[UIAClient_snip#111](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#111)]"
  syntax:
    content: public int[] GetRuntimeId ();
    parameters: []
    return:
      type: System.Int32[]
      description: "表示运行时标识符的整数数组。"
  overload: System.Windows.Automation.AutomationElement.GetRuntimeId*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  id: GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索的控件模式此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>支持。"
  remarks: "此方法通常将用于调试。 调用它需要大量的处理负载，因为它会查询<xref:System.Windows.Automation.AutomationElement>每个可能的模式。</xref:System.Windows.Automation.AutomationElement> 通常将用于<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>检索<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement>从特定的控件模式</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 若要查明是否支持特定的模式，请检查相应的属性;例如， <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.</xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>"
  example:
  - "The following example shows how to retrieve the control patterns supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#114](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#114)]\n [!code-cs[UIAClient_snip#114](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#114)]"
  syntax:
    content: public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationPattern[]
      description: "数组<xref href=&quot;System.Windows.Automation.AutomationPattern&quot;></xref>表示支持的控件模式的对象。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  id: GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索元素支持该属性的标识符。"
  remarks: "返回的数组标识此元素; 支持的所有属性但是，它还可以包含重复项或包含属性的`null`或空值。 大多数情况下，最好使用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>确定是否当前支持的属性并获取其当前值。</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>"
  example:
  - "The following example shows how to retrieve the properties supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#115](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#115)]\n [!code-cs[UIAClient_snip#115](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#115)]"
  syntax:
    content: public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationProperty[]
      description: "支持的属性标识符的数组。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  id: GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>具有更新缓存。"
  remarks: "原始<xref:System.Windows.Automation.AutomationElement>保持不变。</xref:System.Windows.Automation.AutomationElement> GetUpdatedCache 返回一个新<xref:System.Windows.Automation.AutomationElement>，它引用相同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]并且具有相同的<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example demonstrates how a cache might be updated whenever the selection in a combo box changes.  \n  \n [!code-vb[UIAClient_snip#109](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#109)]\n [!code-cs[UIAClient_snip#109](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#109)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);
    parameters:
    - id: request
      type: System.Windows.Automation.CacheRequest
      description: "模式和属性，以包含在更新的缓存中。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "一个新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>具有更新的缓存。"
  overload: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  id: HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#140](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#140)]\n [!code-vb[UIAClient_snip#140](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#140)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  id: HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       通常从指定的提供程序的工具提示获取此信息。       返回值的属性属于类型<xref:System.String>.</xref:System.String> 属性的默认值为一个空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  id: IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       内容视图[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]树提供了的视图[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，其中只包含表示中的数据元素[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       元素必须为控件能够保存内容。       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`true`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#141](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#141)]\n [!code-vb[UIAClient_snip#141](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#141)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#142](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#142)]\n [!code-vb[UIAClient_snip#142](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#142)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  id: IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       控件是用户感觉为交互式的或包含信息的元素[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`true`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#143](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#143)]\n [!code-vb[UIAClient_snip#143](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#143)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#144](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#144)]\n [!code-vb[UIAClient_snip#144](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#144)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  id: IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.DockPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example  ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>属性，用于指定是否[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]引用的项<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>已启用。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。       控件的启用的状态时`false`，假定还未启用子控件。 父级的状态控制更改时，不应指望从子元素的属性更改事件。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#146](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#146)]\n [!code-vb[UIAClient_snip#146](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#146)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  id: IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.ExpandCollapsePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example retrieves a value that specifies whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  id: IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.GridItemPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  id: IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.GridPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  id: IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.InvokePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  id: IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.ItemContainerPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  id: IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       此属性提供必要的运行是否正常信息<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>方法。</xref:System.Windows.Automation.AutomationElement.SetFocus%2A>       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#147](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#147)]\n [!code-vb[UIAClient_snip#147](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#147)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  id: IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.MultipleViewPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  id: IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>属性，它指示是否[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]项是屏幕上可见。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的类型是<xref:System.Boolean>，默认值为`false`。</xref:System.Boolean>       有关此属性时`true`，请参阅<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#148](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#148)]\n [!code-vb[UIAClient_snip#148](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#148)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#149](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#149)]\n [!code-vb[UIAClient_snip#149](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#149)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  id: IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       此属性的返回值是一种<xref:System.Boolean>。</xref:System.Boolean> 它将返回`true`指示内容受保护; 否则为`false`。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#150](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#150)]\n [!code-vb[UIAClient_snip#150](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#150)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  id: IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.RangeValuePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  id: IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       此属性的返回值属于类型<xref:System.Boolean>，默认值为`false`。</xref:System.Boolean>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#151](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#151)]\n [!code-vb[UIAClient_snip#151](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#151)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  id: IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.ScrollItemPattern&quot;></xref>控件模式是否可供此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  id: IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.ScrollPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  id: IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.SelectionItemPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  id: IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.SelectionPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  id: IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.SynchronizedInputPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  id: IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.TableItemPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  id: IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.TablePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  id: IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.TextPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  id: IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.TogglePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  id: IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.TransformPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  id: IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.ValuePattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  id: IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.VirtualizedItemPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  id: IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识属性，该值指示是否<xref href=&quot;System.Windows.Automation.WindowPattern&quot;></xref>控件模式是否可用此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值的属性属于类型<xref:System.Boolean>.</xref:System.Boolean> 属性的默认值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  id: ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>属性，它指定复杂项的可视化表示的状态。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       返回值是一控件定义<xref:System.String>。</xref:System.String> 默认值为空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#152](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#152)]\n [!code-vb[UIAClient_snip#152](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#152)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#153](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#153)]\n [!code-vb[UIAClient_snip#153](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#153)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  id: ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值是一控件定义<xref:System.String>。</xref:System.String> 默认值为空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#154](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#154)]\n [!code-vb[UIAClient_snip#154](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#154)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, an application-defined string is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#155](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#155)]\n [!code-vb[UIAClient_snip#155](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#155)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  id: LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>属性，它标识与控件关联的标签。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 属性的默认值是`null`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#156](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#156)]\n [!code-vb[UIAClient_snip#156](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#156)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#157](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#157)]\n [!code-vb[UIAClient_snip#157](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#157)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  id: LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识布局失效时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       很多个元素的可见性信息已更改时，此事件将引发由元素的容器。  此事件由客户端用作一个指示符，它需要刷新<xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>和<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>它可能已缓存了树中的元素的信息。</xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> </xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> 建议的更改数量触发此事件为 25。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  id: LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>本地语言的属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       公开此属性，它表示不具有定义完善的控件类型的自定义控件时需要提供程序。       返回值的属性属于类型<xref:System.String>.</xref:System.String> 属性的默认值为一个空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#158](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#158)]\n [!code-vb[UIAClient_snip#158](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#158)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#159](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#159)]\n [!code-vb[UIAClient_snip#159](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#159)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  id: MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识在关闭菜单时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  id: MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识在打开菜单时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NameProperty
  id: NameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.String>.</xref:System.String> 属性的默认值为一个空字符串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#160](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#160)]\n [!code-vb[UIAClient_snip#160](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#160)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#161](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#161)]\n [!code-vb[UIAClient_snip#161](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#161)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  id: NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.Int32>.</xref:System.Int32> 属性的默认值为 0。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#162](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#162)]\n [!code-vb[UIAClient_snip#162](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#162)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#163](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#163)]\n [!code-vb[UIAClient_snip#163](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#163)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NotSupported
  id: NotSupported
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指示属性不受支持。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  example:
  - "The following example retrieves the help text property for an <xref:System.Windows.Automation.AutomationElement>, specifying that NotSupported should be returned if the control does not support that property.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly object NotSupported;
    return:
      type: System.Object
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "返回一个值，该值指示是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象引用相同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]元素。"
  remarks: "两个<xref:System.Windows.Automation.AutomationElement>比较结果为相等的对象可能包含来自不同点的时间的不同缓存的信息。</xref:System.Windows.Automation.AutomationElement> 相等仅测试两个对象引用相同的基础[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素。"
  syntax:
    content: public static bool op_Equality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "第一个<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>进行比较。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "第二个<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象引用相同[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "返回一个值，该值指示是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>对象引用不同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]元素。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "第一个<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>进行比较。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "第二个<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个对象引用不同[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]元素; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  id: OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       属性的值属于类型<xref:System.Windows.Automation.OrientationType>.</xref:System.Windows.Automation.OrientationType> 默认值为<xref:System.Windows.Automation.OrientationType>。</xref:System.Windows.Automation.OrientationType>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#164](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#164)]\n [!code-vb[UIAClient_snip#164](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#164)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#165](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#165)]\n [!code-vb[UIAClient_snip#165](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#165)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  id: ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>属性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       此外可以从检索此属性<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>属性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       返回值的属性属于类型<xref:System.Int32>.</xref:System.Int32> 属性的默认值为 0。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#167](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#167)]\n [!code-vb[UIAClient_snip#167](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#167)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported>is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#168](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#168)]\n [!code-vb[UIAClient_snip#168](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#168)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RootElement
  id: RootElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取根<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>当前桌面。"
  remarks: "你可以使用的根元素作为起始点查找其他元素中，使用<xref:System.Windows.Automation.AutomationElement.FindAll%2A>和<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>方法。</xref:System.Windows.Automation.AutomationElement.FindFirst%2A> </xref:System.Windows.Automation.AutomationElement.FindAll%2A>       在搜索时从根元素，请务必指定<xref:System.Windows.Automation.TreeScope>范围中的搜索，不<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 通过桌面的整个子树的搜索可能循环访问数千个项，并导致堆栈溢出。"
  example:
  - "The following example code retrieves a collection of all the immediate children of the desktop.  \n  \n [!code-vb[UIAClient_snip#201](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#201)]\n [!code-cs[UIAClient_snip#201](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#201)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement RootElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "根元素中。"
  overload: System.Windows.Automation.AutomationElement.RootElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  id: RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识包含元素的运行时标识符的属性。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       运行时[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]属性指定[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]为<xref:System.Windows.Automation.AutomationElement>在桌面上中唯一。</xref:System.Windows.Automation.AutomationElement>       属性的返回值是数组类型<xref:System.Int32>.</xref:System.Int32> 没有默认值。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#169](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#169)]\n [!code-vb[UIAClient_snip#169](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#169)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.SetFocus
  id: SetFocus
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "将焦点设置在<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "此方法的行为取决于元素的 UI 自动化提供程序通过实现。 将焦点设置不一定不会将元素置于前台或使其可见。"
  syntax:
    content: public void SetFocus ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.SetFocus*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  id: StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识的事件时引发[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]树结构更改。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  id: ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识在关闭工具提示时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  id: ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识在打开工具提示时引发的事件。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应在<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用等效的标识符       工具提示是临时的在桌面上，和工具提示可能已经关闭客户端接收到事件的时间。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "从缓存中检索控件模式。"
  remarks: ''
  example:
  - "The following example shows how to cache and retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要检索的控件模式的标识符。"
    - id: patternObject
      type: System.Object
      description: "返回时，包含模式 （如果它在缓存中;否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果模式在缓存中;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它不在缓存中或不受支持。"
  overload: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  id: TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索元素内一个可单击的点。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>不是完全遮盖住的另一个窗口的情况下可单击。</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example attempts to retrieve a clickable point on an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#112](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#112)]\n [!code-cs[UIAClient_snip#112](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#112)]"
  syntax:
    content: public bool TryGetClickablePoint (out System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "此方法返回时，包含可单击的点的物理屏幕坐标。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有可单击的点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "检索实现控件模式的对象。"
  remarks: "对于某些形式的[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]，此方法将产生跨进程性能开销。 应用程序可以通过缓存模式，然后检索它们的方式使用<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>"
  example:
  - "The following example shows how to use this method to retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#113](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#113)]\n [!code-cs[UIAClient_snip#113](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#113)]"
  syntax:
    content: public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要检索的控件模式的标识符。"
    - id: patternObject
      type: System.Object
      description: "返回时，如果受支持; 的控件模式否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该模式受支持;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.Windows.Automation.NoClickablePointException
  parent: System.Windows.Automation
  isExternal: false
  name: NoClickablePointException
  nameWithType: NoClickablePointException
  fullName: System.Windows.Automation.NoClickablePointException
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
- uid: System.Windows.Automation.AutomationElement.Cached
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.AutomationElementInformation
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement+AutomationElementInformation
  nameWithType: AutomationElement+AutomationElementInformation
  fullName: System.Windows.Automation.AutomationElement+AutomationElementInformation
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElementCollection
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
- uid: System.Windows.Automation.AutomationElement.CachedParent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
- uid: System.Windows.Automation.AutomationElement.Current
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElement.Finalize
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
- uid: System.Windows.Automation.AutomationPattern[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationPattern
    name: AutomationPattern
    nameWithType: AutomationPattern
    fullName: AutomationPattern[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
- uid: System.Windows.Automation.AutomationProperty[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationProperty
    name: AutomationProperty
    nameWithType: AutomationProperty
    fullName: AutomationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
- uid: System.Windows.Automation.AutomationElement.NameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
- uid: System.Windows.Automation.AutomationElement.NotSupported
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
- uid: System.Windows.Automation.AutomationElement.RootElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
- uid: System.Windows.Automation.AutomationElement.SetFocus
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.Cached*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.CachedChildren*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElement.CachedParent*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement.Current*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals
  nameWithType: AutomationElement.Equals
- uid: System.Windows.Automation.AutomationElement.Finalize*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize
  nameWithType: AutomationElement.Finalize
- uid: System.Windows.Automation.AutomationElement.FindAll*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll
  nameWithType: AutomationElement.FindAll
- uid: System.Windows.Automation.AutomationElement.FindFirst*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst
  nameWithType: AutomationElement.FindFirst
- uid: System.Windows.Automation.AutomationElement.FocusedElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FromHandle*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle
  nameWithType: AutomationElement.FromHandle
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider
  nameWithType: AutomationElement.FromLocalProvider
- uid: System.Windows.Automation.AutomationElement.FromPoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint
  nameWithType: AutomationElement.FromPoint
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern
  nameWithType: AutomationElement.GetCachedPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue
  nameWithType: AutomationElement.GetCachedPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint
  nameWithType: AutomationElement.GetClickablePoint
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern
  nameWithType: AutomationElement.GetCurrentPattern
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue
  nameWithType: AutomationElement.GetCurrentPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetHashCode*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode
  nameWithType: AutomationElement.GetHashCode
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId
  nameWithType: AutomationElement.GetRuntimeId
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns
  nameWithType: AutomationElement.GetSupportedPatterns
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties
  nameWithType: AutomationElement.GetSupportedProperties
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache
  nameWithType: AutomationElement.GetUpdatedCache
- uid: System.Windows.Automation.AutomationElement.op_Equality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality
  nameWithType: AutomationElement.op_Equality
- uid: System.Windows.Automation.AutomationElement.op_Inequality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality
  nameWithType: AutomationElement.op_Inequality
- uid: System.Windows.Automation.AutomationElement.RootElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.SetFocus*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus
  nameWithType: AutomationElement.SetFocus
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern
  nameWithType: AutomationElement.TryGetCachedPattern
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint
  nameWithType: AutomationElement.TryGetClickablePoint
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern
  nameWithType: AutomationElement.TryGetCurrentPattern
