### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenTypes
  id: SecurityTokenTypes
  children:
  - System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos
  - System.IdentityModel.Tokens.SecurityTokenTypes.Rsa
  - System.IdentityModel.Tokens.SecurityTokenTypes.Saml
  - System.IdentityModel.Tokens.SecurityTokenTypes.UserName
  - System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate
  langs:
  - csharp
  name: SecurityTokenTypes
  nameWithType: SecurityTokenTypes
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes
  type: Class
  summary: "包含一组静态属性返回表示安全令牌类型的字符串。"
  remarks: "使用 SecurityTokenTypes 指定必须包含在 SOAP 消息的安全令牌类型由客户端发送或服务所需的。 若要指定安全令牌类型需求，设置<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>属性。</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>"
  syntax:
    content: public static class SecurityTokenTypes
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos
  id: Kerberos
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  langs:
  - csharp
  name: Kerberos
  nameWithType: SecurityTokenTypes.Kerberos
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取表示基于 Kerberos 票证的安全令牌的字符串。"
  remarks: "基于 Kerberos 票证的安全令牌的两种类型是<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>和<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> </xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>"
  syntax:
    content: public static string Kerberos { get; }
    return:
      type: System.String
      description: "表示基于 Kerberos 票证的安全令牌的字符串。"
  overload: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa
  id: Rsa
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  langs:
  - csharp
  name: Rsa
  nameWithType: SecurityTokenTypes.Rsa
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取表示基于 RSA 密钥的安全令牌的字符串。"
  remarks: "<xref:System.IdentityModel.Tokens.RsaSecurityToken>安全令牌基于 RSA 密钥。</xref:System.IdentityModel.Tokens.RsaSecurityToken>"
  syntax:
    content: public static string Rsa { get; }
    return:
      type: System.String
      description: "表示基于 RSA 密钥的安全令牌的字符串。"
  overload: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Saml
  id: Saml
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  langs:
  - csharp
  name: Saml
  nameWithType: SecurityTokenTypes.Saml
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Saml
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取表示基于 SAML 断言的安全令牌的字符串。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌基于 SAML 断言。</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public static string Saml { get; }
    return:
      type: System.String
      description: "表示基于 SAML 断言的安全令牌的字符串。"
  overload: System.IdentityModel.Tokens.SecurityTokenTypes.Saml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.UserName
  id: UserName
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  langs:
  - csharp
  name: UserName
  nameWithType: SecurityTokenTypes.UserName
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.UserName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取表示基于用户名和密码的安全令牌的字符串。"
  remarks: "<xref:System.IdentityModel.Tokens.UserNameSecurityToken>安全令牌基于用户名和密码。</xref:System.IdentityModel.Tokens.UserNameSecurityToken>"
  syntax:
    content: public static string UserName { get; }
    return:
      type: System.String
      description: "表示基于用户名和密码的安全令牌的字符串。"
  overload: System.IdentityModel.Tokens.SecurityTokenTypes.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate
  id: X509Certificate
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  langs:
  - csharp
  name: X509Certificate
  nameWithType: SecurityTokenTypes.X509Certificate
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取表示基于 X.509 证书的安全令牌的字符串。"
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌基于 X.509 证书。</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public static string X509Certificate { get; }
    return:
      type: System.String
      description: "表示基于 X.509 证书的安全令牌的字符串。"
  overload: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Kerberos
  nameWithType: SecurityTokenTypes.Kerberos
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Rsa
  nameWithType: SecurityTokenTypes.Rsa
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Saml
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Saml
  nameWithType: SecurityTokenTypes.Saml
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.Saml
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.UserName
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: UserName
  nameWithType: SecurityTokenTypes.UserName
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.UserName
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: X509Certificate
  nameWithType: SecurityTokenTypes.X509Certificate
  fullName: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos*
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Kerberos
  nameWithType: SecurityTokenTypes.Kerberos
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Rsa*
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Rsa
  nameWithType: SecurityTokenTypes.Rsa
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.Saml*
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: Saml
  nameWithType: SecurityTokenTypes.Saml
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.UserName*
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: UserName
  nameWithType: SecurityTokenTypes.UserName
- uid: System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*
  parent: System.IdentityModel.Tokens.SecurityTokenTypes
  isExternal: false
  name: X509Certificate
  nameWithType: SecurityTokenTypes.X509Certificate
