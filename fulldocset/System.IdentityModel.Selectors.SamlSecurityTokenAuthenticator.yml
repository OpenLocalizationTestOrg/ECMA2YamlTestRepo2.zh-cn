### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  id: SamlSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  type: Class
  summary: "进行身份验证<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌。"
  remarks: "SamlSecurityTokenAuthenticator 类用于进行身份验证<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: 'public class SamlSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})'
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>类使用指定的身份验证器集。"
  syntax:
    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators);
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
      description: "&lt;Xref:System.Collections.Generic.IList%601&gt;的<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> ，其中包含的身份验证器进行身份验证颁发者的<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>安全令牌。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)'
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>类使用一组指定的身份验证器和发送方和接收方时钟之间允许的最大偏差。"
  syntax:
    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators, TimeSpan maxClockSkew);
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
      description: "&lt;Xref:System.Collections.Generic.IList%601&gt;的<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> ，其中包含的身份验证器进行身份验证颁发者的<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>安全令牌。"
    - id: maxClockSkew
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>表示发送方和接收方时钟之间允许的最大偏差。</xref:System.TimeSpan>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  id: AllowedAudienceUris
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "获取的目标 Uri 集为其<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌可能会成为目标才被视为有效由此<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>实例。"
  remarks: "在利用颁发安全令牌服务 (STS) 的联合应用程序中使用 d d 属性<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 当 STS 颁发安全令牌时，它可以指定为其安全令牌的目标通过添加 Web 服务的 URI<xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>到安全令牌。</xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 这样<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>接收方的 Web 服务，以验证颁发的安全令牌适用于此 Web 服务通过指定应采用以下方式执行此检查:-设置<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>属性<xref:System.IdentityModel.Selectors.AudienceUriMode>或<xref:System.IdentityModel.Selectors.AudienceUriMode>。</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>      -通过将 Uri 添加到 d d 集合中指定有效 Uri 的集。      -（可选） 重写<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>方法，以指定要用于允许的 URI 的验证算法。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>"
  syntax:
    content: public System.Collections.Generic.IList<string> AllowedAudienceUris { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "&lt;Xref:System.Collections.Generic.IList%601&gt;类型的<xref:System.String>包含目标 Uri 为其<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌可能会成为目标通过此安全令牌身份验证被视为有效。</xref:System.String>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  id: AudienceUriMode
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "获取或设置<xref href=&quot;System.IdentityModel.Selectors.AudienceUriMode&quot;> </xref> ，它指定是否<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌的<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>应验证。"
  remarks: "在利用颁发安全令牌服务 (STS) 的联合应用程序中使用 AudienceUriMode 属性<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 当 STS 颁发安全令牌时，它可以指定为其安全令牌的目标通过添加 Web 服务的 URI<xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>到安全令牌。</xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 这样<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>接收方的 Web 服务，以验证颁发的安全令牌适用于此 Web 服务通过指定应采用以下方式执行此检查:-将 AudienceUriMode 属性设置为<xref:System.IdentityModel.Selectors.AudienceUriMode>或<xref:System.IdentityModel.Selectors.AudienceUriMode>。</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>      -通过将添加到 Uri 指定的有效 Uri 集<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>集合。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>      1> [!NOTE]&1;> 时 AudienceUriMode 属性设置为<xref:System.IdentityModel.Selectors.AudienceUriMode>，传入的未认可<xref:System.IdentityModel.Tokens.SamlSecurityToken>必须包含<xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>和<xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A>集合必须包含一个 URI，之一相匹配的 Uri 中指定的有效<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>集合。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> </xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> </xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> </xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Selectors.AudienceUriMode> 非认可或持有者令牌是一种安全令牌包含在消息并在不使用消息的任何部分进行签名。      -（可选） 重写<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>方法，以指定要用于允许的 URI 的验证算法。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>"
  syntax:
    content: public System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode { get; set; }
    return:
      type: System.IdentityModel.Selectors.AudienceUriMode
      description: "<xref href=&quot;System.IdentityModel.Selectors.AudienceUriMode&quot;> </xref> ，它指定是否<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌的<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>应验证。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "获取一个值，该值指示此安全令牌的身份验证器是否可以验证指定的安全令牌。"
  remarks: "CanValidateTokenCore 方法不验证身份的安全令牌;由执行<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveClaimSet(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "解析与指定的密钥标识符使用时提供的支持安全身份验证器关联的标识<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>实例创建并返回其作为<xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>。"
  syntax:
    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>若要获取其标识。"
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> ，表示指定的密钥标识符的标识。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveClaimSet(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "解析与使用时提供的令牌身份验证器支持指定的安全令牌相关联的标识<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>实例创建并返回其作为<xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>。"
  syntax:
    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>若要获取其标识。"
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> ，表示指定的安全令牌的标识。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveIdentity(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "解析与指定使用的支持安全令牌身份验证器时提供的密钥标识符关联的标识<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>已创建并将其作为<xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>返回实例"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌进行缓存使用其密钥标识符。</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>若要获取其标识。"
    return:
      type: System.Security.Principal.IIdentity
      description: "<xref:System.Security.Principal.IIdentity>，表示指定的密钥标识符的标识。</xref:System.Security.Principal.IIdentity>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveIdentity(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "解析与使用的支持安全令牌身份验证器时提供指定的安全令牌相关联的标识<xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref>已创建并将其作为<xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>返回实例"
  syntax:
    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>若要获取其标识。"
    return:
      type: System.Security.Principal.IIdentity
      description: "<xref:System.Security.Principal.IIdentity>，表示指定的安全令牌的标识。</xref:System.Security.Principal.IIdentity>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  id: ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "验证<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌是否针对此 Web 服务。"
  remarks: "调用 ValidateAudienceRestriction 方法<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>方法时的<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>属性设置为<xref:System.IdentityModel.Selectors.AudienceUriMode>或<xref:System.IdentityModel.Selectors.AudienceUriMode>.</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected virtual bool ValidateAudienceRestriction (System.IdentityModel.Tokens.SamlAudienceRestrictionCondition audienceRestrictionCondition);
    parameters:
    - id: audienceRestrictionCondition
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref>用于指定的目标 Web 服务集<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌的目标。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *1> 属性<code> audienceRestrictionCondition </code>参数处于<> *1> 集合; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "对指定的安全令牌进行身份验证并返回对安全令牌的授权策略集。"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>进行验证。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> ，包含来自安全令牌身份验证的授权策略集。"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
- uid: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityTokenAuthenticator>
  nameWithType: IList<SecurityTokenAuthenticator>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
    name: SecurityTokenAuthenticator
    nameWithType: SecurityTokenAuthenticator
    fullName: SecurityTokenAuthenticator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
- uid: System.IdentityModel.Selectors.AudienceUriMode
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: System.IdentityModel.Selectors.AudienceUriMode
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateAudienceRestriction
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore
