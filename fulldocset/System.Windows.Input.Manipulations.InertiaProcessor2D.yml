### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D
  id: InertiaProcessor2D
  children:
  - System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  - System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  - System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  langs:
  - csharp
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D
  type: Class
  summary: "实现操作的位置、 方向和平均 radius 外的推。"
  remarks: "InertiaProcessor2D 对象使应用程序能够推测通过模拟真实世界的行为的元素的位置、 方向和其他属性。       例如，当用户移动某元素，然后释放它，该元素可以继续移动、 减速，然后慢慢停止。 惯性处理器仿射二维值 （原点、 缩放、 平移和旋转） 若要更改指定的减速速率在指定时间段内，从而实现此行为。       惯性处理器本身不会导致移动和减速的元素。 你的应用程序从惯性处理器接收信息，并根据需要向应用程序特定元素应用的值。 通常，应用程序使用从惯性处理器接收到的信息来更改位置、 大小或元素的方向。       结合操作处理通常使用惯性处理。 有关详细信息，请参阅<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>类。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>"
  syntax:
    content: public class InertiaProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  id: '#ctor'
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "初始化的新实例<xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D&quot;></xref>类。"
  syntax:
    content: public InertiaProcessor2D ();
    parameters: []
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  id: Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "通过使用指定的时间戳完成最终推断并引发<xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D.Completed&quot;></xref>事件。"
  remarks: "时间戳是以 100 毫微秒为单位。"
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and if so, stops it by calling the Complete method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void Complete (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "用于完成推断，在 100 毫微秒时间戳。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "时间戳参数小于初始或上一个时间戳。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "当外推已完成时发生。"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "当外推源已更改，或者发生了转换、 缩放或旋转时时发生。"
  remarks: "增量事件和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName>事件具有相同的类型。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName> 通常情况下，你可以使用相同的事件处理程序两个事件。"
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  id: ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取或设置惯性处理器的延伸行为。"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
      description: "惯性处理器扩展行为。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  id: InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取或设置以坐标单位的初始原点的 x 坐标。"
  remarks: "InitialOriginX 所表示的起始点和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>属性是与元素关联的所有操控器的平均位置。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>       有效值 InitialOriginX 是有限的任意数字。 默认值为 0.0。"
  syntax:
    content: public float InitialOriginX { get; set; }
    return:
      type: System.Single
      description: "初始的来源，以坐标单位的 x 坐标。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  id: InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取或设置以坐标单位的初始原点的 y 坐标。"
  remarks: "表示的源点<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>和 InitialOriginY 属性是与元素关联的所有操控器的平均位置。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>       有效值 InitialOriginY 是有限的任意数字。 默认值为 0.0。"
  syntax:
    content: public float InitialOriginY { get; set; }
    return:
      type: System.Single
      description: "初始的来源，以坐标单位表示的 y 坐标。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  id: IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取是否惯性当前正在进行。"
  remarks: ''
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public bool IsRunning { get; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否惯性当前正在进行。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  id: Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "在指定的时间外推操作的位置、 方向和平均半径。"
  remarks: "时间戳是以 100 毫微秒为单位。"
  syntax:
    content: public bool Process (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "用于执行外推，以 100 纳秒为刻度为单位的时间戳。"
    return:
      type: System.Boolean
      description: "操作的位置、 方向和在指定的时间的平均半径。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果外推正在进行;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果外推已完成。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "时间戳参数小于初始或上一个时间戳。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  id: RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取或设置惯性处理器的旋转行为。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
      description: "惯性处理器的旋转行为。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "惯性处理器上设置参数。"
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.InertiaParameters2D
      description: "若要设置的参数。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  id: TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "获取或设置惯性处理器的转换行为。"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
      description: "惯性处理器的转换行为。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaRotationBehavior2D
  nameWithType: InertiaRotationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
- uid: System.Windows.Input.Manipulations.InertiaParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaParameters2D
  nameWithType: InertiaParameters2D
  fullName: System.Windows.Input.Manipulations.InertiaParameters2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
- uid: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaTranslationBehavior2D
  nameWithType: InertiaTranslationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D.InertiaProcessor2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete
  nameWithType: InertiaProcessor2D.Complete
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process
  nameWithType: InertiaProcessor2D.Process
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: InertiaProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
