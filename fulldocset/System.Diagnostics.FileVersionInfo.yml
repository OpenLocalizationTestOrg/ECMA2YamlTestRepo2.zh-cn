### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.FileVersionInfo
  id: FileVersionInfo
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.ToString
  langs:
  - csharp
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  summary: "提供磁盘上的物理文件的版本信息。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       使用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>方法的此类，以获取 FileVersionInfo 包含文件信息，然后查看有关文件的信息的属性。</xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>属性提供有关文件的版本信息。</xref:System.Diagnostics.FileVersionInfo.FileVersion%2A> <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>，和<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>属性提供了指定的文件是的一部分的产品的版本信息。</xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> </xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 调用<xref:System.Diagnostics.FileVersionInfo.ToString%2A>若要获取此文件的属性及其值的部分列表。</xref:System.Diagnostics.FileVersionInfo.ToString%2A>       FileVersionInfo 属性基于内置于文件的版本资源信息。 版本资源通常内置二进制文件，如.exe 或.dll 文件;文本的文件不存在版本资源信息。       在 Win32 资源文件，或在程序集特性，通常未指定版本资源。 例如<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映`VS_FF_DEBUG`标记文件的中值`VS_FIXEDFILEINFO`块，从生成`VERSIONINFO`Win32 资源文件中的资源。</xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>  有关在 Win32 资源文件中指定版本资源的详细信息，请参阅&quot;关于资源文件中&quot;和&quot;VERSIONINFO 资源&quot;的平台 SDK 中。 有关.NET 模块中指定版本资源的详细信息，请参阅[设置程序集特性](~/add/includes/ajax-current-ext-md.md)主题。      1> [!NOTE]&1;> 此类，使在类级别应用于所有成员的链接要求。 A<xref:System.Security.SecurityException>直接调用方没有完全信任权限时，将引发。</xref:System.Security.SecurityException> 有关链接要求的详细信息，请参阅[链接需求](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the FileVersionInfo for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo Example#1](~/add/codesnippet/csharp/t-system.diagnostics.fil_1.cs)]\n [!code-vb[Classic FileVersionInfo Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.fil_1.vb)]\n [!code-cpp[Classic FileVersionInfo Example#1](~/add/codesnippet/cpp/t-system.diagnostics.fil_1.cpp)]"
  syntax:
    content: public sealed class FileVersionInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Comments
  id: Comments
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取与文件关联的注释。"
  remarks: "此属性包含可用于诊断目的的其他信息。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the comments in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_7_1.cs)]\n [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_7_1.cpp)]\n [!code-vb[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_7_1.vb)]"
  syntax:
    content: public string Comments { get; }
    return:
      type: System.String
      description: "与文件关联的注释或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.Comments*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  id: CompanyName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取生成该文件的公司的名称。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the CompanyName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_20_1.cs)]\n [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_20_1.cpp)]\n [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_20_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "生成文件的公司的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  id: FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件的生成号。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -16 位的第三个组是 FileBuildPart 数。      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       此属性获取第三个组 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_21_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_21_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_21_1.cpp)]"
  syntax:
    content: public int FileBuildPart { get; }
    return:
      type: System.Int32
      description: "表示该文件的生成号的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.FileBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  id: FileDescription
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件的说明。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileDescription in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_18_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_18_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_18_1.cpp)]"
  syntax:
    content: public string FileDescription { get; }
    return:
      type: System.String
      description: "文件说明或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.FileDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  id: FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取版本号的主要部分。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是 FileMajorPart 数。      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       此属性获取 16 位的第一的组。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_6_1.cs)]\n [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_6_1.cpp)]\n [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_6_1.vb)]"
  syntax:
    content: public int FileMajorPart { get; }
    return:
      type: System.Int32
      description: "如果文件不包含版本信息表示版本号或 0 （零） 的主要部分的值。"
  overload: System.Diagnostics.FileVersionInfo.FileMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  id: FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件的版本号的次要部分。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -的下一步的 16 位均为 FileMinorPart 数。      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       此属性获取第二个集的 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_2_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_2_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_2_1.cs)]"
  syntax:
    content: public int FileMinorPart { get; }
    return:
      type: System.Int32
      description: "如果文件不包含版本信息表示文件或 0 （零） 的版本号的次要部分的值。"
  overload: System.Diagnostics.FileVersionInfo.FileMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileName
  id: FileName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件的名称的此实例<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>描述。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_19_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_19_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_19_1.cs)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "此实例所描述的文件的名称<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  id: FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件专用部件号。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -的最后一个 16 位都是 FilePrivatePart 数。       此属性获取设置的最后一个的 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FilePrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_13_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_13_1.cs)]\n [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_13_1.vb)]"
  syntax:
    content: public int FilePrivatePart { get; }
    return:
      type: System.Int32
      description: "表示文件专用部件号的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  id: FileVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件版本号。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 文件版本号是一个 64 位数字，表示版本号的文件，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_12_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_12_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_12_1.cpp)]"
  syntax:
    content: public string FileVersion { get; }
    return:
      type: System.String
      description: "该文件的版本号或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.FileVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  id: GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "返回<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>表示与指定的文件相关联的版本信息。"
  remarks: ''
  example:
  - "The following example calls GetVersionInfo to get the <xref:System.Diagnostics.FileVersionInfo> for Notepad and  displays the file description and version number in the console window.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_1_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_1_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_1_1.cpp)]"
  syntax:
    content: public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "完全限定的路径和要检索的版本信息的文件的名称。"
    return:
      type: System.Diagnostics.FileVersionInfo
      description: "A <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>包含文件的信息。 如果文件不包含版本信息<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>包含仅所请求的文件的名称。"
  overload: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的文件。"
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.InternalName
  id: InternalName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "如果存在，则获取该文件的内部名称。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the InternalName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_23_1.cpp)]\n [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_23_1.vb)]\n [!code-cs[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_23_1.cs)]"
  syntax:
    content: public string InternalName { get; }
    return:
      type: System.String
      description: "文件的内部名称。 如果不存在，则此属性将包含不带扩展名的文件的原始名称。"
  overload: System.Diagnostics.FileVersionInfo.InternalName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  id: IsDebug
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指定文件是否包含调试信息或在调试功能启用的编译。"
  remarks: "<xref:System.Diagnostics.FileVersionInfo>属性基于内置于文件的版本资源信息。</xref:System.Diagnostics.FileVersionInfo> 版本资源通常内置二进制文件，如.exe 或.dll 文件;文本的文件不存在版本资源信息。       在 Win32 资源文件，或在程序集特性，通常未指定版本资源。 IsDebug 属性反映`VS_FF_DEBUG`标记文件的中值`VS_FIXEDFILEINFO`块，从生成`VERSIONINFO`Win32 资源文件中的资源。 有关在 Win32 资源文件中指定版本资源的详细信息，请参阅平台 SDK`About Resource Files`主题和`VERSIONINFO Resource`主题主题。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsDebug in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_4_1.cs)]\n [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_4_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_4_1.vb)]"
  syntax:
    content: public bool IsDebug { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果文件包含调试信息或在调试功能启用，则的编译否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsDebug*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  id: IsPatched
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指定文件是否已被修改，且不等同于相同版本号的原始发行文件。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsPatched in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_5_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_5_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_5_1.vb)]"
  syntax:
    content: public bool IsPatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果修补文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsPatched*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  id: IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指定文件是否为开发版本，而不是商业发行版。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a prerelease version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_22_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_22_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_22_1.vb)]"
  syntax:
    content: public bool IsPreRelease { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该文件是预发布;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsPreRelease*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  id: IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指定是否使用标准的发行过程生成的文件。"
  remarks: "如果此值为`true`，<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>将介绍此版本的文件的标准版本的不同方式。</xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_24_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_24_1.vb)]\n [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_24_1.cpp)]"
  syntax:
    content: public bool IsPrivateBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该文件为专用版本;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果使用标准的发行过程生成的文件或文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  id: IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取一个值，指定文件是否为特殊内部版本。"
  remarks: "为特殊内部版本的文件使用标准的发行过程生成，但该文件不同于相同版本号的标准文件。 如果此值为`true`、<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>属性必须指定此文件的标准版本的不同方式。</xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a special build version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_14_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_14_1.vb)]\n [!code-cs[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_14_1.cs)]"
  syntax:
    content: public bool IsSpecialBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该文件为特殊内部版本;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Language
  id: Language
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取版本信息块的默认语言字符串。"
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "版本资源中 Microsoft 语言标识符的描述字符串或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  id: LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取所有适用于指定的文件的版权声明。"
  remarks: "这应包括所有通知、 合法符号、 版权日期和等等的完整文本或`null`当文件不包含版本信息。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalCopyright in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_3_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_3_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_3_1.vb)]"
  syntax:
    content: public string LegalCopyright { get; }
    return:
      type: System.String
      description: "适用于指定的文件的版权声明。"
  overload: System.Diagnostics.FileVersionInfo.LegalCopyright*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  id: LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取的商标和注册应用于文件的商标。"
  remarks: "合法商标包括所有通知、 合法符号和商标号的完整的文本。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalTrademarks in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_8_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_8_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_8_1.vb)]"
  syntax:
    content: public string LegalTrademarks { get; }
    return:
      type: System.String
      description: "商标和注册的商标适用于文件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  id: OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取创建文件时使用的名称。"
  remarks: "此属性使应用程序，以确定是否已重命名文件。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the OriginalFilename in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_0_1.vb)]\n [!code-cs[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_0_1.cs)]"
  syntax:
    content: public string OriginalFilename { get; }
    return:
      type: System.String
      description: "创建文件时使用的名称或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.OriginalFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  id: PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件私有版本的相关信息。"
  remarks: "此信息时存在<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>是`true`。</xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_16_1.cpp)]\n [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_16_1.vb)]\n [!code-cs[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_16_1.cs)]"
  syntax:
    content: public string PrivateBuild { get; }
    return:
      type: System.String
      description: "有关私有版本的文件的信息或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.PrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  id: ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取此文件关联的产品的生成号。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 产品版本号是一个 64 位数字，表示版本号，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -16 位的第三个组是 ProductBuildPart 数。      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       此属性获取第三个组 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_10_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_10_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_10_1.vb)]"
  syntax:
    content: public int ProductBuildPart { get; }
    return:
      type: System.Int32
      description: "表示产品的生成号的值与关联此文件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  id: ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取此文件关联的产品版本号的主要部分。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 产品版本号是一个 64 位数字，表示版本号，如下所示:-的第一个 16 位都是 ProductMajorPart 数。      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       此属性获取 16 位的第一的组。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_9_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_9_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_9_1.cs)]"
  syntax:
    content: public int ProductMajorPart { get; }
    return:
      type: System.Int32
      description: "表示产品版本号的主要部分的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  id: ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件关联的产品版本号的次要部分。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 产品版本号是一个 64 位数字，表示版本号，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -的下一步的 16 位均为 ProductMinorPart 数。      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       此属性获取第二个集的 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_11_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_11_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_11_1.vb)]"
  syntax:
    content: public int ProductMinorPart { get; }
    return:
      type: System.Int32
      description: "表示产品版本号的次要部分的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductName
  id: ProductName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取与此文件一起发行的产品的名称。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_17_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_17_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_17_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "产品的名称与分发此文件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  id: ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取此文件关联的产品的专用部件号。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 产品版本号是一个 64 位数字，表示版本号，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -的最后一个 16 位都是 ProductPrivatePart 数。       此属性获取设置的最后一个的 16 位。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductPrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_25_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_25_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_25_1.cpp)]"
  syntax:
    content: public int ProductPrivatePart { get; }
    return:
      type: System.Int32
      description: "表示产品的专用部件号的值与关联此文件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  id: ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取与此文件一起发行的产品版本。"
  remarks: "通常情况下，版本号被显示为&quot;主要版本号.次部件号&quot;。 产品版本号是一个 64 位数字，表示版本号，如下所示:-的第一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -的下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -的最后一个 16 位都是<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductVersion in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_15_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_15_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_15_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "产品的版本与分发此文件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  id: SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "获取文件的特殊内部版本信息。"
  remarks: "如果<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>是`true`，SpecialBuild 必须指定此文件的文件的标准版本的不同方式。</xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the special build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_1_1.cpp)]\n [!code-cs[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_1_1.cs)]\n [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_1_1.vb)]"
  syntax:
    content: public string SpecialBuild { get; }
    return:
      type: System.String
      description: "这两个特殊生成的文件的信息或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>当文件不包含版本信息。"
  overload: System.Diagnostics.FileVersionInfo.SpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ToString
  id: ToString
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "返回中的属性的部分列表<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>及其值。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it calls ToString to print a list of the file version information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_0_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_0_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A list of the following properties in this class and their values:       <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>,       <xref:System.Diagnostics.FileVersionInfo.Language*>.</xref:System.Diagnostics.FileVersionInfo.Language*>       如果文件不包含版本信息，此列表将包含仅请求的文件的名称。 布尔值将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，所有其他项将为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Diagnostics.FileVersionInfo.Comments
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
- uid: System.Diagnostics.FileVersionInfo
  parent: System.Diagnostics
  isExternal: false
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
- uid: System.Diagnostics.FileVersionInfo.Comments*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
- uid: System.Diagnostics.FileVersionInfo.CompanyName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
- uid: System.Diagnostics.FileVersionInfo.FileDescription*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: FileVersionInfo.GetVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
- uid: System.Diagnostics.FileVersionInfo.IsPatched*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString
  nameWithType: FileVersionInfo.ToString
