### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  id: ConnectionConsumerAttribute
  children:
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String)
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.Type)
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String,System.Type)
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID
  langs:
  - csharp
  name: ConnectionConsumerAttribute
  nameWithType: ConnectionConsumerAttribute
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  type: Class
  summary: "标识作为在 Web 部件连接中，使用者的服务器控件中的回调方法，允许开发人员指定关于使用者的连接点的详细信息。"
  remarks: "Web 部件连接中包含的两个驻留在的服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域和通过接口实例的共享的数据从一个控件传递到另。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 提供该接口实例的控件称为提供程序，并接收接口实例和进程或显示的数据的控件称为使用者。 有关连接的详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类和[Web 部件连接概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       在连接中，使用者控件均可以是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或任何类型的服务器或用户控件，但它必须具有指定为回调方法的方法。</xref:System.Web.UI.WebControls.WebParts.WebPart> 在连接过程中，调用回调方法，其目的在于接收从提供程序接口实例，其中包含数据。 若要指定充当使用者中的回调方法的方法，你必须添加`ConnectionConsumerAttribute`到 （该方法类基于元素） 的方法的元数据元素。       除指定使用者中的回调方法，该方法对象还使您能够指定某些详细信息的使用者连接点。 使用者连接点是的一个实例<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>类，用于封装有关使用者建立连接，包括使用者的控件类型，它能否连接到在相同的时间，使用者的接口的类型的多个提供程序所需的详细信息可以接收来自提供程序，所有关于详细信息的回调方法，以及表示用户界面 (UI) 中的使用者连接点的显示名称。</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 每个 Web 部件连接中，包括与使用者控件相关联的使用者连接点。       当你将添加`ConnectionConsumerAttribute`向使用者中的回调方法的元数据元素，还可用它来指定有关使用者连接点的以下详细信息︰ 连接点的显示名称 （有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>属性），是否使用者能够连接到多个提供程序在同一时间 （有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A>属性），（有关详细信息的连接点的 ID请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID%2A>属性)，和使用者使用的连接点的类型 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType%2A>属性)。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType%2A> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID%2A> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A> 每个该方法类的构造函数的四个重载具有可用于创建类的新实例时指定的一个或多个这些连接点属性的值的参数。 此外可以以编程方式; 设置为使用者连接点属性中的大多数设置它们使用`ConnectionConsumerAttribute`元素是可选的。      1> [!NOTE]&1;> 添加时`ConnectionConsumerAttribute`到回调方法，在使用者的元数据元素，必须始终指定的唯一所需的参数是`displayName`参数 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.%23ctor%28System.String%29>构造函数重载)。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.%23ctor%28System.String%29> 此参数的值分配给<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>属性，并当用户打开连接的用户界面 (由<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件)，显示名称表示 UI 中的使用者连接点。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A> 如果指定使用者控件中的多个回调方法，你将有多个可能的连接点可供选择，并且当你将添加`ConnectionConsumerAttribute`为每个回调方法的元数据元素，你还应指定的值`id`参数，以使每个使用者连接点都具有已知的唯一标识符。"
  example:
  - "The following code example demonstrates using the ConnectionConsumerAttribute class, by showing how to declare the `ConnectionConsumerAttribute` metadata element on a callback method in a consumer control. Note that the simplest overload of the constructor is used; only the `displayName` parameter value is supplied.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_135_1.vb)]\n [!code-cs[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/csharp/t-system.web.ui.webcontr_135_1.cs)]  \n  \n The following code examples demonstrate how to create a basic, static connection between two Web Parts controls using the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class. The provider and consumer code files should be put into the App_Code folder under the application folder that contains the .aspx page.  \n  \n The first example shows a class acting as a provider.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_135_2.vb)]\n [!code-cs[UI.WebControls.WebParts.Connection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_135_2.cs)]  \n  \n The second example shows a class acting as a consumer. Notice that a method is designated as the callback method with the `ConnectionConsumerAttribute` metadata element.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_135_3.vb)]\n [!code-cs[UI.WebControls.WebParts.Connection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_135_3.cs)]  \n  \n The final example shows the ASP.NET page that contains the two controls.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_135_4.aspx)]\n [!code-cs[UI.WebControls.WebParts.Connection#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_135_4.aspx)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public class ConnectionConsumerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ConnectionConsumerAttribute(String)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&quot;></xref>类，指定使用者连接点的显示名称。"
  remarks: "此构造函数创建用于充当使用者的 Web 部件控件的方法的属性的实例。 此方法将成为提供程序使用者之间的连接点。 通常情况下，使用此构造函数的方法是声明`ConnectionConsumerAttribute`你想要将指定为使用者控件中的回调方法的方法上的元数据元素。       `displayName`参数是由使用者连接点的友好名称<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件来表示 UI 中的使用者的连接点。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>"
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class, by showing how to declare the `ConnectionConsumerAttribute` metadata element on a callback method in a consumer control. Note that the simplest overload of the constructor is used; only the `displayName` parameter value is supplied. For the full code required to run the code example, see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class overview.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/visualbasic/15f1175b-7777-4e66-b53e-_1.vb)]\n [!code-cs[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/csharp/15f1175b-7777-4e66-b53e-_1.cs)]"
  syntax:
    content: public ConnectionConsumerAttribute (string displayName);
    parameters:
    - id: displayName
      type: System.String
      description: "包含使用者连接的友好名称的字符串点在用户界面 (UI) 中显示。"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>displayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ConnectionConsumerAttribute(String,String)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&quot;></xref>类，指定显示名称和使用者连接点的 ID。"
  remarks: "`displayName`参数是由使用者连接点的友好名称<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件来表示 UI 中的使用者的连接点。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>       `id`参数用于指定与特定的回调方法的使用者连接点的 ID。 一个控件可拥有多个连接点，但`id`每必须是唯一的。 因此，如果你使用者控件中有多个回调方法，则此构造函数重载可。"
  syntax:
    content: public ConnectionConsumerAttribute (string displayName, string id);
    parameters:
    - id: displayName
      type: System.String
      description: "包含使用者连接的友好名称的字符串点在用户界面 (UI) 中显示。"
    - id: id
      type: System.String
      description: "<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*>，分配给使用者连接点的唯一字符串值。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>displayName</code>or <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ConnectionConsumerAttribute(String,Type)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,Type)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&quot;></xref>类，指定显示名称和特定类型的连接点对象，用于使用者连接点。"
  remarks: "`displayName`参数是由使用者连接点的友好名称<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件来表示 UI 中的使用者的连接点。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>       `connectionPointType`参数必须是<xref:System.Type>派生自<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Type> 如果指定此参数，则<xref:System.Type>用于创建而不是标准的连接点<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>Web 部件控件集提供的类。</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Type>"
  syntax:
    content: public ConnectionConsumerAttribute (string displayName, Type connectionPointType);
    parameters:
    - id: displayName
      type: System.String
      description: "包含使用者连接的友好名称的字符串点在用户界面 (UI) 中显示。"
    - id: connectionPointType
      type: System.Type
      description: "A<xref:System.Type>派生自<xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref>，并且你想要指定为类型的连接点对象以与特定的回调方法一起使用。</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>displayName</code>or<code> connectionPointType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionPointType</code>不是有效的。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String,System.Type)
  id: '#ctor(System.String,System.String,System.Type)'
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ConnectionConsumerAttribute(String,String,Type)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String,Type)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String,Type)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&quot;></xref>类，指定显示名称、 ID 和特定类型的连接点对象，用于使用者连接点。"
  remarks: "`displayName`参数是由使用者连接点的友好名称<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件来表示 UI 中的使用者的连接点。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>       `id`参数用于指定与特定的回调方法的使用者连接点的 ID。 一个控件可拥有多个连接点，但`id`每必须是唯一的。 因此，如果你使用者控件中有多个回调方法，则此构造函数重载可。       `connectionPointType`参数必须是<xref:System.Type>派生自<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Type> 如果指定此参数，则<xref:System.Type>用于创建而不是标准的连接点<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>Web 部件控件集提供的类。</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Type>"
  syntax:
    content: public ConnectionConsumerAttribute (string displayName, string id, Type connectionPointType);
    parameters:
    - id: displayName
      type: System.String
      description: "包含使用者连接的友好名称的字符串点在用户界面 (UI) 中显示。"
    - id: id
      type: System.String
      description: "<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*>，分配给使用者连接点的唯一字符串值。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*>"
    - id: connectionPointType
      type: System.Type
      description: "A<xref:System.Type>派生自<xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref>，并且你想要指定为类型的连接点对象以与特定的回调方法一起使用。</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>displayName</code>, <code>id</code>, or<code> connectionPointType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionPointType</code>不是有效的。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections
  id: AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: AllowsMultipleConnections
  nameWithType: ConnectionConsumerAttribute.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示连接点是否允许多个连接。"
  remarks: "默认情况下，使用者连接不接受多个连接，因此此属性设置为`false`。 提供程序连接，但是，接受默认情况下，多个连接和此属性上<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>对象设置为`true`。</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>"
  syntax:
    content: public bool AllowsMultipleConnections { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果连接点接受多个连接;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType
  id: ConnectionPointType
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ConnectionPointType
  nameWithType: ConnectionConsumerAttribute.ConnectionPointType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取使用者连接点的连接点类型。"
  remarks: "此属性返回<xref:System.Type>的使用者连接点。</xref:System.Type> <xref:System.Type>必须派生自<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>，当声明和`connectionPointType`参数`ConnectionConsumerAttribute`的回调方法，您声明的类型的实例上的元数据元素用来创建连接点而不是标准<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>类。</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Type>"
  syntax:
    content: public Type ConnectionPointType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>，该值指示连接点的类型。</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "无效的连接点类型 (一个不是派生自<xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;></xref>类) 使用。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName
  id: DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: DisplayName
  nameWithType: ConnectionConsumerAttribute.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取使用者连接点的友好名称。"
  remarks: "此属性是一个使用者连接点的友好名称。 其值时，可以设置以声明方式，你将添加`displayName`参数`ConnectionConsumerAttribute`的回调方法的元数据元素。 它也可以设置以编程方式由派生类中，通过使用受保护<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue%2A>属性。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue%2A>       如果你要搜索整个连接点集合，则应使用<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID%2A>属性，因为 ID 属性必须是唯一的但 DisplayName 属性不需要。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID%2A>       向用户显示的使用者连接点的 DisplayName 属性时<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是在页上，连接用户界面 (UI) 处于打开状态，且用户位于他们能够选择要建立连接的连接点的视图。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>"
  example:
  - "The following code example demonstrates using the DisplayName property, by showing how to declare the `ConnectionConsumerAttribute` metadata element on a callback method in a consumer control. Note that the simplest overload of the constructor is used; only the `displayName` parameter value is supplied. The value of the parameter will become the value of the DisplayName property. For the full code required to run the code example, see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class overview.  \n  \n [!code-vb[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_356_1.vb)]\n [!code-cs[UI.WebControls.WebParts.Connection#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_356_1.cs)]"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "包含使用者连接点的友好显示名称的字符串。"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue
  id: DisplayNameValue
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: DisplayNameValue
  nameWithType: ConnectionConsumerAttribute.DisplayNameValue
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置用作的值的字符串<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*>属性，以便在本地化方案中使用。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*>"
  remarks: "此额外属性存在，以便你可以从派生<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>和提供的本地化的版本。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 派生可本地化<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>属性将保留一个专用的布尔字段，以指示是否已本地化。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 第一次访问<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>属性，它将查找本地化的字符串，并将 DisplayNameValue 属性以便将本地化的值赋给<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>属性。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>"
  syntax:
    content: protected string DisplayNameValue { get; set; }
    return:
      type: System.String
      description: "一个字符串，用作<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*>.</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*>的值"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  langs:
  - csharp
  name: ID
  nameWithType: ConnectionConsumerAttribute.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个字符串，表示使用者连接点的唯一标识。"
  remarks: "如果搜索连接点集合，你应使用的 ID 属性来查找特定的连接点。 此属性可以用于区分具有相同名称的两个连接点。 使用者连接点可以具有相同<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>属性值，但 ID 属性必须不同。</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName%2A>"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "分配给使用者连接点的唯一 ID。 默认值为<xref:System.String>。</xref:System.String>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionConsumerAttribute(String)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionConsumerAttribute(String,String)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String)
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.Type)
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionConsumerAttribute(String,Type)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,Type)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String,System.Type)
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionConsumerAttribute(String,String,Type)
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String,Type)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionConsumerAttribute(String,String,Type)
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionConsumerAttribute.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionPointType
  nameWithType: ConnectionConsumerAttribute.ConnectionPointType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionConsumerAttribute.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: DisplayNameValue
  nameWithType: ConnectionConsumerAttribute.DisplayNameValue
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ID
  nameWithType: ConnectionConsumerAttribute.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionConsumerAttribute
  nameWithType: ConnectionConsumerAttribute.ConnectionConsumerAttribute
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionConsumerAttribute.AllowsMultipleConnections
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ConnectionPointType
  nameWithType: ConnectionConsumerAttribute.ConnectionPointType
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionConsumerAttribute.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: DisplayNameValue
  nameWithType: ConnectionConsumerAttribute.DisplayNameValue
- uid: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID*
  parent: System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  isExternal: false
  name: ID
  nameWithType: ConnectionConsumerAttribute.ID
