### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Ports
  id: Ports
  children:
  - Microsoft.VisualBasic.Devices.Ports.#ctor
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  langs:
  - csharp
  name: Ports
  nameWithType: Ports
  fullName: Microsoft.VisualBasic.Devices.Ports
  type: Class
  summary: "提供的属性和方法，用于访问计算机的串行端口。"
  remarks: "`My.Computer.Ports`对象提供一个简单的入口点，用于访问[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]串行端口类， <xref:System.IO.Ports.SerialPort>.</xref:System.IO.Ports.SerialPort>       下表列出了所涉及的任务的示例`My.Computer.Ports`对象。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|  |显示可用的串行端口 |[如何︰ 显示可用的串行端口](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public class Ports
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.Devices.Ports&quot;></xref>类。"
  syntax:
    content: public Ports ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Ports.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  id: OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "创建并打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象。"
  remarks: "`My.Computer.Ports.OpenSerialPort`方法创建并打开<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort> 自变量`OpenSerialPort`方法确定的设置<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort>       你的代码应关闭<xref:System.IO.Ports.SerialPort>对象完成后使用的对象。</xref:System.IO.Ports.SerialPort> 你可以使用<xref:System.IO.Ports.SerialPort.Close%2A>方法来显式关闭该对象或`Using`语句以隐式关闭。</xref:System.IO.Ports.SerialPort.Close%2A> 请参阅此主题的详细信息中的示例。       下表列出了所涉及的任务的示例`My.Computer.Ports.OpenSerialPort`方法。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 必需。 若要打开的端口的名称。"
    return:
      type: System.IO.Ports.SerialPort
      description: "打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象，使用所提供的参数配置。"
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  id: OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "创建并打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象。"
  remarks: "`My.Computer.Ports.OpenSerialPort`方法创建并打开<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort> 自变量`OpenSerialPort`方法确定的设置<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort>       你的代码应关闭<xref:System.IO.Ports.SerialPort>对象完成后使用的对象。</xref:System.IO.Ports.SerialPort> 你可以使用<xref:System.IO.Ports.SerialPort.Close%2A>方法来显式关闭该对象或`Using`语句以隐式关闭。</xref:System.IO.Ports.SerialPort.Close%2A> 请参阅此主题的详细信息中的示例。       下表列出了所涉及的任务的示例`My.Computer.Ports.OpenSerialPort`方法。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 必需。 若要打开的端口的名称。"
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 端口波特率。"
    return:
      type: System.IO.Ports.SerialPort
      description: "打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象，使用所提供的参数配置。"
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baudRate</code>小于或等于零。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "创建并打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象。"
  remarks: "`My.Computer.Ports.OpenSerialPort`方法创建并打开<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort> 自变量`OpenSerialPort`方法确定的设置<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort>       你的代码应关闭<xref:System.IO.Ports.SerialPort>对象完成后使用的对象。</xref:System.IO.Ports.SerialPort> 你可以使用<xref:System.IO.Ports.SerialPort.Close%2A>方法来显式关闭该对象或`Using`语句以隐式关闭。</xref:System.IO.Ports.SerialPort.Close%2A> 请参阅此主题的详细信息中的示例。       下表列出了所涉及的任务的示例`My.Computer.Ports.OpenSerialPort`方法。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 必需。 若要打开的端口的名称。"
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 端口波特率。"
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. 端口的奇偶校验。"
    return:
      type: System.IO.Ports.SerialPort
      description: "打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象，使用所提供的参数配置。"
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baudRate</code>小于或等于零。"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>parity</code>不是一个<xref href=&quot;System.IO.Ports.Parity&quot;></xref>枚举值。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "创建并打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象。"
  remarks: "`My.Computer.Ports.OpenSerialPort`方法创建并打开<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort> 自变量`OpenSerialPort`方法确定的设置<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort>       你的代码应关闭<xref:System.IO.Ports.SerialPort>对象完成后使用的对象。</xref:System.IO.Ports.SerialPort> 你可以使用<xref:System.IO.Ports.SerialPort.Close%2A>方法来显式关闭该对象或`Using`语句以隐式关闭。</xref:System.IO.Ports.SerialPort.Close%2A> 请参阅此主题的详细信息中的示例。       下表列出了所涉及的任务的示例`My.Computer.Ports.OpenSerialPort`方法。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 必需。 若要打开的端口的名称。"
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 端口波特率。"
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. 端口的奇偶校验。"
    - id: dataBits
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 数据位的端口设置。"
    return:
      type: System.IO.Ports.SerialPort
      description: "打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象，使用所提供的参数配置。"
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataBits</code>小于或等于零。"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>parity</code>不是一个<xref href=&quot;System.IO.Ports.Parity&quot;></xref>枚举值。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "创建并打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象。"
  remarks: "`My.Computer.Ports.OpenSerialPort`方法创建并打开<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort> 自变量`OpenSerialPort`方法确定的设置<xref:System.IO.Ports.SerialPort>对象。</xref:System.IO.Ports.SerialPort>       你的代码应关闭<xref:System.IO.Ports.SerialPort>对象完成后使用的对象。</xref:System.IO.Ports.SerialPort> 你可以使用<xref:System.IO.Ports.SerialPort.Close%2A>方法来显式关闭该对象或`Using`语句以隐式关闭。</xref:System.IO.Ports.SerialPort.Close%2A> 请参阅此主题的详细信息中的示例。       下表列出了所涉及的任务的示例`My.Computer.Ports.OpenSerialPort`方法。      |||  |-|-|  |到 |请参阅 |  |连接到串行端口的调制解调器拨号 |[如何︰ 使用连接到串行端口的调制解调器拨号](~/add/includes/ajax-current-ext-md.md)|  |将字符串发送到串行端口 |[如何︰ 将字符串发送到串行端口](~/add/includes/ajax-current-ext-md.md)|  |从串行端口接收字符串 |[如何︰ 从串行端口接收字符串](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 必需。 若要打开的端口的名称。"
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 端口波特率。"
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. 端口的奇偶校验。"
    - id: dataBits
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 数据位的端口设置。"
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "<xref href=&quot;System.IO.Ports.StopBits&quot;></xref>. 停止位的端口设置。"
    return:
      type: System.IO.Ports.SerialPort
      description: "打开<xref href=&quot;System.IO.Ports.SerialPort&quot;></xref>对象，使用所提供的参数配置。"
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataBits</code>小于或等于零。"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>stopBits</code>不是一个<xref href=&quot;System.IO.Ports.StopBits&quot;></xref>枚举值。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  id: SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "获取计算机上的串行端口名称的集合。"
  remarks: "`My.Computer.Ports.SerialPortNames`属性获取计算机上的串行端口名称的集合。      1> [!NOTE] 1> 返回的端口名称`My.Computer.Ports.SerialPortNames`在可能不正确时在 Windows 98 上运行。 若要防止应用程序错误，使用异常处理，如`Try...Catch...Finally`语句或`Using`语句中，如果使用的端口名称以打开端口。       下表列出的任务涉及示例`My.Computer.Ports.SerialPortNames`属性。      |||  |-|-|  |到 |请参阅 |  |显示可用的串行端口 |[如何︰ 显示可用的串行端口](~/add/includes/ajax-current-ext-md.md)|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns. These strings are the names of the available serial ports on the computer.  \n  \n Typically, a user selects which serial port the application should use from the list of available ports. In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control. For more information, see [ListBox Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[VbVbalrMyComputer#45](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#45)]  \n  \n This example requires:  \n  \n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \n  \n-   That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.  \n  \n For more information, see [How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "在计算机上的串行端口名称的集合。"
  overload: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
- uid: System.IO.Ports.SerialPort
  parent: System.IO.Ports
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports
  nameWithType: Ports.Ports
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort
  nameWithType: Ports.OpenSerialPort
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
