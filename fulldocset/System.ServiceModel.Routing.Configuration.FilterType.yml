### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.FilterType
  id: FilterType
  children:
  - System.ServiceModel.Routing.Configuration.FilterType.Action
  - System.ServiceModel.Routing.Configuration.FilterType.And
  - System.ServiceModel.Routing.Configuration.FilterType.Custom
  - System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  - System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  - System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  - System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  - System.ServiceModel.Routing.Configuration.FilterType.XPath
  langs:
  - csharp
  name: FilterType
  nameWithType: FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterType
  type: Enum
  summary: "指定路由消息时使用筛选器的类型。"
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]使用 FilterType，请参阅<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>。</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>'
  syntax:
    content: public enum FilterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.Action
  id: Action
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: Action
  nameWithType: FilterType.Action
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Action
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.ActionMessageFilter&quot;></xref>要作为筛选依据操作。"
  syntax:
    content: Action
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.And
  id: And
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: And
  nameWithType: FilterType.And
  fullName: System.ServiceModel.Routing.Configuration.FilterType.And
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.StrictAndMessageFilter&quot;></xref>以筛选在两个消息筛选器，二者用 and 连接在一起。"
  syntax:
    content: And
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.Custom
  id: Custom
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: Custom
  nameWithType: FilterType.Custom
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Custom
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用用户定义的筛选器。"
  syntax:
    content: Custom
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  id: EndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: EndpointAddress
  nameWithType: FilterType.EndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;></xref>与<> *1> 设置为* *false** 地址进行筛选。"
  syntax:
    content: EndpointAddress
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  id: EndpointName
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: EndpointName
  nameWithType: FilterType.EndpointName
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.EndpointNameMessageFilter&quot;></xref>要作为筛选依据的服务终结点的名称。"
  syntax:
    content: EndpointName
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  id: MatchAll
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: MatchAll
  nameWithType: FilterType.MatchAll
  fullName: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.MatchAllMessageFilter&quot;></xref>以匹配所有消息。"
  syntax:
    content: MatchAll
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  id: PrefixEndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: PrefixEndpointAddress
  nameWithType: FilterType.PrefixEndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>与<> *1> 设置为* *false** 使用最长前缀匹配地址进行筛选。"
  syntax:
    content: PrefixEndpointAddress
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.XPath
  id: XPath
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: XPath
  nameWithType: FilterType.XPath
  fullName: System.ServiceModel.Routing.Configuration.FilterType.XPath
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "使用<xref href=&quot;System.ServiceModel.Dispatcher.XPathMessageFilter&quot;></xref>要作为筛选依据的 XPath 表达式。"
  syntax:
    content: XPath
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Routing.Configuration.FilterType.Action
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: Action
  nameWithType: FilterType.Action
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Action
- uid: System.ServiceModel.Routing.Configuration.FilterType
  parent: System.ServiceModel.Routing.Configuration
  isExternal: false
  name: FilterType
  nameWithType: FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterType
- uid: System.ServiceModel.Routing.Configuration.FilterType.And
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: And
  nameWithType: FilterType.And
  fullName: System.ServiceModel.Routing.Configuration.FilterType.And
- uid: System.ServiceModel.Routing.Configuration.FilterType.Custom
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: Custom
  nameWithType: FilterType.Custom
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Custom
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: EndpointAddress
  nameWithType: FilterType.EndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: EndpointName
  nameWithType: FilterType.EndpointName
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
- uid: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: MatchAll
  nameWithType: FilterType.MatchAll
  fullName: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
- uid: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: PrefixEndpointAddress
  nameWithType: FilterType.PrefixEndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
- uid: System.ServiceModel.Routing.Configuration.FilterType.XPath
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: XPath
  nameWithType: FilterType.XPath
  fullName: System.ServiceModel.Routing.Configuration.FilterType.XPath
