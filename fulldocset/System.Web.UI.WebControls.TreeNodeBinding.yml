### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBinding
  id: TreeNodeBinding
  children:
  - System.Web.UI.WebControls.TreeNodeBinding.#ctor
  - System.Web.UI.WebControls.TreeNodeBinding.DataMember
  - System.Web.UI.WebControls.TreeNodeBinding.Depth
  - System.Web.UI.WebControls.TreeNodeBinding.FormatString
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  - System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  - System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNodeBinding.Target
  - System.Web.UI.WebControls.TreeNodeBinding.TargetField
  - System.Web.UI.WebControls.TreeNodeBinding.Text
  - System.Web.UI.WebControls.TreeNodeBinding.TextField
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ToString
  - System.Web.UI.WebControls.TreeNodeBinding.Value
  - System.Web.UI.WebControls.TreeNodeBinding.ValueField
  langs:
  - csharp
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
  type: Class
  summary: "定义数据项和它所绑定到在的节点之间的关系<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控件。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，其中每个数据项包含多个字段 （如具有多个特性的 XML 元素），一个节点显示返回的值`ToString`的数据项，默认情况下的方法。</xref:System.Web.UI.WebControls.TreeView> 对于 XML 元素，该节点显示的元素名称，但显示的基础结构的树中，否则不是非常有用。 通过指定的树节点绑定，可以绑定到的特定字段的节点的属性。 TreeNodeBinding 对象定义的每个数据项和它所绑定到的节点之间的关系。       <xref:System.Web.UI.WebControls.TreeView>控制其 TreeNodeBinding 将对象存储在<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>属性并将绑定应用于要创建树层次结构和数据源层次结构之间的一对一关系的数据源。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView> 为数据源中的每个数据项<xref:System.Web.UI.WebControls.TreeView>控件尝试匹配以创建相应的数据项目写入到 TreeNodeBinding 对象<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView>       创建 TreeNodeBinding 对象时，你必须指定绑定的条件。 条件指示当数据项应绑定到的节点。 你可以指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> 通过指定没有略微的性能提升。 节点深度指定获取绑定的节点级别。 例如，以下 TreeNodeBinding 声明绑定`Name`和`ID`字段的数据源到<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性，分别的所有节点的深度为 0:```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>接口) 公开<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>属性，用于指定数据项目的类型。</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 例如，XML 元素的数据成员指定元素的名称。 数据成员时数据源包含多个数据项目类型，指定的数据项目类型使用。 以下 TreeNodeBinding 声明将绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>到在树中，而不考虑位置层次结构中的所有节点的控件︰```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.TreeNode>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.XmlDataSource> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.TreeNode>TreeNodeBinding 对象应用到的对象共享相同的值。</xref:System.Web.UI.WebControls.TreeNode>      1> [!NOTE]&1;> 可以选择性地重写中的绑定的属性<xref:System.Web.UI.WebControls.TreeNode>通过在节点上直接设置对应的属性的对象。</xref:System.Web.UI.WebControls.TreeNode>       下表列出 TreeNodeBinding 类，可用于绑定的属性的属性<xref:System.Web.UI.WebControls.TreeNode>数据项的字段的对象。</xref:System.Web.UI.WebControls.TreeNode>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性的字段。 |      下表列出 TreeNodeBinding 类，可用于绑定的属性的属性<xref:System.Web.UI.WebControls.TreeNode>为静态值的对象。</xref:System.Web.UI.WebControls.TreeNode>  </xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>  </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>  </xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>  </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>|要将绑定到<xref:System.Web.UI.WebControls.TreeNode>对象<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性的静态值。 |      如果冲突 TreeNodeBinding 对象定义，<xref:System.Web.UI.WebControls.TreeView>控件适用以下优先顺序中的树节点绑定︰ 1。</xref:System.Web.UI.WebControls.TreeView>  </xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>  </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>  </xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>  </xref:System.Web.UI.WebControls.TreeNode.Target%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>  </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>  </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>  </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>  </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>  定义并匹配深度和数据成员 TreeNodeBinding 对象。      2.  定义并匹配数据成员仅 TreeNodeBinding 对象。      3.  定义并匹配深度仅 TreeNodeBinding 对象。      4.  定义深度和数据成员都不 TreeNodeBinding 对象。 （此类型的树节点绑定适用于在树中的所有节点。）    5.  在数据源中没有匹配项 TreeNodeBinding 对象。 在此情况下，通过返回的值`ToString`数据项方法然后绑定到<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>TreeNodeBinding 对象应用到的节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       TreeNodeBinding 类还可以通过设置显示在节点的文本格式<xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>"
  example:
  - "The following table shows some example tree node binding declarations.  \n  \n|Example binding|Description|  \n|---------------------|-----------------|  \n|`<asp:TreeNodeBinding TextField=\"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the data source, respectively. All nodes use this tree node binding declaration because the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> and <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> properties are not set.|  \n|`<asp:TreeNodeBinding DataMember= \"Book\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding Depth=\"2\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding DataMember=\"Book\" Depth= \"2\" TextField= \"Title\" ValueField= \"ID\" ImageUrl= \"Image.jpg\">`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively. Also binds the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of the nodes to a static value.|  \n  \n This section contains three code examples. The first code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. The second code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. The third code example provides sample XML data for the first and second code examples.  \n  \n The following code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_1.aspx)]  \n  \n The following code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data that is provided in the next code example to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_2.aspx)]  \n  \n The following code example provides sample XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class TreeNodeBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>类。"
  remarks: "TreeNodeBinding 构造函数用于初始化<xref:System.Web.UI.WebControls.TreeNodeBinding>类</xref:System.Web.UI.WebControls.TreeNodeBinding>的新实例 它通常用于动态填充时<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合<xref:System.Web.UI.WebControls.TreeView>控件。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>"
  example:
  - "The following code example demonstrates how to use the TreeNodeBinding constructor to add a <xref:System.Web.UI.WebControls.TreeNodeBinding> object dynamically to the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_41_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_41_1.aspx)]"
  syntax:
    content: public TreeNodeBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要匹配的值&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;以确定是否要应用的树节点绑定的数据项的属性。"
  remarks: "数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>对象) 公开<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>属性，用于指定数据项目的类型。</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 例如，XML 元素的数据成员指定元素的名称。 数据成员时数据源包含多个数据项目类型，指定的数据项目类型使用。 以下<xref:System.Web.UI.WebControls.TreeNodeBinding>声明绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>到在树中，而不考虑位置层次结构中的所有节点的控件︰```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```创建时<xref:System.Web.UI.WebControls.TreeNodeBinding>对象，你必须指定用于绑定的条件。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeNodeBinding> 条件指示当数据项应绑定到的节点。 你可以指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>DataMember 属性或这两个属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> 通过指定没有略微的性能提升。       一旦建立绑定条件时，你可以随后绑定的属性<xref:System.Web.UI.WebControls.TreeNode>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.TreeNode> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象共享相同的值。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. For this code example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_464_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_464_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "要与数据项的匹配的值&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;属性来确定是否要应用的树节点绑定。 默认值为空字符串 (&quot;&quot;)，指示未设置的 DataMember 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置节点深度从该处<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "节点深度指定获取绑定的节点级别。 例如，以下<xref:System.Web.UI.WebControls.TreeNodeBinding>声明绑定`Name`和`ID`字段的数据源到<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性，分别的所有节点的深度为 0:```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```创建时<xref:System.Web.UI.WebControls.TreeNodeBinding>对象，你必须指定用于绑定的条件。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> 条件指示当数据项应绑定到的节点。 你可以指定的深度或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> 通过指定没有略微的性能提升。       一旦建立绑定条件时，你可以随后绑定的属性<xref:System.Web.UI.WebControls.TreeNode>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.TreeNode> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象共享相同的值。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_444_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_444_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "从该处的节点深度<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。 默认值为-1，指示尚未设置深度属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定到的节点的文本的显示格式的字符串<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "FormatString 属性用于节点的文本提供自定义格式。 数据格式字符串包含的形式，以冒号分隔的两个部分 { `A` : `Bxx` }。 例如，在格式设置字符串`{0:F2}`显示一个带两位小数定点数。      1> [!NOTE]&1;> 整个字符串必须括在大括号以指示它是一个格式字符串而不是文本字符串。 大括号外的任何文本显示为文字文本。       冒号前的值 (`A`常规示例中) 从零开始的参数列表中，指定的参数索引。      1> [!NOTE] 1> 此值可以设置只为 0，因为每个节点中只有一个值。       冒号后面的字符 (`B`常规示例中) 指定值的显示格式。 下表列出了常见的格式。      |格式字符 |显示数字值在 |  |----------------------|--------------------------------|  |`C`|货币格式。 |  |`D`|十进制格式。 |  |`E`|科学记数 （指数） 格式。 |  |`F`|固定的格式。 |  |`G`|常规格式。 |  |`N`|数字格式。 |  |`X`|十六进制格式。 |    &1;> [!NOTE]&1;> 除`X`，格式字符不区分大小写。 `X`格式字符在指定的情况下显示的十六进制字符。       格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。       设置字符串格式的详细信息，请参阅[格式化类型](~/add/includes/ajax-current-ext-md.md)。       此属性的值存储在视图状态。       FormatString 属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_755_1.aspx)]\n [!code-cs[TreeNodeBindingFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_755_1.aspx)]  \n  \n The following code example is sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "指定到的节点的文本的显示格式的格式化字符串<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。 默认值为空字符串 (&quot;&quot;)，指示未设置 FormatString 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置到的节点旁边显示的图像的工具提示文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ImageToolTip 属性指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 你指定的文本，提供可用来使控件更易于访问的映像的说明的辅助技术设备。       此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当节点旁边显示映像时，当鼠标指针定位图像上方时显示的工具提示文本。      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 ImageToolTip 属性<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       而不是使用 ImageToolTip 属性将相同的工具提示文本绑定到每个节点映像，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_796_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_796_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "到的节点旁边显示的图像的工具提示文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。 默认值为空字符串 (&quot;&quot;)，指示未设置直接属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  id: ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ImageToolTipField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 你指定的文本，提供可用来使控件更易于访问的映像的说明的辅助技术设备。       此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当节点旁边显示映像时，当鼠标指针定位图像上方时显示的工具提示文本。      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 ImageToolTipField 属性<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       而不是使用 ImageToolTipField 属性将绑定<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_953_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_953_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTipField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*> 默认值为空字符串 (&quot;&quot;)，指示未设置 ImageToolTipField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置到的节点旁边显示的图像的 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ImageUrl 属性指定要绑定到的自定义映像<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 图像将显示在节点旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端浏览器支持该格式。      1> [!NOTE]&1;> 可以通过设置重写的图像的单个节点及其<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       除了使用此属性绑定到每个节点的同一个映像，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       当显示图像旁边 ImageUrl 属性的节点，你还应考虑设置<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> 你指定的工具提示文本提供了辅助技术设备可用于使控件更易于访问的映像的说明。       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrl property to specify a custom image for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_58_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "到的节点旁边显示的图像 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>应用对象。 未设置 ImageUrl 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ImageUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 图像将显示在节点旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端浏览器支持的格式。      1> [!NOTE]&1;> 可以通过设置重写的图像的单个节点及其<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       当显示图像旁边 ImageUrlField 属性的节点，你还应考虑设置<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> 你指定的工具提示文本提供了辅助技术设备可用于使控件更易于访问的映像的说明。       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1012_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1012_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置 ImageUrlField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要向其节点时链接到的 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>应用对象时发生。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源时，请使用 NavigateUrl 属性来指定要绑定到的 URL<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当设置此属性时，<xref:System.Web.UI.WebControls.TreeView>控件显示的节点，而不是纯文本的文本的超链接。</xref:System.Web.UI.WebControls.TreeView> 你还可以选择设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>属性指定的窗口或框架中显示的链接的内容。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 NavigateUrl 属性<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       除了使用 NavigateUrl 属性绑定到每个节点的同一个 URL，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1267_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1267_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "要向其节点时链接到的 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>应用对象时发生。 默认值为空字符串 (&quot;&quot;)，指示未设置 NavigateUrl 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 NavigateUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当设置 NavigateUrlField 属性时，<xref:System.Web.UI.WebControls.TreeView>控件显示的节点，而不是纯文本的文本的超链接。</xref:System.Web.UI.WebControls.TreeView> 你还可以选择设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>属性指定的窗口或框架中显示的链接的内容。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 NavigateUrlField 属性<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       而不是使用 NavigateUrlField 属性将绑定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1074_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1074_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置 NavigateUrlField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否向其节点<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象动态填充。"
  remarks: "有时，它是不可行静态预定义树形结构由于数据大小或依赖于用户输入的自定义内容。 因此，<xref:System.Web.UI.WebControls.TreeView>控件支持动态节点填充。</xref:System.Web.UI.WebControls.TreeView> 当 PopulateOnDemand 属性设置为`true`，节点的子节点的<xref:System.Web.UI.WebControls.TreeNodeBinding>对象应用于获取填充在该节点已展开时的运行时。</xref:System.Web.UI.WebControls.TreeNodeBinding>       数据绑定中设置的创建时<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>的<xref:System.Web.UI.WebControls.TreeView>控制转移到`true`，创建的绑定具有 PopulateOnDemand 属性设置为`true`。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> 以声明方式创建的数据绑定都具有 PopulateOnDemand 属性设置为`false`。 使用声明性语法，可控制各个数据绑定的行为。      1> [!NOTE]&1;> 与不同<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>的<xref:System.Web.UI.WebControls.TreeNode>类，PopulateOnDemand 属性不需要为<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件，如果你使用数据源控件，如<xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>定义的事件处理方法</xref:System.Web.UI.WebControls.TreeNode>的属性</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 相反，<xref:System.Web.UI.WebControls.TreeView>控件动态生成使用的属性的事件处理方法<xref:System.Web.UI.WebControls.TreeNodeBinding>中的对象<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> 您仍然可以定义的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件; 但是，将调用之后的事件处理方法<xref:System.Web.UI.WebControls.TreeView>控件。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       支持的浏览器还可以利用客户端节点填充。 如果启用，这将允许<xref:System.Web.UI.WebControls.TreeView>控件来填充动态客户端上的节点，展开该节点时，免除回发到服务器的需要。</xref:System.Web.UI.WebControls.TreeView> 客户端节点填充的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_426_1.aspx)]\n [!code-vb[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_426_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要填充到节点<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>动态; 否则为应用对象<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置事件或事件以引发到其中的节点时<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象选择。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 SelectAction 属性指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性用于指定在选定节点时，将引发哪些事件。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 SelectAction 属性<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       下表列出可用的选项。      |`SelectAction`值 |说明 |  |--------------------------|-----------------|  |`TreeNodeSelectAction.Expand`|切换展开和折叠状态之间的节点。 引发<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>事件或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件时，根据。 |  |`TreeNodeSelectAction.None`|不引发任何事件时选择一个节点。 |  |`TreeNodeSelectAction.Select`|引发<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件选定了一个节点。 |  |`TreeNodeSelectAction.SelectExpand`|引发同时<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>和<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>选定了一个节点时发生的事件。</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 仅展开节点，永远不会折叠。 |    &1;> [!NOTE]&1;><xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的节点不呈现其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性设置为`TreeNodeSelectAction.None`。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingSelectAction#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_346_1.aspx)]\n [!code-vb[TreeNodeBindingSelectAction#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_346_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "之一<xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否到的节点旁边显示一个复选框<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "若要提供中的多节点选择支持<xref:System.Web.UI.WebControls.TreeView>控件，可以在节点中显示的图像旁边的复选框。</xref:System.Web.UI.WebControls.TreeView> 当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ShowCheckBox 属性指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>属性用于显示或隐藏节点的复选框。</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>      1> [!NOTE]&1;> 尽管 ShowCheckBox 属性可以用于显示复选框，但是很多常见的是使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性<xref:System.Web.UI.WebControls.TreeView>控件。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 但是，<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性会影响每个属性指定的节点类型; 因此，ShowCheckBox 属性通常用于重写到的节点该设置<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 您可以通过设置有选择地覆盖 ShowCheckBox 属性<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1341_1.aspx)]\n [!code-vb[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1341_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要向其显示节点旁的复选框<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>对象是应用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一份<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>对象。"
  remarks: "ICloneable.Clone 方法是一个帮助器函数来创建一份<xref:System.Web.UI.WebControls.TreeNodeBinding>对象从其调用 ICloneable.Clone 方法。</xref:System.Web.UI.WebControls.TreeNodeBinding>      1> [!NOTE]&1;> ICloneable.Clone 方法主要由控件开发人员使用。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个对象，表示一份<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref href=&quot;System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema&quot;> </xref>。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TreeNodeBinding>实例被强制转换为<xref:System.Web.UI.IDataSourceViewSchemaAccessor>接口。</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.WebControls.TreeNodeBinding>       此属性的值存储在视图状态。"
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "一个对象，表示与关联架构<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref href=&quot;System.Web.UI.IStateManager.IsTrackingViewState&quot;> </xref>。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TreeNodeBinding>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该控件标记为保存其状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载节点的以前保存的视图状态。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;包含保存的视图状态的值。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将视图状态更改保存到一个对象。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含视图状态更改的对象。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象来跟踪其视图状态的更改。"
  remarks: "在服务器控件中，调用了 IStateManager.TrackViewState 方法<xref:System.Web.UI.Control.IsTrackingViewState%2A>属性返回`true`。</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置目标窗口或框架，用于显示与节点关联网页内容<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源、 目标属性用于指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性用于指定窗口，或单击该节点时，要在其中显示的 Web 内容的帧链接到节点。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      1> [!NOTE]&1;> 设置目标属性重写<xref:System.Web.UI.WebControls.TreeView.Target%2A>属性<xref:System.Web.UI.WebControls.TreeView>到节点的控件<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A> 您可以通过设置有选择地覆盖目标属性<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      1> [!NOTE]&1;> Target 属性呈现为`target`属性。 `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 如果未设置目标属性，呈现的输出<xref:System.Web.UI.WebControls.TreeNodeBinding>控件必须符合 XHTML 1.1。</xref:System.Web.UI.WebControls.TreeNodeBinding> 有关详细信息，请参阅[在 Visual Studio 和 ASP.NET 的 XHTML 标准](~/add/includes/ajax-current-ext-md.md)。   >> 时创建可访问网页，你应避免使用的目标属性将另一个窗口作为目标。 有关详细信息，请参阅[NIB: ASP.NET 可访问性](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_78_1.aspx)]\n [!code-cs[TreeNodeBindingTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_78_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "目标窗口或框架，用于显示链接的网页内容。 值必须以字母开头 a 到 Z 范围内 （区分大小写），但下表中所示，以下划线开头某些特殊值除外。       <table><thead><tr><th> 目标值       </th><th> 说明       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> 呈现在新窗口中没有框架的内容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 呈现的即时框架集父代中的内容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> 呈现搜索窗格中的内容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> 呈现具有焦点的框架中的内容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> 呈现没有框架的完整窗口中的内容。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    检查你的浏览器文档以确定如果<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>值受到支持。  例如，Microsoft Internet Explorer 版本 5.0 和更高版本支持<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>目标值。      </div>       默认值为空字符串 (&quot;&quot;)，该值刷新具有焦点的框架的窗口。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.Target*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Target*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 TargetField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性用于指定窗口，或单击该节点时，要在其中显示的 Web 内容的帧链接到节点。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 TargetField 属性<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       而不是使用 TargetField 属性将绑定<xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.Target%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Target*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Target*> 默认值为空字符串 (&quot;&quot;)，指示未设置 TargetField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置该节点的显示的文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源时，请使用文本属性来指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性用于指定一个节点中显示的文本。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      1> [!NOTE]&1;>，可以有选择地替代文本属性设置<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       而不是使用文本属性绑定到每个节点的相同的文本，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_55_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "为到的节点显示的文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.Text*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Text*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用文本字段属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性用于指定一个节点中显示的文本。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      1> [!NOTE]&1;> 你可以有选择地重写的文本字段属性设置<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       而不是使用文本字段属性将绑定<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1062_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1062_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Text*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Text*> 默认值为空字符串 (&quot;&quot;)，指示未设置文本字段属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置该节点的工具提示文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用工具提示属性指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当鼠标指针置于节点上时，会显示的工具提示文本。      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖的 ToolTip 属性<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       而不是使用工具提示属性绑定到每个节点的相同的工具提示文本，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_552_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_552_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "到的节点的工具提示文本<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。 默认值为空字符串 (&quot;&quot;)，指示未设置工具提示属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ToolTip*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ToolTipField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 当鼠标指针置于节点上时，会显示的工具提示文本。      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 ToolTipField 属性<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       而不是使用 ToolTipField 属性将绑定<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_325_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_325_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.ToolTip*> 默认值为空字符串 (&quot;&quot;)，指示未设置 ToolTipField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "返回<> *1> 属性。如果<> *1> 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;)， **（空）**返回。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置显示的值不会显示，但用于存储到的节点有关的任何其他数据<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象，如用于处理回发事件数据。"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源时，请使用 Value 属性来指定要绑定到的值<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性用于补充<xref:System.Web.UI.WebControls.TreeNode.Text%2A>通过将存储到的节点与关联的任何其他数据属性<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 此值不会显示在控件，通常用于存储用于处理回发事件数据。      1> [!NOTE]&1;>，可以有选择地替代值属性设置<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       而不是使用 Value 属性将相同的值绑定到每个节点，可以将绑定<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性<xref:System.Web.UI.WebControls.TreeNode>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1097_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1097_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "有关节点的补充数据<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象; 不会显示此数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.TreeNode.Value*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Value*>"
  remarks: "当<xref:System.Web.UI.WebControls.TreeView>控件绑定到数据源，请使用 ValueField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> 此绑定关系影响所有<xref:System.Web.UI.WebControls.TreeNode>对象向其<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性用于补充<xref:System.Web.UI.WebControls.TreeNode.Text%2A>通过将存储到的节点与关联的任何其他数据属性<xref:System.Web.UI.WebControls.TreeNodeBinding>应用对象。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 此值不会显示在控件，通常用于存储用于处理回发事件数据。      1> [!NOTE]&1;> 您可以通过设置有选择地覆盖 ValueField 属性<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接每个节点的属性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       而不是使用 ValueField 属性将绑定<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性<xref:System.Web.UI.WebControls.TreeNode>对象移到一个字段，你可以设置<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性通过设置的固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>属性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>      1> [!NOTE]&1;> 如果数据源包含多个字段，则必须首先设置<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>属性或这两个属性以便将绑定到相应的字段。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       此属性的值存储在视图状态。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1111_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1111_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.TreeNode.Value*>属性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.TreeNode.Value*> 默认值为空字符串 (&quot;&quot;)，指示未设置 ValueField 属性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNodeBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString
  nameWithType: TreeNodeBinding.ToString
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
