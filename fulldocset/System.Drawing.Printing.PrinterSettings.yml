### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrinterSettings
  id: PrinterSettings
  children:
  - System.Drawing.Printing.PrinterSettings.#ctor
  - System.Drawing.Printing.PrinterSettings.CanDuplex
  - System.Drawing.Printing.PrinterSettings.Clone
  - System.Drawing.Printing.PrinterSettings.Collate
  - System.Drawing.Printing.PrinterSettings.Copies
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  - System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  - System.Drawing.Printing.PrinterSettings.Duplex
  - System.Drawing.Printing.PrinterSettings.FromPage
  - System.Drawing.Printing.PrinterSettings.GetHdevmode
  - System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.GetHdevnames
  - System.Drawing.Printing.PrinterSettings.InstalledPrinters
  - System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Printing.PrinterSettings.IsPlotter
  - System.Drawing.Printing.PrinterSettings.IsValid
  - System.Drawing.Printing.PrinterSettings.LandscapeAngle
  - System.Drawing.Printing.PrinterSettings.MaximumCopies
  - System.Drawing.Printing.PrinterSettings.MaximumPage
  - System.Drawing.Printing.PrinterSettings.MinimumPage
  - System.Drawing.Printing.PrinterSettings.PaperSizes
  - System.Drawing.Printing.PrinterSettings.PaperSources
  - System.Drawing.Printing.PrinterSettings.PrinterName
  - System.Drawing.Printing.PrinterSettings.PrinterResolutions
  - System.Drawing.Printing.PrinterSettings.PrintFileName
  - System.Drawing.Printing.PrinterSettings.PrintRange
  - System.Drawing.Printing.PrinterSettings.PrintToFile
  - System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SupportsColor
  - System.Drawing.Printing.PrinterSettings.ToPage
  - System.Drawing.Printing.PrinterSettings.ToString
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
  type: Class
  summary: "指定有关文档的打印方式，包括打印，从 Windows 窗体应用程序打印时的打印机信息。"
  remarks: "通常，你访问通过 PrinterSettings<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>或<xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName>属性以修改打印机设置。</xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> 最常见的打印机设置是<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>，它指定要打印到打印机。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>       有关打印功能与 Windows 窗体的详细信息，请参阅<xref:System.Drawing.Printing>命名空间概述。</xref:System.Drawing.Printing> 如果你想要从 Windows Presentation Foundation 应用程序打印，请参阅<xref:System.Printing>命名空间。</xref:System.Printing>"
  example:
  - "The following code example prints a document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_2_1.vb)]"
  syntax:
    content: 'public class PrinterSettings : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>类。"
  remarks: "默认构造函数初始化为其默认值的所有字段。       通常情况下，你不创建的实例<xref:System.Drawing.Printing.PrinterSettings>，而是改用<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>设置打印机设置。</xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings>"
  syntax:
    content: public PrinterSettings ();
    parameters: []
  overload: System.Drawing.Printing.PrinterSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  id: CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值指示是否打印机支持双面打印。"
  remarks: "若要打印使用双工，并且如果打印机支持它，<xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>之一<xref:System.Drawing.Printing.Duplex>值。</xref:System.Drawing.Printing.Duplex> </xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>"
  syntax:
    content: public bool CanDuplex { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果打印机支持双面打印;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CanDuplex*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Clone
  id: Clone
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "创建一份<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "此对象的副本。"
  overload: System.Drawing.Printing.PrinterSettings.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Collate
  id: Collate
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置一个值，该值指示是否逐份打印的文档。"
  remarks: "仅当副本数大于 1 时，才执行排序。 设置<xref:System.Drawing.Printing.PrinterSettings.Copies%2A>属性来指定打印的份数</xref:System.Drawing.Printing.PrinterSettings.Copies%2A>       将排序规则设置为`true`下一步复制的第一页打印之前将打印文档的完整副本。 `false`将通过指定打印下一页之前的份数打印每一页。"
  syntax:
    content: public bool Collate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果逐份打印的文档否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.Collate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Copies
  id: Copies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置要打印的文档的副本数。"
  remarks: "并非所有打印机都支持打印多份。 你可以使用<xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A>属性来确定的最大数将打印机支持复制。</xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> 如果设置的副本数高于受打印机的最大副本，将打印仅最大副本数，并不会出现异常。      1> [!NOTE]&1;> 一些打印机可能不支持一次打印多个副本。"
  syntax:
    content: public short Copies { get; set; }
    return:
      type: System.Int16
      description: "要打印的份数。 默认值为 1。"
  overload: System.Drawing.Printing.PrinterSettings.Copies*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性是副本小于零的值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  id: CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返回<xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含创建时有用的打印机信息<xref href=&quot;System.Drawing.Printing.PrintDocument&quot;> </xref>。"
  remarks: "通过 CreateMeasurementGraphics 方法中，您可获得<xref:System.Drawing.Graphics>而无需创建打印作业的打印机。</xref:System.Drawing.Graphics> 你可以使用<xref:System.Drawing.Graphics>以确定如何向布局如字体、 大小和复杂的打印作业的类型样式的可视元素。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics ();
    parameters: []
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含从打印机的信息。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "中指定的打印机<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>属性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  id: CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返回<xref href=&quot;System.Drawing.Graphics&quot;></xref>包含打印机信息，可以选择指定边距处原点。"
  remarks: "与<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法，你可以获取<xref:System.Drawing.Graphics>而无需创建打印作业的打印机。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>以确定如何向布局如字体、 大小和复杂的打印作业的类型样式的可视元素。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);
    parameters:
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示边距; 处的原点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含从的打印机信息<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返回<xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含与指定的打印机信息<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  remarks: "与<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法，你可以获取<xref:System.Drawing.Graphics>而无需创建打印作业的打印机。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>以确定如何向布局如字体、 大小和复杂的打印作业的类型样式的可视元素。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>检索的图形对象。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含从的打印机信息<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "创建<xref href=&quot;System.Drawing.Graphics&quot;></xref>与指定的页设置关联并选择性地指定边距处原点。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法可用于获取<xref:System.Drawing.Graphics>而无需创建打印作业的打印机。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>以确定如何向布局如字体、 大小和复杂的打印作业的类型样式的可视元素。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>检索<xref href=&quot;System.Drawing.Graphics&quot;></xref>对象。"
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定边距; 处的原点否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，包含从的打印机信息<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取默认值为这台打印机的页设置。"
  remarks: "页设置包括在页上的边距的大小、 纸若要使用，以及是否要以彩色打印的大小。 有关页设置的详细信息，请参阅<xref:System.Drawing.Printing.PageSettings>类。</xref:System.Drawing.Printing.PageSettings>"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref> ，表示此打印机的默认页设置。"
  overload: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  id: Duplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置双面打印的打印机设置。"
  remarks: "你可以使用<xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>属性检查打印机是否支持双工打印。</xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>"
  syntax:
    content: public System.Drawing.Printing.Duplex Duplex { get; set; }
    return:
      type: System.Drawing.Printing.Duplex
      description: "之一<xref href=&quot;System.Drawing.Printing.Duplex&quot;></xref>值。 默认值由打印机确定。"
  overload: System.Drawing.Printing.PrinterSettings.Duplex*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "双工属性的值不是之一<xref href=&quot;System.Drawing.Printing.Duplex&quot;></xref>值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  id: FromPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置要打印的第一页的页码。"
  remarks: "FromPage 和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>属性由<xref:System.Windows.Forms.PrintDialog>当用户选择打印范围。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>属性必须设置为`true`，使用户能够指定打印范围。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 此外，<xref:System.Windows.Forms.PrintDialog>需要<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>指定和 FromPage 值要在该范围内。</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> </xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> </xref:System.Windows.Forms.PrintDialog>       在打印过程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件中查看<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>来确定应该打印的内容。</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用 FromPage 和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>应打印属性来确定页。</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然后指定仅对所选的页面的输出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>       FromPage，<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>也可以设置以编程方式，但<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>实现都是相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>"
  syntax:
    content: public int FromPage { get; set; }
    return:
      type: System.Int32
      description: "若要打印的第一页的页码。"
  overload: System.Drawing.Printing.PrinterSettings.FromPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性的值是 FromPage 小于零。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  id: GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "创建的句柄<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构，它对应于打印机设置。"
  remarks: '`DEVMODE`结构是特定的设备。 复制`DEVMODE`结构从一个<xref:System.Drawing.Printing.PrinterSettings>到<xref:System.Drawing.Printing.PrinterSettings>不支持另一台打印机。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings> 完成通过此方法创建的句柄后，你必须亲自通过调用本机 Win32`GlobalFree`方法。 在调用此方法时，传递从 GetHdevmode 方法'
  syntax:
    content: public IntPtr GetHdevmode ();
    parameters: []
    return:
      type: System.IntPtr
      description: "句柄<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "中指定的打印机<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>属性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "无法检索打印机的初始化信息。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  id: GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "创建的句柄<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构，它对应于打印机和通过指定的页设置<code> pageSettings </code>参数。"
  remarks: "`DEVMODE`结构是特定的设备。 复制`DEVMODE`结构从一个<xref:System.Drawing.Printing.PrinterSettings>到<xref:System.Drawing.Printing.PrinterSettings>不支持另一台打印机。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings>       完成通过此方法创建的句柄后，你必须亲自通过调用本机 Win32`GlobalFree`方法。 在调用此方法时，你将作为参数传递的返回值<xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>方法。</xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>"
  syntax:
    content: public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>对象<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构的句柄对应。"
    return:
      type: System.IntPtr
      description: "句柄<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "中指定的打印机<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>属性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "无法检索打印机的初始化信息。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  id: GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "创建的句柄<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>结构，它对应于打印机设置。"
  remarks: "完成通过此方法创建的句柄后，你必须亲自通过调用本机 Win32`GlobalFree`方法。 在调用此方法时，传递从 GetHdevnames 方法"
  syntax:
    content: public IntPtr GetHdevnames ();
    parameters: []
    return:
      type: System.IntPtr
      description: "句柄<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>结构。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  id: InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取计算机上安装的所有打印机的名称。"
  remarks: "已安装的打印机名称的集合可用于提供一种打印机来打印到的用户。"
  example:
  - "The following code example populates the `comboInstalledPrinters` combo box with the installed printers and also sets the printer to print, using the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, when the selection changes. The `PopulateInstalledPrintersCombo` routine is called when the form is being initialized. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/csharp/p-system.drawing.printin_14_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/cpp/p-system.drawing.printin_14_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/visualbasic/p-system.drawing.printin_14_1.vb)]"
  syntax:
    content: public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.StringCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.StringCollection>表示计算机上安装的所有打印机的名称。</xref:System.Drawing.Printing.PrinterSettings.StringCollection>"
  overload: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "无法枚举可用的打印机。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  id: IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值指示是否<> *1> 属性指定默认打印机，除用户显式设置<> *1>。"
  remarks: "始终返回 IsDefaultPrinter`false`时显式设置<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>为字符串值以外的其他属性`null`。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>"
  example:
  - "The following example demonstrates how to use the IsDefaultPrinter property. To run this example, paste the following code into a form and call `PopulateInstalledPrintersCombo` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_7_1.vb)]\n [!code-cs[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/csharp/p-system.drawing.printin_7_1.cs)]"
  syntax:
    content: public bool IsDefaultPrinter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>指定默认打印机; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  overload: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  id: IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值指示是否打印机支持打印指定的图像文件。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "要打印的图像。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果打印机支持打印指定的映像中;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  id: IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返回一个值，该值指示是否打印机支持打印指定的图像格式。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);
    parameters:
    - id: imageFormat
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref>打印。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果打印机支持打印指定的图像格式;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  id: IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值打印机是否绘图仪。"
  remarks: "绘图仪是而不是基于光栅的基于矢量的打印机。 大多数基于矢量的打印机使用单独的绘图笔生成输出。"
  syntax:
    content: public bool IsPlotter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果打印机是绘图仪;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果打印机光栅。"
  overload: System.Drawing.Printing.PrinterSettings.IsPlotter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  id: IsValid
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值指示是否<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>属性指定有效的打印机。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  remarks: "当您获取或设置一些属性时，有效打印机是必需，否则将引发异常。 若要避免异常，可在设置后使用 IsValid 属性<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>以安全地确定打印机是否有效。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>"
  example:
  - "The following code example specifies the target printer by setting the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, and if the IsValid is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_9_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_9_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_9_1.vb)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>属性指定有效的打印机; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  overload: System.Drawing.Printing.PrinterSettings.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  id: LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取纵向旋转以生成横向方向的角度，以度为单位。"
  remarks: "有效的旋转的值为 90 和 270 度。 如果不支持横向，唯一有效的旋转值为 0 度。 你设置<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>属性`true`打印横向格式中的页。</xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>"
  syntax:
    content: public int LandscapeAngle { get; }
    return:
      type: System.Int32
      description: "角度 （以度为单位，纵向旋转以生成横向方向）。"
  overload: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  id: MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取最大的打印机使用户能够一次打印的份数。"
  remarks: "设置<xref:System.Drawing.Printing.PrinterSettings.Copies%2A>属性的打印的份数</xref:System.Drawing.Printing.PrinterSettings.Copies%2A> 使用 MaximumCopies 属性以确定是否打印机支持一次打印多个副本，因为一些打印机不这样做。"
  syntax:
    content: public int MaximumCopies { get; }
    return:
      type: System.Int32
      description: "最大打印机使用户能够一次打印的份数。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  id: MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置最大<> *1> 或<> *1> 可选择在<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>属性由<xref:System.Windows.Forms.PrintDialog>当用户选择打印范围。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>属性必须设置为`true`，使用户能够指定打印范围。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 设置<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>或<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>值以编程方式，确保它们是在由<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>MaximumPage 属性或引发异常时显示<xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog>引发和</xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>定义的范围内</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>时"
  syntax:
    content: public int MaximumPage { get; set; }
    return:
      type: System.Int32
      description: "最大值<> *1> 或<> *1> 可选择在<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性是 MaximumPage 小于零的值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  id: MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置所需的最低<> *1> 或<> *1> 可选择在<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>属性由<xref:System.Windows.Forms.PrintDialog>当用户选择打印范围。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>属性必须设置为`true`，使用户能够指定打印范围。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 设置<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>或<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>值以编程方式，确保它们是在由 MinimumPage 和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>属性，否则引发异常时显示<xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog></xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>所定义的范围内</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>时"
  syntax:
    content: public int MinimumPage { get; set; }
    return:
      type: System.Int32
      description: "所需的最低<> *1> 或<> *1> 可选择在<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.MinimumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性是 MinimumPage 小于零的值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  id: PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取受此打印机纸张大小。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>包含<xref:System.Drawing.Printing.PaperSize>表示通过纸张大小的实例<xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName>属性，其中包含之一<xref:System.Drawing.Printing.PaperKind>值。</xref:System.Drawing.Printing.PaperKind> </xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PaperSize> </xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>       通常情况下，将通过的页面的纸张大小的设置<xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>到有效的属性<xref:System.Drawing.Printing.PaperSize>可通过 PaperSizes 集合。</xref:System.Drawing.Printing.PaperSize> </xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>       若要指定自定义的纸张大小，请参阅<xref:System.Drawing.Printing.PaperSize.%23ctor%2A>构造函数。</xref:System.Drawing.Printing.PaperSize.%23ctor%2A>"
  example:
  - "The following code example populates the `comboPaperSize` combo box with the printer's supported paper sizes. In addition, a custom paper size is created and added to the combo box. The <xref:System.Drawing.Printing.PaperSize.PaperName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/csharp/p-system.drawing.printin_17_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/cpp/p-system.drawing.printin_17_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_17_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>表示受此打印机纸张大小。</xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PaperSizes*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  id: PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取位于打印机源纸盒。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>包含<xref:System.Drawing.Printing.PaperSource>实例表示本文源通过盘子<xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName>属性，其中包含之一<xref:System.Drawing.Printing.PaperSourceKind>值。</xref:System.Drawing.Printing.PaperSourceKind> </xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PaperSource> </xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>       通常情况下，设置页的纸张来源通过<xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>到有效的属性<xref:System.Drawing.Printing.PaperSource>可通过 PaperSources 集合。</xref:System.Drawing.Printing.PaperSource> </xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>"
  example:
  - "The following code example populates the `comboPaperSource` combo box with the printer's supported paper sources. The <xref:System.Drawing.Printing.PaperSource.SourceName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/csharp/p-system.drawing.printin_13_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/cpp/p-system.drawing.printin_13_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/visualbasic/p-system.drawing.printin_13_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
      description: "A <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>，表示此打印机有源纸盒。</xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PaperSources*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  id: PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置要使用的打印机的名称。"
  remarks: "在设置打印机名称之后, 调用<xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>以确定是否打印机名称识别为有效的打印机系统上。</xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>       你还可以使用<xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>属性来获取系统上安装的打印机的列表。</xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>"
  example:
  - "The following code example specifies the target printer by setting the PrinterName property, and if the <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_11_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_11_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_11_1.vb)]"
  syntax:
    content: public string PrinterName { get; set; }
    return:
      type: System.String
      description: "要使用的打印机的名称。"
  overload: System.Drawing.Printing.PrinterSettings.PrinterName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  id: PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取受此打印机的所有解决方法。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>包含<xref:System.Drawing.Printing.PrinterResolution>实例表示通过受支持的打印机分辨率<xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName>属性，其中包含之一<xref:System.Drawing.Printing.PrinterResolutionKind>值。</xref:System.Drawing.Printing.PrinterResolutionKind> </xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterResolution> </xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>       通常情况下，设置页的纸张来源通过<xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>到有效的属性<xref:System.Drawing.Printing.PrinterResolution>可通过 PrinterResolutions 集合。</xref:System.Drawing.Printing.PrinterResolution> </xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>       如果<xref:System.Drawing.Printing.PrinterResolutionKind>是`Custom`，然后使用<xref:System.Drawing.Printing.PrinterResolution.X%2A>和<xref:System.Drawing.Printing.PrinterResolution.Y%2A>属性，以分别确定沿水平方向和垂直方向，自定义打印机解决方法。</xref:System.Drawing.Printing.PrinterResolution.Y%2A> </xref:System.Drawing.Printing.PrinterResolution.X%2A> </xref:System.Drawing.Printing.PrinterResolutionKind>"
  example:
  - "The following code example populates the `comboPrintResolution` combo box with the supported resolutions. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/csharp/p-system.drawing.printin_0_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/cpp/p-system.drawing.printin_0_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/visualbasic/p-system.drawing.printin_0_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>表示受此打印机的分辨率。</xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  id: PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置文件名称中，打印到文件时。"
  syntax:
    content: public string PrintFileName { get; set; }
    return:
      type: System.String
      description: "打印到文件时文件名称。"
  overload: System.Drawing.Printing.PrinterSettings.PrintFileName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  id: PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置用户已指定要打印的页码。"
  remarks: "使用 PrintRange 属性<xref:System.Windows.Forms.PrintDialog>。 在用户选择打印范围。</xref:System.Windows.Forms.PrintDialog> 默认 PrintRange 是`AllPages`。 若要使用户能够指定要打印的页范围<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>属性必须设置为`true`。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 若要使用户能够指定所选要打印的压，<xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>属性必须设置为`true`。</xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>       在打印过程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件中，视图应打印 PrintRange 确定的内容。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果 PrintRange <xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>应打印属性来确定页。</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> 如果 PrintRange <xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然后指定仅对所选的页面的输出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>和 PrintRange 也可以设置以编程方式，但<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>实现都是相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public System.Drawing.Printing.PrintRange PrintRange { get; set; }
    return:
      type: System.Drawing.Printing.PrintRange
      description: "之一<xref href=&quot;System.Drawing.Printing.PrintRange&quot;></xref>值。"
  overload: System.Drawing.Printing.PrinterSettings.PrintRange*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PrintRange 属性的值不是之一<xref href=&quot;System.Drawing.Printing.PrintRange&quot;></xref>值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  id: PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置一个值，该值指示是否将打印输出发送到文件而不是端口。"
  remarks: "当属性由<xref:System.Windows.Forms.PrintDialog>当用户选择**打印到文件**选项。</xref:System.Windows.Forms.PrintDialog> 在这种情况下，输出端口设置为&quot;文件&quot;会导致 Windows 打印子系统来提示用户输入文件名称时<xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>调用方法。</xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>      1> [!NOTE]&1;> 当属性仅供<xref:System.Windows.Forms.PrintDialog>并且不能以编程方式设置。</xref:System.Windows.Forms.PrintDialog> `Print to file`上才会显示选项<xref:System.Windows.Forms.PrintDialog>时<xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName>属性设置为`true`。</xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName> </xref:System.Windows.Forms.PrintDialog>"
  syntax:
    content: public bool PrintToFile { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果打印的输出发送到文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.PrintToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  id: SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "将给定句柄出来放入相关的信息复制<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  remarks: '`DEVMODE`结构是特定于设备和复制`DEVMODE`结构从一个<xref:System.Drawing.Printing.PrinterSettings>到<xref:System.Drawing.Printing.PrinterSettings>不支持另一台打印机。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings>'
  syntax:
    content: public void SetHdevmode (IntPtr hdevmode);
    parameters:
    - id: hdevmode
      type: System.IntPtr
      description: "Win32 句柄<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>结构。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "打印机句柄无效。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  id: SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "将给定句柄出来放入相关的信息复制<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  syntax:
    content: public void SetHdevnames (IntPtr hdevnames);
    parameters:
    - id: hdevnames
      type: System.IntPtr
      description: "Win32 句柄<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>结构。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "打印机句柄无效。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  id: SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取一个值，该值指示是否这台打印机支持彩色打印。"
  remarks: "若要使用彩色打印，并且如果打印机支持它，<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>到`true`。</xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_15_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_15_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_15_1.vb)]"
  syntax:
    content: public bool SupportsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此打印机支持彩色打印否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.SupportsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  id: ToPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置要打印的最后一页的数目。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和 ToPage 属性用于通过<xref:System.Windows.Forms.PrintDialog>当用户选择打印范围。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>属性必须设置为`true`，使用户能够指定打印范围。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 此外，<xref:System.Windows.Forms.PrintDialog>还要求<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>指定和 ToPage 值要在该范围内。</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> </xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> </xref:System.Windows.Forms.PrintDialog>       在打印过程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件中查看<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>来确定应该打印的内容。</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，并应打印 ToPage 属性来确定页。</xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然后指定仅对所选的页面的输出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，ToPage 和<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>也可以设置以编程方式，但<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>实现都是相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int ToPage { get; set; }
    return:
      type: System.Int32
      description: "若要打印的最后一页的数。"
  overload: System.Drawing.Printing.PrinterSettings.ToPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "属性是 ToPage 小于零的值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToString
  id: ToString
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "相关信息提供<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>以字符串形式。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串。"
  overload: System.Drawing.Printing.PrinterSettings.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrinterSettings.Clone
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
- uid: System.Drawing.Printing.PrinterSettings.Collate
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
- uid: System.Drawing.Printing.Duplex
  parent: System.Drawing.Printing
  isExternal: false
  name: Duplex
  nameWithType: Duplex
  fullName: System.Drawing.Printing.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.StringCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+StringCollection
  nameWithType: PrinterSettings+StringCollection
  fullName: System.Drawing.Printing.PrinterSettings+StringCollection
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSizeCollection
  nameWithType: PrinterSettings+PaperSizeCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSizeCollection
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSourceCollection
  nameWithType: PrinterSettings+PaperSourceCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSourceCollection
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PrinterResolutionCollection
  nameWithType: PrinterSettings+PrinterResolutionCollection
  fullName: System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrintRange
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintRange
  nameWithType: PrintRange
  fullName: System.Drawing.Printing.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
- uid: System.Drawing.Printing.PrinterSettings.#ctor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
- uid: System.Drawing.Printing.PrinterSettings.Clone*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone
  nameWithType: PrinterSettings.Clone
- uid: System.Drawing.Printing.PrinterSettings.Collate*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics
  nameWithType: PrinterSettings.CreateMeasurementGraphics
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode
  nameWithType: PrinterSettings.GetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames
  nameWithType: PrinterSettings.GetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported
  nameWithType: PrinterSettings.IsDirectPrintingSupported
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSources*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PrinterName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode
  nameWithType: PrinterSettings.SetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames
  nameWithType: PrinterSettings.SetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString
  nameWithType: PrinterSettings.ToString
