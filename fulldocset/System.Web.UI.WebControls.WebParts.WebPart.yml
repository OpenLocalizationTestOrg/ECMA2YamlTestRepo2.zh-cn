### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPart
  id: WebPart
  children:
  - System.Web.UI.WebControls.WebParts.WebPart.#ctor
  - System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  - System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  - System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  - System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  - System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  - System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  - System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  - System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  - System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.WebPart.Description
  - System.Web.UI.WebControls.WebParts.WebPart.Direction
  - System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  - System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  - System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  - System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  - System.Web.UI.WebControls.WebParts.WebPart.Height
  - System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  - System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  - System.Web.UI.WebControls.WebParts.WebPart.Hidden
  - System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  - System.Web.UI.WebControls.WebParts.WebPart.IsShared
  - System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  - System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  - System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.WebPart.Title
  - System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPart.Verbs
  - System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  - System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  - System.Web.UI.WebControls.WebParts.WebPart.Width
  - System.Web.UI.WebControls.WebParts.WebPart.Zone
  - System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  langs:
  - csharp
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
  type: Class
  summary: "用作自定义 ASP.NET Web 部件控件，将添加到基基类<xref href=&quot;System.Web.UI.WebControls.WebParts.Part&quot;></xref>类提供了一些附加用户界面 (UI) 属性，能够创建连接，以及个性化行为。"
  remarks: "当你创建具有 Web 部件功能的控件时，你具有两个基本选项。 可以创建自定义控件派生自的 web 部件类中，也可以创建或使用其他服务器控件。 现有的 ASP.NET 控件、 自定义服务器控件和用户控件可以对所有可指定完整的 Web 部件功能通过声明内为这些 （或将它们添加到以编程方式）<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域控件，结果是它们将与包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时间和处理作为 true web 部件控件。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 有关详细信息，请参阅的文档<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>类。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 有关开发速度和最大限度重用，使用现有的服务器控件可以是代码的一个不错的选择。 对于对的行为和 Web 部件功能的控件的最大进行编程控制，创建从 web 部件类继承的自定义控件通常是最佳选项。       抽象的 web 部件类继承自基类<xref:System.Web.UI.WebControls.WebParts.Part>控件并提供的所有 web 部件控件的基本元素。</xref:System.Web.UI.WebControls.WebParts.Part> 该类包括一组通用的影响的用户界面的外观的属性。 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A>每个属性指定是否允许 Web 应用程序的用户与部分的控件，通过给定的属性名称所指示的方式进行交互。</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A>属性确定大小、 可见性、 外观和支持内容 （如标题和说明） 的 web 部件控件。</xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>       Web 部件控件与 Web 部件控件集如由属性在其上下文中的关系<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>，它保存对控件的引用的关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>对象，和<xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>，后者引用<xref:System.Web.UI.WebControls.WebParts.WebZone>包含该控件。</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 可能只有一个<xref:System.Web.UI.WebControls.WebParts.WebPartManager>每页上，以及每个实例的 web 部件控件可以驻留在只有一个控件<xref:System.Web.UI.WebControls.WebParts.WebZone>一次。</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      1> [!NOTE]&1;> web 部件控件可以放置在网页上，区域之外，但在这种情况下它的函数作为正常的服务器控件和丢失几乎所有 Web 部件功能。       其他几个重要属性会影响 web 部件控件的唯一的功能。 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>属性允许开发人员设置可以用作筛选器在运行时以确定是否将控件添加到页面的任意字符串。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 与角色管理，如功能结合使用<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>属性提供有用的机制，用于创建基于定义的用户角色的视图。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>属性指示是否在导出期间，在控件上的所有可用的属性数据导出，或仅非敏感数据。</xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 这样，开发人员来区分是敏感的数据和不是，出于安全目的的数据。 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A>属性返回到 web 部件控件的实例的引用，以便<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制当页面处于编辑模式时可以编辑它。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 最后，有几个属性指示相对于页的其余部分的控件的状态。 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A>属性指示控件是否已关闭 (并因此添加到<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>对象)，或如果它已打开并且可在页面。</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A>属性指示控件是否为共享的控件 （而不是特定于用户的控件），这意味着它对 Web 页的所有用户可见。</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A>属性指示控件当前是否包含在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-派生区域 (如<xref:System.Web.UI.WebControls.WebParts.WebPartZone>)。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> 值为`false`指示该控件处于区域内，因此不具有完整的 Web 部件功能。 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A>属性指示控件是否是静态或动态。</xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> 而动态控制以编程方式添加的网页，标记中声明静态控件。       Web 部件类还提供了确定发生的情况不同的时间点在控件的生命周期中的几种方法。 例如，<xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A>方法都可在重写派生类提供对控件的内容的每个方法的名称对应的事件执行过程的呈现进行编程控制。</xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>       从 web 部件派生的类可以添加<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象添加到<xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A>集合。</xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 谓词呈现在谓词菜单中，在 web 部件控件的标题栏中显示。 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象提供常见的用户操作，如隐藏或最小化控件或显示帮助的简单 UI 元素。</xref:System.Web.UI.WebControls.WebParts.WebPartVerb>       <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>方法创建的任何自定义集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>与 web 部件控件相关联的控件。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 开发人员可以重写此方法，以便它将创建专用于编辑其 web 部件控件的自定义控件。 当用户单击上 web 部件控件的编辑谓词时调用的方法。"
  example:
  - "The following code example demonstrates how to create a WebPart control and reference it in a Web page.  \n  \n The first part of the example contains the code for a custom WebPart control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom WebPart control that gives you access to the features of the Web Parts control set. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Notice that many of the various WebPart properties can be assigned declaratively to the custom control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Panel
  - System.Web.UI.WebControls.WebParts.Part
  implements:
  - System.Web.UI.WebControls.WebParts.IWebActionable
  - System.Web.UI.WebControls.WebParts.IWebEditable
  - System.Web.UI.WebControls.WebParts.IWebPart
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.BackImageUrl
  - System.Web.UI.WebControls.Panel.CreateControlStyle
  - System.Web.UI.WebControls.Panel.DefaultButton
  - System.Web.UI.WebControls.Panel.GroupingText
  - System.Web.UI.WebControls.Panel.HorizontalAlign
  - System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.ScrollBars
  - System.Web.UI.WebControls.Panel.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Panel.Wrap
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebParts.Part.Controls
  - System.Web.UI.WebControls.WebParts.Part.DataBind
  - System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化继承的类实例使用的类。 此构造函数只能由继承的类调用。"
  remarks: "Web 部件构造函数初始化默认值为面向用户界面的多个属性，包括各种`Allow`确定控件的功能的属性。 这些属性然后并入继承的类实例。"
  example:
  - "The following code example demonstrates how a control that derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class inherits the default property values set in the base WebPart constructor, but then changes the value of one property in the constructor of the derived control.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control that gives you access to the features of the Web Parts control set. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, if you click the verbs menu in the title bar of the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the close verb is now disabled, which prevents users from closing the control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_2.aspx)]"
  syntax:
    content: protected WebPart ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  id: AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示最终用户是否可以关闭<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>在网页上的控件。"
  remarks: "用户关闭后<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在网页上，控件不再是可见还是的页上提供。</xref:System.Web.UI.WebControls.WebParts.WebPart> 已关闭的控件添加到页目录中，将存储对控件的引用的 Web 部件实体。 如果开发人员添加了<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控件添加到内的页<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件，用户就能够将页面切换到目录的显示模式，在页目录中，选择已关闭的控件并将其添加回页面。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      1> [!NOTE]&1;> 关闭<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可以添加回页面通过编程方式，或从页目录中选择已关闭的控件，如果页已在目录中的用户显示模式。</xref:System.Web.UI.WebControls.WebParts.WebPart>       关闭的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件是不同于删除它。</xref:System.Web.UI.WebControls.WebParts.WebPart> 已关闭的控件可以添加回页面中，而永久删除已删除的控件。 删除控件的详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> 关闭控件也是不同于隐藏的。 但仍会出现在页上，仍参与页面生命周期事件，并从用户的视图，只会隐藏已关闭的控件甚至不呈现在页上，隐藏的控件。       静态和动态<xref:System.Web.UI.WebControls.WebParts.WebPart>可以关闭 （静态控件声明在页面的标记中，在以编程方式添加动态控件） 的控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如果开发人员将 AllowClose 属性设置为`false`、 关闭谓词未出现在该控件，并且用户不是能够关闭控件。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowClose property for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that it cannot be closed.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. This means that the close verb on the verbs menu of the control will be disabled for users. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the `<aspSample:TextDisplayWebPart>` element that references the control, you could also change the value of the property set by the control's constructor. To allow the control to be closed, simply add an `AllowClose=\"true\"` attribute to the element in the declarative markup.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_2.aspx)]"
  syntax:
    content: public virtual bool AllowClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件可以在网页上; 关闭否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  id: AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制允许与它建立连接的其他控件。"
  remarks: "在页标记中，或以编程方式，可以以声明方式设置的属性值。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual bool AllowConnect { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否可以与此控件形成连接。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  id: AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示最终用户是否可以修改<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制通过用户界面 (UI) 提供的一个或多个<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>控件。"
  remarks: "若要允许最终用户能够编辑<xref:System.Web.UI.WebControls.WebParts.WebPart>AllowEdit 属性必须设置为控件， `true` （默认值）、 和页的显示模式必须处于编辑模式。</xref:System.Web.UI.WebControls.WebParts.WebPart> 显示模式中的字段由表示<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 在这种情况下的模式是<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 模式和如何更改它们，将显示有关页面的详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>类概述。</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       当 AllowEdit 属性设置为`false`编辑选项以声明方式或以编程方式，将受到限制。 可能的编辑操作仅对该页面的布局更改，则使用<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>控件或通过自定义启用其他基本操作<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>       有关示例，使用<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件从 Web 部件控件集，并演示如何启用编辑自定义 Web 部件控件，请参阅[演练︰ 创建 Web 部件页](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.EditorPart>      1> [!IMPORTANT]&1;> AllowEdit 属性上控件的行为的影响由当前的个性化设置范围的网页上，也会受到影响和该页面上的单个 Web 部件控件。 有关详细信息，请参阅[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](../Topic/Web%20Parts%20Personalization%20Overview.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowEdit property for a Web Parts control, so that the control cannot be edited. This example assumes the use of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowEdit=\"false\"` attribute. Although `true` is the default, the attribute has been set to `false` for the purposes of this example. Load the page in a browser and use the **Display Modes** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and note that the edit verb is missing, because you disabled editing on the control.  \n  \n [!code-vb[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_2.aspx)]\n [!code-cs[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_2.aspx)]"
  syntax:
    content: public virtual bool AllowEdit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件均可以是已修改; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  id: AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示是否允许最终用户隐藏<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "AllowHide 属性确定用户是否可以修改<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 默认情况下，当属性值为`true`，正在编辑的控件时，用户可以更改的值。 默认情况下，未隐藏控件及其<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>属性值是`false`。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 当<xref:System.Web.UI.WebControls.WebParts.WebPart>所编辑的控件，如果用户选择一个复选框以隐藏控件 (哪些集<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>属性`true`)，该控件将不再可见时将页返回到浏览模式。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       隐藏的控件有别于控件均已关闭，因为<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>属性具有不同的含义在 Web 部件控件集内。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 已关闭的控件甚至不呈现在页中，并不参与页面生命周期事件。 相反，而隐藏<xref:System.Web.UI.WebControls.WebParts.WebPart>控件没有对用户可见，它们仍呈现在网页上，是否仍包含在区域中，并仍保持与其他连接<xref:System.Web.UI.WebControls.WebParts.WebPart>控件作为 Web 部件应用程序的一部分。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowHide property for a custom Web Parts control, so that the custom control cannot be hidden by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowHide#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowHide#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowHide=\"false\"` attribute, which prevents a user who is editing the control from being able to hide it. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control and click the edit verb. As the edit user interface (UI) is displayed, you can see that the UI to edit the <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> property is now disabled, which occurred because you set the AllowHide property value to `false`.  \n  \n [!code-cs[WebParts_WebPart_AllowHide#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowHide#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_2.aspx)]"
  syntax:
    content: public virtual bool AllowHide { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件均可以是隐藏的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  id: AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示最终用户可以最大程度减少<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "AllowMinimize 属性中，如果设置为`false`，防止最终用户能够以最小化控件，以及用户界面 (UI) 的最小化控件未显示在控件的标题栏中。 在 Web 部件术语中，当 AllowMinimize 属性设置为`false`，最小化谓词不会不会出现在控件的谓词菜单。       当用户最小化控件时，它减少了下显示仅的控件的标题栏和标题的一部分的最小区域控件的大小。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowMinimize property for a custom Web Parts control, so that the control cannot be minimized by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowMinimize=\"false\"` attribute, which hides the minimize verb in the <xref:System.Web.UI.WebControls.WebParts.WebPart> control's verbs menu, and prevents a user from being able to minimize the control. Load the page in a browser, and click the verbs menu on the <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The minimize verb, which would normally be present on the verbs menu, is hidden because you disabled it in the declarative markup for the control.  \n  \n [!code-cs[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_409_1.aspx)]\n [!code-vb[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_409_1.aspx)]"
  syntax:
    content: public virtual bool AllowMinimize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件均可以是最小化; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  id: AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示用户是否可以将移动<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制之间<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>区域。"
  remarks: "当 AllowZoneChange 属性是`true`，和 Web 页处于允许布局更改 （如编辑或设计模式） 的显示模式下时，用户可以通过将控件移到另一个更改页面布局<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>页上的区域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 如果该属性设置为`false`，则控件不能区域，之间移动，但仍可以在其当前的区域内移动。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowZoneChange property for a custom Web Parts control, so that an end user cannot move the control to a different zone. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_1.ascx)]\n [!code-cs[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_1.ascx)]  \n  \n In the declarative markup for the Web Page, on the second `<aspSample:TextDisplayWebPart>` element, note the `AllowZoneChange=\"false\"` attribute. At run time, an end user could drag the first control into **WebPartZone2**, but could not do the same with the second control. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to design mode. Try to drag each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls into another zone, and note the different behavior based on the values of their AllowZoneChange properties.  \n  \n [!code-cs[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_2.aspx)]"
  syntax:
    content: public virtual bool AllowZoneChange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件可以移动之间区域; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  id: AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个任意字符串，以确定是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件是否有权添加到页。"
  remarks: "Web 部件控件集未实现 AuthorizationFilter 属性任何默认行为。 但是，以便你可以将任意字符串值分配给自定义提供该属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件; 由检查此属性可以<xref:System.Web.UI.WebControls.WebParts.WebPartManager>期间控制其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>事件，以确定是否可以将控件添加到页面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       在某些情况下，AuthorizationFilter 属性可能能使用 ASP.NET 角色管理器功能，以便如果用户位于某一特定角色，并且如果 AuthorizationFilter 属性的字符串值满足某些设置由开发人员的条件，控件可被添加。 此方法允许开发人员创建的基于角色和它们指定其他授权条件的组合的页的自定义视图。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the AuthorizationFilter property. It shows how to set a custom method handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page code, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. This method checks whether the controls on the page have their AuthorizationFilter property value set to `admin`, and if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the AuthorizationFilter property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_588_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_588_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example that does not use roles).  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: public virtual string AuthorizationFilter { get; set; }
    return:
      type: System.String
      description: "一个授权控件添加到 Web 页的字符串。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置表示控件的目录中的 Web 部件控件的图像的 URL。"
  remarks: "此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the CatalogIconImageUrl property for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that an image appears with the control in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_1.ascx)]\n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_1.ascx)]  \n  \n In the declarative markup of the Web page, note the `<asp:CatalogZone>` element. Nested within it are several elements, including an `<aspSample:TextDisplayWebPart>` element. This set of elements enables the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to appear in a catalog. In the markup for the `<aspSample:TextDisplayWebPart>` element, notice that the `CatalogIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to catalog mode. Then use the catalog user interface (UI) to add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page.  \n  \n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_2.aspx)]\n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_2.aspx)]"
  syntax:
    content: public virtual string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "表示用于表示目录中的控件的图像的 URL 的字符串。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在内部验证系统已确定的 URL 可能包含脚本攻击。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  id: ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个部分的控件是否处于最小化或正常状态。"
  remarks: "一个部分的控件的 ChromeState 属性值可以是正常或最小化。 <xref:System.Web.UI.WebControls.WebParts.WebPart>类重写基属性，以便最终用户可以个性化它。</xref:System.Web.UI.WebControls.WebParts.WebPart>       有关使用此属性的代码示例，请参阅文章<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>属性。</xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  id: ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置的框架 Web 部件控件的边框类型。"
  remarks: "一个部分的控件的<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>属性确定哪种类型的边框环绕控件。</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 选项包括显示标题、 只、 仅边框、 标题和边框，两者，或只需使用的值的默认选项<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>       <xref:System.Web.UI.WebControls.WebParts.WebPart>类重写基属性，以便最终用户可以个性化它。</xref:System.Web.UI.WebControls.WebParts.WebPart>       有关使用此属性的代码示例，请参阅文章<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性。</xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值不是之一<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  id: ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取连接过程中发生错误时，向用户显示的错误消息。"
  remarks: "Web 部件控件集内部提供将 ConnectErrorMessage 属性的内容。"
  syntax:
    content: public string ConnectErrorMessage { get; }
    return:
      type: System.String
      description: "包含错误消息的字符串。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回的自定义集合<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>可以用于编辑的控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制当它处于编辑模式。"
  remarks: "开发人员可以使用此方法创建的自定义实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>他们想要将与相关联的控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> 当用户单击编辑谓词时调用该方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>      1> [!NOTE]&1;> 的任何新实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>在此方法中创建的控件必须具有之前将它添加到分配给其 ID 属性的值<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>集合。</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       有关使用 CreateEditorParts 方法的代码示例，请参阅<xref:System.Web.UI.WebControls.WebParts.EditorPart>类概述。</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> ，其中包含自定义<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>与关联的控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个短语，总结了一部分控件的作用，在工具提示和部件控件的目录中使用。"
  remarks: "Description 属性通常是提供列表的一部分控件，以及部件控件的标题栏中的工具提示的目录中使用的字符串。 当鼠标指针放置在一个部分的控件的标题栏中的标题文本，Description 属性的内容将显示在工具提示。 工具提示文本创建的值从<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>属性后, 接一个连字符后, 跟说明属性值。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>       有关使用此属性的代码示例，请参阅文章<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>属性。</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public override string Description { get; set; }
    return:
      type: System.String
      description: "一个字符串，简要概述部件控件的功能。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  id: Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置控件内流内容的水平方向。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPart>类重写基属性值，以便最终用户可以对属性进行个性化设置。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.ContentDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ContentDirection&quot;> </xref> ，该值指示水平方向内容将流动。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  id: DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个字符串，包含实际的标题栏中显示的完整的标题文本<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件实例。"
  remarks: "DisplayTitle 属性返回的当前值<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>属性或如果控件具有没有标题，计算得出的值。</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 计算的值由无标题控件的可本地化的资源字符串和一个数字 （如果有该区域内的多个控件） 根据该区域中的控件索引。       为自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控制在何处<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>属性已被重写以返回一个字符串值可用作副标题、 DisplayTitle 属性串联在一起副标题以生成一个完整的标题。</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       DisplayTitle 属性值还用作工具提示时用户将鼠标指针定位控件的标题栏上显示的一部分。 完整的工具提示包含 DisplayTitle 值后, 跟连字符后, 跟控件的值<xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>"
  syntax:
    content: public string DisplayTitle { get; }
    return:
      type: System.String
      description: "一个字符串，表示完整的显示的控件的标题。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  id: ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置是否所有，部分，或任何<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>可以导出控件的属性。"
  remarks: "默认情况下，<xref:System.Web.UI.WebControls.WebParts.WebPart>无法导出控件和其 ExportMode 属性设置为<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart> 若要启用导出控件的所有属性，设置到<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> ExportMode 值 若要在防止的导出的属性包含敏感数据的同时导出仅某些属性，你设置到<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>的属性值       若要导出的属性值说明<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，属性也必须标记与`Personalizable`属性的源代码的元数据中的属性。</xref:System.Web.UI.WebControls.WebParts.WebPart> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      1> [!NOTE]&1;> 若要启用的 Web 应用程序在你的应用程序的 Web.config 文件中包含 Web 部件控件使用导出功能，你必须添加到一个特性`<webParts>`中的元素`<system.web>`部分中，如下所示的以下标记。   >> `<webParts  enableExport=&quot;true&quot;>` >>`</webParts>`主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the ExportMode property. Note that for the export code example to work, you must also update your Web.config file by adding the attribute `enableExport=\"true\"` to the `<webParts>` element, as indicated in the Remarks section.  \n  \n The first part of this example contains the code for a control named `TextDisplayWebPart`. This control is the same as the custom control that is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it adds a `Personalizable` attribute to the `TextDisplayWebPart.ContentText` property so the property can be exported. Note that the attribute declaration includes a value of `true` for the `isSensitive` parameter, meaning that the property is marked as sensitive data for export purposes. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_ExportMode#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_1.vb)]\n [!code-cs[WebParts_WebPart_ExportMode#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the declarative markup, the ExportMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, meaning that even properties with sensitive values will be exported.  \n  \n [!code-cs[WebParts_WebPart_ExportMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_2.aspx)]\n [!code-vb[WebParts_WebPart_ExportMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_2.aspx)]  \n  \n Load the Web page in a browser, and on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, click the export verb and follow the instructions to export a description file containing the control's state and property data."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartExportMode
      description: "之一<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;></xref>值。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已加载的控件和控件的个性化设置范围设置为<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationScope&quot;></xref>作用域。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  id: HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件具有与之关联的任何共享的个性化数据。"
  remarks: "此属性是指设置控件在共享范围内，这意味着个性化数据看到的所有用户的个性化数据。"
  syntax:
    content: public bool HasSharedData { get; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件是否已共享个性化数据。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  id: HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件具有与之关联的任何用户个性化数据。"
  remarks: "此属性引用自定义个性化设置用户的特定于数据-换而言之，用户在控件上仅对该用户可见的特定设置。"
  syntax:
    content: public bool HasUserData { get; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件是否有任何用户个性化数据。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  id: Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置区域的高度。"
  remarks: "Internet Explorer 呈现模式可能会影响的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和小标题的高度，该字符串包含它。 该区域</xref:System.Web.UI.WebControls.WebParts.WebPart>的高度 在兼容模式 （与以前的浏览器版本的向后兼容） 中或在标准模式下，Internet Explorer 呈现网页 (由存在`DOCTYPE`在页中的声明)。 有关这些模式的信息，请参阅 DHTML [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175)属性。       当 Internet Explorer 呈现标准模式中的页时，在某些情况下它可能不调整单元格大小在表中，即使在单元格的 HTML 标记`<td height=&quot;100%&quot;>`。 因此，<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和其包含的区域呈现，因此，控件不会拉伸到该区域的最大高度。</xref:System.Web.UI.WebControls.WebParts.WebPart>       在标准模式下 Internet 资源管理器时，不呈现控件能够扩展到其完整的高度，在以下情况:-当区域的<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>属性设置为<xref:System.Web.UI.WebControls.Orientation>且在区域上显式设置的高度。</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 要使控件能够填充区域的最大高度，不要指定水平方向区域的高度。      -当区域的<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>属性设置为<xref:System.Web.UI.WebControls.Orientation>和未显式设置区域的或的所含控件的高度。</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 若要使控件能够填充区域的最大高度，垂直方向的区域中设置的区域或控件的高度。"
  example:
  - "The following code example demonstrates the rendering issue that affects the height of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  To demonstrate this issue, you must run the page in Internet Explorer.  \n  \n Note that the zone's orientation is set to horizontal, and that the height of the zone and the controls within it is not set explicitly.  The result is that in the <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, the shorter <xref:System.Web.UI.WebControls.WebParts.WebPart> control does not stretch to the height of the zone upon rendering.  However, if you remove the `DOCTYPE` declaration from the page and run the page again, the issue does not occur, because now the browser will not render the page in standards mode.  \n  \n [!code-vb[WebParts_WebPart_Height#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_579_1.aspx)]\n [!code-cs[WebParts_WebPart_Height#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_579_1.aspx)]  \n  \n To see how the workaround (described in the Remarks section) works, try adding a `height` attribute to the `<asp:webpartzone>` element, while keeping the `DOCTYPE` declaration in the page.  You can use the following code to add the attribute to the tag:  \n  \n `Height=\"200px\"`  \n  \n Run the page, and now both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls stretch to fill the explicitly declared height of the zone.  \n  \n You can also experiment with this code example to observe the height-related rendering issue in the other scenario, which occurs when the zone's <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> is set to <xref:System.Web.UI.WebControls.Orientation>.  Remove the existing `LayoutOrientation` attribute and its value from the `<asp:webpartzone>` element, which will cause the zone's orientation to revert to the default vertical orientation.  Set the height attribute on the `<asp:webpartzone>` element to 200 pixels, as you did above, and run the page.  The zone's height looks too large, and the controls are not sized proportionately to the zone's height.  Now remove the height attribute and run the page again.  The controls now render relative to the height of the zone."
  syntax:
    content: public override System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>对象，指示的高度<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZone&quot;> </xref>。 默认类型<xref href=&quot;System.Web.UI.WebControls.Unit&quot;></xref>将像素，如所示<xref:System.Web.UI.WebControls.Unit.Type*>属性。</xref:System.Web.UI.WebControls.Unit.Type*>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  id: HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置用来显示帮助内容的用户界面 (UI) 的类型<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "HelpMode 属性用于确定如何浏览器将显示为控件的帮助内容。 下表列出了各种帮助模式在浏览器上的结果的帮助内容时<xref:System.Web.UI.WebControls.WebParts.WebPart>显示控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>      |帮助模式 |浏览器的行为 |  |---------------|----------------------|  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|打开一个单独的浏览器窗口中，如果浏览器具有此功能。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 用户必须在返回到 Web 部件页之前关闭该窗口。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|打开一个单独的浏览器窗口中，如果浏览器具有此功能。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 用户不必在返回到 Web 页之前关闭窗口。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|替换在浏览器窗口中的 Web 部件页面。 |      此属性不能通过主题或样式表主题设置。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpMode property to display Help for a control in the same browser window. The first part of this example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the HelpMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1121_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1121_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartHelpMode
      description: "之一<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  id: HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置的帮助文件的 URL <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控件。"
  remarks: "若要启用的谓词菜单中的帮助动词与谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，你必须为 HelpUrl 属性提供一个值。</xref:System.Web.UI.WebControls.WebParts.WebPart> 在浏览器中显示的帮助内容所用的方式确定的值由<xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpUrl property. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the HelpUrl property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1034_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1034_1.aspx)]"
  syntax:
    content: public virtual string HelpUrl { get; set; }
    return:
      type: System.String
      description: "表示到帮助文件的 URL 的字符串。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在内部验证系统已确定的 URL 可能包含脚本攻击。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  id: Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>在网页上显示控件。"
  remarks: "A<xref:System.Web.UI.WebControls.WebParts.WebPart>隐藏的保持在区域中，控件实际呈现在页上，并参与页生命周期阶段如`PreRender`阶段，即使它不是在浏览器中可见。</xref:System.Web.UI.WebControls.WebParts.WebPart> 这是不同于<xref:System.Web.UI.WebControls.WebParts.WebPart>均已关闭，因为已关闭的控件不会甚至呈现在页中，而隐藏的控件是呈现，Web 部件应用程序中处于活动状态，但对用户不可见的控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> Web 部件控件集隐藏<xref:System.Web.UI.WebControls.WebParts.WebPart>通过将其级联样式表 (CSS) 样式设置为的值的控件`display:none`。</xref:System.Web.UI.WebControls.WebParts.WebPart>       即使控件的 Hidden 属性设置为`true`，如果在页上的当前显示模式允许隐藏的控件显示仍显示该控件。 例如，编辑模式允许隐藏的控件，若要显示，以便用户可以对其进行编辑。 时隐藏的控件可见。 在某些显示模式下，该控件的标题将显示，该值指示控件处于隐藏状态的字符串。       当上的 Hidden 属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件设置为`false`默认值时，页面上显示控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 请注意，如果<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>属性设置为`false`，最终用户不允许编辑的 Hidden 属性值。</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates the use of the Hidden property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that in the Web page, in the declarative markup for the `<aspSample:TextDisplayWebPart>` element, the `Hidden` attribute value is set to `true`. The `TextDisplayWebPart` control will not appear if the page is loaded in a browser. However, the control is still present on the page and in its zone, and it still could participate in connections with other <xref:System.Web.UI.WebControls.WebParts.WebPart> controls if you created those connections.  \n  \n [!code-cs[WebParts_WebPart_Hidden#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_207_1.aspx)]\n [!code-vb[WebParts_WebPart_Hidden#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_207_1.aspx)]"
  syntax:
    content: public virtual bool Hidden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件是在网页上显示; 否则为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  id: ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置错误消息，如果发生错误，则使用时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件导入。"
  remarks: "ImportErrorMessage 属性可以设置当用户尝试将一个部分的控件的说明文件导入到 Web 部件控件的目录时出错时显示的自定义错误消息。 你可以设置此属性以声明方式在<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，请添加`ImportErrorMessage`属性的控件并将错误消息字符串分配给它的开始标记内</xref:System.Web.UI.WebControls.WebParts.WebPart> 你还可以以编程方式设置的属性值。       有关完整的代码示例演示如何同时导出和导入。Web 部件描述文件的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，其中包括使用 ImportErrorMessage 属性，请参阅<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual string ImportErrorMessage { get; set; }
    return:
      type: System.String
      description: "包含错误消息的字符串。 默认值是由 Web 部件控件集提供的标准错误消息。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  id: IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件在 Web 部件页当前已关闭。"
  remarks: "A<xref:System.Web.UI.WebControls.WebParts.WebPart>已关闭的控件不呈现在页上，并不参与页面事件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 但是，它由 Web 部件应用程序中，维护页目录中，并且如果可以将添加回页由用户提供相应的用户界面 (UI)。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>。</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件是否已关闭。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  id: IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>共享的控件，这意味着它对 Web 部件页的所有用户可见。"
  remarks: "共享的 Web 部件控件是对 Web 页的所有用户可见。 与相对的共享控制是每个用户控件，这是特定于用户的并且仅对该控件添加到页面的用户可见。       如果用户在共享个性化设置作用域中查看页面时，会添加一个动态控件，将共享控件。 如果该控件将添加用户时用户个性化设置作用域中，该控件的 IsShared 属性值将`false`。       有关详细信息共享和每个用户控件，请参阅[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the IsShared property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n When you load the Web page in a browser and click the **Check Sharing** button, the code checks the IsShared property on the `TextDisplayWebPart` control, and the value of the property is `true`, because the control is referenced as a static control in the declarative markup of the page.  \n  \n [!code-cs[WebParts_WebPart_IsShared#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_940_1.aspx)]\n [!code-vb[WebParts_WebPart_IsShared#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_940_1.aspx)]"
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件具有共享用户可见性在网页上; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  id: IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件是独立，这意味着它不包含在<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>区域。"
  syntax:
    content: public bool IsStandalone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件不包含在<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>区域; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  id: IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件是一个静态控件，这意味着控件中的 Web 部件页标记声明未以编程方式添加到页面。"
  remarks: "静态<xref:System.Web.UI.WebControls.WebParts.WebPart>控件是指在 Web 部件页的标记中声明。</xref:System.Web.UI.WebControls.WebParts.WebPart> 这点与动态<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，这以编程方式添加或由用户选择的控件从控件的目录在运行时。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件是否为静态字段。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  id: OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "允许派生的类来提供自定义处理时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>在 Web 部件页关闭控件。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基类包含没有实现。</xref:System.Web.UI.WebControls.WebParts.WebPart> 派生<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可以提供自定义处理，在关闭该控件时是否需要重写方法。</xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件自动调用 OnClosing 方法如果你提供一个实现中派生的类。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual void OnClosing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  id: OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "允许派生的类来提供自定义处理时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>开始或结束进程连接到其他控件的控件。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基类包含没有实现。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnConnectModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  id: OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "允许派生的类来提供自定义处理时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>从 Web 部件页中永久移除控件。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基类包含没有实现。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnDeleting (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  id: OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "允许派生的类来提供自定义处理时<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制进入或离开编辑模式。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基类包含没有实现。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnEditModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "设置一个标志，指示个性化数据已更改为当前<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件实例。"
  remarks: "SetPersonalizationDirty 方法会设置一个标志，指示控件状态数据更改 （个性化） 上<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并且<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件因此需要个性化设置将数据保存到长期存储。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       通常<xref:System.Web.UI.WebControls.WebParts.WebPartManager>个性化设置的更改保存在<xref:System.Web.UI.WebControls.WebParts.WebPart>并且无需开发人员能够调用 SetPersonalizationDirty 方法的控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 但有两种情况下在其中开发人员需要调用此方法。 第一种情况是期间 HTTP 更改控件状态数据时`GET`到页的请求。 默认情况下，更改为控件状态数据期间`GET`请求不会保留 （出于安全考虑）。 但 SetPersonalizationDirty 方法使您能够保持对合法个性化更改<xref:System.Web.UI.WebControls.WebParts.WebPart>在这种情况下控制。</xref:System.Web.UI.WebControls.WebParts.WebPart>       调用 SetPersonalizationDirty 方法的第二个案例时发生 HTTP`POST`到页的请求。 如果<xref:System.Web.UI.WebControls.WebParts.WebPart>控件具有复杂可个性化属性 (如一个包含属性<xref:System.Collections.ArrayList>对象)，并在这些属性中的控件状态数据个性化期间`POST`请求，开发人员必须调用 SetPersonalizationDirty 方法来确保持久保存所做的更改。</xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  id: SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "设置一个标志，指示个性化数据已更改为驻留在指定的服务器控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>区域。"
  remarks: "SetPersonalizationDirty 方法具有相同的目的<xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName>方法，则需要设置一个标志，指示到控件状态数据已更改 （个性化） 上的服务器控件在 HTTP 期间`GET`请求。</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName> 这些方法之间的区别是 SetPersonalizationDirty 方法用于不是继承自的服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPart>类，但放在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>参与 Web 部件应用程序的区域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public static void SetPersonalizationDirty (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>个性化数据已更改。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "中的对象<code> control </code>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "控件派生自<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>。 派生自的控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>应使用受保护<xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>方法相反。</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "与控件关联的页没有<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取一个字符串，串联在一起<xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>属性值以便构成的完整标题<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>"
  remarks: "使用副标题属性 （可选） 在你自定义返回的标准副标题字符串<xref:System.Web.UI.WebControls.WebParts.WebPart>将附加到控件的标题的控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如果你提供一个值在自定义的副标题属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，Web 部件控件集自动将其附加到的值<xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>要创建一个完整的标题控件属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to provide a subtitle for instances of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n The first part of this example contains the code for a custom control named `TextDisplayWebPart`. This control is the same as the custom control which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it also overrides the Subtitle property to provide a standard subtitle containing a fictitious company name for instances of the custom control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Subtitle#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_1.cs)]\n [!code-vb[WebParts_WebPart_Subtitle#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_1.vb)]  \n  \n The second part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, the control's title bar text includes the title assigned to the control in the declarative markup, a hyphen separator, and the value of the custom subtitle from the `TextDisplayWebPart` control.  \n  \n [!code-vb[WebParts_WebPart_Subtitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_2.aspx)]\n [!code-cs[WebParts_WebPart_Subtitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_2.aspx)]"
  syntax:
    content: public virtual string Subtitle { get; }
    return:
      type: System.String
      description: "一个字符串，充当控件副标题。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置一个部分的控件的标题。"
  remarks: "如果开发人员将值赋给 Title 属性，则此值确定所有 （或至少部分） 中控件的标题栏的文本。 标题文本也显示为工具提示文本的一部分时将鼠标指针放的标题栏<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或出现在其他服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart>       控件的标题栏中显示的完整文本也受<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 如果该属性具有分配给它的值，值被连接到的标题。 如果没有值分配给 Title 属性，将显示计算出的标题。 开发人员可以在任何时刻，检索中显示的实际、 总计文本<xref:System.Web.UI.WebControls.WebParts.WebPart>通过获取的值的控件的标题栏<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>属性。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       标题文本的样式由<xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>属性包含部件控件的区域。</xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>       有关代码示例演示如何使用基属性，请参阅<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>属性。</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>"
  syntax:
    content: public override string Title { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示部件控件的标题。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置用于表示控件的标题栏中的 Web 部件控件的图像 URL。"
  remarks: "此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleIconImageUrl property for a custom Web Parts control, so that the control appears with an image in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup of the Web page, note the `<aspSample:TextDisplayWebPart>` element. Its `TitleIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser, and if you provided a legitimate URL to an image, the image appears in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_186_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_186_1.aspx)]"
  syntax:
    content: public virtual string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "表示用于表示其标题栏中的控件的图像的 URL 的字符串。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在内部验证系统已确定的 URL 可能包含脚本攻击。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置有关的补充信息的 URL <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控件。"
  remarks: "当为 TitleUrl 属性指定 URL 时，该控件的标题将成为的控件有关的补充信息的链接。 其中可拖动控件，如设计、 编辑或目录模式的显示模式页面时，不会呈现 URL。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       此属性的个性化作用域设置为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>和仅授权用户可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 部件个性化概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleUrl property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that the `<aspSample:TextDisplayWebPart>` element contains the `TitleUrl` attribute with a fictitious URL. If you load the page in a browser, the title of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control is now a link to the resource pointed to by the TitleUrl property.  \n  \n [!code-cs[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_574_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_574_1.aspx)]"
  syntax:
    content: public virtual string TitleUrl { get; set; }
    return:
      type: System.String
      description: "有关详细信息表示 URL 的字符串<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在内部验证系统已确定的 URL 可能包含脚本攻击。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "使控件跟踪其视图状态的更改，以便将它们存储在对象的<xref:System.Web.UI.Control.ViewState*>属性。</xref:System.Web.UI.Control.ViewState*>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  id: Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取与关联的自定义谓词的集合<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "谓词派生自<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>类，并提供用户界面 (UI) 操作，用户可对执行<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 谓词通常表示在 UI 中为按钮、 链接或菜单项。 默认情况下，常见的 Web 部件谓词出现在每个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件的标题栏</xref:System.Web.UI.WebControls.WebParts.WebPart>中的下拉列表谓词菜单 有标准谓词用于打开、 关闭、 编辑和最小化控件与用于导出的定义控件或加载的帮助文件的其他谓词。 谓词集合中不包括这些谓词，因为该集合包含仅自定义谓词创建并通过重写派生类中的此属性将返回。       当你创建自定义谓词，并将它们添加到谓词集合时，然后就可以访问通过编程方式从谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to access the Verbs property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n Load the Web page in a browser. When you click the **Display Verb Count** button, it accesses the Verbs property to get the count of custom verbs for the `TextDisplayWebPart` control, and displays the count in a label. Because no custom verbs have been added to the control in this case, the count is zero.  \n  \n [!code-cs[WebParts_WebPart_Verbs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_673_1.aspx)]\n [!code-vb[WebParts_WebPart_Verbs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_673_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection&quot;> </xref> ，其中包含自定义<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;></xref>与关联的对象<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。 默认值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件以使其能够通过自定义编辑<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>控件。"
  remarks: "如果创建自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，并且还创建相关的自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件使用户能够编辑控件在运行时，必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable>接口，其中包括 WebBrowsableObject 属性。</xref:System.Web.UI.WebControls.WebParts.IWebEditable> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       当<xref:System.Web.UI.WebControls.WebParts.WebPart>控件进入编辑模式，WebBrowsableObject 属性被称为<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件获取引用的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并使自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件以编辑它。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public virtual object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;包含的子控件， <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控件。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  id: WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>与关联控件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件实例。"
  remarks: "Web 部件页始终具有的单个实例<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制跟踪和管理在页上，包括派生自的基本<xref:System.Web.UI.WebControls.WebParts.WebZone>类和派生自基的<xref:System.Web.UI.WebControls.WebParts.Part>类</xref:System.Web.UI.WebControls.WebParts.Part>的所有部件控件</xref:System.Web.UI.WebControls.WebParts.WebZone>的所有区域的所有 Web 部件控件</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       存在的人员属性，以便每个<xref:System.Web.UI.WebControls.WebParts.WebPart>可以与关联控件及其<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，反过来，保持所有的集合<xref:System.Web.UI.WebControls.WebParts.WebPart>在页面上的控件及其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>集合。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>关联<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  id: Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置 Web 服务器控件的宽度。"
  syntax:
    content: public override System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> ，表示控件的宽度。 默认值是<xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  id: Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>当前包含的区域<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "在 Web 部件控件集的体系结构，控件可以具有 Web 部件功能仅当它们的内部操作<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 标准<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>在网页上使用的区域是<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 尽管最终用户可以在网页上的不同区域之间移动 Web 部件控件，但控件的给定的实例可以在只有一个区域中驻留一次。 Web 部件控件，和其关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>区域属性来跟踪的当前区域控件的控件，请使用驻留在和区域通用布局和样式特性将应用于包含的所有 Web 部件控件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to access the Zone and <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_2.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>当前包含在网页上的 Web 部件控件。 如果 Web 部件控件在页面上当前已关闭，则返回值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  id: ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取的索引位置<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件在其区域内的。"
  remarks: "ZoneIndex 属性指示其在区域内，相对于其他控件的区域中的 Web 部件控件的数字顺序 （或序号位置）。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件使用此属性来跟踪和管理它在网页上的 Web 部件控件的集合。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      1> [!IMPORTANT]&1;> 无法假定控件 ZoneIndex 属性的值将等于同一个控件中的索引值<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>控件的区域的集合。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 通常，控件的相对中位置其区域 （其 ZoneIndex 值），以及在中的索引<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>其区域的集合将为不同的值，添加到和从区域中删除控件时。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> and ZoneIndex properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the ZoneIndex property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_2.aspx)]"
  syntax:
    content: public int ZoneIndex { get; }
    return:
      type: System.Int32
      description: "在其区域内的控件中的数字顺序。 区域中的第一个控件具有的索引值为零。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.Part
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.Part
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.PartChromeState
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeState
  nameWithType: PartChromeState
  fullName: System.Web.UI.WebControls.WebParts.PartChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.PartChromeType
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeType
  nameWithType: PartChromeType
  fullName: System.Web.UI.WebControls.WebParts.PartChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
- uid: System.Web.UI.WebControls.ContentDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContentDirection
  nameWithType: ContentDirection
  fullName: System.Web.UI.WebControls.ContentDirection
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPartExportMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartExportMode
  nameWithType: WebPartExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPartHelpMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartHelpMode
  nameWithType: WebPartHelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartHelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartVerbCollection
  nameWithType: WebPartVerbCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart
  nameWithType: WebPart.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts
  nameWithType: WebPart.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing
  nameWithType: WebPart.OnClosing
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged
  nameWithType: WebPart.OnConnectModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting
  nameWithType: WebPart.OnDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged
  nameWithType: WebPart.OnEditModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPart.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState
  nameWithType: WebPart.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
