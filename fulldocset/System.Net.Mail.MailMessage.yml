### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.MailMessage
  id: MailMessage
  children:
  - System.Net.Mail.MailMessage.#ctor
  - System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  - System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  - System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  - System.Net.Mail.MailMessage.AlternateViews
  - System.Net.Mail.MailMessage.Attachments
  - System.Net.Mail.MailMessage.Bcc
  - System.Net.Mail.MailMessage.Body
  - System.Net.Mail.MailMessage.BodyEncoding
  - System.Net.Mail.MailMessage.BodyTransferEncoding
  - System.Net.Mail.MailMessage.CC
  - System.Net.Mail.MailMessage.DeliveryNotificationOptions
  - System.Net.Mail.MailMessage.Dispose
  - System.Net.Mail.MailMessage.Dispose(System.Boolean)
  - System.Net.Mail.MailMessage.From
  - System.Net.Mail.MailMessage.Headers
  - System.Net.Mail.MailMessage.HeadersEncoding
  - System.Net.Mail.MailMessage.IsBodyHtml
  - System.Net.Mail.MailMessage.Priority
  - System.Net.Mail.MailMessage.ReplyTo
  - System.Net.Mail.MailMessage.ReplyToList
  - System.Net.Mail.MailMessage.Sender
  - System.Net.Mail.MailMessage.Subject
  - System.Net.Mail.MailMessage.SubjectEncoding
  - System.Net.Mail.MailMessage.To
  langs:
  - csharp
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
  type: Class
  summary: "表示可以使用发送的电子邮件<xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref>类。"
  remarks: "MailMessage 类的实例用于构造传输到使用<xref:System.Net.Mail.SmtpClient>类。</xref:System.Net.Mail.SmtpClient>传递的 SMTP 服务器的电子邮件       发件人、 收件人、 主题和电子邮件消息的正文可以指定为参数时<xref:System.Net.Mail.MailMessage.%23ctor%2A>用于初始化 MailMessage 对象。</xref:System.Net.Mail.MailMessage.%23ctor%2A> 这些参数还可以设置或 MailMessage 对象上使用属性访问。       主邮件消息标头和消息元素可能使用 MailMessage 类的以下属性设置。      |邮件标头或部分 |属性 |  |-------------------------|--------------|  |附件 |<xref:System.Net.Mail.MailMessage.Attachments%2A>|  |直接抄送 (BCC) |<xref:System.Net.Mail.MailMessage.Bcc%2A>|  |抄送 (CC) |<xref:System.Net.Mail.MailMessage.CC%2A>|  |内容类型 |<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  |编码为自定义标头 |<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  |消息正文 |<xref:System.Net.Mail.MailMessage.Body%2A>|  |优先级 |<xref:System.Net.Mail.MailMessage.Priority%2A>|  |接收方 |<xref:System.Net.Mail.MailMessage.To%2A>|  |答复到 |<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  |发件人 |<xref:System.Net.Mail.MailMessage.From%2A>|  |使用者 |<xref:System.Net.Mail.MailMessage.Subject%2A>|      MailMessage 类还允许应用程序访问消息使用的标头集合<xref:System.Net.Mail.MailMessage.Headers%2A>属性。</xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Subject%2A> </xref:System.Net.Mail.MailMessage.From%2A> </xref:System.Net.Mail.MailMessage.ReplyToList%2A> </xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.Priority%2A> </xref:System.Net.Mail.MailMessage.Body%2A> </xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> </xref:System.Net.Mail.MailMessage.BodyEncoding%2A> </xref:System.Net.Mail.MailMessage.CC%2A> </xref:System.Net.Mail.MailMessage.Bcc%2A> </xref:System.Net.Mail.MailMessage.Attachments%2A> 虽然此集合是只读的 （新的集合不能设置），自定义标头可以添加到或从该集合中删除。 发送 MailMessage 实例时，将包括添加任何自定义标头。 仅标头发送一条消息之前，请专门添加到此集合中<xref:System.Net.Mail.MailMessage.Headers%2A>收集中包括的属性。</xref:System.Net.Mail.MailMessage.Headers%2A> 之后发送 MailMessage 实例，<xref:System.Net.Mail.MailMessage.Headers%2A>属性还将包括使用 MailMessage 类的关联的属性设置的标头或参数传递时<xref:System.Net.Mail.MailMessage.%23ctor%2A>用于初始化 MailMessage 对象。</xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage.Headers%2A>       如果某些邮件标头格式不正确，它们可能会导致损坏的电子邮件消息。 因此，仅应使用 MailMessage 类属性设置可以使用 MailMessage 类上的属性设置的标头集合中的任何邮件标题或 as 参数传递时<xref:System.Net.Mail.MailMessage.%23ctor%2A>MailMessage 对象初始化。</xref:System.Net.Mail.MailMessage.%23ctor%2A> 不应使用添加邮件标头的以下列表<xref:System.Net.Mail.MailMessage.Headers%2A>为使用这些标头设置属性和任何值<xref:System.Net.Mail.MailMessage.Headers%2A>属性将被丢弃或覆盖发送消息:-密件抄送-抄送的内容 ID 的内容位置的内容传输的编码的内容类型从重要性-MIME 版本-优先级日期-回复的发件人添加到 X 优先级如果应用程序未指定 X 发件人标头使用<xref:System.Net.Mail.MailMessage.Headers%2A>属性，MailMessage 类将创建一个发送消息。</xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Headers%2A>       使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A>属性不同的格式指定电子邮件的副本。</xref:System.Net.Mail.MailMessage.AlternateViews%2A> 例如，如果您在 HTML 中发送一条消息，可能还想要提供纯文本版本以防到部分收件人使用电子邮件阅读程序无法显示 HTML 内容。 有关示例，演示如何使用替代视图中创建一条消息，请参阅<xref:System.Net.Mail.MailMessage.AlternateViews%2A>。</xref:System.Net.Mail.MailMessage.AlternateViews%2A>       使用<xref:System.Net.Mail.MailMessage.Attachments%2A>属性来将附件添加到电子邮件。</xref:System.Net.Mail.MailMessage.Attachments%2A> 有关示例，演示如何创建带有附件的一条消息，请参阅<xref:System.Net.Mail.MailMessage.Attachments%2A>。</xref:System.Net.Mail.MailMessage.Attachments%2A>       后将您的电子邮件，你可以发送该使用<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message that includes an attachment.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/t-system.net.mail.mailme_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/t-system.net.mail.mailme_1.cs)]"
  syntax:
    content: 'public class MailMessage : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor
  id: '#ctor'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage()
  nameWithType: MailMessage.MailMessage()
  fullName: System.Net.Mail.MailMessage.MailMessage()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的空实例<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>类。"
  remarks: "从设置为 mailSettings 网络元素中的值[\\&lt; smtp\\&gt;元素 （网络设置）](../Topic/%3Csmtp%3E%20Element%20\\(Network%20Settings\\).md)，如果它存在。"
  syntax:
    content: public MailMessage ();
    parameters: []
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  id: '#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(MailAddress,MailAddress)
  nameWithType: MailMessage.MailMessage(MailAddress,MailAddress)
  fullName: System.Net.Mail.MailMessage.MailMessage(MailAddress,MailAddress)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新实例<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>使用指定的类<xref href=&quot;System.Net.Mail.MailAddress&quot;></xref>类对象。"
  remarks: "<xref:System.Net.Mail.MailMessage.From%2A>属性初始化使用`from`和<xref:System.Net.Mail.MailMessage.To%2A>属性初始化使用`to`。</xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/a72294ca-d98b-4838-a350-_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/a72294ca-d98b-4838-a350-_1.cs)]"
  syntax:
    content: public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);
    parameters:
    - id: from
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref>包含电子邮件的发件人的地址。"
    - id: to
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref>包含电子邮件收件人的地址。"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正确。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(String,String)
  nameWithType: MailMessage.MailMessage(String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新实例<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>使用指定的类<xref:System.String>类对象。</xref:System.String>"
  remarks: "<xref:System.Net.Mail.MailMessage.From%2A>属性初始化使用`from`和<xref:System.Net.Mail.MailMessage.To%2A>属性初始化使用`to`。</xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.mailme_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.mailme_1.cs)]"
  syntax:
    content: public MailMessage (string from, string to);
    parameters:
    - id: from
      type: System.String
      description: "A<xref:System.String>包含电子邮件的发件人的地址。</xref:System.String>"
    - id: to
      type: System.String
      description: "A<xref:System.String>包含电子邮件收件人的地址。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String> (&quot;&quot;).       -or-       <code>to</code> is <xref:System.String> (&quot;&quot;)."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正确。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(String,String,String,String)
  nameWithType: MailMessage.MailMessage(String,String,String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新实例<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>类。"
  remarks: "新的<xref:System.Net.Mail.MailMessage>对象的属性进行初始化，如下所示: |参数 |属性 |  |---------------|--------------|  |`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  |-   `to`|-   <xref:System.Net.Mail.MailMessage.To%2A>|  |-   `subject`|-   <xref:System.Net.Mail.MailMessage.Subject%2A>|  |-   `body`|-   <xref:System.Net.Mail.MailMessage.Body%2A>|      默认情况下，使用者和内容都被认为在本地计算机设置基于若要使用默认编码。</xref:System.Net.Mail.MailMessage.Body%2A> </xref:System.Net.Mail.MailMessage.Subject%2A> </xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A> </xref:System.Net.Mail.MailMessage> 使用<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>和<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>属性以指定不同的编码。</xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> </xref:System.Net.Mail.MailMessage.BodyEncoding%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/49935544-e8d8-4f6e-b54a-_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/49935544-e8d8-4f6e-b54a-_1.cs)]"
  syntax:
    content: public MailMessage (string from, string to, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A<xref:System.String>包含电子邮件的发件人的地址。</xref:System.String>"
    - id: to
      type: System.String
      description: "A<xref:System.String>包含电子邮件收件人的地址。</xref:System.String>"
    - id: subject
      type: System.String
      description: "A <xref:System.String>，其中包含的主题文本。</xref:System.String>"
    - id: body
      type: System.String
      description: "A<xref:System.String>包含消息正文。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String> (&quot;&quot;).       -or-       <code>to</code> is <xref:System.String> (&quot;&quot;)."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正确。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.AlternateViews
  id: AlternateViews
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
  fullName: System.Net.Mail.MailMessage.AlternateViews
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取用于存储消息正文的备用窗体的附件集合。"
  remarks: "AlternateViews 属性用于在不同的格式指定电子邮件的副本。 例如，如果您在 HTML 中发送一条消息，可能还想要提供纯文本版本以防到部分收件人使用电子邮件阅读程序无法显示 HTML 内容。       若要添加到另一种视图<xref:System.Net.Mail.MailMessage>对象，请创建<xref:System.Net.Mail.Attachment>对于视图，然后将它添加到 AlternateViews 返回的集合。</xref:System.Net.Mail.Attachment> </xref:System.Net.Mail.MailMessage> 使用<xref:System.Net.Mail.MailMessage.Body%2A>属性来指定文本版本和使用 AlternateViews 集合来使用其他 MIME 类型来指定视图。</xref:System.Net.Mail.MailMessage.Body%2A> 使用<xref:System.Net.Mime.MediaTypeNames>类成员来指定替代视图的 MIME 类型。</xref:System.Net.Mime.MediaTypeNames>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message with a plain text and an HTML alternate view.  \n  \n [!code-cpp[NclMailSync#5](~/add/codesnippet/cpp/p-system.net.mail.mailme_3_1.cpp)]\n [!code-cs[NclMailSync#5](~/add/codesnippet/csharp/p-system.net.mail.mailme_3_1.cs)]"
  syntax:
    content: public System.Net.Mail.AlternateViewCollection AlternateViews { get; }
    return:
      type: System.Net.Mail.AlternateViewCollection
      description: "可写<xref href=&quot;System.Net.Mail.AlternateViewCollection&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.AlternateViews*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Attachments
  id: Attachments
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Attachments
  nameWithType: MailMessage.Attachments
  fullName: System.Net.Mail.MailMessage.Attachments
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取用于存储数据附加到此电子邮件的附件集合。"
  remarks: "使用附件属性返回的集合来添加附件，如文件或的内容<xref:System.IO.Stream>，到此<xref:System.Net.Mail.MailMessage>。</xref:System.Net.Mail.MailMessage> </xref:System.IO.Stream>       创建<xref:System.Net.Mail.Attachment>，包含或引用数据附加，，然后添加<xref:System.Net.Mail.Attachment>到附件返回的集合。</xref:System.Net.Mail.Attachment> </xref:System.Net.Mail.Attachment>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message with an attachment.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/p-system.net.mail.mailme_8_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/p-system.net.mail.mailme_8_1.cs)]"
  syntax:
    content: public System.Net.Mail.AttachmentCollection Attachments { get; }
    return:
      type: System.Net.Mail.AttachmentCollection
      description: "可写<xref href=&quot;System.Net.Mail.AttachmentCollection&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.Attachments*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Bcc
  id: Bcc
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Bcc
  nameWithType: MailMessage.Bcc
  fullName: System.Net.Mail.MailMessage.Bcc
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取包含此电子邮件的密件抄送 (BCC) 收件人的地址集合。"
  remarks: "若要添加到电子邮件的密件抄送收件人，创建<xref:System.Net.Mail.MailAddress>收件人的地址、，然后将该对象添加到密件抄送属性所返回的集合。</xref:System.Net.Mail.MailAddress>       当收件人查看电子邮件时，通常不显示密件抄送地址。"
  example:
  - "The following code example demonstrates adding an address to the Bcc address collection.  \n  \n [!code-cpp[NclMailSync#9](~/add/codesnippet/cpp/p-system.net.mail.mailme_1_1.cpp)]\n [!code-cs[NclMailSync#9](~/add/codesnippet/csharp/p-system.net.mail.mailme_1_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection Bcc { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可写<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>对象。"
  overload: System.Net.Mail.MailMessage.Bcc*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Body
  id: Body
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Body
  nameWithType: MailMessage.Body
  fullName: System.Net.Mail.MailMessage.Body
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置消息正文。"
  remarks: "<xref:System.Net.Mime.ContentType>正文的内容是&quot;文本/plain&quot;。</xref:System.Net.Mime.ContentType> 指定用于与正文的编码<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>属性。</xref:System.Net.Mail.MailMessage.BodyEncoding%2A>       如果可用提供更丰富的显示选项，以便收件人的替代格式的正文内容，则可以通过使用指定的正文内容的替代视图<xref:System.Net.Mail.MailMessage.AlternateViews%2A>属性。</xref:System.Net.Mail.MailMessage.AlternateViews%2A> 例如，应用程序可以选择发送纯文本正文和消息正文的 HTML 版本。 可以显示 HTML 的电子邮件读取器可以向正文该 HTML 版本接收方时无法显示 html 格式的读取器将显示的消息的纯文本版本相反。"
  example:
  - "The following code example demonstrates setting the Body property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.mailme_9_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.mailme_9_1.cs)]"
  syntax:
    content: public string Body { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含正文文本的值。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.BodyEncoding
  id: BodyEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
  fullName: System.Net.Mail.MailMessage.BodyEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置用于编码消息正文的编码。"
  remarks: "为 BodyEncoding 属性指定的值设置字符组字段中的内容类型标头。 默认字符集是`&quot;us-ascii&quot;`。       如果 BodyEncoding 属性设置为<xref:System.Text.Encoding.UTF8%2A>， <xref:System.Text.Encoding.Unicode%2A>，或<xref:System.Text.Encoding.UTF32%2A>，则框架将选择<xref:System.Net.Mime.TransferEncoding><xref:System.Net.Mime.TransferEncoding>。 此<xref:System.Net.Mail.MailMessage></xref:System.Net.Mail.MailMessage></xref:System.Net.Mime.TransferEncoding></xref:System.Net.Mime.TransferEncoding></xref:System.Text.Encoding.UTF32%2A></xref:System.Text.Encoding.Unicode%2A></xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following code example demonstrates creating a mail message that uses UTF8 encoding.  \n  \n [!code-cs[NclMailAsync#3](~/add/codesnippet/csharp/p-system.net.mail.mailme_10_1.cs)]\n [!code-cpp[NclMailAsync#3](~/add/codesnippet/cpp/p-system.net.mail.mailme_10_1.cpp)]\n [!code-vb[NclMailAsync#3](~/add/codesnippet/visualbasic/p-system.net.mail.mailme_10_1.vb)]"
  syntax:
    content: public System.Text.Encoding BodyEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>应用于的<xref:System.Net.Mail.MailMessage.Body*>。</xref:System.Net.Mail.MailMessage.Body*>内容</xref:System.Text.Encoding>"
  overload: System.Net.Mail.MailMessage.BodyEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding
  id: BodyTransferEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
  fullName: System.Net.Mail.MailMessage.BodyTransferEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置传输编码将用于编码消息正文。"
  syntax:
    content: public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }
    return:
      type: System.Net.Mime.TransferEncoding
      description: "Returns <xref href=&quot;System.Net.Mime.TransferEncoding&quot;></xref>.       A <xref href=&quot;System.Net.Mime.TransferEncoding&quot;> </xref>应用到的<xref:System.Net.Mail.MailMessage.Body*>。</xref:System.Net.Mail.MailMessage.Body*>内容"
  overload: System.Net.Mail.MailMessage.BodyTransferEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.CC
  id: CC
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: CC
  nameWithType: MailMessage.CC
  fullName: System.Net.Mail.MailMessage.CC
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取包含此电子邮件的抄送 (CC) 收件人的地址集合。"
  remarks: "若要添加到电子邮件的抄送收件人，创建<xref:System.Net.Mail.MailAddress>收件人的地址，然后将该对象添加到抄送属性所返回的集合。</xref:System.Net.Mail.MailAddress>"
  example:
  - "The following code example demonstrates adding an address to the CC address collection.  \n  \n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/p-system.net.mail.mailme_5_1.cpp)]\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/p-system.net.mail.mailme_5_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection CC { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可写<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>对象。"
  overload: System.Net.Mail.MailMessage.CC*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  id: DeliveryNotificationOptions
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
  fullName: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置此电子邮件的传送通知。"
  syntax:
    content: public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }
    return:
      type: System.Net.Mail.DeliveryNotificationOptions
      description: "A <xref href=&quot;System.Net.Mail.DeliveryNotificationOptions&quot;> </xref>包含此消息的发送通知的值。"
  overload: System.Net.Mail.MailMessage.DeliveryNotificationOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Dispose
  id: Dispose
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Dispose()
  nameWithType: MailMessage.Dispose()
  fullName: System.Net.Mail.MailMessage.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "释放使用的所有资源<xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref>。"
  remarks: "在完成使用<xref:System.Net.Mail.MailMessage>.</xref:System.Net.Mail.MailMessage>时调用的 Dispose 方法 Dispose 方法离开<xref:System.Net.Mail.MailMessage>中不可用状态。</xref:System.Net.Mail.MailMessage> 调用 Dispose 后，必须释放对所有引用<xref:System.Net.Mail.MailMessage>以便垃圾回收器才能回收的内存，<xref:System.Net.Mail.MailMessage>占用。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage> 有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.Net.Mail.MailMessage>。</xref:System.Net.Mail.MailMessage>最后一个引用之前"
  example:
  - The following code example demonstrates disposing a <xref:System.Net.Mail.MailMessage>.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.MailMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MailMessage.Dispose(Boolean)
  fullName: System.Net.Mail.MailMessage.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "释放由非托管的资源<xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> ，还可以释放托管的资源。"
  remarks: "此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A>调用`Dispose`与`disposing`设置为`false`。</xref:System.Object.Finalize%2A>       当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Net.Mail.MailMessage>引用。</xref:System.Net.Mail.MailMessage> 此方法调用`Dispose()`每个引用对象的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Net.Mail.MailMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.From
  id: From
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: From
  nameWithType: MailMessage.From
  fullName: System.Net.Mail.MailMessage.From
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置来自此电子邮件地址。"
  remarks: "从地址不验证或未绑定到当前登录的用户。"
  example:
  - "The following code example demonstrates setting a value for the From property.  \n  \n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/p-system.net.mail.mailme_7_1.cpp)]\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/p-system.net.mail.mailme_7_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddress From { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref> ，其中包含从地址信息。"
  overload: System.Net.Mail.MailMessage.From*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Headers
  id: Headers
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Headers
  nameWithType: MailMessage.Headers
  fullName: System.Net.Mail.MailMessage.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取与此电子邮件中所传输的电子邮件标头。"
  remarks: "标头属性允许应用程序访问消息的标头集合。 虽然此集合是只读的 （新的集合不能设置），自定义标头可以添加到或从该集合中删除。 添加任何自定义标头将包含时<xref:System.Net.Mail.MailMessage>实例发送。</xref:System.Net.Mail.MailMessage> 发送一条消息之前，集合中包含标头，专门添加到此集合中的标头属性。 后<xref:System.Net.Mail.MailMessage>实例发送、 标头属性还将包括使用的关联的属性设置的标头<xref:System.Net.Mail.MailMessage>类或参数传递时<xref:System.Net.Mail.MailMessage.%23ctor%2A>用于初始化<xref:System.Net.Mail.MailMessage>对象。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage>       如果某些邮件标头格式不正确，它们可能会导致损坏的电子邮件消息。 因此任何邮件标头中可以使用上的属性设置的标头集合<xref:System.Net.Mail.MailMessage>仅应使用设置类<xref:System.Net.Mail.MailMessage>类属性，或作为参数传递时<xref:System.Net.Mail.MailMessage.%23ctor%2A>初始化<xref:System.Net.Mail.MailMessage>对象。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage> 不应使用的标头属性添加邮件标头的以下列表，并且将放弃设置这些标头使用的标头属性的任何值，或将其覆盖发送消息:-密件抄送-抄送的内容 ID 的内容位置的内容传输的编码的内容类型从重要性-MIME 版本-优先级日期-回复的发件人添加到 X 优先级如果应用程序未指定使用的标头属性的 X 发件人标头<xref:System.Net.Mail.MailMessage>类发送消息时将创建一个。</xref:System.Net.Mail.MailMessage>       发件人、 收件人、 主题和电子邮件消息的正文可以指定为参数时<xref:System.Net.Mail.MailMessage.%23ctor%2A>用于初始化<xref:System.Net.Mail.MailMessage>对象。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> 这些参数还可以设置或上使用属性访问<xref:System.Net.Mail.MailMessage>对象。</xref:System.Net.Mail.MailMessage>       主邮件消息标头和消息元素可能会使用以下属性设置的<xref:System.Net.Mail.MailMessage>类。</xref:System.Net.Mail.MailMessage>      |邮件标头或部分 |属性 |  |-------------------------|--------------|  |附件 |<xref:System.Net.Mail.MailMessage.Attachments%2A>|  |直接抄送 (BCC) |<xref:System.Net.Mail.MailMessage.Bcc%2A>|  |抄送 (CC) |<xref:System.Net.Mail.MailMessage.CC%2A>|  |内容类型 |<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  |编码为自定义标头 |<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  |消息正文 |<xref:System.Net.Mail.MailMessage.Body%2A>|  |优先级 |<xref:System.Net.Mail.MailMessage.Priority%2A>|  |接收方 |<xref:System.Net.Mail.MailMessage.To%2A>|  |答复到 |<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  |发件人 |<xref:System.Net.Mail.MailMessage.From%2A>|  |使用者 |<xref:System.Net.Mail.MailMessage.Subject%2A>|</xref:System.Net.Mail.MailMessage.Subject%2A></xref:System.Net.Mail.MailMessage.From%2A></xref:System.Net.Mail.MailMessage.ReplyToList%2A></xref:System.Net.Mail.MailMessage.To%2A></xref:System.Net.Mail.MailMessage.Priority%2A></xref:System.Net.Mail.MailMessage.Body%2A></xref:System.Net.Mail.MailMessage.HeadersEncoding%2A></xref:System.Net.Mail.MailMessage.BodyEncoding%2A></xref:System.Net.Mail.MailMessage.CC%2A></xref:System.Net.Mail.MailMessage.Bcc%2A></xref:System.Net.Mail.MailMessage.Attachments%2A>"
  example:
  - "The following code example demonstrates displaying the headers for a mail message.  \n  \n [!code-cpp[NclMailSync#24](~/add/codesnippet/cpp/p-system.net.mail.mailme_2_1.cpp)]\n [!code-cs[NclMailSync#24](~/add/codesnippet/csharp/p-system.net.mail.mailme_2_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ，包含电子邮件标头。"
  overload: System.Net.Mail.MailMessage.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.HeadersEncoding
  id: HeadersEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
  fullName: System.Net.Mail.MailMessage.HeadersEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置用于此电子邮件的用户定义自定义头的编码。"
  remarks: "HeadersEncoding 属性的值默认为<xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>.</xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>       SMTP 邮件由标头和正文部分组成。 SMTP IETF Rfc 限制的标头和正文部分的名称为 ASCII。 但是，IETF Rfc 允许标头和正文部分的值为包含 Unicode 字符。 在任何特定值中，如果存在非 ASCII 字符，然后编码的值是结合使用的字符编码 （UTF8 或 Shift JIS，例如） 后跟字节编码 (<xref:System.Net.Mime.TransferEncoding>或<xref:System.Net.Mime.TransferEncoding>例如)。</xref:System.Net.Mime.TransferEncoding> </xref:System.Net.Mime.TransferEncoding> 结果通常是仅包含 ASCII 字符位于网络传输流。"
  syntax:
    content: public System.Text.Encoding HeadersEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "用于用户定义此电子邮件消息的自定义标头的编码。"
  overload: System.Net.Mail.MailMessage.HeadersEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.IsBodyHtml
  id: IsBodyHtml
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
  fullName: System.Net.Mail.MailMessage.IsBodyHtml
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置一个值，该值指示邮件消息正文是否在 Html。"
  syntax:
    content: public bool IsBodyHtml { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果消息正文在 Html;else <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.IsBodyHtml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Priority
  id: Priority
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Priority
  nameWithType: MailMessage.Priority
  fullName: System.Net.Mail.MailMessage.Priority
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置此电子邮件的优先级。"
  syntax:
    content: public System.Net.Mail.MailPriority Priority { get; set; }
    return:
      type: System.Net.Mail.MailPriority
      description: "A <xref href=&quot;System.Net.Mail.MailPriority&quot;> </xref> ，其中包含此消息的优先级。"
  overload: System.Net.Mail.MailMessage.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.ReplyTo
  id: ReplyTo
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
  fullName: System.Net.Mail.MailMessage.ReplyTo
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置邮件消息的 ReplyTo 地址。"
  remarks: "ReplyTo 属性用于指示一个地址以外<xref:System.Net.Mail.MailMessage.From%2A>地址用于回复此邮件。</xref:System.Net.Mail.MailMessage.From%2A>"
  syntax:
    content: public System.Net.Mail.MailAddress ReplyTo { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "MailAddress，该值指示 ReplyTo 字段的值。"
  overload: System.Net.Mail.MailMessage.ReplyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.ReplyToList
  id: ReplyToList
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
  fullName: System.Net.Mail.MailMessage.ReplyToList
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置的回复电子邮件地址的列表。"
  remarks: "使用 ReplyToList 属性不指示的地址的列表<xref:System.Net.Mail.MailMessage.From%2A>地址用于回复此邮件。</xref:System.Net.Mail.MailMessage.From%2A>       ReplyToList 属性替换<xref:System.Net.Mail.MailMessage.ReplyTo%2A>属性，它仅允许单个地址回复。</xref:System.Net.Mail.MailMessage.ReplyTo%2A>"
  syntax:
    content: public System.Net.Mail.MailAddressCollection ReplyToList { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "回复电子邮件地址的列表。"
  overload: System.Net.Mail.MailMessage.ReplyToList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Sender
  id: Sender
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Sender
  nameWithType: MailMessage.Sender
  fullName: System.Net.Mail.MailMessage.Sender
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置此电子邮件的发件人的地址。"
  remarks: "不验证或未绑定到当前登录的用户发件人地址。"
  syntax:
    content: public System.Net.Mail.MailAddress Sender { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref>包含发件人的地址信息。"
  overload: System.Net.Mail.MailMessage.Sender*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Subject
  id: Subject
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Subject
  nameWithType: MailMessage.Subject
  fullName: System.Net.Mail.MailMessage.Subject
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置此电子邮件的主题行。"
  remarks: "指定使用该主题的使用的编码<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>属性。</xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>"
  example:
  - "The following code example demonstrates setting the Subject property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.mailme_0_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.mailme_0_1.cs)]"
  syntax:
    content: public string Subject { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，包含的使用者内容。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.SubjectEncoding
  id: SubjectEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
  fullName: System.Net.Mail.MailMessage.SubjectEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取或设置用于此电子邮件的使用者内容的编码。"
  remarks: "如果邮件代理不能处理的<xref:System.Text.Encoding.Unicode%2A>请使用<xref:System.Text.Encoding.UTF8%2A>。</xref:System.Text.Encoding.UTF8%2A> </xref:System.Text.Encoding.Unicode%2A> SubjectEncoding"
  example:
  - "The following code example demonstrates setting the SubjectEncoding property.  \n  \n [!code-cs[NclMailASync#3](~/add/codesnippet/csharp/p-system.net.mail.mailme_4_1.cs)]\n [!code-cpp[NclMailASync#3](~/add/codesnippet/cpp/p-system.net.mail.mailme_4_1.cpp)]\n [!code-vb[NclMailASync#3](~/add/codesnippet/visualbasic/p-system.net.mail.mailme_4_1.vb)]"
  syntax:
    content: public System.Text.Encoding SubjectEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>用于编码<xref:System.Net.Mail.MailMessage.Subject*>属性。</xref:System.Net.Mail.MailMessage.Subject*> </xref:System.Text.Encoding>"
  overload: System.Net.Mail.MailMessage.SubjectEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.To
  id: To
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: To
  nameWithType: MailMessage.To
  fullName: System.Net.Mail.MailMessage.To
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "获取包含此电子邮件的收件人的地址集合。"
  remarks: "To 属性用于指定的电子邮件收件人行上的地址。 若要将收件人添加到电子邮件，创建<xref:System.Net.Mail.MailAddress>收件人的地址、，然后将该对象添加到此属性返回的集合。</xref:System.Net.Mail.MailAddress>"
  example:
  - "The following code example demonstrates setting the To property.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.mailme_6_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.mailme_6_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection To { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可写<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>对象。"
  overload: System.Net.Mail.MailMessage.To*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Mail.MailMessage.#ctor
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage()
  nameWithType: MailMessage.MailMessage()
  fullName: System.Net.Mail.MailMessage.MailMessage()
- uid: System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(MailAddress,MailAddress)
  nameWithType: MailMessage.MailMessage(MailAddress,MailAddress)
  fullName: System.Net.Mail.MailMessage.MailMessage(MailAddress,MailAddress)
- uid: System.Net.Mail.MailAddress
  parent: System.Net.Mail
  isExternal: false
  name: MailAddress
  nameWithType: MailAddress
  fullName: System.Net.Mail.MailAddress
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(String,String)
  nameWithType: MailMessage.MailMessage(String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(String,String,String,String)
  nameWithType: MailMessage.MailMessage(String,String,String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String,String,String)
- uid: System.Net.Mail.MailMessage.AlternateViews
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
  fullName: System.Net.Mail.MailMessage.AlternateViews
- uid: System.Net.Mail.AlternateViewCollection
  parent: System.Net.Mail
  isExternal: false
  name: AlternateViewCollection
  nameWithType: AlternateViewCollection
  fullName: System.Net.Mail.AlternateViewCollection
- uid: System.Net.Mail.MailMessage.Attachments
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Attachments
  nameWithType: MailMessage.Attachments
  fullName: System.Net.Mail.MailMessage.Attachments
- uid: System.Net.Mail.AttachmentCollection
  parent: System.Net.Mail
  isExternal: false
  name: AttachmentCollection
  nameWithType: AttachmentCollection
  fullName: System.Net.Mail.AttachmentCollection
- uid: System.Net.Mail.MailMessage.Bcc
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Bcc
  nameWithType: MailMessage.Bcc
  fullName: System.Net.Mail.MailMessage.Bcc
- uid: System.Net.Mail.MailAddressCollection
  parent: System.Net.Mail
  isExternal: false
  name: MailAddressCollection
  nameWithType: MailAddressCollection
  fullName: System.Net.Mail.MailAddressCollection
- uid: System.Net.Mail.MailMessage.Body
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Body
  nameWithType: MailMessage.Body
  fullName: System.Net.Mail.MailMessage.Body
- uid: System.Net.Mail.MailMessage.BodyEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
  fullName: System.Net.Mail.MailMessage.BodyEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
  fullName: System.Net.Mail.MailMessage.BodyTransferEncoding
- uid: System.Net.Mime.TransferEncoding
  parent: System.Net.Mime
  isExternal: false
  name: TransferEncoding
  nameWithType: TransferEncoding
  fullName: System.Net.Mime.TransferEncoding
- uid: System.Net.Mail.MailMessage.CC
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: CC
  nameWithType: MailMessage.CC
  fullName: System.Net.Mail.MailMessage.CC
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
  fullName: System.Net.Mail.MailMessage.DeliveryNotificationOptions
- uid: System.Net.Mail.DeliveryNotificationOptions
  parent: System.Net.Mail
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: DeliveryNotificationOptions
  fullName: System.Net.Mail.DeliveryNotificationOptions
- uid: System.Net.Mail.MailMessage.Dispose
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose()
  nameWithType: MailMessage.Dispose()
  fullName: System.Net.Mail.MailMessage.Dispose()
- uid: System.Net.Mail.MailMessage.Dispose(System.Boolean)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MailMessage.Dispose(Boolean)
  fullName: System.Net.Mail.MailMessage.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.MailMessage.From
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: From
  nameWithType: MailMessage.From
  fullName: System.Net.Mail.MailMessage.From
- uid: System.Net.Mail.MailMessage.Headers
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Headers
  nameWithType: MailMessage.Headers
  fullName: System.Net.Mail.MailMessage.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.Mail.MailMessage.HeadersEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
  fullName: System.Net.Mail.MailMessage.HeadersEncoding
- uid: System.Net.Mail.MailMessage.IsBodyHtml
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
  fullName: System.Net.Mail.MailMessage.IsBodyHtml
- uid: System.Net.Mail.MailMessage.Priority
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Priority
  nameWithType: MailMessage.Priority
  fullName: System.Net.Mail.MailMessage.Priority
- uid: System.Net.Mail.MailPriority
  parent: System.Net.Mail
  isExternal: false
  name: MailPriority
  nameWithType: MailPriority
  fullName: System.Net.Mail.MailPriority
- uid: System.Net.Mail.MailMessage.ReplyTo
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
  fullName: System.Net.Mail.MailMessage.ReplyTo
- uid: System.Net.Mail.MailMessage.ReplyToList
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
  fullName: System.Net.Mail.MailMessage.ReplyToList
- uid: System.Net.Mail.MailMessage.Sender
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Sender
  nameWithType: MailMessage.Sender
  fullName: System.Net.Mail.MailMessage.Sender
- uid: System.Net.Mail.MailMessage.Subject
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Subject
  nameWithType: MailMessage.Subject
  fullName: System.Net.Mail.MailMessage.Subject
- uid: System.Net.Mail.MailMessage.SubjectEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
  fullName: System.Net.Mail.MailMessage.SubjectEncoding
- uid: System.Net.Mail.MailMessage.To
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: To
  nameWithType: MailMessage.To
  fullName: System.Net.Mail.MailMessage.To
- uid: System.Net.Mail.MailMessage.#ctor*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage.MailMessage
- uid: System.Net.Mail.MailMessage.AlternateViews*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
- uid: System.Net.Mail.MailMessage.Attachments*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Attachments
  nameWithType: MailMessage.Attachments
- uid: System.Net.Mail.MailMessage.Bcc*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Bcc
  nameWithType: MailMessage.Bcc
- uid: System.Net.Mail.MailMessage.Body*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Body
  nameWithType: MailMessage.Body
- uid: System.Net.Mail.MailMessage.BodyEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
- uid: System.Net.Mail.MailMessage.CC*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: CC
  nameWithType: MailMessage.CC
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
- uid: System.Net.Mail.MailMessage.Dispose*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose
  nameWithType: MailMessage.Dispose
- uid: System.Net.Mail.MailMessage.From*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: From
  nameWithType: MailMessage.From
- uid: System.Net.Mail.MailMessage.Headers*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Headers
  nameWithType: MailMessage.Headers
- uid: System.Net.Mail.MailMessage.HeadersEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
- uid: System.Net.Mail.MailMessage.IsBodyHtml*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
- uid: System.Net.Mail.MailMessage.Priority*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Priority
  nameWithType: MailMessage.Priority
- uid: System.Net.Mail.MailMessage.ReplyTo*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
- uid: System.Net.Mail.MailMessage.ReplyToList*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
- uid: System.Net.Mail.MailMessage.Sender*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Sender
  nameWithType: MailMessage.Sender
- uid: System.Net.Mail.MailMessage.Subject*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Subject
  nameWithType: MailMessage.Subject
- uid: System.Net.Mail.MailMessage.SubjectEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
- uid: System.Net.Mail.MailMessage.To*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: To
  nameWithType: MailMessage.To
