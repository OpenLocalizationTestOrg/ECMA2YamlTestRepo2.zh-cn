### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.RelatedEnd
  id: RelatedEnd
  children:
  - System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  - System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.RelatedEnd.Load
  - System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  langs:
  - csharp
  name: RelatedEnd
  nameWithType: RelatedEnd
  fullName: System.Data.Objects.DataClasses.RelatedEnd
  type: Class
  summary: "表示实现相关端的常见功能的基类。"
  remarks: "RelatedEnd 是基类的<xref:System.Data.Objects.DataClasses.EntityCollection%601>类和<xref:System.Data.Objects.DataClasses.EntityReference%601>类。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       RelatedEnd 类实现之间共享的功能<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>类。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       此类不应在代码中直接使用。"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd
  inheritance:
  - System.Object
  implements:
  - System.Data.Objects.DataClasses.IRelatedEnd
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  id: AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "到相关端进行更改时发生。"
  remarks: "AssociationChanged 事件由以下方法引发:- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName>-<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName>事件可禁止显示在大容量操作期间如`Load`， <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A>，和<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>。</xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "返回<xref:System.Collections.IEnumerator>，它循环访问的相关对象的集合。</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>，它循环访问的相关对象的集合。</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "获取一个值，该值指示是否已加载所有相关的对象。"
  remarks: "调用<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法将 IsLoaded 标志设置为`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       调用<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>设置 IsLoaded `false`。</xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>       <xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>也可能会加载如果相关的端包含在查询路径。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> 有关范围的详细信息，请参阅[加载相关对象](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       `Load`方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>将相关的对象加载从数据源是否 IsLoaded 是`true`。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       当对象分离时，将从更改 IsLoaded 标志`false`到`true`。       若要确保在进行处理之前相关的端是完全加载，你应检查是否 IsLoaded `false`。 如果 IsLoaded `false`，应调用<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>"
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果相关的端包含数据库; 中的所有相关的对象否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "当在派生类中重写到相关端使用默认合并选项加载相关的对象。"
  remarks: "默认合并选项是<xref:System.Data.Objects.MergeOption>用于跟踪的对象还是<xref:System.Data.Objects.MergeOption><xref:System.Data.Objects.ObjectStateManager>。</xref:System.Data.Objects.ObjectStateManager>不跟踪的对象时</xref:System.Data.Objects.MergeOption></xref:System.Data.Objects.MergeOption> 若要指定合并选项换不同<xref:System.Data.Objects.MergeOption>，调用`Load`方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>采用特定<xref:System.Data.Objects.MergeOption>参数。</xref:System.Data.Objects.MergeOption> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.MergeOption>       调用负载方法设置<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>标志切换为`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       Load 方法将相关的对象加载从数据源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>是`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当通过检索源对象<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>查询和<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>不<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>或已加载相关的对象。       -或-当源对象未附加到<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。       -或-当源对象正在跟踪，但在<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>状态或<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>使用负载为<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "当在派生类中重写，从相关端使用指定的合并选项加载一个或多个对象。"
  remarks: "同时<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>重写此方法以加载相关的对象。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> `Load`调用以从导航属性公开的相关端显式加载相关的对象。 有关详细信息，请参阅[加载相关对象](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       调用<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法设置<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>标志切换为`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       Load 方法将相关的对象加载从数据源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>是`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       默认合并选项是<xref:System.Data.Objects.MergeOption>用于跟踪的对象还是<xref:System.Data.Objects.MergeOption><xref:System.Data.Objects.ObjectStateManager>。</xref:System.Data.Objects.ObjectStateManager>不跟踪的对象时</xref:System.Data.Objects.MergeOption></xref:System.Data.Objects.MergeOption>"
  syntax:
    content: public abstract void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>合并到现有对象时要使用&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当通过检索源对象<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>查询和<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>不<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>或已加载相关的对象。       -或-当源对象未附加到<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。       -或-当源对象正在跟踪，但在<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>状态或<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>用于<xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>是<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>"
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "在内部用于反序列化实体对象连同<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>实例。"
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "序列化的流。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "获取此相关的端所参与的关系的名称。"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "在此关系的名称<xref href=&quot;System.Data.Objects.DataClasses.RelatedEnd&quot;></xref>参与。 关系名称不是命名空间限定。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "对相关端中获取元数据的引用。"
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;> </xref>包含关系一端的元数据的对象。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "获取关系的源端的角色名称。"
  remarks: "角色名称由指定`Role`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[关联元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>角色名称。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "将对象添加到相关端。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.DataClasses.RelatedEnd>实例被强制转换为<xref:System.Data.Objects.DataClasses.IRelatedEnd>接口。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       保留 IRelatedEnd.Add 方法只是为了与以前版本的.NET Framework 兼容。"
  syntax:
    content: void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要添加到集合的对象。 此对象必须实现<xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;></xref>接口。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "将对象添加到相关端。"
  remarks: "如果源实体对象附加到缓存中，所有连接的端点添加到对象缓存和其相应关系也将添加到<xref:System.Data.Objects.ObjectStateManager>。</xref:System.Data.Objects.ObjectStateManager> <xref:System.Data.Objects.DataClasses.RelatedEnd>还固定的关系。</xref:System.Data.Objects.DataClasses.RelatedEnd>"
  syntax:
    content: void IRelatedEnd.Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要添加到相关端的实体实例。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "将附加到相关端的对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.DataClasses.RelatedEnd>实例被强制转换为<xref:System.Data.Objects.DataClasses.IRelatedEnd>接口。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       保留 IRelatedEnd.Attach 方法只是为了与以前版本的.NET Framework 兼容。"
  syntax:
    content: void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要附加的对象。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "将对象附加到相关端。"
  remarks: "如果相关的端已附加到它的某些实体，将与新的实体合并现有实体。 新的实体不被假定相关的实体对象的完整集。       源实体对象和所有传入的实体对象必须为<xref:System.Data.EntityState>或<xref:System.Data.EntityState>状态。</xref:System.Data.EntityState> </xref:System.Data.EntityState> 仅当状态管理器已经跟踪关系实例时，才允许已删除的元素。"
  syntax:
    content: void IRelatedEnd.Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要将附加到相关端的实体实例。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  id: System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "返回<xref:System.Collections.IEnumerable>，它表示属于相关端对象。</xref:System.Collections.IEnumerable>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.DataClasses.RelatedEnd>实例被强制转换为<xref:System.Data.Objects.DataClasses.IRelatedEnd>接口。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       <xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>都重写 IRelatedEnd.CreateSourceQuery 返回<xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.DataClasses.EntityReference%601></xref:System.Data.Objects.DataClasses.EntityCollection%601> 此查询，它执行时，返回属于相关端的对象属于同一套。"
  syntax:
    content: System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，它表示属于相关端对象。</xref:System.Collections.IEnumerable>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "从相关端的集合中移除一个对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.DataClasses.RelatedEnd>实例被强制转换为<xref:System.Data.Objects.DataClasses.IRelatedEnd>接口。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       保留 IRelatedEnd.Remove 方法只是为了与以前版本的.NET Framework 兼容。"
  syntax:
    content: bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要从集合中移除的实体实例。"
    return:
      type: System.Boolean
      description: "一个值，该值指示是否已删除对象。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "如果对象是相关端的一部分，请从相关端移除一个对象。"
  remarks: "如果源实体对象附加到缓存中，关系标记为删除。"
  syntax:
    content: bool IRelatedEnd.Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要从相关端中删除的实体实例。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功删除该实体;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "获取关系的目标端的角色名称。"
  remarks: "角色名称由指定`Role`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[关联元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>角色名称。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: RelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load
  nameWithType: RelatedEnd.Load
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized
  nameWithType: RelatedEnd.OnDeserialized
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
