### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CollectionConverter
  id: CollectionConverter
  children:
  - System.ComponentModel.CollectionConverter.#ctor
  - System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: CollectionConverter
  nameWithType: CollectionConverter
  fullName: System.ComponentModel.CollectionConverter
  type: Class
  summary: "提供用于在集合对象与其他各种表示形式之间进行转换的类型转换器。"
  remarks: "<xref:System.ComponentModel.CollectionConverter.GetProperties%2A>对于此类型转换器方法始终返回`null`，和<xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>方法始终返回`false`。</xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A> </xref:System.ComponentModel.CollectionConverter.GetProperties%2A>       有关类型转换器的详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基类和[如何︰ 实现类型转换器](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter>      1> [!NOTE]&1;> 决不要创建 CollectionConverter 类的实例。 而应调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的<xref:System.ComponentModel.TypeDescriptor>类。</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 有关详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基的类</xref:System.ComponentModel.TypeConverter>中的示例"
  syntax:
    content: 'public class CollectionConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.CollectionConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CollectionConverter
  langs:
  - csharp
  name: CollectionConverter()
  nameWithType: CollectionConverter.CollectionConverter()
  fullName: System.ComponentModel.CollectionConverter.CollectionConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.CollectionConverter&quot;></xref>类。"
  syntax:
    content: public CollectionConverter ();
    parameters: []
  overload: System.ComponentModel.CollectionConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CollectionConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CollectionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CollectionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将给定的值对象转换为指定的目标类型。"
  remarks: "`context`参数可用于提取有关从中调用该转换器的环境的附加信息。 这可以是`null`，因此总是需要检查。 同样，上下文对象上的属性可以返回`null`。      1> [!NOTE]&1;> 的转换后的结果将显示在属性浏览器。 例如，如果要将 char 集合转换为字符串，它将显示为`char[] collection`。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "区域性`value`将被转换。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要转换。</xref:System.Object> 此参数必须从<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>继承"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>要转换到的值。</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>，表示转换后的值。</xref:System.Object>"
  overload: System.ComponentModel.CollectionConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "无法执行转换。"
  platform:
  - net462
- uid: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.CollectionConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: CollectionConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.CollectionConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取使用指定的上下文和特性值参数指定的数组类型的属性的集合。"
  remarks: "`context`参数可用于提取有关从中调用该转换器的环境的附加信息。 这可以是`null`，因此总是需要检查。 同样，上下文对象上的属性可以返回`null`。       在中传递的属性数组将用于筛选数组。 属性可以具有多种<xref:System.Type>和<xref:System.Attribute>对象。</xref:System.Attribute> </xref:System.Type> 筛选由以下规则定义:-<xref:System.Type>对象将被视为通配符; 它将与匹配的任何属性都具有<xref:System.Type>属性其集中。</xref:System.Type> </xref:System.Type>      -如果属性不具有<xref:System.Attribute>的同一个类，将不包含属性返回的数组中。</xref:System.Attribute>      -如果属性是实例<xref:System.Attribute>，该属性必须是完全匹配，或它不包括在返回的数组。</xref:System.Attribute>      -如果<xref:System.Attribute>指定实例和它是默认属性，它将包括在返回的数组即使不没有的任何实例<xref:System.Attribute>属性中。</xref:System.Attribute> </xref:System.Attribute>       集合不支持属性︰因此，此方法始终返回`null`。"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>指定要从中获取属性为数组的类型</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "类型的数组<xref:System.Attribute>，将用作筛选器。</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>与为此数据类型，公开的属性或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果没有属性。 此方法始终返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CollectionConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CollectionConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示此对象是否支持属性。"
  remarks: "`context`参数可用于提取有关从中调用该转换器的环境的附加信息。 这可以是`null`，因此总是需要检查。 同样，上下文对象上的属性可以返回`null`。       集合不支持属性︰因此，此方法始终返回`false`。"
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，用于提供格式上下文。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>因为<xref:System.ComponentModel.CollectionConverter.GetProperties*>不应该调用来查找此对象的属性。</xref:System.ComponentModel.CollectionConverter.GetProperties*> 此方法从不返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.CollectionConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.CollectionConverter.#ctor
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: CollectionConverter()
  nameWithType: CollectionConverter.CollectionConverter()
  fullName: System.ComponentModel.CollectionConverter.CollectionConverter()
- uid: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CollectionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CollectionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: CollectionConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.CollectionConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.CollectionConverter.#ctor*
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: CollectionConverter
  nameWithType: CollectionConverter.CollectionConverter
- uid: System.ComponentModel.CollectionConverter.ConvertTo*
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: ConvertTo
  nameWithType: CollectionConverter.ConvertTo
- uid: System.ComponentModel.CollectionConverter.GetProperties*
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: GetProperties
  nameWithType: CollectionConverter.GetProperties
- uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported*
  parent: System.ComponentModel.CollectionConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: CollectionConverter.GetPropertiesSupported
