### YamlMime:ManagedReference
items:
- uid: System.Data.Design.TypedDataSetGenerator
  id: TypedDataSetGenerator
  children:
  - System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  - System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  - System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)
  - System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)
  - System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies
  langs:
  - csharp
  name: TypedDataSetGenerator
  nameWithType: TypedDataSetGenerator
  fullName: System.Data.Design.TypedDataSetGenerator
  type: Class
  summary: "生成强类型化<xref href=&quot;System.Data.DataSet&quot;></xref>类。"
  remarks: "<xref:System.Data.TypedDataSetGenerator>类将使用提供的信息 （例如，XML 架构） 并创建类型化数据集类。</xref:System.Data.TypedDataSetGenerator>"
  syntax:
    content: public sealed class TypedDataSetGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  id: Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(DataSet,CodeNamespace,CodeDomProvider)
  nameWithType: TypedDataSetGenerator.Generate(DataSet,CodeNamespace,CodeDomProvider)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(DataSet,CodeNamespace,CodeDomProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "生成强类型化<xref href=&quot;System.Data.DataSet&quot;></xref>基于现有<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  remarks: "生成强类型化的<xref:System.Data.DataSet>.</xref:System.Data.DataSet> 在所示的命名空间中创建数据集`codeNamespace`参数，并且数据集生成在托管编程语言中所示`codeProvider`参数。"
  syntax:
    content: public static string Generate (System.Data.DataSet dataSet, System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "源<xref href=&quot;System.Data.DataSet&quot;> </xref> ，它指定的类型化的元数据<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
    - id: codeNamespace
      type: System.CodeDom.CodeNamespace
      description: "提供的类型化的目标命名空间的命名空间<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "特定于语言的<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>要用于生成数据集。"
    return:
      type: System.String
      description: "强类型化<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "生成强类型化<xref href=&quot;System.Data.DataSet&quot;></xref>基于提供的输入文件。"
  remarks: "> [!IMPORTANT]1> 调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[不受信任的数据安全风险](http://go.microsoft.com/fwlink/?LinkId=330378)。       生成强类型化的<xref:System.Data.DataSet>.</xref:System.Data.DataSet>"
  syntax:
    content: public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "一个字符串，表示所基于的 XML 架构<xref href=&quot;System.Data.DataSet&quot;></xref>上。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>以包含生成的代码。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "<xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> ，其中包含生成的数据集。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "特定于语言的<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>要用于生成数据集。"
    return:
      type: System.String
      description: "强类型化<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "生成强类型化<xref href=&quot;System.Data.DataSet&quot;></xref>基于提供的输入文件。"
  remarks: "> [!IMPORTANT]1> 调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[不受信任的数据安全风险](http://go.microsoft.com/fwlink/?LinkId=330378)。       生成强类型化的<xref:System.Data.DataSet>.</xref:System.Data.DataSet>"
  syntax:
    content: public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "一个字符串，表示所基于的 XML 架构<xref href=&quot;System.Data.DataSet&quot;></xref>上。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>以包含生成的代码。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "<xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> ，其中包含生成的数据集。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "特定于语言<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>要用于生成数据集。"
    - id: customDBProviders
      type: System.Collections.Hashtable
      description: "哈希表映射到类型化数据集在特定提供程序的连接。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "生成强类型化<xref href=&quot;System.Data.DataSet&quot;></xref>基于提供的输入文件。"
  remarks: "> [!IMPORTANT]1> 调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[不受信任的数据安全风险](http://go.microsoft.com/fwlink/?LinkId=330378)。       生成强类型化的<xref:System.Data.DataSet>.</xref:System.Data.DataSet>"
  syntax:
    content: public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Common.DbProviderFactory specifiedFactory);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "一个字符串，表示所基于的 XML 架构<xref href=&quot;System.Data.DataSet&quot;></xref>上。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>以包含生成的代码。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "<xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> ，其中包含生成的数据集。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "特定于语言的<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>要用于生成数据集。"
    - id: specifiedFactory
      type: System.Data.Common.DbProviderFactory
      description: "<xref href=&quot;System.Data.Common.DbProviderFactory&quot;> </xref>用于重写中包含的提供程序`inputFileContent`。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: customDBProviders
      type: System.Collections.Hashtable
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
    - id: dataSetNamespace
      type: System.String
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: customDBProviders
      type: System.Collections.Hashtable
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
    - id: dataSetNamespace
      type: System.String
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace, string basePath);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
    - id: dataSetNamespace
      type: System.String
      description: "要添加。"
    - id: basePath
      type: System.String
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  id: Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  syntax:
    content: public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace, string basePath);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "要添加。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "要添加。"
    - id: mainNamespace
      type: System.CodeDom.CodeNamespace
      description: "要添加。"
    - id: codeProvider
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "要添加。"
    - id: customDBProviders
      type: System.Collections.Hashtable
      description: "要添加。"
    - id: option
      type: System.Data.Design.TypedDataSetGenerator.GenerateOption
      description: "要添加。"
    - id: dataSetNamespace
      type: System.String
      description: "要添加。"
    - id: basePath
      type: System.String
      description: "要添加。"
  overload: System.Data.Design.TypedDataSetGenerator.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)
  id: GetProviderName(System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: GetProviderName(String)
  nameWithType: TypedDataSetGenerator.GetProviderName(String)
  fullName: System.Data.Design.TypedDataSetGenerator.GetProviderName(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "返回提供的输入文件中找到的第一个提供程序名称。"
  remarks: "> [!IMPORTANT]1> 调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[不受信任的数据安全风险](http://go.microsoft.com/fwlink/?LinkId=330378)。       此方法返回的第一个提供程序名称中指定`inputFileContent`。"
  syntax:
    content: public static string GetProviderName (string inputFileContent);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "一个字符串，表示所基于的 XML 架构<xref href=&quot;System.Data.DataSet&quot;></xref>上。"
    return:
      type: System.String
      description: "一个字符串，表示此特定的提供程序<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Design.TypedDataSetGenerator.GetProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)
  id: GetProviderName(System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: GetProviderName(String,String)
  nameWithType: TypedDataSetGenerator.GetProviderName(String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.GetProviderName(String,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "返回的提供程序名称<code> tableName </code>输入文件中。"
  remarks: "> [!IMPORTANT]1> 调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[不受信任的数据安全风险](http://go.microsoft.com/fwlink/?LinkId=330378)。       返回的提供程序名称给定`tableName`中<xref:System.Data.DataSet>。</xref:System.Data.DataSet>"
  syntax:
    content: public static string GetProviderName (string inputFileContent, string tableName);
    parameters:
    - id: inputFileContent
      type: System.String
      description: "一个字符串，表示所基于的 XML 架构<xref href=&quot;System.Data.DataSet&quot;></xref>上。"
    - id: tableName
      type: System.String
      description: "表示要返回的提供程序名称的表的名称的字符串。"
    return:
      type: System.String
      description: "表示的提供程序特定的表名称的字符串传递给<code> tableName </code>参数。"
  overload: System.Data.Design.TypedDataSetGenerator.GetProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Data.Design.TypedDataSetGenerator
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: TypedDataSetGenerator.ReferencedAssemblies
  fullName: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Design
  namespace: System.Data.Design
  summary: "获取或设置在类型化数据集引用的程序集的集合。"
  remarks: "该生成器循环访问此列表，并将程序集添加到你的项目。"
  syntax:
    content: public static System.Collections.Generic.ICollection<System.Reflection.Assembly> ReferencedAssemblies { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}
      description: "包含在数据集中的所有引用程序集的集合。"
  overload: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(DataSet,CodeNamespace,CodeDomProvider)
  nameWithType: TypedDataSetGenerator.Generate(DataSet,CodeNamespace,CodeDomProvider)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(DataSet,CodeNamespace,CodeDomProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,DbProviderFactory)
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption)
- uid: System.Data.Design.TypedDataSetGenerator.GenerateOption
  parent: System.Data.Design
  isExternal: false
  name: TypedDataSetGenerator+GenerateOption
  nameWithType: TypedDataSetGenerator+GenerateOption
  fullName: System.Data.Design.TypedDataSetGenerator+GenerateOption
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption)
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String)
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String)
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,TypedDataSetGenerator+GenerateOption,String,String)
- uid: System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
  nameWithType: TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.Generate(String,CodeCompileUnit,CodeNamespace,CodeDomProvider,Hashtable,TypedDataSetGenerator+GenerateOption,String,String)
- uid: System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: GetProviderName(String)
  nameWithType: TypedDataSetGenerator.GetProviderName(String)
  fullName: System.Data.Design.TypedDataSetGenerator.GetProviderName(String)
- uid: System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: GetProviderName(String,String)
  nameWithType: TypedDataSetGenerator.GetProviderName(String,String)
  fullName: System.Data.Design.TypedDataSetGenerator.GetProviderName(String,String)
- uid: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypedDataSetGenerator.ReferencedAssemblies
  fullName: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies
- uid: System.Collections.Generic.ICollection{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Assembly>
  nameWithType: ICollection<Assembly>
  fullName: System.Collections.Generic.ICollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Design.TypedDataSetGenerator.Generate*
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: Generate
  nameWithType: TypedDataSetGenerator.Generate
- uid: System.Data.Design.TypedDataSetGenerator.GetProviderName*
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: GetProviderName
  nameWithType: TypedDataSetGenerator.GetProviderName
- uid: System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies*
  parent: System.Data.Design.TypedDataSetGenerator
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypedDataSetGenerator.ReferencedAssemblies
