### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  id: LinqDataSourceContextEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreating&quot;></xref>事件。"
  remarks: "默认情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件创建一个实例中指定的类型<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource>控件调用要创建对象的实例的数据上下文对象的默认构造函数。</xref:System.Web.UI.WebControls.LinqDataSource>       你可以手动创建的数据上下文对象，通过处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 如果你想要使用非默认构造函数执行此操作。       你还可以处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件，如果你想要创建不同于中指定的数据上下文对象<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 在这种情况下，设置<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>到你创建的对象的属性。</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.LinqDataSource>控件将使用你创建的对象选择数据。</xref:System.Web.UI.WebControls.LinqDataSource> 在将更新、 插入或删除数据，必须设置<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>到从<xref:System.Data.Linq.DataContext>类</xref:System.Data.Linq.DataContext>派生的对象的属性</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_133_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_133_1.vb)]"
  syntax:
    content: 'public class LinqDataSourceContextEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref>类。"
  syntax:
    content: public LinqDataSourceContextEventArgs ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  id: '#ctor(System.Web.UI.DataSourceOperation)'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref>为指定的数据操作的类。"
  syntax:
    content: public LinqDataSourceContextEventArgs (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "正在执行数据操作。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要创建的数据上下文对象。"
  remarks: "默认情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件创建一个实例中指定的类<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 这是通过调用该类的默认构造函数实现的。       你可以手动创建数据操作的对象，通过处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件以及将 ObjectInstance 属性设置为你创建的对象。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>       如果你想要使用非默认构造函数，或如果你想要创建一个对象，它不同于在指定某一手动创建对象<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>       ObjectInstance 属性不包含在指定的类型实例<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性，因为该实例创建后<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 只有当你手动创建期间的数据上下文对象时使用的 ObjectInstance 属性<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 当你将更新、 插入或删除数据时，你必须将 ObjectInstance 属性设置为从<xref:System.Data.Linq.DataContext>类</xref:System.Data.Linq.DataContext>派生的对象"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the ObjectInstance property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_590_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_590_1.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "数据上下文对象，你已设置为您的 ObjectInstance 属性。否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  id: Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取正在执行数据操作。"
  syntax:
    content: public System.Web.UI.DataSourceOperation Operation { get; }
    return:
      type: System.Web.UI.DataSourceOperation
      description: "一个值，表示正在执行的数据操作的类型。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
