### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  id: ActiveDirectorySubnet
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  langs:
  - csharp
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  type: Class
  summary: "ActiveDirectorySubnet 类表示中的子网<xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>。"
  syntax:
    content: 'public class ActiveDirectorySubnet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ActiveDirectorySubnet(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "初始化的实例<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>类，使用指定<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;></xref>对象和子网名称。"
  syntax:
    content: public ActiveDirectorySubnet (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>此指定的上下文的对象<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
    - id: subnetName
      type: System.String
      description: "A <xref:System.String>，它指定子网的名称。</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "<code>context</code>指定配置集，但找到实例没有 AD LDS。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "由于以下原因导致发生此异常将:- <code> context </code>未引用有效的林、 配置集、 域控制器或 AD LDS 服务器。      - <code> subnetName </code>为空字符串。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>subnetName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "提供的凭据不是有效的。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ActiveDirectorySubnet(DirectoryContext,String,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "初始化的实例<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>类，使用指定<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;></xref>对象、 子网名称和站点名称。"
  syntax:
    content: public ActiveDirectorySubnet (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>此指定的上下文的对象<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
    - id: subnetName
      type: System.String
      description: "A <xref:System.String>，它指定子网的名称。</xref:System.String>"
    - id: siteName
      type: System.String
      description: "A <xref:System.String>，它指定包含子网的站点名称。</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "<code>context</code>指定配置集，但找到实例没有 AD LDS。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "由于以下原因导致发生此异常将:- <code> context </code>未引用有效的林、 配置集、 域控制器或 AD LDS 服务器。      -   <code>subnetName</code> or <code>siteName</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>, <code>subnetName</code>, or <code>siteName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "提供的凭据不是有效的。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  id: Delete
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Delete()
  nameWithType: ActiveDirectorySubnet.Delete()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "删除的子网，表示此<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;> </xref>对象尚未尚未保存在 Active Directory 域服务中存储。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActiveDirectorySubnet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "释放使用的所有资源<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySubnet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "释放由非托管的资源<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象，还可以释放托管的资源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应释放托管的资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果仅应释放非托管的资源。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: FindByName(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回基于子网名称的子网。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet FindByName (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>仅适用于此子网的对象。"
    - id: subnetName
      type: System.String
      description: "要查找的子网的名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;> </xref>请求的子网。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "在<code> context </code>指定的参数，该站点无法找到有关给定<code> subnetName </code>参数。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "由于以下原因导致发生此异常将:-在目标<code> context </code>参数不是林、 配置集、 域控制器或 AD LDS 服务器。      - <code> subnetName </code>为空字符串。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>subnetName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>对象的<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>对象的<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;> </xref>对象尚未尚未保存在 Active Directory 域服务中存储。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  id: Location
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取或设置的位置说明<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  syntax:
    content: public string Location { get; set; }
    return:
      type: System.String
      description: "位置说明<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取子网名称<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "子网的名称。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  id: Save
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Save()
  nameWithType: ActiveDirectorySubnet.Save()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "写入到的任何更改<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>到 Active Directory 域服务存储的对象。"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "子网对象已存在。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  id: Site
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取或设置的站点<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象是的成员。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySite Site { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;> </xref>站点对象的<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象是的成员。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "仅适用于设置。 指定<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;></xref>对象不存在。 如果它新创建的它必须将其提交到目录存储区之前将其分配给<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet&quot;></xref>对象。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ToString()
  nameWithType: ActiveDirectorySubnet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回子网的名称。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>表示子网的名称。</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet(DirectoryContext,String,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Delete()
  nameWithType: ActiveDirectorySubnet.Delete()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose()
  nameWithType: ActiveDirectorySubnet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySubnet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: FindByName(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Save()
  nameWithType: ActiveDirectorySubnet.Save()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySite
  nameWithType: ActiveDirectorySite
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ToString()
  nameWithType: ActiveDirectorySubnet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Delete
  nameWithType: ActiveDirectorySubnet.Delete
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose
  nameWithType: ActiveDirectorySubnet.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: FindByName
  nameWithType: ActiveDirectorySubnet.FindByName
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Save
  nameWithType: ActiveDirectorySubnet.Save
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ToString
  nameWithType: ActiveDirectorySubnet.ToString
