### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA1
  id: SHA1
  children:
  - System.Security.Cryptography.SHA1.#ctor
  - System.Security.Cryptography.SHA1.Create
  - System.Security.Cryptography.SHA1.Create(System.String)
  langs:
  - csharp
  name: SHA1
  nameWithType: SHA1
  fullName: System.Security.Cryptography.SHA1
  type: Class
  summary: "计算输入数据的 SHA1 哈希。"
  remarks: "哈希用作表示大量的数据的固定大小的唯一值。 如果还将相应的数据匹配，则应与匹配的两个数据集的哈希值。 中的哈希的大型、 不可预测更改的数据结果的小改动。       SHA1 算法的哈希大小为 160 位。"
  example:
  - "The following example computes the SHA1 hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cs[Classic SHA1 Example#1](~/add/codesnippet/csharp/t-system.security.crypto_98_1.cs)]\n [!code-cpp[Classic SHA1 Example#1](~/add/codesnippet/cpp/t-system.security.crypto_98_1.cpp)]\n [!code-vb[Classic SHA1 Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_98_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SHA1 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: SHA1()
  nameWithType: SHA1.SHA1()
  fullName: System.Security.Cryptography.SHA1.SHA1()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>。"
  remarks: "无法创建抽象类的实例。 应用程序代码将创建派生类的新实例。"
  syntax:
    content: protected SHA1 ();
    parameters: []
  overload: System.Security.Cryptography.SHA1.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此对象上的策略不符合符合 FIPS 的算法。"
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.Create
  id: Create
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: Create()
  nameWithType: SHA1.Create()
  fullName: System.Security.Cryptography.SHA1.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建的默认实现的实例<xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>。"
  remarks: "默认实现的<xref:System.Security.Cryptography.SHA1>是<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>.</xref:System.Security.Cryptography.SHA1CryptoServiceProvider> </xref:System.Security.Cryptography.SHA1>"
  syntax:
    content: public static System.Security.Cryptography.SHA1 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.SHA1
      description: "新实例<xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>。"
  overload: System.Security.Cryptography.SHA1.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: Create(String)
  nameWithType: SHA1.Create(String)
  fullName: System.Security.Cryptography.SHA1.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建的指定实现的实例<xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>。"
  syntax:
    content: public static System.Security.Cryptography.SHA1 Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "特定实现的名称<xref href=&quot;System.Security.Cryptography.SHA1&quot;></xref>使用。"
    return:
      type: System.Security.Cryptography.SHA1
      description: "新实例<xref href=&quot;System.Security.Cryptography.SHA1&quot;></xref>使用指定的实现。"
  overload: System.Security.Cryptography.SHA1.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA1.#ctor
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: SHA1()
  nameWithType: SHA1.SHA1()
  fullName: System.Security.Cryptography.SHA1.SHA1()
- uid: System.Security.Cryptography.SHA1.Create
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create()
  nameWithType: SHA1.Create()
  fullName: System.Security.Cryptography.SHA1.Create()
- uid: System.Security.Cryptography.SHA1
  parent: System.Security.Cryptography
  isExternal: false
  name: SHA1
  nameWithType: SHA1
  fullName: System.Security.Cryptography.SHA1
- uid: System.Security.Cryptography.SHA1.Create(System.String)
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create(String)
  nameWithType: SHA1.Create(String)
  fullName: System.Security.Cryptography.SHA1.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SHA1.#ctor*
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: SHA1
  nameWithType: SHA1.SHA1
- uid: System.Security.Cryptography.SHA1.Create*
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create
  nameWithType: SHA1.Create
