### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.AuthorizationContext
  id: AuthorizationContext
  children:
  - System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  - System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  - System.Security.Claims.AuthorizationContext.Action
  - System.Security.Claims.AuthorizationContext.Principal
  - System.Security.Claims.AuthorizationContext.Resource
  langs:
  - csharp
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.Security.Claims.AuthorizationContext
  type: Class
  summary: "提供授权事件的上下文的信息。 这包括表示调用方，正在请求、 资源和正在执行的操作的主体。"
  remarks: "AuthorizationContext 类表示声明授权管理器的实现使用的上下文<xref:System.Security.Claims.ClaimsAuthorizationManager>类中，以确定是否应授权主体 （主题） 以给定资源上执行指定的操作。</xref:System.Security.Claims.ClaimsAuthorizationManager> 声明授权管理器的计算结果中的授权上下文<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>方法并拒绝或基于声明的授予访问权限提供的主体。</xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>       <xref:System.Security.Claims.AuthorizationContext.Principal%2A>属性包含为其正在请求授权、 主体<xref:System.Security.Claims.AuthorizationContext.Resource%2A>属性包含在其主体正在获得授权时，资源和<xref:System.Security.Claims.AuthorizationContext.Action%2A>属性包含主体打算对资源执行的操作。</xref:System.Security.Claims.AuthorizationContext.Action%2A> </xref:System.Security.Claims.AuthorizationContext.Resource%2A> </xref:System.Security.Claims.AuthorizationContext.Principal%2A> 资源和操作都表示为的声明; 的集合但是，在大多数情况下，每个集合包含单个声明。"
  example:
  - "The code example that is used in the AuthorizationContext topic is taken from the `Claims Based Authorization` sample. This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration. This custom manager consists of three basic components: a class derived from <xref:System.Security.Claims.ClaimsAuthorizationManager> that implements the manager, the `ResourceAction` class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file. This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources. Not all elements are shown for the sake of brevity. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code shows the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method for the custom claims authorization manager. A function that evaluates the principal based on the resource and action specified in the AuthorizationContext is invoked. This function returns either `true` or `false`, which either grants or denies access to the principal.  \n  \n [!code-cs[WifClaimsBasedAuthorization#3](~/add/codesnippet/csharp/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  \n[!code-cs[WifClaimsBasedAuthorization#5](~/add/codesnippet/csharp/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  \n  \n The following XML shows an example of the authorization policy that was specified in configuration. In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource. In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource. In all others, the principal is automatically granted access regardless of the claims it possesses.  \n  \n```xml  \n<system.identityModel>  \n  <identityConfiguration>  \n    <claimsAuthorizationManager type=\"ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary\">  \n      <policy resource=\"http://localhost:28491/Developers.aspx\" action=\"GET\">  \n        <or>  \n          <claim claimType=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\" claimValue=\"developer\" />  \n          <claim claimType=\"http://schemas.xmlsoap.org/claims/Group\" claimValue=\"Administrator\" />  \n        </or>  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Administrators.aspx\" action=\"GET\">  \n        <and>  \n          <claim claimType=\"http://schemas.xmlsoap.org/claims/Group\" claimValue=\"Administrator\" />  \n          <claim claimType=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country\" claimValue=\"USA\" />  \n        </and>  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Default.aspx\" action=\"GET\">  \n      </policy>  \n      <policy resource=\"http://localhost:28491/\" action=\"GET\">  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Claims.aspx\" action=\"GET\">  \n      </policy>  \n    </claimsAuthorizationManager>  \n  \n    ...  \n  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: public class AuthorizationContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})'
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "初始化的新实例<xref href=&quot;System.Security.Claims.AuthorizationContext&quot;></xref>使用指定的主体、 资源声明和操作声明的类。"
  syntax:
    content: public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> resource, System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> action);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "为其授权是要检查的主体。"
    - id: resource
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "表示为其主体未获得授权的资源的声明集合。 通常包含单个元素的集合。"
    - id: action
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "表示要在对资源执行的操作的声明集合。 通常包含单个元素的集合。"
  overload: System.Security.Claims.AuthorizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>principal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>resource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)'
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext(ClaimsPrincipal,String,String)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "初始化的新实例<xref href=&quot;System.Security.Claims.AuthorizationContext&quot;></xref>使用指定的主体、 资源名称和操作名称的类。"
  remarks: "<xref:System.Security.Claims.AuthorizationContext.Action%2A>属性初始化为包含的名称声明 (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=fullName>)，其指定的值`action`参数。</xref:System.Security.Claims.ClaimTypes.Name?displayProperty=fullName> </xref:System.Security.Claims.AuthorizationContext.Action%2A> <xref:System.Security.Claims.AuthorizationContext.Resource%2A>属性初始化为包含具有指定的值的名称声明`resource`参数。</xref:System.Security.Claims.AuthorizationContext.Resource%2A>"
  syntax:
    content: public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "为其授权是要检查的主体。"
    - id: resource
      type: System.String
      description: "为其主体未获得授权资源。 作为名称声明的值指定的资源。"
    - id: action
      type: System.String
      description: "要在对资源执行的操作。 作为名称声明的值指定的操作。"
  overload: System.Security.Claims.AuthorizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>principal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>resource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Action
  id: Action
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Action
  nameWithType: AuthorizationContext.Action
  fullName: System.Security.Claims.AuthorizationContext.Action
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "获取为其主体未获得授权的操作。"
  remarks: "通常包含单个元素的集合。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> Action { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "表示与请求相关的操作的声明集合。"
  overload: System.Security.Claims.AuthorizationContext.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Principal
  id: Principal
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Principal
  nameWithType: AuthorizationContext.Principal
  fullName: System.Security.Claims.AuthorizationContext.Principal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "获取正在请求进行授权的主体 （主题）。"
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal Principal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "正在为其请求授权的主体。"
  overload: System.Security.Claims.AuthorizationContext.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Resource
  id: Resource
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Resource
  nameWithType: AuthorizationContext.Resource
  fullName: System.Security.Claims.AuthorizationContext.Resource
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "获取该主体是要为其授权的资源。"
  remarks: "通常包含单个元素的集合。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> Resource { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "表示资源的声明集合。"
  overload: System.Security.Claims.AuthorizationContext.Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Claim>
  nameWithType: Collection<Claim>
  fullName: System.Collections.ObjectModel.Collection<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext(ClaimsPrincipal,String,String)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.AuthorizationContext.Action
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Action
  nameWithType: AuthorizationContext.Action
  fullName: System.Security.Claims.AuthorizationContext.Action
- uid: System.Security.Claims.AuthorizationContext.Principal
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Principal
  nameWithType: AuthorizationContext.Principal
  fullName: System.Security.Claims.AuthorizationContext.Principal
- uid: System.Security.Claims.AuthorizationContext.Resource
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Resource
  nameWithType: AuthorizationContext.Resource
  fullName: System.Security.Claims.AuthorizationContext.Resource
- uid: System.Security.Claims.AuthorizationContext.#ctor*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext.AuthorizationContext
- uid: System.Security.Claims.AuthorizationContext.Action*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Action
  nameWithType: AuthorizationContext.Action
- uid: System.Security.Claims.AuthorizationContext.Principal*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Principal
  nameWithType: AuthorizationContext.Principal
- uid: System.Security.Claims.AuthorizationContext.Resource*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Resource
  nameWithType: AuthorizationContext.Resource
