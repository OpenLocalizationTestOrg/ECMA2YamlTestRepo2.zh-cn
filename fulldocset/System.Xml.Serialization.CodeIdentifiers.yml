### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.CodeIdentifiers
  id: CodeIdentifiers
  children:
  - System.Xml.Serialization.CodeIdentifiers.#ctor
  - System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)
  - System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)
  - System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)
  - System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)
  - System.Xml.Serialization.CodeIdentifiers.Clear
  - System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)
  - System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)
  - System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)
  - System.Xml.Serialization.CodeIdentifiers.Remove(System.String)
  - System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)
  - System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)
  - System.Xml.Serialization.CodeIdentifiers.UseCamelCasing
  langs:
  - csharp
  name: CodeIdentifiers
  nameWithType: CodeIdentifiers
  fullName: System.Xml.Serialization.CodeIdentifiers
  type: Class
  summary: "维护一组相关的代码实体或由.NET Framework 的 XML 序列化基础结构生成的类型映射的名称。"
  remarks: "以下列表标识了工具和使用 CodeIdentifiers 的类:- [Web 服务描述语言工具 (Wsdl.exe)](http://msdn.microsoft.com/en-us/b9210348-8bc2-4367-8c91-d1a04b403e88)，或<xref:System.Web.Services.Description.ServiceDescriptionImporter>类，从 Web 服务描述语言 (WSDL) 文档生成客户端代理类或抽象服务器类时。</xref:System.Web.Services.Description.ServiceDescriptionImporter>      - [XML 架构定义工具 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md)时从 XML 架构定义 (XSD) 文档中生成类的工具。      -<xref:System.Web.Services.Description.ServiceDescriptionReflector>类在创建时<xref:System.Web.Services.Description.ServiceDescription>从作为 Web 服务通过标识的类的对象<xref:System.Web.Services.WebServiceAttribute>属性。</xref:System.Web.Services.WebServiceAttribute> </xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Description.ServiceDescriptionReflector>       而不是直接使用 CodeIdentifiers 类，使用前面提到的工具或类。 如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性。       具体取决于其作用域，可以使用 CodeIdentifiers 实例来维护任何以下列表中的项的名称:-类型、 方法或字段。      的参数和返回值对应于 WSDL 方法的输入和输出消息。      -对象内<xref:System.Web.Services.Description.ServiceDescription>将序列化到 WSDL 文档的实例。</xref:System.Web.Services.Description.ServiceDescription>       通常情况下，类用于避免命名冲突之间在特定范围内，包括包含实体的名称冲突的代码实体。"
  syntax:
    content: public class CodeIdentifiers
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: CodeIdentifiers()
  nameWithType: CodeIdentifiers.CodeIdentifiers()
  fullName: System.Xml.Serialization.CodeIdentifiers.CodeIdentifiers()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>类。"
  syntax:
    content: public CodeIdentifiers ();
    parameters: []
  overload: System.Xml.Serialization.CodeIdentifiers.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: CodeIdentifiers(Boolean)
  nameWithType: CodeIdentifiers.CodeIdentifiers(Boolean)
  fullName: System.Xml.Serialization.CodeIdentifiers.CodeIdentifiers(Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>类和确定代码标识符是否区分大小写。"
  syntax:
    content: public CodeIdentifiers (bool caseSensitive);
    parameters:
    - id: caseSensitive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果标识符区分大小写;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.CodeIdentifiers.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: CodeIdentifiers.Add(String,Object)
  fullName: System.Xml.Serialization.CodeIdentifiers.Add(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指定的代码实体或类型将映射添加到<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  remarks: "与不同<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法，添加方法不会阻止命名冲突。</xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>       如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Add (string identifier, object value);
    parameters:
    - id: identifier
      type: System.String
      description: "使用代码实体进行索引的名称。"
    - id: value
      type: System.Object
      description: "代码实体或类型映射信息。"
  overload: System.Xml.Serialization.CodeIdentifiers.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)
  id: AddReserved(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: AddReserved(String)
  nameWithType: CodeIdentifiers.AddReserved(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.AddReserved(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "阻止指定的名称中使用<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  remarks: "保留的名称可以属于包含的代码实体，如为其也必须生成成员名称的类型。"
  syntax:
    content: public void AddReserved (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "将不能在名称<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  overload: System.Xml.Serialization.CodeIdentifiers.AddReserved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)
  id: AddUnique(System.String,System.Object)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: AddUnique(String,Object)
  nameWithType: CodeIdentifiers.AddUnique(String,Object)
  fullName: System.Xml.Serialization.CodeIdentifiers.AddUnique(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指定的代码实体或类型将映射添加到<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的范围中，确保名称唯一的作用域内。"
  remarks: "如果标识符参数值内不唯一<xref:System.Xml.Serialization.CodeIdentifiers>生成实例的作用域，新的唯一字符串并将其在其位置中使用。</xref:System.Xml.Serialization.CodeIdentifiers> 新字符串生成的将追加到输入的名称。 原始名称不是唯一如果以前曾传递给<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>，AddUnique，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由上一个调用 AddUnique 方法生成。</xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> </xref:System.Xml.Serialization.CodeIdentifiers.Add%2A> 在每种情况下，如果新的标识符不是唯一的它第一次传递到<xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A>方法来创建新的唯一标识符。</xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A>       如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string AddUnique (string identifier, object value);
    parameters:
    - id: identifier
      type: System.String
      description: "使用代码实体进行索引的候选名称。"
    - id: value
      type: System.Object
      description: "代码实体或类型映射信息。"
    return:
      type: System.String
      description: "标识符参数值或已修改的字符串，如果没有名称冲突。"
  overload: System.Xml.Serialization.CodeIdentifiers.AddUnique*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.Clear
  id: Clear
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: Clear()
  nameWithType: CodeIdentifiers.Clear()
  fullName: System.Xml.Serialization.CodeIdentifiers.Clear()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "中删除所有代码实体或类型映射，包括其名称，从<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  remarks: "保留名称，如通过添加<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，不会删除。</xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>       如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xml.Serialization.CodeIdentifiers.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)
  id: IsInUse(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: IsInUse(String)
  nameWithType: CodeIdentifiers.IsInUse(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.IsInUse(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确定是否指定的名称已被使用在<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  remarks: "输入的名称不是唯一如果以前曾传递给<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>， <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由生成<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法。</xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> </xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> </xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> </xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>       如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsInUse (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "要检查中使用的名称<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果名称已在使用;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.CodeIdentifiers.IsInUse*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)
  id: MakeRightCase(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: MakeRightCase(String)
  nameWithType: CodeIdentifiers.MakeRightCase(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.MakeRightCase(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "通过，确保输入正确的大小写的修改的值根据名称<xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing*>属性。</xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing*>"
  remarks: "如果值<xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A>属性是`true`和输入的第一个字符是一个字母，则它由大小写，如有必要。</xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A> 如果值<xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A>是`false`、 Pascal 大小写是否生效，并且第一个字符，如果一个字母，大写，如有必要。</xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A>"
  syntax:
    content: public string MakeRightCase (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "要修改的名称。"
    return:
      type: System.String
      description: "等同于输入标识符或具有第一个字母的大小写的字符串的修改。"
  overload: System.Xml.Serialization.CodeIdentifiers.MakeRightCase*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)
  id: MakeUnique(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: MakeUnique(String)
  nameWithType: CodeIdentifiers.MakeUnique(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.MakeUnique(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确定字符串是否与另一个中输入的名称冲突<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域，并且，如果是这样，都会生成一个修改后的字符串。"
  remarks: "输入的名称不是唯一如果以前曾传递给<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>， <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由生成<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法。</xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> </xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> </xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> </xref:System.Xml.Serialization.CodeIdentifiers.Add%2A> 如果名称不是唯一的则通过将追加到原始字符串生成新的字符串。       如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string MakeUnique (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "要修改如果尚不唯一的名称。"
    return:
      type: System.String
      description: "标识符参数值或已修改的字符串，如果没有名称冲突。"
  overload: System.Xml.Serialization.CodeIdentifiers.MakeUnique*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.Remove(System.String)
  id: Remove(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: Remove(String)
  nameWithType: CodeIdentifiers.Remove(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.Remove(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "移除<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域代码的实体或类型映射，按输入的名称标识。"
  remarks: "如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Remove (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "若要删除的代码实体或类型映射信息的名称。"
  overload: System.Xml.Serialization.CodeIdentifiers.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)
  id: RemoveReserved(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: RemoveReserved(String)
  nameWithType: CodeIdentifiers.RemoveReserved(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.RemoveReserved(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "将删除从的输入的名称<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的保留名称。"
  remarks: "如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers>"
  syntax:
    content: public void RemoveReserved (string identifier);
    parameters:
    - id: identifier
      type: System.String
      description: "会变得可用内的名称<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  overload: System.Xml.Serialization.CodeIdentifiers.RemoveReserved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)
  id: ToArray(System.Type)
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: ToArray(Type)
  nameWithType: CodeIdentifiers.ToArray(Type)
  fullName: System.Xml.Serialization.CodeIdentifiers.ToArray(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回代码实体或中的类型映射的数组<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>实例的作用域。"
  remarks: "如果你想要控制代码实体绑定到 XML 架构或 Web 服务定义的名称，使用关联的属性，而不是无需创建实例的<xref:System.Xml.Serialization.CodeIdentifiers>类。</xref:System.Xml.Serialization.CodeIdentifiers> 完整列表，请参阅[属性，控制 XML 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public object ToArray (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "所有代码实体或实例的类型映射的类型。"
    return:
      type: System.Object
      description: "代码实体或由存储的类型映射的数组<xref href=&quot;System.Xml.Serialization.CodeIdentifiers&quot;></xref>对象。"
  overload: System.Xml.Serialization.CodeIdentifiers.ToArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing
  id: UseCamelCasing
  parent: System.Xml.Serialization.CodeIdentifiers
  langs:
  - csharp
  name: UseCamelCasing
  nameWithType: CodeIdentifiers.UseCamelCasing
  fullName: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置一个值，该值指示实例是否使用 camel 大小写。"
  remarks: "使用 camel 大小写，如果标识符的第一个字符是一个字母，它必须为小写。 使用 Pascal 大小写，如果第一个字符是一个字母，它必须是大写。"
  syntax:
    content: public bool UseCamelCasing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示该实例使用 camel 大小写;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指示该实例使用 Pascal 大小写。"
  overload: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.CodeIdentifiers.#ctor
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: CodeIdentifiers()
  nameWithType: CodeIdentifiers.CodeIdentifiers()
  fullName: System.Xml.Serialization.CodeIdentifiers.CodeIdentifiers()
- uid: System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: CodeIdentifiers(Boolean)
  nameWithType: CodeIdentifiers.CodeIdentifiers(Boolean)
  fullName: System.Xml.Serialization.CodeIdentifiers.CodeIdentifiers(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Add(String,Object)
  nameWithType: CodeIdentifiers.Add(String,Object)
  fullName: System.Xml.Serialization.CodeIdentifiers.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: AddReserved(String)
  nameWithType: CodeIdentifiers.AddReserved(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.AddReserved(String)
- uid: System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: AddUnique(String,Object)
  nameWithType: CodeIdentifiers.AddUnique(String,Object)
  fullName: System.Xml.Serialization.CodeIdentifiers.AddUnique(String,Object)
- uid: System.Xml.Serialization.CodeIdentifiers.Clear
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Clear()
  nameWithType: CodeIdentifiers.Clear()
  fullName: System.Xml.Serialization.CodeIdentifiers.Clear()
- uid: System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: IsInUse(String)
  nameWithType: CodeIdentifiers.IsInUse(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.IsInUse(String)
- uid: System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: MakeRightCase(String)
  nameWithType: CodeIdentifiers.MakeRightCase(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.MakeRightCase(String)
- uid: System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: MakeUnique(String)
  nameWithType: CodeIdentifiers.MakeUnique(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.MakeUnique(String)
- uid: System.Xml.Serialization.CodeIdentifiers.Remove(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Remove(String)
  nameWithType: CodeIdentifiers.Remove(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.Remove(String)
- uid: System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: RemoveReserved(String)
  nameWithType: CodeIdentifiers.RemoveReserved(String)
  fullName: System.Xml.Serialization.CodeIdentifiers.RemoveReserved(String)
- uid: System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: ToArray(Type)
  nameWithType: CodeIdentifiers.ToArray(Type)
  fullName: System.Xml.Serialization.CodeIdentifiers.ToArray(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: UseCamelCasing
  nameWithType: CodeIdentifiers.UseCamelCasing
  fullName: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing
- uid: System.Xml.Serialization.CodeIdentifiers.#ctor*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: CodeIdentifiers
  nameWithType: CodeIdentifiers.CodeIdentifiers
- uid: System.Xml.Serialization.CodeIdentifiers.Add*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Add
  nameWithType: CodeIdentifiers.Add
- uid: System.Xml.Serialization.CodeIdentifiers.AddReserved*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: AddReserved
  nameWithType: CodeIdentifiers.AddReserved
- uid: System.Xml.Serialization.CodeIdentifiers.AddUnique*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: AddUnique
  nameWithType: CodeIdentifiers.AddUnique
- uid: System.Xml.Serialization.CodeIdentifiers.Clear*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Clear
  nameWithType: CodeIdentifiers.Clear
- uid: System.Xml.Serialization.CodeIdentifiers.IsInUse*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: IsInUse
  nameWithType: CodeIdentifiers.IsInUse
- uid: System.Xml.Serialization.CodeIdentifiers.MakeRightCase*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: MakeRightCase
  nameWithType: CodeIdentifiers.MakeRightCase
- uid: System.Xml.Serialization.CodeIdentifiers.MakeUnique*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: MakeUnique
  nameWithType: CodeIdentifiers.MakeUnique
- uid: System.Xml.Serialization.CodeIdentifiers.Remove*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: Remove
  nameWithType: CodeIdentifiers.Remove
- uid: System.Xml.Serialization.CodeIdentifiers.RemoveReserved*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: RemoveReserved
  nameWithType: CodeIdentifiers.RemoveReserved
- uid: System.Xml.Serialization.CodeIdentifiers.ToArray*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: ToArray
  nameWithType: CodeIdentifiers.ToArray
- uid: System.Xml.Serialization.CodeIdentifiers.UseCamelCasing*
  parent: System.Xml.Serialization.CodeIdentifiers
  isExternal: false
  name: UseCamelCasing
  nameWithType: CodeIdentifiers.UseCamelCasing
