### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBinding
  id: MultiBinding
  children:
  - System.Windows.Data.MultiBinding.#ctor
  - System.Windows.Data.MultiBinding.Bindings
  - System.Windows.Data.MultiBinding.Converter
  - System.Windows.Data.MultiBinding.ConverterCulture
  - System.Windows.Data.MultiBinding.ConverterParameter
  - System.Windows.Data.MultiBinding.Mode
  - System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  - System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  - System.Windows.Data.MultiBinding.NotifyOnValidationError
  - System.Windows.Data.MultiBinding.ShouldSerializeBindings
  - System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  - System.Windows.Data.MultiBinding.UpdateSourceTrigger
  - System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  - System.Windows.Data.MultiBinding.ValidatesOnExceptions
  - System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.MultiBinding.ValidationRules
  langs:
  - csharp
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
  type: Class
  summary: "描述的集合， <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>对象附加到单个绑定目标属性。"
  remarks: "你可以在 MultiBinding 对象中指定多个绑定。 如果您 MultiBinding 对象使用的转换器，它会生成这些绑定的值为基础的绑定目标的最终值。 例如，颜色可能从红方、 蓝方和绿色值，它可以是来自相同或不同的绑定源对象的值来计算。 当一个值从目标移动到的源时，目标属性值被转换为一组反馈到绑定的值。       值<xref:System.Windows.Data.MultiBinding.Mode%2A>和<xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>属性确定 MultiBinding 的功能，可用作默认值的集合中的所有绑定除非单个绑定替代这些属性。</xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.MultiBinding.Mode%2A> 例如，如果<xref:System.Windows.Data.MultiBinding.Mode%2A>MultiBinding 对象上的属性设置为<xref:System.Windows.Data.BindingMode>，则集合中的所有绑定都被都视为<xref:System.Windows.Data.BindingMode>除非你设置不同<xref:System.Windows.Data.MultiBinding.Mode%2A>上的绑定之一的值显式。</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding.Mode%2A> 有关详细信息，请参阅<xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>属性。</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>       MultiBinding 当前支持类型<xref:System.Windows.Data.Binding>和不 MultiBinding 或<xref:System.Windows.Data.PriorityBinding>。</xref:System.Windows.Data.PriorityBinding></xref:System.Windows.Data.Binding>的对象"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Bindings")]

      public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新实例<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>类。"
  syntax:
    content: public MultiBinding ();
    parameters: []
  overload: System.Windows.Data.MultiBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Bindings
  id: Bindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的集合<xref href=&quot;System.Windows.Data.Binding&quot;></xref>对象在此<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>实例。"
  remarks: "> [!NOTE]1> 此属性可以在中设置[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]只能通过使用的语法显示，或通过访问的集合对象，并使用它的各种方法，如`Add`。 用于访问的集合对象的属性是只读的而集合本身是可读/写。      <a name=&quot;xamlPropertyElementUsage_Bindings&quot;></a># # XAML 属性元素用法```   <object>     oneOrMoreBindings   </object>      ``` <a name=&quot;xamlValues_Bindings&quot;> </a> # # XAML 值*oneOrMoreBindings*一个或多个<xref:System.Windows.Data.Binding>对象。</xref:System.Windows.Data.Binding>      "
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase> Bindings { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
      description: "集合<xref href=&quot;System.Windows.Data.Binding&quot;></xref>对象。 <xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>当前支持仅类型的对象<xref href=&quot;System.Windows.Data.Binding&quot;></xref>和 not <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>或<xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>。 添加<xref href=&quot;System.Windows.Data.Binding&quot;></xref>子级到<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>对象会隐式添加到子<xref href=&quot;System.Windows.Data.BindingBase&quot;></xref>集合<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>对象。"
  overload: System.Windows.Data.MultiBinding.Bindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Converter
  id: Converter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置要用于将源值转换为或从目标值的转换器。"
  remarks: "集合中的各个绑定可以具有<xref:System.Windows.Data.Binding.Converter%2A>.</xref:System.Windows.Data.Binding.Converter%2A>他们自己的值 有关详细信息，请参阅<xref:System.Windows.Data.IValueConverter>。</xref:System.Windows.Data.IValueConverter>      <a name=&quot;xamlAttributeUsage_Converter&quot;></a># # XAML 属性用法```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> # # XAML 值*myConverter*对实现的类的资源引用<xref:System.Windows.Data.IMultiValueConverter>接口，包括的实现<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>和<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>方法。</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.IMultiValueConverter>       若要引用的值转换器，请使用[标记扩展和 WPF XAML](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Windows.Data.IMultiValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IMultiValueConverter
      description: "类型的值<xref href=&quot;System.Windows.Data.IMultiValueConverter&quot;> </xref> ，该值指示要使用的转换器。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置<xref:System.Globalization.CultureInfo>适用于分配给包装的绑定任何转换器对象<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>或在<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>本身。</xref:System.Globalization.CultureInfo>"
  remarks: "<a name=&quot;xamlAttributeUsage_ConverterCulture&quot;></a># # XAML 属性用法```   <object ConverterCulture=&quot;ietfLanguageTag&quot;/>   ``` <a name=&quot;xamlValues_ConverterCulture&quot;> </a> # # XAML 值*ietfLanguageTag*用于设置<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>的字符串       此字符串用于内部调用。 <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> 字符串格式的详细信息，请参阅<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>。</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>"
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "有效的<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Data.MultiBinding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置要传递给转换器作为其他信息的可选参数。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_ConverterParameter&quot;></a># # XAML 属性元素用法```   <object>     <object.ConverterParameter>       converterParameter     </object.ConverterParameter>   </object>   ``` <a name=&quot;xamlAttributeUsage_ConverterParameter&quot;> </a> # # XAML 属性用法```   <object property=&quot;converterParameter&quot; />   ``` <a name=&quot;xamlValues_ConverterParameter&quot;> </a> # # XAML 值*converterParameter*值转换器，这可能是对象元素或字符串，具体取决于的定义和这两个属性键入正在使用的 XAML 功能所需的类型转换器的实现。             转换器采用该类型通过`parameter`参数由定义其<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>实现。</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "要传递给转换器的参数。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Mode
  id: Mode
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示此绑定的数据流方向。"
  remarks: "模式的值和<xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>属性确定的功能<xref:System.Windows.Data.MultiBinding>，可用作默认值的集合中的所有绑定除非单个绑定替代这些属性。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> 例如，如果模式属性<xref:System.Windows.Data.MultiBinding>对象设置为<xref:System.Windows.Data.BindingMode>，则集合中的所有绑定都被都视为<xref:System.Windows.Data.BindingMode>除非绑定之一上设置不同的模式值显式。</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> 有关详细信息，请参阅<xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>属性。</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "之一<xref href=&quot;System.Windows.Data.BindingMode&quot;></xref>值。 默认值是<xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>，它返回目标依赖属性的默认绑定模式值。 但是，默认值都不同每个依赖属性。 在常规，用户可编辑的控件属性中，如&lt;xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName&gt;，默认为双向绑定，而其他大多数属性默认为单向绑定。       确定依赖属性默认情况下是否绑定单向或双向的编程方法是获取的属性使用的属性元数据<> *1>，然后检查的布尔值<> *1> 属性。"
  overload: System.Windows.Data.MultiBinding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否引发<xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;></xref>当一个值从绑定目标传输到绑定源的事件。"
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;></xref>时绑定源值更新; 否则为将引发事件<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否引发<xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;></xref>当一个值从绑定源传输到绑定目标的事件。"
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;></xref>时绑定目标值更新; 否则为将引发事件<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否引发<xref:System.Windows.Controls.Validation.Error>附加绑定元素上的事件。</xref:System.Windows.Controls.Validation.Error>"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Windows.Controls.Validation.Error>附加的事件将绑定元素在源更新过程中存在验证错误时引发; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Controls.Validation.Error> 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  id: ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.MultiBinding.Bindings*>属性应对其进行持久化。</xref:System.Windows.Data.MultiBinding.Bindings*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.MultiBinding.Bindings%2A>属性不具有简单的默认值。</xref:System.Windows.Data.MultiBinding.Bindings%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.MultiBinding>或开发你自己控制合并<xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding></xref:System.Windows.Data.MultiBinding>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指示是否<xref:System.Windows.Data.MultiBinding.ValidationRules*>属性应对其进行持久化。</xref:System.Windows.Data.MultiBinding.ValidationRules*>"
  remarks: "这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>属性不具有简单的默认值。</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器<xref:System.Windows.Data.MultiBinding>或开发你自己控制合并<xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding></xref:System.Windows.Data.MultiBinding>通常调用此方法"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性值已更改其默认设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "添加子对象。"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加的子对象。"
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将节点的文本内容添加到对象。"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要添加到对象的文本。"
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个处理程序可以使用提供的自定义逻辑处理绑定引擎遇到的绑定源值更新过程中的异常。 此特性仅适用如果关联<xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;></xref>与你<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>对象。"
  remarks: "<xref:System.Windows.Controls.ExceptionValidationRule>类表示用于检查绑定源属性更新过程中引发的异常的内置的验证规则。</xref:System.Windows.Controls.ExceptionValidationRule> 如果关联<xref:System.Windows.Controls.ExceptionValidationRule>对象你<xref:System.Windows.Data.MultiBinding>对象，你可以使用此属性设置要用于处理这些异常中提供自定义逻辑的处理程序。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Controls.ExceptionValidationRule>       有关示例，请参阅<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>。</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>       有关详细信息有关的验证过程<xref:System.Windows.Data.MultiBinding>对象，请参阅<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>属性。</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "提供自定义逻辑以处理绑定引擎遇到的绑定源值更新过程中的异常的方法。"
  overload: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，确定绑定源更新的计时。"
  remarks: "值<xref:System.Windows.Data.MultiBinding.Mode%2A>UpdateSourceTrigger 属性确定的功能和<xref:System.Windows.Data.MultiBinding>，可用作默认值的集合中的所有绑定除非单个绑定替代这些属性。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> 例如，如果<xref:System.Windows.Data.MultiBinding.Mode%2A>属性<xref:System.Windows.Data.MultiBinding>对象设置为<xref:System.Windows.Data.BindingMode>，则集合中的所有绑定都被都视为<xref:System.Windows.Data.BindingMode>除非你设置不同<xref:System.Windows.Data.MultiBinding.Mode%2A>上的绑定之一的值显式。</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> 有关详细信息，请参阅<xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>属性。</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "之一<xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;></xref>值。 默认值是<xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>，这将返回默认值<xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;></xref>目标依赖项属性的值。 但是，大多数依赖项属性的默认值是<xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>，虽然<> *1> 属性具有默认值为<xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>。     以编程方式确定默认值<> *1> 的依赖项属性的值是获取的属性使用的属性元数据<> *1>，然后检查的值<> *1> 属性。"
  overload: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否包含<xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>。"
  remarks: "设置此属性，可以使用的替代方法<xref:System.Windows.Controls.DataErrorValidationRule>元素显式。</xref:System.Windows.Controls.DataErrorValidationRule> <xref:System.Windows.Controls.DataErrorValidationRule>是内置的验证规则，可通过引发的错误检查<xref:System.ComponentModel.IDataErrorInfo>源对象的实现。</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> 如果引发错误，则绑定引擎创建<xref:System.Windows.Controls.ValidationError>出现错误并将其添加到<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>绑定元素的集合。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> 错误缺乏清除此验证反馈，除非另一个规则会生成验证问题。       有关详细信息有关的验证过程<xref:System.Windows.Data.MultiBinding>对象，请参阅<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>属性。</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnDataErrors 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括<xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否包含<xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>。"
  remarks: "设置此属性，可以使用的替代方法<xref:System.Windows.Controls.ExceptionValidationRule>元素显式。</xref:System.Windows.Controls.ExceptionValidationRule> <xref:System.Windows.Controls.ExceptionValidationRule>是内置的验证规则，用于检查的源属性更新过程中引发的异常。</xref:System.Windows.Controls.ExceptionValidationRule> 如果引发异常，则绑定引擎创建<xref:System.Windows.Controls.ValidationError>出现异常并将其添加到<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>绑定元素的集合。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> 错误缺乏清除此验证反馈，除非另一个规则会生成验证问题。       有关详细信息有关的验证过程<xref:System.Windows.Data.MultiBinding>对象，请参阅<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>属性。</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnExceptions 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括<xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置一个值，该值指示是否包含<xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>。"
  remarks: "ValidatesOnNotifyDataErrors 时`true`的绑定来查看和报告由实现<xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>的数据源引发的错误"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括<xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的集合<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>的此实例的对象<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>。"
  remarks: "你可以上都设置验证规则<xref:System.Windows.Data.MultiBinding>对象和个人<xref:System.Windows.Data.Binding>中的对象<xref:System.Windows.Data.MultiBinding>对象。</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.MultiBinding> 绑定引擎在计算 Validationrule<xref:System.Windows.Data.MultiBinding>对象时的值移到的绑定目标属性从<xref:System.Windows.Data.IMultiValueConverter>对象。</xref:System.Windows.Data.IMultiValueConverter> </xref:System.Windows.Data.MultiBinding> 之后，当从转换器移到单个绑定的绑定源属性的值绑定引擎将计算<xref:System.Windows.Data.Binding.ValidationRules%2A>上<xref:System.Windows.Data.Binding>对象。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A>       有关验证过程以及如何提供后失效的可视反馈的详细信息，请参阅&quot;数据验证&quot;中[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 可以设置此属性[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]只能通过使用语法所示，或者通过访问的集合对象，并使用它的各种方法，如`Add`。 用于访问的集合对象的属性是只读的而集合本身是可读写。      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a># # XAML 属性元素用法```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>   ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> # # XAML 值*oneOrMoreValidationRules*一个或多个<xref:System.Windows.Controls.ValidationRule>对象。</xref:System.Windows.Controls.ValidationRule>       你可以使用<xref:System.Windows.Controls.ExceptionValidationRule>类或创建你的自定义规则通过子类化<xref:System.Windows.Controls.ValidationRule>类。</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "集合<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>的此实例的对象<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>。"
  overload: System.Windows.Data.MultiBinding.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.Windows.Data.MultiBinding.#ctor
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
- uid: System.Windows.Data.MultiBinding.Bindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingBase>
  nameWithType: Collection<BindingBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingBase
    name: BindingBase
    nameWithType: BindingBase
    fullName: BindingBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.Converter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
- uid: System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.MultiBinding.Mode
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.#ctor*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding
  nameWithType: MultiBinding.MultiBinding
- uid: System.Windows.Data.MultiBinding.Bindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
- uid: System.Windows.Data.MultiBinding.Converter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
- uid: System.Windows.Data.MultiBinding.ConverterCulture*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
- uid: System.Windows.Data.MultiBinding.ConverterParameter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
- uid: System.Windows.Data.MultiBinding.Mode*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings
  nameWithType: MultiBinding.ShouldSerializeBindings
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: MultiBinding.ShouldSerializeValidationRules
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
