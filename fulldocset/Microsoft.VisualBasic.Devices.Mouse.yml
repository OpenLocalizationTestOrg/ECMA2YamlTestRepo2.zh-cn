### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "提供用于获取有关格式和本地计算机上安装的鼠标的配置信息的属性。"
  remarks: "`My.Computer.Mouse`对象提供一种方法来查找有关计算机的鼠标信息︰ 是否交换了鼠标按钮，和有关鼠标滚轮的详细信息。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;></xref>类。"
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "获取<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ，该值指示是否已交换了鼠标左右按钮的功能。"
  remarks: "`My.Computer.Mouse.ButtonsSwapped`属性:-提供功能类似于<xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>属性。</xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>      -提供有关计算机运行的代码的信息。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>值<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果鼠标左右按钮的功能已交换; 否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "计算机具有未安装鼠标。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "获取<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ，该值指示鼠标是否有滚轮。"
  remarks: "`My.Computer.Mouse.WheelExists`属性提供的功能类似于<xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>属性。</xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>       你应检查的值`My.Computer.Mouse.WheelExists`然后再尝试访问的属性<xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>属性，将引发异常，如果鼠标没有滚轮。</xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>       `My.Computer.Mouse.WheelExists`属性提供有关计算机运行的代码的信息。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "一个布尔值具有值<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>鼠标是否有滚轮; 否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "计算机具有未安装鼠标。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "获取一个数字，指示滚动鼠标滚轮时量旋转一个单位。"
  remarks: "此属性可用于确定向上或向下滚动具有滚动条的多行控件中的行数。       `My.Computer.Mouse.WheelScrollLines`属性提供的功能类似于<xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>属性。</xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>       由于鼠标没有滚轮时，此属性将引发异常，应确保鼠标通过检查具有滚轮`My.Computer.Mouse.WheelExists`属性。       此属性提供有关计算机运行的代码的信息。      ## 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 应用程序 |**Yes**|  |类库 |**Yes**|  |控制台应用程序 |**Yes**|  |Windows 控件库 |**Yes**|  |Web 控件库 |否 |  |Windows 服务 |**Yes**|  |网站 |否 |"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> ，该值指示滚动鼠标滚轮时量旋转一个单位。 正值指示按该数量的行，滚动而负值指示一次滚动一个屏幕。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "鼠标具有没有滚轮。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
