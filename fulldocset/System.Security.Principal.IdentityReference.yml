### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.IdentityReference
  id: IdentityReference
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  summary: "表示一个标识，是为基类<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>和<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>类。 此类不提供公共构造函数，并因此不能被继承。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class IdentityReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "返回一个值，该值指示指定的对象是否等于此实例的<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>类。"
  syntax:
    content: public abstract bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要与此比较的对象<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>实例，则为空引用。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>具有相同的对象基础类型和值与此<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Principal.IdentityReference.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "用作哈希函数<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。 GetHashCode 是适合在哈希算法和数据结构，如哈希表中使用。"
  syntax:
    content: public abstract int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "此哈希代码<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  overload: System.Security.Principal.IdentityReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "返回一个值，该值指示指定的类型是否是有效的转换类型<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>类。"
  syntax:
    content: public abstract bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "要用作从转换的类型所查询的有效性<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。 以下目标类型是有效的︰<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref><xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> targetType </code>是的有效转换类型<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>类; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Principal.IdentityReference.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比较两个<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象以确定它们是否相等。 如果它们具有与返回相同的规范名称表示它们被视为相等<xref:System.Security.Principal.IdentityReference.Value*>属性或如果它们都<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "左侧<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>要使用的相等比较的操作数。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "右侧<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>要使用的相等比较的操作数。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比较两个<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象以确定它们是否不相等。 它们将被视为不相等如果它们具有不同的规范名称表示形式返回比<xref:System.Security.Principal.IdentityReference.Value*>属性或如果其中一个对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，另一个不是。</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "左侧<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>要使用的不相等比较的操作数。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "右侧<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>要使用的不相等比较的操作数。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "返回的字符串表示形式表示的标识<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  syntax:
    content: public abstract string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串格式中的标识。"
  overload: System.Security.Principal.IdentityReference.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "将转换所表示的帐户名称<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>到另一个对象<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-派生类型。"
  syntax:
    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "从转换的目标类型<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。"
    return:
      type: System.Security.Principal.IdentityReference
      description: "转换后的标识。"
  overload: System.Security.Principal.IdentityReference.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "获取表示的标识的字符串值<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "表示的标识的字符串值<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>对象。"
  overload: System.Security.Principal.IdentityReference.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals
  nameWithType: IdentityReference.Equals
- uid: System.Security.Principal.IdentityReference.GetHashCode*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode
  nameWithType: IdentityReference.GetHashCode
- uid: System.Security.Principal.IdentityReference.IsValidTargetType*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType
  nameWithType: IdentityReference.IsValidTargetType
- uid: System.Security.Principal.IdentityReference.op_Equality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality
  nameWithType: IdentityReference.op_Equality
- uid: System.Security.Principal.IdentityReference.op_Inequality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality
  nameWithType: IdentityReference.op_Inequality
- uid: System.Security.Principal.IdentityReference.ToString*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString
  nameWithType: IdentityReference.ToString
- uid: System.Security.Principal.IdentityReference.Translate*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate
  nameWithType: IdentityReference.Translate
- uid: System.Security.Principal.IdentityReference.Value*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
