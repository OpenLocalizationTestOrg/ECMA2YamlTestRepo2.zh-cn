### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManager
  id: ClientBuildManager
  children:
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  - System.Web.Compilation.ClientBuildManager.AppDomainStarted
  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  - System.Web.Compilation.ClientBuildManager.CodeGenDir
  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  - System.Web.Compilation.ClientBuildManager.IsHostCreated
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  - System.Web.Compilation.ClientBuildManager.Unload
  langs:
  - csharp
  name: ClientBuildManager
  nameWithType: ClientBuildManager
  fullName: System.Web.Compilation.ClientBuildManager
  type: Class
  summary: "提供 ASP.NET 应用程序的编译服务。"
  remarks: "ClientBuildManager 类提供方法和属性用于编译 ASP.NET Web 应用程序和检索生成的程序集，或生成源代码。 类的实例在客户端的应用程序域中建立并提供对 ASP.NET 生成系统 Microsoft Internet 信息服务 (IIS) 外部访问。 类可以用于开发编译 Web 应用程序的自定义的工具。       命令行工具`aspnet_compiler`使用 ClientBuildManager 类。"
  syntax:
    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>而无需指定的目标目录或预编译的标志的类。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "应用程序根目录的虚拟路径。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "应用程序根目录的物理路径。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>与指定的目标目录的类。"
  remarks: "这种形式的构造函数通常用于预编译，因为它指定预编译目标目录。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "应用程序根目录的虚拟路径。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "应用程序根目录的物理路径。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "预编译目标目录。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>与指定的目标目录和编译参数的类。"
  remarks: "这种形式的构造函数通常用于预编译，因为它指定了预编译目标目录和预编译的标志。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "应用程序根目录的虚拟路径。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "应用程序根目录的物理路径。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "预编译目标目录。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "确定预编译的行为的值。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>通过使用指定的虚拟目录、 源目录、 目标目录、 编译参数和类型说明提供程序的类。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "应用程序根目录的虚拟路径。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "应用程序根目录的物理路径。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "预编译目标目录。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "确定预编译的行为的值。"
    - id: typeDescriptionProvider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "要使用的类型说明提供程序。 此参数主要用于 Visual Studio 中支持的多目标的基础结构。 它用于检索特定版本的.NET Framework 的筛选有关类型的元数据。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  id: AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "当应用程序域关闭时发生。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  id: AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "当启动应用程序域时发生。"
  syntax:
    content: public event EventHandler AppDomainStarted;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  id: AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "卸载应用程序域时将发生。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  id: CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取用于代码生成的目录的物理路径。"
  remarks: "代码生成的目录通常是临时 ASP.NET 文件目录。"
  syntax:
    content: public string CodeGenDir { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含用于代码生成的目录路径。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  id: CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "编译依赖于应用程序的文件，如 App_Code 目录中的文件、 Global.asax 文件、 资源文件和 Web 引用。"
  remarks: "CompileApplicationDependencies 方法可以确保编译的资源、 Web 引用、 App_Code 目录中的文件、.browser App_Browsers 目录中的文件和 Global.asax 文件。"
  syntax:
    content: public void CompileApplicationDependencies ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  id: CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "编译表示的虚拟路径的文件。"
  syntax:
    content: public void CompileFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要编译的文件路径。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "编译表示的虚拟路径的文件，并提供一个回调类，以接收有关生成的状态信息。"
  syntax:
    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要编译的文件路径。"
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "要接收来自编译状态信息的对象。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  id: CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "在 ASP.NET 运行时的应用程序域中创建的对象。"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);
    parameters:
    - id: type
      type: System.Type
      description: "要创建的对象类型。"
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已在 ASP.NET 运行时; 的应用程序域中创建对象，则引发异常否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "ASP.NET 运行时的应用程序域中的对象。"
  overload: System.Web.Compilation.ClientBuildManager.CreateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该对象已存在应用程序域中和<code> failIfExists </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "从文件的内容生成代码。"
  syntax:
    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: virtualFileString
      type: System.String
      description: "文件的内容。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法返回时，包含行杂注的字典。"
    return:
      type: System.String
      description: "A<xref:System.String>包含生成的代码。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回 codeDOM 树、 编译器类型和虚拟路径所表示的文件的编译器参数。"
  remarks: "GenerateCodeCompileUnit 方法检索编译文件所需的信息。 除了<xref:System.CodeDom.CodeCompileUnit>对象作为返回值，它返回三个`out`参数。</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType`参数返回用于生成和编译该文件提供程序类型。 `compilerParameters`参数包含确定编译行为的属性。 `linePragmasTable`参数包含行杂注的字典。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: codeDomProviderType
      type: System.Type
      description: "此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法返回时，包含定义如何将编译该文件的属性。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法返回时，包含行杂注的字典。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>对于给定的文件。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回的内容、 codeDOM 树、 编译器类型和虚拟路径所表示的文件的编译器参数。"
  remarks: "GenerateCodeCompileUnit 方法检索编译文件所需的信息。 除了<xref:System.CodeDom.CodeCompileUnit>对象作为返回值，它返回三个`out`参数。</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType`参数返回用于生成和编译该文件提供程序类型。 `compilerParameters`参数包含确定编译行为的属性。 `linePragmasTable`参数包含行杂注的字典。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: virtualFileString
      type: System.String
      description: "表示的文件的内容`virtualPath`参数。"
    - id: codeDomProviderType
      type: System.Type
      description: "此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法返回时，包含定义如何表示的文件的属性`virtualPath`将编译参数。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法返回时，包含行杂注的字典。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>对于给定的文件。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  id: GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取目录的文件，更改时，会导致应用程序域关闭。"
  remarks: "对特定的顶级目录中的文件的更改会导致应用程序域关闭。 Bin、 App_Code、 Global_Resources、 Web 引用和 App_Browsers 目录中的文件监视以检测任何更改。 检测到更改后，应用程序域关闭的情况下。"
  syntax:
    content: public string[] GetAppDomainShutdownDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>数组，其中包含顶级目录名称。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  id: GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取浏览器元素的集合。"
  remarks: "<xref:System.Collections.IDictionary>对象包含的键的浏览器名称和<xref:System.Web.UI.Triplet>对象的值。</xref:System.Web.UI.Triplet> </xref:System.Collections.IDictionary> <xref:System.Web.UI.Triplet>对象每个包含父浏览器元素、 说明和在树中的浏览器元素深度的名称。</xref:System.Web.UI.Triplet>"
  syntax:
    content: public System.Collections.IDictionary GetBrowserDefinitions ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>包含浏览器的元素。</xref:System.Collections.IDictionary>"
  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取有关的编译器类型、 编译器参数以及要在其中存储从非代码文件，如.wsdl 文件生成代码文件的目录信息。"
  remarks: "GetCodeDirectoryInformation 方法检索生成的代码目录所需的信息。 它将返回此信息通过三个`out`参数。 `codeDomProviderType`参数返回用于生成和编译代码目录中的文件提供程序类型。 `compilerParameters`参数包含确定编译行为的属性。 `generatedFilesDir`参数将存储包含从在代码目录中，如.wsdl 文件的非代码文件生成的所有代码文件的目录路径。"
  syntax:
    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);
    parameters:
    - id: virtualCodeDir
      type: System.String
      description: "有关要检索其信息目录。"
    - id: codeDomProviderType
      type: System.Type
      description: "此方法返回时，包含用于代码生成和编译的提供程序类型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法返回时，包含定义如何将编译该文件的属性。"
    - id: generatedFilesDir
      type: System.String
      description: "此方法返回时，包含从非代码文件生成的文件的目录。"
  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualCodeDir</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "编译表示的虚拟路径的文件，并返回其已编译的类型。"
  syntax:
    content: public Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要编译的文件的虚拟路径。"
    return:
      type: System.Type
      description: "<xref:System.Type>的已编译的文件。</xref:System.Type>"
  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回的编译器类型和用于生成虚拟路径所表示的文件的参数。"
  syntax:
    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: codeDomProviderType
      type: System.Type
      description: "此方法返回时，包含用于代码生成和编译的提供程序类型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法返回时，包含定义如何将编译该文件的属性。"
  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  id: GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回生成的文件的虚拟路径。"
  syntax:
    content: public string GetGeneratedFileVirtualPath (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "生成文件的完整物理路径。"
    return:
      type: System.String
      description: "A<xref:System.String>包含的虚拟路径<code> filePath </code>。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  id: GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取为虚拟路径生成的文件的物理路径。"
  syntax:
    content: public string GetGeneratedSourceFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要检索的文件的虚拟路径。"
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含生成的文件的物理路径。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  id: GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回数组的 Bin 目录中定义的程序集和<xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 配置文件节。"
  syntax:
    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "配置名称和路径。"
    return:
      type: System.String[]
      description: "A<xref:System.String>包含代码路径的数组中的 Bin 目录的基本和<xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 配置文件节。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  id: GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回到 App_Code 目录及其子目录 ASP.NET 应用程序中的虚拟路径。"
  syntax:
    content: public string[] GetVirtualCodeDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>包含所有应用程序中的代码目录的虚拟路径的数组。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "为应用程序域提供无限生存期通过防止创建租约。"
  remarks: "此方法重写<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>方法在其基本类。</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 它始终返回`null`，从而防止创建租约，会限制应用程序域的生存期。"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  id: IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指示程序集是否是代码的程序集。"
  syntax:
    content: public bool IsCodeAssembly (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "程序集被标识为一个代码程序集的名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> assemblyName </code>参数与匹配某个生成的代码的程序集; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>为 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  id: IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "获取一个值，该值指示是否已创建编译 ASP.NET Web 应用程序的应用程序域。"
  syntax:
    content: public bool IsHostCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果创建了编译 ASP.NET Web 应用程序的应用程序域;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  id: PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "预编译的 ASP.NET 应用程序。"
  remarks: "ASP.NET 支持三种形式的预编译。 一种形式允许 ASP.NET 应用程序就地预编译。 在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。 站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。       部署使用两个其他形式的预编译。 在其中任一种形式的布局的站点生成可以部署到生产计算机。 其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。 其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。 没有源代码部署到目标环境中的这些形式的预编译。       要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用 PrecompileApplication 方法。"
  syntax:
    content: public void PrecompileApplication ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "预编译的 ASP.NET 应用程序，并提供一个回调方法来接收有关生成的状态信息。"
  remarks: "ASP.NET 支持三种形式的预编译。 一种形式允许 ASP.NET 应用程序就地预编译。 在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。 站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。 `callback`参数包含报告的编译结果时要调用的方法。       部署使用两个其他形式的预编译。 在其中任一种形式的布局的站点生成可以部署到生产计算机。 其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。 其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。 没有源代码部署到目标环境中的这些形式的预编译。       要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用 PrecompileApplication 方法。"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>包含报告的编译结果时要调用的方法。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "预编译的 ASP.NET 应用程序，提供一个回调方法来接收状态关于版本的信息，并指示是否要创建一个干净的生成。"
  remarks: "ASP.NET 支持三种形式的预编译。 一种形式允许 ASP.NET 应用程序就地预编译。 在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。 站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。 `callback`参数包含报告的编译结果时要调用的方法。       部署使用两个其他形式的预编译。 在其中任一种形式的布局的站点生成可以部署到生产计算机。 其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。 其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。 没有源代码部署到目标环境中的这些形式的预编译。       要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>包含报告的编译结果时要调用的方法。"
    - id: forceCleanBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要执行干净的生成，将首先删除所有对象和中间文件;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>重新生成已更改的那些文件。 设置为 true，如果没有依赖关系可能不会选取生成环境的机会。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "终止当前的 ASP.NET 应用程序。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.Unload
  id: Unload
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "卸载编译 ASP.NET Web 应用程序的应用程序域。"
  syntax:
    content: public bool Unload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用程序域卸载;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
- uid: System.Web.Compilation.ClientBuildManagerParameter
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler
  parent: System.Web.Compilation
  isExternal: false
  name: BuildManagerHostUnloadEventHandler
  nameWithType: BuildManagerHostUnloadEventHandler
  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManagerCallback
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerCallback
  nameWithType: ClientBuildManagerCallback
  fullName: System.Web.Compilation.ClientBuildManagerCallback
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
- uid: System.Web.Compilation.ClientBuildManager.Unload
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
- uid: System.Web.Compilation.ClientBuildManager.#ctor*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager
  nameWithType: ClientBuildManager.ClientBuildManager
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies
  nameWithType: ClientBuildManager.CompileApplicationDependencies
- uid: System.Web.Compilation.ClientBuildManager.CompileFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile
  nameWithType: ClientBuildManager.CompileFile
- uid: System.Web.Compilation.ClientBuildManager.CreateObject*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject
  nameWithType: ClientBuildManager.CreateObject
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode
  nameWithType: ClientBuildManager.GenerateCode
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions
  nameWithType: ClientBuildManager.GetBrowserDefinitions
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: ClientBuildManager.GetCompiledType
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters
  nameWithType: ClientBuildManager.GetCompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile
  nameWithType: ClientBuildManager.GetGeneratedSourceFile
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ClientBuildManager.InitializeLifetimeService
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly
  nameWithType: ClientBuildManager.IsCodeAssembly
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication
  nameWithType: ClientBuildManager.PrecompileApplication
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBuildManager.System.IDisposable.Dispose
- uid: System.Web.Compilation.ClientBuildManager.Unload*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload
  nameWithType: ClientBuildManager.Unload
